OBJECT Page 5510 Production Journal
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Production Journal;
    InsertAllowed=false;
    SourceTable="Item Journal Line";
    DataCaptionExpr=GetCaption;
    PageType=Worksheet;
    OnInit=BEGIN
             AppliesFromEntryEditable := true;
             QuantityEditable := true;
             OutputQuantityEditable := true;
             ScrapQuantityEditable := true;
             ScrapCodeEditable := true;
             FinishedEditable := true;
             WorkShiftCodeEditable := true;
             RunTimeEditable := true;
             SetupTimeEditable := true;
             CapUnitofMeasureCodeEditable := true;
             ConcurrentCapacityEditable := true;
             EndingTimeEditable := true;
             StartingTimeEditable := true;
           END;

    OnOpenPage=BEGIN
                 SetFilterGroup;

                 if ProdOrderLineNo <> 0 then
                   ProdOrderLine.GET(ProdOrder.Status,ProdOrder."No.",ProdOrderLineNo);
               END;

    OnAfterGetRecord=BEGIN
                       ActualScrapQtyHideValue := false;
                       ActualOutputQtyHideValue := false;
                       ActualRunTimeHideValue := false;
                       ActualSetupTimeHideValue := false;
                       ActualConsumpQtyHideValue := false;
                       ScrapQuantityHideValue := false;
                       OutputQuantityHideValue := false;
                       RunTimeHideValue := false;
                       SetupTimeHideValue := false;
                       QuantityHideValue := false;
                       DescriptionIndent := 0;
                       ShowShortcutDimCode(ShortcutDimCode);
                       DescriptionOnFormat;
                       QuantityOnFormat;
                       SetupTimeOnFormat;
                       RunTimeOnFormat;
                       OutputQuantityOnFormat;
                       ScrapQuantityOnFormat;
                       ActualConsumpQtyOnFormat;
                       ActualSetupTimeOnFormat;
                       ActualRunTimeOnFormat;
                       ActualOutputQtyOnFormat;
                       ActualScrapQtyOnFormat;
                     END;

    OnModifyRecord=BEGIN
                     "Changed by User" := true;
                   END;

    OnDeleteRecord=VAR
                     ReserveItemJnlLine@1000 : Codeunit "Item Jnl. Line-Reserve";
                   BEGIN
                     COMMIT;
                     if not ReserveItemJnlLine.DeleteLineConfirm(Rec) then
                       exit(false);
                     ReserveItemJnlLine.DeleteLine(Rec);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           GetActTimeAndQtyBase;

                           ControlsMngt;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 35      ;1   ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 44      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 45      ;2   ;Action    ;
                      Name=ItemTrackingLines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      ToolTipML=ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines(false);
                               END;
                                }
      { 46      ;2   ;Action    ;
                      Name=Bin Contents;
                      CaptionML=ENU=Bin Contents;
                      ToolTipML=ENU=View items in the bin if the selected line contains a bin code.;
                      ApplicationArea=#Warehouse;
                      RunObject=Page "Bin Contents List";
                      RunPageView=SORTING("Location Code","Bin Code","Item No.","Variant Code");
                      RunPageLink="Location Code"=FIELD("Location Code"),
                                  "Item No."=FIELD("Item No."),
                                  "Variant Code"=FIELD("Variant Code");
                      Image=BinContent }
      { 18      ;1   ;ActionGroup;
                      Name=Pro&d. Order;
                      CaptionML=ENU=Pro&d. Order;
                      Image=Order }
      { 19      ;2   ;Action    ;
                      Name=Card;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Card;
                      ToolTipML=ENU=View or change detailed information about the record on the document or journal line.;
                      ApplicationArea=#Manufacturing;
                      RunObject=Page "Released Production Order";
                      RunPageLink="No."=FIELD("Order No.");
                      Image=EditLines }
      { 20      ;2   ;ActionGroup;
                      Name=Ledger E&ntries;
                      CaptionML=ENU=Ledger E&ntries;
                      Image=Entries }
      { 21      ;3   ;Action    ;
                      Name=Item Ledger E&ntries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Item Ledger E&ntries;
                      ToolTipML=ENU=View the item ledger entries of the item on the document or journal line.;
                      ApplicationArea=#Manufacturing;
                      RunObject=Page "Item Ledger Entries";
                      RunPageView=SORTING("Order Type","Order No.");
                      RunPageLink="Order Type"=CONST(Production),
                                  "Order No."=FIELD("Order No.");
                      Image=ItemLedger }
      { 22      ;3   ;Action    ;
                      Name=Capacity Ledger Entries;
                      CaptionML=ENU=Capacity Ledger Entries;
                      ToolTipML=ENU=View the capacity ledger entries of the involved production order. Capacity is recorded either as time (run time, stop time, or setup time) or as quantity (scrap quantity or output quantity).;
                      ApplicationArea=#Manufacturing;
                      RunObject=Page "Capacity Ledger Entries";
                      RunPageView=SORTING("Order Type","Order No.");
                      RunPageLink="Order Type"=CONST(Production),
                                  "Order No."=FIELD("Order No.");
                      Image=CapacityLedger }
      { 25      ;3   ;Action    ;
                      Name=Value Entries;
                      CaptionML=ENU=Value Entries;
                      ToolTipML=ENU=View the value entries of the item on the document or journal line.;
                      ApplicationArea=#Manufacturing;
                      RunObject=Page "Value Entries";
                      RunPageView=SORTING("Order Type","Order No.");
                      RunPageLink="Order Type"=CONST(Production),
                                  "Order No."=FIELD("Order No.");
                      Image=ValueLedger }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 29      ;1   ;ActionGroup;
                      Name=P&osting;
                      CaptionML=ENU=P&osting;
                      Image=Post }
      { 41      ;2   ;Action    ;
                      Name=Test Report;
                      Ellipsis=true;
                      CaptionML=ENU=Test Report;
                      ToolTipML=ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                      ApplicationArea=#Manufacturing;
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintItemJnlLine(Rec);
                               END;
                                }
      { 56      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=ENU=P&ost;
                      ToolTipML=ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                      ApplicationArea=#Manufacturing;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 DeleteRecTemp;

                                 PostingItemJnlFromProduction(false);

                                 InsertTempRec;

                                 SetFilterGroup;
                                 CurrPage.UPDATE(false);
                               END;
                                }
      { 57      ;2   ;Action    ;
                      Name=Post and &Print;
                      ShortCutKey=Shift+F9;
                      CaptionML=ENU=Post and &Print;
                      ToolTipML=ENU=Finalize and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.;
                      ApplicationArea=#Manufacturing;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 DeleteRecTemp;

                                 PostingItemJnlFromProduction(true);

                                 InsertTempRec;

                                 SetFilterGroup;
                                 CurrPage.UPDATE(false);
                               END;
                                }
      { 31      ;1   ;Action    ;
                      Name=&Print;
                      Ellipsis=true;
                      CaptionML=ENU=&Print;
                      ToolTipML=ENU=Prepare to print the document. A report request window for the document opens where you can specify what to include on the print-out.;
                      ApplicationArea=#Manufacturing;
                      Promoted=true;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ItemJnlLine@1001 : Record "Item Journal Line";
                               BEGIN
                                 ItemJnlLine.COPY(Rec);
                                 ItemJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
                                 ItemJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
                                 REPORT.RUNMODAL(REPORT::"Inventory Movement",true,true,ItemJnlLine);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 61  ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 48  ;2   ;Field     ;
                Name=PostingDate;
                CaptionML=ENU=Posting Date;
                ToolTipML=ENU=Specifies a posting date that will apply to all the lines in the production journal.;
                ApplicationArea=#Manufacturing;
                SourceExpr=PostingDate;
                OnValidate=BEGIN
                             PostingDateOnAfterValidate;
                           END;

                ImplicitType=Date }

    { 60  ;2   ;Field     ;
                Name=FlushingFilter;
                CaptionML=ENU=Flushing Method Filter;
                ToolTipML=ENU=Specifies which components to view and handle in the journal, according to their flushing method.;
                OptionCaptionML=ENU=Manual,Forward,Backward,Pick + Forward,Pick + Backward,All Methods;
                ApplicationArea=#Manufacturing;
                SourceExpr=FlushingFilter;
                OnValidate=BEGIN
                             FlushingFilterOnAfterValidate;
                           END;

                ImplicitType=Option }

    { 1   ;1   ;Group     ;
                Name=Group1;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 43  ;2   ;Field     ;
                Name=Entry Type;
                ToolTipML=ENU=Specifies the type of transaction that will be posted from the item journal line.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Entry Type";
                Editable=FALSE;
                ImplicitType=Option }

    { 38  ;2   ;Field     ;
                Name=Posting Date;
                ToolTipML=ENU=Specifies the posting date for the entry.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Posting Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 16  ;2   ;Field     ;
                Name=Order Line No.;
                ToolTipML=ENU=Specifies the line number of the order that created the entry.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Order Line No.";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Integer }

    { 2   ;2   ;Field     ;
                Name=Document No.;
                ToolTipML=ENU=Specifies a document number for the journal line.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Code20 }

    { 14  ;2   ;Field     ;
                Name=Item No.;
                ToolTipML=ENU=Specifies the number of the item on the journal line.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Item No.";
                Editable=FALSE;
                OnLookup=BEGIN
                           if Item.GET("Item No.") then
                             PAGE.RUNMODAL(PAGE::"Item List",Item);
                         END;

                ImplicitType=Code20 }

    { 64  ;2   ;Field     ;
                Name=Operation No.;
                ToolTipML=ENU=Specifies the number of the production operation on the item journal line when the journal functions as an output journal.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Operation No.";
                Editable=FALSE;
                ImplicitType=Code10 }

    { 80  ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the journal type, which is either Work Center or Machine Center.;
                OptionCaptionML=ENU="Work Center,Machine Center, ";
                ApplicationArea=#Manufacturing;
                SourceExpr=Type;
                Visible=TRUE;
                ImplicitType=Option }

    { 39  ;2   ;Field     ;
                Name=Flushing Method;
                ToolTipML=ENU=Specifies how consumption of the item (component) is calculated and handled in production processes. Manual: Enter and post consumption in the consumption journal manually. Forward: Automatically posts consumption according to the production order component lines when the first operation starts. Backward: Automatically calculates and posts consumption according to the production order component lines when the production order is finished. Pick + Forward / Pick + Backward: Variations with warehousing.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Flushing Method";
                Visible=FALSE;
                ImplicitType=Option }

    { 82  ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of a work center or a machine center, depending on the entry in the Type field.;
                ApplicationArea=#Manufacturing;
                SourceExpr="No.";
                ImplicitType=Code20 }

    { 5   ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 84  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the item on the journal line.;
                ApplicationArea=#Manufacturing;
                SourceExpr=Description;
                Editable=FALSE;
                StyleExpr=DescriptionEmphasize;
                ImplicitType=Text50 }

    { 23  ;2   ;Field     ;
                Name=Quantity;
                CaptionML=ENU=Consumption Quantity;
                ToolTipML=ENU=Specifies the quantity of the component that will be posted as consumed.;
                ApplicationArea=#Manufacturing;
                SourceExpr=Quantity;
                Editable=QuantityEditable;
                HideValue=QuantityHideValue;
                ImplicitType=Decimal }

    { 26  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Unit of Measure Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 100 ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the code for the inventory location where the item on the journal line will be registered.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 28  ;2   ;Field     ;
                Name=Bin Code;
                ToolTipML=ENU=Specifies the bin where the items are picked or put away.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 114 ;2   ;Field     ;
                Name=Work Shift Code;
                ToolTipML=ENU=Specifies the work shift code for this Journal line.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Work Shift Code";
                Visible=FALSE;
                Editable=WorkShiftCodeEditable;
                ImplicitType=Code10 }

    { 118 ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 10  ;2   ;Field     ;
                Name=Gen. Bus. Posting Group;
                ToolTipML=ENU=Specifies the vendor's or customer's trade type to link transactions made for this business partner with the appropriate general ledger account according to the general posting setup.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Gen. Bus. Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 12  ;2   ;Field     ;
                Name=Gen. Prod. Posting Group;
                ToolTipML=ENU=Specifies the item's product type to link transactions made for this item with the appropriate general ledger account according to the general posting setup.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 120 ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 300 ;2   ;Field     ;
                Name=ShortcutDimCode[3];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(3),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                Name=ShortcutDimCode[4];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(4),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                Name=ShortcutDimCode[5];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(5),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                Name=ShortcutDimCode[6];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(6),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                Name=ShortcutDimCode[7];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(7),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                Name=ShortcutDimCode[8];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(8),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 94  ;2   ;Field     ;
                Name=Starting Time;
                ToolTipML=ENU=Specifies the starting time of the operation on the item journal line.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Starting Time";
                Visible=FALSE;
                Editable=StartingTimeEditable;
                ImplicitType=Time }

    { 96  ;2   ;Field     ;
                Name=Ending Time;
                ToolTipML=ENU=Specifies the ending time of the operation on the item journal line.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Ending Time";
                Visible=FALSE;
                Editable=EndingTimeEditable;
                ImplicitType=Time }

    { 98  ;2   ;Field     ;
                Name=Concurrent Capacity;
                ToolTipML=ENU=Specifies the concurrent capacity.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Concurrent Capacity";
                Visible=FALSE;
                Editable=ConcurrentCapacityEditable;
                ImplicitType=Decimal }

    { 8   ;2   ;Field     ;
                Name=Setup Time;
                ToolTipML=ENU=Specifies the time required to set up the machines for this journal line.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Setup Time";
                Editable=SetupTimeEditable;
                HideValue=SetupTimeHideValue;
                ImplicitType=Decimal }

    { 86  ;2   ;Field     ;
                Name=Run Time;
                ToolTipML=ENU=Specifies the run time of the operations represented by this journal line.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Run Time";
                Editable=RunTimeEditable;
                HideValue=RunTimeHideValue;
                ImplicitType=Decimal }

    { 3   ;2   ;Field     ;
                Name=Cap. Unit of Measure Code;
                ToolTipML=ENU=Specifies the unit of measure code for the capacity usage.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Cap. Unit of Measure Code";
                Visible=FALSE;
                Editable=CapUnitofMeasureCodeEditable;
                ImplicitType=Code10 }

    { 112 ;2   ;Field     ;
                Name=Scrap Code;
                ToolTipML=ENU=Specifies why an item has been scrapped.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Scrap Code";
                Visible=FALSE;
                Editable=ScrapCodeEditable;
                ImplicitType=Code10 }

    { 126 ;2   ;Field     ;
                Name=Output Quantity;
                ToolTipML=ENU=Specifies the quantity of the produced item that can be posted as output on the journal line.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Output Quantity";
                Editable=OutputQuantityEditable;
                HideValue=OutputQuantityHideValue;
                ImplicitType=Decimal }

    { 128 ;2   ;Field     ;
                Name=Scrap Quantity;
                ToolTipML=ENU=Specifies the number of units produced incorrectly, and therefore cannot be used.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Scrap Quantity";
                Editable=ScrapQuantityEditable;
                HideValue=ScrapQuantityHideValue;
                ImplicitType=Decimal }

    { 122 ;2   ;Field     ;
                Name=Finished;
                ToolTipML=ENU=Specifies that the operation represented by the output journal line is finished.;
                ApplicationArea=#Manufacturing;
                SourceExpr=Finished;
                Editable=FinishedEditable;
                ImplicitType=Boolean }

    { 33  ;2   ;Field     ;
                Name=Applies-to Entry;
                ToolTipML=ENU=Specifies if the quantity in the item journal line should be applied to an already-posted document.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Applies-to Entry";
                Visible=FALSE;
                ImplicitType=Integer }

    { 32  ;2   ;Field     ;
                Name=Applies-from Entry;
                ToolTipML=ENU=Specifies the number of the outbound item ledger entry, whose cost is forwarded to the inbound item ledger entry.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Applies-from Entry";
                Visible=FALSE;
                Editable=AppliesFromEntryEditable;
                ImplicitType=Integer }

    { 134 ;2   ;Field     ;
                Name=Document Date;
                ToolTipML=ENU=Specifies the date on the document that provides the basis for the entry on the item journal line.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Document Date";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Date }

    { 136 ;2   ;Field     ;
                Name=External Document No.;
                ToolTipML=ENU=Specifies a document number referring to the customer or vendor numbering system with whom you are trading items on this journal line.;
                ApplicationArea=#Manufacturing;
                SourceExpr="External Document No.";
                Visible=FALSE;
                ImplicitType=Code35 }

    { 73  ;1   ;Group     ;
                Name=Actual;
                CaptionML=ENU=Actual }

    { 1902114901;2;Group  ;
                Name=Group1902114901;
                GroupType=FixedLayout }

    { 1901742001;3;Group  ;
                Name=Consump. Qty.;
                CaptionML=ENU=Consump. Qty. }

    { 55  ;4   ;Field     ;
                Name=ActualConsumpQty;
                ApplicationArea=#Manufacturing;
                DecimalPlaces=0:5;
                SourceExpr=ActualConsumpQty;
                Editable=FALSE;
                HideValue=ActualConsumpQtyHideValue;
                ImplicitType=Decimal;
                ShowCaption=false }

    { 1901741901;3;Group  ;
                Name=Group1901741901;
                CaptionML=ENU=Setup Time }

    { 50  ;4   ;Field     ;
                Name=ActualSetupTime;
                CaptionML=ENU=Setup Time;
                ToolTipML=ENU=Specifies the time required to set up the machines for this journal line. Setup time is the time it takes to prepare a machine or work center to perform an operation. Each operation can have a different setup time.;
                ApplicationArea=#Manufacturing;
                DecimalPlaces=0:5;
                SourceExpr=ActualSetupTime;
                Editable=FALSE;
                HideValue=ActualSetupTimeHideValue;
                ImplicitType=Decimal }

    { 1902759401;3;Group  ;
                Name=Group1902759401;
                CaptionML=ENU=Run Time }

    { 52  ;4   ;Field     ;
                Name=ActualRunTime;
                CaptionML=ENU=Run Time;
                ToolTipML=ENU=Specifies the run time of the operations represented by this journal line. Run time is the time it takes to complete an operation. Run time does not include setup time.;
                ApplicationArea=#Manufacturing;
                DecimalPlaces=0:5;
                SourceExpr=ActualRunTime;
                Editable=FALSE;
                HideValue=ActualRunTimeHideValue;
                ImplicitType=Decimal }

    { 1900205801;3;Group  ;
                Name=Output Qty.;
                CaptionML=ENU=Output Qty. }

    { 54  ;4   ;Field     ;
                Name=ActualOutputQty;
                CaptionML=ENU=Output Qty.;
                ToolTipML=ENU=Specifies the quantity of the produced item that can be posted as output on the journal line. Note that only the output quantity on the last journal line of entry type Output will adjust the inventory level when posting the journal.;
                ApplicationArea=#Manufacturing;
                DecimalPlaces=0:5;
                SourceExpr=ActualOutputQty;
                Editable=FALSE;
                HideValue=ActualOutputQtyHideValue;
                ImplicitType=Decimal }

    { 1900205901;3;Group  ;
                Name=Scrap Qty.;
                CaptionML=ENU=Scrap Qty. }

    { 58  ;4   ;Field     ;
                Name=ActualScrapQty;
                CaptionML=ENU=Scrap Qty.;
                ToolTipML=ENU=Specifies the number of units of the item that were produced incorrectly and therefore cannot be used. Even if the item number is later changed, this figure will remain on the line.;
                ApplicationArea=#Manufacturing;
                DecimalPlaces=0:5;
                SourceExpr=ActualScrapQty;
                Editable=FALSE;
                HideValue=ActualScrapQtyHideValue;
                ImplicitType=Decimal }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Item@1019 : Record Item;
      ProdOrder@1009 : Record "Production Order";
      ProdOrderLine@1012 : Record "Prod. Order Line";
      ProdOrderComp@1017 : Record "Prod. Order Component";
      TempItemJrnlLine@1002 : TEMPORARY Record "Item Journal Line";
      CostCalcMgt@1021 : Codeunit "Cost Calculation Management";
      ReportPrint@1001 : Codeunit "Test Report-Print";
      PostingDate@1008 : Date;
      xPostingDate@1007 : Date;
      ProdOrderLineNo@1006 : Integer;
      ShortcutDimCode@1005 : ARRAY [8] OF Code[20];
      ToTemplateName@1011 : Code[10];
      ToBatchName@1010 : Code[10];
      ActualRunTime@1013 : Decimal;
      ActualSetupTime@1014 : Decimal;
      ActualOutputQty@1015 : Decimal;
      ActualScrapQty@1020 : Decimal;
      ActualConsumpQty@1016 : Decimal;
      FlushingFilter@1003 : 'Manual,Forward,Backward,"Pick + Forward","Pick + Backward","All Methods"';
      DescriptionIndent@19057867 : Integer INDATASET;
      QuantityHideValue@19060207 : Boolean INDATASET;
      SetupTimeHideValue@19037416 : Boolean INDATASET;
      RunTimeHideValue@19073369 : Boolean INDATASET;
      OutputQuantityHideValue@19005396 : Boolean INDATASET;
      ScrapQuantityHideValue@19076632 : Boolean INDATASET;
      ActualConsumpQtyHideValue@19061616 : Boolean INDATASET;
      ActualSetupTimeHideValue@19068503 : Boolean INDATASET;
      ActualRunTimeHideValue@19010265 : Boolean INDATASET;
      ActualOutputQtyHideValue@19030556 : Boolean INDATASET;
      ActualScrapQtyHideValue@19001037 : Boolean INDATASET;
      StartingTimeEditable@19033885 : Boolean INDATASET;
      EndingTimeEditable@19072097 : Boolean INDATASET;
      ConcurrentCapacityEditable@19033053 : Boolean INDATASET;
      CapUnitofMeasureCodeEditable@19008712 : Boolean INDATASET;
      SetupTimeEditable@19005706 : Boolean INDATASET;
      RunTimeEditable@19034139 : Boolean INDATASET;
      WorkShiftCodeEditable@19055238 : Boolean INDATASET;
      FinishedEditable@19037742 : Boolean INDATASET;
      ScrapCodeEditable@19021735 : Boolean INDATASET;
      ScrapQuantityEditable@19061944 : Boolean INDATASET;
      OutputQuantityEditable@19056726 : Boolean INDATASET;
      QuantityEditable@19013162 : Boolean INDATASET;
      AppliesFromEntryEditable@19013746 : Boolean INDATASET;
      DescriptionEmphasize@19013747 : Text INDATASET;

    [External]
    PROCEDURE Setup@2(TemplateName@1003 : Code[10];BatchName@1002 : Code[10];ProductionOrder@1001 : Record "Production Order";ProdLineNo@1000 : Integer;PostDate@1004 : Date);
    BEGIN
      ToTemplateName := TemplateName;
      ToBatchName := BatchName;
      ProdOrder := ProductionOrder;
      ProdOrderLineNo := ProdLineNo;
      PostingDate := PostDate;
      xPostingDate := PostingDate;

      FlushingFilter := FlushingFilter::Manual;
    END;

    LOCAL PROCEDURE GetActTimeAndQtyBase@4();
    BEGIN
      ActualSetupTime := 0;
      ActualRunTime := 0;
      ActualOutputQty := 0;
      ActualScrapQty := 0;
      ActualConsumpQty := 0;

      if "Qty. per Unit of Measure" = 0 then
        "Qty. per Unit of Measure" := 1;
      if "Qty. per Cap. Unit of Measure" = 0 then
        "Qty. per Cap. Unit of Measure" := 1;

      if Item.GET("Item No.") then
        case "Entry Type" of
          "Entry Type"::Consumption:
            if ProdOrderComp.GET(
                 ProdOrder.Status,
                 "Order No.",
                 "Order Line No.",
                 "Prod. Order Comp. Line No.")
            then begin
              ProdOrderComp.CALCFIELDS("Act. Consumption (Qty)"); // Base Unit
              ActualConsumpQty :=
                ProdOrderComp."Act. Consumption (Qty)" / "Qty. per Unit of Measure";
              if Item."Rounding Precision" > 0 then
                ActualConsumpQty := ROUND(ActualConsumpQty,Item."Rounding Precision",'>')
              else
                ActualConsumpQty := ROUND(ActualConsumpQty,0.00001);
            end;
          "Entry Type"::Output:
            begin
              if ProdOrderLineNo = 0 then
                if not ProdOrderLine.GET(ProdOrder.Status,ProdOrder."No.","Order Line No.") then
                  CLEAR(ProdOrderLine);
              if ProdOrderLine."Prod. Order No." <> '' then begin
                CostCalcMgt.CalcActTimeAndQtyBase(
                  ProdOrderLine,"Operation No.",ActualRunTime,ActualSetupTime,ActualOutputQty,ActualScrapQty);
                ActualSetupTime :=
                  ROUND(ActualSetupTime / "Qty. per Cap. Unit of Measure",0.00001);
                ActualRunTime :=
                  ROUND(ActualRunTime / "Qty. per Cap. Unit of Measure",0.00001);

                ActualOutputQty := ActualOutputQty / "Qty. per Unit of Measure";
                ActualScrapQty := ActualScrapQty / "Qty. per Unit of Measure";
                if Item."Rounding Precision" > 0 then begin
                  ActualOutputQty := ROUND(ActualOutputQty,Item."Rounding Precision",'>');
                  ActualScrapQty := ROUND(ActualScrapQty,Item."Rounding Precision",'>');
                end else begin
                  ActualOutputQty := ROUND(ActualOutputQty,0.00001);
                  ActualScrapQty := ROUND(ActualScrapQty,0.00001);
                end;
              end;
            end;
        end;
    END;

    LOCAL PROCEDURE ControlsMngt@1();
    VAR
      OperationExist@1000 : Boolean;
    BEGIN
      if ("Entry Type" = "Entry Type"::Output) and
         ("Operation No." <> '')
      then
        OperationExist := true
      else
        OperationExist := false;

      StartingTimeEditable := OperationExist;
      EndingTimeEditable := OperationExist;
      ConcurrentCapacityEditable := OperationExist;
      CapUnitofMeasureCodeEditable := OperationExist;
      SetupTimeEditable := OperationExist;
      RunTimeEditable := OperationExist;
      WorkShiftCodeEditable := OperationExist;

      FinishedEditable := "Entry Type" = "Entry Type"::Output;
      ScrapCodeEditable := "Entry Type" = "Entry Type"::Output;
      ScrapQuantityEditable := "Entry Type" = "Entry Type"::Output;
      OutputQuantityEditable := "Entry Type" = "Entry Type"::Output;

      QuantityEditable := "Entry Type" = "Entry Type"::Consumption;
      AppliesFromEntryEditable := "Entry Type" = "Entry Type"::Consumption;
    END;

    LOCAL PROCEDURE DeleteRecTemp@6();
    BEGIN
      TempItemJrnlLine.DELETEALL;

      if FIND('-') then
        repeat
          case "Entry Type" of
            "Entry Type"::Consumption:
              if "Quantity (Base)" = 0 then begin
                TempItemJrnlLine := Rec;
                TempItemJrnlLine.INSERT;

                DELETE;
              end;
            "Entry Type"::Output:
              if TimeIsEmpty and
                 ("Output Quantity (Base)" = 0) and ("Scrap Quantity (Base)" = 0)
              then begin
                TempItemJrnlLine := Rec;
                TempItemJrnlLine.INSERT;

                DELETE;
              end;
          end;
        until NEXT = 0;
    END;

    LOCAL PROCEDURE InsertTempRec@7();
    BEGIN
      if TempItemJrnlLine.FIND('-') then
        repeat
          Rec := TempItemJrnlLine;
          "Changed by User" := false;
          INSERT;
        until TempItemJrnlLine.NEXT = 0;
      TempItemJrnlLine.DELETEALL;
    END;

    [External]
    PROCEDURE SetFilterGroup@5();
    BEGIN
      FILTERGROUP(2);
      SETRANGE("Journal Template Name",ToTemplateName);
      SETRANGE("Journal Batch Name",ToBatchName);
      SETRANGE("Order Type","Order Type"::Production);
      SETRANGE("Order No.",ProdOrder."No.");
      if ProdOrderLineNo <> 0 then
        SETRANGE("Order Line No.",ProdOrderLineNo);
      SetFlushingFilter;
      FILTERGROUP(0);
    END;

    [External]
    PROCEDURE SetFlushingFilter@8();
    BEGIN
      if FlushingFilter <> FlushingFilter::"All Methods" then
        SETRANGE("Flushing Method",FlushingFilter)
      else
        SETRANGE("Flushing Method");
    END;

    LOCAL PROCEDURE GetCaption@3() : Text[250];
    VAR
      ObjTransl@1000 : Record "Object Translation";
      SourceTableName@1002 : Text[100];
      Descrip@1001 : Text[100];
    BEGIN
      SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,5405);
      if ProdOrderLineNo <> 0 then
        Descrip := ProdOrderLine.Description
      else
        Descrip := ProdOrder.Description;

      exit(STRSUBSTNO('%1 %2 %3',SourceTableName,ProdOrder."No.",Descrip));
    END;

    LOCAL PROCEDURE PostingDateOnAfterValidate@19003005();
    BEGIN
      if PostingDate = 0D then
        PostingDate := xPostingDate;

      if PostingDate <> xPostingDate then begin
        MODIFYALL("Posting Date",PostingDate);
        xPostingDate := PostingDate;
        CurrPage.UPDATE(false);
      end;
    END;

    LOCAL PROCEDURE FlushingFilterOnAfterValidate@19064520();
    BEGIN
      SetFilterGroup;
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      DescriptionIndent := Level;
      if "Entry Type" = "Entry Type"::Output then
        DescriptionEmphasize := 'Strong'
      else
        DescriptionEmphasize := '';
    END;

    LOCAL PROCEDURE QuantityOnFormat@19071269();
    BEGIN
      if "Entry Type" = "Entry Type"::Output then
        QuantityHideValue := true;
    END;

    LOCAL PROCEDURE SetupTimeOnFormat@19007490();
    BEGIN
      if ("Entry Type" = "Entry Type"::Consumption) or
         ("Operation No." = '')
      then
        SetupTimeHideValue := true;
    END;

    LOCAL PROCEDURE RunTimeOnFormat@19059514();
    BEGIN
      if ("Entry Type" = "Entry Type"::Consumption) or
         ("Operation No." = '')
      then
        RunTimeHideValue := true;
    END;

    LOCAL PROCEDURE OutputQuantityOnFormat@19003029();
    BEGIN
      if "Entry Type" = "Entry Type"::Consumption then
        OutputQuantityHideValue := true;
    END;

    LOCAL PROCEDURE ScrapQuantityOnFormat@19017313();
    BEGIN
      if "Entry Type" = "Entry Type"::Consumption then
        ScrapQuantityHideValue := true;
    END;

    LOCAL PROCEDURE ActualConsumpQtyOnFormat@19012702();
    BEGIN
      if "Entry Type" = "Entry Type"::Output then
        ActualConsumpQtyHideValue := true;
    END;

    LOCAL PROCEDURE ActualSetupTimeOnFormat@19031665();
    BEGIN
      if ("Entry Type" = "Entry Type"::Consumption) or
         ("Operation No." = '')
      then
        ActualSetupTimeHideValue := true;
    END;

    LOCAL PROCEDURE ActualRunTimeOnFormat@19024131();
    BEGIN
      if ("Entry Type" = "Entry Type"::Consumption) or
         ("Operation No." = '')
      then
        ActualRunTimeHideValue := true;
    END;

    LOCAL PROCEDURE ActualOutputQtyOnFormat@19059076();
    BEGIN
      if "Entry Type" = "Entry Type"::Consumption then
        ActualOutputQtyHideValue := true;
    END;

    LOCAL PROCEDURE ActualScrapQtyOnFormat@19036240();
    BEGIN
      if "Entry Type" = "Entry Type"::Consumption then
        ActualScrapQtyHideValue := true;
    END;

    BEGIN
    END.
  }
}

