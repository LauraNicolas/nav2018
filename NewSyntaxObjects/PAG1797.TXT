OBJECT Page 1797 Data Migration Error
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Data Migration Errors;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    SourceTable="Data Migration Error";
    PageType=List;
    OnAfterGetCurrRecord=VAR
                           StagingTableRecId@1001 : RecordID;
                           DummyRecordId@1000 : RecordID;
                         BEGIN
                           StagingTableRecId := "Source Staging Table Record ID";
                           StagingTableRecIdSpecified := StagingTableRecId <> DummyRecordId;
                         END;

    ActionList=ACTIONS
    {
      { 5       ;    ;ActionContainer;
                      Name=ActionContainer5;
                      ActionContainerType=NewDocumentItems }
      { 6       ;1   ;Action    ;
                      Name=SkipSelection;
                      CaptionML=ENU=Skip Selections;
                      ToolTipML=ENU=Exclude the selected errors from the migration.;
                      ApplicationArea=#All;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Delete;
                      PromotedOnly=true;
                      OnAction=VAR
                                 DataMigrationError@1001 : Record "Data Migration Error";
                               BEGIN
                                 CheckAtLeastOneSelected;
                                 if not CONFIRM(SkipSelectionConfirmQst,false) then
                                   exit;
                                 CurrPage.SETSELECTIONFILTER(DataMigrationError);
                                 DataMigrationError.FINDSET;
                                 repeat
                                   DataMigrationError.Ignore;
                                 until DataMigrationError.NEXT = 0;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 7       ;1   ;Action    ;
                      Name=Edit;
                      CaptionML=ENU=Edit Record;
                      ToolTipML=ENU=Edit the record that caused the error.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Enabled=StagingTableRecIdSpecified;
                      PromotedIsBig=true;
                      Image=Edit;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 EditRecord;
                               END;
                                }
      { 8       ;1   ;Action    ;
                      Name=Migrate;
                      CaptionML=ENU=Migrate;
                      ToolTipML=ENU=Migrate the selected errors.;
                      ApplicationArea=#All;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Refresh;
                      PromotedOnly=true;
                      OnAction=VAR
                                 DataMigrationError@1000 : Record "Data Migration Error";
                                 DataMigrationFacade@1002 : Codeunit "Data Migration Facade";
                                 DataMigrationOverview@1001 : Page "Data Migration Overview";
                               BEGIN
                                 CheckAtLeastOneSelected;
                                 CurrPage.SETSELECTIONFILTER(DataMigrationError);
                                 DataMigrationError.MODIFYALL("Scheduled For Retry",true,true);

                                 DataMigrationFacade.StartMigration("Migration Type",true);

                                 MESSAGE(MigrationStartedMsg,DataMigrationOverview.CAPTION);
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 4   ;1   ;Group     ;
                Name=Group4;
                GroupType=Group;
                InstructionalTextML=ENU=Skip errors, or edit the entity to fix them, and then migrate again. }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=Error Message;
                ToolTipML=ENU=Specifies the error message that relates to the data migration.;
                ApplicationArea=#All;
                SourceExpr="Error Message";
                OnDrillDown=BEGIN
                              EditRecord;
                            END;

                ImplicitType=Text250 }

  }
  CODE
  {
    VAR
      MultipleRecordsSelectedErr@1000 : TextConst 'ENU=You can view the content of one record at a time.';
      MigrationStartedMsg@1001 : TextConst '@@@="%1 = Caption for the page Data Migration Overview";ENU=The selected records are scheduled for data migration. To check the status of the migration, go to the %1 page.';
      NoSelectionsMadeErr@1002 : TextConst 'ENU=No records have been selected.';
      StagingTableRecIdSpecified@1003 : Boolean;
      SkipSelectionConfirmQst@1004 : TextConst 'ENU=The selected errors will be deleted and the corresponding entities will not be migrated. Do you want to continue?';
      ExtensionNotInstalledErr@1005 : TextConst 'ENU=Sorry, but it looks like someone uninstalled the C5 Data Migration extension. When that happens, we remove all data that was not fully migrated.';

    LOCAL PROCEDURE CheckAtLeastOneSelected@1();
    VAR
      DataMigrationError@1000 : Record "Data Migration Error";
    BEGIN
      CurrPage.SETSELECTIONFILTER(DataMigrationError);
      if DataMigrationError.COUNT = 0 then
        ERROR(NoSelectionsMadeErr);
    END;

    LOCAL PROCEDURE EditRecord@2();
    VAR
      DataMigrationError@1002 : Record "Data Migration Error";
      DataMigrationStatus@1001 : Record "Data Migration Status";
      RecordRef@1000 : RecordRef;
    BEGIN
      CheckAtLeastOneSelected;
      CurrPage.SETSELECTIONFILTER(DataMigrationError);
      if DataMigrationError.COUNT > 1 then
        ERROR(MultipleRecordsSelectedErr);

      DataMigrationError.FINDFIRST;
      DataMigrationStatus.SETRANGE("Migration Type",DataMigrationError."Migration Type");
      DataMigrationStatus.SETRANGE("Destination Table ID",DataMigrationError."Destination Table ID");
      DataMigrationStatus.FINDFIRST;

      if not RecordRef.GET(DataMigrationError."Source Staging Table Record ID") then
        ERROR(ExtensionNotInstalledErr);

      OpenStagingTablePage(DataMigrationStatus."Source Staging Table ID",RecordRef);
    END;

    LOCAL PROCEDURE OpenStagingTablePage@5(PageId@1000 : Integer;StagingTableRecord@1001 : Variant);
    BEGIN
      PAGE.RUNMODAL(PageId,StagingTableRecord);
    END;

    BEGIN
    END.
  }
}

