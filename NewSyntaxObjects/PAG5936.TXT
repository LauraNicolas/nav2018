OBJECT Page 5936 Service Credit Memo Subform
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    MultipleNewLines=true;
    LinksAllowed=false;
    SourceTable="Service Line";
    DelayedInsert=true;
    SourceTableView=WHERE("Document Type"=FILTER("Credit Memo"));
    PageType=ListPart;
    AutoSplitKey=true;
    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  Type := xRec.Type;
                  CLEAR(ShortcutDimCode);
                END;

    OnDeleteRecord=VAR
                     ReserveServLine@1000 : Codeunit "Service Line-Reserve";
                   BEGIN
                     if (Quantity <> 0) and ItemExists("No.") then begin
                       COMMIT;
                       if not ReserveServLine.DeleteLineConfirm(Rec) then
                         exit(false);
                       ReserveServLine.DeleteLine(Rec);
                     end;
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 1902056104;2 ;Action    ;
                      Name=Insert &Ext. Texts;
                      AccessByPermission=TableData "Extended Text Header"=R;
                      CaptionML=ENU=Insert &Ext. Texts;
                      ToolTipML=ENU=Insert the extended item description that is set up for the item that is being processed on the line.;
                      ApplicationArea=#Advanced;
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(true);
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1907981204;2 ;ActionGroup;
                      Name=Item Availability by;
                      CaptionML=ENU=Item Availability by;
                      Image=ItemAvailability }
      { 3       ;3   ;Action    ;
                      Name=Event;
                      CaptionML=ENU=Event;
                      ToolTipML=ENU=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.;
                      ApplicationArea=#Advanced;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromServLine(Rec,ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 1903587104;3 ;Action    ;
                      Name=Period;
                      CaptionML=ENU=Period;
                      ToolTipML=ENU=View the projected quantity of the item over time according to time periods, such as day, week, or month.;
                      ApplicationArea=#Advanced;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromServLine(Rec,ItemAvailFormsMgt.ByPeriod);
                               END;
                                }
      { 1903193004;3 ;Action    ;
                      Name=Variant;
                      CaptionML=ENU=Variant;
                      ToolTipML=ENU=View or edit the item's variants. Instead of setting up each color of an item as a separate item, you can set up the various colors as variants of the item.;
                      ApplicationArea=#Advanced;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromServLine(Rec,ItemAvailFormsMgt.ByVariant);
                               END;
                                }
      { 1901743104;3 ;Action    ;
                      Name=Location;
                      AccessByPermission=TableData Location=R;
                      CaptionML=ENU=Location;
                      ToolTipML=ENU=View the actual and projected quantity of the item per location.;
                      ApplicationArea=#Advanced;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromServLine(Rec,ItemAvailFormsMgt.ByLocation);
                               END;
                                }
      { 5       ;3   ;Action    ;
                      Name=BOM Level;
                      CaptionML=ENU=BOM Level;
                      ToolTipML=ENU=View availability figures for items on bills of materials that show how many units of a parent item you can make based on the availability of child items.;
                      ApplicationArea=#Advanced;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromServLine(Rec,ItemAvailFormsMgt.ByBOM);
                               END;
                                }
      { 1902740304;2 ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1905987604;2 ;Action    ;
                      Name=ItemTrackingLines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      ToolTipML=ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the type of the service line.;
                ApplicationArea=#Service;
                SourceExpr=Type;
                OnValidate=BEGIN
                             NoOnAfterValidate;
                           END;

                ImplicitType=Option }

    { 4   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of an item, general ledger account, resource code, cost, or standard text.;
                ApplicationArea=#Service;
                SourceExpr="No.";
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 18  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 38  ;2   ;Field     ;
                Name=Nonstock;
                ToolTipML=ENU=Specifies that the item is a nonstock item.;
                ApplicationArea=#Service;
                SourceExpr=Nonstock;
                Visible=FALSE;
                ImplicitType=Boolean }

    { 58  ;2   ;Field     ;
                Name=VAT Prod. Posting Group;
                ToolTipML=ENU=Specifies the VAT product posting group. Links business transactions made for the item, resource, or G/L account with the general ledger, to account for VAT amounts resulting from trade with that record.;
                ApplicationArea=#Service;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the description of an item, resource, cost, or a standard text on the line.;
                ApplicationArea=#Service;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 24  ;2   ;Field     ;
                Name=Return Reason Code;
                ToolTipML=ENU=Specifies the code explaining why the item was returned.;
                ApplicationArea=#Service;
                SourceExpr="Return Reason Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 72  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the inventory location from where the items on the line should be taken and where they should be registered.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Visible=TRUE;
                ImplicitType=Code10 }

    { 50  ;2   ;Field     ;
                Name=Bin Code;
                ToolTipML=ENU=Specifies the bin where the items are picked or put away.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 28  ;2   ;Field     ;
                Name=Reserve;
                ToolTipML=ENU=Specifies whether a reservation can be made for items on this line.;
                ApplicationArea=#Advanced;
                SourceExpr=Reserve;
                Visible=FALSE;
                OnValidate=BEGIN
                             ReserveOnAfterValidate;
                           END;

                ImplicitType=Option }

    { 8   ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the number of item units, resource hours, cost on the service line.;
                ApplicationArea=#Service;
                BlankZero=true;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 26  ;2   ;Field     ;
                Name=Reserved Quantity;
                ToolTipML=ENU=Specifies how many item units on this line have been reserved.;
                ApplicationArea=#Advanced;
                BlankZero=true;
                SourceExpr="Reserved Quantity";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              COMMIT;
                              ShowReservationEntries(true);
                              UpdateForm(true);
                            END;

                ImplicitType=Decimal }

    { 22  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Service;
                SourceExpr="Unit of Measure Code";
                OnValidate=BEGIN
                             UnitofMeasureCodeOnAfterValida;
                           END;

                ImplicitType=Code10 }

    { 10  ;2   ;Field     ;
                Name=Unit of Measure;
                ToolTipML=ENU=Specifies the name of the unit of measure for the item, resource or cost on the line.;
                ApplicationArea=#Service;
                SourceExpr="Unit of Measure";
                Visible=FALSE;
                ImplicitType=Text10 }

    { 70  ;2   ;Field     ;
                Name=Unit Cost (LCY);
                ToolTipML=ENU=Specifies the cost per item unit, resource, or cost on the line.;
                ApplicationArea=#Service;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 12  ;2   ;Field     ;
                Name=Unit Price;
                ToolTipML=ENU=Specifies the price per item unit, resource, or cost on the line.;
                ApplicationArea=#Service;
                BlankZero=true;
                SourceExpr="Unit Price";
                ImplicitType=Decimal }

    { 92  ;2   ;Field     ;
                Name=Line Amount;
                ToolTipML=ENU=Specifies the net amount, excluding any invoice discount amount, that must be paid for products on the line.;
                ApplicationArea=#Service;
                SourceExpr="Line Amount";
                ImplicitType=Decimal }

    { 16  ;2   ;Field     ;
                Name=Line Discount %;
                ToolTipML=ENU=Specifies the discount percentage that is granted for the item on the line.;
                ApplicationArea=#Service;
                BlankZero=true;
                SourceExpr="Line Discount %";
                ImplicitType=Decimal }

    { 56  ;2   ;Field     ;
                Name=Line Discount Amount;
                ToolTipML=ENU=Specifies the discount amount that is granted for the item on the line.;
                ApplicationArea=#Service;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 54  ;2   ;Field     ;
                Name=Allow Invoice Disc.;
                ToolTipML=ENU=Specifies if the invoice line is included when the invoice discount is calculated.;
                ApplicationArea=#Service;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 20  ;2   ;Field     ;
                Name=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount for the line.;
                ApplicationArea=#Service;
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 86  ;2   ;Field     ;
                Name=Serv. Price Adjmt. Gr. Code;
                ToolTipML=ENU=Specifies the service price adjustment group code that applies to this line.;
                ApplicationArea=#Service;
                SourceExpr="Serv. Price Adjmt. Gr. Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 62  ;2   ;Field     ;
                Name=Work Type Code;
                ToolTipML=ENU=Specifies a code for the type of work performed by the resource registered on this line.;
                ApplicationArea=#Service;
                SourceExpr="Work Type Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 40  ;2   ;Field     ;
                Name=Contract No.;
                ToolTipML=ENU=Specifies the number of the contract, if the service order originated from a service contract.;
                ApplicationArea=#Service;
                SourceExpr="Contract No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 46  ;2   ;Field     ;
                Name=Service Item No.;
                ToolTipML=ENU=Specifies the service item number linked to this service line.;
                ApplicationArea=#Service;
                SourceExpr="Service Item No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 5810;2   ;Field     ;
                Name=Appl.-from Item Entry;
                ToolTipML=ENU=Specifies the number of the item ledger entry that the document or journal line is applied from.;
                ApplicationArea=#Service;
                SourceExpr="Appl.-from Item Entry";
                Visible=FALSE;
                ImplicitType=Integer }

    { 76  ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 74  ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 300 ;2   ;Field     ;
                Name=ShortcutDimCode[3];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(3),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                Name=ShortcutDimCode[4];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(4),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                Name=ShortcutDimCode[5];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(5),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                Name=ShortcutDimCode[6];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(6),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                Name=ShortcutDimCode[7];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(7),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                Name=ShortcutDimCode[8];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(8),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

  }
  CODE
  {
    VAR
      TransferExtendedText@1000 : Codeunit "Transfer Extended Text";
      ItemAvailFormsMgt@1002 : Codeunit "Item Availability Forms Mgt";
      ShortcutDimCode@1001 : ARRAY [8] OF Code[20];

    [External]
    PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Service-Disc. (Yes/No)",Rec);
    END;

    LOCAL PROCEDURE InsertExtendedText@5(Unconditionally@1000 : Boolean);
    BEGIN
      if TransferExtendedText.ServCheckIfAnyExtText(Rec,Unconditionally) then begin
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertServExtText(Rec);
      end;
      if TransferExtendedText.MakeUpdate then
        UpdateForm(true);
    END;

    [External]
    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(false);
    END;

    LOCAL PROCEDURE ReserveOnAfterValidate@19004502();
    BEGIN
      if (Reserve = Reserve::Always) and ("Outstanding Qty. (Base)" <> 0) then begin
        CurrPage.SAVERECORD;
        AutoReserve;
      end;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      if Reserve = Reserve::Always then begin
        CurrPage.SAVERECORD;
        AutoReserve;
      end;
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnAfterValida@19057939();
    BEGIN
      if Reserve = Reserve::Always then begin
        CurrPage.SAVERECORD;
        AutoReserve;
      end;
    END;

    BEGIN
    END.
  }
}

