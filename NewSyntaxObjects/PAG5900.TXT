OBJECT Page 5900 Service Order
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Order;
    SourceTable="Service Header";
    SourceTableView=WHERE("Document Type"=FILTER(Order));
    PageType=Document;
    RefreshOnActivate=true;
    PromotedActionCategoriesML=ENU=New,Process,Report,Warehouse;
    OnOpenPage=BEGIN
                 if UserMgt.GetServiceFilter <> '' then begin
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetServiceFilter);
                   FILTERGROUP(0);
                 end;
                 if ("No." <> '') and ("Customer No." = '') then
                   DocumentIsPosted := (not GET("Document Type","No."));
               END;

    OnNewRecord=BEGIN
                  "Document Type" := "Document Type"::Order;
                  "Responsibility Center" := UserMgt.GetServiceFilter;
                  if "No." = '' then
                    SetCustomerFromFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     CLEAR(ServLogMgt);
                     ServLogMgt.ServHeaderManualDelete(Rec);
                     exit(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       if not DocumentIsPosted then
                         exit(ConfirmCloseUnposted);
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 138     ;1   ;ActionGroup;
                      Name=O&rder;
                      CaptionML=ENU=O&rder;
                      Image=Order }
      { 137     ;2   ;Action    ;
                      Name=Demand Overview;
                      CaptionML=ENU=Demand Overview;
                      ToolTipML=ENU=Get an overview of demand for your items when planning sales, production, jobs, or service management and when they will be available.;
                      ApplicationArea=#Planning;
                      Image=Forecast;
                      OnAction=VAR
                                 DemandOverview@1000 : Page "Demand Overview";
                               BEGIN
                                 DemandOverview.SetCalculationParameter(true);
                                 DemandOverview.Initialize(0D,4,"No.",'','');
                                 DemandOverview.RUNMODAL;
                               END;
                                }
      { 7       ;2   ;Action    ;
                      Name=<Action7>;
                      AccessByPermission=TableData "Order Promising Line"=R;
                      CaptionML=ENU=Order Promising;
                      ApplicationArea=#Planning;
                      Image=OrderPromising;
                      OnAction=VAR
                                 OrderPromisingLine@1001 : Record "Order Promising Line";
                                 OrderPromisingLines@1000 : Page "Order Promising Lines";
                               BEGIN
                                 CLEAR(OrderPromisingLines);
                                 OrderPromisingLines.SetSourceType(12); // Service order
                                 CLEAR(OrderPromisingLine);
                                 OrderPromisingLine.SETRANGE("Source Type",OrderPromisingLine."Source Type"::"Service Order");
                                 OrderPromisingLine.SETRANGE("Source ID","No.");
                                 OrderPromisingLines.SETTABLEVIEW(OrderPromisingLine);
                                 OrderPromisingLines.RUNMODAL;
                               END;
                                }
      { 131     ;2   ;Action    ;
                      Name=&Customer Card;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=&Customer Card;
                      ToolTipML=ENU=View detailed information about the customer.;
                      ApplicationArea=#Service;
                      RunObject=Page "Customer Card";
                      RunPageLink="No."=FIELD("Customer No.");
                      Image=Customer }
      { 206     ;2   ;Action    ;
                      Name=&Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=&Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to journal lines to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Enabled="No." <> '';
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                               END;
                                }
      { 20      ;2   ;Action    ;
                      Name=Service Document Lo&g;
                      CaptionML=ENU=Service Document Lo&g;
                      ToolTipML=ENU=View a list of the service document changes that have been logged. The program creates entries in the window when, for example, the response time or service order status changed, a resource was allocated, a service order was shipped or invoiced, and so on. Each line in this window identifies the event that occurred to the service document. The line contains the information about the field that was changed, its old and new value, the date and time when the change took place, and the ID of the user who actually made the changes.;
                      ApplicationArea=#Service;
                      Image=Log;
                      OnAction=VAR
                                 ServDocLog@1001 : Record "Service Document Log";
                               BEGIN
                                 ServDocLog.ShowServDocLog(Rec);
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=Email &Queue;
                      CaptionML=ENU=Email &Queue;
                      ApplicationArea=#Service;
                      RunObject=Page "Service Email Queue";
                      RunPageView=SORTING("Document Type","Document No.");
                      RunPageLink="Document Type"=CONST("Service Order"),
                                  "Document No."=FIELD("No.");
                      Image=Email }
      { 21      ;2   ;Action    ;
                      Name=Co&mments;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Service;
                      RunObject=Page "Service Comment Sheet";
                      RunPageLink="Table Name"=CONST("Service Header"),
                                  "Table Subtype"=FIELD("Document Type"),
                                  "No."=FIELD("No."),
                                  Type=CONST(General);
                      Image=ViewComments }
      { 36      ;1   ;ActionGroup;
                      Name=<Action36>;
                      CaptionML=ENU=Statistics;
                      Image=Statistics }
      { 102     ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      ToolTipML=ENU=View statistical information, such as the value of posted entries, for the record.;
                      ApplicationArea=#Service;
                      Promoted=true;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SalesSetup@1000 : Record "Sales & Receivables Setup";
                                 ServLine@1001 : Record "Service Line";
                                 ServLines@1003 : Page "Service Lines";
                               BEGIN
                                 SalesSetup.GET;
                                 if SalesSetup."Calc. Inv. Discount" then begin
                                   ServLine.RESET;
                                   ServLine.SETRANGE("Document Type","Document Type");
                                   ServLine.SETRANGE("Document No.","No.");
                                   if ServLine.FINDFIRST then begin
                                     ServLines.SETTABLEVIEW(ServLine);
                                     ServLines.CalcInvDisc(ServLine);
                                     COMMIT
                                   end;
                                 end;
                                 PAGE.RUNMODAL(PAGE::"Service Order Statistics",Rec);
                               END;
                                }
      { 37      ;1   ;ActionGroup;
                      Name=Documents;
                      CaptionML=ENU=Documents;
                      Image=Documents }
      { 41      ;2   ;Action    ;
                      Name=S&hipments;
                      CaptionML=ENU=S&hipments;
                      ToolTipML=ENU=View related posted service shipments.;
                      ApplicationArea=#Service;
                      RunObject=Page "Posted Service Shipments";
                      RunPageView=SORTING("Order No.");
                      RunPageLink="Order No."=FIELD("No.");
                      Promoted=true;
                      Image=Shipment;
                      PromotedCategory=Process }
      { 60      ;2   ;Action    ;
                      Name=Invoices;
                      CaptionML=ENU=Invoices;
                      ToolTipML=ENU=View a list of ongoing sales invoices for the order.;
                      ApplicationArea=#Service;
                      RunObject=Page "Posted Service Invoices";
                      RunPageView=SORTING("Order No.");
                      RunPageLink="Order No."=FIELD("No.");
                      Image=Invoice }
      { 29      ;1   ;ActionGroup;
                      Name=W&arehouse;
                      CaptionML=ENU=W&arehouse;
                      Image=Warehouse }
      { 11      ;2   ;Action    ;
                      Name=Whse. Shipment Lines;
                      CaptionML=ENU=Whse. Shipment Lines;
                      ToolTipML=ENU=View ongoing warehouse shipments for the document, in advanced warehouse configurations.;
                      ApplicationArea=#Warehouse;
                      RunObject=Page "Whse. Shipment Lines";
                      RunPageView=SORTING("Source Type","Source Subtype","Source No.","Source Line No.");
                      RunPageLink="Source Type"=CONST(5902),
                                  "Source Subtype"=FIELD("Document Type"),
                                  "Source No."=FIELD("No.");
                      Promoted=true;
                      Image=ShipmentLines;
                      PromotedCategory=Category4 }
      { 35      ;1   ;ActionGroup;
                      Name=History;
                      CaptionML=ENU=History;
                      Image=History }
      { 155     ;2   ;Action    ;
                      Name=Service Ledger E&ntries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Service Ledger E&ntries;
                      ToolTipML=ENU=View all the ledger entries for the service item or service order that result from posting transactions in service document.;
                      ApplicationArea=#Service;
                      RunObject=Page "Service Ledger Entries";
                      RunPageView=SORTING("Service Order No.","Service Item No. (Serviced)","Entry Type","Moved from Prepaid Acc.","Posting Date",Open,Type);
                      RunPageLink="Service Order No."=FIELD("No.");
                      Image=ServiceLedger }
      { 142     ;2   ;Action    ;
                      Name=&Warranty Ledger Entries;
                      CaptionML=ENU=&Warranty Ledger Entries;
                      ToolTipML=ENU=View all the ledger entries for the service item or service order that result from posting transactions in service documents that contain warranty agreements.;
                      ApplicationArea=#Service;
                      RunObject=Page "Warranty Ledger Entries";
                      RunPageView=SORTING("Service Order No.","Posting Date","Document No.");
                      RunPageLink="Service Order No."=FIELD("No.");
                      Image=WarrantyLedger }
      { 105     ;2   ;Action    ;
                      Name=&Job Ledger Entries;
                      CaptionML=ENU=&Job Ledger Entries;
                      ToolTipML=ENU=View all the job ledger entries that result from posting transactions in the service document that involve a job.;
                      ApplicationArea=#Service;
                      RunObject=Page "Job Ledger Entries";
                      RunPageView=SORTING("Service Order No.","Posting Date")
                                  WHERE("Entry Type"=CONST(Usage));
                      RunPageLink="Service Order No."=FIELD("No.");
                      Image=JobLedger }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 18      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 152     ;2   ;Action    ;
                      Name=Create Customer;
                      CaptionML=ENU=&Create Customer;
                      ToolTipML=ENU=Create a new customer card for the customer on the service document.;
                      ApplicationArea=#Service;
                      Image=NewCustomer;
                      OnAction=BEGIN
                                 CLEAR(ServOrderMgt);
                                 ServOrderMgt.CreateNewCustomer(Rec);
                                 CurrPage.UPDATE(true);
                               END;
                                }
      { 27      ;1   ;ActionGroup;
                      Name=ActionGroup27;
                      CaptionML=ENU=W&arehouse;
                      Image=Warehouse }
      { 12      ;2   ;Action    ;
                      Name=Release to Ship;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=Release to Ship;
                      ApplicationArea=#Warehouse;
                      Promoted=true;
                      Image=ReleaseShipment;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ReleaseServiceDocument@1000 : Codeunit "Release Service Document";
                               BEGIN
                                 ReleaseServiceDocument.PerformManualRelease(Rec);
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=ENU=Reopen;
                      ToolTipML=ENU=Reactivate the service order after it has been released for warehouse handling.;
                      ApplicationArea=#Warehouse;
                      Promoted=true;
                      Image=ReOpen;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ReleaseServiceDocument@1000 : Codeunit "Release Service Document";
                               BEGIN
                                 ReleaseServiceDocument.PerformManualReopen(Rec);
                               END;
                                }
      { 14      ;2   ;Action    ;
                      Name=Create Whse Shipment;
                      AccessByPermission=TableData "Warehouse Shipment Header"=R;
                      CaptionML=ENU=Create Whse. Shipment;
                      ToolTipML=ENU="Prepare to pick and ship the service item. ";
                      ApplicationArea=#Warehouse;
                      Promoted=true;
                      Image=NewShipment;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 GetSourceDocOutbound@1000 : Codeunit "Get Source Doc. Outbound";
                               BEGIN
                                 GetSourceDocOutbound.CreateFromServiceOrder(Rec);
                                 if not FIND('=><') then
                                   INIT;
                               END;
                                }
      { 33      ;1   ;ActionGroup;
                      Name=P&osting;
                      CaptionML=ENU=P&osting;
                      Image=Post }
      { 86      ;2   ;Action    ;
                      Name=TestReport;
                      Ellipsis=true;
                      CaptionML=ENU=Test Report;
                      ToolTipML=ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                      ApplicationArea=#Service;
                      Image=TestReport;
                      OnAction=VAR
                                 ReportPrint@1001 : Codeunit "Test Report-Print";
                               BEGIN
                                 ReportPrint.PrintServiceHeader(Rec);
                               END;
                                }
      { 87      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      Ellipsis=true;
                      CaptionML=ENU=P&ost;
                      ToolTipML=ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                      ApplicationArea=#Service;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServPostYesNo@1002 : Codeunit "Service-Post (Yes/No)";
                                 InstructionMgt@1000 : Codeunit "Instruction Mgt.";
                               BEGIN
                                 ServHeader.GET("Document Type","No.");
                                 ServPostYesNo.PostDocument(ServHeader);
                                 DocumentIsPosted := not ServHeader.GET("Document Type","No.");
                                 if InstructionMgt.IsEnabled(InstructionMgt.ShowPostedConfirmationMessageCode) then
                                   ShowPostedConfirmationMessage;
                                 CurrPage.UPDATE(false);
                               END;
                                }
      { 30      ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=ENU=Preview Posting;
                      ToolTipML=ENU=Review the different types of entries that will be created when you post the document or journal.;
                      ApplicationArea=#Service;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 ServPostYesNo@1000 : Codeunit "Service-Post (Yes/No)";
                               BEGIN
                                 ServHeader.GET("Document Type","No.");
                                 ServPostYesNo.PreviewDocument(ServHeader);
                                 DocumentIsPosted := not ServHeader.GET("Document Type","No.");
                               END;
                                }
      { 114     ;2   ;Action    ;
                      Name=Post and &Print;
                      ShortCutKey=Shift+F9;
                      Ellipsis=true;
                      CaptionML=ENU=Post and &Print;
                      ToolTipML=ENU=Finalize and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.;
                      ApplicationArea=#Service;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServPostPrint@1001 : Codeunit "Service-Post+Print";
                               BEGIN
                                 ServHeader.GET("Document Type","No.");
                                 ServPostPrint.PostDocument(ServHeader);
                               END;
                                }
      { 115     ;2   ;Action    ;
                      Name=Post &Batch;
                      Ellipsis=true;
                      CaptionML=ENU=Post &Batch;
                      ToolTipML=ENU=Post several documents at once. A report request window opens where you can specify which documents to post.;
                      ApplicationArea=#Service;
                      Image=PostBatch;
                      OnAction=BEGIN
                                 CLEAR(ServHeader);
                                 ServHeader.SETRANGE(Status,ServHeader.Status::Finished);
                                 REPORT.RUNMODAL(REPORT::"Batch Post Service Orders",true,true,ServHeader);
                                 CurrPage.UPDATE(false);
                               END;
                                }
      { 4       ;1   ;Action    ;
                      Name=&Print;
                      Ellipsis=true;
                      CaptionML=ENU=&Print;
                      ToolTipML=ENU=Prepare to print the document. A report request window for the document opens where you can specify what to include on the print-out.;
                      ApplicationArea=#Service;
                      Promoted=true;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DocPrint@1001 : Codeunit "Document-Print";
                               BEGIN
                                 CurrPage.UPDATE(true);
                                 DocPrint.PrintServiceHeader(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 34  ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the service document you are creating.;
                ApplicationArea=#Service;
                SourceExpr="No.";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               if AssistEdit(xRec) then
                                 CurrPage.UPDATE;
                             END;

                ImplicitType=Code20 }

    { 99  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a short description of the service document, such as Order 2001.;
                ApplicationArea=#Service;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 2   ;2   ;Field     ;
                Name=Customer No.;
                ToolTipML=ENU=Specifies the number of the customer who owns the items in the service document.;
                ApplicationArea=#Service;
                SourceExpr="Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             CustomerNoOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 146 ;2   ;Field     ;
                Name=Contact No.;
                ToolTipML=ENU=Specifies the number of the contact to whom you will deliver the service.;
                ApplicationArea=#Service;
                SourceExpr="Contact No.";
                OnValidate=BEGIN
                             if GETFILTER("Contact No.") = xRec."Contact No." then
                               if "Contact No." <> xRec."Contact No." then
                                 SETRANGE("Contact No.");
                           END;

                ImplicitType=Code20 }

    { 42  ;2   ;Field     ;
                Name=Name;
                ToolTipML=ENU=Specifies the name of the customer to whom the items on the document will be shipped.;
                ApplicationArea=#Service;
                SourceExpr=Name;
                ImplicitType=Text50 }

    { 82  ;2   ;Field     ;
                Name=Address;
                ToolTipML=ENU=Specifies the address of the customer to whom the service will be shipped.;
                ApplicationArea=#Service;
                SourceExpr=Address;
                ImplicitType=Text50 }

    { 89  ;2   ;Field     ;
                Name=Address 2;
                ToolTipML=ENU=Specifies additional address information.;
                ApplicationArea=#Service;
                SourceExpr="Address 2";
                Importance=Additional;
                ImplicitType=Text50 }

    { 120 ;2   ;Field     ;
                Name=Post Code;
                ToolTipML=ENU=Specifies the postal code of the address.;
                ApplicationArea=#Service;
                SourceExpr="Post Code";
                ImplicitType=Code20 }

    { 126 ;2   ;Field     ;
                Name=Contact Name;
                ToolTipML=ENU=Specifies the name of the contact who will receive the service.;
                ApplicationArea=#Service;
                SourceExpr="Contact Name";
                ImplicitType=Text50 }

    { 28  ;2   ;Field     ;
                Name=Phone No.;
                ToolTipML=ENU=Specifies the phone number of the customer in this service order.;
                ApplicationArea=#Service;
                SourceExpr="Phone No.";
                ImplicitType=Text30 }

    { 63  ;2   ;Field     ;
                Name=E-Mail;
                ExtendedDatatype=E-Mail;
                ToolTipML=ENU=Specifies the email address of the customer in this service order.;
                ApplicationArea=#Service;
                SourceExpr="E-Mail";
                ImplicitType=Text80 }

    { 156 ;2   ;Field     ;
                Name=City;
                ToolTipML=ENU=Specifies the city of the address.;
                ApplicationArea=#Service;
                SourceExpr=City;
                ImplicitType=Text30 }

    { 97  ;2   ;Field     ;
                Name=Phone No. 2;
                ToolTipML=ENU=Specifies your customer's alternate phone number.;
                ApplicationArea=#Service;
                SourceExpr="Phone No. 2";
                Importance=Additional;
                ImplicitType=Text30 }

    { 50  ;2   ;Field     ;
                Name=Notify Customer;
                ToolTipML=ENU=Specifies how the customer wants to receive notifications about service completion.;
                ApplicationArea=#Service;
                SourceExpr="Notify Customer";
                Importance=Additional;
                ImplicitType=Option }

    { 10  ;2   ;Field     ;
                Name=Service Order Type;
                ToolTipML=ENU=Specifies the type of this service order.;
                ApplicationArea=#Service;
                SourceExpr="Service Order Type";
                ImplicitType=Code10 }

    { 190 ;2   ;Field     ;
                Name=Contract No.;
                ToolTipML=ENU=Specifies the number of the contract associated with the order.;
                ApplicationArea=#Service;
                SourceExpr="Contract No.";
                ImplicitType=Code20 }

    { 44  ;2   ;Field     ;
                Name=Response Date;
                ToolTipML=ENU=Specifies the estimated date when work on the order should start, that is, when the service order status changes from Pending, to In Process.;
                ApplicationArea=#Service;
                SourceExpr="Response Date";
                Importance=Promoted;
                ImplicitType=Date }

    { 134 ;2   ;Field     ;
                Name=Response Time;
                ToolTipML=ENU=Specifies the estimated time when work on the order starts, that is, when the service order status changes from Pending, to In Process.;
                ApplicationArea=#Service;
                SourceExpr="Response Time";
                ImplicitType=Time }

    { 25  ;2   ;Field     ;
                Name=Priority;
                ToolTipML=ENU=Specifies the priority of the service order.;
                ApplicationArea=#Service;
                SourceExpr=Priority;
                Importance=Promoted;
                ImplicitType=Option }

    { 47  ;2   ;Field     ;
                Name=Status;
                ToolTipML=ENU=Specifies the service order status, which reflects the repair or maintenance status of all service items on the service order.;
                ApplicationArea=#Service;
                SourceExpr=Status;
                ImplicitType=Option }

    { 98  ;2   ;Field     ;
                Name=Responsibility Center;
                ToolTipML=ENU=Specifies the code of the responsibility center associated with the user who created the service order.;
                ApplicationArea=#Service;
                SourceExpr="Responsibility Center";
                Importance=Additional;
                ImplicitType=Code10 }

    { 217 ;2   ;Field     ;
                Name=Assigned User ID;
                ToolTipML=ENU=Specifies the ID of the user who is responsible for the document.;
                ApplicationArea=#Service;
                SourceExpr="Assigned User ID";
                Importance=Additional;
                ImplicitType=Code50 }

    { 15  ;2   ;Field     ;
                Name=Release Status;
                ToolTipML=ENU=Specifies if items in the Service Lines window are ready to be handled in warehouse activities.;
                ApplicationArea=#Service;
                SourceExpr="Release Status";
                Importance=Promoted;
                ImplicitType=Option }

    { 46  ;1   ;Part      ;
                Name=ServItemLines;
                ApplicationArea=#Service;
                SubPageLink="Document No."=FIELD("No.");
                PagePartID="Service Order Subform";
                PartType=Page }

    { 1905885101;1;Group  ;
                Name=Invoicing;
                CaptionML=ENU=Invoicing }

    { 75  ;2   ;Field     ;
                Name=Bill-to Customer No.;
                ToolTipML=ENU=Specifies the number of the customer that you send or sent the invoice or credit memo to.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             BilltoCustomerNoOnAfterValidat;
                           END;

                ImplicitType=Code20 }

    { 164 ;2   ;Field     ;
                Name=Bill-to Contact No.;
                ToolTipML=ENU=Specifies the number of the contact person at the customer's billing address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Contact No.";
                ImplicitType=Code20 }

    { 92  ;2   ;Field     ;
                Name=Bill-to Name;
                ToolTipML=ENU=Specifies the name of the customer that you send or sent the invoice or credit memo to.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Name";
                ImplicitType=Text50 }

    { 96  ;2   ;Field     ;
                Name=Bill-to Address;
                ToolTipML=ENU=Specifies the address of the customer to whom you will send the invoice.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Address";
                ImplicitType=Text50 }

    { 103 ;2   ;Field     ;
                Name=Bill-to Address 2;
                ToolTipML=ENU=Specifies an additional line of the address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Address 2";
                Importance=Additional;
                ImplicitType=Text50 }

    { 107 ;2   ;Field     ;
                Name=Bill-to Post Code;
                ToolTipML=ENU=Specifies the postal code of the customer's billing address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Post Code";
                ImplicitType=Code20 }

    { 109 ;2   ;Field     ;
                Name=Bill-to City;
                ToolTipML=ENU=Specifies the city of the address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to City";
                ImplicitType=Text30 }

    { 65  ;2   ;Field     ;
                Name=Bill-to Contact;
                ToolTipML=ENU=Specifies the name of the contact person at the customer's billing address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Contact";
                ImplicitType=Text50 }

    { 135 ;2   ;Field     ;
                Name=Your Reference;
                ToolTipML=ENU=Specifies a customer reference, which will be used when printing service documents.;
                ApplicationArea=#Service;
                SourceExpr="Your Reference";
                Importance=Additional;
                ImplicitType=Text35 }

    { 175 ;2   ;Field     ;
                Name=Salesperson Code;
                ToolTipML=ENU=Specifies the code of the salesperson assigned to this service document.;
                ApplicationArea=#Service;
                SourceExpr="Salesperson Code";
                ImplicitType=Code20 }

    { 79  ;2   ;Field     ;
                Name=Max. Labor Unit Price;
                ToolTipML=ENU=Specifies the maximum unit price that can be set for a resource (for example, a technician) on all service lines linked to this order.;
                ApplicationArea=#Service;
                SourceExpr="Max. Labor Unit Price";
                Importance=Additional;
                OnValidate=BEGIN
                             MaxLaborUnitPriceOnAfterValida;
                           END;

                ImplicitType=Decimal }

    { 113 ;2   ;Field     ;
                Name=Posting Date;
                ToolTipML=ENU=Specifies the date when the service document should be posted.;
                ApplicationArea=#Service;
                SourceExpr="Posting Date";
                ImplicitType=Date }

    { 118 ;2   ;Field     ;
                Name=Document Date;
                ToolTipML=ENU=Specifies the date when the service document was created.;
                ApplicationArea=#Service;
                SourceExpr="Document Date";
                ImplicitType=Date }

    { 180 ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                ImplicitType=Code20 }

    { 17  ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                ImplicitType=Code20 }

    { 195 ;2   ;Field     ;
                Name=Payment Terms Code;
                ToolTipML=ENU=Specifies the code that represents the service header payment terms, which are used to calculate the due date and payment discount date.;
                ApplicationArea=#Service;
                SourceExpr="Payment Terms Code";
                Importance=Promoted;
                ImplicitType=Code10 }

    { 196 ;2   ;Field     ;
                Name=Due Date;
                ToolTipML=ENU=Specifies when the related invoice must be paid.;
                ApplicationArea=#Service;
                SourceExpr="Due Date";
                Importance=Promoted;
                ImplicitType=Date }

    { 197 ;2   ;Field     ;
                Name=Payment Discount %;
                ToolTipML=ENU=Specifies the percentage of payment discount given, if the customer pays by the date entered in the Pmt. Discount Date field.;
                ApplicationArea=#Service;
                SourceExpr="Payment Discount %";
                ImplicitType=Decimal }

    { 198 ;2   ;Field     ;
                Name=Pmt. Discount Date;
                ToolTipML=ENU=Specifies the date on which the amount in the entry must be paid for a payment discount to be granted.;
                ApplicationArea=#Service;
                SourceExpr="Pmt. Discount Date";
                ImplicitType=Date }

    { 200 ;2   ;Field     ;
                Name=Payment Method Code;
                ToolTipML=ENU=Specifies the code for the method the customer uses to pay for the service.;
                ApplicationArea=#Service;
                SourceExpr="Payment Method Code";
                ImplicitType=Code10 }

    { 168 ;2   ;Field     ;
                Name=Currency Code;
                ToolTipML=ENU=Specifies the currency code for various amounts on the service lines.;
                ApplicationArea=#Service;
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               if ChangeExchangeRate.RUNMODAL = ACTION::OK then begin
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               end;
                               CLEAR(ChangeExchangeRate);
                             END;

                ImplicitType=Code10 }

    { 202 ;2   ;Field     ;
                Name=Prices Including VAT;
                ToolTipML=ENU=Specifies if the Unit Price and Line Amount fields on document lines should be shown with or without VAT.;
                ApplicationArea=#Service;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;

                ImplicitType=Boolean }

    { 205 ;2   ;Field     ;
                Name=VAT Bus. Posting Group;
                ToolTipML=ENU=Specifies the code for the VAT business posting group of the bill-to customer.;
                ApplicationArea=#Service;
                SourceExpr="VAT Bus. Posting Group";
                ImplicitType=Code20 }

    { 1906801201;1;Group  ;
                Name=Shipping;
                CaptionML=ENU=Shipping }

    { 6   ;2   ;Field     ;
                Name=Ship-to Code;
                ToolTipML=ENU=Specifies a code for an alternate shipment address if you want to ship to another address than the one that has been entered automatically. This field is also used in case of drop shipment.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             ShiptoCodeOnAfterValidate;
                           END;

                ImplicitType=Code10 }

    { 51  ;2   ;Field     ;
                Name=Ship-to Name;
                ToolTipML=ENU=Specifies the name of the customer to whom you will ship the service on the document.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Name";
                ImplicitType=Text50 }

    { 133 ;2   ;Field     ;
                Name=Ship-to Address;
                ToolTipML=ENU=Specifies the address that the items are shipped to.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Address";
                ImplicitType=Text50 }

    { 141 ;2   ;Field     ;
                Name=Ship-to Address 2;
                ToolTipML=ENU=Specifies an additional part of the ship-to address, in case it is a long address.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Address 2";
                Importance=Additional;
                ImplicitType=Text50 }

    { 147 ;2   ;Field     ;
                Name=Ship-to Post Code;
                ToolTipML=ENU=Specifies the postal code of the address.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Post Code";
                Importance=Promoted;
                ImplicitType=Code20 }

    { 149 ;2   ;Field     ;
                Name=Ship-to City;
                ToolTipML=ENU=Specifies the city of the address that the items are shipped to.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to City";
                ImplicitType=Text30 }

    { 157 ;2   ;Field     ;
                Name=Ship-to Contact;
                ToolTipML=ENU=Specifies the name of the contact person at the place where the service should be shipped to.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Contact";
                Importance=Promoted;
                ImplicitType=Text50 }

    { 159 ;2   ;Field     ;
                Name=Ship-to Phone;
                CaptionML=ENU=Ship-to Phone;
                ToolTipML=ENU=Specifies the phone number of the address where the service items in the order are located.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Phone";
                ImplicitType=Text30 }

    { 123 ;2   ;Field     ;
                Name=Ship-to Phone 2;
                ToolTipML=ENU=Specifies an additional phone number of the address.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Phone 2";
                Importance=Additional;
                ImplicitType=Text30 }

    { 8   ;2   ;Field     ;
                Name=Ship-to E-Mail;
                ToolTipML=ENU=Specifies the email address of the customer to whom the service will be shipped.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to E-Mail";
                ImplicitType=Text80 }

    { 207 ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the code of the location (for example, warehouse or distribution center) of the items specified on the service item lines.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                ImplicitType=Code10 }

    { 161 ;2   ;Field     ;
                Name=Shipping Advice;
                ToolTipML=ENU=Specifies information about whether the customer will accept a partial shipment of the order.;
                ApplicationArea=#Service;
                SourceExpr="Shipping Advice";
                ImplicitType=Option }

    { 16  ;2   ;Field     ;
                Name=Shipment Method Code;
                ToolTipML=ENU=Specifies the delivery conditions of the related shipment, such as free on board (FOB).;
                ApplicationArea=#Service;
                SourceExpr="Shipment Method Code";
                ImplicitType=Code10 }

    { 19  ;2   ;Field     ;
                Name=Shipping Agent Code;
                ToolTipML=ENU=Specifies the code for the shipping agent who is transporting the items.;
                ApplicationArea=#Service;
                SourceExpr="Shipping Agent Code";
                ImplicitType=Code10 }

    { 22  ;2   ;Field     ;
                Name=Shipping Agent Service Code;
                ToolTipML=ENU=Specifies the code for the service, such as a one-day delivery, that is offered by the shipping agent.;
                ApplicationArea=#Service;
                SourceExpr="Shipping Agent Service Code";
                ImplicitType=Code10 }

    { 23  ;2   ;Field     ;
                Name=Shipping Time;
                ToolTipML=ENU=Specifies how long it takes from when the items are shipped from the warehouse to when they are delivered.;
                ApplicationArea=#Service;
                SourceExpr="Shipping Time";
                ImplicitType=DateFormula }

    { 1901902601;1;Group  ;
                Name=Details;
                CaptionML=ENU=Details }

    { 26  ;2   ;Field     ;
                Name=Warning Status;
                ToolTipML=ENU=Specifies the response time warning status for the order.;
                ApplicationArea=#Service;
                SourceExpr="Warning Status";
                Importance=Promoted;
                ImplicitType=Option }

    { 78  ;2   ;Field     ;
                Name=Link Service to Service Item;
                ToolTipML=ENU=Specifies that service lines for items and resources must be linked to a service item line.;
                ApplicationArea=#Service;
                SourceExpr="Link Service to Service Item";
                ImplicitType=Boolean }

    { 124 ;2   ;Field     ;
                Name=Allocated Hours;
                ToolTipML=ENU=Specifies the number of hours allocated to the items in this service order.;
                ApplicationArea=#Service;
                SourceExpr="Allocated Hours";
                ImplicitType=Decimal }

    { 24  ;2   ;Field     ;
                Name=No. of Allocations;
                ToolTipML=ENU=Specifies the number of resource allocations to service items in this order.;
                ApplicationArea=#Service;
                SourceExpr="No. of Allocations";
                ImplicitType=Integer }

    { 71  ;2   ;Field     ;
                Name=No. of Unallocated Items;
                ToolTipML=ENU=Specifies the number of service items in this order that are not allocated to resources.;
                ApplicationArea=#Service;
                SourceExpr="No. of Unallocated Items";
                ImplicitType=Integer }

    { 110 ;2   ;Field     ;
                Name=Service Zone Code;
                ToolTipML=ENU=Specifies the service zone code of the customer's ship-to address in the service order.;
                ApplicationArea=#Service;
                SourceExpr="Service Zone Code";
                ImplicitType=Code10 }

    { 68  ;2   ;Field     ;
                Name=Order Date;
                ToolTipML=ENU=Specifies the date when the order was created.;
                ApplicationArea=#Service;
                SourceExpr="Order Date";
                OnValidate=BEGIN
                             OrderDateOnAfterValidate;
                           END;

                ImplicitType=Date }

    { 85  ;2   ;Field     ;
                Name=Order Time;
                ToolTipML=ENU=Specifies the time when the service order was created.;
                ApplicationArea=#Service;
                SourceExpr="Order Time";
                OnValidate=BEGIN
                             OrderTimeOnAfterValidate;
                           END;

                ImplicitType=Time }

    { 39  ;2   ;Field     ;
                Name=Expected Finishing Date;
                ToolTipML=ENU=Specifies the date when service on the order is expected to be finished.;
                ApplicationArea=#Service;
                SourceExpr="Expected Finishing Date";
                ImplicitType=Date }

    { 53  ;2   ;Field     ;
                Name=Starting Date;
                ToolTipML=ENU=Specifies the starting date of the service, that is, the date when the order status changes from Pending, to In Process for the first time.;
                ApplicationArea=#Service;
                SourceExpr="Starting Date";
                Importance=Promoted;
                ImplicitType=Date }

    { 55  ;2   ;Field     ;
                Name=Starting Time;
                ToolTipML=ENU=Specifies the starting time of the service, that is, the time when the order status changes from Pending, to In Process for the first time.;
                ApplicationArea=#Service;
                SourceExpr="Starting Time";
                ImplicitType=Time }

    { 31  ;2   ;Field     ;
                Name=Actual Response Time (Hours);
                ToolTipML=ENU=Specifies the number of hours from order creation, to when the service order status changes from Pending, to In Process.;
                ApplicationArea=#Service;
                SourceExpr="Actual Response Time (Hours)";
                ImplicitType=Decimal }

    { 182 ;2   ;Field     ;
                Name=Finishing Date;
                ToolTipML=ENU=Specifies the finishing date of the service, that is, the date when the Status field changes to Finished.;
                ApplicationArea=#Service;
                SourceExpr="Finishing Date";
                ImplicitType=Date }

    { 184 ;2   ;Field     ;
                Name=Finishing Time;
                ToolTipML=ENU=Specifies the finishing time of the service, that is, the time when the Status field changes to Finished.;
                ApplicationArea=#Service;
                SourceExpr="Finishing Time";
                OnValidate=BEGIN
                             FinishingTimeOnAfterValidate;
                           END;

                ImplicitType=Time }

    { 77  ;2   ;Field     ;
                Name=Service Time (Hours);
                ToolTipML=ENU=Specifies the total time in hours that the service specified in the order has taken.;
                ApplicationArea=#Service;
                SourceExpr="Service Time (Hours)";
                ImplicitType=Decimal }

    { 1903873101;1;Group  ;
                Name=[ Foreign Trade];
                CaptionML=ENU=" Foreign Trade" }

    { 179 ;2   ;Field     ;
                Name=EU 3-Party Trade;
                ToolTipML=ENU=Specifies if the service document is part of a three-party trade.;
                ApplicationArea=#Service;
                SourceExpr="EU 3-Party Trade";
                ImplicitType=Boolean }

    { 186 ;2   ;Field     ;
                Name=Transaction Type;
                ToolTipML=ENU=Specifies the code for the transaction type assigned to the service document.;
                ApplicationArea=#Service;
                SourceExpr="Transaction Type";
                ImplicitType=Code10 }

    { 189 ;2   ;Field     ;
                Name=Transaction Specification;
                ToolTipML=ENU=Specifies the transaction specification code used on the service document.;
                ApplicationArea=#Service;
                SourceExpr="Transaction Specification";
                ImplicitType=Code10 }

    { 187 ;2   ;Field     ;
                Name=Transport Method;
                ToolTipML=ENU=Specifies the code for the transport method to be used for shipment.;
                ApplicationArea=#Service;
                SourceExpr="Transport Method";
                ImplicitType=Code10 }

    { 188 ;2   ;Field     ;
                Name=Exit Point;
                ToolTipML=ENU=Specifies the point of exit through which you ship the items out of your country/region, for reporting to Intrastat.;
                ApplicationArea=#Service;
                SourceExpr="Exit Point";
                ImplicitType=Code10 }

    { 192 ;2   ;Field     ;
                Name=Area;
                ToolTipML=ENU=Specifies the code for the area where the customer company is located.;
                ApplicationArea=#Service;
                SourceExpr=Area;
                ImplicitType=Code10 }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1902018507;1;Part   ;
                Name=Part1902018507;
                ApplicationArea=#Service;
                SubPageLink="No."=FIELD("Bill-to Customer No.");
                PagePartID="Customer Statistics FactBox";
                Visible=FALSE;
                PartType=Page }

    { 1900316107;1;Part   ;
                Name=Part1900316107;
                ApplicationArea=#Service;
                SubPageLink="No."=FIELD("Customer No.");
                PagePartID="Customer Details FactBox";
                Visible=FALSE;
                PartType=Page }

    { 1907829707;1;Part   ;
                Name=Part1907829707;
                ApplicationArea=#Service;
                SubPageLink="No."=FIELD("Customer No.");
                PagePartID="Service Hist. Sell-to FactBox";
                Visible=TRUE;
                PartType=Page }

    { 1902613707;1;Part   ;
                Name=Part1902613707;
                ApplicationArea=#Service;
                SubPageLink="No."=FIELD("Bill-to Customer No.");
                PagePartID="Service Hist. Bill-to FactBox";
                Visible=FALSE;
                PartType=Page }

    { 1906530507;1;Part   ;
                Name=Part1906530507;
                ApplicationArea=#Service;
                SubPageLink="Document Type"=FIELD("Document Type"),
                            "Document No."=FIELD("Document No."),
                            "Line No."=FIELD("Line No.");
                PagePartID="Service Item Line FactBox";
                ProviderID=46;
                Visible=TRUE;
                PartType=Page }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ServHeader@1004 : Record "Service Header";
      ServOrderMgt@1008 : Codeunit ServOrderManagement;
      ServLogMgt@1009 : Codeunit ServLogManagement;
      UserMgt@1013 : Codeunit "User Setup Management";
      ChangeExchangeRate@1002 : Page "Change Exchange Rate";
      DocumentIsPosted@1000 : Boolean;
      OpenPostedServiceOrderQst@1001 : TextConst 'ENU=The order has been posted and moved to the Posted Service Invoices window.\\Do you want to open the posted invoice?';

    LOCAL PROCEDURE CustomerNoOnAfterValidate@19016267();
    BEGIN
      if GETFILTER("Customer No.") = xRec."Customer No." then
        if "Customer No." <> xRec."Customer No." then
          SETRANGE("Customer No.");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE BilltoCustomerNoOnAfterValidat@19044114();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE MaxLaborUnitPriceOnAfterValida@19060830();
    BEGIN
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShiptoCodeOnAfterValidate@19065015();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OrderTimeOnAfterValidate@19056033();
    BEGIN
      UpdateResponseDateTime;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OrderDateOnAfterValidate@19077772();
    BEGIN
      UpdateResponseDateTime;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE FinishingTimeOnAfterValidate@19010371();
    BEGIN
      CurrPage.UPDATE(true);
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@17();
    VAR
      OrderServiceHeader@1003 : Record "Service Header";
      ServiceInvoiceHeader@1000 : Record "Service Invoice Header";
      InstructionMgt@1002 : Codeunit "Instruction Mgt.";
    BEGIN
      if not OrderServiceHeader.GET("Document Type","No.") then begin
        ServiceInvoiceHeader.SETRANGE("No.",ServHeader."Last Posting No.");
        if ServiceInvoiceHeader.FINDFIRST then
          if InstructionMgt.ShowConfirm(OpenPostedServiceOrderQst,InstructionMgt.ShowPostedConfirmationMessageCode) then
            PAGE.RUN(PAGE::"Posted Service Invoice",ServiceInvoiceHeader);
      end;
    END;

    BEGIN
    END.
  }
}

