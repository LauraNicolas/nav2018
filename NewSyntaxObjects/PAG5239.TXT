OBJECT Page 5239 Empl. Ledger Entries Preview
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Employee Entries Preview;
    SourceTable="Employee Ledger Entry";
    DataCaptionFields="Employee No.";
    PageType=List;
    SourceTableTemporary=true;
    OnAfterGetRecord=BEGIN
                       CalcAmounts(AmountFCY,AmountLCY,RemainingAmountFCY,RemainingAmountLCY,OriginalAmountFCY,OriginalAmountLCY);
                     END;

    ActionList=ACTIONS
    {
      { 3       ;    ;ActionContainer;
                      Name=ActionContainer3;
                      ActionContainerType=RelatedInformation }
      { 7       ;1   ;ActionGroup;
                      Name=Ent&ry;
                      CaptionML=ENU=Ent&ry;
                      Image=Entry }
      { 5       ;2   ;Action    ;
                      Name=Dimensions;
                      ShortCutKey=Shift+Ctrl+D;
                      Ellipsis=true;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Dimensions;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GenJnlPostPreview@1000 : Codeunit "Gen. Jnl.-Post Preview";
                               BEGIN
                                 GenJnlPostPreview.ShowDimensions(DATABASE::"Employee Ledger Entry","Entry No.","Dimension Set ID");
                               END;
                                }
      { 25      ;2   ;Action    ;
                      Name=SetDimensionFilter;
                      Ellipsis=true;
                      CaptionML=ENU=Set Dimension Filter;
                      ToolTipML=ENU=Limit the entries according to dimension filters that you specify.;
                      ApplicationArea=#Suite;
                      Image=Filter;
                      OnAction=BEGIN
                                 SETFILTER("Dimension Set ID",DimensionSetIDFilter.LookupFilter);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 21  ;2   ;Field     ;
                Name=Posting Date;
                ToolTipML=ENU=Specifies the employee entry's posting date.;
                ApplicationArea=#BasicHR;
                SourceExpr="Posting Date";
                ImplicitType=Date }

    { 20  ;2   ;Field     ;
                Name=Document Type;
                ToolTipML=ENU=Specifies the document type that the employee entry belongs to.;
                ApplicationArea=#BasicHR;
                SourceExpr="Document Type";
                ImplicitType=Option }

    { 19  ;2   ;Field     ;
                Name=Document No.;
                ToolTipML=ENU=Specifies the employee entry's document number.;
                ApplicationArea=#BasicHR;
                SourceExpr="Document No.";
                ImplicitType=Code20 }

    { 18  ;2   ;Field     ;
                Name=Employee No.;
                ToolTipML=ENU=Specifies the number of the employee that the entry is linked to.;
                ApplicationArea=#BasicHR;
                SourceExpr="Employee No.";
                ImplicitType=Code20 }

    { 17  ;2   ;Field     ;
                Name=Message to Recipient;
                ToolTipML=ENU=Specifies the message exported to the payment file when you use the Export Payments to File function in the Payment Journal window.;
                ApplicationArea=#BasicHR;
                SourceExpr="Message to Recipient";
                ImplicitType=Text140 }

    { 16  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the employee entry.;
                ApplicationArea=#BasicHR;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 15  ;2   ;Field     ;
                Name=Payment Method Code;
                ToolTipML=ENU=Specifies the payment method that was used to make the payment that resulted in the entry.;
                ApplicationArea=#BasicHR;
                SourceExpr="Payment Method Code";
                ImplicitType=Code10 }

    { 12  ;2   ;Field     ;
                Name=OriginalAmountFCY;
                CaptionML=ENU=Original Amount;
                ToolTipML=ENU=Specifies the amount on the employee ledger entry before you post.;
                ApplicationArea=#BasicHR;
                SourceExpr=OriginalAmountFCY;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrilldownAmounts(2);
                            END;

                ImplicitType=Decimal }

    { 11  ;2   ;Field     ;
                Name=OriginalAmountLCY;
                CaptionML=ENU=Original Amount (LCY);
                ApplicationArea=#BasicHR;
                SourceExpr=OriginalAmountLCY;
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrilldownAmounts(2);
                            END;

                ImplicitType=Decimal }

    { 10  ;2   ;Field     ;
                Name=AmountFCY;
                CaptionML=ENU=Amount;
                ToolTipML=ENU=Specifies the net amount of all the lines in the employee entry.;
                ApplicationArea=#BasicHR;
                SourceExpr=AmountFCY;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrilldownAmounts(0);
                            END;

                ImplicitType=Decimal }

    { 9   ;2   ;Field     ;
                Name=AmountLCY;
                CaptionML=ENU=Amount (LCY);
                ToolTipML=ENU=Specifies the amount, in local currency, relating to the employee ledger entry;
                ApplicationArea=#BasicHR;
                SourceExpr=AmountLCY;
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrilldownAmounts(0);
                            END;

                ImplicitType=Decimal }

    { 22  ;2   ;Field     ;
                Name=RemainingAmountFCY;
                CaptionML=ENU=Remaining Amount;
                ToolTipML=ENU=Specifies the remaining amount on the employee ledger entry before you post.;
                ApplicationArea=#BasicHR;
                SourceExpr=RemainingAmountFCY;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrilldownAmounts(1);
                            END;

                ImplicitType=Decimal }

    { 13  ;2   ;Field     ;
                Name=RemainingAmountLCY;
                CaptionML=ENU=Remaining Amount (LCY);
                ApplicationArea=#BasicHR;
                SourceExpr=RemainingAmountLCY;
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrilldownAmounts(1);
                            END;

                ImplicitType=Decimal }

    { 8   ;2   ;Field     ;
                Name=Bal. Account Type;
                ToolTipML=ENU=Specifies the type of balancing account that is used for the entry.;
                ApplicationArea=#BasicHR;
                SourceExpr="Bal. Account Type";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Option }

    { 6   ;2   ;Field     ;
                Name=Bal. Account No.;
                ToolTipML=ENU=Specifies the number of the balancing account that is used for the entry.;
                ApplicationArea=#BasicHR;
                SourceExpr="Bal. Account No.";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Open;
                ToolTipML=ENU=Specifies whether the amount on the entry has been fully paid or there is still a remaining amount that must be applied to.;
                ApplicationArea=#BasicHR;
                SourceExpr=Open;
                ImplicitType=Boolean }

    { 2   ;2   ;Field     ;
                Name=Entry No.;
                ToolTipML=ENU=Specifies the entry number that is assigned to the entry.;
                ApplicationArea=#BasicHR;
                SourceExpr="Entry No.";
                ImplicitType=Integer }

  }
  CODE
  {
    VAR
      TempDetailedEmplLedgEntry@1002 : TEMPORARY Record "Detailed Employee Ledger Entry";
      DimensionSetIDFilter@1008 : Page "Dimension Set ID Filter";
      AmountFCY@1007 : Decimal;
      AmountLCY@1006 : Decimal;
      RemainingAmountFCY@1005 : Decimal;
      RemainingAmountLCY@1004 : Decimal;
      OriginalAmountLCY@1003 : Decimal;
      OriginalAmountFCY@1000 : Decimal;

    [External]
    PROCEDURE Set@4(VAR TempEmplLedgerEntry@1000 : TEMPORARY Record "Employee Ledger Entry";VAR TempDetailedEmplLedgEntry2@1001 : TEMPORARY Record "Detailed Employee Ledger Entry");
    BEGIN
      if TempEmplLedgerEntry.FINDSET then
        repeat
          Rec := TempEmplLedgerEntry;
          INSERT;
        until TempEmplLedgerEntry.NEXT = 0;

      if TempDetailedEmplLedgEntry2.FINDSET then
        repeat
          TempDetailedEmplLedgEntry := TempDetailedEmplLedgEntry2;
          TempDetailedEmplLedgEntry.INSERT;
        until TempDetailedEmplLedgEntry2.NEXT = 0;
    END;

    LOCAL PROCEDURE CalcAmounts@2(VAR AmountFCY@1000 : Decimal;VAR AmountLCY@1001 : Decimal;VAR RemainingAmountFCY@1002 : Decimal;VAR RemainingAmountLCY@1003 : Decimal;VAR OriginalAmountFCY@1004 : Decimal;VAR OriginalAmountLCY@1005 : Decimal);
    BEGIN
      AmountFCY := 0;
      AmountLCY := 0;
      RemainingAmountLCY := 0;
      RemainingAmountFCY := 0;
      OriginalAmountLCY := 0;
      OriginalAmountFCY := 0;

      TempDetailedEmplLedgEntry.SETRANGE("Employee Ledger Entry No.","Entry No.");
      if TempDetailedEmplLedgEntry.FINDSET then
        repeat
          if TempDetailedEmplLedgEntry."Entry Type" = TempDetailedEmplLedgEntry."Entry Type"::"Initial Entry" then begin
            OriginalAmountFCY += TempDetailedEmplLedgEntry.Amount;
            OriginalAmountLCY += TempDetailedEmplLedgEntry."Amount (LCY)";
          end;
          if not (TempDetailedEmplLedgEntry."Entry Type" = TempDetailedEmplLedgEntry."Entry Type"::Application)
          then begin
            AmountFCY += TempDetailedEmplLedgEntry.Amount;
            AmountLCY += TempDetailedEmplLedgEntry."Amount (LCY)";
          end;
          RemainingAmountFCY += TempDetailedEmplLedgEntry.Amount;
          RemainingAmountLCY += TempDetailedEmplLedgEntry."Amount (LCY)";
        until TempDetailedEmplLedgEntry.NEXT = 0;
    END;

    LOCAL PROCEDURE DrilldownAmounts@3(AmountType@1000 : 'Amount,"Remaining Amount","Original Amount"');
    VAR
      DetailedEmplEntriesPreview@1001 : Page "Detailed Empl. Entries Preview";
    BEGIN
      case AmountType of
        AmountType::Amount:
          TempDetailedEmplLedgEntry.SETFILTER("Entry Type",'<>%1',
            TempDetailedEmplLedgEntry."Entry Type"::Application);
        AmountType::"Original Amount":
          TempDetailedEmplLedgEntry.SETRANGE("Entry Type",TempDetailedEmplLedgEntry."Entry Type"::"Initial Entry");
        AmountType::"Remaining Amount":
          TempDetailedEmplLedgEntry.SETRANGE("Entry Type");
      end;
      DetailedEmplEntriesPreview.Set(TempDetailedEmplLedgEntry);
      DetailedEmplEntriesPreview.RUNMODAL;
      CLEAR(DetailedEmplEntriesPreview);
    END;

    BEGIN
    END.
  }
}

