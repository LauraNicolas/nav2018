OBJECT Page 5128 Close Opportunity
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Close Opportunity;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable="Opportunity Entry";
    DataCaptionExpr=Caption;
    PageType=Card;
    OnInit=BEGIN
             OptionLostEnable := true;
             OptionWonEnable := true;
             SalesQuoteEnable := true;
             CalcdCurrentValueLCYEnable := true;
           END;

    OnOpenPage=BEGIN
                 UpdateEditable;
                 "Cancel Old To Do" := true;
                 IsOnMobile := CURRENTCLIENTTYPE = CLIENTTYPE::Phone;
               END;

    OnQueryClosePage=BEGIN
                       if CloseAction in [ACTION::OK,ACTION::LookupOK] then begin
                         CheckStatus;
                         FinishWizard;
                       end;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 10      ;1   ;Action    ;
                      Name=Finish;
                      CaptionML=ENU=&Finish;
                      ToolTipML=ENU=Finish closing the opportunity.;
                      ApplicationArea=#RelationshipMgmt;
                      Promoted=true;
                      Visible=IsOnMobile;
                      InFooterBar=true;
                      Image=Approve;
                      OnAction=BEGIN
                                 CheckStatus;
                                 FinishWizard;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 15      ;1   ;Action    ;
                      Name=SalesQuote;
                      CaptionML=ENU=&Sales Quote;
                      ToolTipML=ENU=Create a sales quote based on the opportunity.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      Enabled=SalesQuoteEnable;
                      InFooterBar=true;
                      Image=Quote;
                      OnAction=VAR
                                 SalesHeader@1001 : Record "Sales Header";
                               BEGIN
                                 if Opp.GET("Opportunity No.") then begin
                                   Opp.ShowQuote;
                                   if SalesHeader.GET(SalesHeader."Document Type"::Quote,Opp."Sales Document No.") then begin
                                     "Calcd. Current Value (LCY)" := GetSalesDocValue(SalesHeader);
                                     CurrPage.UPDATE;
                                   end;
                                 end;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General;
                GroupType=Group }

    { 12  ;2   ;Field     ;
                Name=OptionWon;
                CaptionML=ENU=Opportunity Status;
                ToolTipML=ENU=Specifies the action that was taken when the entry was last updated. There are six options:;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Action Taken";
                ValuesAllowed=[Won;Lost];
                OnValidate=VAR
                             CloseOpportunityCode@1000 : Record "Close Opportunity Code";
                           BEGIN
                             if "Action Taken" = "Action Taken"::Lost then
                               LostActionTakenOnValidate;
                             if "Action Taken" = "Action Taken"::Won then
                               WonActionTakenOnValidate;

                             case "Action Taken" of
                               "Action Taken"::Won:
                                 begin
                                   CalcdCurrentValueLCYEnable := true;
                                   if Opp.GET("Opportunity No.") then
                                     SalesQuoteEnable := Opp."Sales Document No." <> '';
                                 end;
                               "Action Taken"::Lost:
                                 begin
                                   CalcdCurrentValueLCYEnable := false;
                                   SalesQuoteEnable := false;
                                 end;
                             end;

                             UpdateEstimates;
                             case "Action Taken" of
                               "Action Taken"::Won:
                                 begin
                                   CloseOpportunityCode.SETRANGE(Type,CloseOpportunityCode.Type::Won);
                                   if CloseOpportunityCode.COUNT = 1 then begin
                                     CloseOpportunityCode.FINDFIRST;
                                     "Close Opportunity Code" := CloseOpportunityCode.Code;
                                   end;
                                 end;
                               "Action Taken"::Lost:
                                 begin
                                   CloseOpportunityCode.SETRANGE(Type,CloseOpportunityCode.Type::Lost);
                                   if CloseOpportunityCode.COUNT = 1 then begin
                                     CloseOpportunityCode.FINDFIRST;
                                     "Close Opportunity Code" := CloseOpportunityCode.Code;
                                   end;
                                 end;
                             end;
                           END;

                ImplicitType=Option }

    { 4   ;2   ;Field     ;
                Name=Close Opportunity Code;
                CaptionML=ENU=Close Opportunity Code;
                ToolTipML=ENU=Specifies the code for closing the opportunity.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Close Opportunity Code";
                ImplicitType=Code10 }

    { 18  ;2   ;Field     ;
                Name=Date of Change;
                CaptionML=ENU=Closing Date;
                ToolTipML=ENU=Specifies the date this opportunity entry was last changed.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Date of Change";
                ImplicitType=Date }

    { 20  ;2   ;Field     ;
                Name=Calcd. Current Value (LCY);
                CaptionML=ENU=Sales (LCY);
                ToolTipML=ENU=Specifies the calculated current value of the opportunity entry.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Calcd. Current Value (LCY)";
                Enabled=CalcdCurrentValueLCYEnable;
                ImplicitType=Decimal }

    { 19  ;2   ;Field     ;
                Name=Cancel Old To Do;
                CaptionML=ENU=Cancel Old Tasks;
                ToolTipML=ENU=Specifies a task is to be cancelled from the opportunity.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Cancel Old To Do";
                ImplicitType=Boolean }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=untitled';
      Cont@1004 : Record Contact;
      Opp@1009 : Record Opportunity;
      CalcdCurrentValueLCYEnable@19043799 : Boolean INDATASET;
      SalesQuoteEnable@19040029 : Boolean INDATASET;
      OptionWonEnable@19038038 : Boolean INDATASET;
      OptionLostEnable@19026309 : Boolean INDATASET;
      IsNotAValidSelectionErr@19003950 : TextConst '@@@=%1 - Field Value;ENU=%1 is not a valid selection.';
      IsOnMobile@1001 : Boolean;

    LOCAL PROCEDURE Caption@1() : Text[260];
    VAR
      CaptionStr@1000 : Text[260];
    BEGIN
      if Cont.GET("Contact Company No.") then
        CaptionStr := COPYSTR(Cont."No." + ' ' + Cont.Name,1,MAXSTRLEN(CaptionStr));
      if Cont.GET("Contact No.") then
        CaptionStr := COPYSTR(CaptionStr + ' ' + Cont."No." + ' ' + Cont.Name,1,MAXSTRLEN(CaptionStr));
      if CaptionStr = '' then
        CaptionStr := Text000;

      exit(CaptionStr);
    END;

    LOCAL PROCEDURE UpdateEditable@3();
    BEGIN
      if GETFILTER("Action Taken") <> '' then begin
        OptionWonEnable := false;
        OptionLostEnable := false;
      end;
    END;

    LOCAL PROCEDURE WonActionTakenOnValidate@19006664();
    BEGIN
      if not OptionWonEnable then
        ERROR(IsNotAValidSelectionErr,"Action Taken");
    END;

    LOCAL PROCEDURE LostActionTakenOnValidate@19063471();
    BEGIN
      if not OptionLostEnable then
        ERROR(IsNotAValidSelectionErr,"Action Taken");
    END;

    BEGIN
    END.
  }
}

