OBJECT Page 589 XBRL Linkbases
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=XBRL Linkbases;
    SourceTable="XBRL Linkbase";
    DataCaptionFields="XBRL Taxonomy Name","XBRL Schema Line No.";
    PageType=List;
    AutoSplitKey=true;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 11      ;1   ;ActionGroup;
                      Name=&Linkbase;
                      CaptionML=ENU=&Linkbase;
                      Image=Links }
      { 15      ;2   ;Action    ;
                      Name=Import;
                      Ellipsis=true;
                      CaptionML=ENU=Import;
                      ToolTipML=ENU=Import an XBRL taxonomy into your company database by first importing one or more linkbases in .xml format. After you have completed the import of both schemas and linkbases and have applied the linkbases to the schema, you can set up the lines and map the general ledger accounts in the chart of accounts to the appropriate taxonomy lines.;
                      ApplicationArea=#XBRL;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 XBRLImport@1002 : Codeunit "XBRL Import Taxonomy Spec. 2";
                                 XMLExists@1000 : Boolean;
                               BEGIN
                                 CALCFIELDS(XML);
                                 XMLExists := XML.HASVALUE;
                                 "File Name" := COPYSTR(FileMgt.BLOBImport(TempBlob,'*.xml'),1,MAXSTRLEN("File Name"));
                                 if "File Name" = '' then
                                   exit;
                                 XML := TempBlob.Blob;
                                 if XMLExists then
                                   if not CONFIRM(Text001,false) then
                                     exit;
                                 CurrPage.SAVERECORD;
                                 COMMIT;
                                 if CONFIRM(Text002,false) then
                                   case Type of
                                     Type::Label:
                                       XBRLImport.ImportLabels(Rec);
                                     Type::Presentation:
                                       XBRLImport.ImportPresentation(Rec);
                                     Type::Calculation:
                                       XBRLImport.ImportCalculation(Rec);
                                     Type::Reference:
                                       XBRLImport.ImportReference(Rec);
                                   end;
                               END;
                                }
      { 16      ;2   ;Action    ;
                      Name=E&xport;
                      Ellipsis=true;
                      CaptionML=ENU=E&xport;
                      ToolTipML=ENU=Export the XBRL linkbase to an .xml file for reuse in another database.;
                      ApplicationArea=#XBRL;
                      Image=Export;
                      OnAction=BEGIN
                                 CALCFIELDS(XML);
                                 if XML.HASVALUE then begin
                                   TempBlob.Blob := XML;
                                   FileMgt.BLOBExport(TempBlob,'*.xml',true);
                                 end;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 14      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 20      ;2   ;Action    ;
                      Name=Apply to Taxonomy;
                      CaptionML=ENU=Apply to Taxonomy;
                      ToolTipML=ENU=Apply the linkbase to a schema.;
                      ApplicationArea=#XBRL;
                      Image=ApplyTemplate;
                      OnAction=VAR
                                 XBRLLinkbase@1002 : Record "XBRL Linkbase";
                                 XBRLImportTaxonomySpec2@1000 : Codeunit "XBRL Import Taxonomy Spec. 2";
                               BEGIN
                                 if CONFIRM(STRSUBSTNO(Text003,"XBRL Taxonomy Name"),false) then begin
                                   XBRLLinkbase := Rec;
                                   CurrPage.SETSELECTIONFILTER(XBRLLinkbase);
                                   with XBRLLinkbase do
                                     if FIND('-') then
                                       repeat
                                         case Type of
                                           Type::Label:
                                             XBRLImportTaxonomySpec2.ImportLabels(XBRLLinkbase);
                                           Type::Calculation:
                                             XBRLImportTaxonomySpec2.ImportCalculation(XBRLLinkbase);
                                           Type::Presentation:
                                             XBRLImportTaxonomySpec2.ImportPresentation(XBRLLinkbase);
                                           Type::Reference:
                                             XBRLImportTaxonomySpec2.ImportReference(XBRLLinkbase);
                                         end;
                                       until NEXT = 0;
                                 end;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies which information the linkbase contains. Label: Info about the elements of the taxonomy. Presentation: Info about the structure of the elements. Calculation: Info about which elements roll up to which elements. Reference: Info about what data to enter on each line in the taxonomy.;
                ApplicationArea=#XBRL;
                SourceExpr=Type;
                ImplicitType=Option }

    { 2   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the XBRL linkbase schema.;
                ApplicationArea=#XBRL;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 12  ;2   ;Field     ;
                Name=XML File Imported;
                CaptionML=ENU=XML File Imported;
                ToolTipML=ENU=Specifies if an XBRL linkbase has been imported.;
                ApplicationArea=#XBRL;
                SourceExpr=XML.HASVALUE;
                Editable=FALSE }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=Do you want to replace the existing linkbase?';
      Text002@1001 : TextConst 'ENU=Do you want to apply the linkbase to the taxonomy now?';
      Text003@1002 : TextConst 'ENU=Do you want to apply the selected linkbases to taxonomy %1?';
      TempBlob@1004 : Record TempBlob;
      FileMgt@1003 : Codeunit "File Management";

    BEGIN
    END.
  }
}

