OBJECT Table 8616 Config. Package Field
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               DeleteConfigFieldMapping;
             END;

    CaptionML=ENU=Config. Package Field;
  }
  FIELDS
  {
    { 1   ;   ;Package Code        ;Code20        ;TableRelation="Config. Package";
                                                   CaptionML=ENU=Package Code;
                                                   NotBlank=true }
    { 2   ;   ;Table ID            ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE ("Object Type"=CONST(Table));
                                                   CaptionML=ENU=Table ID;
                                                   NotBlank=true }
    { 3   ;   ;Field ID            ;Integer       ;TableRelation=IF (Dimension=CONST(false)) Field."No." WHERE (TableNo=FIELD("Table ID"));
                                                   CaptionML=ENU=Field ID;
                                                   NotBlank=true }
    { 4   ;   ;Field Name          ;Text30        ;CaptionML=ENU=Field Name }
    { 5   ;   ;Field Caption       ;Text250       ;CaptionML=ENU=Field Caption }
    { 6   ;   ;Validate Field      ;Boolean       ;OnValidate=BEGIN
                                                                if not Dimension then begin
                                                                  if xRec."Validate Field" and not "Validate Field" and "Primary Key" then
                                                                    ERROR(Text000,"Field Caption");
                                                                  UpdateFieldErrors;
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Validate Field }
    { 7   ;   ;Include Field       ;Boolean       ;OnValidate=BEGIN
                                                                if not Dimension then begin
                                                                  if xRec."Include Field" and not "Include Field" and "Primary Key" then
                                                                    ERROR(Text000,"Field Caption");
                                                                  "Validate Field" := "Include Field";
                                                                  UpdateFieldErrors;
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Include Field }
    { 8   ;   ;Localize Field      ;Boolean       ;CaptionML=ENU=Localize Field }
    { 9   ;   ;Relation Table ID   ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE ("Object Type"=CONST(Table));
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Relation Table ID;
                                                   Editable=false }
    { 10  ;   ;Relation Table Caption;Text250     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Name" WHERE ("Object Type"=CONST(Table),
                                                                                                             "Object ID"=FIELD("Relation Table ID")));
                                                   CaptionML=ENU=Relation Table Caption;
                                                   Editable=false }
    { 11  ;   ;Dimension           ;Boolean       ;CaptionML=ENU=Dimension;
                                                   Editable=false }
    { 12  ;   ;Primary Key         ;Boolean       ;CaptionML=ENU=Primary Key;
                                                   Editable=false }
    { 13  ;   ;Processing Order    ;Integer       ;CaptionML=ENU=Processing Order }
    { 14  ;   ;Create Missing Codes;Boolean       ;OnValidate=BEGIN
                                                                if "Create Missing Codes" then
                                                                  TESTFIELD("Relation Table ID");
                                                              END;

                                                   CaptionML=ENU=Create Missing Codes }
    { 15  ;   ;Mapping Exists      ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Config. Field Mapping" WHERE ("Package Code"=FIELD("Package Code"),
                                                                                                    "Table ID"=FIELD("Table ID"),
                                                                                                    "Field ID"=FIELD("Field ID")));
                                                   CaptionML=ENU=Mapping Exists;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"Package Code","Table ID","Field ID"    ;Clustered=true }
    {    ;"Package Code","Table ID","Include Field" }
    {    ;"Package Code","Table ID","Validate Field" }
    {    ;"Package Code","Table ID","Processing Order" }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 is part of the primary key and must be included.';
      Text001@1001 : TextConst 'ENU=%1 value ''%2'' does not exist.';
      Text002@1003 : TextConst 'ENU=Updating validation errors';

    LOCAL PROCEDURE UpdateFieldErrors@1000();
    VAR
      ConfigPackageData@1002 : Record "Config. Package Data";
      ConfigPackageField@1007 : Record "Config. Package Field";
      TempConfigPackageTable@1004 : TEMPORARY Record "Config. Package Table";
      ConfigPackageMgt@1000 : Codeunit "Config. Package Management";
      ConfigValidateMgt@1005 : Codeunit "Config. Validate Management";
      ConfigProgressBar@1006 : Codeunit "Config. Progress Bar";
      RecRef@1001 : RecordRef;
      FieldRef@1003 : FieldRef;
    BEGIN
      if not Dimension then begin
        RecRef.OPEN("Table ID",true);
        FieldRef := RecRef.FIELD("Field ID");

        ConfigPackageData.SETRANGE("Package Code","Package Code");
        ConfigPackageData.SETRANGE("Table ID","Table ID");
        ConfigPackageData.SETRANGE("Field ID","Field ID");
        if ConfigPackageData.FINDSET then begin
          ConfigProgressBar.Init(ConfigPackageData.COUNT,1,Text002);
          repeat
            ConfigProgressBar.Update(ConfigPackageData.Value);
            ConfigPackageMgt.CleanFieldError(ConfigPackageData);
            if "Include Field" then begin
              ConfigPackageMgt.FieldError(ConfigPackageData,ConfigValidateMgt.EvaluateValue(FieldRef,ConfigPackageData.Value,false),0);
              if "Validate Field" then begin
                CLEAR(TempConfigPackageTable);
                ConfigPackageField.INIT;
                ConfigPackageField.RESET;
                ConfigPackageField.SETRANGE("Package Code","Package Code");
                ConfigPackageField.SETRANGE("Table ID","Table ID");
                ConfigPackageField.SETRANGE("Field ID","Field ID");
                if not ConfigPackageMgt.ValidateFieldRelation(ConfigPackageField,TempConfigPackageTable) then
                  ConfigPackageMgt.FieldError(ConfigPackageData,STRSUBSTNO(Text001,FieldRef.CAPTION,ConfigPackageData.Value),0);
              end;
            end;
          until ConfigPackageData.NEXT = 0;
          ConfigProgressBar.Close;
        end;
      end;
    END;

    LOCAL PROCEDURE DeleteConfigFieldMapping@1();
    VAR
      ConfigFieldMapping@1000 : Record "Config. Field Mapping";
    BEGIN
      ConfigFieldMapping.SETRANGE("Package Code","Package Code");
      ConfigFieldMapping.SETRANGE("Table ID","Table ID");
      ConfigFieldMapping.SETRANGE("Field ID","Field ID");
      ConfigFieldMapping.DELETEALL;
    END;

    PROCEDURE GetRelationTablesID@2() Result : Text;
    VAR
      TableRelationsMetadata@1002 : Record "Table Relations Metadata";
    BEGIN
      TableRelationsMetadata.SETRANGE("Table ID","Table ID");
      TableRelationsMetadata.SETRANGE("Field No.","Field ID");
      if TableRelationsMetadata.FINDSET then
        repeat
          Result += FORMAT(TableRelationsMetadata."Related Table ID") + '|';
        until TableRelationsMetadata.NEXT = 0;
      exit(DELCHR(Result,'>','|'));
    END;

    BEGIN
    END.
  }
}

