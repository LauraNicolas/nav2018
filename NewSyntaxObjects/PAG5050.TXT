OBJECT Page 5050 Contact Card
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Contact Card;
    SourceTable=Contact;
    PageType=ListPlus;
    PromotedActionCategoriesML=ENU=New,Process,Report,Related Information;
    OnInit=BEGIN
             OrganizationalLevelCodeEnable := true;
             CompanyNameEnable := true;
             VATRegistrationNoEnable := true;
             CurrencyCodeEnable := true;
             ActionVisible := CURRENTCLIENTTYPE = CLIENTTYPE::Windows;
           END;

    OnOpenPage=VAR
                 OfficeManagement@1002 : Codeunit "Office Management";
               BEGIN
                 IsOfficeAddin := OfficeManagement.IsAvailable;
                 CRMIntegrationEnabled := CRMIntegrationManagement.IsCRMIntegrationEnabled;
                 SetNoFieldVisible;
               END;

    OnNewRecord=VAR
                  Contact@1001 : Record Contact;
                BEGIN
                  if GETFILTER("Company No.") <> '' then begin
                    "Company No." := GETRANGEMAX("Company No.");
                    Type := Type::Person;
                    Contact.GET("Company No.");
                    InheritCompanyToPersonData(Contact);
                  end;
                END;

    OnAfterGetCurrRecord=VAR
                           CRMCouplingManagement@1001 : Codeunit "CRM Coupling Management";
                         BEGIN
                           if CRMIntegrationEnabled then begin
                             CRMIsCoupledToRecord := CRMCouplingManagement.IsRecordCoupledToCRM(RECORDID);
                             if "No." <> xRec."No." then
                               CRMIntegrationManagement.SendResultNotification(Rec);
                           end;

                           xRec := Rec;
                           EnableFields;

                           if Type = Type::Person then
                             IntegrationFindCustomerNo
                           else
                             IntegrationCustomerNo := '';
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 76      ;1   ;ActionGroup;
                      Name=C&ontact;
                      CaptionML=ENU=C&ontact;
                      Image=ContactPerson }
      { 82      ;2   ;ActionGroup;
                      Name=Comp&any;
                      CaptionML=ENU=Comp&any;
                      Enabled=CompanyGroupEnabled;
                      Image=Company }
      { 85      ;3   ;Action    ;
                      Name=Business Relations;
                      CaptionML=ENU=Business Relations;
                      ToolTipML=ENU=View or edit the contact's business relations, such as customers, vendors, banks, lawyers, consultants, competitors, and so on.;
                      ApplicationArea=#RelationshipMgmt;
                      Image=BusinessRelation;
                      OnAction=VAR
                                 ContactBusinessRelationRec@1000 : Record "Contact Business Relation";
                               BEGIN
                                 TESTFIELD(Type,Type::Company);
                                 ContactBusinessRelationRec.SETRANGE("Contact No.","Company No.");
                                 PAGE.RUN(PAGE::"Contact Business Relations",ContactBusinessRelationRec);
                               END;
                                }
      { 83      ;3   ;Action    ;
                      Name=Industry Groups;
                      CaptionML=ENU=Industry Groups;
                      ToolTipML=ENU=View or edit the industry groups, such as Retail or Automobile, that the contact belongs to.;
                      ApplicationArea=#RelationshipMgmt;
                      Image=IndustryGroups;
                      OnAction=VAR
                                 ContactIndustryGroupRec@1001 : Record "Contact Industry Group";
                               BEGIN
                                 TESTFIELD(Type,Type::Company);
                                 ContactIndustryGroupRec.SETRANGE("Contact No.","Company No.");
                                 PAGE.RUN(PAGE::"Contact Industry Groups",ContactIndustryGroupRec);
                               END;
                                }
      { 84      ;3   ;Action    ;
                      Name=Web Sources;
                      CaptionML=ENU=Web Sources;
                      ToolTipML=ENU=View a list of the web sites with information about the contact.;
                      ApplicationArea=#RelationshipMgmt;
                      Image=Web;
                      OnAction=VAR
                                 ContactWebSourceRec@1001 : Record "Contact Web Source";
                               BEGIN
                                 TESTFIELD(Type,Type::Company);
                                 ContactWebSourceRec.SETRANGE("Contact No.","Company No.");
                                 PAGE.RUN(PAGE::"Contact Web Sources",ContactWebSourceRec);
                               END;
                                }
      { 80      ;2   ;ActionGroup;
                      Name=P&erson;
                      CaptionML=ENU=P&erson;
                      Enabled=PersonGroupEnabled;
                      Image=User }
      { 81      ;3   ;Action    ;
                      Name=Job Responsibilities;
                      CaptionML=ENU=Job Responsibilities;
                      ToolTipML=ENU=View or edit the contact's job responsibilities.;
                      ApplicationArea=#RelationshipMgmt;
                      Image=Job;
                      OnAction=VAR
                                 ContJobResp@1001 : Record "Contact Job Responsibility";
                               BEGIN
                                 TESTFIELD(Type,Type::Person);
                                 ContJobResp.SETRANGE("Contact No.","No.");
                                 PAGE.RUNMODAL(PAGE::"Contact Job Responsibilities",ContJobResp);
                               END;
                                }
      { 87      ;2   ;Action    ;
                      Name=Pro&files;
                      CaptionML=ENU=Pro&files;
                      ToolTipML=ENU=Open the Profile Questionnaires window.;
                      ApplicationArea=#RelationshipMgmt;
                      Image=Answers;
                      OnAction=VAR
                                 ProfileManagement@1001 : Codeunit ProfileManagement;
                               BEGIN
                                 ProfileManagement.ShowContactQuestionnaireCard(Rec,'',0);
                               END;
                                }
      { 89      ;2   ;Action    ;
                      Name=&Picture;
                      CaptionML=ENU=&Picture;
                      ToolTipML=ENU=View or add a picture of the contact person or, for example, the company's logo.;
                      ApplicationArea=#Suite,#RelationshipMgmt;
                      RunObject=Page "Contact Picture";
                      RunPageLink="No."=FIELD("No.");
                      Visible=ActionVisible;
                      Image=Picture }
      { 90      ;2   ;Action    ;
                      Name=Co&mments;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Rlshp. Mgt. Comment Sheet";
                      RunPageLink="Table Name"=CONST(Contact),
                                  "No."=FIELD("No."),
                                  "Sub No."=CONST(0);
                      Image=ViewComments }
      { 91      ;2   ;ActionGroup;
                      Name=Alternati&ve Address;
                      CaptionML=ENU=Alternati&ve Address;
                      Image=Addresses }
      { 92      ;3   ;Action    ;
                      Name=Card;
                      CaptionML=ENU=Card;
                      ToolTipML=ENU=View or change detailed information about the contact.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Contact Alt. Address List";
                      RunPageLink="Contact No."=FIELD("No.");
                      Image=EditLines }
      { 93      ;3   ;Action    ;
                      Name=Date Ranges;
                      CaptionML=ENU=Date Ranges;
                      ToolTipML=ENU=Specify date ranges that apply to the contact's alternate address.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Contact Alt. Addr. Date Ranges";
                      RunPageLink="Contact No."=FIELD("No.");
                      Image=DateRange }
      { 23      ;1   ;ActionGroup;
                      Name=ActionGroupCRM;
                      CaptionML=ENU=Dynamics 365 for Sales;
                      Visible=CRMIntegrationEnabled;
                      Enabled=(Type <> Type::Company) AND ("Company No." <> '') }
      { 21      ;2   ;Action    ;
                      Name=CRMGotoContact;
                      CaptionML=ENU=Contact;
                      ToolTipML=ENU=Open the coupled Dynamics 365 for Sales contact.;
                      ApplicationArea=#Suite;
                      Image=CoupledContactPerson;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit "CRM Integration Management";
                               BEGIN
                                 CRMIntegrationManagement.ShowCRMEntityFromRecordID(RECORDID);
                               END;
                                }
      { 29      ;2   ;Action    ;
                      Name=CRMSynchronizeNow;
                      AccessByPermission=TableData "CRM Integration Record"=IM;
                      CaptionML=ENU=Synchronize;
                      ToolTipML=ENU=Send or get updated data to or from Dynamics 365 for Sales.;
                      ApplicationArea=#Suite;
                      Image=Refresh;
                      OnAction=VAR
                                 CRMIntegrationManagement@1001 : Codeunit "CRM Integration Management";
                               BEGIN
                                 CRMIntegrationManagement.UpdateOneNow(RECORDID);
                               END;
                                }
      { 27      ;2   ;ActionGroup;
                      Name=Coupling;
                      CaptionML=[@@@=Coupling is a noun;
                                 ENU=Coupling];
                      ToolTipML=ENU=Create, change, or delete a coupling between the Microsoft Dynamics NAV record and a Dynamics 365 for Sales record.;
                      Image=LinkAccount }
      { 25      ;3   ;Action    ;
                      Name=ManageCRMCoupling;
                      AccessByPermission=TableData "CRM Integration Record"=IM;
                      CaptionML=ENU=Set Up Coupling;
                      ToolTipML=ENU=Create or modify the coupling to a Dynamics 365 for Sales contact.;
                      ApplicationArea=#Suite;
                      Image=LinkAccount;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit "CRM Integration Management";
                               BEGIN
                                 CRMIntegrationManagement.DefineCoupling(RECORDID);
                               END;
                                }
      { 19      ;3   ;Action    ;
                      Name=DeleteCRMCoupling;
                      AccessByPermission=TableData "CRM Integration Record"=IM;
                      CaptionML=ENU=Delete Coupling;
                      ToolTipML=ENU=Delete the coupling to a Dynamics 365 for Sales contact.;
                      ApplicationArea=#Suite;
                      Enabled=CRMIsCoupledToRecord;
                      Image=UnLinkAccount;
                      OnAction=VAR
                                 CRMCouplingManagement@1000 : Codeunit "CRM Coupling Management";
                               BEGIN
                                 CRMCouplingManagement.RemoveCoupling(RECORDID);
                               END;
                                }
      { 45      ;2   ;Action    ;
                      Name=ShowLog;
                      CaptionML=ENU=Synchronization Log;
                      ToolTipML=ENU=View integration synchronization jobs for the contact table.;
                      ApplicationArea=#Suite;
                      Image=Log;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit "CRM Integration Management";
                               BEGIN
                                 CRMIntegrationManagement.ShowLog(RECORDID);
                               END;
                                }
      { 5       ;1   ;ActionGroup;
                      Name=Related Information;
                      CaptionML=ENU=Related Information;
                      Image=Users }
      { 79      ;2   ;Action    ;
                      Name=Relate&d Contacts;
                      CaptionML=ENU=Relate&d Contacts;
                      ToolTipML=ENU=View a list of all contacts.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Contact List";
                      RunPageLink="Company No."=FIELD("Company No.");
                      Image=Users }
      { 100     ;2   ;Action    ;
                      Name=Segmen&ts;
                      CaptionML=ENU=Segmen&ts;
                      ToolTipML=ENU=View the segments that are related to the contact.;
                      ApplicationArea=#RelationshipMgmt;
                      RunObject=Page "Contact Segment List";
                      RunPageView=SORTING("Contact No.","Segment No.");
                      RunPageLink="Contact Company No."=FIELD("Company No."),
                                  "Contact No."=FILTER(<>''),
                                  "Contact No."=FIELD(FILTER("Lookup Contact No."));
                      Image=Segment }
      { 86      ;2   ;Action    ;
                      Name=Mailing &Groups;
                      CaptionML=ENU=Mailing &Groups;
                      ToolTipML=ENU=View or edit the mailing groups that the contact is assigned to, for example, for sending price lists or Christmas cards.;
                      ApplicationArea=#RelationshipMgmt;
                      RunObject=Page "Contact Mailing Groups";
                      RunPageLink="Contact No."=FIELD("No.");
                      Image=DistributionGroup }
      { 99      ;2   ;Action    ;
                      Name=C&ustomer/Vendor/Bank Acc.;
                      CaptionML=ENU=C&ustomer/Vendor/Bank Acc.;
                      ToolTipML=ENU=View the related customer, vendor, or bank account that is associated with the current record.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ContactReference;
                      OnAction=BEGIN
                                 ShowCustVendBank;
                               END;
                                }
      { 63      ;2   ;Action    ;
                      Name=Online Map;
                      CaptionML=ENU=Online Map;
                      ToolTipML=ENU=View the address on an online map.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Map;
                      OnAction=BEGIN
                                 DisplayMap;
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Name=Office Customer/Vendor;
                      CaptionML=ENU=Customer/Vendor;
                      ToolTipML=ENU=View the related customer, vendor, or bank account.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=IsOfficeAddin;
                      Image=ContactReference;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ShowCustVendBank;
                               END;
                                }
      { 7       ;1   ;ActionGroup;
                      Name=Tasks;
                      CaptionML=ENU=Tasks;
                      Image=Task }
      { 96      ;2   ;Action    ;
                      Name=T&asks;
                      CaptionML=ENU=T&asks;
                      ToolTipML=ENU=View all marketing tasks that involve the contact person.;
                      ApplicationArea=#RelationshipMgmt;
                      RunObject=Page "Task List";
                      RunPageView=SORTING("Contact Company No.",Date,"Contact No.",Closed);
                      RunPageLink="Contact Company No."=FIELD("Company No."),
                                  "Contact No."=FIELD(FILTER("Lookup Contact No.")),
                                  "System To-do Type"=FILTER("Contact Attendee");
                      Image=TaskList }
      { 3       ;2   ;Action    ;
                      Name=Oppo&rtunities;
                      CaptionML=ENU=Oppo&rtunities;
                      ToolTipML=ENU=View the sales opportunities that are handled by salespeople for the contact. Opportunities must involve a contact and can be linked to campaigns.;
                      ApplicationArea=#RelationshipMgmt;
                      RunObject=Page "Opportunity List";
                      RunPageView=SORTING("Contact Company No.","Contact No.");
                      RunPageLink="Contact Company No."=FIELD("Company No."),
                                  "Contact No."=FILTER(<>''),
                                  "Contact No."=FIELD(FILTER("Lookup Contact No."));
                      Image=OpportunityList }
      { 42      ;2   ;Action    ;
                      Name=Postponed &Interactions;
                      CaptionML=ENU=Postponed &Interactions;
                      ToolTipML=ENU=View postponed interactions for the contact.;
                      ApplicationArea=#RelationshipMgmt;
                      RunObject=Page "Postponed Interactions";
                      RunPageView=SORTING("Contact Company No.",Date,"Contact No.",Canceled,"Initiated By","Attempt Failed");
                      RunPageLink="Contact Company No."=FIELD("Company No."),
                                  "Contact No."=FILTER(<>''),
                                  "Contact No."=FIELD(FILTER("Lookup Contact No."));
                      Visible=ActionVisible;
                      Image=PostponedInteractions }
      { 9       ;1   ;ActionGroup;
                      Name=Documents;
                      CaptionML=ENU=Documents;
                      Image=Documents }
      { 116     ;2   ;Action    ;
                      Name=SalesQuotes;
                      CaptionML=ENU=Sales &Quotes;
                      ToolTipML=ENU=View sales quotes that exist for the contact.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Sales Quotes";
                      RunPageView=SORTING("Document Type","Sell-to Contact No.");
                      RunPageLink="Sell-to Contact No."=FIELD("No.");
                      Promoted=true;
                      Image=Quote;
                      PromotedCategory=Process }
      { 11      ;1   ;ActionGroup;
                      Name=History;
                      CaptionML=ENU=History;
                      Image=History }
      { 95      ;2   ;Action    ;
                      Name=Interaction Log E&ntries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Interaction Log E&ntries;
                      ToolTipML=ENU=View a list of the interactions that you have logged, for example, when you create an interaction, print a cover sheet, a sales order, and so on.;
                      ApplicationArea=#RelationshipMgmt;
                      RunObject=Page "Interaction Log Entries";
                      RunPageView=SORTING("Contact Company No.",Date,"Contact No.",Canceled,"Initiated By","Attempt Failed");
                      RunPageLink="Contact Company No."=FIELD("Company No."),
                                  "Contact No."=FILTER(<>''),
                                  "Contact No."=FIELD(FILTER("Lookup Contact No."));
                      Image=InteractionLog }
      { 88      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      ToolTipML=ENU=View statistical information, such as the value of posted entries, for the record.;
                      ApplicationArea=#RelationshipMgmt;
                      RunObject=Page "Contact Statistics";
                      RunPageLink="No."=FIELD("No.");
                      Promoted=true;
                      Image=Statistics;
                      PromotedCategory=Process }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 75      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 102     ;2   ;Action    ;
                      Name=Launch &Web Source;
                      CaptionML=ENU=Launch &Web Source;
                      ToolTipML=ENU=Search for information about the contact online.;
                      ApplicationArea=#RelationshipMgmt;
                      Visible=ActionVisible;
                      Image=LaunchWeb;
                      OnAction=VAR
                                 ContactWebSource@1001 : Record "Contact Web Source";
                               BEGIN
                                 ContactWebSource.SETRANGE("Contact No.","Company No.");
                                 if PAGE.RUNMODAL(PAGE::"Web Source Launch",ContactWebSource) = ACTION::LookupOK then
                                   ContactWebSource.Launch;
                               END;
                                }
      { 103     ;2   ;Action    ;
                      Name=Print Cover &Sheet;
                      CaptionML=ENU=Print Cover &Sheet;
                      ToolTipML=ENU=View cover sheets to send to your contact.;
                      ApplicationArea=#RelationshipMgmt;
                      Image=PrintCover;
                      OnAction=VAR
                                 Cont@1001 : Record Contact;
                               BEGIN
                                 Cont := Rec;
                                 Cont.SETRECFILTER;
                                 REPORT.RUN(REPORT::"Contact - Cover Sheet",true,false,Cont);
                               END;
                                }
      { 105     ;2   ;ActionGroup;
                      Name=Create as;
                      CaptionML=ENU=Create as;
                      Image=CustomerContact }
      { 106     ;3   ;Action    ;
                      Name=CreateCustomer;
                      CaptionML=ENU=Customer;
                      ToolTipML=ENU=Create the contact as a customer.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Customer;
                      OnAction=BEGIN
                                 CreateCustomer(ChooseCustomerTemplate);
                               END;
                                }
      { 107     ;3   ;Action    ;
                      Name=CreateVendor;
                      CaptionML=ENU=Vendor;
                      ToolTipML=ENU=Create the contact as a vendor.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Vendor;
                      OnAction=BEGIN
                                 CreateVendor;
                               END;
                                }
      { 108     ;3   ;Action    ;
                      Name=CreateBank;
                      AccessByPermission=TableData "Bank Account"=R;
                      CaptionML=ENU=Bank;
                      ToolTipML=ENU=Create the contact as a bank.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Bank;
                      OnAction=BEGIN
                                 CreateBankAccount;
                               END;
                                }
      { 109     ;2   ;ActionGroup;
                      Name=Link with existing;
                      CaptionML=ENU=Link with existing;
                      Visible=ActionVisible;
                      Image=Links }
      { 110     ;3   ;Action    ;
                      Name=Customer;
                      CaptionML=ENU=Customer;
                      ToolTipML=ENU=Link the contact to an existing customer.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Customer;
                      OnAction=BEGIN
                                 CreateCustomerLink;
                               END;
                                }
      { 111     ;3   ;Action    ;
                      Name=Vendor;
                      CaptionML=ENU=Vendor;
                      ToolTipML=ENU=Link the contact to an existing vendor.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Vendor;
                      OnAction=BEGIN
                                 CreateVendorLink;
                               END;
                                }
      { 112     ;3   ;Action    ;
                      Name=Bank;
                      AccessByPermission=TableData "Bank Account"=R;
                      CaptionML=ENU=Bank;
                      ToolTipML=ENU=Link the contact to an existing bank.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Bank;
                      OnAction=BEGIN
                                 CreateBankAccountLink;
                               END;
                                }
      { 153     ;2   ;Action    ;
                      Name=Apply Template;
                      Ellipsis=true;
                      CaptionML=ENU=Apply Template;
                      ToolTipML=ENU=Select a defined template to quickly create a new record.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Image=ApplyTemplate;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ConfigTemplateMgt@1000 : Codeunit "Config. Template Management";
                                 RecRef@1001 : RecordRef;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 ConfigTemplateMgt.UpdateFromTemplateSelection(RecRef);
                               END;
                                }
      { 17      ;2   ;Action    ;
                      Name=CreateAsCustomer;
                      CaptionML=ENU=Create as Customer;
                      ToolTipML=ENU=Create a new customer based on this contact.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=IsOfficeAddin;
                      Image=Customer;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CreateCustomer(ChooseCustomerTemplate);
                               END;
                                }
      { 15      ;2   ;Action    ;
                      Name=CreateAsVendor;
                      CaptionML=ENU=Create as Vendor;
                      ToolTipML=ENU=Create a new vendor based on this contact.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=IsOfficeAddin;
                      Image=Vendor;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CreateVendor;
                               END;
                                }
      { 77      ;1   ;Action    ;
                      Name=Create &Interaction;
                      AccessByPermission=TableData Attachment=R;
                      CaptionML=ENU=Create &Interaction;
                      ToolTipML=ENU=Create an interaction with a specified contact.;
                      ApplicationArea=#RelationshipMgmt;
                      Promoted=true;
                      Image=CreateInteraction;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CreateInteraction;
                               END;
                                }
      { 6       ;1   ;Action    ;
                      Name=Create Opportunity;
                      CaptionML=ENU=Create Opportunity;
                      ToolTipML=ENU=Register a sales opportunity for the contact.;
                      ApplicationArea=#RelationshipMgmt;
                      RunObject=Page "Opportunity Card";
                      RunPageLink="Contact No."=FIELD("No."),
                                  "Contact Company No."=FIELD("Company No.");
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=NewOpportunity;
                      PromotedCategory=Process;
                      RunPageMode=Create }
      { 1900000006;0 ;ActionContainer;
                      Name=ActionContainer1900000006;
                      ActionContainerType=Reports }
      { 1907415106;1 ;Action    ;
                      Name=ContactCoverSheet;
                      CaptionML=ENU=Contact Cover Sheet;
                      ToolTipML=ENU=Print or save cover sheets to send to one or more of your contacts.;
                      ApplicationArea=#RelationshipMgmt;
                      Promoted=true;
                      Image=Report;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 Cont := Rec;
                                 Cont.SETRECFILTER;
                                 REPORT.RUN(REPORT::"Contact Cover Sheet",true,false,Cont);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the contact number.;
                ApplicationArea=#All;
                SourceExpr="No.";
                Importance=Additional;
                Visible=NoFieldVisible;
                OnAssistEdit=BEGIN
                               if AssistEdit(xRec) then
                                 CurrPage.UPDATE;
                             END;

                ImplicitType=Code20 }

    { 10  ;2   ;Field     ;
                Name=Name;
                AssistEdit=true;
                ToolTipML=ENU=Specifies the name of the contact. If the contact is a person, you can click the field to see the Name Details window.;
                ApplicationArea=#All;
                SourceExpr=Name;
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               MODIFY;
                               COMMIT;
                               Cont.SETRANGE("No.","No.");
                               if Type = Type::Person then begin
                                 CLEAR(NameDetails);
                                 NameDetails.SETTABLEVIEW(Cont);
                                 NameDetails.SETRECORD(Cont);
                                 NameDetails.RUNMODAL;
                               end else begin
                                 CLEAR(CompanyDetails);
                                 CompanyDetails.SETTABLEVIEW(Cont);
                                 CompanyDetails.SETRECORD(Cont);
                                 CompanyDetails.RUNMODAL;
                               end;
                               GET("No.");
                               CurrPage.UPDATE;
                             END;

                ImplicitType=Text50;
                ShowMandatory=TRUE }

    { 4   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the type of contact, either company or person.;
                ApplicationArea=#All;
                SourceExpr=Type;
                OnValidate=BEGIN
                             TypeOnAfterValidate;
                           END;

                ImplicitType=Option }

    { 44  ;2   ;Field     ;
                Name=Company No.;
                ToolTipML=ENU=Specifies the number for the contact's company.;
                ApplicationArea=#All;
                SourceExpr="Company No.";
                Importance=Additional;
                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name=Company Name;
                AssistEdit=true;
                ToolTipML=ENU=Specifies the name of the company. If the contact is a person, Specifies the name of the company for which this contact works. This field is not editable.;
                ApplicationArea=#All;
                SourceExpr="Company Name";
                Importance=Promoted;
                Enabled=CompanyNameEnable;
                OnAssistEdit=BEGIN
                               LookupCompany;
                             END;

                ImplicitType=Text50 }

    { 125 ;2   ;Field     ;
                Name=IntegrationCustomerNo;
                CaptionML=ENU=Integration Customer No.;
                ToolTipML=ENU=Specifies the number of a customer that is integrated through Dynamics 365 for Sales.;
                ApplicationArea=#All;
                SourceExpr=IntegrationCustomerNo;
                Visible=FALSE;
                OnValidate=VAR
                             Customer@1000 : Record Customer;
                             ContactBusinessRelation@1001 : Record "Contact Business Relation";
                           BEGIN
                             if not (IntegrationCustomerNo = '') then begin
                               Customer.GET(IntegrationCustomerNo);
                               ContactBusinessRelation.SETCURRENTKEY("Link to Table","No.");
                               ContactBusinessRelation.SETRANGE("Link to Table",ContactBusinessRelation."Link to Table"::Customer);
                               ContactBusinessRelation.SETRANGE("No.",Customer."No.");
                               if ContactBusinessRelation.FINDFIRST then
                                 VALIDATE("Company No.",ContactBusinessRelation."Contact No.");
                             end else
                               VALIDATE("Company No.",'');
                           END;

                ImplicitType=Code20 }

    { 20  ;2   ;Field     ;
                Name=Search Name;
                ToolTipML=ENU=Specifies the search name of the contact. You can use this field to search for a contact when you cannot remember the contact number.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Search Name";
                Importance=Additional;
                ImplicitType=Code50 }

    { 24  ;2   ;Field     ;
                Name=Salesperson Code;
                ToolTipML=ENU=Specifies the code of the salesperson who normally handles this contact.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Salesperson Code";
                Importance=Additional;
                ImplicitType=Code20 }

    { 117 ;2   ;Field     ;
                Name=Salutation Code;
                ToolTipML=ENU=Specifies the salutation code that will be used when you interact with the contact. The salutation code is only used in Word documents. To see a list of the salutation codes already defined, click the field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Salutation Code";
                Importance=Additional;
                ImplicitType=Code10 }

    { 22  ;2   ;Field     ;
                Name=Organizational Level Code;
                ToolTipML=ENU=Specifies the organizational code for the contact, for example, top management. This field is valid for persons only.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Organizational Level Code";
                Importance=Additional;
                Enabled=OrganizationalLevelCodeEnable;
                ImplicitType=Code10 }

    { 26  ;2   ;Field     ;
                Name=Last Date Modified;
                ToolTipML=ENU=Specifies the date when the contact card was last modified. This field is not editable.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Last Date Modified";
                Importance=Additional;
                ImplicitType=Date }

    { 28  ;2   ;Field     ;
                Name=Date of Last Interaction;
                ToolTipML=ENU=Specifies the date of the last interaction involving the contact, for example, a received or sent mail, e-mail, or phone call. This field is not editable.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Date of Last Interaction";
                Importance=Additional;
                OnDrillDown=VAR
                              InteractionLogEntry@1000 : Record "Interaction Log Entry";
                            BEGIN
                              InteractionLogEntry.SETCURRENTKEY("Contact Company No.",Date,"Contact No.",Canceled,"Initiated By","Attempt Failed");
                              InteractionLogEntry.SETRANGE("Contact Company No.","Company No.");
                              InteractionLogEntry.SETFILTER("Contact No.","Lookup Contact No.");
                              InteractionLogEntry.SETRANGE("Attempt Failed",false);
                              if InteractionLogEntry.FINDLAST then
                                PAGE.RUN(0,InteractionLogEntry);
                            END;

                ImplicitType=Date }

    { 30  ;2   ;Field     ;
                Name=Last Date Attempted;
                ToolTipML=ENU=Specifies the date when the contact was last contacted, for example, when you tried to call the contact, with or without success. This field is not editable.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Last Date Attempted";
                Importance=Additional;
                OnDrillDown=VAR
                              InteractionLogEntry@1000 : Record "Interaction Log Entry";
                            BEGIN
                              InteractionLogEntry.SETCURRENTKEY("Contact Company No.",Date,"Contact No.",Canceled,"Initiated By","Attempt Failed");
                              InteractionLogEntry.SETRANGE("Contact Company No.","Company No.");
                              InteractionLogEntry.SETFILTER("Contact No.","Lookup Contact No.");
                              InteractionLogEntry.SETRANGE("Initiated By",InteractionLogEntry."Initiated By"::Us);
                              if InteractionLogEntry.FINDLAST then
                                PAGE.RUN(0,InteractionLogEntry);
                            END;

                ImplicitType=Date }

    { 32  ;2   ;Field     ;
                Name=Next Task Date;
                ToolTipML=ENU=Specifies the date of the next task involving the contact.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Next Task Date";
                Importance=Additional;
                ImplicitType=Date }

    { 40  ;2   ;Field     ;
                Name=Exclude from Segment;
                ToolTipML=ENU=Specifies if the contact should be excluded from segments:;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Exclude from Segment";
                Importance=Additional;
                ImplicitType=Boolean }

    { 1902768601;1;Group  ;
                Name=Communication;
                CaptionML=ENU=Communication }

    { 37  ;2   ;Group     ;
                Name=Group37;
                CaptionML=ENU=Address;
                GroupType=Group }

    { 34  ;3   ;Field     ;
                Name=Address;
                ToolTipML=ENU=Specifies the contact's address.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Address;
                ImplicitType=Text50 }

    { 16  ;3   ;Field     ;
                Name=Address 2;
                ToolTipML=ENU=Specifies additional address information.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Address 2";
                ImplicitType=Text50 }

    { 18  ;3   ;Field     ;
                Name=Post Code;
                ToolTipML=ENU=Specifies the post code for the contact.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Post Code";
                Importance=Promoted;
                ImplicitType=Code20 }

    { 14  ;3   ;Field     ;
                Name=City;
                ToolTipML=ENU=Specifies the city where the contact is located.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=City;
                ImplicitType=Text30 }

    { 12  ;3   ;Field     ;
                Name=Country/Region Code;
                ToolTipML=ENU=Specifies the country/region code for the contact.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Country/Region Code";
                ImplicitType=Code10 }

    { 43  ;3   ;Field     ;
                Name=ShowMap;
                ToolTipML=ENU=Specifies the contact's address on your preferred map website.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShowMapLbl;
                Editable=FALSE;
                Style=StrongAccent;
                StyleExpr=TRUE;
                OnDrillDown=BEGIN
                              CurrPage.UPDATE(true);
                              DisplayMap;
                            END;

                ImplicitType=TextConst;
                ShowCaption=false }

    { 39  ;2   ;Group     ;
                Name=ContactDetails;
                CaptionML=ENU=Contact;
                GroupType=Group }

    { 35  ;3   ;Field     ;
                Name=Phone No.;
                ToolTipML=ENU=Specifies the contact's phone number.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Phone No.";
                ImplicitType=Text30 }

    { 36  ;3   ;Field     ;
                Name=Mobile Phone No.;
                ToolTipML=ENU=Specifies the contact's mobile telephone number.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Mobile Phone No.";
                ImplicitType=Text30 }

    { 46  ;3   ;Field     ;
                Name=E-Mail;
                ExtendedDatatype=E-Mail;
                ToolTipML=ENU=Specifies the email address of the contact.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="E-Mail";
                Importance=Promoted;
                ImplicitType=Text80 }

    { 38  ;3   ;Field     ;
                Name=Fax No.;
                ToolTipML=ENU=Specifies the contact's fax number.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Fax No.";
                Importance=Additional;
                ImplicitType=Text30 }

    { 48  ;3   ;Field     ;
                Name=Home Page;
                ToolTipML=ENU=Specifies the contact's home page address. You can enter a maximum of 80 characters, both numbers and letters.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Home Page";
                ImplicitType=Text80 }

    { 126 ;3   ;Field     ;
                Name=Correspondence Type;
                ToolTipML=ENU=Specifies the preferred type of correspondence for the interaction. NOTE: If you use the Web client, you must not select the Hard Copy option because printing is not possible from the web client.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Correspondence Type";
                Importance=Additional;
                ImplicitType=Option }

    { 33  ;3   ;Field     ;
                Name=Language Code;
                ToolTipML=ENU=Specifies the language code for the contact.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Language Code";
                Importance=Promoted;
                ImplicitType=Code10 }

    { 1907468901;1;Group  ;
                Name=Foreign Trade;
                CaptionML=ENU=Foreign Trade }

    { 64  ;2   ;Field     ;
                Name=Currency Code;
                ToolTipML=ENU=Specifies the currency code for the contact.;
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Importance=Promoted;
                Enabled=CurrencyCodeEnable;
                ImplicitType=Code10 }

    { 68  ;2   ;Field     ;
                Name=Territory Code;
                ToolTipML=ENU=Specifies the territory code for the contact.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Territory Code";
                Importance=Additional;
                ImplicitType=Code10 }

    { 66  ;2   ;Field     ;
                Name=VAT Registration No.;
                ToolTipML=ENU=Specifies the contact's VAT registration number. This field is valid for companies only.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Registration No.";
                Importance=Additional;
                Enabled=VATRegistrationNoEnable;
                OnDrillDown=VAR
                              VATRegistrationLogMgt@1000 : Codeunit "VAT Registration Log Mgt.";
                            BEGIN
                              VATRegistrationLogMgt.AssistEditContactVATReg(Rec);
                            END;

                ImplicitType=Text20 }

    { 72  ;1   ;Part      ;
                Name=Profile Questionnaire;
                CaptionML=ENU=Profile Questionnaire;
                ApplicationArea=#RelationshipMgmt;
                SubPageLink="Contact No."=FIELD("No.");
                PagePartID="Contact Card Subform";
                PartType=Page }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 41  ;1   ;Part      ;
                Name=Part41;
                ApplicationArea=#Basic,#Suite;
                SubPageLink="No."=FIELD("No.");
                PagePartID="Contact Picture";
                Visible=NOT IsOfficeAddin;
                PartType=Page }

    { 31  ;1   ;Part      ;
                Name=Part31;
                ApplicationArea=#RelationshipMgmt;
                SubPageLink="No."=FIELD("No."),
                            "Date Filter"=FIELD("Date Filter");
                PagePartID="Contact Statistics FactBox";
                PartType=Page }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Cont@1000 : Record Contact;
      CRMIntegrationManagement@1011 : Codeunit "CRM Integration Management";
      CompanyDetails@1001 : Page "Company Details";
      NameDetails@1002 : Page "Name Details";
      IntegrationCustomerNo@1003 : Code[20];
      CurrencyCodeEnable@19025310 : Boolean INDATASET;
      VATRegistrationNoEnable@19054634 : Boolean INDATASET;
      CompanyNameEnable@19044404 : Boolean INDATASET;
      OrganizationalLevelCodeEnable@19070485 : Boolean INDATASET;
      CompanyGroupEnabled@1004 : Boolean;
      PersonGroupEnabled@1005 : Boolean;
      CRMIntegrationEnabled@1006 : Boolean;
      CRMIsCoupledToRecord@1007 : Boolean;
      IsOfficeAddin@1008 : Boolean;
      ActionVisible@1009 : Boolean;
      ShowMapLbl@1010 : TextConst 'ENU=Show Map';
      NoFieldVisible@1012 : Boolean;

    LOCAL PROCEDURE EnableFields@1();
    BEGIN
      CompanyGroupEnabled := Type = Type::Company;
      PersonGroupEnabled := Type = Type::Person;
      CurrencyCodeEnable := Type = Type::Company;
      VATRegistrationNoEnable := Type = Type::Company;
      CompanyNameEnable := Type = Type::Person;
      OrganizationalLevelCodeEnable := Type = Type::Person;
    END;

    LOCAL PROCEDURE IntegrationFindCustomerNo@2();
    VAR
      ContactBusinessRelation@1000 : Record "Contact Business Relation";
    BEGIN
      ContactBusinessRelation.SETCURRENTKEY("Link to Table","Contact No.");
      ContactBusinessRelation.SETRANGE("Link to Table",ContactBusinessRelation."Link to Table"::Customer);
      ContactBusinessRelation.SETRANGE("Contact No.","Company No.");
      if ContactBusinessRelation.FINDFIRST then begin
        IntegrationCustomerNo := ContactBusinessRelation."No.";
      end else
        IntegrationCustomerNo := '';
    END;

    LOCAL PROCEDURE TypeOnAfterValidate@19069045();
    BEGIN
      EnableFields;
    END;

    LOCAL PROCEDURE SetNoFieldVisible@13();
    VAR
      DocumentNoVisibility@1000 : Codeunit DocumentNoVisibility;
    BEGIN
      NoFieldVisible := DocumentNoVisibility.ContactNoIsVisible;
    END;

    BEGIN
    END.
  }
}

