OBJECT Codeunit 5507 Graph Mgt - Sales Credit Memo
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Sales Cr.Memo Header"=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE ProcessComplexTypes@1(VAR SalesCrMemoEntityBuffer@1000 : Record "Sales Cr. Memo Entity Buffer";BillToAddressJSON@1001 : Text);
    BEGIN
      ParseBillToCustomerAddressFromJSON(BillToAddressJSON,SalesCrMemoEntityBuffer);
    END;

    PROCEDURE ParseBillToCustomerAddressFromJSON@10(BillToAddressJSON@1000 : Text;VAR SalesCrMemoEntityBuffer@1002 : Record "Sales Cr. Memo Entity Buffer");
    VAR
      GraphMgtComplexTypes@1003 : Codeunit "Graph Mgt - Complex Types";
      RecRef@1001 : RecordRef;
    BEGIN
      if BillToAddressJSON <> '' then
        with SalesCrMemoEntityBuffer do begin
          RecRef.GETTABLE(SalesCrMemoEntityBuffer);
          GraphMgtComplexTypes.ApplyPostalAddressFromJSON(BillToAddressJSON,RecRef,
            FIELDNO("Sell-to Address"),FIELDNO("Sell-to Address 2"),FIELDNO("Sell-to City"),FIELDNO("Sell-to County"),
            FIELDNO("Sell-to Country/Region Code"),FIELDNO("Sell-to Post Code"));
          RecRef.SETTABLE(SalesCrMemoEntityBuffer);
        end;
    END;

    PROCEDURE BillToCustomerAddressToJSON@5(SalesCrMemoEntityBuffer@1000 : Record "Sales Cr. Memo Entity Buffer") JSON : Text;
    VAR
      GraphMgtComplexTypes@1001 : Codeunit "Graph Mgt - Complex Types";
    BEGIN
      with SalesCrMemoEntityBuffer do
        GraphMgtComplexTypes.GetPostalAddressJSON("Sell-to Address","Sell-to Address 2",
          "Sell-to City","Sell-to County","Sell-to Country/Region Code","Sell-to Post Code",JSON);
    END;

    PROCEDURE UpdateIntegrationRecordIds@34(OnlyRecordsWithoutID@1007 : Boolean);
    VAR
      DummySalesCrMemoEntityBuffer@1001 : Record "Sales Cr. Memo Entity Buffer";
      DummyCustomer@1005 : Record Customer;
      GraphMgtGeneralTools@1008 : Codeunit "Graph Mgt - General Tools";
      SalesHeaderRecordRef@1000 : RecordRef;
      SalesCrMemoHeaderRecordRef@1002 : RecordRef;
      CustomerRecordRef@1004 : RecordRef;
    BEGIN
      CustomerRecordRef.OPEN(DATABASE::Customer);
      GraphMgtGeneralTools.UpdateIntegrationRecords(
        CustomerRecordRef,DummyCustomer.FIELDNO(Id),true);

      SalesHeaderRecordRef.OPEN(DATABASE::"Sales Header");
      GraphMgtGeneralTools.UpdateIntegrationRecords(
        SalesHeaderRecordRef,DummySalesCrMemoEntityBuffer.FIELDNO(Id),OnlyRecordsWithoutID);

      SalesCrMemoHeaderRecordRef.OPEN(DATABASE::"Sales Cr.Memo Header");
      GraphMgtGeneralTools.UpdateIntegrationRecords(
        SalesCrMemoHeaderRecordRef,DummySalesCrMemoEntityBuffer.FIELDNO(Id),OnlyRecordsWithoutID);
    END;

    LOCAL PROCEDURE CheckSupportedTable@3(VAR RecRef@1000 : RecordRef) : Boolean;
    VAR
      SalesHeader@1002 : Record "Sales Header";
    BEGIN
      case RecRef.NUMBER of
        DATABASE::"Sales Cr.Memo Header":
          exit(true);
        DATABASE::"Sales Header":
          begin
            RecRef.SETTABLE(SalesHeader);
            exit(SalesHeader."Document Type" = SalesHeader."Document Type"::"Credit Memo");
          end;
        else
          exit(false);
      end;
    END;

    [EventSubscriber(Codeunit,5150,OnUpdateReferencedIdField)]
    LOCAL PROCEDURE HandleUpdateReferencedIdFieldOnSalesInvoiceHeader@19(VAR RecRef@1000 : RecordRef;NewId@1001 : GUID;VAR Handled@1002 : Boolean);
    VAR
      DummySalesCrMemoEntityBuffer@1004 : Record "Sales Cr. Memo Entity Buffer";
      GraphMgtGeneralTools@1003 : Codeunit "Graph Mgt - General Tools";
    BEGIN
      if not CheckSupportedTable(RecRef) then
        exit;

      GraphMgtGeneralTools.HandleUpdateReferencedIdFieldOnItem(
        RecRef,NewId,Handled,RecRef.NUMBER,DummySalesCrMemoEntityBuffer.FIELDNO(Id));
    END;

    [EventSubscriber(Codeunit,5150,OnGetPredefinedIdValue)]
    LOCAL PROCEDURE HandleGetPredefinedIdValue@21(VAR Id@1000 : GUID;VAR RecRef@1001 : RecordRef;VAR Handled@1002 : Boolean);
    VAR
      DummySalesCrMemoEntityBuffer@1004 : Record "Sales Cr. Memo Entity Buffer";
      GraphMgtGeneralTools@1007 : Codeunit "Graph Mgt - General Tools";
    BEGIN
      if not CheckSupportedTable(RecRef) then
        exit;

      GraphMgtGeneralTools.HandleGetPredefinedIdValue(
        Id,RecRef,Handled,RecRef.NUMBER,DummySalesCrMemoEntityBuffer.FIELDNO(Id));
    END;

    [EventSubscriber(Codeunit,5465,ApiSetup)]
    PROCEDURE HandleApiSetup@2();
    VAR
      GraphMgtSalCrMemoBuf@1001 : Codeunit "Graph Mgt - Sal. Cr. Memo Buf.";
    BEGIN
      UpdateIntegrationRecordIds(false);
      GraphMgtSalCrMemoBuf.UpdateBufferTableRecords;
    END;

    BEGIN
    END.
  }
}

