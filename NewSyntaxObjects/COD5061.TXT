OBJECT Codeunit 5061 SegHistoryManagement
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      SegHist@1000 : Record "Segment History";
      SegHeader@1001 : Record "Segment Header";

    [External]
    PROCEDURE InsertLine@1(SegmentNo@1000 : Code[20];ContactNo@1001 : Code[20];LineNo@1002 : Integer);
    BEGIN
      InitLine(SegmentNo,ContactNo,LineNo);
      SegHist."Action Taken" := SegHist."Action Taken"::Insertion;
      SegHist.INSERT;
    END;

    [External]
    PROCEDURE DeleteLine@2(SegmentNo@1000 : Code[20];ContactNo@1001 : Code[20];LineNo@1002 : Integer);
    BEGIN
      InitLine(SegmentNo,ContactNo,LineNo);
      SegHist."Action Taken" := SegHist."Action Taken"::Deletion;
      SegHist.INSERT;
    END;

    LOCAL PROCEDURE InitLine@5(SegmentNo@1000 : Code[20];ContactNo@1001 : Code[20];LineNo@1002 : Integer);
    BEGIN
      SegHeader.GET(SegmentNo);
      SegHeader.CALCFIELDS("No. of Criteria Actions");
      SegHist.INIT;
      SegHist."Segment No." := SegmentNo;
      SegHist."Segment Action No." := SegHeader."No. of Criteria Actions";
      SegHist."Segment Line No." := LineNo;
      SegHist."Contact No." := ContactNo;
    END;

    [External]
    PROCEDURE GoBack@3(SegmentNo@1000 : Code[20]);
    VAR
      SegLine@1001 : Record "Segment Line";
      SegCriteriaLine@1002 : Record "Segment Criteria Line";
      NextLineNo@1003 : Integer;
    BEGIN
      SegHist.LOCKTABLE;
      SegHeader.GET(SegmentNo);
      SegHeader.CALCFIELDS("No. of Criteria Actions");

      SegLine.RESET;
      SegLine.SETRANGE("Segment No.",SegmentNo);
      if SegLine.FINDLAST then
        NextLineNo := SegLine."Line No." + 10000
      else
        NextLineNo := 10000;

      SegHist.SETRANGE("Segment No.",SegmentNo);
      SegHist.SETRANGE("Segment Action No.",SegHeader."No. of Criteria Actions");
      if SegHist.FIND('+') then begin
        SegHist.SETRANGE("Segment Action No.",SegHist."Segment Action No.");
        repeat
          case SegHist."Action Taken" of
            SegHist."Action Taken"::Insertion:
              begin
                SegLine.RESET;
                SegLine.SETRANGE("Segment No.",SegHist."Segment No.");
                SegLine.SETRANGE("Contact No.",SegHist."Contact No.");
                SegLine.DELETEALL(true);
              end;
            SegHist."Action Taken"::Deletion:
              begin
                SegLine.INIT;
                SegLine."Segment No." := SegmentNo;
                SegLine."Line No." := NextLineNo;
                SegLine.VALIDATE("Contact No.",SegHist."Contact No.");
                SegLine.INSERT(true);
                NextLineNo := NextLineNo + 10000;
              end;
          end;
        until SegHist.NEXT(-1) = 0;
        SegHist.DELETEALL;
      end;

      SegCriteriaLine.SETRANGE("Segment No.",SegmentNo);
      if SegCriteriaLine.FIND('+') then
        repeat
          SegCriteriaLine.DELETE;
        until (SegCriteriaLine.Type = SegCriteriaLine.Type::Action) or (SegCriteriaLine.NEXT(-1) = 0);
    END;

    BEGIN
    END.
  }
}

