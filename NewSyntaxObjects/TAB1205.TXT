OBJECT Table 1205 Credit Transfer Register
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    DataCaptionFields=Identifier,"Created Date-Time";
    CaptionML=ENU=Credit Transfer Register;
    LookupPageID="Credit Transfer Registers";
    DrillDownPageID="Credit Transfer Registers";
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Integer       ;CaptionML=ENU=No. }
    { 2   ;   ;Identifier          ;Code20        ;CaptionML=ENU=Identifier }
    { 3   ;   ;Created Date-Time   ;DateTime      ;CaptionML=ENU=Created Date-Time }
    { 4   ;   ;Created by User     ;Code50        ;TableRelation=User."User Name";
                                                   CaptionML=ENU=Created by User }
    { 5   ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Canceled,File Created,File Re-exported;
                                                   OptionString=Canceled,"File Created","File Re-exported";
                                                   Editable=false }
    { 6   ;   ;No. of Transfers    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Credit Transfer Entry" WHERE ("Credit Transfer Register No."=FIELD("No.")));
                                                   CaptionML=ENU=No. of Transfers }
    { 7   ;   ;From Bank Account No.;Code20       ;TableRelation="Bank Account";
                                                   CaptionML=ENU=From Bank Account No. }
    { 8   ;   ;From Bank Account Name;Text50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Bank Account".Name WHERE ("No."=FIELD("From Bank Account No.")));
                                                   CaptionML=ENU=From Bank Account Name }
    { 9   ;   ;Exported File       ;BLOB          ;CaptionML=ENU=Exported File }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PaymentsFileNotFoundErr@1000 : TextConst 'ENU=The original payment file was not found.\Export a new file from the Payment Journal window.';
      ExportToServerFile@1001 : Boolean;

    [External]
    PROCEDURE CreateNew@1(NewIdentifier@1000 : Code[20];NewBankAccountNo@1001 : Code[20]);
    BEGIN
      RESET;
      LOCKTABLE;
      if FINDLAST then;
      INIT;
      "No." += 1;
      Identifier := NewIdentifier;
      "Created Date-Time" := CURRENTDATETIME;
      "Created by User" := USERID;
      "From Bank Account No." := NewBankAccountNo;
      INSERT;
    END;

    [External]
    PROCEDURE SetStatus@3(NewStatus@1000 : Option);
    BEGIN
      LOCKTABLE;
      FIND;
      Status := NewStatus;
      MODIFY;
    END;

    [Internal]
    PROCEDURE Reexport@2();
    VAR
      CreditTransReExportHistory@1000 : Record "Credit Trans Re-export History";
      TempPaymentFileTempBlob@1003 : TEMPORARY Record TempBlob;
      FileMgt@1002 : Codeunit "File Management";
    BEGIN
      CALCFIELDS("Exported File");
      TempPaymentFileTempBlob.INIT;
      TempPaymentFileTempBlob.Blob := "Exported File";

      if not TempPaymentFileTempBlob.Blob.HASVALUE then
        ERROR(PaymentsFileNotFoundErr);

      CreditTransReExportHistory.INIT;
      CreditTransReExportHistory."Credit Transfer Register No." := "No.";
      CreditTransReExportHistory.INSERT(true);

      if FileMgt.BLOBExport(TempPaymentFileTempBlob,STRSUBSTNO('%1.XML',Identifier),not ExportToServerFile) <> '' then begin
        Status := Status::"File Re-exported";
        MODIFY;
      end;
    END;

    [External]
    PROCEDURE SetFileContent@4(VAR DataExch@1000 : Record "Data Exch.");
    BEGIN
      LOCKTABLE;
      FIND;
      DataExch.CALCFIELDS("File Content");
      "Exported File" := DataExch."File Content";
      MODIFY;
    END;

    [External]
    PROCEDURE EnableExportToServerFile@5();
    BEGIN
      ExportToServerFile := true;
    END;

    BEGIN
    END.
  }
}

