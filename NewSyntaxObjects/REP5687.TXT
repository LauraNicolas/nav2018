OBJECT Report 5687 Copy Depreciation Book
{
  OBJECT-PROPERTIES
  {
    Date=20161025D;
    Time=120000T;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Copy Depreciation Book;
    ProcessingOnly=true;
    OnPreReport=BEGIN
                  if (EndingDate > 0D) and (StartingDate > EndingDate) then
                    ERROR(Text000);
                  if EndingDate = 0D then
                    EndingDate2 := DMY2DATE(31,12,9999)
                  else
                    EndingDate2 := EndingDate;
                  DeprBook.GET(DeprBookCode);
                  DeprBook2.GET(DeprBookCode2);
                  ExchangeRate := GetExchangeRate;
                  DeprBook2.IndexGLIntegration(GLIntegration);
                  FirstGenJnl := true;
                  FirstFAJnl := true;
                  Window.OPEN(Text001);
                END;

  }
  DATASET
  {
    { 3794;    ;DataItem;Fixed Asset         ;
               DataItemTable="Fixed Asset";
               DataItemTableView=SORTING("No.");
               OnPreDataItem=BEGIN
                               DepreciationCalc.SetFAFilter(FALedgEntry,'',DeprBookCode,false);
                               with FALedgEntry do begin
                                 SETRANGE("FA Posting Category","FA Posting Category"::" ");
                                 SETRANGE(
                                   "FA Posting Type",
                                   "FA Posting Type"::"Acquisition Cost","FA Posting Type"::"Salvage Value");
                                 SETRANGE("FA Posting Date",StartingDate,EndingDate2);
                               end;
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1,"No.");
                                  if Inactive or Blocked then
                                    CurrReport.SKIP;
                                  if not FADeprBook.GET("No.",DeprBookCode) then
                                    CurrReport.SKIP;
                                  if not FADeprBook2.GET("No.",DeprBookCode2) then begin
                                    FADeprBook2 := FADeprBook;
                                    FADeprBook2."Depreciation Book Code" := DeprBookCode2;
                                    FADeprBook2.INSERT(true);
                                  end;
                                  FALedgEntry.SETRANGE("FA No.","No.");
                                  if FALedgEntry.FIND('-') then
                                    repeat
                                      SetJournalType(FALedgEntry);
                                      case JournalType of
                                        JournalType::SkipType:
                                          ;
                                        JournalType::GenJnlType:
                                          InsertGenJnlLine(FALedgEntry);
                                        JournalType::FAJnlType:
                                          InsertFAJnlLine(FALedgEntry);
                                      end;
                                    until FALedgEntry.NEXT = 0;
                                END;

               ReqFilterFields="No.","FA Class Code","FA Subclass Code" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnOpenPage=BEGIN
                   if DeprBookCode = '' then begin
                     FASetup.GET;
                     DeprBookCode := FASetup."Default Depr. Book";
                   end;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=CopyFromBook;
                  CaptionML=ENU=Copy from Book;
                  ToolTipML=ENU=Specifies the code of the depreciation book you want to copy from.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=DeprBookCode;
                  TableRelation="Depreciation Book" }

      { 15  ;2   ;Field     ;
                  Name=CopyToBook;
                  CaptionML=ENU=Copy to Book;
                  ToolTipML=ENU=Specifies the code of the depreciation book you want to copy to.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=DeprBookCode2;
                  TableRelation="Depreciation Book" }

      { 20  ;2   ;Field     ;
                  Name=StartingDate;
                  CaptionML=ENU=Starting Date;
                  ToolTipML=ENU=Specifies the date when you want the report to start.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=StartingDate }

      { 6   ;2   ;Field     ;
                  Name=EndingDate;
                  CaptionML=ENU=Ending Date;
                  ToolTipML=ENU=Specifies the date when you want the report to end.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=EndingDate }

      { 19  ;2   ;Field     ;
                  Name=Document No.;
                  CaptionML=ENU=Document No.;
                  ToolTipML=ENU=Specifies, if you leave the field empty, the next available number on the resulting journal line. If a number series is not set up, enter the document number that you want assigned to the resulting journal line.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=DocumentNo }

      { 13  ;2   ;Field     ;
                  Name=Posting Description;
                  CaptionML=ENU=Posting Description;
                  ToolTipML=ENU=Specifies the posting date to be used by the batch job as a filter.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=PostingDescription }

      { 3   ;2   ;Field     ;
                  Name=InsertBalAccount;
                  CaptionML=ENU=Insert Bal. Account;
                  ToolTipML=ENU=Specifies if you want the batch job to automatically insert fixed asset entries with balancing accounts.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=BalAccount }

      { 7   ;2   ;Group     ;
                  Name=Copy;
                  CaptionML=ENU=Copy }

      { 8   ;3   ;Field     ;
                  Name=Acquisition Cost;
                  CaptionML=ENU=Acquisition Cost;
                  ToolTipML=ENU=Specifies if related acquisition cost entries are included in the batch job .;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CopyChoices[1] }

      { 9   ;3   ;Field     ;
                  Name=Depreciation;
                  CaptionML=ENU=Depreciation;
                  ToolTipML=ENU=Specifies if related depreciation entries are included in the batch job .;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CopyChoices[2] }

      { 10  ;3   ;Field     ;
                  Name=Write-Down;
                  CaptionML=ENU=Write-Down;
                  ToolTipML=ENU=Specifies if related write-down entries are included in the batch job .;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CopyChoices[3] }

      { 11  ;3   ;Field     ;
                  Name=Appreciation;
                  CaptionML=ENU=Appreciation;
                  ToolTipML=ENU=Specifies if related appreciation entries are included in the batch job .;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CopyChoices[4] }

      { 12  ;3   ;Field     ;
                  Name=Custom 1;
                  CaptionML=ENU=Custom 1;
                  ToolTipML=ENU=Specifies if related custom 1 entries are included in the batch job .;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CopyChoices[5] }

      { 17  ;3   ;Field     ;
                  Name=Custom 2;
                  CaptionML=ENU=Custom 2;
                  ToolTipML=ENU=Specifies if related custom 2 entries are included in the batch job .;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CopyChoices[6] }

      { 18  ;3   ;Field     ;
                  Name=Salvage Value;
                  CaptionML=ENU=Salvage Value;
                  ToolTipML=ENU=Specifies if related salvage value entries are included in the batch job .;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CopyChoices[9] }

      { 5   ;3   ;Field     ;
                  Name=Disposal;
                  CaptionML=ENU=Disposal;
                  ToolTipML=ENU=Specifies if related disposal entries are included in the batch job .;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CopyChoices[7] }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The Starting Date is later than the Ending Date.';
      Text001@1001 : TextConst 'ENU=Copying fixed asset    #1##########';
      GenJnlLine@1002 : Record "Gen. Journal Line";
      FASetup@1003 : Record "FA Setup";
      FAJnlLine@1004 : Record "FA Journal Line";
      FADeprBook@1005 : Record "FA Depreciation Book";
      FADeprBook2@1006 : Record "FA Depreciation Book";
      DeprBook@1007 : Record "Depreciation Book";
      DeprBook2@1008 : Record "Depreciation Book";
      FALedgEntry@1009 : Record "FA Ledger Entry";
      FAJnlSetup@1010 : Record "FA Journal Setup";
      DepreciationCalc@1011 : Codeunit "Depreciation Calculation";
      Window@1013 : Dialog;
      ExchangeRate@1014 : Decimal;
      CopyChoices@1015 : ARRAY [9] OF Boolean;
      GLIntegration@1016 : ARRAY [9] OF Boolean;
      DocumentNo@1017 : Code[20];
      DocumentNo2@1018 : Code[20];
      DocumentNo3@1019 : Code[20];
      NoSeries2@1020 : Code[10];
      NoSeries3@1021 : Code[10];
      PostingDescription@1022 : Text[50];
      JournalType@1023 : 'SkipType,GenJnlType,FAJnlType';
      DeprBookCode@1024 : Code[10];
      DeprBookCode2@1025 : Code[10];
      BalAccount@1026 : Boolean;
      StartingDate@1027 : Date;
      EndingDate@1028 : Date;
      EndingDate2@1029 : Date;
      FirstGenJnl@1030 : Boolean;
      FirstFAJnl@1031 : Boolean;
      FAJnlNextLineNo@1032 : Integer;
      GenJnlNextLineNo@1033 : Integer;

    LOCAL PROCEDURE InsertGenJnlLine@2(VAR FALedgEntry@1000 : Record "FA Ledger Entry");
    VAR
      FAInsertGLAcc@1001 : Codeunit "FA Insert G/L Account";
    BEGIN
      if FirstGenJnl then begin
        GenJnlLine.LOCKTABLE;
        FAJnlSetup.GenJnlName(DeprBook2,GenJnlLine,GenJnlNextLineNo);
        NoSeries2 := FAJnlSetup.GetGenNoSeries(GenJnlLine);
        if DocumentNo = '' then
          DocumentNo2 := FAJnlSetup.GetGenJnlDocumentNo(GenJnlLine,FALedgEntry."FA Posting Date",true)
        else
          DocumentNo2 := DocumentNo;
      end;
      FirstGenJnl := false;

      with GenJnlLine do begin
        FALedgEntry.MoveToGenJnl(GenJnlLine);
        VALIDATE("Depreciation Book Code",DeprBookCode2);
        VALIDATE(Amount,ROUND(Amount * ExchangeRate));
        "Document No." := DocumentNo2;
        "Posting No. Series" := NoSeries2;
        "Document Type" := "Document Type"::" ";
        "External Document No." := '';
        if PostingDescription <> '' then
          Description := PostingDescription;
        GenJnlNextLineNo := GenJnlNextLineNo + 10000;
        "Line No." := GenJnlNextLineNo;
        INSERT(true);
        if BalAccount then begin
          FAInsertGLAcc.GetBalAcc(GenJnlLine);
          if FINDLAST then ;
          GenJnlNextLineNo := "Line No.";
        end;
      end;
    END;

    LOCAL PROCEDURE InsertFAJnlLine@3(VAR FALedgEntry@1000 : Record "FA Ledger Entry");
    BEGIN
      if FirstFAJnl then begin
        FAJnlLine.LOCKTABLE;
        FAJnlSetup.FAJnlName(DeprBook2,FAJnlLine,FAJnlNextLineNo);
        NoSeries3 := FAJnlSetup.GetFANoSeries(FAJnlLine);
        if DocumentNo = '' then
          DocumentNo3 := FAJnlSetup.GetFAJnlDocumentNo(FAJnlLine,FALedgEntry."FA Posting Date",true)
        else
          DocumentNo3 := DocumentNo;
      end;
      FirstFAJnl := false;

      with FAJnlLine do begin
        FALedgEntry.MoveToFAJnl(FAJnlLine);
        VALIDATE("Depreciation Book Code",DeprBookCode2);
        VALIDATE(Amount,ROUND(Amount * ExchangeRate));
        "Document No." := DocumentNo3;
        "Posting No. Series" := NoSeries3;
        "Document Type" := "Document Type"::" ";
        "External Document No." := '';
        if PostingDescription <> '' then
          Description := PostingDescription;
        FAJnlNextLineNo := FAJnlNextLineNo + 10000;
        "Line No." := FAJnlNextLineNo;
        INSERT(true);
      end;
    END;

    LOCAL PROCEDURE SetJournalType@10(VAR FALedgEntry@1000 : Record "FA Ledger Entry");
    VAR
      Index@1001 : Integer;
    BEGIN
      Index := FALedgEntry.ConvertPostingType + 1;
      if CopyChoices[Index] then begin
        if GLIntegration[Index] and not "Fixed Asset"."Budgeted Asset" then
          JournalType := JournalType::GenJnlType
        else
          JournalType := JournalType::FAJnlType
      end else
        JournalType := JournalType::SkipType;
    END;

    LOCAL PROCEDURE GetExchangeRate@1() : Decimal;
    VAR
      ExchangeRate2@1000 : Decimal;
      ExchangeRate3@1001 : Decimal;
    BEGIN
      ExchangeRate2 := DeprBook."Default Exchange Rate";
      if ExchangeRate2 <= 0 then
        ExchangeRate2 := 100;
      if not DeprBook."Use FA Exch. Rate in Duplic." then
        ExchangeRate2 := 100;

      ExchangeRate3 := DeprBook2."Default Exchange Rate";
      if ExchangeRate3 <= 0 then
        ExchangeRate3 := 100;
      if not DeprBook2."Use FA Exch. Rate in Duplic." then
        ExchangeRate3 := 100;

      exit(ExchangeRate2 / ExchangeRate3);
    END;

    PROCEDURE InitializeRequest@4(DeprBookCodeFrom@1000 : Code[10];DeprBookCode2From@1001 : Code[10];StartingDateFrom@1002 : Date;EndingDateFrom@1003 : Date;DocumentNoFrom@1004 : Code[20];PostingDescriptionFrom@1005 : Text[50];BalAccountFrom@1006 : Boolean);
    BEGIN
      DeprBookCode := DeprBookCodeFrom;
      DeprBookCode2 := DeprBookCode2From;
      StartingDate := StartingDateFrom;
      EndingDate := EndingDateFrom;
      DocumentNo := DocumentNoFrom;
      PostingDescription := PostingDescriptionFrom;
      BalAccount := BalAccountFrom;
    END;

    PROCEDURE SetCopyAcquisitionCost@5(Choice@1000 : Boolean);
    BEGIN
      CopyChoices[1] := Choice;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

