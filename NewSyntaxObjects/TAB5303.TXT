OBJECT Table 5303 Outlook Synch. Filter
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    DataCaptionFields="Filter Type";
    OnInsert=BEGIN
               TESTFIELD("Field No.");
               VALIDATE(Value);
               UpdateFilterExpression;
             END;

    OnModify=BEGIN
               VALIDATE(Value);
               UpdateFilterExpression;
             END;

    CaptionML=ENU=Outlook Synch. Filter;
    PasteIsValid=false;
  }
  FIELDS
  {
    { 1   ;   ;Record GUID         ;GUID          ;CaptionML=ENU=Record GUID;
                                                   NotBlank=true;
                                                   Editable=false }
    { 2   ;   ;Filter Type         ;Option        ;CaptionML=ENU=Filter Type;
                                                   OptionCaptionML=ENU=Condition,Table Relation;
                                                   OptionString=Condition,"Table Relation" }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 4   ;   ;Table No.           ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE ("Object Type"=CONST(Table));
                                                   CaptionML=ENU=Table No. }
    { 5   ;   ;Field No.           ;Integer       ;TableRelation=Field."No." WHERE (TableNo=FIELD("Table No."));
                                                   OnValidate=VAR
                                                                RecRef@1000 : RecordRef;
                                                              BEGIN
                                                                if "Field No." = 0 then begin
                                                                  CLEAR(RecRef);
                                                                  RecRef.OPEN("Table No.",true);
                                                                  ERROR(Text005,RecRef.CAPTION);
                                                                end;

                                                                if "Field No." <> xRec."Field No." then
                                                                  if Type <> Type::FIELD then
                                                                    Value := '';
                                                              END;

                                                   OnLookup=VAR
                                                              FieldNo@1000 : Integer;
                                                            BEGIN
                                                              if "Table No." <> 0 then
                                                                FieldNo := OSynchSetupMgt.ShowTableFieldsList("Table No.")
                                                              else
                                                                FieldNo := OSynchSetupMgt.ShowTableFieldsList("Master Table No.");

                                                              if FieldNo > 0 then
                                                                VALIDATE("Field No.",FieldNo);
                                                            END;

                                                   CaptionML=ENU=Field No. }
    { 7   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                if ("Filter Type" = "Filter Type"::Condition) and (Type = Type::FIELD) then
                                                                  ERROR(Text001,FORMAT(Type),FIELDCAPTION("Filter Type"),FORMAT("Filter Type"));

                                                                if Type <> xRec.Type then
                                                                  Value := '';
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=CONST,FILTER,FIELD;
                                                   OptionString=CONST,FILTER,FIELD }
    { 8   ;   ;Value               ;Text250       ;OnValidate=BEGIN
                                                                ValidateFieldValuePair;
                                                              END;

                                                   OnLookup=VAR
                                                              OSynchTypeConversion@1003 : Codeunit "Outlook Synch. Type Conv";
                                                              RecRef@1002 : RecordRef;
                                                              FldRef@1001 : FieldRef;
                                                              MasterTableFieldNo@1000 : Integer;
                                                            BEGIN
                                                              if Type <> Type::FIELD then begin
                                                                RecRef.GETTABLE(Rec);
                                                                FldRef := RecRef.FIELD(FIELDNO(Type));
                                                                ERROR(Text003,FIELDCAPTION(Type),OSynchTypeConversion.GetSubStrByNo(Type::FIELD + 1,FldRef.OPTIONCAPTION));
                                                              end;

                                                              MasterTableFieldNo := OSynchSetupMgt.ShowTableFieldsList("Master Table No.");

                                                              if MasterTableFieldNo <> 0 then
                                                                VALIDATE("Master Table Field No.",MasterTableFieldNo);
                                                            END;

                                                   CaptionML=ENU=Value }
    { 9   ;   ;Master Table No.    ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE ("Object Type"=CONST(Table));
                                                   CaptionML=ENU=Master Table No. }
    { 10  ;   ;Master Table Field No.;Integer     ;TableRelation=Field."No." WHERE (TableNo=FIELD("Master Table No."));
                                                   OnValidate=BEGIN
                                                                if Field.GET("Master Table No.","Master Table Field No.") then
                                                                  VALIDATE(Value,Field."Field Caption");
                                                              END;

                                                   CaptionML=ENU=Master Table Field No. }
    { 99  ;   ;FilterExpression    ;Text250       ;CaptionML=ENU=FilterExpression }
  }
  KEYS
  {
    {    ;"Record GUID","Filter Type","Line No."  ;Clustered=true }
    {    ;"Table No.","Field No."                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Field@1004 : Record Field;
      OSynchSetupMgt@1005 : Codeunit "Outlook Synch. Setup Mgt.";
      OSynchTypeConversion@1006 : Codeunit "Outlook Synch. Type Conv";
      Text001@1008 : TextConst 'ENU=You cannot select the %1 option when %2 is %3.';
      Text002@1007 : TextConst 'ENU=This value cannot be converted to the selected field datatype.';
      Text003@1003 : TextConst 'ENU=You can only open a lookup table when the %1 field contains the %2 value.';
      Text004@1002 : TextConst 'ENU=This is not a valid option for the %1 field. The possible options are: ''%2''.';
      Text005@1001 : TextConst 'ENU=Choose a valid field in the %1 table.';
      Text006@1009 : TextConst 'ENU=The value in this field cannot be longer than %1.';

    [External]
    PROCEDURE SetTablesNo@1(TableLeftNo@1000 : Integer;TableRightNo@1001 : Integer);
    BEGIN
      "Table No." := TableLeftNo;
      "Master Table No." := TableRightNo;
    END;

    [Internal]
    PROCEDURE ValidateFieldValuePair@2();
    VAR
      RecRef@1000 : RecordRef;
      FldRef@1001 : FieldRef;
      NameString@1004 : Text[250];
      TempBool@1003 : Boolean;
    BEGIN
      TESTFIELD("Table No.");

      CLEAR(RecRef);
      CLEAR(FldRef);
      RecRef.OPEN("Table No.",true);

      if "Field No." = 0 then
        ERROR(Text005,RecRef.CAPTION);

      Field.GET("Table No.","Field No.");
      FldRef := RecRef.FIELD("Field No.");

      case Type of
        Type::CONST:
          case Field.Type of
            Field.Type::Option:
              if not OSynchTypeConversion.EvaluateOptionField(FldRef,Value) then
                ERROR(Text004,Field."Field Caption",FldRef.OPTIONSTRING);
            Field.Type::Code,Field.Type::Text:
              begin
                if STRLEN(Value) > Field.Len then
                  ERROR(Text006,Field.Len);
                if not EVALUATE(FldRef,Value) then
                  ERROR(Text002);
              end;
            Field.Type::Boolean:
              begin
                if not EVALUATE(TempBool,Value) then
                  ERROR(Text002);
                Value := FORMAT(TempBool);
              end;
            else
              if not EVALUATE(FldRef,Value) then
                ERROR(Text002);
          end;
        Type::FILTER:
          begin
            if Field.Type = Field.Type::Option then begin
              if not OSynchTypeConversion.EvaluateFilterOptionField(FldRef,Value,false) then
                ERROR(Text004,Field."Field Caption",FldRef.OPTIONSTRING);
            end;
            FldRef.SETFILTER(Value);
          end;
        Type::FIELD:
          begin
            NameString := Value;
            if not OSynchSetupMgt.ValidateFieldName(NameString,"Master Table No.") then begin
              RecRef.CLOSE;
              RecRef.OPEN("Master Table No.",true);
              ERROR(Text005,RecRef.CAPTION);
            end;

            Value := NameString;
          end;
      end;
      RecRef.CLOSE;
    END;

    [External]
    PROCEDURE RecomposeFilterExpression@3() FilterExpression : Text[250];
    BEGIN
      FilterExpression := OSynchSetupMgt.ComposeFilterExpression("Record GUID","Filter Type");
    END;

    [External]
    PROCEDURE GetFieldCaption@5() : Text;
    BEGIN
      if Field.GET("Table No.","Field No.") then
        exit(Field."Field Caption");
      exit('');
    END;

    [External]
    PROCEDURE GetFilterExpressionValue@4() : Text[250];
    VAR
      ValueStartIndex@1000 : Integer;
    BEGIN
      ValueStartIndex := STRPOS(FilterExpression,'(');
      exit(COPYSTR(FilterExpression,ValueStartIndex + 1,STRLEN(FilterExpression) - ValueStartIndex - 1));
    END;

    [Internal]
    PROCEDURE UpdateFilterExpression@6();
    VAR
      TempRecordRef@1000 : RecordRef;
      ViewExpression@1001 : Text;
      WhereIndex@1002 : Integer;
      TempBoolean@1003 : Boolean;
    BEGIN
      FilterExpression := '';
      if Type <> Type::FIELD then
        if "Table No." <> 0 then begin
          TempRecordRef.OPEN("Table No.");

          ViewExpression := GetFieldCaption + STRSUBSTNO('=FILTER(%1)',Value);

          ViewExpression := STRSUBSTNO('WHERE(%1)',ViewExpression);
          TempRecordRef.SETVIEW(ViewExpression);

          ViewExpression := TempRecordRef.GETVIEW(false);
          WhereIndex := STRPOS(ViewExpression,'WHERE(') + 6;
          FilterExpression := COPYSTR(ViewExpression,WhereIndex,STRLEN(ViewExpression) - WhereIndex);

          if Field.GET("Table No.","Field No.") then
            if Field.Type = Field.Type::Boolean then begin
              EVALUATE(TempBoolean,Value);
              if TempBoolean then
                FilterExpression := COPYSTR(StringReplace(FilterExpression,Value,'1'),1,250)
              else
                FilterExpression := COPYSTR(StringReplace(FilterExpression,Value,'0'),1,250);
            end;
        end;
    END;

    LOCAL PROCEDURE StringReplace@8(Input@1000 : Text;Find@1001 : Text;Replace@1002 : Text) : Text;
    VAR
      Pos@1003 : Integer;
    BEGIN
      Pos := STRPOS(Input,Find);
      while Pos <> 0 do begin
        Input := DELSTR(Input,Pos,STRLEN(Find));
        Input := INSSTR(Input,Replace,Pos);
        Pos := STRPOS(Input,Find);
      end;
      exit(Input);
    END;

    BEGIN
    END.
  }
}

