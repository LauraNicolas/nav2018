OBJECT Page 5098 Task Card
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Task Card;
    InsertAllowed=false;
    DeleteAllowed=false;
    SourceTable="To-do";
    PageType=Card;
    OnInit=BEGIN
             CalcDueDateFromEnable := true;
             RecurringDateIntervalEnable := true;
             CompletedByEnable := true;
             AttendeesAcceptedNoEnable := true;
             NoOfAttendeesEnable := true;
             AllDayEventEnable := true;
             LocationEnable := true;
             DurationEnable := true;
             EndingTimeEnable := true;
             StartTimeEnable := true;
             CompletedByEditable := true;
             CalcDueDateFromEditable := true;
             RecurringDateIntervalEditable := true;
             ContactNoEditable := true;
           END;

    OnAfterGetRecord=BEGIN
                       ContactCompanyNameHideValue := false;
                       ContactNameHideValue := false;
                       SwitchCardControls;
                       if "No." <> "Organizer To-do No." then
                         CurrPage.EDITABLE := false
                       else
                         CurrPage.EDITABLE := true;
                       SetRecurringEditable;
                       EnableFields;
                       ContactNoOnFormat(FORMAT("Contact No."));
                       ContactNameOnFormat;
                       ContactCompanyNameOnFormat;
                     END;

    OnModifyRecord=BEGIN
                     if ("Team Code" = '') and ("Salesperson Code" = '') then
                       ERROR(
                         Text000,TABLECAPTION,FIELDCAPTION("Salesperson Code"),FIELDCAPTION("Team Code"));

                     if (Type = Type::Meeting) and (not "All Day Event") then begin
                       if "Start Time" = 000000T then
                         ERROR(Text002,TABLECAPTION,Type,FIELDCAPTION("Start Time"));
                       if Duration = 0 then
                         ERROR(Text002,TABLECAPTION,Type,FIELDCAPTION(Duration));
                     end;
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 29      ;1   ;ActionGroup;
                      Name=Ta&sk;
                      CaptionML=ENU=Ta&sk;
                      Image=Task }
      { 33      ;2   ;Action    ;
                      Name=Co&mment;
                      CaptionML=ENU=Co&mment;
                      ToolTipML=ENU=View or add comments.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Rlshp. Mgt. Comment Sheet";
                      RunPageLink="Table Name"=CONST("To-do"),
                                  "No."=FIELD("Organizer To-do No."),
                                  "Sub No."=CONST(0);
                      Image=ViewComments }
      { 34      ;2   ;Action    ;
                      Name=Interaction Log E&ntries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Interaction Log E&ntries;
                      ToolTipML=ENU=View interaction log entries for the task.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Interaction Log Entries";
                      RunPageView=SORTING("To-do No.");
                      RunPageLink="To-do No."=FIELD("Organizer To-do No.");
                      Image=InteractionLog }
      { 69      ;2   ;Action    ;
                      Name=Postponed &Interactions;
                      CaptionML=ENU=Postponed &Interactions;
                      ToolTipML=ENU=View postponed interactions for the task.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Postponed Interactions";
                      RunPageView=SORTING("To-do No.");
                      RunPageLink="To-do No."=FIELD("Organizer To-do No.");
                      Image=PostponedInteractions }
      { 70      ;2   ;Action    ;
                      Name=A&ttendee Scheduling;
                      CaptionML=ENU=A&ttendee Scheduling;
                      ToolTipML=ENU=View the status of a scheduled meeting.;
                      ApplicationArea=#Advanced;
                      Image=ProfileCalender;
                      OnAction=BEGIN
                                 if Type <> Type::Meeting then
                                   ERROR(CannotSelectAttendeesErr,FORMAT(Type));

                                 PAGE.RUNMODAL(PAGE::"Attendee Scheduling",Rec);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 30      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 35      ;2   ;Action    ;
                      Name=Assign Activities;
                      CaptionML=ENU=Assign Activities;
                      ToolTipML=ENU=View all the tasks that have been assigned to salespeople and teams. A task can be organizing meetings, making phone calls, and so on.;
                      ApplicationArea=#RelationshipMgmt;
                      Image=Allocate;
                      OnAction=VAR
                                 TempTask@1001 : TEMPORARY Record "To-do";
                               BEGIN
                                 TempTask.AssignActivityFromTask(Rec)
                               END;
                                }
      { 36      ;2   ;Action    ;
                      Name=MakePhoneCall;
                      CaptionML=ENU=Make &Phone Call;
                      ToolTipML=ENU=Call the selected contact.;
                      ApplicationArea=#Advanced;
                      Image=Calls;
                      OnAction=VAR
                                 TempSegmentLine@1001 : TEMPORARY Record "Segment Line";
                               BEGIN
                                 if "Contact No." = '' then begin
                                   if (Type = Type::Meeting) and ("Team Code" = '') then
                                     ERROR(MakePhoneCallIsNotAvailableErr);
                                   ERROR(MustAssignContactErr);
                                 end;
                                 TempSegmentLine."To-do No." := "No.";
                                 TempSegmentLine."Contact No." := "Contact No.";
                                 TempSegmentLine."Contact Company No." := "Contact Company No.";
                                 TempSegmentLine."Campaign No." := "Campaign No.";
                                 TempSegmentLine."Salesperson Code" := "Salesperson Code";
                                 TempSegmentLine.CreatePhoneCall;
                               END;
                                }
      { 31      ;1   ;Action    ;
                      Name=&Create Task;
                      CaptionML=ENU=&Create Task;
                      ToolTipML=ENU=Create a new task.;
                      ApplicationArea=#RelationshipMgmt;
                      Promoted=true;
                      Image=NewToDo;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TempTask@1001 : TEMPORARY Record "To-do";
                               BEGIN
                                 TempTask.CreateTaskFromTask(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the task.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="No.";
                ImplicitType=Code20 }

    { 20  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the description of the task.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 67  ;2   ;Field     ;
                Name=Location;
                ToolTipML=ENU=Specifies the location where the meeting will take place.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Location;
                Enabled=LocationEnable;
                ImplicitType=Text50 }

    { 6   ;2   ;Field     ;
                Name=Salesperson Code;
                ToolTipML=ENU=Specifies the code of the salesperson assigned to the task.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Salesperson Code";
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 71  ;2   ;Field     ;
                Name=No. of Attendees;
                ToolTipML=ENU=Specifies the number of attendees for the meeting. click the field to view the Attendee Scheduling card.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="No. of Attendees";
                Enabled=NoOfAttendeesEnable;
                OnDrillDown=BEGIN
                              MODIFY;
                              COMMIT;
                              PAGE.RUNMODAL(PAGE::"Attendee Scheduling",Rec);
                              GET("No.");
                              CurrPage.UPDATE;
                            END;

                ImplicitType=Integer }

    { 73  ;2   ;Field     ;
                Name=Attendees Accepted No.;
                ToolTipML=ENU=Specifies the number of attendees that have confirmed their participation in the meeting.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Attendees Accepted No.";
                Enabled=AttendeesAcceptedNoEnable;
                OnDrillDown=BEGIN
                              MODIFY;
                              COMMIT;
                              PAGE.RUNMODAL(PAGE::"Attendee Scheduling",Rec);
                              GET("No.");
                              CurrPage.UPDATE;
                            END;

                ImplicitType=Integer }

    { 10  ;2   ;Field     ;
                Name=Contact No.;
                ToolTipML=ENU=Specifies the number of the contact linked to the task.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Contact No.";
                Editable=ContactNoEditable;
                OnValidate=BEGIN
                             ContactNoOnAfterValidate;
                           END;

                OnLookup=VAR
                           Task@1005 : Record "To-do";
                           Cont@1003 : Record Contact;
                         BEGIN
                           if Type = Type::Meeting then begin
                             Task.SETRANGE("No.","No.");
                             PAGE.RUNMODAL(PAGE::"Attendee Scheduling",Task);
                           end else begin
                             if Cont.GET("Contact No.") then;
                             if PAGE.RUNMODAL(0,Cont) = ACTION::LookupOK then begin
                               VALIDATE("Contact No.",Cont."No.");
                               CurrPage.UPDATE;
                             end;
                           end;
                         END;

                ImplicitType=Code20 }

    { 47  ;2   ;Field     ;
                Name=Contact Name;
                ToolTipML=ENU=Specifies the name of the contact to which this task has been assigned.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Contact Name";
                Editable=FALSE;
                HideValue=ContactNameHideValue;
                ImplicitType=Text50 }

    { 49  ;2   ;Field     ;
                Name=Contact Company Name;
                ToolTipML=ENU=Specifies the name of the company for which the contact involved in the task works.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Contact Company Name";
                Editable=FALSE;
                HideValue=ContactCompanyNameHideValue;
                ImplicitType=Text50 }

    { 4   ;2   ;Field     ;
                Name=Team Code;
                ToolTipML=ENU=Specifies the code of the team to which the task is assigned.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Team Code";
                OnValidate=BEGIN
                             TeamCodeOnAfterValidate;
                           END;

                ImplicitType=Code10 }

    { 76  ;2   ;Field     ;
                Name=Completed By;
                ToolTipML=ENU=Specifies the salesperson who completed this team task.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Completed By";
                Enabled=CompletedByEnable;
                Editable=CompletedByEditable;
                OnValidate=BEGIN
                             SwitchCardControls
                           END;

                ImplicitType=Code20 }

    { 16  ;2   ;Field     ;
                Name=Status;
                ToolTipML=ENU=Specifies the status of the task. There are five options: Not Started, In Progress, Completed, Waiting and Postponed.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Status;
                ImplicitType=Option }

    { 18  ;2   ;Field     ;
                Name=Priority;
                ToolTipML=ENU=Specifies the priority of the task.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Priority;
                ImplicitType=Option }

    { 12  ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the type of the task.;
                OptionCaptionML=ENU=" ,,Phone Call";
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Type;
                OnValidate=BEGIN
                             TypeOnAfterValidate;
                           END;

                ImplicitType=Option }

    { 64  ;2   ;Field     ;
                Name=AllDayEvent;
                CaptionML=ENU=All Day Event;
                ToolTipML=ENU=Specifies that the task of the Meeting type is an all-day event, which is an activity that lasts 24 hours or longer.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="All Day Event";
                Enabled=AllDayEventEnable;
                OnValidate=BEGIN
                             AllDayEventOnAfterValidate;
                           END;

                ImplicitType=Boolean }

    { 14  ;2   ;Field     ;
                Name=Date;
                ToolTipML=ENU=Specifies the date when the task should be started. There are certain rules for how dates should be entered found in How to: Enter Dates and Times.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Date;
                ImplicitType=Date }

    { 56  ;2   ;Field     ;
                Name=StartTime;
                ToolTipML=ENU=Specifies the time when the task of the Meeting type should be started.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Start Time";
                Enabled=StartTimeEnable;
                ImplicitType=Time }

    { 58  ;2   ;Field     ;
                Name=Duration;
                ToolTipML=ENU=Specifies the duration of the task of the Meeting type.;
                ApplicationArea=#RelationshipMgmt;
                BlankZero=true;
                SourceExpr=Duration;
                Enabled=DurationEnable;
                ImplicitType=Duration }

    { 63  ;2   ;Field     ;
                Name=EndingDate;
                CaptionML=ENU=Ending Date;
                ToolTipML=ENU=Specifies the date of when the task should end. There are certain rules for how dates should be entered. For more information, see How to: Enter Dates and Times.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Ending Date";
                ImplicitType=Date }

    { 61  ;2   ;Field     ;
                Name=EndingTime;
                CaptionML=ENU=Ending Time;
                ToolTipML=ENU=Specifies the time of when the task of the Meeting type should end.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Ending Time";
                Enabled=EndingTimeEnable;
                ImplicitType=Time }

    { 26  ;2   ;Field     ;
                Name=Canceled;
                ToolTipML=ENU=Specifies that the task has been canceled.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Canceled;
                OnValidate=BEGIN
                             SwitchCardControls
                           END;

                ImplicitType=Boolean }

    { 22  ;2   ;Field     ;
                Name=Closed;
                ToolTipML=ENU=Specifies that the task is closed.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Closed;
                OnValidate=BEGIN
                             SwitchCardControls
                           END;

                ImplicitType=Boolean }

    { 24  ;2   ;Field     ;
                Name=Date Closed;
                ToolTipML=ENU=Specifies the date the task was closed.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Date Closed";
                ImplicitType=Date }

    { 1905354401;1;Group  ;
                Name=Related Activities;
                CaptionML=ENU=Related Activities }

    { 8   ;2   ;Field     ;
                Name=Campaign No.;
                ToolTipML=ENU=Specifies the number of the campaign to which the task is linked.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Campaign No.";
                OnValidate=BEGIN
                             CampaignNoOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 51  ;2   ;Field     ;
                Name=Campaign Description;
                ToolTipML=ENU=Specifies the description of the campaign to which the task is linked.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Campaign Description";
                Editable=FALSE;
                ImplicitType=Text50 }

    { 45  ;2   ;Field     ;
                Name=Opportunity No.;
                ToolTipML=ENU=Specifies the number of the opportunity to which the task is linked.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Opportunity No.";
                OnValidate=BEGIN
                             OpportunityNoOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 53  ;2   ;Field     ;
                Name=Opportunity Description;
                ToolTipML=ENU=Specifies a description of the opportunity related to the task. The description is copied from the opportunity card.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Opportunity Description";
                Editable=FALSE;
                ImplicitType=Text50 }

    { 1904441601;1;Group  ;
                Name=Recurring;
                CaptionML=ENU=Recurring }

    { 39  ;2   ;Field     ;
                Name=Field39;
                ToolTipML=ENU=Specifies that the task occurs periodically.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Recurring;
                OnValidate=BEGIN
                             RecurringOnPush;
                           END;

                ImplicitType=Boolean }

    { 41  ;2   ;Field     ;
                Name=Recurring Date Interval;
                ToolTipML=ENU=Specifies the date formula to assign automatically a recurring task to a salesperson or team.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Recurring Date Interval";
                Enabled=RecurringDateIntervalEnable;
                Editable=RecurringDateIntervalEditable;
                ImplicitType=DateFormula }

    { 43  ;2   ;Field     ;
                Name=Calc. Due Date From;
                ToolTipML=ENU=Specifies the date to use to calculate the date on which the next task should be completed.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Calc. Due Date From";
                Enabled=CalcDueDateFromEnable;
                Editable=CalcDueDateFromEditable;
                ImplicitType=Option }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The %1 will always have either the %2 or %3 assigned.';
      Text002@1002 : TextConst 'ENU=The %1 of the %2 type must always have the %3 assigned.';
      CannotSelectAttendeesErr@1005 : TextConst '@@@="%1 = Task Type";ENU=You cannot select attendees for a task of the ''%1'' type.';
      MakePhoneCallIsNotAvailableErr@1007 : TextConst 'ENU=The Make Phone Call function for this task is available only in the Attendee Scheduling window.';
      MustAssignContactErr@1008 : TextConst 'ENU=You must assign a contact to this task before you can use the Make Phone Call function.';
      MultipleTxt@1009 : TextConst 'ENU=(Multiple)';
      ContactNameHideValue@19061599 : Boolean INDATASET;
      ContactCompanyNameHideValue@19040407 : Boolean INDATASET;
      ContactNoEditable@19030566 : Boolean INDATASET;
      RecurringDateIntervalEditable@19051941 : Boolean INDATASET;
      CalcDueDateFromEditable@19052355 : Boolean INDATASET;
      CompletedByEditable@19071171 : Boolean INDATASET;
      StartTimeEnable@19008764 : Boolean INDATASET;
      EndingTimeEnable@19050392 : Boolean INDATASET;
      DurationEnable@19035217 : Boolean INDATASET;
      LocationEnable@19013618 : Boolean INDATASET;
      AllDayEventEnable@19049519 : Boolean INDATASET;
      NoOfAttendeesEnable@19000329 : Boolean INDATASET;
      AttendeesAcceptedNoEnable@19007606 : Boolean INDATASET;
      CompletedByEnable@19024761 : Boolean INDATASET;
      RecurringDateIntervalEnable@19019953 : Boolean INDATASET;
      CalcDueDateFromEnable@19036769 : Boolean INDATASET;

    [External]
    PROCEDURE SetRecurringEditable@1();
    BEGIN
      RecurringDateIntervalEditable := Recurring;
      CalcDueDateFromEditable := Recurring;
    END;

    LOCAL PROCEDURE EnableFields@2();
    BEGIN
      RecurringDateIntervalEnable := Recurring;
      CalcDueDateFromEnable := Recurring;

      if not Recurring then begin
        EVALUATE("Recurring Date Interval",'');
        CLEAR("Calc. Due Date From");
      end;

      if Type = Type::Meeting then begin
        StartTimeEnable := not "All Day Event";
        EndingTimeEnable := not "All Day Event";
        DurationEnable := not "All Day Event";
        LocationEnable := true;
        AllDayEventEnable := true;
      end else begin
        StartTimeEnable := false;
        EndingTimeEnable := false;
        LocationEnable := false;
        DurationEnable := false;
        AllDayEventEnable := false;
      end;

      GetEndDateTime;
    END;

    LOCAL PROCEDURE SwitchCardControls@3();
    BEGIN
      if Type = Type::Meeting then begin
        ContactNoEditable := false;

        NoOfAttendeesEnable := true;
        AttendeesAcceptedNoEnable := true;
      end else begin
        ContactNoEditable := true;

        NoOfAttendeesEnable := false;
        AttendeesAcceptedNoEnable := false;
      end;
      if "Team Code" = '' then
        CompletedByEnable := false
      else begin
        CompletedByEnable := true;
        CompletedByEditable := not Closed
      end
    END;

    LOCAL PROCEDURE TeamCodeOnAfterValidate@19070305();
    BEGIN
      SwitchCardControls;
      CALCFIELDS(
        "No. of Attendees",
        "Attendees Accepted No.",
        "Contact Name",
        "Contact Company Name",
        "Campaign Description",
        "Opportunity Description")
    END;

    LOCAL PROCEDURE ContactNoOnAfterValidate@19009577();
    BEGIN
      CALCFIELDS("Contact Name","Contact Company Name");
    END;

    LOCAL PROCEDURE TypeOnAfterValidate@19069045();
    BEGIN
      EnableFields;
    END;

    LOCAL PROCEDURE AllDayEventOnAfterValidate@19020274();
    BEGIN
      EnableFields;
    END;

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@19011896();
    BEGIN
      SwitchCardControls;
      CALCFIELDS(
        "No. of Attendees",
        "Attendees Accepted No.",
        "Contact Name",
        "Contact Company Name",
        "Campaign Description",
        "Opportunity Description");
    END;

    LOCAL PROCEDURE CampaignNoOnAfterValidate@19036822();
    BEGIN
      CALCFIELDS("Campaign Description");
    END;

    LOCAL PROCEDURE OpportunityNoOnAfterValidate@19076180();
    BEGIN
      CALCFIELDS("Opportunity Description");
    END;

    LOCAL PROCEDURE RecurringOnPush@19040619();
    BEGIN
      SetRecurringEditable;
    END;

    LOCAL PROCEDURE ContactNoOnFormat@19025756(Text@19019593 : Text[1024]);
    BEGIN
      if Type = Type::Meeting then
        Text := MultipleTxt;
    END;

    LOCAL PROCEDURE ContactNameOnFormat@19032823();
    BEGIN
      if Type = Type::Meeting then
        ContactNameHideValue := true;
    END;

    LOCAL PROCEDURE ContactCompanyNameOnFormat@19053256();
    BEGIN
      if Type = Type::Meeting then
        ContactCompanyNameHideValue := true;
    END;

    BEGIN
    END.
  }
}

