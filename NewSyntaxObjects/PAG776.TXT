OBJECT Page 776 Analysis Report Chart Matrix
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Analysis Report Chart Matrix;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    SourceTable="Analysis Report Chart Line";
    PageType=List;
    OnFindRecord=BEGIN
                   exit(FINDSET);
                 END;

    OnAfterGetRecord=VAR
                       AnalysisLine@1000 : Record "Analysis Line";
                     BEGIN
                       if AnalysisLine.GET("Analysis Area","Analysis Line Template Name","Analysis Line Line No.") then begin
                         AnalysisLineRowNo := AnalysisLine."Row Ref. No.";
                         AnalysisLineDescription := AnalysisLine.Description;
                         GetChartTypes;
                       end;
                     END;

    ActionList=ACTIONS
    {
      { 17      ;    ;ActionContainer;
                      Name=ActionContainer17;
                      ActionContainerType=ActionItems }
      { 20      ;1   ;Action    ;
                      Name=ShowAll;
                      CaptionML=ENU=Select All;
                      ToolTipML=ENU=Select all lines.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=AllLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 AnalysisReportChartLine@1000 : Record "Analysis Report Chart Line";
                                 AnalysisReportChartMgt@1001 : Codeunit "Analysis Report Chart Mgt.";
                               BEGIN
                                 AnalysisReportChartLine.COPY(Rec);
                                 AnalysisReportChartLine.SETRANGE("Analysis Column Line No.");
                                 AnalysisReportChartMgt.SelectAll(AnalysisReportChartLine,true);
                               END;
                                }
      { 18      ;1   ;Action    ;
                      Name=ShowNone;
                      CaptionML=ENU=Deselect All;
                      ToolTipML=ENU=Unselect all lines.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=CancelAllLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 AnalysisReportChartLine@1001 : Record "Analysis Report Chart Line";
                                 AnalysisReportChartMgt@1000 : Codeunit "Analysis Report Chart Mgt.";
                               BEGIN
                                 AnalysisReportChartLine.COPY(Rec);
                                 AnalysisReportChartLine.SETRANGE("Analysis Column Line No.");
                                 AnalysisReportChartMgt.DeselectAll(AnalysisReportChartLine,true);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 16  ;2   ;Field     ;
                Name=<Row No.>;
                CaptionML=ENU=Row No.;
                ToolTipML=ENU=Specifies the number of the row in the chart.;
                ApplicationArea=#Suite;
                SourceExpr=AnalysisLineRowNo;
                Editable=FALSE;
                ImplicitType=Code20 }

    { 15  ;2   ;Field     ;
                Name=<Description>;
                CaptionML=ENU=Description;
                ToolTipML=ENU=Specifies a description of the chart.;
                ApplicationArea=#Suite;
                SourceExpr=AnalysisLineDescription;
                Editable=FALSE;
                ImplicitType=Text80 }

    { 14  ;2   ;Field     ;
                Name=Column1;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=ChartType[1];
                CaptionClass='3,' + ColumnCaptions[1];
                OnValidate=BEGIN
                             SetChartType(1);
                           END;
                            }

    { 13  ;2   ;Field     ;
                Name=Column2;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=ChartType[2];
                CaptionClass='3,' + ColumnCaptions[2];
                OnValidate=BEGIN
                             SetChartType(2);
                           END;
                            }

    { 12  ;2   ;Field     ;
                Name=Column3;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=ChartType[3];
                CaptionClass='3,' + ColumnCaptions[3];
                OnValidate=BEGIN
                             SetChartType(3);
                           END;
                            }

    { 11  ;2   ;Field     ;
                Name=Column4;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=ChartType[4];
                CaptionClass='3,' + ColumnCaptions[4];
                OnValidate=BEGIN
                             SetChartType(4);
                           END;
                            }

    { 10  ;2   ;Field     ;
                Name=Column5;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=ChartType[5];
                CaptionClass='3,' + ColumnCaptions[5];
                OnValidate=BEGIN
                             SetChartType(5);
                           END;
                            }

    { 9   ;2   ;Field     ;
                Name=Column6;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=ChartType[6];
                CaptionClass='3,' + ColumnCaptions[6];
                OnValidate=BEGIN
                             SetChartType(6);
                           END;
                            }

    { 8   ;2   ;Field     ;
                Name=Column7;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=ChartType[7];
                CaptionClass='3,' + ColumnCaptions[7];
                OnValidate=BEGIN
                             SetChartType(7);
                           END;
                            }

    { 7   ;2   ;Field     ;
                Name=Column8;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=ChartType[8];
                CaptionClass='3,' + ColumnCaptions[8];
                OnValidate=BEGIN
                             SetChartType(8);
                           END;
                            }

    { 6   ;2   ;Field     ;
                Name=Column9;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=ChartType[9];
                CaptionClass='3,' + ColumnCaptions[9];
                OnValidate=BEGIN
                             SetChartType(9);
                           END;
                            }

    { 5   ;2   ;Field     ;
                Name=Column10;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=ChartType[10];
                CaptionClass='3,' + ColumnCaptions[10];
                OnValidate=BEGIN
                             SetChartType(10);
                           END;
                            }

    { 3   ;2   ;Field     ;
                Name=Column11;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=ChartType[11];
                CaptionClass='3,' + ColumnCaptions[11];
                OnValidate=BEGIN
                             SetChartType(11);
                           END;
                            }

    { 4   ;2   ;Field     ;
                Name=Column12;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=ChartType[12];
                CaptionClass='3,' + ColumnCaptions[12];
                OnValidate=BEGIN
                             SetChartType(12);
                           END;
                            }

  }
  CODE
  {
    VAR
      AnalysisLineRowNo@1005 : Code[20];
      AnalysisLineDescription@1004 : Text[80];
      ChartType@1003 : ARRAY [12] OF '" ",Line,StepLine,Column,StackedColumn';
      ColumnCaptions@1002 : ARRAY [12] OF Text[80];
      ColumnLineNos@1001 : ARRAY [12] OF Integer;
      MaxColumns@1000 : Integer;
      Text001@1006 : TextConst 'ENU=Invalid Column Layout.';

    [External]
    PROCEDURE SetFilters@1(AnalysisReportChartSetup@1000 : Record "Analysis Report Chart Setup");
    BEGIN
      RESET;

      AnalysisReportChartSetup.SetLinkToLines(Rec);
      case AnalysisReportChartSetup."Base X-Axis on" of
        AnalysisReportChartSetup."Base X-Axis on"::Period:
          if FINDFIRST then
            SETRANGE("Analysis Column Line No.","Analysis Column Line No.");
        AnalysisReportChartSetup."Base X-Axis on"::Line,
        AnalysisReportChartSetup."Base X-Axis on"::Column:
          SETRANGE("Analysis Column Line No.",0);
      end;
      UpdateColumnCaptions(AnalysisReportChartSetup);
    END;

    LOCAL PROCEDURE UpdateColumnCaptions@19(AnalysisReportChartSetup@1003 : Record "Analysis Report Chart Setup");
    VAR
      AnalysisColumn@1002 : Record "Analysis Column";
      ColumnNo@1000 : Integer;
      i@1001 : Integer;
    BEGIN
      CLEAR(ColumnCaptions);
      AnalysisReportChartSetup.FilterAnalysisColumn(AnalysisColumn);

      if AnalysisColumn.FINDSET then
        repeat
          ColumnNo := ColumnNo + 1;
          ColumnCaptions[ColumnNo] := AnalysisColumn."Column Header";
          ColumnLineNos[ColumnNo] := AnalysisColumn."Line No.";
        until (AnalysisColumn.NEXT = 0) or (ColumnNo = ARRAYLEN(ColumnCaptions));
      MaxColumns := ColumnNo;
      // Set unused columns to blank to prevent RTC to display control ID as caption
      for i := MaxColumns + 1 to ARRAYLEN(ColumnCaptions) do
        ColumnCaptions[i] := ' ';
    END;

    LOCAL PROCEDURE GetChartTypes@3();
    VAR
      AnalysisReportChartSetup@1003 : Record "Analysis Report Chart Setup";
      AnalysisReportChartLine@1000 : Record "Analysis Report Chart Line";
      AnalysisReportChartLine2@1002 : Record "Analysis Report Chart Line";
      i@1001 : Integer;
    BEGIN
      AnalysisReportChartSetup.GET("User ID","Analysis Area",Name);
      case AnalysisReportChartSetup."Base X-Axis on" of
        AnalysisReportChartSetup."Base X-Axis on"::Period:
          for i := 1 to MaxColumns do begin
            AnalysisReportChartLine.GET("User ID","Analysis Area",Name,"Analysis Line Line No.",ColumnLineNos[i]);
            ChartType[i] := AnalysisReportChartLine."Chart Type";
          end;
        AnalysisReportChartSetup."Base X-Axis on"::Line:
          begin
            AnalysisReportChartLine.GET("User ID","Analysis Area",Name,"Analysis Line Line No.",0);
            if AnalysisReportChartLine."Chart Type" <> AnalysisReportChartLine."Chart Type"::" " then
              for i := 1 to MaxColumns do begin
                AnalysisReportChartLine2.GET("User ID","Analysis Area",Name,0,ColumnLineNos[i]);
                ChartType[i] := AnalysisReportChartLine2."Chart Type";
              end
            else
              for i := 1 to MaxColumns do
                ChartType[i] := AnalysisReportChartLine2."Chart Type"::" ";
          end;
        AnalysisReportChartSetup."Base X-Axis on"::Column:
          begin
            AnalysisReportChartLine.GET("User ID","Analysis Area",Name,"Analysis Line Line No.",0);
            for i := 1 to MaxColumns do begin
              AnalysisReportChartLine2.GET("User ID","Analysis Area",Name,0,ColumnLineNos[i]);
              if AnalysisReportChartLine2."Chart Type" <> AnalysisReportChartLine2."Chart Type"::" " then
                ChartType[i] := AnalysisReportChartLine."Chart Type"
              else
                ChartType[i] := AnalysisReportChartLine."Chart Type"::" ";
            end;
          end;
      end;
      for i := MaxColumns + 1 to ARRAYLEN(ColumnCaptions) do
        ChartType[i] := AnalysisReportChartLine."Chart Type"::" ";
    END;

    LOCAL PROCEDURE SetChartType@2(ColumnNo@1000 : Integer);
    VAR
      AnalysisReportChartLine@1001 : Record "Analysis Report Chart Line";
      AnalysisReportChartSetup@1002 : Record "Analysis Report Chart Setup";
    BEGIN
      if ColumnNo > MaxColumns then
        ERROR(Text001);

      AnalysisReportChartSetup.GET("User ID","Analysis Area",Name);
      case AnalysisReportChartSetup."Base X-Axis on" of
        AnalysisReportChartSetup."Base X-Axis on"::Period:
          AnalysisReportChartLine.GET("User ID","Analysis Area",Name,"Analysis Line Line No.",ColumnLineNos[ColumnNo]);
        AnalysisReportChartSetup."Base X-Axis on"::Line:
          AnalysisReportChartLine.GET("User ID","Analysis Area",Name,0,ColumnLineNos[ColumnNo]);
        AnalysisReportChartSetup."Base X-Axis on"::Column:
          AnalysisReportChartLine.GET("User ID","Analysis Area",Name,"Analysis Line Line No.",0);
      end;
      AnalysisReportChartLine.VALIDATE("Chart Type",ChartType[ColumnNo]);
      AnalysisReportChartLine.MODIFY;
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

