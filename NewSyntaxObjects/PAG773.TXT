OBJECT Page 773 Users in User Groups Chart
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Users in User Groups;
    SourceTable="Business Chart Buffer";
    PageType=CardPart;
    OnFindRecord=BEGIN
                   UpdateChart;
                   IsChartDataReady := true;
                 END;

  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=container;
                ContainerType=ContentArea }

    { 12  ;1   ;Field     ;
                Name=StatusText;
                CaptionML=ENU=Status Text;
                ToolTipML=ENU=Specifies the status of the chart.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=StatusText;
                ImplicitType=Text250;
                ShowCaption=false }

    { 5   ;1   ;Field     ;
                Name=BusinessChart;
                CaptionML=ENU=Business Chart;
                ToolTipML=ENU=Specifies if the chart is of type Business Chart.;
                ApplicationArea=#Basic,#Suite;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.BusinessChart;PublicKeyToken=31bf3856ad364e35] }

  }
  CODE
  {
    VAR
      StatusText@1003 : Text[250];
      IsChartDataReady@1020 : Boolean;
      UsersTxt@1000 : TextConst 'ENU=Users';
      UserGroupTxt@1001 : TextConst 'ENU=User Group';

    LOCAL PROCEDURE UpdateChart@6();
    BEGIN
      UpdateData;
      Update(CurrPage.BusinessChart);
    END;

    LOCAL PROCEDURE UpdateData@1();
    VAR
      UsersInUserGroups@1000 : Query "Users in User Groups";
      ColumnNumber@1001 : Integer;
    BEGIN
      Initialize; // Initialize .NET variables for the chart

      // Define Y-Axis
      AddMeasure(UsersTxt,1,"Data Type"::Integer,"Chart Type"::Column);

      // Define X-Axis
      SetXAxis(UserGroupTxt,"Data Type"::String);

      if not UsersInUserGroups.OPEN then
        exit;

      while UsersInUserGroups.READ do begin
        // Add data to the chart
        AddColumn(FORMAT(UsersInUserGroups.UserGroupCode)); // X-Axis data
        SetValue(UsersTxt,ColumnNumber,UsersInUserGroups.NumberOfUsers); // Y-Axis data
        ColumnNumber += 1;
      end;
      IsChartDataReady := true;
    END;

    EVENT BusinessChart@-5::DataPointClicked@12(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    VAR
      UserGroupMember@1001 : Record "User Group Member";
    BEGIN
      UserGroupMember.SETRANGE("User Group Code",point.XValueString);
      if not UserGroupMember.FINDFIRST then
        exit;
      PAGE.RUNMODAL(PAGE::"User Group Members",UserGroupMember);
      CurrPage.UPDATE; // refresh the charts with the eventual changes
    END;

    EVENT BusinessChart@-5::DataPointDoubleClicked@13(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
    END;

    EVENT BusinessChart@-5::AddInReady@14();
    BEGIN
      if IsChartDataReady then
        UpdateChart;
    END;

    EVENT BusinessChart@-5::Refresh@15();
    BEGIN
      if IsChartDataReady then
        UpdateChart;
    END;

    BEGIN
    END.
  }
}

