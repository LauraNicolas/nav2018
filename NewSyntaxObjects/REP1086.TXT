OBJECT Report 1086 Job Calculate WIP
{
  OBJECT-PROPERTIES
  {
    Date=20161025D;
    Time=120000T;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Job Calculate WIP;
    ProcessingOnly=true;
    OnPreReport=VAR
                  NewNoSeriesCode@1000 : Code[10];
                BEGIN
                  JobsSetup.GET;

                  if DocNo = '' then begin
                    JobsSetup.TESTFIELD("Job Nos.");
                    NoSeriesMgt.InitSeries(JobsSetup."Job WIP Nos.",JobsSetup."Job WIP Nos.",0D,DocNo,NewNoSeriesCode);
                  end;

                  if PostingDate = 0D then
                    PostingDate := WORKDATE;

                  JobCalculateBatches.BatchError(PostingDate,DocNo);
                END;

    OnPostReport=VAR
                   WIPPosted@1001 : Boolean;
                   WIPQst@1002 : Text;
                 BEGIN
                   JobWIPEntry.SETCURRENTKEY("Job No.");
                   JobWIPEntry.SETFILTER("Job No.",Job.GETFILTER("No."));
                   WIPPosted := JobWIPEntry.FINDFIRST;
                   COMMIT;

                   if WIPPosted then begin
                     if WIPPostedWithWarnings then
                       MESSAGE(Text002)
                     else
                       MESSAGE(Text000);
                     if DIALOG.CONFIRM(PreviewQst) then begin
                       JobWIPEntry.SETRANGE("Job No.",Job."No.");
                       PAGE.RUNMODAL(PAGE::"Job WIP Entries",JobWIPEntry);

                       WIPQst := STRSUBSTNO(RunWIPFunctionsQst,'Job Post WIP to G/L');
                       if DIALOG.CONFIRM(WIPQst) then
                         REPORT.RUN(REPORT::"Job Post WIP to G/L",false,false,Job)
                       else
                         REPORT.RUNMODAL(REPORT::"Job Post WIP to G/L",true,false,Job);
                     end;
                   end else
                     MESSAGE(Text001);
                 END;

  }
  DATASET
  {
    { 8019;    ;DataItem;Job                 ;
               DataItemTable=Job;
               DataItemTableView=SORTING("No.");
               OnAfterGetRecord=VAR
                                  JobCalculateWIP@1000 : Codeunit "Job Calculate WIP";
                                BEGIN
                                  JobCalculateWIP.JobCalcWIP(Job,PostingDate,DocNo);
                                  CALCFIELDS("WIP Warnings");
                                  WIPPostedWithWarnings := WIPPostedWithWarnings or "WIP Warnings";
                                END;

               ReqFilterFields="No.","Planning Date Filter","Posting Date Filter" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=VAR
                   NewNoSeriesCode@1000 : Code[10];
                 BEGIN
                   if PostingDate = 0D then
                     PostingDate := WORKDATE;

                   JobsSetup.GET;

                   JobsSetup.TESTFIELD("Job Nos.");
                   NoSeriesMgt.InitSeries(JobsSetup."Job WIP Nos.",JobsSetup."Job WIP Nos.",0D,DocNo,NewNoSeriesCode);
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=PostingDate;
                  CaptionML=ENU=Posting Date;
                  ToolTipML=ENU=Specifies the posting date for the document.;
                  ApplicationArea=#Jobs;
                  SourceExpr=PostingDate }

      { 5   ;2   ;Field     ;
                  Name=DocumentNo;
                  CaptionML=ENU=Document No.;
                  ToolTipML=ENU=Specifies the number of a document that the calculation will apply to.;
                  ApplicationArea=#Jobs;
                  SourceExpr=DocNo }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      JobWIPEntry@1004 : Record "Job WIP Entry";
      JobsSetup@1008 : Record "Jobs Setup";
      JobCalculateBatches@1000 : Codeunit "Job Calculate Batches";
      NoSeriesMgt@1009 : Codeunit NoSeriesManagement;
      PostingDate@1001 : Date;
      DocNo@1003 : Code[20];
      Text000@1006 : TextConst 'ENU=WIP was successfully calculated.';
      Text001@1007 : TextConst 'ENU=There were no new WIP entries created.';
      Text002@1002 : TextConst 'ENU=WIP was calculated with warnings.';
      WIPPostedWithWarnings@1005 : Boolean;
      PreviewQst@1010 : TextConst 'ENU=Do you want to preview the posting accounts?';
      RunWIPFunctionsQst@1011 : TextConst '@@@="%1 = The name of the Job Post WIP to G/L report";ENU=You must run the %1 function to post the completion entries for this job. \Do you want to run this function now?';

    PROCEDURE InitializeRequest@1();
    BEGIN
      PostingDate := WORKDATE;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

