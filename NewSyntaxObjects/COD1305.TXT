OBJECT Codeunit 1305 Sales-Quote to Invoice
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    TableNo="Sales Header";
    OnRun=VAR
            Cust@1008 : Record Customer;
            SalesInvoiceLine@1000 : Record "Sales Line";
            SalesSetup@1001 : Record "Sales & Receivables Setup";
            CustCheckCrLimit@1006 : Codeunit "Cust-Check Cr. Limit";
          BEGIN
            TESTFIELD("Document Type","Document Type"::Quote);

            if "Sell-to Customer No." = '' then
              ERROR(SpecifyCustomerErr);

            if "Bill-to Customer No." = '' then
              ERROR(SpecifyBillToCustomerNoErr,FIELDCAPTION("Bill-to Customer No."));

            Cust.GET("Sell-to Customer No.");
            Cust.CheckBlockedCustOnDocs(Cust,"Document Type"::Quote,true,false);
            CALCFIELDS("Amount Including VAT","Invoice Discount Amount","Work Description");

            SalesInvoiceHeader := Rec;

            SalesInvoiceLine.LOCKTABLE;

            CreateSalesInvoiceHeader(SalesInvoiceHeader,Rec);
            CreateSalesInvoiceLines(SalesInvoiceHeader,Rec);

            SalesSetup.GET;
            if SalesSetup."Default Posting Date" = SalesSetup."Default Posting Date"::"No Date" then begin
              SalesInvoiceHeader."Posting Date" := 0D;
              SalesInvoiceHeader.MODIFY;
            end;
            UpdateEmailParameters(SalesInvoiceHeader);
            UpdateCouponClaims(SalesInvoiceHeader);

            DELETELINKS;
            DELETE;

            COMMIT;
            CLEAR(CustCheckCrLimit);
          END;

  }
  CODE
  {
    VAR
      SalesInvoiceHeader@1000 : Record "Sales Header";
      SpecifyCustomerErr@1002 : TextConst 'ENU=You must select a customer before you can convert a quote to an invoice.';
      SpecifyBillToCustomerNoErr@1003 : TextConst '@@@=%1 is Bill-To Customer No.;ENU=You must specify the %1 before you can convert a quote to an invoice.';

    [External]
    PROCEDURE GetSalesInvoiceHeader@1(VAR SalesHeader2@1000 : Record "Sales Header");
    BEGIN
      SalesHeader2 := SalesInvoiceHeader;
    END;

    LOCAL PROCEDURE CreateSalesInvoiceHeader@3(VAR SalesInvoiceHeader@1000 : Record "Sales Header";SalesQuoteHeader@1001 : Record "Sales Header");
    BEGIN
      with SalesQuoteHeader do begin
        SalesInvoiceHeader."Document Type" := SalesInvoiceHeader."Document Type"::Invoice;

        SalesInvoiceHeader."No. Printed" := 0;
        SalesInvoiceHeader.Status := SalesInvoiceHeader.Status::Open;
        SalesInvoiceHeader."No." := '';

        SalesInvoiceHeader."Quote No." := "No.";
        SalesInvoiceHeader.INSERT(true);

        if "Posting Date" <> 0D then
          SalesInvoiceHeader."Posting Date" := "Posting Date"
        else
          SalesInvoiceHeader."Posting Date" := WORKDATE;
        SalesInvoiceHeader.InitFromSalesHeader(SalesQuoteHeader);
        OnBeforeInsertSalesInvoiceHeader(SalesInvoiceHeader,SalesQuoteHeader);
        SalesInvoiceHeader.MODIFY;
      end;
    END;

    LOCAL PROCEDURE CreateSalesInvoiceLines@4(SalesInvoiceHeader@1003 : Record "Sales Header";SalesQuoteHeader@1002 : Record "Sales Header");
    VAR
      SalesQuoteLine@1000 : Record "Sales Line";
      SalesInvoiceLine@1004 : Record "Sales Line";
    BEGIN
      with SalesQuoteHeader do begin
        SalesQuoteLine.RESET;
        SalesQuoteLine.SETRANGE("Document Type","Document Type");
        SalesQuoteLine.SETRANGE("Document No.","No.");

        if SalesQuoteLine.FINDSET then
          repeat
            SalesInvoiceLine := SalesQuoteLine;
            SalesInvoiceLine."Document Type" := SalesInvoiceHeader."Document Type";
            SalesInvoiceLine."Document No." := SalesInvoiceHeader."No.";
            if SalesInvoiceLine."No." <> '' then
              SalesInvoiceLine.DefaultDeferralCode;
            OnBeforeInsertSalesInvoiceLine(SalesQuoteLine,SalesQuoteHeader,SalesInvoiceLine,SalesInvoiceHeader);
            SalesInvoiceLine.INSERT;
          until SalesQuoteLine.NEXT = 0;

        MoveLineCommentsToSalesInvoice(SalesInvoiceHeader,SalesQuoteHeader);

        SalesQuoteLine.DELETEALL;
      end;
    END;

    LOCAL PROCEDURE MoveLineCommentsToSalesInvoice@5(SalesInvoiceHeader@1001 : Record "Sales Header";SalesQuoteHeader@1000 : Record "Sales Header");
    VAR
      SalesCommentLine@1003 : Record "Sales Comment Line";
      RecordLinkManagement@1004 : Codeunit "Record Link Management";
    BEGIN
      SalesCommentLine.CopyComments(
        SalesQuoteHeader."Document Type",SalesInvoiceHeader."Document Type",SalesQuoteHeader."No.",SalesInvoiceHeader."No.");
      RecordLinkManagement.CopyLinks(SalesQuoteHeader,SalesInvoiceHeader);
    END;

    LOCAL PROCEDURE UpdateEmailParameters@197(SalesHeader@1000 : Record "Sales Header");
    VAR
      EmailParameter@1001 : Record "Email Parameter";
    BEGIN
      EmailParameter.SETRANGE("Document No",SalesHeader."Quote No.");
      EmailParameter.SETRANGE("Document Type",SalesHeader."Document Type"::Quote);
      EmailParameter.DELETEALL;
    END;

    LOCAL PROCEDURE UpdateCouponClaims@2(SalesHeader@1000 : Record "Sales Header");
    VAR
      O365CouponClaimDocLink@1001 : Record "O365 Coupon Claim Doc. Link";
    BEGIN
      O365CouponClaimDocLink.SETRANGE("Document No.",SalesHeader."Quote No.");
      O365CouponClaimDocLink.SETRANGE("Document Type",SalesHeader."Document Type"::Quote);
      if O365CouponClaimDocLink.FINDSET(true,true) then
        repeat
          O365CouponClaimDocLink.RENAME(
            O365CouponClaimDocLink."Claim ID",O365CouponClaimDocLink."Graph Contact ID",SalesHeader."Document Type",SalesHeader."No.");
        until O365CouponClaimDocLink.NEXT = 0;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeInsertSalesInvoiceHeader@7(VAR SalesInvoiceHeader@1000 : Record "Sales Header";QuoteSalesHeader@1001 : Record "Sales Header");
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeInsertSalesInvoiceLine@8(VAR SalesQuoteLine@1004 : Record "Sales Line";SalesQuoteHeader@1003 : Record "Sales Header";SalesInvoiceLine@1002 : Record "Sales Line";SalesInvoiceHeader@1001 : Record "Sales Header");
    BEGIN
    END;

    BEGIN
    END.
  }
}

