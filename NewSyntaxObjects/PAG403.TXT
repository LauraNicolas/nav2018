OBJECT Page 403 Purchase Order Statistics
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Purchase Order Statistics;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable="Purchase Header";
    PageType=Card;
    OnOpenPage=BEGIN
                 PurchSetup.GET;
                 AllowInvDisc :=
                   not (PurchSetup."Calc. Inv. Discount" and VendInvDiscRecExists("Invoice Disc. Code"));
                 AllowVATDifference :=
                   PurchSetup."Allow VAT Difference" and
                   not ("Document Type" in ["Document Type"::Quote,"Document Type"::"Blanket Order"]);
                 VATLinesFormIsEditable := AllowVATDifference or AllowInvDisc;
                 CurrPage.EDITABLE := VATLinesFormIsEditable;
               END;

    OnAfterGetRecord=BEGIN
                       RefreshOnAfterGetRecord;
                     END;

    OnQueryClosePage=VAR
                       PurchLine@1001 : Record "Purchase Line";
                       ReleasePurchaseDocument@1002 : Codeunit "Release Purchase Document";
                     BEGIN
                       GetVATSpecification(PrevTab);
                       ReleasePurchaseDocument.CalcAndUpdateVATOnLines(Rec,PurchLine);
                       exit(true);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 35  ;2   ;Field     ;
                Name=LineAmountGeneral;
                CaptionML=ENU=Amount;
                ToolTipML=ENU=Specifies the net amount of all the lines in the purchase order. This amount does not include VAT or any invoice discount, but does include line discounts.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchLine[1]."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text002,false);
                Editable=FALSE }

    { 32  ;2   ;Field     ;
                Name=InvDiscountAmount_General;
                CaptionML=ENU=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount for the entire purchase order.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchLine[1]."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                OnValidate=BEGIN
                             ActiveTab := ActiveTab::General;
                             UpdateInvDiscAmount(1);
                           END;
                            }

    { 26  ;2   ;Field     ;
                Name=Total_General;
                CaptionML=ENU=Total;
                ToolTipML=ENU=Specifies the total amount, less any invoice discount amount and excluding VAT for the purchase order.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalAmount1[1];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,false);
                OnValidate=BEGIN
                             ActiveTab := ActiveTab::General;
                             UpdateTotalAmount(1);
                           END;
                            }

    { 22  ;2   ;Field     ;
                Name=VAT Amount;
                CaptionML=ENU=VAT Amount;
                ToolTipML=ENU=Specifies the total VAT amount that has been calculated for all the lines in the purchase order.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=VATAmount[1];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT(VATAmountText[1]);
                Editable=FALSE }

    { 20  ;2   ;Field     ;
                Name=TotalInclVAT_General;
                CaptionML=ENU=Total Incl. VAT;
                ToolTipML=ENU=Specifies the amount, including VAT. On the Invoicing FastTab, this is the amount that is posted to the vendor's account for all the lines in the purchase order if you post the purchase order as invoiced.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalAmount2[1];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,true);
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                Name=Purchase (LCY);
                CaptionML=ENU=Purchase (LCY);
                ToolTipML=ENU=Specifies the amount in the Total field, converted to LCY.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchLineLCY[1].Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 37  ;2   ;Field     ;
                Name=Quantity_General;
                CaptionML=ENU=Quantity;
                ToolTipML=ENU=Specifies the total quantity of G/L account entries, fixed assets, and/or items in the purchase order.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine[1].Quantity;
                Editable=FALSE }

    { 30  ;2   ;Field     ;
                Name=Parcels;
                CaptionML=ENU=Parcels;
                ToolTipML=ENU=Specifies the total number of parcels in the purchase order.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine[1]."Units per Parcel";
                Editable=FALSE }

    { 28  ;2   ;Field     ;
                Name=Net Weight;
                CaptionML=ENU=Net Weight;
                ToolTipML=ENU=Specifies the total net weight of the items in the purchase order.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine[1]."Net Weight";
                Editable=FALSE }

    { 23  ;2   ;Field     ;
                Name=Gross Weight;
                CaptionML=ENU=Gross Weight;
                ToolTipML=ENU=Specifies the total gross weight of the items in the purchase order.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine[1]."Gross Weight";
                Editable=FALSE }

    { 18  ;2   ;Field     ;
                Name=Volume;
                CaptionML=ENU=Volume;
                ToolTipML=ENU=Specifies the total volume of the items in the purchase order.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine[1]."Unit Volume";
                Editable=FALSE }

    { 40  ;2   ;Field     ;
                Name=NoOfVATLines_General;
                DrillDown=true;
                CaptionML=ENU=No. of Tax Lines;
                ToolTipML=ENU=Specifies the number of lines on the purchase order that have VAT amounts.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TempVATAmountLine1.COUNT;
                OnDrillDown=BEGIN
                              VATLinesDrillDown(TempVATAmountLine1,false);
                              UpdateHeaderInfo(1,TempVATAmountLine1);
                            END;
                             }

    { 1905885101;1;Group  ;
                Name=Invoicing;
                CaptionML=ENU=Invoicing }

    { 59  ;2   ;Field     ;
                Name=Amount;
                CaptionML=ENU=Amount;
                ToolTipML=ENU=Specifies the net amount of all the lines in the purchase order. This amount does not include VAT or any invoice discount, but does include line discounts.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchLine[2]."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text002,false);
                Editable=FALSE }

    { 57  ;2   ;Field     ;
                Name=InvDiscountAmount_Invoicing;
                CaptionML=ENU=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchLine[2]."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                OnValidate=BEGIN
                             ActiveTab := ActiveTab::Invoicing;
                             UpdateInvDiscAmount(2);
                           END;
                            }

    { 51  ;2   ;Field     ;
                Name=Total_Invoicing;
                CaptionML=ENU=Total;
                ToolTipML=ENU=Specifies the total amount less any invoice discount amount and excluding VAT for the purchase order.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalAmount1[2];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,false);
                OnValidate=BEGIN
                             ActiveTab := ActiveTab::Invoicing;
                             UpdateTotalAmount(2);
                           END;
                            }

    { 47  ;2   ;Field     ;
                Name=VATAmount_Invoicing;
                CaptionML=ENU=VAT Amount;
                ToolTipML=ENU=Specifies the total VAT amount that has been calculated for all the lines in the purchase order.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=VATAmount[2];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT(VATAmountText[2]);
                Editable=FALSE }

    { 45  ;2   ;Field     ;
                Name=TotalInclVAT_Invoicing;
                CaptionML=ENU=Total Incl. VAT;
                ToolTipML=ENU=Specifies the amount, including VAT. On the Invoicing FastTab, this is the amount that is posted to the vendor's account for all the lines in the purchase order if you post the purchase order as invoiced.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalAmount2[2];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,true);
                Editable=FALSE }

    { 41  ;2   ;Field     ;
                Name=TotalPurchLineLCY[2].Amount;
                CaptionML=ENU=Purchase (LCY);
                ToolTipML=ENU=Specifies the amount in the Total field, converted to LCY.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchLineLCY[2].Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 61  ;2   ;Field     ;
                Name=Quantity_Invoicing;
                CaptionML=ENU=Quantity;
                ToolTipML=ENU=Specifies the total quantity of G/L account entries, fixed assets, and/or items in the purchase order.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine[2].Quantity;
                Editable=FALSE }

    { 55  ;2   ;Field     ;
                Name=TotalPurchLine[2]."Units per Parcel";
                CaptionML=ENU=Parcels;
                ToolTipML=ENU=Specifies the total number of parcels in the purchase order.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine[2]."Units per Parcel";
                Editable=FALSE }

    { 53  ;2   ;Field     ;
                Name=TotalPurchLine[2]."Net Weight";
                CaptionML=ENU=Net Weight;
                ToolTipML=ENU=Specifies the total net weight of the items in the purchase order.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine[2]."Net Weight";
                Editable=FALSE }

    { 48  ;2   ;Field     ;
                Name=TotalPurchLine[2]."Gross Weight";
                CaptionML=ENU=Gross Weight;
                ToolTipML=ENU=Specifies the total gross weight of the items in the purchase order.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine[2]."Gross Weight";
                Editable=FALSE }

    { 43  ;2   ;Field     ;
                Name=TotalPurchLine[2]."Unit Volume";
                CaptionML=ENU=Volume;
                ToolTipML=ENU=Specifies the total volume of the items in the purchase order.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine[2]."Unit Volume";
                Editable=FALSE }

    { 64  ;2   ;Field     ;
                Name=NoOfVATLines_Invoicing;
                DrillDown=true;
                CaptionML=ENU=No. of Tax Lines;
                ToolTipML=ENU=Specifies the number of lines on the purchase order that have VAT amounts.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TempVATAmountLine2.COUNT;
                OnDrillDown=BEGIN
                              ActiveTab := ActiveTab::Invoicing;
                              VATLinesDrillDown(TempVATAmountLine2,true);
                              UpdateHeaderInfo(2,TempVATAmountLine2);

                              if TempVATAmountLine2.GetAnyLineModified then begin
                                UpdateVATOnPurchLines;
                                RefreshOnAfterGetRecord;
                              end;
                            END;
                             }

    { 1906801201;1;Group  ;
                Name=Shipping;
                CaptionML=ENU=Shipping }

    { 83  ;2   ;Field     ;
                Name=TotalPurchLine[3]."Line Amount";
                CaptionML=ENU=Amount;
                ToolTipML=ENU=Specifies the net amount of all the lines in the purchase order. This amount does not include VAT or any invoice discount, but does include line discounts.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchLine[3]."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text002,false);
                Editable=FALSE }

    { 81  ;2   ;Field     ;
                Name=Inv. Discount Amount;
                CaptionML=ENU=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount for the entire purchase order.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchLine[3]."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 75  ;2   ;Field     ;
                Name=Total;
                CaptionML=ENU=Total;
                ToolTipML=ENU=Specifies the total amount less any invoice discount amount and excluding VAT for the purchase order.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalAmount1[3];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,false);
                Editable=FALSE }

    { 71  ;2   ;Field     ;
                Name=VATAmount[3];
                CaptionML=ENU=VAT Amount;
                ToolTipML=ENU=Specifies the total VAT amount that has been calculated for all the lines in the purchase order.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=VATAmount[3];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT(VATAmountText[3]);
                Editable=FALSE }

    { 69  ;2   ;Field     ;
                Name=TotalInclVAT_Shipping;
                CaptionML=ENU=Total Incl. VAT;
                ToolTipML=ENU=Specifies the amount, including VAT. On the Invoicing FastTab, this is the amount that is posted to the vendor's account for all the lines in the purchase order if you post the purchase order as invoiced.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalAmount2[3];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,true);
                Editable=FALSE }

    { 65  ;2   ;Field     ;
                Name=TotalPurchLineLCY[3].Amount;
                CaptionML=ENU=Purchase (LCY);
                ToolTipML=ENU=Specifies the amount in the Total field, converted to LCY.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalPurchLineLCY[3].Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 85  ;2   ;Field     ;
                Name=Quantity_Shipping;
                CaptionML=ENU=Quantity;
                ToolTipML=ENU=Specifies the total quantity of G/L account entries, fixed assets, and/or items in the purchase order.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine[3].Quantity;
                Editable=FALSE }

    { 79  ;2   ;Field     ;
                Name=TotalPurchLine[3]."Units per Parcel";
                CaptionML=ENU=Parcels;
                ToolTipML=ENU=Specifies the total number of parcels in the purchase order.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine[3]."Units per Parcel";
                Editable=FALSE }

    { 77  ;2   ;Field     ;
                Name=TotalPurchLine[3]."Net Weight";
                CaptionML=ENU=Net Weight;
                ToolTipML=ENU=Specifies the total net weight of the items in the purchase order.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine[3]."Net Weight";
                Editable=FALSE }

    { 72  ;2   ;Field     ;
                Name=TotalPurchLine[3]."Gross Weight";
                CaptionML=ENU=Gross Weight;
                ToolTipML=ENU=Specifies the total gross weight of the items in the purchase order.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine[3]."Gross Weight";
                Editable=FALSE }

    { 67  ;2   ;Field     ;
                Name=TotalPurchLine[3]."Unit Volume";
                CaptionML=ENU=Volume;
                ToolTipML=ENU=Specifies the total volume of the items in the purchase order.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr=TotalPurchLine[3]."Unit Volume";
                Editable=FALSE }

    { 88  ;2   ;Field     ;
                Name=No. of Tax Lines;
                DrillDown=true;
                CaptionML=ENU=No. of Tax Lines;
                ToolTipML=ENU=Specifies the number of lines on the purchase order that have VAT amounts.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TempVATAmountLine3.COUNT;
                OnDrillDown=BEGIN
                              VATLinesDrillDown(TempVATAmountLine3,false);
                            END;
                             }

    { 1900201301;1;Group  ;
                Name=Prepayment;
                CaptionML=ENU=Prepayment }

    { 15  ;2   ;Field     ;
                Name=PrepmtTotalAmount;
                ApplicationArea=#Prepayments;
                SourceExpr=PrepmtTotalAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text006,false);
                OnValidate=BEGIN
                             ActiveTab := ActiveTab::Prepayment;
                             UpdatePrepmtAmount;
                           END;

                ImplicitType=Decimal }

    { 13  ;2   ;Field     ;
                Name=PrepmtVATAmount;
                CaptionML=ENU=Prepayment Amount Invoiced;
                ToolTipML=ENU=Specifies the total prepayment amount that has been invoiced for the order.;
                ApplicationArea=#Prepayments;
                SourceExpr=PrepmtVATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT(PrepmtVATAmountText);
                Editable=FALSE;
                ImplicitType=Decimal }

    { 8   ;2   ;Field     ;
                Name=PrepmtTotalAmount2;
                CaptionML=ENU=Prepmt. Amount Invoiced;
                ToolTipML=ENU=Specifies the total prepayment amount that has been invoiced for the order.;
                ApplicationArea=#Prepayments;
                SourceExpr=PrepmtTotalAmount2;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text006,true);
                Editable=FALSE;
                ImplicitType=Decimal }

    { 6   ;2   ;Field     ;
                Name=TotalPurchLine[1]."Prepmt. Amt. Inv.";
                ApplicationArea=#Advanced;
                SourceExpr=TotalPurchLine[1]."Prepmt. Amt. Inv.";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text007,false);
                Editable=FALSE }

    { 7   ;2   ;Field     ;
                Name=PrepmtInvPct;
                ExtendedDatatype=Ratio;
                CaptionML=ENU=Invoiced % of Prepayment Amt.;
                ToolTipML=ENU=Specifies the invoiced percentage of the prepayment amount.;
                ApplicationArea=#Prepayments;
                SourceExpr=PrepmtInvPct;
                ImplicitType=Decimal }

    { 5   ;2   ;Field     ;
                Name=TotalPurchLine[1]."Prepmt Amt Deducted";
                ApplicationArea=#Advanced;
                SourceExpr=TotalPurchLine[1]."Prepmt Amt Deducted";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text008,false);
                Editable=FALSE }

    { 3   ;2   ;Field     ;
                Name=PrepmtDeductedPct;
                ExtendedDatatype=Ratio;
                CaptionML=ENU=Deducted % of Prepayment Amt. to Deduct;
                ToolTipML=ENU=Specifies the deducted percentage of the prepayment amount to deduct.;
                ApplicationArea=#Prepayments;
                SourceExpr=PrepmtDeductedPct;
                ImplicitType=Decimal }

    { 4   ;2   ;Field     ;
                Name=TotalPurchLine[1]."Prepmt Amt to Deduct";
                ApplicationArea=#Advanced;
                SourceExpr=TotalPurchLine[1]."Prepmt Amt to Deduct";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text009,false);
                Editable=FALSE }

    { 90  ;2   ;Field     ;
                Name=No. of VAT Lines;
                DrillDown=true;
                CaptionML=ENU=No. of VAT Lines;
                ToolTipML=ENU=Specifies the number of purchase order lines that are associated with the VAT ledger line.;
                ApplicationArea=#Advanced;
                SourceExpr=TempVATAmountLine4.COUNT;
                OnDrillDown=BEGIN
                              VATLinesDrillDown(TempVATAmountLine4,true);
                            END;
                             }

    { 1901061301;1;Group  ;
                Name=Vendor;
                CaptionML=ENU=Vendor }

    { 131 ;2   ;Field     ;
                Name=Balance (LCY);
                CaptionML=ENU=Balance (LCY);
                ToolTipML=ENU=Specifies the balance (in LCY) due to the vendor.;
                ApplicationArea=#Advanced;
                SourceExpr=Vend."Balance (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Purchase %1 Statistics';
      Text001@1001 : TextConst 'ENU=Total';
      Text002@1002 : TextConst 'ENU=Amount';
      Text003@1003 : TextConst 'ENU=%1 must not be 0.';
      Text004@1004 : TextConst 'ENU=%1 must not be greater than %2.';
      Text005@1005 : TextConst 'ENU=You cannot change the invoice discount because there is a %1 record for %2 %3.';
      TotalPurchLine@1006 : ARRAY [3] OF Record "Purchase Line";
      TotalPurchLineLCY@1007 : ARRAY [3] OF Record "Purchase Line";
      Vend@1008 : Record Vendor;
      TempVATAmountLine1@1009 : TEMPORARY Record "VAT Amount Line";
      TempVATAmountLine2@1010 : TEMPORARY Record "VAT Amount Line";
      TempVATAmountLine3@1011 : TEMPORARY Record "VAT Amount Line";
      TempVATAmountLine4@1030 : TEMPORARY Record "VAT Amount Line";
      PurchSetup@1012 : Record "Purchases & Payables Setup";
      PurchPost@1013 : Codeunit "Purch.-Post";
      VATLinesForm@1037 : Page "VAT Amount Lines";
      TotalAmount1@1014 : ARRAY [3] OF Decimal;
      TotalAmount2@1015 : ARRAY [3] OF Decimal;
      VATAmount@1016 : ARRAY [3] OF Decimal;
      PrepmtTotalAmount@1028 : Decimal;
      PrepmtVATAmount@1027 : Decimal;
      PrepmtTotalAmount2@1026 : Decimal;
      VATAmountText@1017 : ARRAY [3] OF Text[30];
      PrepmtVATAmountText@1029 : Text[30];
      PrepmtInvPct@1032 : Decimal;
      PrepmtDeductedPct@1031 : Decimal;
      i@1018 : Integer;
      PrevNo@1019 : Code[20];
      ActiveTab@1020 : 'General,Invoicing,Shipping,Prepayment';
      PrevTab@1021 : 'General,Invoicing,Shipping,Prepayment';
      VATLinesFormIsEditable@1023 : Boolean;
      AllowInvDisc@1024 : Boolean;
      AllowVATDifference@1025 : Boolean;
      Text006@1033 : TextConst 'ENU=Prepmt. Amount';
      Text007@1034 : TextConst 'ENU=Prepmt. Amt. Invoiced';
      Text008@1035 : TextConst 'ENU=Prepmt. Amt. Deducted';
      Text009@1036 : TextConst 'ENU=Prepmt. Amt. to Deduct';
      UpdateInvDiscountQst@1022 : TextConst 'ENU=One or more lines have been invoiced. The discount distributed to invoiced lines will not be taken into account.\\Do you want to update the invoice discount?';

    LOCAL PROCEDURE RefreshOnAfterGetRecord@11();
    VAR
      PurchLine@1003 : Record "Purchase Line";
      TempPurchLine@1002 : TEMPORARY Record "Purchase Line";
      PurchPostPrepayments@1001 : Codeunit "Purchase-Post Prepayments";
    BEGIN
      CurrPage.CAPTION(STRSUBSTNO(Text000,"Document Type"));

      if PrevNo = "No." then
        exit;
      PrevNo := "No.";
      FILTERGROUP(2);
      SETRANGE("No.",PrevNo);
      FILTERGROUP(0);

      CLEAR(PurchLine);
      CLEAR(TotalPurchLine);
      CLEAR(TotalPurchLineLCY);

      for i := 1 to 3 do begin
        TempPurchLine.DELETEALL;
        CLEAR(TempPurchLine);
        CLEAR(PurchPost);
        PurchPost.GetPurchLines(Rec,TempPurchLine,i - 1);
        CLEAR(PurchPost);
        case i of
          1:
            PurchLine.CalcVATAmountLines(0,Rec,TempPurchLine,TempVATAmountLine1);
          2:
            PurchLine.CalcVATAmountLines(0,Rec,TempPurchLine,TempVATAmountLine2);
          3:
            PurchLine.CalcVATAmountLines(0,Rec,TempPurchLine,TempVATAmountLine3);
        end;

        PurchPost.SumPurchLinesTemp(
          Rec,TempPurchLine,i - 1,TotalPurchLine[i],TotalPurchLineLCY[i],
          VATAmount[i],VATAmountText[i]);
        if "Prices Including VAT" then begin
          TotalAmount2[i] := TotalPurchLine[i].Amount;
          TotalAmount1[i] := TotalAmount2[i] + VATAmount[i];
          TotalPurchLine[i]."Line Amount" := TotalAmount1[i] + TotalPurchLine[i]."Inv. Discount Amount";
        end else begin
          TotalAmount1[i] := TotalPurchLine[i].Amount;
          TotalAmount2[i] := TotalPurchLine[i]."Amount Including VAT";
        end;
      end;
      TempPurchLine.DELETEALL;
      CLEAR(TempPurchLine);
      PurchPostPrepayments.GetPurchLines(Rec,0,TempPurchLine);
      PurchPostPrepayments.SumPrepmt(
        Rec,TempPurchLine,TempVATAmountLine4,PrepmtTotalAmount,PrepmtVATAmount,PrepmtVATAmountText);
      PrepmtInvPct :=
        Pct(TotalPurchLine[1]."Prepmt. Amt. Inv.",PrepmtTotalAmount);
      PrepmtDeductedPct :=
        Pct(TotalPurchLine[1]."Prepmt Amt Deducted",TotalPurchLine[1]."Prepmt. Amt. Inv.");
      if "Prices Including VAT" then begin
        PrepmtTotalAmount2 := PrepmtTotalAmount;
        PrepmtTotalAmount := PrepmtTotalAmount + PrepmtVATAmount;
      end else
        PrepmtTotalAmount2 := PrepmtTotalAmount + PrepmtVATAmount;

      if Vend.GET("Pay-to Vendor No.") then
        Vend.CALCFIELDS("Balance (LCY)")
      else
        CLEAR(Vend);

      TempVATAmountLine1.MODIFYALL(Modified,false);
      TempVATAmountLine2.MODIFYALL(Modified,false);
      TempVATAmountLine3.MODIFYALL(Modified,false);
      TempVATAmountLine4.MODIFYALL(Modified,false);

      PrevTab := -1;
      UpdateHeaderInfo(2,TempVATAmountLine2);
    END;

    LOCAL PROCEDURE UpdateHeaderInfo@5(IndexNo@1000 : Integer;VAR VATAmountLine@1001 : Record "VAT Amount Line");
    VAR
      CurrExchRate@1002 : Record "Currency Exchange Rate";
      UseDate@1003 : Date;
    BEGIN
      TotalPurchLine[IndexNo]."Inv. Discount Amount" := VATAmountLine.GetTotalInvDiscAmount;
      TotalAmount1[IndexNo] :=
        TotalPurchLine[IndexNo]."Line Amount" - TotalPurchLine[IndexNo]."Inv. Discount Amount";
      VATAmount[IndexNo] := VATAmountLine.GetTotalVATAmount;
      if "Prices Including VAT" then begin
        TotalAmount1[IndexNo] := VATAmountLine.GetTotalAmountInclVAT;
        TotalAmount2[IndexNo] := TotalAmount1[IndexNo] - VATAmount[IndexNo];
        TotalPurchLine[IndexNo]."Line Amount" :=
          TotalAmount1[IndexNo] + TotalPurchLine[IndexNo]."Inv. Discount Amount";
      end else
        TotalAmount2[IndexNo] := TotalAmount1[IndexNo] + VATAmount[IndexNo];

      if "Prices Including VAT" then
        TotalPurchLineLCY[IndexNo].Amount := TotalAmount2[IndexNo]
      else
        TotalPurchLineLCY[IndexNo].Amount := TotalAmount1[IndexNo];
      if "Currency Code" <> '' then begin
        if "Posting Date" = 0D then
          UseDate := WORKDATE
        else
          UseDate := "Posting Date";

        TotalPurchLineLCY[IndexNo].Amount :=
          CurrExchRate.ExchangeAmtFCYToLCY(
            UseDate,"Currency Code",TotalPurchLineLCY[IndexNo].Amount,"Currency Factor");
      end;
    END;

    LOCAL PROCEDURE GetVATSpecification@21(QtyType@1000 : 'General,Invoicing,Shipping');
    BEGIN
      case QtyType of
        QtyType::General:
          begin
            VATLinesForm.GetTempVATAmountLine(TempVATAmountLine1);
            if TempVATAmountLine1.GetAnyLineModified then
              UpdateHeaderInfo(1,TempVATAmountLine1);
          end;
        QtyType::Invoicing:
          begin
            VATLinesForm.GetTempVATAmountLine(TempVATAmountLine2);
            if TempVATAmountLine2.GetAnyLineModified then
              UpdateHeaderInfo(2,TempVATAmountLine2);
          end;
        QtyType::Shipping:
          VATLinesForm.GetTempVATAmountLine(TempVATAmountLine3);
      end;
    END;

    LOCAL PROCEDURE UpdateTotalAmount@16(IndexNo@1000 : Integer);
    VAR
      SaveTotalAmount@1001 : Decimal;
    BEGIN
      CheckAllowInvDisc;
      if "Prices Including VAT" then begin
        SaveTotalAmount := TotalAmount1[IndexNo];
        UpdateInvDiscAmount(IndexNo);
        TotalAmount1[IndexNo] := SaveTotalAmount;
      end;
      with TotalPurchLine[IndexNo] do
        "Inv. Discount Amount" := "Line Amount" - TotalAmount1[IndexNo];
      UpdateInvDiscAmount(IndexNo);
    END;

    LOCAL PROCEDURE UpdateInvDiscAmount@3(ModifiedIndexNo@1000 : Integer);
    VAR
      PartialInvoicing@1001 : Boolean;
      MaxIndexNo@1002 : Integer;
      IndexNo@1003 : ARRAY [2] OF Integer;
      i@1004 : Integer;
      InvDiscBaseAmount@1005 : Decimal;
    BEGIN
      CheckAllowInvDisc;
      if not (ModifiedIndexNo in [1,2]) then
        exit;

      if InvoicedLineExists then
        if not CONFIRM(UpdateInvDiscountQst,false) then
          ERROR('');

      if ModifiedIndexNo = 1 then
        InvDiscBaseAmount := TempVATAmountLine1.GetTotalInvDiscBaseAmount(false,"Currency Code")
      else
        InvDiscBaseAmount := TempVATAmountLine2.GetTotalInvDiscBaseAmount(false,"Currency Code");

      if InvDiscBaseAmount = 0 then
        ERROR(Text003,TempVATAmountLine2.FIELDCAPTION("Inv. Disc. Base Amount"));

      if TotalPurchLine[ModifiedIndexNo]."Inv. Discount Amount" / InvDiscBaseAmount > 1 then
        ERROR(
          Text004,
          TotalPurchLine[ModifiedIndexNo].FIELDCAPTION("Inv. Discount Amount"),
          TempVATAmountLine2.FIELDCAPTION("Inv. Disc. Base Amount"));

      PartialInvoicing := (TotalPurchLine[1]."Line Amount" <> TotalPurchLine[2]."Line Amount");

      IndexNo[1] := ModifiedIndexNo;
      IndexNo[2] := 3 - ModifiedIndexNo;
      if (ModifiedIndexNo = 2) and PartialInvoicing then
        MaxIndexNo := 1
      else
        MaxIndexNo := 2;

      if not PartialInvoicing then
        if ModifiedIndexNo = 1 then
          TotalPurchLine[2]."Inv. Discount Amount" := TotalPurchLine[1]."Inv. Discount Amount"
        else
          TotalPurchLine[1]."Inv. Discount Amount" := TotalPurchLine[2]."Inv. Discount Amount";

      for i := 1 to MaxIndexNo do
        with TotalPurchLine[IndexNo[i]] do begin
          if (i = 1) or not PartialInvoicing then
            if IndexNo[i] = 1 then begin
              TempVATAmountLine1.SetInvoiceDiscountAmount(
                "Inv. Discount Amount","Currency Code","Prices Including VAT","VAT Base Discount %");
            end else
              TempVATAmountLine2.SetInvoiceDiscountAmount(
                "Inv. Discount Amount","Currency Code","Prices Including VAT","VAT Base Discount %");

          if (i = 2) and PartialInvoicing then
            if IndexNo[i] = 1 then begin
              InvDiscBaseAmount := TempVATAmountLine2.GetTotalInvDiscBaseAmount(false,"Currency Code");
              if InvDiscBaseAmount = 0 then
                TempVATAmountLine1.SetInvoiceDiscountPercent(
                  0,"Currency Code","Prices Including VAT",false,"VAT Base Discount %")
              else
                TempVATAmountLine1.SetInvoiceDiscountPercent(
                  100 * TempVATAmountLine2.GetTotalInvDiscAmount / InvDiscBaseAmount,
                  "Currency Code","Prices Including VAT",false,"VAT Base Discount %");
            end else begin
              InvDiscBaseAmount := TempVATAmountLine1.GetTotalInvDiscBaseAmount(false,"Currency Code");
              if InvDiscBaseAmount = 0 then
                TempVATAmountLine2.SetInvoiceDiscountPercent(
                  0,"Currency Code","Prices Including VAT",false,"VAT Base Discount %")
              else
                TempVATAmountLine2.SetInvoiceDiscountPercent(
                  100 * TempVATAmountLine1.GetTotalInvDiscAmount / InvDiscBaseAmount,
                  "Currency Code","Prices Including VAT",false,"VAT Base Discount %");
            end;
        end;

      UpdateHeaderInfo(1,TempVATAmountLine1);
      UpdateHeaderInfo(2,TempVATAmountLine2);

      if ModifiedIndexNo = 1 then
        VATLinesForm.SetTempVATAmountLine(TempVATAmountLine1)
      else
        VATLinesForm.SetTempVATAmountLine(TempVATAmountLine2);

      "Invoice Discount Calculation" := "Invoice Discount Calculation"::Amount;
      "Invoice Discount Value" := TotalPurchLine[1]."Inv. Discount Amount";
      MODIFY;
      UpdateVATOnPurchLines;
    END;

    LOCAL PROCEDURE UpdatePrepmtAmount@9();
    VAR
      TempPurchLine@1001 : TEMPORARY Record "Purchase Line";
      PurchPostPrepmt@1000 : Codeunit "Purchase-Post Prepayments";
    BEGIN
      PurchPostPrepmt.UpdatePrepmtAmountOnPurchLines(Rec,PrepmtTotalAmount);
      PurchPostPrepmt.GetPurchLines(Rec,0,TempPurchLine);
      PurchPostPrepmt.SumPrepmt(
        Rec,TempPurchLine,TempVATAmountLine4,PrepmtTotalAmount,PrepmtVATAmount,PrepmtVATAmountText);
      PrepmtInvPct :=
        Pct(TotalPurchLine[1]."Prepmt. Amt. Inv.",PrepmtTotalAmount);
      PrepmtDeductedPct :=
        Pct(TotalPurchLine[1]."Prepmt Amt Deducted",TotalPurchLine[1]."Prepmt. Amt. Inv.");
      if "Prices Including VAT" then begin
        PrepmtTotalAmount2 := PrepmtTotalAmount;
        PrepmtTotalAmount := PrepmtTotalAmount + PrepmtVATAmount;
      end else
        PrepmtTotalAmount2 := PrepmtTotalAmount + PrepmtVATAmount;
      MODIFY;
    END;

    LOCAL PROCEDURE GetCaptionClass@2(FieldCaption@1000 : Text[100];ReverseCaption@1001 : Boolean) : Text[80];
    BEGIN
      if "Prices Including VAT" xor ReverseCaption then
        exit('2,1,' + FieldCaption);

      exit('2,0,' + FieldCaption);
    END;

    LOCAL PROCEDURE UpdateVATOnPurchLines@1();
    VAR
      PurchLine@1000 : Record "Purchase Line";
    BEGIN
      GetVATSpecification(ActiveTab);
      if TempVATAmountLine1.GetAnyLineModified then
        PurchLine.UpdateVATOnLines(0,Rec,PurchLine,TempVATAmountLine1);
      if TempVATAmountLine2.GetAnyLineModified then
        PurchLine.UpdateVATOnLines(1,Rec,PurchLine,TempVATAmountLine2);
      PrevNo := '';
    END;

    LOCAL PROCEDURE VendInvDiscRecExists@4(InvDiscCode@1000 : Code[20]) : Boolean;
    VAR
      VendInvDisc@1001 : Record "Vendor Invoice Disc.";
    BEGIN
      VendInvDisc.SETRANGE(Code,InvDiscCode);
      exit(VendInvDisc.FINDFIRST);
    END;

    LOCAL PROCEDURE CheckAllowInvDisc@8();
    VAR
      VendInvDisc@1000 : Record "Vendor Invoice Disc.";
    BEGIN
      if not AllowInvDisc then
        ERROR(
          Text005,
          VendInvDisc.TABLECAPTION,FIELDCAPTION("Invoice Disc. Code"),"Invoice Disc. Code");
    END;

    LOCAL PROCEDURE Pct@6(Numerator@1001 : Decimal;Denominator@1000 : Decimal) : Decimal;
    BEGIN
      if Denominator = 0 then
        exit(0);
      exit(ROUND(Numerator / Denominator * 10000,1));
    END;

    LOCAL PROCEDURE VATLinesDrillDown@7(VAR VATLinesToDrillDown@1000 : Record "VAT Amount Line";ThisTabAllowsVATEditing@1001 : Boolean);
    BEGIN
      CLEAR(VATLinesForm);
      VATLinesForm.SetTempVATAmountLine(VATLinesToDrillDown);
      VATLinesForm.InitGlobals(
        "Currency Code",AllowVATDifference,AllowVATDifference and ThisTabAllowsVATEditing,
        "Prices Including VAT",AllowInvDisc,"VAT Base Discount %");
      VATLinesForm.RUNMODAL;
      VATLinesForm.GetTempVATAmountLine(VATLinesToDrillDown);
    END;

    BEGIN
    END.
  }
}

