OBJECT Report 1139 Delete Cost Budget Entries
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "G/L Budget Entry"=rm;
    CaptionML=ENU=Delete Cost Budget Entries;
    ProcessingOnly=true;
    OnPreReport=BEGIN
                  if CostBudgetRegister2."No." > CostBudgetRegister3."No." then
                    ERROR(Text000);

                  if not CONFIRM(Text001,false,CostBudgetRegister2."No.",CostBudgetRegister3."No.") then
                    ERROR('');

                  if not CONFIRM(Text004) then
                    ERROR('');

                  Window.OPEN(Text005 +
                    Text006 );
                END;

  }
  DATASET
  {
    { 6875;    ;DataItem;Cost Budget Register;
               DataItemTable="Cost Budget Register";
               DataItemTableView=SORTING("No.") ORDER(Descending);
               OnPreDataItem=BEGIN
                               // Sort descending. Registers are deleted backwards
                               SETRANGE("No.",CostBudgetRegister2."No.",CostBudgetRegister3."No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1,"No.");

                                  if Closed then
                                    ERROR(Text007,"No.");

                                  if Source = Source::Allocation then begin
                                    CostBudgetEntry.SETRANGE("Allocated with Journal No.","No.");
                                    CostBudgetEntry.MODIFYALL(Allocated,false);
                                    CostBudgetEntry.MODIFYALL("Allocated with Journal No.",0);
                                  end;

                                  CostBudgetEntry.SETRANGE("Entry No.","From Cost Budget Entry No.","To Cost Budget Entry No.");
                                  CostBudgetEntry.DELETEALL;
                                  CostBudgetEntry.RESET;
                                END;

               OnPostDataItem=VAR
                                CostAccSetup@1000 : Record "Cost Accounting Setup";
                              BEGIN
                                DELETEALL;
                                RESET;
                                SETRANGE(Source,Source::Allocation);

                                if FINDLAST then begin
                                  CostBudgetEntry.GET("To Cost Budget Entry No.");
                                  CostAccSetup.GET;
                                  CostAccSetup."Last Allocation Doc. No." := CostBudgetEntry."Document No.";
                                  CostAccSetup.MODIFY;
                                end;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   CostBudgetRegister2.FINDLAST;
                   CostBudgetRegister3.FINDLAST;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=FromRegisterNo;
                  Lookup=true;
                  CaptionML=ENU=From Register No.;
                  ToolTipML=ENU=Specifies the starting posted register number to determine the starting point for the deletion of register numbers.;
                  ApplicationArea=#CostAccounting;
                  SourceExpr=CostBudgetRegister2."No.";
                  TableRelation="Cost Budget Register" WHERE (Closed=CONST(false)) }

      { 3   ;2   ;Field     ;
                  Name=ToRegisterNo;
                  CaptionML=ENU=To Register No.;
                  ToolTipML=ENU="Specifies that the last posted register number is filled in automatically. You cannot change the contents of this field.  ";
                  ApplicationArea=#CostAccounting;
                  SourceExpr=CostBudgetRegister3."No.";
                  TableRelation="Cost Budget Register" WHERE (Closed=CONST(false));
                  Editable=FALSE }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=From Register No. must not be higher than To Register No..';
      Text001@1001 : TextConst 'ENU=All corresponding cost budget entries and budget register entries will be deleted. Do you want to delete cost budget register %1 to %2?';
      Text004@1002 : TextConst 'ENU=Are you sure?';
      Text005@1003 : TextConst 'ENU=Delete cost register\';
      Text006@1004 : TextConst 'ENU=Register  no.      #1######';
      Text007@1005 : TextConst 'ENU=Register %1 can no longer be deleted because it is marked as closed.';
      CostBudgetRegister2@1006 : Record "Cost Budget Register";
      CostBudgetRegister3@1007 : Record "Cost Budget Register";
      CostBudgetEntry@1008 : Record "Cost Budget Entry";
      Window@1009 : Dialog;

    PROCEDURE InitializeRequest@1(FromEntryNo@1000 : Integer;ToEntryNo@1001 : Integer);
    BEGIN
      CostBudgetRegister2."No." := FromEntryNo;
      CostBudgetRegister3."No." := ToEntryNo;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

