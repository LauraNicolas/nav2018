OBJECT Page 7604 Base Calendar Entries Subform
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=true;
    CaptionML=ENU=Lines;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable=Date;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 RESET;
                 SETFILTER("Period Start",'>=%1',00000101D);
               END;

    OnFindRecord=BEGIN
                   exit(PeriodFormMgt.FindDate(Which,Rec,PeriodType));
                 END;

    OnNextRecord=BEGIN
                   exit(PeriodFormMgt.NextDate(Steps,Rec,PeriodType));
                 END;

    OnAfterGetRecord=BEGIN
                       Nonworking := CalendarMgmt.CheckDateStatus(CurrentCalendarCode,"Period Start",Description);
                       WeekNo := DATE2DWY("Period Start",2);
                       CurrentCalendarCodeOnFormat;
                       PeriodStartOnFormat;
                       PeriodNameOnFormat;
                       DescriptionOnFormat;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 8   ;2   ;Field     ;
                Name=CurrentCalendarCode;
                CaptionML=ENU=Base Calendar Code;
                ToolTipML=ENU=Specifies which base calendar was used as the basis.;
                ApplicationArea=#Advanced;
                SourceExpr=CurrentCalendarCode;
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Code10 }

    { 2   ;2   ;Field     ;
                Name=Period Start;
                CaptionML=ENU=Date;
                ToolTipML=ENU=Specifies the date.;
                ApplicationArea=#Advanced;
                SourceExpr="Period Start";
                Editable=FALSE;
                ImplicitType=Date }

    { 12  ;2   ;Field     ;
                Name=Period Name;
                CaptionML=ENU=Day;
                ToolTipML=ENU=Specifies the day of the week.;
                ApplicationArea=#Advanced;
                SourceExpr="Period Name";
                Editable=FALSE;
                ImplicitType=Text31 }

    { 10  ;2   ;Field     ;
                Name=WeekNo;
                CaptionML=ENU=Week No.;
                ToolTipML=ENU=Specifies the week number for the calendar entries.;
                ApplicationArea=#Advanced;
                SourceExpr=WeekNo;
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Integer }

    { 6   ;2   ;Field     ;
                Name=Nonworking;
                CaptionML=ENU=Nonworking;
                ToolTipML=ENU=Specifies the date entry as a nonworking day. You can also remove the check mark to return the status to working day.;
                ApplicationArea=#Advanced;
                SourceExpr=Nonworking;
                Editable=TRUE;
                OnValidate=BEGIN
                             UpdateBaseCalendarChanges;
                           END;

                ImplicitType=Boolean }

    { 4   ;2   ;Field     ;
                Name=Description;
                CaptionML=ENU=Description;
                ToolTipML=ENU=Specifies the description of the entry to be applied.;
                ApplicationArea=#Advanced;
                SourceExpr=Description;
                OnValidate=BEGIN
                             UpdateBaseCalendarChanges;
                           END;

                ImplicitType=Text30 }

  }
  CODE
  {
    VAR
      BaseCalendarChange@1005 : Record "Base Calendar Change";
      PeriodFormMgt@1006 : Codeunit PeriodFormManagement;
      CalendarMgmt@1004 : Codeunit "Calendar Management";
      PeriodType@1009 : 'Day,Week,Month,Quarter,Year,"Accounting Period"';
      Nonworking@1001 : Boolean;
      WeekNo@1007 : Integer;
      Description@1002 : Text[30];
      CurrentCalendarCode@1000 : Code[10];

    [External]
    PROCEDURE SetCalendarCode@1(CalendarCode@1000 : Code[10]);
    BEGIN
      CurrentCalendarCode := CalendarCode;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE UpdateBaseCalendarChanges@2();
    BEGIN
      BaseCalendarChange.RESET;
      BaseCalendarChange.SETRANGE("Base Calendar Code",CurrentCalendarCode);
      BaseCalendarChange.SETRANGE(Date,"Period Start");
      if BaseCalendarChange.FINDFIRST then
        BaseCalendarChange.DELETE;
      BaseCalendarChange.INIT;
      BaseCalendarChange."Base Calendar Code" := CurrentCalendarCode;
      BaseCalendarChange.Date := "Period Start";
      BaseCalendarChange.Description := Description;
      BaseCalendarChange.Nonworking := Nonworking;
      BaseCalendarChange.Day := "Period No.";
      BaseCalendarChange.INSERT;
    END;

    LOCAL PROCEDURE CurrentCalendarCodeOnFormat@19017924();
    BEGIN
      if Nonworking then;
    END;

    LOCAL PROCEDURE PeriodStartOnFormat@19061537();
    BEGIN
      if Nonworking then;
    END;

    LOCAL PROCEDURE PeriodNameOnFormat@19063590();
    BEGIN
      if Nonworking then;
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      if Nonworking then;
    END;

    BEGIN
    END.
  }
}

