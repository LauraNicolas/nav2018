OBJECT Codeunit 42 CaptionManagement
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GLSetup@1000 : Record "General Ledger Setup";
      GLSetupRead@1001 : Boolean;
      Text016@1003 : TextConst 'ENU=Excl. VAT';
      Text017@1002 : TextConst 'ENU=Incl. VAT';
      DefaultTxt@1005 : TextConst 'ENU=LCY';
      DefaultLongTxt@1004 : TextConst 'ENU=Local Currency';

    [External]
    PROCEDURE CaptionClassTranslate@1(Language@1000 : Integer;CaptionExpr@1001 : Text[1024]) : Text[1024];
    VAR
      CaptionArea@1002 : Text[80];
      CaptionRef@1003 : Text[1024];
      CommaPosition@1004 : Integer;
    BEGIN
      // LANGUAGE
      // <DataType>   := [Integer]
      // <DataValue>  := Automatically mentioned by the system

      // CAPTIONEXPR
      // <DataType>   := [String]
      // <Length>     <= 80
      // <DataValue>  := <CAPTIONAREA>,<CAPTIONREF>

      // CAPTIONAREA
      // <DataType>   := [SubString]
      // <Length>     <= 10
      // <DataValue>  := 1..9999999999
      // 1 for Dimension Area
      // 2 for VAT

      // CAPTIONREF
      // <DataType>   := [SubString]
      // <Length>     <= 10
      // <DataValue>  :=
      // IF (<CAPTIONAREA> = 1) <DIMCAPTIONTYPE>,<DIMCAPTIONREF>
      // IF (<CAPTIONAREA> = 2) <VATCAPTIONTYPE>

      CommaPosition := STRPOS(CaptionExpr,',');
      if (CommaPosition > 0) and (CommaPosition < 80) then begin
        CaptionArea := COPYSTR(CaptionExpr,1,CommaPosition - 1);
        CaptionRef := COPYSTR(CaptionExpr,CommaPosition + 1);
        case CaptionArea of
          '1':
            exit(DimCaptionClassTranslate(Language,COPYSTR(CaptionRef,1,80)));
          '2':
            exit(VATCaptionClassTranslate(COPYSTR(CaptionRef,1,80)));
          '3':
            exit(CaptionRef);
          '101':
            exit(CurCaptionClassTranslate(CaptionRef));
        end;
      end;
      exit(CaptionExpr);
    END;

    LOCAL PROCEDURE DimCaptionClassTranslate@2(Language@1000 : Integer;CaptionExpr@1001 : Text[80]) : Text[80];
    VAR
      Dim@1002 : Record Dimension;
      DimCaptionType@1003 : Text[80];
      DimCaptionRef@1004 : Text[80];
      DimOptionalParam1@1005 : Text[80];
      DimOptionalParam2@1006 : Text[80];
      CommaPosition@1007 : Integer;
    BEGIN
      // DIMCAPTIONTYPE
      // <DataType>   := [SubString]
      // <Length>     <= 10
      // <DataValue>  := 1..6
      // 1 to retrieve Code Caption of Global Dimension
      // 2 to retrieve Code Caption of Shortcut Dimension
      // 3 to retrieve Filter Caption of Global Dimension
      // 4 to retrieve Filter Caption of Shortcut Dimension
      // 5 to retrieve Code Caption of any kind of Dimensions
      // 6 to retrieve Filter Caption of any kind of Dimensions

      // DIMCAPTIONREF
      // <DataType>   := [SubString]
      // <Length>     <= 10
      // <DataValue>  :=
      // IF (<DIMCAPTIONTYPE> = 1) 1..2,<DIMOPTIONALPARAM1>,<DIMOPTIONALPARAM2>
      // IF (<DIMCAPTIONTYPE> = 2) 1..8,<DIMOPTIONALPARAM1>,<DIMOPTIONALPARAM2>
      // IF (<DIMCAPTIONTYPE> = 3) 1..2,<DIMOPTIONALPARAM1>,<DIMOPTIONALPARAM2>
      // IF (<DIMCAPTIONTYPE> = 4) 1..8,<DIMOPTIONALPARAM1>,<DIMOPTIONALPARAM2>
      // IF (<DIMCAPTIONTYPE> = 5) [Table]Dimension.[Field]Code,<DIMOPTIONALPARAM1>,<DIMOPTIONALPARAM2>
      // IF (<DIMCAPTIONTYPE> = 6) [Table]Dimension.[Field]Code,<DIMOPTIONALPARAM1>,<DIMOPTIONALPARAM2>

      // DIMOPTIONALPARAM1
      // <DataType>   := [SubString]
      // <Length>     <= 30
      // <DataValue>  := [String]
      // a string added before the dimension name

      // DIMOPTIONALPARAM2
      // <DataType>   := [SubString]
      // <Length>     <= 30
      // <DataValue>  := [String]
      // a string added after the dimension name

      if not GetGLSetup then
        exit('');

      CommaPosition := STRPOS(CaptionExpr,',');
      if CommaPosition > 0 then begin
        DimCaptionType := COPYSTR(CaptionExpr,1,CommaPosition - 1);
        DimCaptionRef := COPYSTR(CaptionExpr,CommaPosition + 1);
        CommaPosition := STRPOS(DimCaptionRef,',');
        if CommaPosition > 0 then begin
          DimOptionalParam1 := COPYSTR(DimCaptionRef,CommaPosition + 1);
          DimCaptionRef := COPYSTR(DimCaptionRef,1,CommaPosition - 1);
          CommaPosition := STRPOS(DimOptionalParam1,',');
          if CommaPosition > 0 then begin
            DimOptionalParam2 := COPYSTR(DimOptionalParam1,CommaPosition + 1);
            DimOptionalParam1 := COPYSTR(DimOptionalParam1,1,CommaPosition - 1);
          end else
            DimOptionalParam2 := '';
        end else begin
          DimOptionalParam1 := '';
          DimOptionalParam2 := '';
        end;
        case DimCaptionType of
          '1':  // Code Caption - Global Dimension using No. as Reference
            case DimCaptionRef of
              '1':
                exit(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Global Dimension 1 Code",
                    GLSetup.FIELDCAPTION("Global Dimension 1 Code")));
              '2':
                exit(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Global Dimension 2 Code",
                    GLSetup.FIELDCAPTION("Global Dimension 2 Code")));
            end;
          '2':  // Code Caption - Shortcut Dimension using No. as Reference
            case DimCaptionRef of
              '1':
                exit(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 1 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 1 Code")));
              '2':
                exit(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 2 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 2 Code")));
              '3':
                exit(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 3 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 3 Code")));
              '4':
                exit(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 4 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 4 Code")));
              '5':
                exit(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 5 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 5 Code")));
              '6':
                exit(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 6 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 6 Code")));
              '7':
                exit(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 7 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 7 Code")));
              '8':
                exit(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 8 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 8 Code")));
            end;
          '3':  // Filter Caption - Global Dimension using No. as Reference
            case DimCaptionRef of
              '1':
                exit(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Global Dimension 1 Code",
                    GLSetup.FIELDCAPTION("Global Dimension 1 Code")));
              '2':
                exit(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Global Dimension 2 Code",
                    GLSetup.FIELDCAPTION("Global Dimension 2 Code")));
            end;
          '4':  // Filter Caption - Shortcut Dimension using No. as Reference
            case DimCaptionRef of
              '1':
                exit(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 1 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 1 Code")));
              '2':
                exit(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 2 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 2 Code")));
              '3':
                exit(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 3 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 3 Code")));
              '4':
                exit(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 4 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 4 Code")));
              '5':
                exit(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 5 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 5 Code")));
              '6':
                exit(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 6 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 6 Code")));
              '7':
                exit(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 7 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 7 Code")));
              '8':
                exit(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 8 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 8 Code")));
            end;
          '5':  // Code Caption - using Dimension Code as Reference
            begin
              if Dim.GET(DimCaptionRef) then
                exit(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2);
              exit(DimOptionalParam1);
            end;
          '6':  // Filter Caption - using Dimension Code as Reference
            begin
              if Dim.GET(DimCaptionRef) then
                exit(DimOptionalParam1 + Dim.GetMLFilterCaption(Language) + DimOptionalParam2);
              exit(DimOptionalParam1);
            end;
        end;
      end;
      exit('');
    END;

    LOCAL PROCEDURE DimCodeCaption@5(Language@1002 : Integer;DimOptionalParam1@1003 : Text[80];DimOptionalParam2@1004 : Text[80];DimCode@1005 : Code[20];DimFieldCaption@1006 : Text[1024]) : Text[80];
    VAR
      Dim@1001 : Record Dimension;
    BEGIN
      if Dim.GET(DimCode) then
        exit(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2);
      exit(
        DimOptionalParam1 +
        DimFieldCaption +
        DimOptionalParam2);
    END;

    LOCAL PROCEDURE DimFilterCaption@6(Language@1002 : Integer;DimOptionalParam1@1003 : Text[80];DimOptionalParam2@1004 : Text[80];DimCode@1005 : Code[20];DimFieldCaption@1006 : Text[1024]) : Text[80];
    VAR
      Dim@1001 : Record Dimension;
    BEGIN
      if Dim.GET(DimCode) then
        exit(DimOptionalParam1 + Dim.GetMLFilterCaption(Language) + DimOptionalParam2);
      exit(
        DimOptionalParam1 +
        DimFieldCaption +
        DimOptionalParam2);
    END;

    LOCAL PROCEDURE VATCaptionClassTranslate@3(CaptionExpr@1001 : Text[80]) : Text[80];
    VAR
      VATCaptionType@1002 : Text[80];
      VATCaptionRef@1003 : Text[80];
      CommaPosition@1004 : Integer;
    BEGIN
      // VATCAPTIONTYPE
      // <DataType>   := [SubString]
      // <Length>     =  1
      // <DataValue>  :=
      // '0' -> <field caption + 'Excl. VAT'>
      // '1' -> <field caption + 'Incl. VAT'>

      CommaPosition := STRPOS(CaptionExpr,',');
      if CommaPosition > 0 then begin
        VATCaptionType := COPYSTR(CaptionExpr,1,CommaPosition - 1);
        VATCaptionRef := COPYSTR(CaptionExpr,CommaPosition + 1);
        case VATCaptionType of
          '0':
            exit(COPYSTR(STRSUBSTNO('%1 %2',VATCaptionRef,Text016),1,80));
          '1':
            exit(COPYSTR(STRSUBSTNO('%1 %2',VATCaptionRef,Text017),1,80));
        end;
      end;
      exit('');
    END;

    LOCAL PROCEDURE CurCaptionClassTranslate@7(CaptionExpr@1001 : Text) : Text;
    VAR
      Currency@1002 : Record Currency;
      GLSetupRead@1003 : Boolean;
      CurrencyResult@1004 : Text[30];
      CommaPosition@1005 : Integer;
      CurCaptionType@1006 : Text[30];
      CurCaptionRef@1007 : Text;
    BEGIN
      // CURCAPTIONTYPE
      // <DataType>   := [SubString]
      // <Length>     =  1
      // <DataValue>  :=
      // '0' -> Currency Result := Local Currency Code
      // '1' -> Currency Result := Local Currency Description
      // '2' -> Currency Result := Additional Reporting Currency Code
      // '3' -> Currency Result := Additional Reporting Currency Description

      // CURCAPTIONREF
      // <DataType>   := [SubString]
      // <Length>     <= 70
      // <DataValue>  := [String]
      // This string is the actual string making up the Caption.
      // It will contain a '%1', and the Currency Result will substitute for it.

      CommaPosition := STRPOS(CaptionExpr,',');
      if CommaPosition > 0 then begin
        CurCaptionType := COPYSTR(CaptionExpr,1,CommaPosition - 1);
        CurCaptionRef := COPYSTR(CaptionExpr,CommaPosition + 1);
        if not GLSetupRead then begin
          if not GLSetup.GET then
            exit(CurCaptionRef);
          GLSetupRead := true;
        end;
        case CurCaptionType of
          '0','1':
            begin
              if GLSetup."LCY Code" = '' then
                if CurCaptionType = '0' then
                  CurrencyResult := DefaultTxt
                else
                  CurrencyResult := DefaultLongTxt
              else
                if not Currency.GET(GLSetup."LCY Code") then
                  CurrencyResult := GLSetup."LCY Code"
                else
                  if CurCaptionType = '0' then
                    CurrencyResult := Currency.Code
                  else
                    CurrencyResult := Currency.Description;
              exit(COPYSTR(STRSUBSTNO(CurCaptionRef,CurrencyResult),1,MAXSTRLEN(CurCaptionRef)));
            end;
          '2','3':
            begin
              if GLSetup."Additional Reporting Currency" = '' then
                exit(CurCaptionRef);
              if not Currency.GET(GLSetup."Additional Reporting Currency") then
                CurrencyResult := GLSetup."Additional Reporting Currency"
              else
                if CurCaptionType = '2' then
                  CurrencyResult := Currency.Code
                else
                  CurrencyResult := Currency.Description;
              exit(COPYSTR(STRSUBSTNO(CurCaptionRef,CurrencyResult),1,MAXSTRLEN(CurCaptionRef)));
            end;
          else
            exit(CurCaptionRef);
        end;
      end;
      exit(CaptionExpr);
    END;

    LOCAL PROCEDURE GetGLSetup@4() : Boolean;
    BEGIN
      if not GLSetupRead then
        GLSetupRead := GLSetup.GET;
      exit(GLSetupRead);
    END;

    [External]
    PROCEDURE GetRecordFiltersWithCaptions@25(RecVariant@1001 : Variant) Filters : Text;
    VAR
      RecRef@1002 : RecordRef;
      FieldRef@1003 : FieldRef;
      FieldFilter@1005 : Text;
      Name@1006 : Text;
      Cap@1000 : Text;
      Pos@1007 : Integer;
      i@1004 : Integer;
    BEGIN
      RecRef.GETTABLE(RecVariant);
      Filters := RecRef.GETFILTERS;
      if Filters = '' then
        exit;

      for i := 1 to RecRef.FIELDCOUNT do begin
        FieldRef := RecRef.FIELDINDEX(i);
        FieldFilter := FieldRef.GETFILTER;
        if FieldFilter <> '' then begin
          Name := STRSUBSTNO('%1: ',FieldRef.NAME);
          Cap := STRSUBSTNO('%1: ',FieldRef.CAPTION);
          Pos := STRPOS(Filters,Name);
          if Pos <> 0 then
            Filters := INSSTR(DELSTR(Filters,Pos,STRLEN(Name)),Cap,Pos);
        end;
      end;
    END;

    [External]
    PROCEDURE GetTranslatedFieldCaption@14(LanguageCode@1000 : Code[10];TableID@1001 : Integer;FieldId@1004 : Integer) TranslatedText : Text;
    VAR
      Language@1002 : Record Language;
      Field@1005 : Record Field;
      CurrentLanguageCode@1003 : Integer;
    BEGIN
      CurrentLanguageCode := GLOBALLANGUAGE;
      if (LanguageCode <> '') and (Language.GetLanguageID(LanguageCode) <> CurrentLanguageCode) then begin
        GLOBALLANGUAGE(Language.GetLanguageID(LanguageCode));
        Field.GET(TableID,FieldId);
        TranslatedText := Field."Field Caption";
        GLOBALLANGUAGE(CurrentLanguageCode);
      end else begin
        Field.GET(TableID,FieldId);
        TranslatedText := Field."Field Caption";
      end;
    END;

    BEGIN
    END.
  }
}

