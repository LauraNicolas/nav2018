OBJECT Page 7012 Purchase Prices
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Purchase Prices;
    SourceTable="Purchase Price";
    DataCaptionExpr=GetCaption;
    DelayedInsert=true;
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 GetRecFilters;
                 SetRecFilters;
                 IsLookupMode := CurrPage.LOOKUPMODE;
               END;

    ActionList=ACTIONS
    {
      { 3       ;    ;ActionContainer;
                      Name=ActionContainer3;
                      ActionContainerType=ActionItems }
      { 5       ;1   ;Action    ;
                      Name=CopyPrices;
                      CaptionML=ENU=Copy Prices;
                      ToolTipML=ENU=Select prices and press OK to copy them to Vendor No.;
                      ApplicationArea=#Basic,#Suite;
                      Visible=NOT IsLookupMode;
                      Image=Copy;
                      OnAction=BEGIN
                                 CopyPrices;
                                 CurrPage.UPDATE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 25  ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 26  ;2   ;Field     ;
                Name=VendNoFilterCtrl;
                CaptionML=ENU=Vendor No. Filter;
                ToolTipML=ENU=Specifies a filter for which purchase prices display.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=VendNoFilter;
                OnValidate=BEGIN
                             VendNoFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           VendList@1005 : Page "Vendor List";
                         BEGIN
                           VendList.LOOKUPMODE := true;
                           if VendList.RUNMODAL = ACTION::LookupOK then
                             Text := VendList.GetSelectionFilter
                           else
                             exit(false);

                           exit(true);
                         END;

                ImplicitType=Text }

    { 32  ;2   ;Field     ;
                Name=ItemNoFIlterCtrl;
                CaptionML=ENU=Item No. Filter;
                ToolTipML=ENU=Specifies a filter for which purchase prices to display.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ItemNoFilter;
                OnValidate=BEGIN
                             ItemNoFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           ItemList@1002 : Page "Item List";
                         BEGIN
                           ItemList.LOOKUPMODE := true;
                           if ItemList.RUNMODAL = ACTION::LookupOK then
                             Text := ItemList.GetSelectionFilter
                           else
                             exit(false);

                           exit(true);
                         END;

                ImplicitType=Text }

    { 30  ;2   ;Field     ;
                Name=StartingDateFilter;
                CaptionML=ENU=Starting Date Filter;
                ToolTipML=ENU=Specifies a filter for which purchase prices to display.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=StartingDateFilter;
                OnValidate=VAR
                             ApplicationMgt@1030 : Codeunit ApplicationManagement;
                           BEGIN
                             if ApplicationMgt.MakeDateFilter(StartingDateFilter) = 0 then;
                             StartingDateFilterOnAfterValid;
                           END;

                ImplicitType=Text30 }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                Name=Vendor No.;
                ToolTipML=ENU=Specifies the number of the vendor who offers the line discount on the item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor No.";
                ImplicitType=Code20 }

    { 2   ;2   ;Field     ;
                Name=Item No.;
                ToolTipML=ENU=Specifies the number of the item that the purchase price applies to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item No.";
                ImplicitType=Code20 }

    { 23  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 6   ;2   ;Field     ;
                Name=Currency Code;
                ToolTipML=ENU=Specifies the currency code of the purchase price.;
                ApplicationArea=#Advanced;
                SourceExpr="Currency Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 16  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure Code";
                ImplicitType=Code10 }

    { 12  ;2   ;Field     ;
                Name=Minimum Quantity;
                ToolTipML=ENU=Specifies the minimum quantity of the item that you must buy from the vendor in order to get the purchase price.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Minimum Quantity";
                ImplicitType=Decimal }

    { 10  ;2   ;Field     ;
                Name=Direct Unit Cost;
                ToolTipML=ENU=Specifies the cost of one unit of the selected item or resource.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Direct Unit Cost";
                ImplicitType=Decimal }

    { 8   ;2   ;Field     ;
                Name=Starting Date;
                ToolTipML=ENU=Specifies the date from which the purchase price is valid.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Starting Date";
                ImplicitType=Date }

    { 14  ;2   ;Field     ;
                Name=Ending Date;
                ToolTipML=ENU=Specifies the date to which the purchase price is valid.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ending Date";
                ImplicitType=Date }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Vend@1003 : Record Vendor;
      VendNoFilter@1000 : Text;
      ItemNoFilter@1001 : Text;
      StartingDateFilter@1002 : Text[30];
      NoDataWithinFilterErr@1004 : TextConst '@@@=%1: Field(Code), %2: GetFilter(Code);ENU=There is no %1 within the filter %2.';
      IsLookupMode@1005 : Boolean;
      MultipleVendorsSelectedErr@1006 : TextConst 'ENU=More than one vendor uses these purchase prices. To copy prices, the Vendor No. Filter field must contain one vendor only.';

    LOCAL PROCEDURE GetRecFilters@2();
    BEGIN
      if GETFILTERS <> '' then begin
        VendNoFilter := GETFILTER("Vendor No.");
        ItemNoFilter := GETFILTER("Item No.");
        EVALUATE(StartingDateFilter,GETFILTER("Starting Date"));
      end;
    END;

    [Internal]
    PROCEDURE SetRecFilters@1();
    BEGIN
      if VendNoFilter <> '' then
        SETFILTER("Vendor No.",VendNoFilter)
      else
        SETRANGE("Vendor No.");

      if StartingDateFilter <> '' then
        SETFILTER("Starting Date",StartingDateFilter)
      else
        SETRANGE("Starting Date");

      if ItemNoFilter <> '' then
        SETFILTER("Item No.",ItemNoFilter)
      else
        SETRANGE("Item No.");

      CheckFilters(DATABASE::Vendor,VendNoFilter);
      CheckFilters(DATABASE::Item,ItemNoFilter);

      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE GetCaption@3() : Text;
    VAR
      ObjTransl@1000 : Record "Object Translation";
      SourceTableName@1002 : Text[250];
      Description@1001 : Text[50];
    BEGIN
      GetRecFilters;

      if ItemNoFilter <> '' then
        SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,27)
      else
        SourceTableName := '';

      if Vend.GET(COPYSTR(VendNoFilter,1,MAXSTRLEN(Vend."No."))) then
        Description := Vend.Name;

      exit(STRSUBSTNO('%1 %2 %3 %4 ',VendNoFilter,Description,SourceTableName,ItemNoFilter));
    END;

    LOCAL PROCEDURE VendNoFilterOnAfterValidate@19075608();
    VAR
      Item@1000 : Record Item;
    BEGIN
      if Item.GET("Item No.") then
        CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE StartingDateFilterOnAfterValid@19055286();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE ItemNoFilterOnAfterValidate@19009808();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    [Internal]
    PROCEDURE CheckFilters@4(TableNo@1000 : Integer;FilterTxt@1001 : Text);
    VAR
      FilterRecordRef@1002 : RecordRef;
      FilterFieldRef@1003 : FieldRef;
    BEGIN
      if FilterTxt = '' then
        exit;
      CLEAR(FilterRecordRef);
      CLEAR(FilterFieldRef);
      FilterRecordRef.OPEN(TableNo);
      FilterFieldRef := FilterRecordRef.FIELD(1);
      FilterFieldRef.SETFILTER(FilterTxt);
      if FilterRecordRef.ISEMPTY then
        ERROR(NoDataWithinFilterErr,FilterRecordRef.CAPTION,FilterTxt);
    END;

    LOCAL PROCEDURE CopyPrices@6();
    VAR
      Vendor@1001 : Record Vendor;
      PurchasePrice@1004 : Record "Purchase Price";
      SelectedPurchasePrice@1005 : Record "Purchase Price";
      PurchasePrices@1002 : Page "Purchase Prices";
      CopyToVendorNo@1003 : Code[20];
    BEGIN
      Vendor.SETFILTER("No.",VendNoFilter);
      if Vendor.COUNT <> 1 then
        ERROR(MultipleVendorsSelectedErr);
      CopyToVendorNo := COPYSTR(VendNoFilter,1,MAXSTRLEN(CopyToVendorNo));

      PurchasePrice.SETFILTER("Vendor No.",'<>%1',VendNoFilter);
      PurchasePrices.LOOKUPMODE(true);
      PurchasePrices.SETTABLEVIEW(PurchasePrice);
      if PurchasePrices.RUNMODAL = ACTION::LookupOK then begin
        PurchasePrices.GetSelectionFilter(SelectedPurchasePrice);
        CopyPurchPriceToVendorsPurchPrice(SelectedPurchasePrice,CopyToVendorNo);
      end;
    END;

    PROCEDURE GetSelectionFilter@5(VAR PurchasePrice@1001 : Record "Purchase Price");
    BEGIN
      CurrPage.SETSELECTIONFILTER(PurchasePrice);
    END;

    BEGIN
    END.
  }
}

