OBJECT Codeunit 1319 Sales by Cust. Grp. Chart Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      SalesByCustGrpChartSetup@1003 : Record "Sales by Cust. Grp.Chart Setup";
      TotalSalesLCYTxt@1002 : TextConst 'ENU=Total Sales (LCY)';

    [External]
    PROCEDURE OnInitPage@6();
    BEGIN
      GetChartSetupForCurrentUser;
    END;

    [Internal]
    PROCEDURE UpdateChart@3(VAR BusChartBuf@1000 : Record "Business Chart Buffer");
    VAR
      NoOfPeriods@1007 : Integer;
    BEGIN
      GetChartSetupForCurrentUser;

      with BusChartBuf do begin
        Initialize;
        "Period Length" := SalesByCustGrpChartSetup."Period Length";
        "Period Filter Start Date" := SalesByCustGrpChartSetup."Start Date";
        "Period Filter End Date" := 0D;

        NoOfPeriods := 5;
        CalcCustSales(BusChartBuf,NoOfPeriods);
      end;
    END;

    [Internal]
    PROCEDURE DrillDown@5(VAR BusChartBuf@1000 : Record "Business Chart Buffer");
    VAR
      Cust@1001 : Record Customer;
      ToDate@1000000001 : Date;
      FromDate@1002 : Date;
      MeasureValueString@1003 : Text;
    BEGIN
      GetChartSetupForCurrentUser;

      with BusChartBuf do begin
        "Period Length" := SalesByCustGrpChartSetup."Period Length";
        ToDate := GetXValueAsDate("Drill-Down X Index");
        FromDate := CalcFromDate(ToDate);
        MeasureValueString := GetMeasureValueString("Drill-Down Measure Index");
      end;

      if MeasureValueString <> '' then
        Cust.SETRANGE("Customer Posting Group",MeasureValueString);
      Cust.SETRANGE("Date Filter",FromDate,ToDate);
      PAGE.RUN(PAGE::"Customer List",Cust);
    END;

    LOCAL PROCEDURE CalcCustSales@1(VAR BusChartBuf@1006 : Record "Business Chart Buffer";NoOfPeriods@1002 : Decimal);
    VAR
      Cust@1170000002 : Record Customer;
      PreviousCust@1001 : Record Customer;
      TotalSalesValue@1007 : ARRAY [100] OF Decimal;
      SalesValue@1000 : ARRAY [100] OF Decimal;
    BEGIN
      BusChartBuf.SetPeriodXAxis;

      AddSalesMeasure(BusChartBuf,TotalSalesLCYTxt,'',BusChartBuf."Chart Type"::Line);

      Cust.SETCURRENTKEY("Customer Posting Group");
      if Cust.ISEMPTY then begin
        BusChartBuf.SetXAxis('Empty',BusChartBuf."Data Type"::String);
        exit;
      end;

      Cust.FINDSET;
      repeat
        if not (PreviousCust."Customer Posting Group" in ['',Cust."Customer Posting Group"]) then begin
          AddSalesMeasure(
            BusChartBuf,
            PreviousCust."Customer Posting Group",
            PreviousCust."Customer Posting Group",
            BusChartBuf."Chart Type"::Column);
          AddSalesValues(BusChartBuf,PreviousCust."Customer Posting Group",SalesValue,NoOfPeriods);
        end;

        AddCustSales(BusChartBuf,Cust,SalesValue,TotalSalesValue,NoOfPeriods);

        PreviousCust := Cust;
      until Cust.NEXT = 0;

      AddSalesMeasure(
        BusChartBuf,
        PreviousCust."Customer Posting Group",
        PreviousCust."Customer Posting Group",
        BusChartBuf."Chart Type"::Column);
      AddSalesValues(BusChartBuf,PreviousCust."Customer Posting Group",SalesValue,NoOfPeriods);

      AddSalesValues(BusChartBuf,TotalSalesLCYTxt,TotalSalesValue,NoOfPeriods);
    END;

    LOCAL PROCEDURE AddCustSales@16(VAR BusChartBuf@1003 : Record "Business Chart Buffer";Cust@1000 : Record Customer;VAR SalesValues@1001 : ARRAY [100] OF Decimal;VAR TotalSalesValues@1002 : ARRAY [100] OF Decimal;NoOfPeriods@1004 : Integer);
    VAR
      FromDate@1006 : Date;
      ToDate@1005 : Date;
      PeriodNo@1007 : Integer;
    BEGIN
      FromDate := BusChartBuf.CalcFromDate(BusChartBuf."Period Filter Start Date");
      for PeriodNo := 1 to NoOfPeriods do begin
        ToDate := BusChartBuf.CalcToDate(FromDate);

        Cust.SETRANGE("Date Filter",FromDate,ToDate);
        Cust.CALCFIELDS("Sales (LCY)");
        SalesValues[PeriodNo] += Cust."Sales (LCY)";
        TotalSalesValues[PeriodNo] += Cust."Sales (LCY)";

        FromDate := CALCDATE('<1D>',ToDate);
      end;

      if BusChartBuf."Period Filter End Date" = 0D then begin
        BusChartBuf."Period Filter End Date" := ToDate;
        BusChartBuf.AddPeriods(BusChartBuf.CalcFromDate(BusChartBuf."Period Filter Start Date"),ToDate);
      end;
    END;

    LOCAL PROCEDURE AddSalesMeasure@11(VAR BusChartBuf@1002 : Record "Business Chart Buffer";Measure@1000 : Text;MeasureValue@1003 : Text;ChartType@1001 : Integer);
    BEGIN
      BusChartBuf.AddMeasure(Measure,MeasureValue,BusChartBuf."Data Type"::Decimal,ChartType);
    END;

    LOCAL PROCEDURE AddSalesValues@12(VAR BusChartBuf@1001 : Record "Business Chart Buffer";Measure@1000 : Text;VAR SalesValues@1003 : ARRAY [100] OF Decimal;NoOfPeriods@1004 : Integer);
    VAR
      PeriodNo@1002 : Integer;
    BEGIN
      for PeriodNo := 1 to NoOfPeriods do begin
        BusChartBuf.SetValue(Measure,PeriodNo - 1,SalesValues[PeriodNo]);
        SalesValues[PeriodNo] := 0;
      end;
    END;

    LOCAL PROCEDURE GetChartSetupForCurrentUser@2();
    BEGIN
      with SalesByCustGrpChartSetup do
        if not GET(USERID) then begin
          "User ID" := USERID;
          "Start Date" := WORKDATE;
          "Period Length" := "Period Length"::Week;
          INSERT;
        end;
    END;

    BEGIN
    END.
  }
}

