OBJECT Table 352 Default Dimension
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               GLSetup.GET;
               if "Dimension Code" = GLSetup."Global Dimension 1 Code" then
                 UpdateGlobalDimCode(1,"Table ID","No.","Dimension Value Code");
               if "Dimension Code" = GLSetup."Global Dimension 2 Code" then
                 UpdateGlobalDimCode(2,"Table ID","No.","Dimension Value Code");
               DimMgt.DefaultDimOnInsert(Rec);
             END;

    OnModify=BEGIN
               GLSetup.GET;
               if "Dimension Code" = GLSetup."Global Dimension 1 Code" then
                 UpdateGlobalDimCode(1,"Table ID","No.","Dimension Value Code");
               if "Dimension Code" = GLSetup."Global Dimension 2 Code" then
                 UpdateGlobalDimCode(2,"Table ID","No.","Dimension Value Code");
               DimMgt.DefaultDimOnModify(Rec);
             END;

    OnDelete=BEGIN
               GLSetup.GET;
               if "Dimension Code" = GLSetup."Global Dimension 1 Code" then
                 UpdateGlobalDimCode(1,"Table ID","No.",'');
               if "Dimension Code" = GLSetup."Global Dimension 2 Code" then
                 UpdateGlobalDimCode(2,"Table ID","No.",'');
               DimMgt.DefaultDimOnDelete(Rec);
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=ENU=Default Dimension;
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE ("Object Type"=CONST(Table));
                                                   OnValidate=VAR
                                                                TempAllObjWithCaption@1000 : TEMPORARY Record AllObjWithCaption;
                                                              BEGIN
                                                                CALCFIELDS("Table Caption");
                                                                DimMgt.SetupObjectNoList(TempAllObjWithCaption);
                                                                TempAllObjWithCaption."Object Type" := TempAllObjWithCaption."Object Type"::Table;
                                                                TempAllObjWithCaption."Object ID" := "Table ID";
                                                                if not TempAllObjWithCaption.FIND then
                                                                  FIELDERROR("Table ID");
                                                              END;

                                                   OnLookup=VAR
                                                              TempAllObjWithCaption@1000 : TEMPORARY Record AllObjWithCaption;
                                                            BEGIN
                                                              CLEAR(TempAllObjWithCaption);
                                                              DimMgt.SetupObjectNoList(TempAllObjWithCaption);
                                                              if PAGE.RUNMODAL(PAGE::Objects,TempAllObjWithCaption) = ACTION::LookupOK then begin
                                                                "Table ID" := TempAllObjWithCaption."Object ID";
                                                                VALIDATE("Table ID");
                                                              end;
                                                            END;

                                                   CaptionML=ENU=Table ID;
                                                   NotBlank=true }
    { 2   ;   ;No.                 ;Code20        ;TableRelation=IF ("Table ID"=CONST(13)) "Salesperson/Purchaser"
                                                                 ELSE IF ("Table ID"=CONST(15)) "G/L Account"
                                                                 ELSE IF ("Table ID"=CONST(18)) Customer
                                                                 ELSE IF ("Table ID"=CONST(23)) Vendor
                                                                 ELSE IF ("Table ID"=CONST(27)) Item
                                                                 ELSE IF ("Table ID"=CONST(152)) "Resource Group"
                                                                 ELSE IF ("Table ID"=CONST(156)) Resource
                                                                 ELSE IF ("Table ID"=CONST(167)) Job
                                                                 ELSE IF ("Table ID"=CONST(270)) "Bank Account"
                                                                 ELSE IF ("Table ID"=CONST(413)) "IC Partner"
                                                                 ELSE IF ("Table ID"=CONST(5071)) Campaign
                                                                 ELSE IF ("Table ID"=CONST(5200)) Employee
                                                                 ELSE IF ("Table ID"=CONST(5600)) "Fixed Asset"
                                                                 ELSE IF ("Table ID"=CONST(5628)) Insurance
                                                                 ELSE IF ("Table ID"=CONST(5903)) "Service Order Type"
                                                                 ELSE IF ("Table ID"=CONST(5904)) "Service Item Group"
                                                                 ELSE IF ("Table ID"=CONST(5940)) "Service Item"
                                                                 ELSE IF ("Table ID"=CONST(5714)) "Responsibility Center"
                                                                 ELSE IF ("Table ID"=CONST(5800)) "Item Charge"
                                                                 ELSE IF ("Table ID"=CONST(99000754)) "Work Center"
                                                                 ELSE IF ("Table ID"=CONST(5105)) "Customer Template"
                                                                 ELSE IF ("Table ID"=CONST(849)) "Cash Flow Manual Revenue"
                                                                 ELSE IF ("Table ID"=CONST(850)) "Cash Flow Manual Expense";
                                                   CaptionML=ENU=No. }
    { 3   ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                if not DimMgt.CheckDim("Dimension Code") then
                                                                  ERROR(DimMgt.GetDimErr);
                                                              END;

                                                   CaptionML=ENU=Dimension Code;
                                                   NotBlank=true }
    { 4   ;   ;Dimension Value Code;Code20        ;TableRelation="Dimension Value".Code WHERE ("Dimension Code"=FIELD("Dimension Code"));
                                                   OnValidate=BEGIN
                                                                if not DimMgt.CheckDimValue("Dimension Code","Dimension Value Code") then
                                                                  ERROR(DimMgt.GetDimErr);
                                                                if "Value Posting" = "Value Posting"::"No Code" then
                                                                  TESTFIELD("Dimension Value Code",'');
                                                              END;

                                                   CaptionML=ENU=Dimension Value Code }
    { 5   ;   ;Value Posting       ;Option        ;OnValidate=BEGIN
                                                                if "Value Posting" = "Value Posting"::"No Code" then
                                                                  TESTFIELD("Dimension Value Code",'');
                                                              END;

                                                   CaptionML=ENU=Value Posting;
                                                   OptionCaptionML=ENU=" ,Code Mandatory,Same Code,No Code";
                                                   OptionString=" ","Code Mandatory","Same Code","No Code" }
    { 6   ;   ;Table Caption       ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE ("Object Type"=CONST(Table),
                                                                                                                "Object ID"=FIELD("Table ID")));
                                                   CaptionML=ENU=Table Caption;
                                                   Editable=false }
    { 7   ;   ;Multi Selection Action;Option      ;CaptionML=ENU=Multi Selection Action;
                                                   OptionCaptionML=ENU=" ,Change,Delete";
                                                   OptionString=" ",Change,Delete }
  }
  KEYS
  {
    {    ;"Table ID","No.","Dimension Code"       ;Clustered=true }
    {    ;"Dimension Code"                         }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You can''t rename a %1.';
      GLSetup@1001 : Record "General Ledger Setup";
      DimMgt@1002 : Codeunit DimensionManagement;

    [External]
    PROCEDURE GetCaption@3() : Text[250];
    VAR
      ObjTransl@1000 : Record "Object Translation";
      CurrTableID@1001 : Integer;
      NewTableID@1002 : Integer;
      NewNo@1003 : Code[20];
      SourceTableName@1004 : Text[100];
    BEGIN
      if not EVALUATE(NewTableID,GETFILTER("Table ID")) then
        exit('');

      if NewTableID = 0 then
        if GETRANGEMIN("Table ID") = GETRANGEMAX("Table ID") then
          NewTableID := GETRANGEMIN("Table ID")
        else
          NewTableID := 0;

      if NewTableID <> CurrTableID then
        SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,NewTableID);
      CurrTableID := NewTableID;

      if GETFILTER("No.") <> '' then
        if GETRANGEMIN("No.") = GETRANGEMAX("No.") then
          NewNo := GETRANGEMIN("No.")
        else
          NewNo := '';

      if NewTableID <> 0 then
        exit(STRSUBSTNO('%1 %2',SourceTableName,NewNo));

      exit('');
    END;

    LOCAL PROCEDURE UpdateGlobalDimCode@25(GlobalDimCodeNo@1000 : Integer;TableID@1001 : Integer;AccNo@1002 : Code[20];NewDimValue@1003 : Code[20]);
    BEGIN
      case TableID of
        DATABASE::"G/L Account":
          UpdateGLAccGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::Customer:
          UpdateCustGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::Vendor:
          UpdateVendGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::Item:
          UpdateItemGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Resource Group":
          UpdateResGrGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::Resource:
          UpdateResGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::Job:
          UpdateJobGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Bank Account":
          UpdateBankGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::Employee:
          UpdateEmpoyeeGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Fixed Asset":
          UpdateFAGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::Insurance:
          UpdateInsuranceGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Responsibility Center":
          UpdateRespCenterGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Work Center":
          UpdateWorkCenterGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Salesperson/Purchaser":
          UpdateSalesPurchGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::Campaign:
          UpdateCampaignGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Customer Template":
          UpdateCustTempGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Cash Flow Manual Expense":
          UpdateNeutrPayGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Cash Flow Manual Revenue":
          UpdateNeutrRevGlobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        else
          OnAfterUpdateGlobalDimCode(GlobalDimCodeNo,TableID,AccNo,NewDimValue);
      end;
    END;

    LOCAL PROCEDURE UpdateGLAccGlobalDimCode@26(GlobalDimCodeNo@1003 : Integer;GLAccNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      GLAcc@1004 : Record "G/L Account";
    BEGIN
      if GLAcc.GET(GLAccNo) then begin
        case GlobalDimCodeNo of
          1:
            GLAcc."Global Dimension 1 Code" := NewDimValue;
          2:
            GLAcc."Global Dimension 2 Code" := NewDimValue;
        end;
        GLAcc.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateCustGlobalDimCode@27(GlobalDimCodeNo@1003 : Integer;CustNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      Cust@1004 : Record Customer;
    BEGIN
      if Cust.GET(CustNo) then begin
        case GlobalDimCodeNo of
          1:
            Cust."Global Dimension 1 Code" := NewDimValue;
          2:
            Cust."Global Dimension 2 Code" := NewDimValue;
        end;
        Cust.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateVendGlobalDimCode@28(GlobalDimCodeNo@1003 : Integer;VendNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      Vend@1004 : Record Vendor;
    BEGIN
      if Vend.GET(VendNo) then begin
        case GlobalDimCodeNo of
          1:
            Vend."Global Dimension 1 Code" := NewDimValue;
          2:
            Vend."Global Dimension 2 Code" := NewDimValue;
        end;
        Vend.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateItemGlobalDimCode@29(GlobalDimCodeNo@1003 : Integer;ItemNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      Item@1004 : Record Item;
    BEGIN
      if Item.GET(ItemNo) then begin
        case GlobalDimCodeNo of
          1:
            Item."Global Dimension 1 Code" := NewDimValue;
          2:
            Item."Global Dimension 2 Code" := NewDimValue;
        end;
        Item.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateResGrGlobalDimCode@30(GlobalDimCodeNo@1003 : Integer;ResGrNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      ResGr@1004 : Record "Resource Group";
    BEGIN
      if ResGr.GET(ResGrNo) then begin
        case GlobalDimCodeNo of
          1:
            ResGr."Global Dimension 1 Code" := NewDimValue;
          2:
            ResGr."Global Dimension 2 Code" := NewDimValue;
        end;
        ResGr.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateResGlobalDimCode@31(GlobalDimCodeNo@1003 : Integer;ResNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      Res@1004 : Record Resource;
    BEGIN
      if Res.GET(ResNo) then begin
        case GlobalDimCodeNo of
          1:
            Res."Global Dimension 1 Code" := NewDimValue;
          2:
            Res."Global Dimension 2 Code" := NewDimValue;
        end;
        Res.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateJobGlobalDimCode@32(GlobalDimCodeNo@1003 : Integer;JobNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      Job@1004 : Record Job;
    BEGIN
      if Job.GET(JobNo) then begin
        case GlobalDimCodeNo of
          1:
            Job."Global Dimension 1 Code" := NewDimValue;
          2:
            Job."Global Dimension 2 Code" := NewDimValue;
        end;
        Job.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateBankGlobalDimCode@33(GlobalDimCodeNo@1003 : Integer;BankAccNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      BankAcc@1004 : Record "Bank Account";
    BEGIN
      if BankAcc.GET(BankAccNo) then begin
        case GlobalDimCodeNo of
          1:
            BankAcc."Global Dimension 1 Code" := NewDimValue;
          2:
            BankAcc."Global Dimension 2 Code" := NewDimValue;
        end;
        BankAcc.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateEmpoyeeGlobalDimCode@34(GlobalDimCodeNo@1003 : Integer;EmployeeNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      Employee@1004 : Record Employee;
    BEGIN
      if Employee.GET(EmployeeNo) then begin
        case GlobalDimCodeNo of
          1:
            Employee."Global Dimension 1 Code" := NewDimValue;
          2:
            Employee."Global Dimension 2 Code" := NewDimValue;
        end;
        Employee.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateFAGlobalDimCode@35(GlobalDimCodeNo@1003 : Integer;FANo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      FA@1004 : Record "Fixed Asset";
    BEGIN
      if FA.GET(FANo) then begin
        case GlobalDimCodeNo of
          1:
            FA."Global Dimension 1 Code" := NewDimValue;
          2:
            FA."Global Dimension 2 Code" := NewDimValue;
        end;
        FA.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateInsuranceGlobalDimCode@36(GlobalDimCodeNo@1003 : Integer;InsuranceNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      Insurance@1004 : Record Insurance;
    BEGIN
      if Insurance.GET(InsuranceNo) then begin
        case GlobalDimCodeNo of
          1:
            Insurance."Global Dimension 1 Code" := NewDimValue;
          2:
            Insurance."Global Dimension 2 Code" := NewDimValue;
        end;
        Insurance.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateRespCenterGlobalDimCode@37(GlobalDimCodeNo@1003 : Integer;RespCenterNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      RespCenter@1004 : Record "Responsibility Center";
    BEGIN
      if RespCenter.GET(RespCenterNo) then begin
        case GlobalDimCodeNo of
          1:
            RespCenter."Global Dimension 1 Code" := NewDimValue;
          2:
            RespCenter."Global Dimension 2 Code" := NewDimValue;
        end;
        RespCenter.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateWorkCenterGlobalDimCode@38(GlobalDimCodeNo@1003 : Integer;WorkCenterNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      WorkCenter@1004 : Record "Work Center";
    BEGIN
      if WorkCenter.GET(WorkCenterNo) then begin
        case GlobalDimCodeNo of
          1:
            WorkCenter."Global Dimension 1 Code" := NewDimValue;
          2:
            WorkCenter."Global Dimension 2 Code" := NewDimValue;
        end;
        WorkCenter.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateSalesPurchGlobalDimCode@39(GlobalDimCodeNo@1003 : Integer;SalespersonPurchaserNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      SalespersonPurchaser@1004 : Record "Salesperson/Purchaser";
    BEGIN
      if SalespersonPurchaser.GET(SalespersonPurchaserNo) then begin
        case GlobalDimCodeNo of
          1:
            SalespersonPurchaser."Global Dimension 1 Code" := NewDimValue;
          2:
            SalespersonPurchaser."Global Dimension 2 Code" := NewDimValue;
        end;
        SalespersonPurchaser.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateCampaignGlobalDimCode@40(GlobalDimCodeNo@1003 : Integer;CampaignNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      Campaign@1004 : Record Campaign;
    BEGIN
      if Campaign.GET(CampaignNo) then begin
        case GlobalDimCodeNo of
          1:
            Campaign."Global Dimension 1 Code" := NewDimValue;
          2:
            Campaign."Global Dimension 2 Code" := NewDimValue;
        end;
        Campaign.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateCustTempGlobalDimCode@41(GlobalDimCodeNo@1003 : Integer;CustTemplateNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      CustTemplate@1004 : Record "Customer Template";
    BEGIN
      if CustTemplate.GET(CustTemplateNo) then begin
        case GlobalDimCodeNo of
          1:
            CustTemplate."Global Dimension 1 Code" := NewDimValue;
          2:
            CustTemplate."Global Dimension 2 Code" := NewDimValue;
        end;
        CustTemplate.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateNeutrPayGlobalDimCode@42(GlobalDimCodeNo@1003 : Integer;CFManualExpenseNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      CFManualExpense@1004 : Record "Cash Flow Manual Expense";
    BEGIN
      if CFManualExpense.GET(CFManualExpenseNo) then begin
        case GlobalDimCodeNo of
          1:
            CFManualExpense."Global Dimension 1 Code" := NewDimValue;
          2:
            CFManualExpense."Global Dimension 2 Code" := NewDimValue;
        end;
        CFManualExpense.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateNeutrRevGlobalDimCode@43(GlobalDimCodeNo@1003 : Integer;CFManualRevenueNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      CFManualRevenue@1004 : Record "Cash Flow Manual Revenue";
    BEGIN
      if CFManualRevenue.GET(CFManualRevenueNo) then begin
        case GlobalDimCodeNo of
          1:
            CFManualRevenue."Global Dimension 1 Code" := NewDimValue;
          2:
            CFManualRevenue."Global Dimension 2 Code" := NewDimValue;
        end;
        CFManualRevenue.MODIFY(true);
      end;
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterUpdateGlobalDimCode@1(GlobalDimCodeNo@1003 : Integer;TableID@1002 : Integer;AccNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    BEGIN
    END;

    BEGIN
    END.
  }
}

