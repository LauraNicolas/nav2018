OBJECT Table 5200 Employee
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    DataCaptionFields="No.","First Name","Middle Name","Last Name";
    OnInsert=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
               if "No." = '' then begin
                 HumanResSetup.GET;
                 HumanResSetup.TESTFIELD("Employee Nos.");
                 NoSeriesMgt.InitSeries(HumanResSetup."Employee Nos.",xRec."No. Series",0D,"No.","No. Series");
               end;

               DimMgt.UpdateDefaultDim(
                 DATABASE::Employee,"No.",
                 "Global Dimension 1 Code","Global Dimension 2 Code");
               UpdateSearchName;
             END;

    OnModify=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
               "Last Date Modified" := TODAY;
               if Res.READPERMISSION then
                 EmployeeResUpdate.HumanResToRes(xRec,Rec);
               if SalespersonPurchaser.READPERMISSION then
                 EmployeeSalespersonUpdate.HumanResToSalesPerson(xRec,Rec);
               UpdateSearchName;
             END;

    OnDelete=BEGIN
               AlternativeAddr.SETRANGE("Employee No.","No.");
               AlternativeAddr.DELETEALL;

               EmployeeQualification.SETRANGE("Employee No.","No.");
               EmployeeQualification.DELETEALL;

               Relative.SETRANGE("Employee No.","No.");
               Relative.DELETEALL;

               EmployeeAbsence.SETRANGE("Employee No.","No.");
               EmployeeAbsence.DELETEALL;

               MiscArticleInformation.SETRANGE("Employee No.","No.");
               MiscArticleInformation.DELETEALL;

               ConfidentialInformation.SETRANGE("Employee No.","No.");
               ConfidentialInformation.DELETEALL;

               HumanResComment.SETRANGE("No.","No.");
               HumanResComment.DELETEALL;

               DimMgt.DeleteDefaultDim(DATABASE::Employee,"No.");
             END;

    OnRename=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
               "Last Date Modified" := TODAY;
               UpdateSearchName;
             END;

    CaptionML=ENU=Employee;
    LookupPageID="Employee List";
    DrillDownPageID="Employee List";
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Name;
                                                   OnValidate=BEGIN
                                                                if "No." <> xRec."No." then begin
                                                                  HumanResSetup.GET;
                                                                  NoSeriesMgt.TestManual(HumanResSetup."Employee Nos.");
                                                                  "No. Series" := '';
                                                                end;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 2   ;   ;First Name          ;Text30        ;CaptionML=ENU=First Name }
    { 3   ;   ;Middle Name         ;Text30        ;CaptionML=ENU=Middle Name }
    { 4   ;   ;Last Name           ;Text30        ;CaptionML=ENU=Last Name }
    { 5   ;   ;Initials            ;Text30        ;OnValidate=BEGIN
                                                                if ("Search Name" = UPPERCASE(xRec.Initials)) or ("Search Name" = '') then
                                                                  "Search Name" := Initials;
                                                              END;

                                                   CaptionML=ENU=Initials }
    { 6   ;   ;Job Title           ;Text30        ;CaptionML=ENU=Job Title }
    { 7   ;   ;Search Name         ;Code250       ;OnValidate=BEGIN
                                                                if "Search Name" = '' then
                                                                  "Search Name" := SetSearchNameToFullnameAndInitials;
                                                              END;

                                                   CaptionML=ENU=Search Name }
    { 8   ;   ;Address             ;Text50        ;CaptionML=ENU=Address }
    { 9   ;   ;Address 2           ;Text50        ;CaptionML=ENU=Address 2 }
    { 10  ;   ;City                ;Text30        ;TableRelation=IF ("Country/Region Code"=CONST('')) "Post Code".City
                                                                 ELSE IF ("Country/Region Code"=FILTER(<>'')) "Post Code".City WHERE ("Country/Region Code"=FIELD("Country/Region Code"));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) and GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=City }
    { 11  ;   ;Post Code           ;Code20        ;TableRelation=IF ("Country/Region Code"=CONST('')) "Post Code"
                                                                 ELSE IF ("Country/Region Code"=FILTER(<>'')) "Post Code" WHERE ("Country/Region Code"=FIELD("Country/Region Code"));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) and GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Post Code }
    { 12  ;   ;County              ;Text30        ;CaptionML=ENU=County }
    { 13  ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Phone No. }
    { 14  ;   ;Mobile Phone No.    ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Mobile Phone No. }
    { 15  ;   ;E-Mail              ;Text80        ;OnValidate=VAR
                                                                MailManagement@1000 : Codeunit "Mail Management";
                                                              BEGIN
                                                                MailManagement.ValidateEmailAddressField("E-Mail");
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=ENU=Email }
    { 16  ;   ;Alt. Address Code   ;Code10        ;TableRelation="Alternative Address".Code WHERE ("Employee No."=FIELD("No."));
                                                   CaptionML=ENU=Alt. Address Code }
    { 17  ;   ;Alt. Address Start Date;Date       ;CaptionML=ENU=Alt. Address Start Date }
    { 18  ;   ;Alt. Address End Date;Date         ;CaptionML=ENU=Alt. Address End Date }
    { 19  ;   ;Picture             ;BLOB          ;CaptionML=ENU=Picture;
                                                   SubType=Bitmap }
    { 20  ;   ;Birth Date          ;Date          ;CaptionML=ENU=Birth Date }
    { 21  ;   ;Social Security No. ;Text30        ;CaptionML=ENU=Social Security No. }
    { 22  ;   ;Union Code          ;Code10        ;TableRelation=Union;
                                                   CaptionML=ENU=Union Code }
    { 23  ;   ;Union Membership No.;Text30        ;CaptionML=ENU=Union Membership No. }
    { 24  ;   ;Gender              ;Option        ;CaptionML=ENU=Gender;
                                                   OptionCaptionML=ENU=" ,Female,Male";
                                                   OptionString=" ",Female,Male }
    { 25  ;   ;Country/Region Code ;Code10        ;TableRelation="Country/Region";
                                                   CaptionML=ENU=Country/Region Code }
    { 26  ;   ;Manager No.         ;Code20        ;TableRelation=Employee;
                                                   CaptionML=ENU=Manager No. }
    { 27  ;   ;Emplymt. Contract Code;Code10      ;TableRelation="Employment Contract";
                                                   CaptionML=ENU=Emplymt. Contract Code }
    { 28  ;   ;Statistics Group Code;Code10       ;TableRelation="Employee Statistics Group";
                                                   CaptionML=ENU=Statistics Group Code }
    { 29  ;   ;Employment Date     ;Date          ;CaptionML=ENU=Employment Date }
    { 31  ;   ;Status              ;Option        ;OnValidate=BEGIN
                                                                EmployeeQualification.SETRANGE("Employee No.","No.");
                                                                EmployeeQualification.MODIFYALL("Employee Status",Status);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Active,Inactive,Terminated;
                                                   OptionString=Active,Inactive,Terminated }
    { 32  ;   ;Inactive Date       ;Date          ;CaptionML=ENU=Inactive Date }
    { 33  ;   ;Cause of Inactivity Code;Code10    ;TableRelation="Cause of Inactivity";
                                                   CaptionML=ENU=Cause of Inactivity Code }
    { 34  ;   ;Termination Date    ;Date          ;CaptionML=ENU=Termination Date }
    { 35  ;   ;Grounds for Term. Code;Code10      ;TableRelation="Grounds for Termination";
                                                   CaptionML=ENU=Grounds for Term. Code }
    { 36  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 37  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 38  ;   ;Resource No.        ;Code20        ;TableRelation=Resource WHERE (Type=CONST(Person));
                                                   OnValidate=BEGIN
                                                                if ("Resource No." <> '') and Res.WRITEPERMISSION then
                                                                  EmployeeResUpdate.ResUpdate(Rec)
                                                              END;

                                                   CaptionML=ENU=Resource No. }
    { 39  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Human Resource Comment Line" WHERE ("Table Name"=CONST(Employee),
                                                                                                          "No."=FIELD("No.")));
                                                   CaptionML=ENU=Comment;
                                                   Editable=false }
    { 40  ;   ;Last Date Modified  ;Date          ;CaptionML=ENU=Last Date Modified;
                                                   Editable=false }
    { 41  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 42  ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Filter;
                                                   CaptionClass='1,3,1' }
    { 43  ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   CaptionML=ENU=Global Dimension 2 Filter;
                                                   CaptionClass='1,3,2' }
    { 44  ;   ;Cause of Absence Filter;Code10     ;FieldClass=FlowFilter;
                                                   TableRelation="Cause of Absence";
                                                   CaptionML=ENU=Cause of Absence Filter }
    { 45  ;   ;Total Absence (Base);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Employee Absence"."Quantity (Base)" WHERE ("Employee No."=FIELD("No."),
                                                                                                               "Cause of Absence Code"=FIELD("Cause of Absence Filter"),
                                                                                                               "From Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Total Absence (Base);
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 46  ;   ;Extension           ;Text30        ;CaptionML=ENU=Extension }
    { 47  ;   ;Employee No. Filter ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Employee;
                                                   CaptionML=ENU=Employee No. Filter }
    { 48  ;   ;Pager               ;Text30        ;CaptionML=ENU=Pager }
    { 49  ;   ;Fax No.             ;Text30        ;CaptionML=ENU=Fax No. }
    { 50  ;   ;Company E-Mail      ;Text80        ;OnValidate=VAR
                                                                MailManagement@1000 : Codeunit "Mail Management";
                                                              BEGIN
                                                                MailManagement.ValidateEmailAddressField("Company E-Mail");
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=ENU=Company Email }
    { 51  ;   ;Title               ;Text30        ;CaptionML=ENU=Title }
    { 52  ;   ;Salespers./Purch. Code;Code20      ;TableRelation="Salesperson/Purchaser";
                                                   CaptionML=ENU=Salespers./Purch. Code }
    { 53  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=false }
    { 54  ;   ;Last Modified Date Time;DateTime   ;CaptionML=ENU=Last Modified Date Time;
                                                   Editable=false }
    { 55  ;   ;Employee Posting Group;Code20      ;TableRelation="Employee Posting Group";
                                                   CaptionML=ENU=Employee Posting Group }
    { 56  ;   ;Bank Branch No.     ;Text20        ;CaptionML=ENU=Bank Branch No. }
    { 57  ;   ;Bank Account No.    ;Text30        ;CaptionML=ENU=Bank Account No. }
    { 58  ;   ;IBAN                ;Code50        ;OnValidate=VAR
                                                                CompanyInfo@1000 : Record "Company Information";
                                                              BEGIN
                                                                CompanyInfo.CheckIBAN(IBAN);
                                                              END;

                                                   CaptionML=ENU=IBAN }
    { 59  ;   ;Balance             ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Employee Ledger Entry".Amount WHERE ("Employee No."=FIELD("No."),
                                                                                                                   "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                   "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                   "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Balance;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 80  ;   ;Application Method  ;Option        ;CaptionML=ENU=Application Method;
                                                   OptionCaptionML=ENU=Manual,Apply to Oldest;
                                                   OptionString=Manual,"Apply to Oldest" }
    { 140 ;   ;Image               ;Media         ;ExtendedDatatype=Person;
                                                   CaptionML=ENU=Image }
    { 1100;   ;Cost Center Code    ;Code20        ;TableRelation="Cost Center";
                                                   CaptionML=ENU=Cost Center Code }
    { 1101;   ;Cost Object Code    ;Code20        ;TableRelation="Cost Object";
                                                   CaptionML=ENU=Cost Object Code }
    { 8000;   ;Id                  ;GUID          ;CaptionML=ENU=Id }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
    {    ;"Search Name"                            }
    {    ;Status,"Union Code"                      }
    {    ;Status,"Emplymt. Contract Code"          }
    {    ;"Last Name","First Name","Middle Name"   }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;"No.","First Name","Last Name",Initials,"Job Title" }
    { 2   ;Brick               ;"Last Name","First Name","Job Title",Image }
  }
  CODE
  {
    VAR
      HumanResSetup@1000 : Record "Human Resources Setup";
      Res@1002 : Record Resource;
      PostCode@1003 : Record "Post Code";
      AlternativeAddr@1004 : Record "Alternative Address";
      EmployeeQualification@1005 : Record "Employee Qualification";
      Relative@1006 : Record "Employee Relative";
      EmployeeAbsence@1007 : Record "Employee Absence";
      MiscArticleInformation@1008 : Record "Misc. Article Information";
      ConfidentialInformation@1009 : Record "Confidential Information";
      HumanResComment@1010 : Record "Human Resource Comment Line";
      SalespersonPurchaser@1011 : Record "Salesperson/Purchaser";
      NoSeriesMgt@1012 : Codeunit NoSeriesManagement;
      EmployeeResUpdate@1013 : Codeunit "Employee/Resource Update";
      EmployeeSalespersonUpdate@1014 : Codeunit "Employee/Salesperson Update";
      DimMgt@1015 : Codeunit DimensionManagement;
      Text000@1016 : TextConst 'ENU=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.';

    [External]
    PROCEDURE AssistEdit@2() : Boolean;
    BEGIN
      HumanResSetup.GET;
      HumanResSetup.TESTFIELD("Employee Nos.");
      if NoSeriesMgt.SelectSeries(HumanResSetup."Employee Nos.",xRec."No. Series","No. Series") then begin
        NoSeriesMgt.SetSeries("No.");
        exit(true);
      end;
    END;

    [External]
    PROCEDURE FullName@1() : Text[100];
    BEGIN
      if "Middle Name" = '' then
        exit("First Name" + ' ' + "Last Name");

      exit("First Name" + ' ' + "Middle Name" + ' ' + "Last Name");
    END;

    LOCAL PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::Employee,"No.",FieldNumber,ShortcutDimCode);
      MODIFY;
    END;

    [Internal]
    PROCEDURE DisplayMap@7();
    VAR
      MapPoint@1001 : Record "Online Map Setup";
      MapMgt@1000 : Codeunit "Online Map Management";
    BEGIN
      if MapPoint.FINDFIRST then
        MapMgt.MakeSelection(DATABASE::Employee,GETPOSITION)
      else
        MESSAGE(Text000);
    END;

    LOCAL PROCEDURE UpdateSearchName@4();
    VAR
      PrevSearchName@1000 : Code[250];
    BEGIN
      PrevSearchName := xRec.FullName + ' ' + xRec.Initials;
      if ((("First Name" <> xRec."First Name") or ("Middle Name" <> xRec."Middle Name") or ("Last Name" <> xRec."Last Name") or
           (Initials <> xRec.Initials)) and ("Search Name" = PrevSearchName))
      then
        "Search Name" := SetSearchNameToFullnameAndInitials;
    END;

    LOCAL PROCEDURE SetSearchNameToFullnameAndInitials@3() : Code[250];
    BEGIN
      exit(FullName + ' ' + Initials);
    END;

    [External]
    PROCEDURE GetBankAccountNo@5() : Text;
    BEGIN
      if IBAN <> '' then
        exit(DELCHR(IBAN,'=<>'));

      if "Bank Account No." <> '' then
        exit("Bank Account No.");
    END;

    BEGIN
    END.
  }
}

