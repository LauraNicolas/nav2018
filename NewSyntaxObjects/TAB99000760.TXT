OBJECT Table 99000760 Calendar Absence Entry
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               CalAbsenceMgt.RemoveAbsence(Rec);
             END;

    OnRename=BEGIN
               CalAbsenceMgt.RemoveAbsence(xRec);
               Updated := false;
             END;

    CaptionML=ENU=Calendar Absence Entry;
    LookupPageID="Capacity Absence";
    DrillDownPageID="Capacity Absence";
  }
  FIELDS
  {
    { 1   ;   ;Capacity Type       ;Option        ;CaptionML=ENU=Capacity Type;
                                                   OptionCaptionML=ENU=Work Center,Machine Center;
                                                   OptionString="Work Center","Machine Center";
                                                   Editable=false }
    { 2   ;   ;No.                 ;Code20        ;TableRelation=IF ("Capacity Type"=CONST("Work Center")) "Work Center"
                                                                 ELSE IF ("Capacity Type"=CONST("Machine Center")) "Machine Center";
                                                   OnValidate=BEGIN
                                                                if "No." = '' then
                                                                  exit;

                                                                case "Capacity Type" of
                                                                  "Capacity Type"::"Work Center":
                                                                    begin
                                                                      Workcenter.GET("No.");
                                                                      Workcenter.TESTFIELD("Work Center Group Code");
                                                                      "Work Center No." := Workcenter."No.";
                                                                      "Work Center Group Code" := Workcenter."Work Center Group Code";
                                                                      Capacity := Workcenter.Capacity;
                                                                    end;
                                                                  "Capacity Type"::"Machine Center":
                                                                    begin
                                                                      Machinecenter.GET("No.");
                                                                      Machinecenter.TESTFIELD("Work Center No.");
                                                                      Workcenter.GET(Machinecenter."Work Center No.");
                                                                      Workcenter.TESTFIELD("Work Center Group Code");
                                                                      "Work Center No." := Workcenter."No.";
                                                                      "Work Center Group Code" := Workcenter."Work Center Group Code";
                                                                      Capacity := Machinecenter.Capacity;
                                                                    end;
                                                                end;
                                                              END;

                                                   CaptionML=ENU=No.;
                                                   NotBlank=true }
    { 4   ;   ;Date                ;Date          ;OnValidate=BEGIN
                                                                UpdateDatetime;
                                                              END;

                                                   CaptionML=ENU=Date;
                                                   NotBlank=true }
    { 6   ;   ;Starting Time       ;Time          ;OnValidate=BEGIN
                                                                if ("Ending Time" = 000000T) or
                                                                   ("Ending Time" < "Starting Time" )
                                                                then
                                                                  VALIDATE("Ending Time","Starting Time")
                                                              END;

                                                   CaptionML=ENU=Starting Time }
    { 7   ;   ;Ending Time         ;Time          ;OnValidate=BEGIN
                                                                if "Ending Time" < "Starting Time" then
                                                                  ERROR(Text000,FIELDCAPTION("Ending Time"),FIELDCAPTION("Starting Time"));

                                                                UpdateDatetime;
                                                              END;

                                                   CaptionML=ENU=Ending Time }
    { 8   ;   ;Work Center No.     ;Code20        ;TableRelation="Work Center";
                                                   CaptionML=ENU=Work Center No.;
                                                   Editable=false }
    { 9   ;   ;Work Center Group Code;Code10      ;TableRelation="Work Center Group";
                                                   CaptionML=ENU=Work Center Group Code;
                                                   Editable=false }
    { 21  ;   ;Capacity            ;Decimal       ;OnValidate=BEGIN
                                                                if Capacity <> xRec.Capacity then begin
                                                                  CalAbsenceMgt.RemoveAbsence(xRec);
                                                                  Updated := false;
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Capacity;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 24  ;   ;Starting Date-Time  ;DateTime      ;OnValidate=BEGIN
                                                                "Starting Time" := DT2TIME("Starting Date-Time");
                                                                Date := DT2DATE("Starting Date-Time");
                                                                VALIDATE("Starting Time");
                                                              END;

                                                   CaptionML=ENU=Starting Date-Time }
    { 25  ;   ;Ending Date-Time    ;DateTime      ;OnValidate=BEGIN
                                                                "Ending Time" := DT2TIME("Ending Date-Time");
                                                                Date := DT2DATE("Ending Date-Time");
                                                                VALIDATE("Ending Time");
                                                              END;

                                                   CaptionML=ENU=Ending Date-Time }
    { 31  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 32  ;   ;Updated             ;Boolean       ;CaptionML=ENU=Updated;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"Capacity Type","No.",Date,"Starting Time","Ending Time";
                                                   Clustered=true }
    {    ;"Work Center No."                        }
    {    ;"Capacity Type","No.",Date,"Starting Date-Time","Ending Date-Time" }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 must be higher than %2.';
      Workcenter@1001 : Record "Work Center";
      Machinecenter@1002 : Record "Machine Center";
      CalAbsenceMgt@1003 : Codeunit "Calendar Absence Management";

    [External]
    PROCEDURE Caption@3() : Text[100];
    BEGIN
      if "Capacity Type" = "Capacity Type"::"Machine Center" then begin
        if not Machinecenter.GET(GETFILTER("No.")) then
          exit('');
        exit(
          STRSUBSTNO('%1 %2',
            Machinecenter."No.",Machinecenter.Name));
      end;
      if not Workcenter.GET(GETFILTER("No.")) then
        exit('');
      exit(
        STRSUBSTNO('%1 %2',
          Workcenter."No.",Workcenter.Name));
    END;

    LOCAL PROCEDURE UpdateDatetime@11();
    BEGIN
      "Starting Date-Time" := CREATEDATETIME(Date,"Starting Time");
      "Ending Date-Time" := CREATEDATETIME(Date,"Ending Time");
    END;

    BEGIN
    END.
  }
}

