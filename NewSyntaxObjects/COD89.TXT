OBJECT Codeunit 89 Sales-Post + Email
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    TableNo="Sales Header";
    OnRun=BEGIN
            SalesHeader.COPY(Rec);
            Code;
            Rec := SalesHeader;
          END;

  }
  CODE
  {
    VAR
      PostAndSendInvoiceQst@1001 : TextConst 'ENU=Do you want to post and send the %1?';
      SalesHeader@1003 : Record "Sales Header";
      SalesInvHeader@1005 : Record "Sales Invoice Header";
      SalesCrMemoHeader@1006 : Record "Sales Cr.Memo Header";
      FileManagement@1009 : Codeunit "File Management";
      IdentityManagement@1008 : Codeunit "Identity Management";
      HideMailDialog@1007 : Boolean;
      PostAndSaveInvoiceQst@1000 : TextConst 'ENU=Do you want to post and save the %1?';
      NotSupportedDocumentTypeSendingErr@1004 : TextConst 'ENU=The %1 is not posted because sending document of type %1 is not supported.';
      NotSupportedDocumentTypeSavingErr@1002 : TextConst 'ENU=The %1 is not posted because saving document of type %1 is not supported.';

    LOCAL PROCEDURE Code@2();
    BEGIN
      with SalesHeader do begin
        case "Document Type" of
          "Document Type"::Invoice,
          "Document Type"::"Credit Memo":
            if not ConfirmPostAndDistribute(SalesHeader) then
              exit;
          else
            ErrorPostAndDistribute(SalesHeader);
        end;

        CODEUNIT.RUN(CODEUNIT::"Sales-Post",SalesHeader);
        COMMIT;
        SendDocumentReport(SalesHeader);
      end;
    END;

    LOCAL PROCEDURE SendDocumentReport@3(VAR SalesHeader@1000 : Record "Sales Header");
    VAR
      ShowDialog@1001 : Boolean;
    BEGIN
      with SalesHeader do
        case "Document Type" of
          "Document Type"::Invoice:
            begin
              if "Last Posting No." = '' then
                SalesInvHeader."No." := "No."
              else
                SalesInvHeader."No." := "Last Posting No.";
              SalesInvHeader.FIND;
              SalesInvHeader.SETRECFILTER;
              ShowDialog := (not IdentityManagement.IsInvAppId) and not HideMailDialog;
              SalesInvHeader.EmailRecords(ShowDialog);
            end;
          "Document Type"::"Credit Memo":
            begin
              if "Last Posting No." = '' then
                SalesCrMemoHeader."No." := "No."
              else
                SalesCrMemoHeader."No." := "Last Posting No.";
              SalesCrMemoHeader.FIND;
              SalesCrMemoHeader.SETRECFILTER;
              SalesCrMemoHeader.EmailRecords(not HideMailDialog);
            end
        end
    END;

    [External]
    PROCEDURE InitializeFrom@10(NewHideMailDialog@1001 : Boolean);
    BEGIN
      HideMailDialog := NewHideMailDialog;
    END;

    LOCAL PROCEDURE ConfirmPostAndDistribute@1(VAR SalesHeader@1000 : Record "Sales Header") : Boolean;
    VAR
      PostAndDistributeQuestion@1001 : Text;
      ConfirmOK@1002 : Boolean;
    BEGIN
      if IdentityManagement.IsInvAppId then
        exit(true);

      if FileManagement.IsWebClient then
        PostAndDistributeQuestion := PostAndSaveInvoiceQst
      else
        PostAndDistributeQuestion := PostAndSendInvoiceQst;

      ConfirmOK := CONFIRM(PostAndDistributeQuestion,false,SalesHeader."Document Type");

      exit(ConfirmOK);
    END;

    LOCAL PROCEDURE ErrorPostAndDistribute@4(VAR SalesHeader@1000 : Record "Sales Header");
    VAR
      NotSupportedDocumentType@1001 : Text;
    BEGIN
      if FileManagement.IsWebClient then
        NotSupportedDocumentType := NotSupportedDocumentTypeSavingErr
      else
        NotSupportedDocumentType := NotSupportedDocumentTypeSendingErr;

      ERROR(NotSupportedDocumentType,SalesHeader."Document Type");
    END;

    BEGIN
    END.
  }
}

