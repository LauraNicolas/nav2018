OBJECT Table 87 Date Compr. Register
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    DataCaptionFields="No.";
    CaptionML=ENU=Date Compr. Register;
    LookupPageID="Date Compr. Registers";
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Integer       ;CaptionML=ENU=No. }
    { 2   ;   ;Creation Date       ;Date          ;CaptionML=ENU=Creation Date }
    { 3   ;   ;Table Caption       ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE ("Object Type"=CONST(Table),
                                                                                                                "Object ID"=FIELD("Table ID")));
                                                   CaptionML=ENU=Table Caption;
                                                   Editable=false }
    { 4   ;   ;Period Length       ;Option        ;CaptionML=ENU=Period Length;
                                                   OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Period;
                                                   OptionString=Day,Week,Month,Quarter,Year,Period }
    { 5   ;   ;Ending Date         ;Date          ;CaptionML=ENU=Ending Date;
                                                   ClosingDates=true }
    { 6   ;   ;No. of New Records  ;Integer       ;CaptionML=ENU=No. of New Records }
    { 7   ;   ;No. Records Deleted ;Integer       ;CaptionML=ENU=No. Records Deleted }
    { 8   ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit "User Management";
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=false;
                                                   CaptionML=ENU=User ID }
    { 9   ;   ;Filter              ;Text250       ;CaptionML=ENU=Filter }
    { 10  ;   ;Starting Date       ;Date          ;CaptionML=ENU=Starting Date;
                                                   ClosingDates=true }
    { 11  ;   ;Table ID            ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE ("Object Type"=CONST(Table));
                                                   CaptionML=ENU=Table ID }
    { 12  ;   ;Register No.        ;Integer       ;TableRelation=IF ("Table ID"=CONST(17)) "G/L Register"
                                                                 ELSE IF ("Table ID"=CONST(21)) "G/L Register"
                                                                 ELSE IF ("Table ID"=CONST(25)) "G/L Register"
                                                                 ELSE IF ("Table ID"=CONST(254)) "G/L Register"
                                                                 ELSE IF ("Table ID"=CONST(32)) "Item Register"
                                                                 ELSE IF ("Table ID"=CONST(203)) "Resource Register"
                                                                 ELSE IF ("Table ID"=CONST(169)) "Job Register"
                                                                 ELSE IF ("Table ID"=CONST(5601)) "FA Register"
                                                                 ELSE IF ("Table ID"=CONST(5629)) "Insurance Register"
                                                                 ELSE IF ("Table ID"=CONST(5625)) "FA Register"
                                                                 ELSE IF ("Table ID"=CONST(7312)) "Warehouse Register";
                                                   CaptionML=ENU=Register No. }
    { 13  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code }
    { 14  ;   ;Retain Field Contents;Text80       ;CaptionML=ENU=Retain Field Contents }
    { 15  ;   ;Retain Totals       ;Text80        ;CaptionML=ENU=Retain Totals }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
    {    ;"Table ID"                               }
    {    ;"Table ID","Ending Date"                 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1001 : TextConst 'ENU=The entry cannot be unapplied, because the %1 has been compressed.';
      Text001@1000 : TextConst 'ENU=The transaction cannot be reversed, because the %1 has been compressed.';

    [External]
    PROCEDURE InitRegister@3(TableID@1000 : Integer;RegNo@1001 : Integer;StartingDate@1002 : Date;EndingDate@1003 : Date;PeriodLength@1004 : Integer;EntryFilter@1005 : Text[250];RelatedRegNo@1006 : Integer;SourceCode@1007 : Code[10]);
    BEGIN
      INIT;
      "No." := RegNo;
      "Table ID" := TableID;
      "Creation Date" := TODAY;
      "Starting Date" := StartingDate;
      "Ending Date" := EndingDate;
      "Period Length" := PeriodLength;
      Filter := EntryFilter;
      "Register No." := RelatedRegNo;
      "Source Code" := SourceCode;
      "User ID" := USERID;
    END;

    LOCAL PROCEDURE CheckLedgerEntryCompressed@1(PostingDate@1003 : Date;TableID@1002 : Integer;Caption@1001 : Text[50];Type@1000 : 'Unapply,Reversal');
    BEGIN
      SETCURRENTKEY("Table ID","Ending Date");
      SETRANGE("Table ID",TableID);
      if FIND('+') then
        if PostingDate <= "Ending Date" then
          case Type of
            Type::Unapply:
              ERROR(Text000,Caption);
            Type::Reversal:
              ERROR(Text001,Caption);
          end;
    END;

    [External]
    PROCEDURE CheckMaxDateCompressed@2(MaxPostingDate@1002 : Date;Type@1003 : 'Unapply,Reversal');
    VAR
      GLEntry@1004 : Record "G/L Entry";
      CustLedgEntry@1010 : Record "Cust. Ledger Entry";
      VendLedgEntry@1009 : Record "Vendor Ledger Entry";
      BankAccLedgEntry@1008 : Record "Bank Account Ledger Entry";
      VATEntry@1007 : Record "VAT Entry";
      FALedgEntry@1006 : Record "FA Ledger Entry";
      MaintenanceLedgEntry@1005 : Record "Maintenance Ledger Entry";
    BEGIN
      CheckLedgerEntryCompressed(MaxPostingDate,DATABASE::"Cust. Ledger Entry",CustLedgEntry.TABLECAPTION,Type);
      CheckLedgerEntryCompressed(MaxPostingDate,DATABASE::"Vendor Ledger Entry",VendLedgEntry.TABLECAPTION,Type);
      CheckLedgerEntryCompressed(MaxPostingDate,DATABASE::"Bank Account Ledger Entry",BankAccLedgEntry.TABLECAPTION,Type);
      CheckLedgerEntryCompressed(MaxPostingDate,DATABASE::"VAT Entry",VATEntry.TABLECAPTION,Type);
      CheckLedgerEntryCompressed(MaxPostingDate,DATABASE::"G/L Entry",GLEntry.TABLECAPTION,Type);
      if Type = Type::Reversal then begin
        CheckLedgerEntryCompressed(MaxPostingDate,DATABASE::"FA Ledger Entry",FALedgEntry.TABLECAPTION,Type);
        CheckLedgerEntryCompressed(MaxPostingDate,DATABASE::"Maintenance Ledger Entry",MaintenanceLedgEntry.TABLECAPTION,Type);
      end;
    END;

    BEGIN
    END.
  }
}

