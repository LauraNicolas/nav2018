OBJECT Page 5871 Item Availability by BOM Level
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Item Availability by BOM Level;
    InsertAllowed=false;
    DeleteAllowed=false;
    SourceTable="BOM Buffer";
    PageType=Worksheet;
    SourceTableTemporary=true;
    OnOpenPage=BEGIN
                 ShowTotalAvailability := true;
                 if DemandDate = 0D then
                   DemandDate := WORKDATE;
                 RefreshPage;
               END;

    OnAfterGetRecord=VAR
                       DummyBOMWarningLog@1000 : Record "BOM Warning Log";
                     BEGIN
                       IsParentExpr := not "Is Leaf";

                       HasWarning := not IsLineOk(false,DummyBOMWarningLog);
                     END;

    ActionList=ACTIONS
    {
      { 35      ;    ;ActionContainer;
                      Name=ActionContainer35;
                      ActionContainerType=RelatedInformation }
      { 9       ;1   ;ActionGroup;
                      Name=&Item;
                      CaptionML=ENU=&Item;
                      Image=Item }
      { 33      ;2   ;ActionGroup;
                      Name=&Item Availability by;
                      CaptionML=ENU=&Item Availability by;
                      Image=ItemAvailability }
      { 32      ;3   ;Action    ;
                      Name=Event;
                      CaptionML=ENU=Event;
                      ToolTipML=ENU=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.;
                      ApplicationArea=#Advanced;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 31      ;3   ;Action    ;
                      Name=Period;
                      CaptionML=ENU=Period;
                      ToolTipML=ENU=View the projected quantity of the item over time according to time periods, such as day, week, or month.;
                      ApplicationArea=#Advanced;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByPeriod);
                               END;
                                }
      { 30      ;3   ;Action    ;
                      Name=Variant;
                      CaptionML=ENU=Variant;
                      ToolTipML=ENU=View or edit the item's variants. Instead of setting up each color of an item as a separate item, you can set up the various colors as variants of the item.;
                      ApplicationArea=#Advanced;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByVariant);
                               END;
                                }
      { 29      ;3   ;Action    ;
                      Name=Location;
                      AccessByPermission=TableData Location=R;
                      CaptionML=ENU=Location;
                      ToolTipML=ENU=View the actual and projected quantity of the item per location.;
                      ApplicationArea=#Advanced;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByLocation);
                               END;
                                }
      { 37      ;0   ;ActionContainer;
                      Name=ActionContainer37;
                      ActionContainerType=ActionItems }
      { 36      ;1   ;Action    ;
                      Name=Previous Period;
                      CaptionML=ENU=Previous Period;
                      ToolTipML=ENU=Show the information based on the previous period. If you set the View by field to Day, the date filter changes to the day before.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 DemandDate := CALCDATE('<-1D>',DemandDate);
                                 RefreshPage;
                               END;
                                }
      { 34      ;1   ;Action    ;
                      Name=Next Period;
                      CaptionML=ENU=Next Period;
                      ToolTipML=ENU=Show the information based on the next period. If you set the View by field to Day, the date filter changes to the day before.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 DemandDate := CALCDATE('<+1D>',DemandDate);
                                 RefreshPage;
                               END;
                                }
      { 40      ;1   ;Action    ;
                      Name=Show Warnings;
                      CaptionML=ENU=Show Warnings;
                      ToolTipML=ENU=View details about bottlenecks.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=ErrorLog;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 ShowWarningsForAllLines;
                               END;
                                }
      { 38      ;0   ;ActionContainer;
                      Name=ActionContainer38;
                      ActionContainerType=Reports }
      { 39      ;1   ;Action    ;
                      Name=Item - Able to Make (Timeline);
                      CaptionML=ENU=Item - Able to Make (Timeline);
                      ToolTipML=ENU=View five key availability figures over time for the selected parent item. The figures change according to expected supply and demand events and to supply that is based on available components that can be assembled or produced. You can use the report to see whether you can fulfill a sales order for an item on a specified date by looking at its current availability in combination with the potential quantities that its components can supply if an assembly order were started.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Trendscape;
                      PromotedCategory=Report;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 ShowAbleToMakeTimeline;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 20  ;1   ;Group     ;
                Name=Option;
                CaptionML=ENU=Option;
                GroupType=Group }

    { 19  ;2   ;Field     ;
                Name=ItemFilter;
                CaptionML=ENU=Item Filter;
                ToolTipML=ENU=Specifies the item you want to show availability information for.;
                ApplicationArea=#Assembly;
                SourceExpr=ItemFilter;
                OnValidate=BEGIN
                             IsCalculated := false;
                             RefreshPage;
                           END;

                OnLookup=VAR
                           Item@1001 : Record Item;
                           ItemList@1000 : Page "Item List";
                         BEGIN
                           ItemList.SETTABLEVIEW(Item);
                           ItemList.LOOKUPMODE := true;
                           if ItemList.RUNMODAL = ACTION::LookupOK then begin
                             ItemList.GETRECORD(Item);
                             Text := Item."No.";
                             exit(true);
                           end;
                           exit(false);
                         END;

                ImplicitType=Code250 }

    { 17  ;2   ;Field     ;
                Name=LocationFilter;
                CaptionML=ENU=Location Filter;
                ToolTipML=ENU=Specifies the location that you want to show item availability for.;
                ApplicationArea=#Assembly;
                SourceExpr=LocationFilter;
                OnValidate=BEGIN
                             IsCalculated := false;
                             RefreshPage;
                           END;

                OnLookup=VAR
                           Location@1001 : Record Location;
                           LocationList@1000 : Page "Location List";
                         BEGIN
                           LocationList.SETTABLEVIEW(Location);
                           LocationList.LOOKUPMODE := true;
                           if LocationList.RUNMODAL = ACTION::LookupOK then begin
                             LocationList.GETRECORD(Location);
                             Text := Location.Code;
                             exit(true);
                           end;
                           exit(false);
                         END;

                ImplicitType=Code250 }

    { 16  ;2   ;Field     ;
                Name=VariantFilter;
                CaptionML=ENU=Variant Filter;
                ToolTipML=ENU=Specifies the item variant you want to show availability for.;
                ApplicationArea=#Advanced;
                SourceExpr=VariantFilter;
                OnValidate=BEGIN
                             IsCalculated := false;
                             RefreshPage;
                           END;

                OnLookup=VAR
                           ItemVariant@1001 : Record "Item Variant";
                           ItemVariants@1000 : Page "Item Variants";
                         BEGIN
                           ItemVariant.SETFILTER("Item No.",ItemFilter);
                           ItemVariants.SETTABLEVIEW(ItemVariant);
                           ItemVariants.LOOKUPMODE := true;
                           if ItemVariants.RUNMODAL = ACTION::LookupOK then begin
                             ItemVariants.GETRECORD(ItemVariant);
                             Text := ItemVariant.Code;
                             exit(true);
                           end;
                           exit(false);
                         END;

                ImplicitType=Code250 }

    { 18  ;2   ;Field     ;
                Name=DemandDate;
                CaptionML=ENU=Demand Date;
                ToolTipML=ENU=Specifies the date when you want to potentially make the parents, or top items, shown in the Item Availability by BOM Level window.;
                ApplicationArea=#Assembly;
                SourceExpr=DemandDate;
                OnValidate=BEGIN
                             IsCalculated := false;
                             RefreshPage;
                           END;

                ImplicitType=Date }

    { 10  ;2   ;Field     ;
                Name=IsCalculated;
                CaptionML=ENU=Calculated;
                ToolTipML=ENU=Specifies that the low-level code of the item on the line has been calculated.;
                ApplicationArea=#Assembly;
                SourceExpr=IsCalculated;
                Editable=FALSE;
                ImplicitType=Boolean }

    { 26  ;2   ;Field     ;
                Name=ShowTotalAvailability;
                CaptionML=ENU=Show Total Availability;
                ToolTipML=ENU=Specifies whether the Item Availability by BOM Level window shows availability of all items, including the potential availability of parents.;
                ApplicationArea=#Assembly;
                SourceExpr=ShowTotalAvailability;
                OnValidate=BEGIN
                             IsCalculated := false;
                             RefreshPage;
                           END;

                ImplicitType=Boolean }

    { 2   ;1   ;Group     ;
                Name=Group;
                CaptionML=ENU=Lines;
                IndentationColumnName=Indentation;
                ShowAsTree=true;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the item.;
                ApplicationArea=#Assembly;
                SourceExpr="No.";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=IsParentExpr;
                ImplicitType=Code20 }

    { 14  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the item's description.;
                ApplicationArea=#Assembly;
                SourceExpr=Description;
                Editable=FALSE;
                ImplicitType=Text50 }

    { 41  ;2   ;Field     ;
                Name=HasWarning;
                CaptionML=ENU=Warning;
                ToolTipML=ENU=Specifies if the BOM line has setup or data issues. Choose the field to open the BOM Warning Log window to see a description of the issue.;
                ApplicationArea=#Assembly;
                BlankZero=true;
                SourceExpr=HasWarning;
                Editable=FALSE;
                Style=Attention;
                StyleExpr=HasWarning;
                OnDrillDown=BEGIN
                              if HasWarning then
                                ShowWarnings;
                            END;

                ImplicitType=Boolean }

    { 27  ;2   ;Field     ;
                Name=Bottleneck;
                ToolTipML=ENU=Specifies which item in the BOM structure restricts you from making a larger quantity than what is shown in the Able to Make Top Item field.;
                ApplicationArea=#Assembly;
                SourceExpr=Bottleneck;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE;
                ImplicitType=Boolean }

    { 6   ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant code that you entered in the Variant Filter field in the Item Availability by BOM Level window.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 21  ;2   ;Field     ;
                Name=Qty. per Parent;
                ToolTipML=ENU=Specifies how many units of the component are required to assemble or produce one unit of the parent.;
                ApplicationArea=#Assembly;
                DecimalPlaces=0:5;
                SourceExpr="Qty. per Parent";
                Editable=FALSE;
                ImplicitType=Decimal }

    { 22  ;2   ;Field     ;
                Name=Qty. per Top Item;
                ToolTipML=ENU=Specifies how many units of the component are required to assemble or produce one unit of the top item.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr="Qty. per Top Item";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Decimal }

    { 23  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Assembly;
                SourceExpr="Unit of Measure Code";
                Editable=FALSE;
                ImplicitType=Code10 }

    { 24  ;2   ;Field     ;
                Name=Replenishment System;
                ToolTipML=ENU=Specifies the item's replenishment system.;
                ApplicationArea=#Assembly;
                SourceExpr="Replenishment System";
                Editable=FALSE;
                ImplicitType=Option }

    { 13  ;2   ;Field     ;
                Name=Available Quantity;
                ToolTipML=ENU=Specifies how many units of the item on the line are available, regardless of how many parents you can make with the item.;
                ApplicationArea=#Assembly;
                BlankZero=true;
                SourceExpr="Available Quantity";
                Editable=FALSE;
                ImplicitType=Decimal }

    { 3   ;2   ;Field     ;
                Name=Unused Quantity;
                ToolTipML=ENU=Specifies the part of the item's total availability that is not required to make the quantities that are shown in the fields.;
                ApplicationArea=#Advanced;
                SourceExpr="Unused Quantity";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 15  ;2   ;Field     ;
                Name=Needed by Date;
                ToolTipML=ENU=Specifies when the item must be available to make the parent or top item.;
                ApplicationArea=#Assembly;
                SourceExpr="Needed by Date";
                Editable=FALSE;
                ImplicitType=Date }

    { 11  ;2   ;Field     ;
                Name=Able to Make Parent;
                ToolTipML=ENU=Specifies how many units of the BOM item on the collapsible line above it can be assembled or produced.;
                ApplicationArea=#Assembly;
                BlankZero=true;
                SourceExpr="Able to Make Parent";
                Editable=FALSE;
                ImplicitType=Decimal }

    { 12  ;2   ;Field     ;
                Name=Able to Make Top Item;
                ToolTipML=ENU=Specifies how many units of the BOM item on the top line can be assembled or produced.;
                ApplicationArea=#Assembly;
                BlankZero=true;
                SourceExpr="Able to Make Top Item";
                Editable=FALSE;
                ImplicitType=Decimal }

    { 8   ;2   ;Field     ;
                Name=Gross Requirement;
                ToolTipML=ENU=Specifies the total demand for the item.;
                ApplicationArea=#Advanced;
                BlankZero=true;
                SourceExpr="Gross Requirement";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Decimal }

    { 7   ;2   ;Field     ;
                Name=Scheduled Receipts;
                ToolTipML=ENU=Specifies how many units of the item are inbound on orders.;
                ApplicationArea=#Advanced;
                BlankZero=true;
                SourceExpr="Scheduled Receipts";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Decimal }

    { 5   ;2   ;Field     ;
                Name=Safety Lead Time;
                ToolTipML=ENU=Specifies any safety lead time that is defined for the item.;
                ApplicationArea=#Advanced;
                SourceExpr="Safety Lead Time";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=DateFormula }

    { 25  ;2   ;Field     ;
                Name=Rolled-up Lead-Time Offset;
                ToolTipML=ENU=Specifies the cumulative lead time of components under a parent item.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Rolled-up Lead-Time Offset";
                Visible=FALSE;
                ImplicitType=Integer }

  }
  CODE
  {
    VAR
      Item@1004 : Record Item;
      AsmHeader@1009 : Record "Assembly Header";
      ProdOrderLine@1002 : Record "Prod. Order Line";
      ItemAvailFormsMgt@1011 : Codeunit "Item Availability Forms Mgt";
      IsParentExpr@1010 : Boolean INDATASET;
      ItemFilter@1008 : Code[250];
      LocationFilter@1007 : Code[250];
      VariantFilter@1006 : Code[250];
      DemandDate@1003 : Date;
      IsCalculated@1000 : Boolean;
      ShowTotalAvailability@1001 : Boolean;
      ShowBy@1005 : 'Item,Assembly,Production';
      Text000@1012 : TextConst 'ENU=Could not find items with BOM levels.';
      Text001@1013 : TextConst 'ENU=There are no warnings.';
      HasWarning@1014 : Boolean INDATASET;

    [External]
    PROCEDURE InitItem@1(VAR NewItem@1000 : Record Item);
    BEGIN
      Item.COPY(NewItem);
      ItemFilter := Item."No.";
      VariantFilter := Item.GETFILTER("Variant Filter");
      LocationFilter := Item.GETFILTER("Location Filter");
      ShowBy := ShowBy::Item;
    END;

    [External]
    PROCEDURE InitAsmOrder@5(NewAsmHeader@1000 : Record "Assembly Header");
    BEGIN
      AsmHeader := NewAsmHeader;
      ShowBy := ShowBy::Assembly;
    END;

    [External]
    PROCEDURE InitProdOrder@6(NewProdOrderLine@1000 : Record "Prod. Order Line");
    BEGIN
      ProdOrderLine := NewProdOrderLine;
      ShowBy := ShowBy::Production;
    END;

    [External]
    PROCEDURE InitDate@4(NewDemandDate@1000 : Date);
    BEGIN
      DemandDate := NewDemandDate;
    END;

    LOCAL PROCEDURE RefreshPage@2();
    VAR
      CalcBOMTree@1000 : Codeunit "Calculate BOM Tree";
    BEGIN
      Item.SETRANGE("Date Filter",0D,DemandDate);
      Item.SETFILTER("Location Filter",LocationFilter);
      Item.SETFILTER("Variant Filter",VariantFilter);
      Item.SETFILTER("No.",ItemFilter);
      CalcBOMTree.SetItemFilter(Item);

      CalcBOMTree.SetShowTotalAvailability(ShowTotalAvailability);
      case ShowBy of
        ShowBy::Item:
          begin
            Item.FINDFIRST;
            if not Item.HasBOM then
              ERROR(Text000);
            CalcBOMTree.GenerateTreeForItems(Item,Rec,1);
          end;
        ShowBy::Production:
          begin
            ProdOrderLine."Due Date" := DemandDate;
            CalcBOMTree.GenerateTreeForProdLine(ProdOrderLine,Rec,1);
          end;
        ShowBy::Assembly:
          begin
            AsmHeader."Due Date" := DemandDate;
            CalcBOMTree.GenerateTreeForAsm(AsmHeader,Rec,1);
          end;
      end;

      CurrPage.UPDATE(false);
      IsCalculated := true;
    END;

    [External]
    PROCEDURE GetSelectedDate@3() : Date;
    BEGIN
      exit(DemandDate);
    END;

    LOCAL PROCEDURE ItemAvail@7(AvailType@1000 : Option);
    VAR
      Item@1001 : Record Item;
    BEGIN
      TESTFIELD(Type,Type::Item);

      Item.GET("No.");
      Item.SETFILTER("No.","No.");
      Item.SETRANGE("Date Filter",0D,"Needed by Date");
      Item.SETFILTER("Location Filter",LocationFilter);
      Item.SETFILTER("Variant Filter","Variant Code");
      if ShowBy <> ShowBy::Item then
        Item.SETFILTER("Location Filter","Location Code");
      if Indentation = 0 then
        Item.SETFILTER("Variant Filter",VariantFilter);

      ItemAvailFormsMgt.ShowItemAvailFromItem(Item,AvailType);
    END;

    LOCAL PROCEDURE ShowAbleToMakeTimeline@8();
    VAR
      Item@1001 : Record Item;
      ItemAbleToMakeTimeline@1002 : Report "Item - Able to Make (Timeline)";
    BEGIN
      TESTFIELD(Type,Type::Item);

      Item.GET("No.");
      Item.SETFILTER("No.","No.");

      with ItemAbleToMakeTimeline do begin
        if Indentation = 0 then begin
          case ShowBy of
            ShowBy::Item:
              begin
                Item.SETFILTER("Location Filter",LocationFilter);
                Item.SETFILTER("Variant Filter",VariantFilter);
              end;
            ShowBy::Assembly:
              InitAsmOrder(AsmHeader);
            ShowBy::Production:
              InitProdOrder(ProdOrderLine);
          end;
        end else begin
          Item.SETFILTER("Location Filter",LocationFilter);
          Item.SETFILTER("Variant Filter",VariantFilter);
        end;

        SETTABLEVIEW(Item);
        Initialize("Needed by Date",0,7,true);
        RUN;
      end;
    END;

    LOCAL PROCEDURE ShowWarnings@10();
    VAR
      TempBOMWarningLog@1001 : TEMPORARY Record "BOM Warning Log";
    BEGIN
      if IsLineOk(true,TempBOMWarningLog) then
        MESSAGE(Text001)
      else
        PAGE.RUNMODAL(PAGE::"BOM Warning Log",TempBOMWarningLog);
    END;

    LOCAL PROCEDURE ShowWarningsForAllLines@27();
    VAR
      TempBOMWarningLog@1001 : TEMPORARY Record "BOM Warning Log";
    BEGIN
      if AreAllLinesOk(TempBOMWarningLog) then
        MESSAGE(Text001)
      else
        PAGE.RUNMODAL(PAGE::"BOM Warning Log",TempBOMWarningLog);
    END;

    BEGIN
    END.
  }
}

