OBJECT Report 97 Date Compr. G/L Budget Entries
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Date Compr. Register"=rimd;
    CaptionML=ENU=Date Compr. G/L Budget Entries;
    ProcessingOnly=true;
    OnPreReport=BEGIN
                  DimSelectionBuf.CompareDimText(
                    3,REPORT::"Date Compr. G/L Budget Entries",'',RetainDimText,Text009);
                END;

  }
  DATASET
  {
    { 3459;    ;DataItem;G/L Budget Entry    ;
               DataItemTable="G/L Budget Entry";
               DataItemTableView=SORTING("Budget Name","G/L Account No.",Date);
               OnPreDataItem=VAR
                               GLSetup@1000 : Record "General Ledger Setup";
                             BEGIN
                               if not
                                  CONFIRM(
                                    Text000 +
                                    Text001,false)
                               then
                                 CurrReport.BREAK;

                               if EntrdDateComprReg."Ending Date" = 0D then
                                 ERROR(
                                   Text002,
                                   EntrdDateComprReg.FIELDCAPTION("Ending Date"));

                               DateComprReg.INIT;
                               DateComprReg."Creation Date" := TODAY;
                               DateComprReg."Starting Date" := EntrdDateComprReg."Starting Date";
                               DateComprReg."Ending Date" := EntrdDateComprReg."Ending Date";
                               DateComprReg."Period Length" := EntrdDateComprReg."Period Length";
                               DateComprReg."User ID" := USERID;
                               DateComprReg."Table ID" := DATABASE::"G/L Budget Entry";
                               DateComprReg.Filter := COPYSTR(GETFILTERS,1,MAXSTRLEN(DateComprReg.Filter));

                               if AnalysisView.FINDFIRST then begin
                                 AnalysisView.CheckDimensionsAreRetained(3,REPORT::"Date Compr. G/L Budget Entries",true);
                                 AnalysisView.CheckViewsAreUpdated;
                                 COMMIT;
                               end;

                               SelectedDim.GetSelectedDim(
                                 USERID,3,REPORT::"Date Compr. G/L Budget Entries",'',TempSelectedDim);
                               GLSetup.GET;
                               Retain[2] :=
                                 TempSelectedDim.GET(
                                   USERID,3,REPORT::"Date Compr. G/L Budget Entries",'',GLSetup."Global Dimension 1 Code");
                               Retain[3] :=
                                 TempSelectedDim.GET(
                                   USERID,3,REPORT::"Date Compr. G/L Budget Entries",'',GLSetup."Global Dimension 2 Code");

                               GLBudgetEntry2.LOCKTABLE;
                               if GLBudgetEntry2.FIND('+') then;
                               LastEntryNo := GLBudgetEntry2."Entry No.";
                               LowestEntryNo := 2147483647;

                               Window.OPEN(
                                 Text003 +
                                 Text004 +
                                 Text005 +
                                 Text006 +
                                 Text007 +
                                 Text008);

                               SETRANGE("Entry No.",0,LastEntryNo);
                               SETRANGE(Date,EntrdDateComprReg."Starting Date",EntrdDateComprReg."Ending Date");
                             END;

               OnAfterGetRecord=BEGIN
                                  GLBudgetEntry2 := "G/L Budget Entry";
                                  with GLBudgetEntry2 do begin
                                    SETCURRENTKEY("Budget Name","G/L Account No.",Date);
                                    COPYFILTERS("G/L Budget Entry");
                                    SETFILTER(Date,DateComprMgt.GetDateFilter(Date,EntrdDateComprReg,false));
                                    SETRANGE("Budget Name","Budget Name");
                                    SETRANGE("G/L Account No.","G/L Account No.");

                                    LastEntryNo := LastEntryNo + 1;

                                    if RetainNo(FIELDNO("Business Unit Code")) then
                                      SETRANGE("Business Unit Code","Business Unit Code");
                                    if RetainNo(FIELDNO("Global Dimension 1 Code")) then
                                      SETRANGE("Global Dimension 1 Code","Global Dimension 1 Code");
                                    if RetainNo(FIELDNO("Global Dimension 2 Code")) then
                                      SETRANGE("Global Dimension 2 Code","Global Dimension 2 Code");
                                    if Amount >= 0 then
                                      SETFILTER(Amount,'>=0')
                                    else
                                      SETFILTER(Amount,'<0');

                                    InitNewEntry(NewGLBudgetEntry);

                                    DimBufMgt.CollectDimEntryNo(
                                      TempSelectedDim,"Dimension Set ID","Entry No.",0,false,DimEntryNo);
                                    ComprDimEntryNo := DimEntryNo;
                                    SummarizeEntry(NewGLBudgetEntry,GLBudgetEntry2);
                                    while NEXT <> 0 do begin
                                      DimBufMgt.CollectDimEntryNo(
                                        TempSelectedDim,"Dimension Set ID","Entry No.",ComprDimEntryNo,true,DimEntryNo);
                                      if DimEntryNo = ComprDimEntryNo then
                                        SummarizeEntry(NewGLBudgetEntry,GLBudgetEntry2);
                                    end;

                                    InsertNewEntry(NewGLBudgetEntry,ComprDimEntryNo);

                                    ComprCollectedEntries;
                                  end;

                                  if DateComprReg."No. Records Deleted" >= NoOfDeleted + 10 then begin
                                    NoOfDeleted := DateComprReg."No. Records Deleted";
                                    InsertRegister;
                                    COMMIT;
                                    GLBudgetEntry2.LOCKTABLE;
                                    GLBudgetEntry2.RESET;
                                    if GLBudgetEntry2.FIND('+') then;
                                    LastEntryNo := GLBudgetEntry2."Entry No.";
                                  end;
                                END;

               OnPostDataItem=VAR
                                UpdateAnalysisView@1000 : Codeunit "Update Analysis View";
                              BEGIN
                                InsertRegister;
                                if AnalysisView.FINDFIRST then
                                  if LowestEntryNo < 2147483647 then
                                    UpdateAnalysisView.SetLastBudgetEntryNo(LowestEntryNo - 1);
                              END;

               ReqFilterFields="Budget Name","G/L Account No." }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnOpenPage=BEGIN
                   InitializeParameter;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=Starting Date;
                  CaptionML=ENU=Starting Date;
                  ToolTipML=ENU=Specifies the date from which the report or batch job processes information.;
                  ApplicationArea=#Suite;
                  ClosingDates=true;
                  SourceExpr=EntrdDateComprReg."Starting Date" }

      { 2   ;2   ;Field     ;
                  Name=Ending Date;
                  CaptionML=ENU=Ending Date;
                  ToolTipML=ENU=Specifies the date to which the report or batch job processes information.;
                  ApplicationArea=#Suite;
                  ClosingDates=true;
                  SourceExpr=EntrdDateComprReg."Ending Date" }

      { 3   ;2   ;Field     ;
                  Name=Period Length;
                  CaptionML=ENU=Period Length;
                  ToolTipML=ENU=Specifies the period for which data is shown in the report. For example, enter "1M" for one month, "30D" for thirty days, "3Q" for three quarters, or "5Y" for five years.;
                  OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Period;
                  ApplicationArea=#Suite;
                  SourceExpr=EntrdDateComprReg."Period Length" }

      { 4   ;2   ;Field     ;
                  Name=Posting Description;
                  CaptionML=ENU=Posting Description;
                  ToolTipML=ENU=Specifies a text that accompanies the entries that result from the compression. The default description is Date Compressed.;
                  ApplicationArea=#Suite;
                  SourceExpr=EntrdGLBudgetEntry.Description }

      { 1907651001;2;Group  ;
                  Name=Retain Field Contents;
                  CaptionML=ENU=Retain Field Contents }

      { 5   ;3   ;Field     ;
                  Name=Business Unit Code;
                  CaptionML=ENU=Business Unit Code;
                  ToolTipML=ENU=Specifies the code for the business unit.;
                  ApplicationArea=#Advanced;
                  SourceExpr=Retain[1] }

      { 6   ;2   ;Field     ;
                  Name=Retain Dimensions;
                  CaptionML=ENU=Retain Dimensions;
                  ToolTipML=ENU=Specifies which dimension information you want to retain when the entries are compressed. The more dimension information that you choose to retain, the more detailed the compressed entries are.;
                  ApplicationArea=#Suite;
                  SourceExpr=RetainDimText;
                  Editable=FALSE;
                  OnAssistEdit=BEGIN
                                 DimSelectionBuf.SetDimSelectionMultiple(3,REPORT::"Date Compr. G/L Budget Entries",RetainDimText);
                               END;
                                }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=This batch job deletes entries.\\';
      Text001@1001 : TextConst 'ENU=Do you want to date compress the entries?';
      Text002@1002 : TextConst 'ENU=%1 must be specified.';
      Text003@1003 : TextConst 'ENU=Date compressing G/L budget entries...\\';
      Text004@1004 : TextConst 'ENU=Budget Name          #1##########\';
      Text005@1005 : TextConst 'ENU=G/L Account No.      #2##########\';
      Text006@1006 : TextConst 'ENU=Date                 #3######\\';
      Text007@1007 : TextConst 'ENU=No. of new entries   #4######\';
      Text008@1008 : TextConst 'ENU=No. of entries del.  #5######';
      Text009@1009 : TextConst 'ENU=Retain Dimensions';
      DateComprReg@1010 : Record "Date Compr. Register";
      EntrdDateComprReg@1011 : Record "Date Compr. Register";
      EntrdGLBudgetEntry@1012 : Record "G/L Budget Entry";
      NewGLBudgetEntry@1013 : Record "G/L Budget Entry";
      GLBudgetEntry2@1014 : Record "G/L Budget Entry";
      SelectedDim@1015 : Record "Selected Dimension";
      TempSelectedDim@1016 : TEMPORARY Record "Selected Dimension";
      DimSelectionBuf@1017 : Record "Dimension Selection Buffer";
      AnalysisView@1018 : Record "Analysis View";
      DateComprMgt@1019 : Codeunit DateComprMgt;
      DimBufMgt@1020 : Codeunit "Dimension Buffer Management";
      DimMgt@1021 : Codeunit DimensionManagement;
      Window@1022 : Dialog;
      NoOfFields@1023 : Integer;
      Retain@1024 : ARRAY [10] OF Boolean;
      FieldNumber@1025 : ARRAY [10] OF Integer;
      LastEntryNo@1027 : Integer;
      LowestEntryNo@1028 : Integer;
      NoOfDeleted@1029 : Integer;
      i@1030 : Integer;
      ComprDimEntryNo@1031 : Integer;
      DimEntryNo@1032 : Integer;
      RetainDimText@1033 : Text[250];
      RegExists@1034 : Boolean;

    LOCAL PROCEDURE InsertField@2(Number@1000 : Integer);
    BEGIN
      NoOfFields := NoOfFields + 1;
      FieldNumber[NoOfFields] := Number;
    END;

    LOCAL PROCEDURE RetainNo@3(Number@1000 : Integer) : Boolean;
    BEGIN
      exit(Retain[Index(Number)]);
    END;

    LOCAL PROCEDURE Index@6(Number@1000 : Integer) : Integer;
    BEGIN
      for i := 1 to NoOfFields do
        if Number = FieldNumber[i] then
          exit(i);
    END;

    LOCAL PROCEDURE SummarizeEntry@5(VAR NewGLBudgetEntry@1000 : Record "G/L Budget Entry";GLBudgetEntry@1001 : Record "G/L Budget Entry");
    BEGIN
      with GLBudgetEntry do begin
        NewGLBudgetEntry.Amount := NewGLBudgetEntry.Amount + Amount;
        DELETE;
        if "Entry No." < LowestEntryNo then
          LowestEntryNo := "Entry No.";
        DateComprReg."No. Records Deleted" := DateComprReg."No. Records Deleted" + 1;
        Window.UPDATE(5,DateComprReg."No. Records Deleted");
      end;
    END;

    [External]
    PROCEDURE ComprCollectedEntries@12();
    VAR
      GLBudgetEntry@1000 : Record "G/L Budget Entry";
      OldDimEntryNo@1001 : Integer;
      Found@1002 : Boolean;
      GLBudgetEntryNo@1003 : Integer;
    BEGIN
      OldDimEntryNo := 0;
      if DimBufMgt.FindFirstDimEntryNo(DimEntryNo,GLBudgetEntryNo) then begin
        InitNewEntry(NewGLBudgetEntry);
        repeat
          GLBudgetEntry.GET(GLBudgetEntryNo);
          SummarizeEntry(NewGLBudgetEntry,GLBudgetEntry);
          OldDimEntryNo := DimEntryNo;
          Found := DimBufMgt.NextDimEntryNo(DimEntryNo,GLBudgetEntryNo);
          if (OldDimEntryNo <> DimEntryNo) or not Found then begin
            InsertNewEntry(NewGLBudgetEntry,OldDimEntryNo);
            if Found then
              InitNewEntry(NewGLBudgetEntry);
          end;
          OldDimEntryNo := DimEntryNo;
        until not Found;
      end;
      DimBufMgt.DeleteAllDimEntryNo;
    END;

    [External]
    PROCEDURE InitNewEntry@7(VAR NewGLBudgetEntry@1000 : Record "G/L Budget Entry");
    BEGIN
      LastEntryNo := LastEntryNo + 1;

      with GLBudgetEntry2 do begin
        NewGLBudgetEntry.INIT;
        NewGLBudgetEntry."Entry No." := LastEntryNo;
        NewGLBudgetEntry."Budget Name" := "Budget Name";
        NewGLBudgetEntry."G/L Account No." := "G/L Account No.";
        NewGLBudgetEntry.Date := GETRANGEMIN(Date);
        NewGLBudgetEntry.Description := EntrdGLBudgetEntry.Description;
        NewGLBudgetEntry."User ID" := USERID;

        if RetainNo(FIELDNO("Business Unit Code")) then
          NewGLBudgetEntry."Business Unit Code" := "Business Unit Code";
        if RetainNo(FIELDNO("Global Dimension 1 Code")) then
          NewGLBudgetEntry."Global Dimension 1 Code" := "Global Dimension 1 Code";
        if RetainNo(FIELDNO("Global Dimension 2 Code")) then
          NewGLBudgetEntry."Global Dimension 2 Code" := "Global Dimension 2 Code";

        Window.UPDATE(1,NewGLBudgetEntry."Budget Name");
        Window.UPDATE(2,NewGLBudgetEntry."G/L Account No.");
        Window.UPDATE(3,NewGLBudgetEntry.Date);
        DateComprReg."No. of New Records" := DateComprReg."No. of New Records" + 1;
        Window.UPDATE(4,DateComprReg."No. of New Records");
      end;
    END;

    LOCAL PROCEDURE InsertNewEntry@23(VAR NewGLBudgetEntry@1000 : Record "G/L Budget Entry";DimEntryNo@1001 : Integer);
    VAR
      TempDimBuf@1002 : TEMPORARY Record "Dimension Buffer";
      TempDimSetEntry@1005 : TEMPORARY Record "Dimension Set Entry";
    BEGIN
      TempDimBuf.DELETEALL;
      DimBufMgt.GetDimensions(DimEntryNo,TempDimBuf);
      DimMgt.CopyDimBufToDimSetEntry(TempDimBuf,TempDimSetEntry);
      NewGLBudgetEntry."Dimension Set ID" := DimMgt.GetDimensionSetID(TempDimSetEntry);
      NewGLBudgetEntry.INSERT;
    END;

    LOCAL PROCEDURE InsertRegister@1();
    VAR
      DateComprReg2@1000 : Record "Date Compr. Register";
    BEGIN
      if RegExists then
        DateComprReg.MODIFY
      else begin
        DateComprReg2.LOCKTABLE;
        if DateComprReg2.FINDLAST then;
        DateComprReg."No." := DateComprReg2."No." + 1;
        DateComprReg.INSERT;
        RegExists := true;
      end;
    END;

    LOCAL PROCEDURE InitializeParameter@9();
    BEGIN
      if EntrdDateComprReg."Ending Date" = 0D then
        EntrdDateComprReg."Ending Date" := TODAY;

      with "G/L Budget Entry" do begin
        InsertField(FIELDNO("Business Unit Code"));
        InsertField(FIELDNO("Global Dimension 1 Code"));
        InsertField(FIELDNO("Global Dimension 2 Code"));
      end;

      RetainDimText := DimSelectionBuf.GetDimSelectionText(3,REPORT::"Date Compr. G/L Budget Entries",'');
    END;

    [External]
    PROCEDURE InitializeRequest@4(StartingDate@1009 : Date;EndingDate@1008 : Date;PeriodLength@1007 : Option;Description@1006 : Text[50];RetainBusinessUnitCode@1005 : Boolean;RetainDimensionText@1000 : Text[250]);
    BEGIN
      InitializeParameter;
      EntrdDateComprReg."Starting Date" := StartingDate;
      EntrdDateComprReg."Ending Date" := EndingDate;
      EntrdDateComprReg."Period Length" := PeriodLength;
      EntrdGLBudgetEntry.Description := Description;
      Retain[1] := RetainBusinessUnitCode;
      RetainDimText := RetainDimensionText;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

