OBJECT Codeunit 5623 FA MoveEntries
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "FA Ledger Entry"=rm,
                TableData "Maintenance Ledger Entry"=rm,
                TableData "Ins. Coverage Ledger Entry"=rm;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Only disposed fixed assets can be deleted.';
      Text001@1001 : TextConst 'ENU=You cannot delete a fixed asset that has ledger entries in a fiscal year that has not been closed yet.';
      Text002@1002 : TextConst 'ENU=The field %1 cannot be changed for a fixed asset with ledger entries.';
      Text003@1003 : TextConst 'ENU=The field %1 cannot be changed for a fixed asset with insurance coverage ledger entries.';
      FA@1004 : Record "Fixed Asset";
      FALedgEntry@1005 : Record "FA Ledger Entry";
      MaintenanceLedgEntry@1006 : Record "Maintenance Ledger Entry";
      InsCoverageLedgEntry@1007 : Record "Ins. Coverage Ledger Entry";
      AccountingPeriod@1008 : Record "Accounting Period";
      FiscalYearStartDate@1009 : Date;

    [External]
    PROCEDURE MoveFAEntries@1(FADeprBook@1000 : Record "FA Depreciation Book");
    BEGIN
      CLEARALL;
      FA.LOCKTABLE;
      FALedgEntry.LOCKTABLE;
      MaintenanceLedgEntry.LOCKTABLE;
      InsCoverageLedgEntry.LOCKTABLE;
      FA.GET(FADeprBook."FA No.");

      AccountingPeriod.SETCURRENTKEY(Closed);
      AccountingPeriod.SETRANGE(Closed,false);
      if AccountingPeriod.FINDFIRST then
        FiscalYearStartDate := AccountingPeriod."Starting Date"
      else
        FiscalYearStartDate := 0D;

      FALedgEntry.SETCURRENTKEY("FA No.","Depreciation Book Code","FA Posting Date");
      MaintenanceLedgEntry.SETCURRENTKEY("FA No.","Depreciation Book Code","FA Posting Date");

      FALedgEntry.SETRANGE("FA No.",FADeprBook."FA No.");
      MaintenanceLedgEntry.SETRANGE("FA No.",FADeprBook."FA No.");

      FALedgEntry.SETRANGE("Depreciation Book Code",FADeprBook."Depreciation Book Code");
      MaintenanceLedgEntry.SETRANGE("Depreciation Book Code",FADeprBook."Depreciation Book Code");

      if FA."Budgeted Asset" then
        DeleteNo(FADeprBook)
      else begin
        if FALedgEntry.FINDFIRST then
          if FADeprBook."Disposal Date" = 0D then
            ERROR(Text000);

        FALedgEntry.SETFILTER("FA Posting Date",'>=%1',FiscalYearStartDate);
        if FALedgEntry.FINDFIRST then
          CreateError(0);

        MaintenanceLedgEntry.SETFILTER("FA Posting Date",'>=%1',FiscalYearStartDate);
        if MaintenanceLedgEntry.FINDFIRST then
          CreateError(0);

        FALedgEntry.SETRANGE("FA Posting Date");
        MaintenanceLedgEntry.SETRANGE("FA Posting Date");

        FALedgEntry.SETCURRENTKEY(
          "FA No.","Depreciation Book Code","FA Posting Category","FA Posting Type","Posting Date");
        MaintenanceLedgEntry.SETCURRENTKEY("FA No.","Depreciation Book Code","Posting Date");

        FALedgEntry.SETFILTER("Posting Date",'>=%1',FiscalYearStartDate);
        if FALedgEntry.FINDFIRST then
          CreateError(0);
        MaintenanceLedgEntry.SETFILTER("Posting Date",'>=%1',FiscalYearStartDate);
        if MaintenanceLedgEntry.FINDFIRST then
          CreateError(0);

        FALedgEntry.SETRANGE("Posting Date");
        MaintenanceLedgEntry.SETRANGE("Posting Date");
        DeleteNo(FADeprBook);
      end;
    END;

    LOCAL PROCEDURE DeleteNo@8(VAR FADeprBook@1000 : Record "FA Depreciation Book");
    BEGIN
      FALedgEntry.MODIFYALL("FA No.",'');
      FALedgEntry.SETRANGE("FA No.");
      FALedgEntry.SETCURRENTKEY("Canceled from FA No.");
      FALedgEntry.SETRANGE("Canceled from FA No.",FADeprBook."FA No.");
      FALedgEntry.MODIFYALL("Canceled from FA No.",'');

      MaintenanceLedgEntry.MODIFYALL("FA No.",'');
      MoveFAInsuranceEntries(FADeprBook."FA No.");
    END;

    [External]
    PROCEDURE MoveInsuranceEntries@3(Insurance@1000 : Record Insurance);
    BEGIN
      with InsCoverageLedgEntry do begin
        RESET;
        LOCKTABLE;
        SETCURRENTKEY("Insurance No.");
        SETRANGE("Insurance No.",Insurance."No.");
        if FIND('-') then
          repeat
            "FA No." := '';
            "Insurance No." := '';
            MODIFY;
          until NEXT = 0;
      end;
    END;

    [External]
    PROCEDURE MoveFAInsuranceEntries@6(FANo@1000 : Code[20]);
    BEGIN
      with InsCoverageLedgEntry do begin
        SETCURRENTKEY("FA No.");
        SETRANGE("FA No.",FANo);
        if FIND('-') then
          repeat
            "Insurance No." := '';
            "FA No." := '';
            MODIFY;
          until NEXT = 0;
      end;
    END;

    [External]
    PROCEDURE ChangeBudget@5(FA@1000 : Record "Fixed Asset");
    BEGIN
      FALedgEntry.RESET;
      MaintenanceLedgEntry.RESET;
      InsCoverageLedgEntry.RESET;

      FALedgEntry.LOCKTABLE;
      MaintenanceLedgEntry.LOCKTABLE;
      InsCoverageLedgEntry.LOCKTABLE;

      FALedgEntry.SETCURRENTKEY("FA No.","Depreciation Book Code","FA Posting Date");
      MaintenanceLedgEntry.SETCURRENTKEY("FA No.","Depreciation Book Code","FA Posting Date");
      InsCoverageLedgEntry.SETCURRENTKEY("FA No.");

      FALedgEntry.SETRANGE("FA No.",FA."No.");
      MaintenanceLedgEntry.SETRANGE("FA No.",FA."No.");
      InsCoverageLedgEntry.SETRANGE("FA No.",FA."No.");

      if FALedgEntry.FINDFIRST then
        CreateError(1);
      if MaintenanceLedgEntry.FINDFIRST then
        CreateError(1);
      if InsCoverageLedgEntry.FIND('-') then
        CreateError(2);
    END;

    LOCAL PROCEDURE CreateError@2(CheckType@1000 : 'Delete,Budget,Insurance');
    VAR
      FA@1001 : Record "Fixed Asset";
    BEGIN
      case CheckType of
        CheckType::Delete:
          ERROR(
            Text001);
        CheckType::Budget:
          ERROR(
            Text002,
            FA.FIELDCAPTION("Budgeted Asset"));
        CheckType::Insurance:
          ERROR(
            Text003,
            FA.FIELDCAPTION("Budgeted Asset"));
      end;
    END;

    BEGIN
    END.
  }
}

