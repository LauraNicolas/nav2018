OBJECT Table 405 Change Log Entry
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Change Log Entry;
    LookupPageID="Change Log Entries";
    DrillDownPageID="Change Log Entries";
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;BigInteger    ;AutoIncrement=true;
                                                   CaptionML=ENU=Entry No. }
    { 2   ;   ;Date and Time       ;DateTime      ;CaptionML=ENU=Date and Time }
    { 3   ;   ;Time                ;Time          ;CaptionML=ENU=Time }
    { 4   ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit "User Management";
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=false;
                                                   CaptionML=ENU=User ID }
    { 5   ;   ;Table No.           ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE ("Object Type"=CONST(Table));
                                                   CaptionML=ENU=Table No. }
    { 6   ;   ;Table Caption       ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE ("Object Type"=CONST(Table),
                                                                                                                "Object ID"=FIELD("Table No.")));
                                                   CaptionML=ENU=Table Caption }
    { 7   ;   ;Field No.           ;Integer       ;TableRelation=Field."No." WHERE (TableNo=FIELD("Table No."));
                                                   CaptionML=ENU=Field No. }
    { 8   ;   ;Field Caption       ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD("Table No."),
                                                                                                   "No."=FIELD("Field No.")));
                                                   CaptionML=ENU=Field Caption }
    { 9   ;   ;Type of Change      ;Option        ;CaptionML=ENU=Type of Change;
                                                   OptionCaptionML=ENU=Insertion,Modification,Deletion;
                                                   OptionString=Insertion,Modification,Deletion }
    { 10  ;   ;Old Value           ;Text250       ;CaptionML=ENU=Old Value }
    { 11  ;   ;New Value           ;Text250       ;CaptionML=ENU=New Value }
    { 12  ;   ;Primary Key         ;Text250       ;CaptionML=ENU=Primary Key }
    { 13  ;   ;Primary Key Field 1 No.;Integer    ;TableRelation=Field."No." WHERE (TableNo=FIELD("Table No."));
                                                   CaptionML=ENU=Primary Key Field 1 No. }
    { 14  ;   ;Primary Key Field 1 Caption;Text80 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD("Table No."),
                                                                                                   "No."=FIELD("Primary Key Field 1 No.")));
                                                   CaptionML=ENU=Primary Key Field 1 Caption }
    { 15  ;   ;Primary Key Field 1 Value;Text50   ;CaptionML=ENU=Primary Key Field 1 Value }
    { 16  ;   ;Primary Key Field 2 No.;Integer    ;TableRelation=Field."No." WHERE (TableNo=FIELD("Table No."));
                                                   CaptionML=ENU=Primary Key Field 2 No. }
    { 17  ;   ;Primary Key Field 2 Caption;Text80 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD("Table No."),
                                                                                                   "No."=FIELD("Primary Key Field 2 No.")));
                                                   CaptionML=ENU=Primary Key Field 2 Caption }
    { 18  ;   ;Primary Key Field 2 Value;Text50   ;CaptionML=ENU=Primary Key Field 2 Value }
    { 19  ;   ;Primary Key Field 3 No.;Integer    ;TableRelation=Field."No." WHERE (TableNo=FIELD("Table No."));
                                                   CaptionML=ENU=Primary Key Field 3 No. }
    { 20  ;   ;Primary Key Field 3 Caption;Text80 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD("Table No."),
                                                                                                   "No."=FIELD("Primary Key Field 3 No.")));
                                                   CaptionML=ENU=Primary Key Field 3 Caption }
    { 21  ;   ;Primary Key Field 3 Value;Text50   ;CaptionML=ENU=Primary Key Field 3 Value }
    { 22  ;   ;Record ID           ;RecordID      ;CaptionML=ENU=Record ID }
  }
  KEYS
  {
    {    ;"Entry No."                             ;Clustered=true }
    {    ;"Table No.","Primary Key Field 1 Value"  }
    {    ;"Table No.","Date and Time"              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [Internal]
    PROCEDURE GetPrimaryKeyFriendlyName@1() : Text[250];
    VAR
      RecRef@1000 : RecordRef;
      FriendlyName@1004 : Text[250];
      p@1001 : Integer;
    BEGIN
      if "Primary Key" = '' then
        exit('');

      // Retain existing formatting of old data
      if (STRPOS("Primary Key",'CONST(') = 0) and (STRPOS("Primary Key",'0(') = 0) then
        exit("Primary Key");

      RecRef.OPEN("Table No.");
      RecRef.SETPOSITION("Primary Key");
      FriendlyName := RecRef.GETPOSITION(true);
      RecRef.CLOSE;

      FriendlyName := DELCHR(FriendlyName,'=','()');
      p := STRPOS(FriendlyName,'CONST');
      while p > 0 do begin
        FriendlyName := DELSTR(FriendlyName,p,5);
        p := STRPOS(FriendlyName,'CONST');
      end;
      exit(FriendlyName);
    END;

    [Internal]
    PROCEDURE GetLocalOldValue@3() : Text;
    BEGIN
      exit(GetLocalValue("Old Value"));
    END;

    [Internal]
    PROCEDURE GetLocalNewValue@4() : Text;
    BEGIN
      exit(GetLocalValue("New Value"));
    END;

    LOCAL PROCEDURE GetLocalValue@5(Value@1000 : Text) : Text;
    VAR
      Object@1005 : Record Object;
      ChangeLogManagement@1001 : Codeunit "Change Log Management";
      RecordRef@1002 : RecordRef;
      FieldRef@1003 : FieldRef;
      HasCultureNeutralValues@1004 : Boolean;
    BEGIN
      // The culture neutral storage format was added simultaneously with the Record ID field
      HasCultureNeutralValues := FORMAT("Record ID") <> '';
      Object.SETRANGE(Type,Object.Type::Table);
      Object.SETRANGE(ID,"Table No.");

      if not Object.ISEMPTY and (Value <> '') and HasCultureNeutralValues then begin
        RecordRef.OPEN("Table No.");
        if RecordRef.FIELDEXIST("Field No.") then begin
          FieldRef := RecordRef.FIELD("Field No.");
          if ChangeLogManagement.EvaluateTextToFieldRef(Value,FieldRef) then
            exit(FORMAT(FieldRef.VALUE,0,1));
        end;
      end;

      exit(Value);
    END;

    BEGIN
    END.
  }
}

