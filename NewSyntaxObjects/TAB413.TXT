OBJECT Table 413 IC Partner
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "G/L Entry"=rm;
    OnDelete=VAR
               GLEntry@1007 : Record "G/L Entry";
               GLSetup@1006 : Record "General Ledger Setup";
               AccountingPeriod@1004 : Record "Accounting Period";
               Cust@1003 : Record Customer;
               Vend@1002 : Record Vendor;
               ICInbox@1001 : Record "IC Inbox Transaction";
               ICOutbox@1000 : Record "IC Outbox Transaction";
             BEGIN
               GLEntry.SETRANGE("IC Partner Code",Code);
               AccountingPeriod.SETRANGE(Closed,false);
               if AccountingPeriod.FINDFIRST then
                 GLEntry.SETFILTER("Posting Date",'>=%1',AccountingPeriod."Starting Date");
               if not GLEntry.ISEMPTY then
                 ERROR(Text000,xRec.Code);

               GLSetup.GET;
               if GLSetup."Allow G/L Acc. Deletion Before" <> 0D then begin
                 GLEntry.SETFILTER("Posting Date",'>=%1',GLSetup."Allow G/L Acc. Deletion Before");
                 if not GLEntry.ISEMPTY then
                   ERROR(Text001,Code,GLSetup."Allow G/L Acc. Deletion Before");
               end;

               if "Customer No." <> '' then
                 if Cust.GET("Customer No.") then
                   ERROR(Text002,Code,Cust.TABLECAPTION,Cust."No.");

               if "Vendor No." <> '' then
                 if Vend.GET("Customer No.") then
                   ERROR(Text002,Code,Vend.TABLECAPTION,Vend."No.");

               ICInbox.SETRANGE("IC Partner Code",Code);
               if not ICInbox.ISEMPTY then
                 ERROR(Text003,Code,ICInbox.TABLECAPTION);

               ICOutbox.SETRANGE("IC Partner Code",Code);
               if not ICOutbox.ISEMPTY then
                 ERROR(Text003,Code,ICOutbox.TABLECAPTION);

               GLEntry.RESET;
               GLEntry.SETCURRENTKEY("IC Partner Code");
               GLEntry.SETRANGE("IC Partner Code",Code);
               GLEntry.MODIFYALL("IC Partner Code",'');

               CommentLine.SETRANGE("Table Name",CommentLine."Table Name"::"IC Partner");
               CommentLine.SETRANGE("No.",Code);
               CommentLine.DELETEALL;
             END;

    CaptionML=ENU=IC Partner;
    LookupPageID="IC Partner List";
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=ENU=Code;
                                                   NotBlank=true }
    { 2   ;   ;Name                ;Text50        ;CaptionML=ENU=Name }
    { 3   ;   ;Currency Code       ;Code10        ;TableRelation=Currency.Code;
                                                   CaptionML=ENU=Currency Code }
    { 4   ;   ;Inbox Type          ;Option        ;InitValue=Database;
                                                   OnValidate=VAR
                                                                Cust@1000 : Record Customer;
                                                                Vend@1001 : Record Vendor;
                                                              BEGIN
                                                                if "Inbox Type" <> xRec."Inbox Type" then
                                                                  "Inbox Details" := '';
                                                                if "Inbox Type" = "Inbox Type"::Email then begin
                                                                  if "Customer No." <> '' then begin
                                                                    if Cust.GET("Customer No.") then
                                                                      "Inbox Details" := Cust."E-Mail";
                                                                  end else
                                                                    if "Vendor No." <> '' then
                                                                      if Vend.GET("Vendor No.") then
                                                                        "Inbox Details" := Vend."E-Mail";
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Inbox Type;
                                                   OptionCaptionML=ENU=File Location,Database,Email,No IC Transfer;
                                                   OptionString="File Location",Database,Email,"No IC Transfer" }
    { 5   ;   ;Inbox Details       ;Text250       ;TableRelation=IF ("Inbox Type"=CONST(Database)) Company.Name;
                                                   OnLookup=VAR
                                                              Company@1000 : Record Company;
                                                              FileMgt@1006 : Codeunit "File Management";
                                                              Companies@1001 : Page Companies;
                                                              FileName@1004 : Text;
                                                              FileName2@1005 : Text;
                                                              Path@1003 : Text;
                                                            BEGIN
                                                              case "Inbox Type" of
                                                                "Inbox Type"::Database:
                                                                  begin
                                                                    Company.SETFILTER(Name,'<>%1',COMPANYNAME);
                                                                    Companies.SETTABLEVIEW(Company);
                                                                    Companies.LOOKUPMODE := true;
                                                                    if Companies.RUNMODAL = ACTION::LookupOK then begin
                                                                      Companies.GETRECORD(Company);
                                                                      "Inbox Details" := Company.Name;
                                                                    end;
                                                                  end;
                                                                "Inbox Type"::"File Location":
                                                                  begin
                                                                    if "Inbox Details" = '' then
                                                                      FileName := STRSUBSTNO('%1.xml',Code)
                                                                    else
                                                                      FileName := "Inbox Details" + STRSUBSTNO('\%1.xml',Code);

                                                                    FileName2 := FileMgt.SaveFileDialog(Text005,FileName,'');
                                                                    if FileName <> FileName2 then begin
                                                                      Path := FileMgt.GetDirectoryName(FileName2);
                                                                      if Path <> '' then
                                                                        "Inbox Details" := COPYSTR(Path,1,250);
                                                                    end;
                                                                  end;
                                                              end;
                                                            END;

                                                   CaptionML=ENU=Inbox Details }
    { 6   ;   ;Receivables Account ;Code20        ;TableRelation="G/L Account"."No.";
                                                   CaptionML=ENU=Receivables Account }
    { 7   ;   ;Payables Account    ;Code20        ;TableRelation="G/L Account"."No.";
                                                   CaptionML=ENU=Payables Account }
    { 10  ;   ;Blocked             ;Boolean       ;CaptionML=ENU=Blocked }
    { 11  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE ("Table Name"=CONST("IC Partner"),
                                                                                           "No."=FIELD(Code)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=false }
    { 12  ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Customer No. }
    { 13  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Vendor No. }
    { 14  ;   ;Outbound Sales Item No. Type;Option;CaptionML=ENU=Outbound Sales Item No. Type;
                                                   OptionCaptionML=ENU=Internal No.,Common Item No.,Cross Reference;
                                                   OptionString="Internal No.","Common Item No.","Cross Reference" }
    { 15  ;   ;Outbound Purch. Item No. Type;Option;
                                                   CaptionML=ENU=Outbound Purch. Item No. Type;
                                                   OptionCaptionML=ENU=Internal No.,Common Item No.,Cross Reference,Vendor Item No.;
                                                   OptionString="Internal No.","Common Item No.","Cross Reference","Vendor Item No." }
    { 16  ;   ;Cost Distribution in LCY;Boolean   ;CaptionML=ENU=Cost Distribution in LCY }
    { 17  ;   ;Auto. Accept Transactions;Boolean  ;CaptionML=ENU=Auto. Accept Transactions }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CommentLine@1001 : Record "Comment Line";
      Text000@1005 : TextConst 'ENU=You cannot delete IC Partner %1 because it has ledger entries in a fiscal year that has not been closed yet.';
      Text001@1004 : TextConst 'ENU=You cannot delete IC Partner %1 because it has ledger entries after %2.';
      Text002@1003 : TextConst 'ENU=You cannot delete IC Partner %1 because it is used for %2 %3';
      Text003@1002 : TextConst 'ENU=You cannot delete IC Partner %1 because it is used in %2';
      Text004@1006 : TextConst 'ENU=%1 %2 is linked to a blocked IC Partner.';
      Text005@1000 : TextConst 'ENU=File Location for IC files';

    [External]
    PROCEDURE CheckICPartner@1();
    BEGIN
      TESTFIELD(Blocked,false);
    END;

    [External]
    PROCEDURE CheckICPartnerIndirect@2(AccountType@1000 : Text[250];AccountNo@1001 : Code[20]);
    BEGIN
      if Blocked then
        ERROR(Text004,AccountType,AccountNo);
    END;

    PROCEDURE PropagateCustomerICPartner@25(PreviousCustomerNo@1000 : Code[20];NewCustomerNo@1001 : Code[20];ICPartnerCode@1002 : Code[20]);
    VAR
      Customer@1003 : Record Customer;
    BEGIN
      if (PreviousCustomerNo <> NewCustomerNo) and Customer.GET(PreviousCustomerNo) then begin
        Customer.VALIDATE("IC Partner Code",'');
        Customer.MODIFY;
      end;

      if Customer.GET(NewCustomerNo) then begin
        Customer.VALIDATE("IC Partner Code",ICPartnerCode);
        Customer.MODIFY;
      end;
    END;

    PROCEDURE PropagateVendorICPartner@26(PreviousVendorNo@1002 : Code[20];NewVendorNo@1001 : Code[20];ICPartnerCode@1000 : Code[20]);
    VAR
      Vendor@1003 : Record Vendor;
    BEGIN
      if (PreviousVendorNo <> NewVendorNo) and Vendor.GET(PreviousVendorNo) then begin
        Vendor.VALIDATE("IC Partner Code",'');
        Vendor.MODIFY;
      end;

      if Vendor.GET(NewVendorNo) then begin
        Vendor.VALIDATE("IC Partner Code",ICPartnerCode);
        Vendor.MODIFY;
      end;
    END;

    BEGIN
    END.
  }
}

