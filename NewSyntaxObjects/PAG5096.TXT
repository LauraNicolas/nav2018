OBJECT Page 5096 Task List
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Task List;
    SourceTable="To-do";
    DataCaptionExpr=Caption;
    PageType=List;
    CardPageID="Task Card";
    OnFindRecord=BEGIN
                   RecordsFound := FIND(Which);
                   exit(RecordsFound);
                 END;

    OnAfterGetRecord=BEGIN
                       ContactNoOnFormat(FORMAT("Contact No."));
                     END;

    OnAfterGetCurrRecord=BEGIN
                           CALCFIELDS("Contact Name","Contact Company Name");
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 31      ;1   ;ActionGroup;
                      Name=Task;
                      CaptionML=ENU=Task;
                      Image=Task }
      { 34      ;2   ;Action    ;
                      Name=Co&mment;
                      CaptionML=ENU=Co&mment;
                      ToolTipML=ENU=View or add comments.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Rlshp. Mgt. Comment Sheet";
                      RunPageLink="Table Name"=CONST("To-do"),
                                  "No."=FIELD("Organizer To-do No."),
                                  "Sub No."=CONST(0);
                      Image=ViewComments }
      { 35      ;2   ;Action    ;
                      Name=Interaction Log E&ntries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Interaction Log E&ntries;
                      ToolTipML=ENU=View interaction log entries for the task.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Interaction Log Entries";
                      RunPageView=SORTING("To-do No.");
                      RunPageLink="To-do No."=FIELD("Organizer To-do No.");
                      Image=InteractionLog }
      { 50      ;2   ;Action    ;
                      Name=Postponed &Interactions;
                      CaptionML=ENU=Postponed &Interactions;
                      ToolTipML=ENU=View postponed interactions for the task.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Postponed Interactions";
                      RunPageView=SORTING("To-do No.");
                      RunPageLink="To-do No."=FIELD("Organizer To-do No.");
                      Image=PostponedInteractions }
      { 52      ;2   ;Action    ;
                      Name=A&ttendee Scheduling;
                      CaptionML=ENU=A&ttendee Scheduling;
                      ToolTipML=ENU=View the status of a scheduled meeting.;
                      ApplicationArea=#Advanced;
                      Image=ProfileCalender;
                      OnAction=VAR
                                 Task@1001 : Record "To-do";
                               BEGIN
                                 Task.GET("Organizer To-do No.");
                                 PAGE.RUNMODAL(PAGE::"Attendee Scheduling",Task);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 32      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 46      ;2   ;Action    ;
                      Name=Assign Activities;
                      CaptionML=ENU=Assign Activities;
                      ToolTipML=ENU=View all the tasks that have been assigned to salespeople and teams. A task can be organizing meetings, making phone calls, and so on.;
                      ApplicationArea=#RelationshipMgmt;
                      Image=Allocate;
                      OnAction=VAR
                                 TempTask@1001 : TEMPORARY Record "To-do";
                               BEGIN
                                 TempTask.AssignActivityFromTask(Rec);
                               END;
                                }
      { 42      ;2   ;Action    ;
                      Name=MakePhoneCall;
                      CaptionML=ENU=Make &Phone Call;
                      ToolTipML=ENU=Call the selected contact.;
                      ApplicationArea=#Advanced;
                      Image=Calls;
                      OnAction=VAR
                                 TempSegmentLine@1001 : TEMPORARY Record "Segment Line";
                                 ContactNo@1002 : Code[10];
                                 ContCompanyNo@1003 : Code[10];
                               BEGIN
                                 if "Contact No." <> '' then
                                   ContactNo := "Contact No."
                                 else
                                   ContactNo := GETFILTER("Contact No.");
                                 if "Contact Company No." <> '' then
                                   ContCompanyNo := "Contact Company No."
                                 else
                                   ContCompanyNo := GETFILTER("Contact Company No.");
                                 if ContactNo = '' then begin
                                   if (Type = Type::Meeting) and ("Team Code" = '') then
                                     ERROR(Text004);
                                   ERROR(Text005);
                                 end;
                                 TempSegmentLine."To-do No." := "No.";
                                 TempSegmentLine."Contact No." := ContactNo;
                                 TempSegmentLine."Contact Company No." := ContCompanyNo;
                                 TempSegmentLine."Campaign No." := "Campaign No.";
                                 TempSegmentLine."Salesperson Code" := "Salesperson Code";
                                 TempSegmentLine.CreatePhoneCall;
                               END;
                                }
      { 33      ;1   ;Action    ;
                      Name=&Create Task;
                      CaptionML=ENU=&Create Task;
                      ToolTipML=ENU=Create a new task.;
                      ApplicationArea=#RelationshipMgmt;
                      Promoted=true;
                      Image=NewToDo;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TempTask@1001 : TEMPORARY Record "To-do";
                               BEGIN
                                 TempTask.CreateTaskFromTask(Rec);
                               END;
                                }
      { 1034    ;1   ;Action    ;
                      Name=Edit Organizer Task;
                      CaptionML=ENU=Edit Organizer Task;
                      ToolTipML=ENU=View general information about the task such as type, description, priority and status of the task, as well as the salesperson or team the task is assigned to.;
                      ApplicationArea=#RelationshipMgmt;
                      RunObject=Page "Task Card";
                      RunPageLink="No."=FIELD("Organizer To-do No.");
                      Promoted=false;
                      Image=Edit }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                Editable=FALSE;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Closed;
                ToolTipML=ENU=Specifies that the task is closed.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Closed;
                ImplicitType=Boolean }

    { 4   ;2   ;Field     ;
                Name=Date;
                ToolTipML=ENU=Specifies the date when the task should be started. There are certain rules for how dates should be entered found in How to: Enter Dates and Times.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Date;
                ImplicitType=Date }

    { 6   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the type of the task.;
                OptionCaptionML=ENU=" ,,Phone Call";
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Type;
                ImplicitType=Option }

    { 8   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the description of the task.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 10  ;2   ;Field     ;
                Name=Priority;
                ToolTipML=ENU=Specifies the priority of the task.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Priority;
                ImplicitType=Option }

    { 12  ;2   ;Field     ;
                Name=Status;
                ToolTipML=ENU=Specifies the status of the task. There are five options: Not Started, In Progress, Completed, Waiting and Postponed.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Status;
                ImplicitType=Option }

    { 45  ;2   ;Field     ;
                Name=Organizer To-do No.;
                ToolTipML=ENU=Specifies the number of the organizer's task. The field is not editable.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Organizer To-do No.";
                ImplicitType=Code20 }

    { 16  ;2   ;Field     ;
                Name=Date Closed;
                ToolTipML=ENU=Specifies the date the task was closed.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Date Closed";
                ImplicitType=Date }

    { 43  ;2   ;Field     ;
                Name=Canceled;
                ToolTipML=ENU=Specifies that the task has been canceled.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Canceled;
                ImplicitType=Boolean }

    { 18  ;2   ;Field     ;
                Name=Comment;
                ToolTipML=ENU=Specifies that a comment has been assigned to the task.;
                ApplicationArea=#Advanced;
                SourceExpr=Comment;
                ImplicitType=Boolean }

    { 20  ;2   ;Field     ;
                Name=Contact No.;
                ToolTipML=ENU=Specifies the number of the contact linked to the task.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Contact No.";
                OnLookup=VAR
                           Task@1000 : Record "To-do";
                           Cont@1004 : Record Contact;
                         BEGIN
                           if Type = Type::Meeting then begin
                             Task.SETRANGE("No.","No.");
                             PAGE.RUNMODAL(PAGE::"Attendee Scheduling",Task);
                           end else begin
                             if Cont.GET("Contact No.") then;
                             if PAGE.RUNMODAL(0,Cont) = ACTION::LookupOK then;
                           end;
                         END;

                ImplicitType=Code20 }

    { 47  ;2   ;Field     ;
                Name=Contact Company No.;
                ToolTipML=ENU=Specifies the contact number of the company for which the contact involved in the task works.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Contact Company No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 24  ;2   ;Field     ;
                Name=Salesperson Code;
                ToolTipML=ENU=Specifies the code of the salesperson assigned to the task.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Salesperson Code";
                ImplicitType=Code20 }

    { 22  ;2   ;Field     ;
                Name=Team Code;
                ToolTipML=ENU=Specifies the code of the team to which the task is assigned.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Team Code";
                ImplicitType=Code10 }

    { 26  ;2   ;Field     ;
                Name=Campaign No.;
                ToolTipML=ENU=Specifies the number of the campaign to which the task is linked.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Campaign No.";
                ImplicitType=Code20 }

    { 36  ;2   ;Field     ;
                Name=Opportunity No.;
                ToolTipML=ENU=Specifies the number of the opportunity to which the task is linked.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Opportunity No.";
                ImplicitType=Code20 }

    { 14  ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the task.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="No.";
                ImplicitType=Code20 }

    { 55  ;1   ;Group     ;
                Name=Group55 }

    { 56  ;2   ;Field     ;
                Name=Contact Name;
                DrillDown=false;
                CaptionML=ENU=Contact Name;
                ToolTipML=ENU=Specifies the name of the contact to which this task has been assigned.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Contact Name";
                ImplicitType=Text50 }

    { 58  ;2   ;Field     ;
                Name=Contact Company Name;
                DrillDown=false;
                ToolTipML=ENU=Specifies the name of the company for which the contact involved in the task works.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Contact Company Name";
                ImplicitType=Text50 }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Cont@1000 : Record Contact;
      Contact1@1009 : Record Contact;
      Salesperson@1001 : Record "Salesperson/Purchaser";
      Campaign@1002 : Record Campaign;
      Team@1003 : Record Team;
      Opp@1004 : Record Opportunity;
      SegHeader@1005 : Record "Segment Header";
      RecordsFound@1008 : Boolean;
      Text000@1007 : TextConst 'ENU=(Multiple)';
      Text001@1006 : TextConst 'ENU=untitled';
      Text004@1010 : TextConst 'ENU=The Make Phone Call function for this task is available only on the Attendee Scheduling window.';
      Text005@1011 : TextConst 'ENU=You must select a task with a contact assigned to it before you can use the Make Phone Call function.';

    LOCAL PROCEDURE Caption@1() : Text[260];
    VAR
      CaptionStr@1000 : Text[260];
    BEGIN
      if Cont.GET(GETFILTER("Contact Company No.")) then begin
        Contact1.GET(GETFILTER("Contact Company No."));
        if Contact1."No." <> Cont."No." then
          CaptionStr := COPYSTR(Cont."No." + ' ' + Cont.Name,1,MAXSTRLEN(CaptionStr));
      end;
      if Cont.GET(GETFILTER("Contact No.")) then
        CaptionStr := COPYSTR(CaptionStr + ' ' + Cont."No." + ' ' + Cont.Name,1,MAXSTRLEN(CaptionStr));
      if Salesperson.GET(GETFILTER("Salesperson Code")) then
        CaptionStr := COPYSTR(CaptionStr + ' ' + Salesperson.Code + ' ' + Salesperson.Name,1,MAXSTRLEN(CaptionStr));
      if Team.GET(GETFILTER("Team Code")) then
        CaptionStr := COPYSTR(CaptionStr + ' ' + Team.Code + ' ' + Team.Name,1,MAXSTRLEN(CaptionStr));
      if Campaign.GET(GETFILTER("Campaign No.")) then
        CaptionStr := COPYSTR(CaptionStr + ' ' + Campaign."No." + ' ' + Campaign.Description,1,MAXSTRLEN(CaptionStr));
      if Opp.GET(GETFILTER("Opportunity No.")) then
        CaptionStr := COPYSTR(CaptionStr + ' ' + Opp."No." + ' ' + Opp.Description,1,MAXSTRLEN(CaptionStr));
      if SegHeader.GET(GETFILTER("Segment No.")) then
        CaptionStr := COPYSTR(CaptionStr + ' ' + SegHeader."No." + ' ' + SegHeader.Description,1,MAXSTRLEN(CaptionStr));
      if CaptionStr = '' then
        CaptionStr := Text001;

      exit(CaptionStr);
    END;

    LOCAL PROCEDURE ContactNoOnFormat@19025756(Text@19019593 : Text[1024]);
    BEGIN
      if Type = Type::Meeting then
        Text := Text000;
    END;

    BEGIN
    END.
  }
}

