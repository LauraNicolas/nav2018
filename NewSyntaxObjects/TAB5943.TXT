OBJECT Table 5943 Troubleshooting Header
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ServMgtSetup.GET ;
               if "No." = '' then begin
                 ServMgtSetup.TESTFIELD("Troubleshooting Nos.");
                 NoSeriesMgt.InitSeries(ServMgtSetup."Troubleshooting Nos.",xRec."No. Series",0D,"No.","No. Series");
               end;
             END;

    CaptionML=ENU=Troubleshooting Header;
    LookupPageID="Troubleshooting List";
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                if "No." <> xRec."No." then begin
                                                                  ServMgtSetup.GET;
                                                                  NoSeriesMgt.TestManual(ServMgtSetup."Troubleshooting Nos.");
                                                                  "No. Series" := '';
                                                                end;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 2   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 3   ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=No %1 was found.';
      Text001@1001 : TextConst 'ENU=No %1 was found for %2 %3.';
      ServMgtSetup@1002 : Record "Service Mgt. Setup";
      TblshtgHeader@1003 : Record "Troubleshooting Header";
      TblshtgHeader2@1008 : Record "Troubleshooting Header";
      TblshtgSetup@1004 : Record "Troubleshooting Setup";
      NoSeriesMgt@1005 : Codeunit NoSeriesManagement;
      Tblshtg@1006 : Page Troubleshooting;

    [External]
    PROCEDURE AssistEdit@1(OldTblshtHeader@1000 : Record "Troubleshooting Header") : Boolean;
    BEGIN
      with TblshtgHeader do begin
        TblshtgHeader := Rec;
        ServMgtSetup.GET;
        ServMgtSetup.TESTFIELD("Troubleshooting Nos.");
        if NoSeriesMgt.SelectSeries(ServMgtSetup."Troubleshooting Nos.",OldTblshtHeader."No. Series","No. Series") then begin
          NoSeriesMgt.SetSeries("No.");
          Rec := TblshtgHeader;
          exit(true);
        end;
      end;
    END;

    [External]
    PROCEDURE ShowForServItemLine@8(ServItemLine@1000 : Record "Service Item Line");
    VAR
      TblshtFound@1001 : Boolean;
    BEGIN
      TblshtgSetup.RESET;
      TblshtgSetup.SETRANGE(Type,TblshtgSetup.Type::"Service Item");
      TblshtgSetup.SETRANGE("No.",ServItemLine."Service Item No.");
      TblshtFound := TblshtgSetup.FINDFIRST;

      if not TblshtFound then begin
        TblshtgSetup.SETRANGE(Type,TblshtgSetup.Type::Item);
        TblshtgSetup.SETRANGE("No.",ServItemLine."Item No.");
        TblshtFound := TblshtgSetup.FINDFIRST;
      end;
      if not TblshtFound then begin
        TblshtgSetup.SETRANGE(Type,TblshtgSetup.Type::"Service Item Group");
        TblshtgSetup.SETRANGE("No.",ServItemLine."Service Item Group Code");
        TblshtFound := TblshtgSetup.FINDFIRST;
      end;
      if TblshtFound then
        RunTroubleshooting
      else
        MESSAGE(
          Text000,TblshtgSetup.TABLECAPTION);
    END;

    [External]
    PROCEDURE ShowForServItem@3(ServItem@1000 : Record "Service Item");
    VAR
      TblshtFound@1001 : Boolean;
    BEGIN
      TblshtgSetup.RESET;
      TblshtgSetup.SETRANGE(Type,TblshtgSetup.Type::"Service Item");
      TblshtgSetup.SETRANGE("No.",ServItem."No.");
      TblshtFound := TblshtgSetup.FINDFIRST;

      if not TblshtFound then begin
        TblshtgSetup.RESET;
        TblshtgSetup.SETRANGE(Type,TblshtgSetup.Type::Item);
        TblshtgSetup.SETRANGE("No.",ServItem."Item No.");
        TblshtFound := TblshtgSetup.FINDFIRST;
      end;
      if not TblshtFound then begin
        TblshtgSetup.SETRANGE(Type,TblshtgSetup.Type::"Service Item Group");
        TblshtgSetup.SETRANGE("No.",ServItem."Service Item Group Code");
        TblshtFound := TblshtgSetup.FINDFIRST;
      end;
      if TblshtFound then
        RunTroubleshooting
      else
        MESSAGE(Text001,TblshtgSetup.TABLECAPTION,ServItem.TABLECAPTION,ServItem."No.");
    END;

    [External]
    PROCEDURE ShowForItem@4(Item@1000 : Record Item);
    VAR
      TblshtFound@1001 : Boolean;
    BEGIN
      TblshtgSetup.RESET;
      TblshtgSetup.SETRANGE(Type,TblshtgSetup.Type::Item);
      TblshtgSetup.SETRANGE("No.",Item."No.");
      TblshtFound := TblshtgSetup.FINDFIRST;
      if not TblshtFound then begin
        TblshtgSetup.SETRANGE(Type,TblshtgSetup.Type::"Service Item Group");
        TblshtgSetup.SETRANGE("No.",Item."Service Item Group");
        TblshtFound := TblshtgSetup.FINDFIRST;
      end;
      if TblshtFound then
        RunTroubleshooting
      else
        MESSAGE(Text001,TblshtgSetup.TABLECAPTION,Item.TABLECAPTION,Item."No.");
    END;

    LOCAL PROCEDURE MarkTroubleShtgHeader@2(VAR TblshtgSetup2@1001 : Record "Troubleshooting Setup");
    BEGIN
      TblshtgSetup2.FIND('-');
      repeat
        TblshtgHeader2.GET(TblshtgSetup2."Troubleshooting No.");
        TblshtgHeader2.MARK(true);
      until TblshtgSetup2.NEXT = 0;
    END;

    LOCAL PROCEDURE RunTroubleshooting@5();
    BEGIN
      TblshtgHeader.GET(TblshtgSetup."Troubleshooting No.");
      MarkTroubleShtgHeader(TblshtgSetup);
      TblshtgHeader2.MARKEDONLY(true);
      CLEAR(Tblshtg);
      Tblshtg.SetCaption(FORMAT(TblshtgSetup.Type),TblshtgSetup."No.");
      Tblshtg.SETRECORD(TblshtgHeader);
      Tblshtg.SETTABLEVIEW(TblshtgHeader2);
      Tblshtg.EDITABLE := false;
      Tblshtg.RUN;
      TblshtgHeader2.RESET;
    END;

    BEGIN
    END.
  }
}

