OBJECT Table 7318 Posted Whse. Receipt Header
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               WhseSetup.GET;
               if "No." = '' then begin
                 WhseSetup.TESTFIELD("Whse. Receipt Nos.");
                 NoSeriesMgt.InitSeries(
                   WhseSetup."Posted Whse. Receipt Nos.",xRec."No. Series","Posting Date","No.","No. Series");
               end;
             END;

    OnDelete=BEGIN
               DeleteRelatedLines;
             END;

    CaptionML=ENU=Posted Whse. Receipt Header;
    LookupPageID="Posted Whse. Receipt List";
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=ENU=No. }
    { 2   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE ("Use As In-Transit"=CONST(false));
                                                   CaptionML=ENU=Location Code }
    { 3   ;   ;Assigned User ID    ;Code50        ;TableRelation="Warehouse Employee" WHERE ("Location Code"=FIELD("Location Code"));
                                                   CaptionML=ENU=Assigned User ID;
                                                   Editable=false }
    { 4   ;   ;Assignment Date     ;Date          ;CaptionML=ENU=Assignment Date;
                                                   Editable=false }
    { 5   ;   ;Assignment Time     ;Time          ;CaptionML=ENU=Assignment Time;
                                                   Editable=false }
    { 7   ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series }
    { 8   ;   ;Zone Code           ;Code10        ;TableRelation=Zone.Code WHERE ("Location Code"=FIELD("Location Code"));
                                                   CaptionML=ENU=Zone Code }
    { 9   ;   ;Bin Code            ;Code20        ;TableRelation=IF ("Zone Code"=FILTER('')) Bin.Code WHERE ("Location Code"=FIELD("Location Code"))
                                                                 ELSE IF ("Zone Code"=FILTER(<>'')) Bin.Code WHERE ("Location Code"=FIELD("Location Code"),
                                                                                                                    "Zone Code"=FIELD("Zone Code"));
                                                   CaptionML=ENU=Bin Code }
    { 11  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Warehouse Comment Line" WHERE ("Table Name"=CONST("Posted Whse. Receipt"),
                                                                                                     Type=CONST(" "),
                                                                                                     "No."=FIELD("No.")));
                                                   CaptionML=ENU=Comment;
                                                   Editable=false }
    { 12  ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 13  ;   ;Vendor Shipment No. ;Code35        ;CaptionML=ENU=Vendor Shipment No. }
    { 14  ;   ;Whse. Receipt No.   ;Code20        ;CaptionML=ENU=Whse. Receipt No. }
    { 15  ;   ;Document Status     ;Option        ;CaptionML=ENU=Document Status;
                                                   OptionCaptionML=ENU=" ,Partially Put Away,Completely Put Away";
                                                   OptionString=" ","Partially Put Away","Completely Put Away";
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
    {    ;"Location Code"                          }
    {    ;"Whse. Receipt No."                      }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;"No.","Location Code","Posting Date","Document Status" }
  }
  CODE
  {
    VAR
      WhseSetup@1001 : Record "Warehouse Setup";
      NoSeriesMgt@1000 : Codeunit NoSeriesManagement;
      Text000@1002 : TextConst 'ENU=You must first set up user %1 as a warehouse employee.';

    [External]
    PROCEDURE GetHeaderStatus@15(LineNo@1003 : Integer) : Integer;
    VAR
      PostedWhseRcptLine2@1001 : Record "Posted Whse. Receipt Line";
      OrderStatus@1002 : '" ","Partially Put Away","Completely Put Away"';
      First@1000 : Boolean;
    BEGIN
      First := true;
      PostedWhseRcptLine2.SETRANGE("No.","No.");
      with PostedWhseRcptLine2 do begin
        if LineNo <> 0 then
          SETFILTER("Line No.",'<>%1',LineNo);
        if FIND('-') then
          repeat
            case OrderStatus of
              OrderStatus::" ":
                if (Status = Status::"Completely Put Away") and
                   (not First)
                then
                  OrderStatus := OrderStatus::"Partially Put Away"
                else
                  OrderStatus := Status;
              OrderStatus::"Completely Put Away":
                if Status <> Status::"Completely Put Away" then
                  OrderStatus := OrderStatus::"Partially Put Away";
            end;
            First := false;
          until NEXT = 0;
      end;
      exit(OrderStatus);
    END;

    LOCAL PROCEDURE DeleteRelatedLines@2();
    VAR
      Location@1004 : Record Location;
      WhsePutAwayRequest@1005 : Record "Whse. Put-away Request";
      PostedWhseRcptLine@1002 : Record "Posted Whse. Receipt Line";
      WhseCommentLine@1003 : Record "Warehouse Comment Line";
    BEGIN
      if Location.RequirePutaway("Location Code") then
        TESTFIELD("Document Status","Document Status"::"Completely Put Away");

      WhsePutAwayRequest.SETRANGE("Document Type",WhsePutAwayRequest."Document Type"::Receipt);
      WhsePutAwayRequest.SETRANGE("Document No.","No.");
      WhsePutAwayRequest.DELETEALL;

      PostedWhseRcptLine.SETRANGE("No.","No.");
      PostedWhseRcptLine.DELETEALL;

      WhseCommentLine.SETRANGE("Table Name",WhseCommentLine."Table Name"::"Posted Whse. Receipt");
      WhseCommentLine.SETRANGE(Type,WhseCommentLine.Type::" ");
      WhseCommentLine.SETRANGE("No.","No.");
      WhseCommentLine.DELETEALL;
    END;

    [External]
    PROCEDURE LookupPostedWhseRcptHeader@5(VAR PostedWhseRcptHeader@1001 : Record "Posted Whse. Receipt Header");
    BEGIN
      COMMIT;
      if USERID <> '' then begin
        PostedWhseRcptHeader.FILTERGROUP := 2;
        PostedWhseRcptHeader.SETRANGE("Location Code");
      end;
      if PAGE.RUNMODAL(0,PostedWhseRcptHeader) = ACTION::LookupOK then;
      if USERID <> '' then begin
        PostedWhseRcptHeader.FILTERGROUP := 2;
        PostedWhseRcptHeader.SETRANGE("Location Code",PostedWhseRcptHeader."Location Code");
        PostedWhseRcptHeader.FILTERGROUP := 0;
      end;
    END;

    [External]
    PROCEDURE FindFirstAllowedRec@1(Which@1000 : Text[1024]) : Boolean;
    VAR
      PostedWhseRcptHeader@1001 : Record "Posted Whse. Receipt Header";
      WMSManagement@1002 : Codeunit "WMS Management";
    BEGIN
      if FIND(Which) then begin
        PostedWhseRcptHeader := Rec;
        while true do begin
          if WMSManagement.LocationIsAllowedToView("Location Code") then
            exit(true);

          if NEXT(1) = 0 then begin
            Rec := PostedWhseRcptHeader;
            if FIND(Which) then
              while true do begin
                if WMSManagement.LocationIsAllowedToView("Location Code") then
                  exit(true);

                if NEXT(-1) = 0 then
                  exit(false);
              end;
          end;
        end;
      end;
      exit(false);
    END;

    [External]
    PROCEDURE FindNextAllowedRec@3(Steps@1000 : Integer) : Integer;
    VAR
      PostedWhseRcptHeader@1002 : Record "Posted Whse. Receipt Header";
      WMSManagement@1001 : Codeunit "WMS Management";
      RealSteps@1003 : Integer;
      NextSteps@1004 : Integer;
    BEGIN
      RealSteps := 0;
      if Steps <> 0 then begin
        PostedWhseRcptHeader := Rec;
        repeat
          NextSteps := NEXT(Steps / ABS(Steps));
          if WMSManagement.LocationIsAllowedToView("Location Code") then begin
            RealSteps := RealSteps + NextSteps;
            PostedWhseRcptHeader := Rec;
          end;
        until (NextSteps = 0) or (RealSteps = Steps);
        Rec := PostedWhseRcptHeader;
        if not FIND then;
      end;
      exit(RealSteps);
    END;

    [External]
    PROCEDURE ErrorIfUserIsNotWhseEmployee@4();
    VAR
      WhseEmployee@1000 : Record "Warehouse Employee";
    BEGIN
      if USERID <> '' then begin
        WhseEmployee.SETRANGE("User ID",USERID);
        if WhseEmployee.ISEMPTY then
          ERROR(Text000,USERID);
      end;
    END;

    BEGIN
    END.
  }
}

