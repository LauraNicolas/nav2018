OBJECT Report 7315 Calculate Whse. Adjustment
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Calculate Whse. Adjustment;
    ProcessingOnly=true;
  }
  DATASET
  {
    { 8129;    ;DataItem;Item                ;
               DataItemTable=Item;
               DataItemTableView=SORTING("No.");
               OnPreDataItem=VAR
                               ItemJnlTemplate@1000 : Record "Item Journal Template";
                               ItemJnlBatch@1001 : Record "Item Journal Batch";
                             BEGIN
                               if PostingDate = 0D then
                                 ERROR(Text000);

                               ItemJnlTemplate.GET(ItemJnlLine."Journal Template Name");
                               ItemJnlBatch.GET(ItemJnlLine."Journal Template Name",ItemJnlLine."Journal Batch Name");
                               if NextDocNo = '' then begin
                                 if ItemJnlBatch."No. Series" <> '' then begin
                                   ItemJnlLine.SETRANGE("Journal Template Name",ItemJnlLine."Journal Template Name");
                                   ItemJnlLine.SETRANGE("Journal Batch Name",ItemJnlLine."Journal Batch Name");
                                   if not ItemJnlLine.FIND('-') then
                                     NextDocNo := NoSeriesMgt.GetNextNo(ItemJnlBatch."No. Series",PostingDate,false);
                                   ItemJnlLine.INIT;
                                 end;
                                 if NextDocNo = '' then
                                   ERROR(Text001);
                               end;

                               NextLineNo := 0;

                               if not HideValidationDialog then
                                 Window.OPEN(Text002,"No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  if not HideValidationDialog then
                                    Window.UPDATE;
                                END;

               OnPostDataItem=BEGIN
                                if not HideValidationDialog then
                                  Window.CLOSE;
                              END;

               ReqFilterFields="No.","Location Filter","Variant Filter" }

    { 5444;1   ;DataItem;Integer             ;
               DataItemTable=Integer;
               DataItemTableView=SORTING(Number) WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               CLEAR(Location);
                               WhseEntry.RESET;
                               WhseEntry.SETCURRENTKEY("Item No.","Bin Code","Location Code","Variant Code");
                               WhseEntry.SETRANGE("Item No.",Item."No.");
                               Item.COPYFILTER("Variant Filter",WhseEntry."Variant Code");
                               Item.COPYFILTER("Lot No. Filter",WhseEntry."Lot No.");
                               Item.COPYFILTER("Serial No. Filter",WhseEntry."Serial No.");

                               if not WhseEntry.FIND('-') then
                                 CurrReport.BREAK;

                               AdjmtBinQuantityBuffer.RESET;
                               AdjmtBinQuantityBuffer.DELETEALL;
                             END;

               OnAfterGetRecord=BEGIN
                                  with AdjmtBinQuantityBuffer do begin
                                    Location.RESET;
                                    Item.COPYFILTER("Location Filter",Location.Code);
                                    Location.SETRANGE("Directed Put-away and Pick",true);
                                    if Location.FINDSET then
                                      repeat
                                        WhseEntry.SETRANGE("Location Code",Location.Code);
                                        WhseEntry.SETRANGE("Bin Code",Location."Adjustment Bin Code");
                                        if WhseEntry.FINDSET then
                                          repeat
                                            if WhseEntry."Qty. (Base)" <> 0 then begin
                                              RESET;
                                              SETRANGE("Item No.",WhseEntry."Item No.");
                                              SETRANGE("Variant Code",WhseEntry."Variant Code");
                                              SETRANGE("Location Code",WhseEntry."Location Code");
                                              SETRANGE("Bin Code",WhseEntry."Bin Code");
                                              SETRANGE("Unit of Measure Code",WhseEntry."Unit of Measure Code");
                                              if WhseEntry."Lot No." <> '' then
                                                SETRANGE("Lot No.",WhseEntry."Lot No.");
                                              if WhseEntry."Serial No." <> '' then
                                                SETRANGE("Serial No.",WhseEntry."Serial No.");
                                              if FINDSET then begin
                                                "Qty. to Handle (Base)" := "Qty. to Handle (Base)" + WhseEntry."Qty. (Base)";
                                                MODIFY;
                                              end else begin
                                                INIT;
                                                "Item No." := WhseEntry."Item No.";
                                                "Variant Code" := WhseEntry."Variant Code";
                                                "Location Code" := WhseEntry."Location Code";
                                                "Bin Code" := WhseEntry."Bin Code";
                                                "Unit of Measure Code" := WhseEntry."Unit of Measure Code";
                                                "Base Unit of Measure" := Item."Base Unit of Measure";
                                                "Lot No." := WhseEntry."Lot No.";
                                                "Serial No." := WhseEntry."Serial No.";
                                                "Qty. to Handle (Base)" := WhseEntry."Qty. (Base)";
                                                "Qty. Outstanding (Base)" := WhseEntry."Qty. (Base)";
                                                INSERT;
                                              end;
                                            end;
                                          until WhseEntry.NEXT = 0;
                                      until Location.NEXT = 0;

                                    RESET;
                                    ReservEntry.RESET;
                                    ReservEntry.SETCURRENTKEY("Source ID");
                                    ItemJnlLine.RESET;
                                    ItemJnlLine.SETCURRENTKEY("Item No.");
                                    if FINDSET then begin
                                      repeat
                                        ItemJnlLine.RESET;
                                        ItemJnlLine.SETCURRENTKEY("Item No.");
                                        ItemJnlLine.SETRANGE("Journal Template Name",ItemJnlLine."Journal Template Name");
                                        ItemJnlLine.SETRANGE("Journal Batch Name",ItemJnlLine."Journal Batch Name");
                                        ItemJnlLine.SETRANGE("Item No.","Item No.");
                                        ItemJnlLine.SETRANGE("Location Code","Location Code");
                                        ItemJnlLine.SETRANGE("Unit of Measure Code","Unit of Measure Code");
                                        ItemJnlLine.SETRANGE("Warehouse Adjustment",true);
                                        if ItemJnlLine.FINDSET then
                                          repeat
                                            ReservEntry.SETRANGE("Source Type",DATABASE::"Item Journal Line");
                                            ReservEntry.SETRANGE("Source ID",ItemJnlLine."Journal Template Name");
                                            ReservEntry.SETRANGE("Source Batch Name",ItemJnlLine."Journal Batch Name");
                                            ReservEntry.SETRANGE("Source Ref. No.",ItemJnlLine."Line No.");
                                            if "Lot No." <> '' then
                                              ReservEntry.SETRANGE("Lot No.","Lot No.");
                                            if "Serial No." <> '' then
                                              ReservEntry.SETRANGE("Serial No.","Serial No.");
                                            if ReservEntry.FINDSET then
                                              repeat
                                                "Qty. to Handle (Base)" += ReservEntry."Qty. to Handle (Base)";
                                                "Qty. Outstanding (Base)" += ReservEntry."Qty. to Handle (Base)";
                                              until ReservEntry.NEXT = 0;
                                          until ItemJnlLine.NEXT = 0;
                                      until NEXT = 0;
                                      MODIFY;
                                    end;
                                  end;
                                END;

               OnPostDataItem=VAR
                                ItemUOM@1001 : Record "Item Unit of Measure";
                                QtyInUOM@1000 : Decimal;
                              BEGIN
                                with AdjmtBinQuantityBuffer do begin
                                  RESET;
                                  if FINDSET then
                                    repeat
                                      if "Location Code" <> '' then
                                        SETRANGE("Location Code","Location Code");
                                      SETRANGE("Variant Code","Variant Code");
                                      SETRANGE("Unit of Measure Code","Unit of Measure Code");

                                      WhseQtyBase := 0;
                                      SETFILTER("Qty. to Handle (Base)",'>0');
                                      if FINDSET then begin
                                        repeat
                                          WhseQtyBase := WhseQtyBase - "Qty. to Handle (Base)";
                                        until NEXT = 0
                                      end;

                                      ItemUOM.GET("Item No.","Unit of Measure Code");
                                      QtyInUOM := ROUND(WhseQtyBase / ItemUOM."Qty. per Unit of Measure",0.00001);
                                      if (QtyInUOM <> 0) and FINDFIRST then
                                        InsertItemJnlLine(
                                          "Item No.","Variant Code","Location Code",
                                          QtyInUOM,WhseQtyBase,"Unit of Measure Code",1);

                                      WhseQtyBase := 0;
                                      SETFILTER("Qty. to Handle (Base)",'<0');
                                      if FINDSET then
                                        repeat
                                          WhseQtyBase := WhseQtyBase - "Qty. to Handle (Base)";
                                        until NEXT = 0;
                                      QtyInUOM := ROUND(WhseQtyBase / ItemUOM."Qty. per Unit of Measure",0.00001);
                                      if (QtyInUOM <> 0) and FINDFIRST then
                                        InsertItemJnlLine(
                                          "Item No.","Variant Code","Location Code",
                                          QtyInUOM,WhseQtyBase,"Unit of Measure Code",0);

                                      WhseQtyBase := 0;
                                      SETRANGE("Qty. to Handle (Base)");
                                      if FINDSET then
                                        repeat
                                          WhseQtyBase := WhseQtyBase - "Qty. to Handle (Base)";
                                        until NEXT = 0;
                                      QtyInUOM := ROUND(WhseQtyBase / ItemUOM."Qty. per Unit of Measure",0.00001);
                                      if ((QtyInUOM = 0) and (WhseQtyBase < 0)) and FINDFIRST then
                                        InsertItemJnlLine(
                                          "Item No.","Variant Code","Location Code",
                                          WhseQtyBase,WhseQtyBase,"Base Unit of Measure",1);

                                      FINDLAST;
                                      SETRANGE("Location Code");
                                      SETRANGE("Variant Code");
                                      SETRANGE("Unit of Measure Code");
                                    until NEXT = 0;
                                  RESET;
                                  DELETEALL;
                                end;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      CaptionML=ENU=Calculate Inventory;
      SaveValues=true;
      OnOpenPage=BEGIN
                   if PostingDate = 0D then
                     PostingDate := WORKDATE;
                   ValidatePostingDate;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=Posting Date;
                  CaptionML=ENU=Posting Date;
                  ToolTipML=ENU=Specifies the date for the posting of this batch job. The program automatically enters the work date in this field, but you can change it.;
                  ApplicationArea=#Warehouse;
                  SourceExpr=PostingDate;
                  OnValidate=BEGIN
                               ValidatePostingDate;
                             END;
                              }

      { 9   ;2   ;Field     ;
                  Name=Document No.;
                  CaptionML=ENU=Document No.;
                  ToolTipML=ENU=Specifies a manually entered document number that will be entered in the Document No. field, on the journal lines created by the batch job.;
                  ApplicationArea=#Warehouse;
                  SourceExpr=NextDocNo }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Enter the posting date.';
      Text001@1001 : TextConst 'ENU=Enter the document no.';
      Text002@1002 : TextConst 'ENU=Processing items    #1##########';
      ItemJnlBatch@1004 : Record "Item Journal Batch";
      ItemJnlLine@1005 : Record "Item Journal Line";
      WhseEntry@1006 : Record "Warehouse Entry";
      Location@1031 : Record Location;
      SourceCodeSetup@1008 : Record "Source Code Setup";
      AdjmtBinQuantityBuffer@1003 : TEMPORARY Record "Bin Content Buffer";
      ReservEntry@1009 : Record "Reservation Entry";
      NoSeriesMgt@1017 : Codeunit NoSeriesManagement;
      Window@1019 : Dialog;
      PostingDate@1020 : Date;
      NextDocNo@1021 : Code[20];
      WhseQtyBase@1007 : Decimal;
      NextLineNo@1023 : Integer;
      HideValidationDialog@1028 : Boolean;

    [External]
    PROCEDURE SetItemJnlLine@1(VAR NewItemJnlLine@1000 : Record "Item Journal Line");
    BEGIN
      ItemJnlLine := NewItemJnlLine;
    END;

    LOCAL PROCEDURE ValidatePostingDate@4();
    BEGIN
      ItemJnlBatch.GET(ItemJnlLine."Journal Template Name",ItemJnlLine."Journal Batch Name");
      if ItemJnlBatch."No. Series" = '' then
        NextDocNo := ''
      else begin
        NextDocNo := NoSeriesMgt.GetNextNo(ItemJnlBatch."No. Series",PostingDate,false);
        CLEAR(NoSeriesMgt);
      end;
    END;

    LOCAL PROCEDURE InsertItemJnlLine@6(ItemNo@1000 : Code[20];VariantCode2@1001 : Code[10];LocationCode2@1003 : Code[10];Quantity2@1002 : Decimal;QuantityBase2@1005 : Decimal;UOM2@1009 : Code[10];EntryType2@1011 : '"Negative Adjmt.","Positive Adjmt."');
    VAR
      Location@1008 : Record Location;
      WhseEntry2@1012 : Record "Warehouse Entry";
      WhseEntry3@1015 : Record "Warehouse Entry";
      ReservEntry@1007 : Record "Reservation Entry";
      CreateReservEntry@1004 : Codeunit "Create Reserv. Entry";
      OrderLineNo@1006 : Integer;
    BEGIN
      with ItemJnlLine do begin
        if NextLineNo = 0 then begin
          LOCKTABLE;
          RESET;
          SETRANGE("Journal Template Name","Journal Template Name");
          SETRANGE("Journal Batch Name","Journal Batch Name");
          if FIND('+') then
            NextLineNo := "Line No.";

          SourceCodeSetup.GET;
        end;
        NextLineNo := NextLineNo + 10000;

        if QuantityBase2 <> 0 then begin
          INIT;
          "Line No." := NextLineNo;
          VALIDATE("Posting Date",PostingDate);
          if QuantityBase2 > 0 then
            VALIDATE("Entry Type","Entry Type"::"Positive Adjmt.")
          else begin
            VALIDATE("Entry Type","Entry Type"::"Negative Adjmt.");
            Quantity2 := -Quantity2;
            QuantityBase2 := -QuantityBase2;
          end;
          VALIDATE("Document No.",NextDocNo);
          VALIDATE("Item No.",ItemNo);
          VALIDATE("Variant Code",VariantCode2);
          VALIDATE("Location Code",LocationCode2);
          VALIDATE("Source Code",SourceCodeSetup."Item Journal");
          VALIDATE("Unit of Measure Code",UOM2);
          if LocationCode2 <> '' then
            Location.GET(LocationCode2);
          "Posting No. Series" := ItemJnlBatch."Posting No. Series";

          VALIDATE(Quantity,Quantity2);
          "Quantity (Base)" := QuantityBase2;
          "Invoiced Qty. (Base)" := QuantityBase2;
          "Warehouse Adjustment" := true;
          INSERT(true);

          if Location.Code <> '' then
            if Location."Directed Put-away and Pick" then begin
              WhseEntry2.SETCURRENTKEY(
                "Item No.","Bin Code","Location Code","Variant Code","Unit of Measure Code",
                "Lot No.","Serial No.","Entry Type");
              WhseEntry2.SETRANGE("Item No.","Item No.");
              WhseEntry2.SETRANGE("Bin Code",Location."Adjustment Bin Code");
              WhseEntry2.SETRANGE("Location Code","Location Code");
              WhseEntry2.SETRANGE("Variant Code","Variant Code");
              WhseEntry2.SETRANGE("Unit of Measure Code",UOM2);
              WhseEntry2.SETFILTER("Lot No.",Item.GETFILTER("Lot No. Filter"));
              WhseEntry2.SETFILTER("Serial No.",Item.GETFILTER("Serial No. Filter"));
              WhseEntry2.SETFILTER("Entry Type",'%1|%2',EntryType2,WhseEntry2."Entry Type"::Movement);
              if WhseEntry2.FIND('-') then
                repeat
                  WhseEntry2.SETRANGE("Lot No.",WhseEntry2."Lot No.");
                  WhseEntry2.SETRANGE("Serial No.",WhseEntry2."Serial No.");
                  WhseEntry2.CALCSUMS("Qty. (Base)");

                  WhseEntry3.SETCURRENTKEY(
                    "Item No.","Bin Code","Location Code","Variant Code","Unit of Measure Code",
                    "Lot No.","Serial No.","Entry Type");
                  WhseEntry3.COPYFILTERS(WhseEntry2);
                  case EntryType2 of
                    EntryType2::"Positive Adjmt.":
                      WhseEntry3.SETRANGE("Entry Type",WhseEntry3."Entry Type"::"Negative Adjmt.");
                    EntryType2::"Negative Adjmt.":
                      WhseEntry3.SETRANGE("Entry Type",WhseEntry3."Entry Type"::"Positive Adjmt.");
                  end;
                  WhseEntry3.CALCSUMS("Qty. (Base)");
                  if ABS(WhseEntry3."Qty. (Base)") > ABS(WhseEntry2."Qty. (Base)") then
                    WhseEntry2."Qty. (Base)" := 0
                  else
                    WhseEntry2."Qty. (Base)" := WhseEntry2."Qty. (Base)" + WhseEntry3."Qty. (Base)";

                  if WhseEntry2."Qty. (Base)" <> 0 then begin
                    if "Order Type" = "Order Type"::Production then
                      OrderLineNo := "Order Line No.";
                    CreateReservEntry.CreateReservEntryFor(
                      DATABASE::"Item Journal Line",
                      "Entry Type",
                      "Journal Template Name",
                      "Journal Batch Name",
                      OrderLineNo,
                      "Line No.",
                      "Qty. per Unit of Measure",
                      ABS(WhseEntry2.Quantity),
                      ABS(WhseEntry2."Qty. (Base)"),
                      WhseEntry2."Serial No.",
                      WhseEntry2."Lot No.");
                    if WhseEntry2."Qty. (Base)" < 0 then             // Only Date on positive adjustments
                      CreateReservEntry.SetDates(WhseEntry2."Warranty Date",WhseEntry2."Expiration Date");
                    CreateReservEntry.CreateEntry(
                      "Item No.",
                      "Variant Code",
                      "Location Code",
                      Description,
                      0D,
                      0D,
                      0,
                      ReservEntry."Reservation Status"::Prospect);
                  end;
                  WhseEntry2.FIND('+');
                  WhseEntry2.SETFILTER("Lot No.",Item.GETFILTER("Lot No. Filter"));
                  WhseEntry2.SETFILTER("Serial No.",Item.GETFILTER("Serial No. Filter"));
                until WhseEntry2.NEXT = 0;
            end;
        end;
      end;
    END;

    [External]
    PROCEDURE InitializeRequest@2(NewPostingDate@1000 : Date;DocNo@1001 : Code[20]);
    BEGIN
      PostingDate := NewPostingDate;
      NextDocNo := DocNo;
    END;

    [External]
    PROCEDURE SetHideValidationDialog@7380(NewHideValidationDialog@1000 : Boolean);
    BEGIN
      HideValidationDialog := NewHideValidationDialog;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

