OBJECT Page 5759 Posted Transfer Receipt Lines
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Posted Transfer Receipt Lines;
    SourceTable="Transfer Receipt Line";
    PageType=List;
    OnAfterGetRecord=BEGIN
                       DocumentNoHideValue := false;
                       DocumentNoOnFormat;
                     END;

    OnQueryClosePage=BEGIN
                       if CloseAction = ACTION::LookupOK then
                         LookupOKOnPush;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 17      ;1   ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 19      ;2   ;Action    ;
                      Name=Show Document;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Show Document;
                      ToolTipML=ENU=Open the document that the selected line exists on.;
                      ApplicationArea=#Location;
                      Image=View;
                      OnAction=VAR
                                 TransRcptHeader@1001 : Record "Transfer Receipt Header";
                               BEGIN
                                 TransRcptHeader.GET("Document No.");
                                 PAGE.RUN(PAGE::"Posted Transfer Receipt",TransRcptHeader);
                               END;
                                }
      { 20      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Location;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Document No.;
                ToolTipML=ENU=Specifies the document number associated with this transfer line.;
                ApplicationArea=#Location;
                SourceExpr="Document No.";
                HideValue=DocumentNoHideValue;
                StyleExpr='Strong';
                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Item No.;
                ToolTipML=ENU=Specifies the number of the item that you want to transfer.;
                ApplicationArea=#Location;
                SourceExpr="Item No.";
                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the description of the item being transferred.;
                ApplicationArea=#Location;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 8   ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the quantity of the item specified on the line.;
                ApplicationArea=#Location;
                SourceExpr=Quantity;
                ImplicitType=Decimal }

    { 10  ;2   ;Field     ;
                Name=Unit of Measure;
                ToolTipML=ENU=Specifies the unit of measure code of the item.;
                ApplicationArea=#Location;
                SourceExpr="Unit of Measure";
                ImplicitType=Text10 }

    { 12  ;2   ;Field     ;
                Name=Receipt Date;
                ToolTipML=ENU=Specifies the receipt date of the transfer receipt line.;
                ApplicationArea=#Location;
                SourceExpr="Receipt Date";
                ImplicitType=Date }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      FromTransRcptLine@1000 : Record "Transfer Receipt Line";
      TempTransRcptLine@1001 : TEMPORARY Record "Transfer Receipt Line";
      ItemChargeAssgntPurch@1002 : Record "Item Charge Assignment (Purch)";
      AssignItemChargePurch@1003 : Codeunit "Item Charge Assgnt. (Purch.)";
      UnitCost@1004 : Decimal;
      CreateCostDistrib@1005 : Boolean;
      DocumentNoHideValue@19020538 : Boolean INDATASET;

    [External]
    PROCEDURE Initialize@1(NewItemChargeAssgntPurch@1000 : Record "Item Charge Assignment (Purch)";NewUnitCost@1001 : Decimal);
    BEGIN
      ItemChargeAssgntPurch := NewItemChargeAssgntPurch;
      UnitCost := NewUnitCost;
      CreateCostDistrib := true;
    END;

    LOCAL PROCEDURE IsFirstLine@2(DocNo@1000 : Code[20];LineNo@1001 : Integer) : Boolean;
    VAR
      TransRcptLine@1002 : Record "Transfer Receipt Line";
    BEGIN
      TempTransRcptLine.RESET;
      TempTransRcptLine.COPYFILTERS(Rec);
      TempTransRcptLine.SETRANGE("Document No.",DocNo);
      if not TempTransRcptLine.FINDFIRST then begin
        TransRcptLine.COPYFILTERS(Rec);
        TransRcptLine.SETRANGE("Document No.",DocNo);
        TransRcptLine.FINDFIRST;
        TempTransRcptLine := TransRcptLine;
        TempTransRcptLine.INSERT;
      end;
      if TempTransRcptLine."Line No." = LineNo then
        exit(true);
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    BEGIN
      if CreateCostDistrib then begin
        FromTransRcptLine.COPY(Rec);
        CurrPage.SETSELECTIONFILTER(FromTransRcptLine);
        if FromTransRcptLine.FINDFIRST then begin
          ItemChargeAssgntPurch."Unit Cost" := UnitCost;
          AssignItemChargePurch.CreateTransferRcptChargeAssgnt(FromTransRcptLine,ItemChargeAssgntPurch);
        end;
      end;
    END;

    LOCAL PROCEDURE DocumentNoOnFormat@19001080();
    BEGIN
      if not IsFirstLine("Document No.","Line No.") then
        DocumentNoHideValue := true;
    END;

    BEGIN
    END.
  }
}

