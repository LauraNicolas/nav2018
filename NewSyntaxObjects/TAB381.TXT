OBJECT Table 381 VAT Registration No. Format
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=VAT Registration No. Format;
  }
  FIELDS
  {
    { 1   ;   ;Country/Region Code ;Code10        ;TableRelation="Country/Region";
                                                   CaptionML=ENU=Country/Region Code;
                                                   NotBlank=true;
                                                   Editable=false }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 3   ;   ;Format              ;Text20        ;CaptionML=ENU=Format }
  }
  KEYS
  {
    {    ;"Country/Region Code","Line No."        ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The entered VAT Registration number is not in agreement with the format specified for Country/Region Code %1.\';
      Text001@1001 : TextConst 'ENU=The following formats are acceptable: %2';
      Text002@1002 : TextConst 'ENU=This VAT registration number has already been entered for the following customers:\ %1';
      Text003@1003 : TextConst 'ENU=This VAT registration number has already been entered for the following vendors:\ %1';
      Text004@1004 : TextConst 'ENU=This VAT registration number has already been entered for the following contacts:\ %1';
      Text005@1005 : TextConst 'ENU=ABCDEFGHIJKLMNOPQRSTUVWXYZ';
      InvalidVatNumberErr@1010 : TextConst 'ENU=Enter a valid VAT number, for example ''GB123456789''.';
      IdentityManagement@1011 : Codeunit "Identity Management";

    [External]
    PROCEDURE Test@1(VATRegNo@1000 : Text[20];CountryCode@1001 : Code[10];Number@1002 : Code[20];TableID@1003 : Option) : Boolean;
    VAR
      CompanyInfo@1005 : Record "Company Information";
      Check@1004 : Boolean;
      t@1006 : Text[250];
    BEGIN
      VATRegNo := UPPERCASE(VATRegNo);
      if VATRegNo = '' then
        exit;
      Check := true;

      if CountryCode = '' then begin
        if not CompanyInfo.GET then
          exit;
        SETRANGE("Country/Region Code",CompanyInfo."Country/Region Code");
      end else
        SETRANGE("Country/Region Code",CountryCode);
      SETFILTER(Format,'<> %1','');
      if FIND('-') then
        repeat
          if t = '' then
            t := Format
          else
            if STRLEN(t) + STRLEN(Format) + 5 <= MAXSTRLEN(t) then
              t := t + ', ' + Format
            else
              t := t + '...';
          Check := Compare(VATRegNo,Format);
        until Check or (NEXT = 0);

      if not Check then begin
        if IdentityManagement.IsInvAppId then
          ERROR(InvalidVatNumberErr);
        ERROR(Text000 + Text001,"Country/Region Code",t);
      end;

      case TableID of
        DATABASE::Customer:
          CheckCust(VATRegNo,Number);
        DATABASE::Vendor:
          CheckVendor(VATRegNo,Number);
        DATABASE::Contact:
          CheckContact(VATRegNo,Number);
      end;
      exit(true);
    END;

    LOCAL PROCEDURE CheckCust@3(VATRegNo@1000 : Text[20];Number@1002 : Code[20]);
    VAR
      Cust@1003 : Record Customer;
      Check@1004 : Boolean;
      Finish@1001 : Boolean;
      t@1005 : Text[250];
      CustomerIdentification@1006 : Text[50];
    BEGIN
      Check := true;
      t := '';
      Cust.SETCURRENTKEY("VAT Registration No.");
      Cust.SETRANGE("VAT Registration No.",VATRegNo);
      Cust.SETFILTER("No.",'<>%1',Number);
      if Cust.FIND('-') then begin
        Check := false;
        Finish := false;
        repeat
          if IdentityManagement.IsInvAppId then
            CustomerIdentification := Cust.Name
          else
            CustomerIdentification := Cust."No.";

          if Cust."No." <> Number then
            if t = '' then
              t := CustomerIdentification
            else
              if STRLEN(t) + STRLEN(CustomerIdentification) + 5 <= MAXSTRLEN(t) then
                t += ', ' + CustomerIdentification
              else begin
                t += '...';
                Finish := true;
              end;
        until (Cust.NEXT = 0) or Finish;
      end;
      if Check = false then
        MESSAGE(Text002,t);
    END;

    LOCAL PROCEDURE CheckVendor@4(VATRegNo@1000 : Text[20];Number@1002 : Code[20]);
    VAR
      Vend@1003 : Record Vendor;
      Check@1004 : Boolean;
      Finish@1001 : Boolean;
      t@1005 : Text[250];
    BEGIN
      Check := true;
      t := '';
      Vend.SETCURRENTKEY("VAT Registration No.");
      Vend.SETRANGE("VAT Registration No.",VATRegNo);
      Vend.SETFILTER("No.",'<>%1',Number);
      if Vend.FIND('-') then begin
        Check := false;
        Finish := false;
        repeat
          if Vend."No." <> Number then
            if t = '' then
              t := Vend."No."
            else
              if STRLEN(t) + STRLEN(Vend."No.") + 5 <= MAXSTRLEN(t) then
                t := t + ', ' + Vend."No."
              else begin
                t := t + '...';
                Finish := true;
              end;
        until (Vend.NEXT = 0) or Finish;
      end;
      if Check = false then
        MESSAGE(Text003,t);
    END;

    LOCAL PROCEDURE CheckContact@5(VATRegNo@1000 : Text[20];Number@1002 : Code[20]);
    VAR
      Cont@1003 : Record Contact;
      Check@1004 : Boolean;
      Finish@1001 : Boolean;
      t@1005 : Text[250];
    BEGIN
      Check := true;
      t := '';
      Cont.SETCURRENTKEY("VAT Registration No.");
      Cont.SETRANGE("VAT Registration No.",VATRegNo);
      Cont.SETFILTER("No.",'<>%1',Number);
      if Cont.FIND('-') then begin
        Check := false;
        Finish := false;
        repeat
          if Cont."No." <> Number then
            if t = '' then
              t := Cont."No."
            else
              if STRLEN(t) + STRLEN(Cont."No.") + 5 <= MAXSTRLEN(t) then
                t := t + ', ' + Cont."No."
              else begin
                t := t + '...';
                Finish := true;
              end;
        until (Cont.NEXT = 0) or Finish;
      end;
      if Check = false then
        MESSAGE(Text004,t);
    END;

    [External]
    PROCEDURE Compare@2(VATRegNo@1000 : Text[20];Format@1001 : Text[20]) : Boolean;
    VAR
      i@1002 : Integer;
      Cf@1003 : Text[1];
      Ce@1004 : Text[1];
      Check@1005 : Boolean;
    BEGIN
      Check := true;
      if STRLEN(VATRegNo) = STRLEN(Format) then
        for i := 1 to STRLEN(VATRegNo) do begin
          Cf := COPYSTR(Format,i,1);
          Ce := COPYSTR(VATRegNo,i,1);
          case Cf of
            '#':
              if not ((Ce >= '0') and (Ce <= '9')) then
                Check := false;
            '@':
              if STRPOS(Text005,UPPERCASE(Ce)) = 0 then
                Check := false;
            else
              if not ((Cf = Ce) or (Cf = '?')) then
                Check := false
          end;
        end
      else
        Check := false;
      exit(Check);
    END;

    BEGIN
    END.
  }
}

