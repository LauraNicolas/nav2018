OBJECT Codeunit 2114 O365 HTML Templ. Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Payment Reporting Argument"=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      InvoiceNoTxt@1000 : TextConst 'ENU=Invoice No.';
      EstimateNoTxt@1014 : TextConst 'ENU=Estimate No.';
      ValidUntilTxt@1001 : TextConst 'ENU=Valid until';
      TotalTxt@1003 : TextConst '@@@="%1 = Currency Code";ENU=Total %1';
      YourInvoiceTxt@1002 : TextConst 'ENU=Your Invoice';
      YourEstimateTxt@1004 : TextConst 'ENU=Your Estimate';
      WantToPayOnlineQst@1005 : TextConst 'ENU=Want to pay online?';
      PaymentInvitationTxt@1006 : TextConst 'ENU=We want to make paying as simple as possible. Use button below to pay your invoice.';
      CompanyInformation@1008 : Record "Company Information";
      CompanyInfoRead@1007 : Boolean;
      EmailSentToTxt@1009 : TextConst 'ENU=This email was sent to';
      GreetingTxt@1010 : TextConst '@@@=%1 - customer name;ENU=Hello %1,';
      EstimateMailTextTxt@1011 : TextConst 'ENU=As promised, here is our estimate. Please see the attached estimate for details.';
      InvoiceAttachedTxt@1013 : TextConst 'ENU=Your invoice is attached to this message.';
      FollowOnSocialTxt@1012 : TextConst '@@@=%1 - company name;ENU=Follow %1 on Social';
      ThankYouForYourBusinessTxt@1015 : TextConst 'ENU=Thank you for your business.';
      InvoiceFromTitleTxt@1016 : TextConst '@@@=This is a mail title. %1 - company name;ENU=Invoice from %1';
      EstimateFromTitleTxt@1017 : TextConst '@@@=This is a mail title. %1 - company name;ENU=Estimate from %1';

    [External]
    PROCEDURE CreateEmailBodyFromReportSelections@10(ReportSelections@1000 : Record "Report Selections";RecordVariant@1001 : Variant;MailTo@1002 : Text) OutputFileName : Text[250];
    VAR
      FileMgt@1003 : Codeunit "File Management";
      HTMLText@1004 : Text;
    BEGIN
      OutputFileName := COPYSTR(FileMgt.ServerTempFileName('html'),1,250);

      HTMLText := CreateHTMLTextFromReportSelections(ReportSelections,RecordVariant,MailTo);

      SaveHTML(OutputFileName,HTMLText);
    END;

    LOCAL PROCEDURE CreateHTMLTextFromReportSelections@15(ReportSelections@1002 : Record "Report Selections";RecordVariant@1000 : Variant;MailTo@1001 : Text) HTMLText : Text;
    BEGIN
      with ReportSelections do begin
        HTMLText := GetTemplateContent("Email Body Layout Code");

        case Usage of
          Usage::"S.Invoice":
            FillSalesInvoiceHTML(RecordVariant,HTMLText,MailTo);
          Usage::"S.Invoice Draft":
            FillSalesDraftInvoiceHTML(RecordVariant,HTMLText,MailTo);
          Usage::"S.Quote":
            FillSalesEstimateHTML(RecordVariant,HTMLText,MailTo);
        end;
      end;
    END;

    LOCAL PROCEDURE FillSalesDraftInvoiceHTML@8(SalesHeader@1000 : Record "Sales Header";VAR HTMLText@1001 : Text;MailTo@1003 : Text);
    VAR
      PaymentServicesSectionHTMLText@1007 : Text;
      PaymentServiceRowHTMLText@1006 : Text;
      SocialNetworksSectionHTMLText@1005 : Text;
      SocialNetworkRowSectionHTMLText@1002 : Text;
    BEGIN
      SliceSalesCoverLetterTemplate(HTMLText,PaymentServicesSectionHTMLText,PaymentServiceRowHTMLText,
        SocialNetworksSectionHTMLText,SocialNetworkRowSectionHTMLText);

      FillCommonParameters(HTMLText,SocialNetworksSectionHTMLText,SocialNetworkRowSectionHTMLText,MailTo);
      FillParameterValueEncoded(HTMLText,'MailTitle',STRSUBSTNO(InvoiceFromTitleTxt,CompanyInformation.Name));
      FillParameterValueEncoded(HTMLText,'YourDocument',YourInvoiceTxt);
      FillParameterValueEncoded(HTMLText,'Greeting',STRSUBSTNO(GreetingTxt,SalesHeader."Sell-to Customer Name"));
      FillParameterValueEncoded(HTMLText,'MailText',STRSUBSTNO('%1 %2',ThankYouForYourBusinessTxt,InvoiceAttachedTxt));

      FillParameterValueEncoded(HTMLText,'DocumentNoLbl',InvoiceNoTxt);
      FillParameterValueEncoded(HTMLText,'DocumentNo',SalesHeader."No.");
      FillParameterValueEncoded(HTMLText,'DateLbl',SalesHeader.FIELDCAPTION("Due Date"));
      FillParameterValueEncoded(HTMLText,'Date',FORMAT(SalesHeader."Due Date"));
      FillParameterValueEncoded(HTMLText,'TotalAmountLbl',
        STRSUBSTNO(TotalTxt,GetDocumentCurrencyCode(SalesHeader."Currency Code")));
      SalesHeader.CALCFIELDS("Amount Including VAT");
      FillParameterValueEncoded(HTMLText,'TotalAmount',FORMAT(SalesHeader."Amount Including VAT",0,9));

      FillSalesDraftInvoicePaymentServices(HTMLText,PaymentServicesSectionHTMLText,PaymentServiceRowHTMLText,SalesHeader);
    END;

    LOCAL PROCEDURE FillSalesInvoiceHTML@22(SalesInvoiceHeader@1000 : Record "Sales Invoice Header";VAR HTMLText@1001 : Text;MailTo@1003 : Text);
    VAR
      PaymentServicesSectionHTMLText@1007 : Text;
      PaymentServiceRowHTMLText@1006 : Text;
      SocialNetworksSectionHTMLText@1005 : Text;
      SocialNetworkRowSectionHTMLText@1002 : Text;
    BEGIN
      SliceSalesCoverLetterTemplate(HTMLText,PaymentServicesSectionHTMLText,PaymentServiceRowHTMLText,
        SocialNetworksSectionHTMLText,SocialNetworkRowSectionHTMLText);

      FillCommonParameters(HTMLText,SocialNetworksSectionHTMLText,SocialNetworkRowSectionHTMLText,MailTo);

      FillParameterValueEncoded(HTMLText,'MailTitle',STRSUBSTNO(InvoiceFromTitleTxt,CompanyInformation.Name));
      FillParameterValueEncoded(HTMLText,'YourDocument',YourInvoiceTxt);
      FillParameterValueEncoded(HTMLText,'Greeting',STRSUBSTNO(GreetingTxt,SalesInvoiceHeader."Sell-to Customer Name"));
      FillParameterValueEncoded(HTMLText,'MailText',STRSUBSTNO('%1 %2',ThankYouForYourBusinessTxt,InvoiceAttachedTxt));

      FillParameterValueEncoded(HTMLText,'DocumentNoLbl',InvoiceNoTxt);
      FillParameterValueEncoded(HTMLText,'DocumentNo',SalesInvoiceHeader."No.");
      FillParameterValueEncoded(HTMLText,'DateLbl',SalesInvoiceHeader.FIELDCAPTION("Due Date"));
      FillParameterValueEncoded(HTMLText,'Date',FORMAT(SalesInvoiceHeader."Due Date"));
      FillParameterValueEncoded(HTMLText,'TotalAmountLbl',
        STRSUBSTNO(TotalTxt,GetDocumentCurrencyCode(SalesInvoiceHeader."Currency Code")));
      SalesInvoiceHeader.CALCFIELDS("Amount Including VAT");
      FillParameterValueEncoded(HTMLText,'TotalAmount',FORMAT(SalesInvoiceHeader."Amount Including VAT",0,9));

      FillSalesInvoicePaymentServices(HTMLText,PaymentServicesSectionHTMLText,PaymentServiceRowHTMLText,SalesInvoiceHeader);
    END;

    LOCAL PROCEDURE FillSalesEstimateHTML@25(SalesHeader@1000 : Record "Sales Header";VAR HTMLText@1001 : Text;MailTo@1003 : Text);
    VAR
      PaymentServicesSectionHTMLText@1007 : Text;
      PaymentServiceRowHTMLText@1006 : Text;
      SocialNetworksSectionHTMLText@1005 : Text;
      SocialNetworkRowSectionHTMLText@1002 : Text;
    BEGIN
      SliceSalesCoverLetterTemplate(HTMLText,PaymentServicesSectionHTMLText,PaymentServiceRowHTMLText,
        SocialNetworksSectionHTMLText,SocialNetworkRowSectionHTMLText);

      FillCommonParameters(HTMLText,SocialNetworksSectionHTMLText,SocialNetworkRowSectionHTMLText,MailTo);

      FillParameterValueEncoded(HTMLText,'MailTitle',STRSUBSTNO(EstimateFromTitleTxt,CompanyInformation.Name));
      FillParameterValueEncoded(HTMLText,'YourDocument',YourEstimateTxt);
      FillParameterValueEncoded(HTMLText,'Greeting',STRSUBSTNO(GreetingTxt,SalesHeader."Sell-to Customer Name"));
      FillParameterValueEncoded(HTMLText,'MailText',EstimateMailTextTxt);

      FillParameterValueEncoded(HTMLText,'DocumentNoLbl',EstimateNoTxt);
      FillParameterValueEncoded(HTMLText,'DocumentNo',SalesHeader."No.");
      FillParameterValueEncoded(HTMLText,'DateLbl',ValidUntilTxt);
      FillParameterValueEncoded(HTMLText,'Date',FORMAT(SalesHeader."Quote Valid Until Date"));
      FillParameterValueEncoded(HTMLText,'TotalAmountLbl',
        STRSUBSTNO(TotalTxt,GetDocumentCurrencyCode(SalesHeader."Currency Code")));
      SalesHeader.CALCFIELDS("Amount Including VAT");
      FillParameterValueEncoded(HTMLText,'TotalAmount',FORMAT(SalesHeader."Amount Including VAT",0,9));
    END;

    LOCAL PROCEDURE GetCompanyInfo@14();
    BEGIN
      if CompanyInfoRead then
        exit;

      CompanyInformation.GET;
      CompanyInfoRead := true;
    END;

    LOCAL PROCEDURE GetCompanyLogoScaledDimensions@19(VAR TempBlob@1001 : Record TempBlob;VAR ScaledWidth@1002 : Integer;VAR ScaledHeight@1003 : Integer;ScaleToWidth@1007 : Integer;ScaleToHeight@1008 : Integer);
    VAR
      Image@1004 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Image";
      InStream@1000 : InStream;
      HorizontalFactor@1009 : Decimal;
      VerticalFactor@1010 : Decimal;
    BEGIN
      if not TempBlob.Blob.HASVALUE then
        exit;
      TempBlob.Blob.CREATEINSTREAM(InStream);
      Image := Image.FromStream(InStream);

      if Image.Height <> 0 then
        HorizontalFactor := ScaleToHeight / Image.Height;
      if Image.Width <> 0 then
        VerticalFactor := ScaleToWidth / Image.Width;

      if HorizontalFactor < VerticalFactor then
        VerticalFactor := HorizontalFactor
      else
        HorizontalFactor := VerticalFactor;

      ScaledHeight := ROUND(Image.Height * HorizontalFactor,1);
      ScaledWidth := ROUND(Image.Width * VerticalFactor,1);
    END;

    LOCAL PROCEDURE GetCompanyLogoAsTempBlob@23(VAR TempBlob@1001 : Record TempBlob) : Text;
    VAR
      CompanyInformation@1000 : Record "Company Information";
    BEGIN
      CompanyInformation.CALCFIELDS(Picture);
      TempBlob.INIT;
      TempBlob.Blob := CompanyInformation.Picture;
      exit(TempBlob.GetHTMLImgSrc);
    END;

    [External]
    PROCEDURE GetTemplateContent@2(TemplateCode@1001 : Code[20]) TemplateContent : Text;
    VAR
      O365HTMLTemplate@1003 : Record "O365 HTML Template";
      MediaResources@1004 : Record "Media Resources";
      InStream@1000 : InStream;
      TextLine@1002 : Text;
    BEGIN
      O365HTMLTemplate.GET(TemplateCode);
      O365HTMLTemplate.TESTFIELD("Media Resources Ref");
      MediaResources.GET(O365HTMLTemplate."Media Resources Ref");
      MediaResources.CALCFIELDS(Blob);
      MediaResources.Blob.CREATEINSTREAM(InStream);
      while not InStream.EOS do begin
        InStream.READTEXT(TextLine);
        TemplateContent += TextLine;
      end;
    END;

    LOCAL PROCEDURE GetPaymentServiceLogoAsText@35(PaymentReportingArgument@1000 : Record "Payment Reporting Argument") : Text;
    VAR
      TempBlob@1001 : Record TempBlob;
      O365PaymentServiceLogo@1002 : Record "O365 Payment Service Logo";
      MediaResources@1003 : Record "Media Resources";
    BEGIN
      TempBlob.INIT;

      if O365PaymentServiceLogo.FindO365Logo(PaymentReportingArgument) then begin
        MediaResources.GET(O365PaymentServiceLogo."Media Resources Ref");
        MediaResources.CALCFIELDS(Blob);
        TempBlob.Blob := MediaResources.Blob;
      end else begin
        PaymentReportingArgument.CALCFIELDS(Logo);
        TempBlob.Blob := PaymentReportingArgument.Logo;
      end;

      exit(TempBlob.GetHTMLImgSrc);
    END;

    LOCAL PROCEDURE GetPrimaryColorValue@7() : Code[10];
    BEGIN
      GetCompanyInfo;
      exit(CompanyInformation."Brand Color Value");
    END;

    LOCAL PROCEDURE GetSocialNetworksHTMLPart@4(SocialNetworksSectionHTMLText@1001 : Text;SocialNetworkRowSectionHTMLText@1002 : Text) SocialNetworksHTMLPart : Text;
    VAR
      O365SocialNetwork@1000 : Record "O365 Social Network";
    BEGIN
      O365SocialNetwork.SETFILTER(URL,'<>%1','');
      O365SocialNetwork.SETFILTER("Media Resources Ref",'<>%1','');
      if O365SocialNetwork.FINDFIRST then begin
        SocialNetworksHTMLPart := SocialNetworksSectionHTMLText;
        GetCompanyInfo;
        FillParameterValueEncoded(
          SocialNetworksHTMLPart,
          'FollowOnSocial',
          STRSUBSTNO(FollowOnSocialTxt,CompanyInformation.Name));
        FillParameterValue(
          SocialNetworksHTMLPart,
          'CoverLetterSocialRow',
          GetSocialsRowsHTMLPart(O365SocialNetwork,SocialNetworkRowSectionHTMLText));
      end;
    END;

    LOCAL PROCEDURE GetSocialsRowsHTMLPart@44(VAR O365SocialNetwork@1000 : Record "O365 Social Network";SocialNetworkRowSectionHTMLText@1001 : Text) HTMLText : Text;
    VAR
      MediaResources@1002 : Record "Media Resources";
    BEGIN
      repeat
        if MediaResources.GET(O365SocialNetwork."Media Resources Ref") then
          HTMLText += GetSocialsRowHTMLPart(O365SocialNetwork,SocialNetworkRowSectionHTMLText);
      until O365SocialNetwork.NEXT = 0;
    END;

    LOCAL PROCEDURE GetSocialsRowHTMLPart@46(O365SocialNetwork@1001 : Record "O365 Social Network";SocialNetworkRowSectionHTMLText@1000 : Text) RowHTMLText : Text;
    BEGIN
      RowHTMLText := SocialNetworkRowSectionHTMLText;
      FillParameterValueEncoded(RowHTMLText,'SocialURL',O365SocialNetwork.URL);
      FillParameterValueEncoded(RowHTMLText,'SocialAlt',O365SocialNetwork.Name);
      FillParameterValue(RowHTMLText,'SocialLogo',GetSocialNetworkLogoAsTxt(O365SocialNetwork));
    END;

    LOCAL PROCEDURE GetSocialNetworkLogoAsTxt@9(O365SocialNetwork@1005 : Record "O365 Social Network") : Text;
    VAR
      TempBlob@1001 : Record TempBlob;
      MediaResources@1000 : Record "Media Resources";
    BEGIN
      if not MediaResources.GET(O365SocialNetwork."Media Resources Ref") then
        exit('');

      MediaResources.CALCFIELDS(Blob);
      TempBlob.INIT;
      TempBlob.Blob := MediaResources.Blob;
      exit(TempBlob.GetHTMLImgSrc);
    END;

    LOCAL PROCEDURE GetDocumentCurrencyCode@32(CurrencyCode@1000 : Code[10]) : Code[10];
    VAR
      GLSetup@1001 : Record "General Ledger Setup";
    BEGIN
      if CurrencyCode <> '' then
        exit(CurrencyCode);

      GLSetup.GET;
      exit(GLSetup."LCY Code");
    END;

    LOCAL PROCEDURE FillCompanyInfoSection@11(VAR HTMLText@1003 : Text);
    VAR
      FormatAddr@1002 : Codeunit "Format Address";
      CompanyAddr@1001 : ARRAY [8] OF Text[50];
    BEGIN
      GetCompanyInfo;
      FormatAddr.Company(CompanyAddr,CompanyInformation);
      FillParameterValueEncoded(HTMLText,'CompanyName',CompanyInformation.Name);
      FillParameterValueEncoded(HTMLText,'CompanyAddress',MakeFullCompanyAddress(CompanyAddr));
      FillParameterValueEncoded(HTMLText,'CompanyPhoneNo',CompanyInformation."Phone No.");
    END;

    LOCAL PROCEDURE FillCompanyLogo@17(VAR HTMLText@1000 : Text);
    VAR
      TempBlob@1001 : Record TempBlob;
      Width@1003 : Integer;
      Height@1002 : Integer;
    BEGIN
      GetCompanyLogoAsTempBlob(TempBlob);
      GetCompanyLogoScaledDimensions(TempBlob,Width,Height,246,80);

      FillParameterValue(HTMLText,'CompanyLogo',TempBlob.GetHTMLImgSrc);
      FillParameterValueEncoded(HTMLText,'CompanyLogoWidth',FORMAT(Width,0,9));
      FillParameterValueEncoded(HTMLText,'CompanyLogoHeight',FORMAT(Height,0,9));
    END;

    [External]
    PROCEDURE FillCommonParameters@12(VAR HTMLText@1000 : Text;SocialNetworksSectionHTMLText@1003 : Text;SocialNetworkRowSectionHTMLText@1002 : Text;MailTo@1001 : Text);
    BEGIN
      FillCompanyLogo(HTMLText);

      FillParameterValueEncoded(HTMLText,'ThankYouForYourBusiness',ThankYouForYourBusinessTxt);
      FillParameterValue(HTMLText,'SocialNetworks',
        GetSocialNetworksHTMLPart(SocialNetworksSectionHTMLText,SocialNetworkRowSectionHTMLText));

      FillCompanyInfoSection(HTMLText);

      FillParameterValueEncoded(HTMLText,'EmailSentToLbl',EmailSentToTxt);
      FillParameterValueEncoded(HTMLText,'MailTo',MailTo);
      FillParameterValueEncoded(HTMLText,'PrimaryColor',GetPrimaryColorValue);
    END;

    [External]
    PROCEDURE FillParameterValueEncoded@6(VAR HTMLText@1000 : Text;ParamenterName@1001 : Text;ParameterValue@1002 : Text);
    VAR
      TypeHelper@1003 : Codeunit "Type Helper";
    BEGIN
      FillParameterValue(HTMLText,ParamenterName,TypeHelper.HtmlEncode(ParameterValue));
    END;

    [External]
    PROCEDURE FillParameterValue@33(VAR HTMLText@1000 : Text;ParamenterName@1001 : Text;ParameterValue@1002 : Text);
    BEGIN
      ReplaceHTMLText(HTMLText,MakeParameterNameString(ParamenterName),ParameterValue);
    END;

    LOCAL PROCEDURE FillSalesDraftInvoicePaymentServices@13(VAR HTMLText@1003 : Text;PaymentServicesSectionHTMLText@1005 : Text;PaymentServiceRowHTMLText@1004 : Text;SalesHeader@1000 : Record "Sales Header");
    VAR
      PaymentServiceSetup@1001 : Record "Payment Service Setup";
      PaymentReportingArgument@1002 : Record "Payment Reporting Argument";
    BEGIN
      PaymentServiceSetup.CreateReportingArgs(PaymentReportingArgument,SalesHeader);
      FillPaymentServicesPart(HTMLText,PaymentReportingArgument,PaymentServicesSectionHTMLText,PaymentServiceRowHTMLText);
    END;

    LOCAL PROCEDURE FillSalesInvoicePaymentServices@5(VAR HTMLText@1003 : Text;PaymentServicesSectionHTMLText@1005 : Text;PaymentServiceRowHTMLText@1004 : Text;SalesInvoiceHeader@1000 : Record "Sales Invoice Header");
    VAR
      PaymentServiceSetup@1001 : Record "Payment Service Setup";
      PaymentReportingArgument@1002 : Record "Payment Reporting Argument";
    BEGIN
      PaymentServiceSetup.CreateReportingArgs(PaymentReportingArgument,SalesInvoiceHeader);
      FillPaymentServicesPart(HTMLText,PaymentReportingArgument,PaymentServicesSectionHTMLText,PaymentServiceRowHTMLText);
    END;

    LOCAL PROCEDURE FillPaymentServicesPart@16(VAR HTMLText@1002 : Text;VAR PaymentReportingArgument@1004 : Record "Payment Reporting Argument";PaymentServicesSectionHTMLText@1000 : Text;PaymentServiceRowHTMLText@1005 : Text);
    VAR
      PaymentServicesHTMLText@1001 : Text;
      PaymentServicesRowsHTMLText@1003 : Text;
    BEGIN
      if PaymentReportingArgument.FINDSET then begin
        PaymentServicesHTMLText := PaymentServicesSectionHTMLText;

        FillParameterValueEncoded(PaymentServicesHTMLText,'WantToPayOnline',WantToPayOnlineQst);
        FillParameterValueEncoded(PaymentServicesHTMLText,'PaymentInvitation',PaymentInvitationTxt);

        repeat
          PaymentServicesRowsHTMLText += FillPaymentServiceRowPart(PaymentReportingArgument,PaymentServiceRowHTMLText);
        until PaymentReportingArgument.NEXT = 0;

        FillParameterValue(PaymentServicesHTMLText,'PaymentServicesRows',PaymentServicesRowsHTMLText);
        FillParameterValue(HTMLText,'PaymentSevices',PaymentServicesHTMLText);
      end;
    END;

    LOCAL PROCEDURE FillPaymentServiceRowPart@18(PaymentReportingArgument@1000 : Record "Payment Reporting Argument";PaymentServiceRowHTMLText@1001 : Text) PaymentServiceHTMLText : Text;
    VAR
      PaymentServiceUrl@1003 : Text;
    BEGIN
      PaymentServiceHTMLText := PaymentServiceRowHTMLText;
      PaymentServiceUrl := PaymentReportingArgument.GetTargetURL;
      FillParameterValueEncoded(PaymentServiceHTMLText,'PaymentServiceUrl',PaymentServiceUrl);
      FillParameterValueEncoded(PaymentServiceHTMLText,'PaymentServiceAlt',PaymentReportingArgument."URL Caption");
      FillParameterValue(PaymentServiceHTMLText,'PaymentServiceLogo',
        GetPaymentServiceLogoAsText(PaymentReportingArgument));
    END;

    LOCAL PROCEDURE MakeFullCompanyAddress@21(CompanyAddr@1000 : ARRAY [8] OF Text[50]) FullCompanyAddress : Text;
    VAR
      i@1001 : Integer;
    BEGIN
      FullCompanyAddress := CompanyAddr[2];
      for i := 3 to 8 do begin
        if CompanyAddr[i] <> '' then
          FullCompanyAddress += ', ' + CompanyAddr[i];
      end;
    END;

    LOCAL PROCEDURE MakeParameterNameString@24(ParameterName@1000 : Text) : Text;
    BEGIN
      exit(STRSUBSTNO('<!--%1-->',ParameterName));
    END;

    LOCAL PROCEDURE ReplaceHTMLText@31(VAR HTMLText@1000 : Text;OldValue@1001 : Text;NewValue@1002 : Text);
    VAR
      Regex@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.RegularExpressions.Regex";
    BEGIN
      Regex := Regex.Regex(OldValue);
      if Regex.IsMatch(HTMLText) then
        HTMLText := Regex.Replace(HTMLText,NewValue);
    END;

    PROCEDURE ReplaceBodyFileSendTo@1(BodyFileName@1000 : Text;OldSendTo@1001 : Text;NewSendTo@1002 : Text);
    VAR
      InStream@1005 : InStream;
      BodyFile@1003 : File;
      HTMLText@1006 : Text;
      Buffer@1004 : Text;
    BEGIN
      BodyFile.OPEN(BodyFileName);
      BodyFile.CREATEINSTREAM(InStream);
      while not InStream.EOS do begin
        InStream.READTEXT(Buffer);
        HTMLText := HTMLText + Buffer;
      end;
      BodyFile.CLOSE;

      ReplaceHTMLText(HTMLText,OldSendTo,NewSendTo);
      SaveHTML(BodyFileName,HTMLText);
    END;

    [External]
    PROCEDURE SaveHTML@3(OutputFileName@1004 : Text;HTMLText@1000 : Text);
    VAR
      OutStream@1001 : OutStream;
      OutputFile@1002 : File;
    BEGIN
      OutputFile.WRITEMODE(true);
      OutputFile.CREATE(OutputFileName);
      OutputFile.CREATEOUTSTREAM(OutStream);
      OutStream.WRITETEXT(HTMLText,STRLEN(HTMLText));
      OutputFile.CLOSE;
    END;

    LOCAL PROCEDURE SliceSalesCoverLetterTemplate@20(VAR HTMLText@1000 : Text;VAR PaymentServicesSectionHTMLText@1005 : Text;VAR PaymentServiceRowHTMLText@1004 : Text;VAR SocialNetworksSectionHTMLText@1003 : Text;VAR SocialNetworkRowSectionHTMLText@1001 : Text);
    BEGIN
      SliceSection(HTMLText,PaymentServicesSectionHTMLText,'PaymentSevicesSection','PaymentSevices');
      SliceSection(PaymentServicesSectionHTMLText,PaymentServiceRowHTMLText,'PaymentServiceRowSection','PaymentServicesRows');
      SliceSection(HTMLText,SocialNetworksSectionHTMLText,'SocialNetworksSection','SocialNetworks');
      SliceSection(SocialNetworksSectionHTMLText,SocialNetworkRowSectionHTMLText,'SocialNetworkRowSection','CoverLetterSocialRow');
    END;

    LOCAL PROCEDURE SliceSection@28(VAR HTMLText@1000 : Text;VAR SectionHTMLText@1001 : Text;SectionName@1002 : Text;SectionHolderName@1003 : Text);
    VAR
      StartPosition@1004 : Integer;
      EndPosition@1005 : Integer;
      StartSectionParameter@1006 : Text;
      EndSectionParameter@1007 : Text;
      SectionHolderParameter@1008 : Text;
    BEGIN
      StartSectionParameter := MakeParameterNameString(STRSUBSTNO('%1.Start',SectionName));
      EndSectionParameter := MakeParameterNameString(STRSUBSTNO('%1.End',SectionName));
      SectionHolderParameter := MakeParameterNameString(SectionHolderName);

      StartPosition := STRPOS(HTMLText,StartSectionParameter);
      EndPosition := STRPOS(HTMLText,EndSectionParameter);

      SectionHTMLText :=
        COPYSTR(
          HTMLText,
          StartPosition + STRLEN(StartSectionParameter) + 1,
          EndPosition - StartPosition - STRLEN(StartSectionParameter) - 1);

      HTMLText :=
        COPYSTR(HTMLText,1,StartPosition - 1) +
        SectionHolderParameter +
        COPYSTR(HTMLText,EndPosition + STRLEN(EndSectionParameter));
    END;

    BEGIN
    END.
  }
}

