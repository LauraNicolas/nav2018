OBJECT Page 407 Resource Picture
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Resource Picture;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable=Resource;
    PageType=CardPart;
    OnOpenPage=BEGIN
                 CameraAvailable := CameraProvider.IsAvailable;
                 if CameraAvailable then
                   CameraProvider := CameraProvider.Create;
               END;

    OnAfterGetCurrRecord=BEGIN
                           SetEditableOnPictureActions;
                         END;

    ActionList=ACTIONS
    {
      { 2       ;    ;ActionContainer;
                      Name=ActionContainer2;
                      ActionContainerType=ActionItems }
      { 3       ;1   ;Action    ;
                      Name=TakePicture;
                      CaptionML=ENU=Take;
                      ToolTipML=ENU=Activate the camera on the device.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=CameraAvailable;
                      PromotedIsBig=true;
                      Image=Camera;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CameraOptions@1000 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraOptions";
                               BEGIN
                                 TESTFIELD("No.");
                                 TESTFIELD(Name);

                                 if not CameraAvailable then
                                   exit;

                                 CameraOptions := CameraOptions.CameraOptions;
                                 CameraOptions.Quality := 100;
                                 CameraProvider.RequestPictureAsync(CameraOptions);
                               END;
                                }
      { 4       ;1   ;Action    ;
                      Name=ImportPicture;
                      CaptionML=ENU=Import;
                      ToolTipML=ENU=Import a picture file.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Import;
                      OnAction=VAR
                                 FileManagement@1001 : Codeunit "File Management";
                                 FileName@1000 : Text;
                                 ClientFileName@1002 : Text;
                               BEGIN
                                 TESTFIELD("No.");
                                 TESTFIELD(Name);

                                 if Image.HASVALUE then
                                   if not CONFIRM(OverrideImageQst) then
                                     exit;

                                 FileName := FileManagement.UploadFile(SelectPictureTxt,ClientFileName);
                                 if FileName = '' then
                                   exit;

                                 CLEAR(Image);
                                 Image.IMPORTFILE(FileName,ClientFileName);
                                 if not INSERT(true) then
                                   MODIFY(true);

                                 if FileManagement.DeleteServerFile(FileName) then;
                               END;
                                }
      { 6       ;1   ;Action    ;
                      Name=ExportFile;
                      CaptionML=ENU=Export;
                      ToolTipML=ENU=Export the picture to a file.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=DeleteExportEnabled;
                      Image=Export;
                      OnAction=VAR
                                 NameValueBuffer@1002 : Record "Name/Value Buffer";
                                 TempNameValueBuffer@1004 : TEMPORARY Record "Name/Value Buffer";
                                 FileManagement@1001 : Codeunit "File Management";
                                 ToFile@1003 : Text;
                                 ExportPath@1005 : Text;
                               BEGIN
                                 TESTFIELD("No.");
                                 TESTFIELD(Name);

                                 NameValueBuffer.DELETEALL;
                                 ExportPath := TEMPORARYPATH + "No." + FORMAT(Image.MEDIAID);
                                 Image.EXPORTFILE(ExportPath);
                                 FileManagement.GetServerDirectoryFilesList(TempNameValueBuffer,TEMPORARYPATH);
                                 TempNameValueBuffer.SETFILTER(Name,STRSUBSTNO('%1*',ExportPath));
                                 TempNameValueBuffer.FINDFIRST;
                                 ToFile := STRSUBSTNO('%1 %2.jpg',"No.",Name);
                                 DOWNLOAD(TempNameValueBuffer.Name,DownloadImageTxt,'','',ToFile);
                                 if FileManagement.DeleteServerFile(TempNameValueBuffer.Name) then;
                               END;
                                }
      { 7       ;1   ;Action    ;
                      Name=DeletePicture;
                      CaptionML=ENU=Delete;
                      ToolTipML=ENU=Delete the record.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=DeleteExportEnabled;
                      Image=Delete;
                      OnAction=BEGIN
                                 TESTFIELD("No.");

                                 if not CONFIRM(DeleteImageQst) then
                                   exit;

                                 CLEAR(Image);
                                 MODIFY(true);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Field     ;
                Name=Image;
                ToolTipML=ENU=Specifies the picture that has been inserted for the resource.;
                ApplicationArea=#Jobs;
                SourceExpr=Image;
                ImplicitType=Media;
                ShowCaption=false }

  }
  CODE
  {
    VAR
      CameraProvider@1000 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraProvider" WITHEVENTS RUNONCLIENT;
      CameraAvailable@1002 : Boolean;
      OverrideImageQst@1007 : TextConst 'ENU=The existing picture will be replaced. Do you want to continue?';
      DeleteImageQst@1003 : TextConst 'ENU=Are you sure you want to delete the picture?';
      SelectPictureTxt@1001 : TextConst 'ENU=Select a picture to upload';
      DeleteExportEnabled@1005 : Boolean;
      DownloadImageTxt@1006 : TextConst 'ENU=Download image';

    LOCAL PROCEDURE SetEditableOnPictureActions@1();
    BEGIN
      DeleteExportEnabled := Image.HASVALUE;
    END;

    EVENT CameraProvider@1000::PictureAvailable@10(PictureName@1001 : Text;PictureFilePath@1000 : Text);
    VAR
      File@1003 : File;
      Instream@1004 : InStream;
    BEGIN
      if (PictureName = '') or (PictureFilePath = '') then
        exit;

      if Image.HASVALUE then
        if not CONFIRM(OverrideImageQst) then begin
          if ERASE(PictureFilePath) then;
          exit;
        end;

      File.OPEN(PictureFilePath);
      File.CREATEINSTREAM(Instream);

      CLEAR(Image);
      Image.IMPORTSTREAM(Instream,PictureName);
      if not INSERT(true) then
        MODIFY(true);

      File.CLOSE;
      if ERASE(PictureFilePath) then;
    END;

    BEGIN
    END.
  }
}

