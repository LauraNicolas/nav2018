OBJECT Page 1029 Job Invoices
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Job Invoices;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    SourceTable="Job Planning Line Invoice";
    PageType=List;
    SourceTableTemporary=true;
    RefreshOnActivate=true;
    OnInit=BEGIN
             ShowDetails := true;
           END;

    OnOpenPage=VAR
                 JobCreateInvoice@1000 : Codeunit "Job Create-Invoice";
               BEGIN
                 JobCreateInvoice.FindInvoices(Rec,JobNo,JobTaskNo,JobPlanningLineNo,DetailLevel);
               END;

    ActionList=ACTIONS
    {
      { 12      ;0   ;ActionContainer;
                      Name=ActionContainer12;
                      ActionContainerType=ActionItems }
      { 13      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 14      ;2   ;Action    ;
                      Name=OpenSalesInvoiceCreditMemo;
                      Ellipsis=true;
                      CaptionML=ENU=Open Sales Invoice/Credit Memo;
                      ToolTipML=ENU=Open the sales invoice or sales credit memo for the selected line.;
                      ApplicationArea=#Jobs;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=GetSourceDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 JobCreateInvoice@1001 : Codeunit "Job Create-Invoice";
                               BEGIN
                                 JobCreateInvoice.OpenSalesInvoice(Rec);
                                 JobCreateInvoice.FindInvoices(Rec,JobNo,JobTaskNo,JobPlanningLineNo,DetailLevel);
                                 if GET("Job No.","Job Task No.","Job Planning Line No.","Document Type","Document No.","Line No.") then;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=Document Type;
                ToolTipML=ENU=Specifies the information about the type of document. There are four options:;
                ApplicationArea=#Jobs;
                SourceExpr="Document Type";
                ImplicitType=Option }

    { 4   ;2   ;Field     ;
                Name=Document No.;
                ToolTipML=ENU=Specifies the number associated with the document. For example, if you have created an invoice, the field Specifies the invoice number.;
                ApplicationArea=#Jobs;
                SourceExpr="Document No.";
                ImplicitType=Code20 }

    { 5   ;2   ;Field     ;
                Name=Line No.;
                ToolTipML=ENU=Specifies the line number that is linked to the document. Numbers are created sequentially.;
                ApplicationArea=#All;
                SourceExpr="Line No.";
                Visible=ShowDetails;
                ImplicitType=Integer }

    { 6   ;2   ;Field     ;
                Name=Quantity Transferred;
                ToolTipML=ENU=Specifies the quantity transferred from the job planning line to the invoice or credit memo.;
                ApplicationArea=#Jobs;
                SourceExpr="Quantity Transferred";
                ImplicitType=Decimal }

    { 7   ;2   ;Field     ;
                Name=Transferred Date;
                ToolTipML=ENU=Specifies the date on which the invoice or credit document was created. The date is set to the posting date you specified when you created the invoice or credit memo.;
                ApplicationArea=#All;
                SourceExpr="Transferred Date";
                Visible=ShowDetails;
                ImplicitType=Date }

    { 8   ;2   ;Field     ;
                Name=Invoiced Date;
                ToolTipML=ENU=Specifies the date on which the invoice or credit memo was posted.;
                ApplicationArea=#All;
                SourceExpr="Invoiced Date";
                Visible=ShowDetails;
                ImplicitType=Date }

    { 9   ;2   ;Field     ;
                Name=Invoiced Amount (LCY);
                ToolTipML=ENU=Specifies the amount (LCY) that was posted from the invoice or credit memo. The amount is calculated based on Quantity, Line Discount %, and Unit Price.;
                ApplicationArea=#Jobs;
                SourceExpr="Invoiced Amount (LCY)";
                ImplicitType=Decimal }

    { 10  ;2   ;Field     ;
                Name=Invoiced Cost Amount (LCY);
                ToolTipML=ENU=Specifies the amount of the unit costs that has been posted from the invoice or credit memo. The amount is calculated based on Quantity, Unit Cost, and Line Discount %.;
                ApplicationArea=#Jobs;
                SourceExpr="Invoiced Cost Amount (LCY)";
                ImplicitType=Decimal }

    { 11  ;2   ;Field     ;
                Name=Job Ledger Entry No.;
                ToolTipML=ENU=Specifies a link to the job ledger entry that was created when the document was posted.;
                ApplicationArea=#All;
                SourceExpr="Job Ledger Entry No.";
                Visible=ShowDetails;
                ImplicitType=Integer }

  }
  CODE
  {
    VAR
      JobNo@1002 : Code[20];
      JobTaskNo@1003 : Code[20];
      JobPlanningLineNo@1004 : Integer;
      DetailLevel@1001 : 'All,"Per Job","Per Job Task","Per Job Planning Line"';
      ShowDetails@1006 : Boolean;

    [External]
    PROCEDURE SetPrJob@1(Job@1000 : Record Job);
    BEGIN
      DetailLevel := DetailLevel::"Per Job";
      JobNo := Job."No.";
    END;

    [External]
    PROCEDURE SetPrJobTask@2(JobTask@1000 : Record "Job Task");
    BEGIN
      DetailLevel := DetailLevel::"Per Job Task";
      JobNo := JobTask."Job No.";
      JobTaskNo := JobTask."Job Task No.";
    END;

    [External]
    PROCEDURE SetPrJobPlanningLine@3(JobPlanningLine@1000 : Record "Job Planning Line");
    BEGIN
      DetailLevel := DetailLevel::"Per Job Planning Line";
      JobNo := JobPlanningLine."Job No.";
      JobTaskNo := JobPlanningLine."Job Task No.";
      JobPlanningLineNo := JobPlanningLine."Line No.";
    END;

    PROCEDURE SetShowDetails@4(NewShowDetails@1000 : Boolean);
    BEGIN
      ShowDetails := NewShowDetails;
    END;

    BEGIN
    END.
  }
}

