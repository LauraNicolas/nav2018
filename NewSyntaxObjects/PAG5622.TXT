OBJECT Page 5622 Total Value Insured per FA
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Total Value Insured per FA;
    SaveValues=true;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable="Fixed Asset";
    DataCaptionExpr='';
    DataCaptionFields="No.",Description;
    PageType=Card;
    OnOpenPage=BEGIN
                 PeriodType := PeriodType::Year;
                 AmountType := AmountType::"Balance at Date";
                 NoOfColumns := GetMatrixDimension;
                 SetStartFilter(' ');
                 MATRIX_GenerateColumnCaptions(SetWanted::Initial);
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 77      ;1   ;Action    ;
                      Name=ShowMatrix;
                      CaptionML=ENU=&Show Matrix;
                      ToolTipML=ENU=View the data overview according to the selected filters and options.;
                      ApplicationArea=#FixedAssets;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=ShowMatrix;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MatrixForm@1097 : Page "T. Value Insured per FA Matrix";
                               BEGIN
                                 CLEAR(MatrixForm);
                                 MatrixForm.Load(
                                   MATRIX_CaptionSet,MatrixRecords,NoOfColumns,GETFILTER("FA Posting Date Filter"),RoundingFactor);
                                 MatrixForm.RUNMODAL;
                               END;
                                }
      { 1109    ;1   ;Action    ;
                      Name=Previous Set;
                      CaptionML=ENU=Previous Set;
                      ToolTipML=ENU=Go to the previous set of data.;
                      ApplicationArea=#FixedAssets;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(SetWanted::Previous);
                               END;
                                }
      { 1111    ;1   ;Action    ;
                      Name=Next Set;
                      CaptionML=ENU=Next Set;
                      ToolTipML=ENU=Go to the next set of data.;
                      ApplicationArea=#FixedAssets;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(SetWanted::Next);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 14  ;1   ;Group     ;
                Name=Options;
                CaptionML=ENU=Options }

    { 19  ;2   ;Field     ;
                Name=RoundingFactor;
                CaptionML=ENU=Rounding Factor;
                ToolTipML=ENU=Specifies the factor that is used to round the amounts.;
                OptionCaptionML=ENU=None,1,1000,1000000;
                ApplicationArea=#FixedAssets;
                SourceExpr=RoundingFactor;
                AutoFormatType=1;
                ImplicitType=Option }

    { 1906098301;1;Group  ;
                Name=Matrix Options;
                CaptionML=ENU=Matrix Options }

    { 1106;2   ;Field     ;
                Name=PeriodType;
                CaptionML=ENU=View by;
                ToolTipML=ENU=Specifies by which period amounts are displayed.;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                ApplicationArea=#FixedAssets;
                SourceExpr=PeriodType;
                ImplicitType=Option }

    { 1107;2   ;Field     ;
                Name=AmountType;
                CaptionML=ENU=View as;
                ToolTipML=ENU=Specifies how amounts are displayed. Net Change: The net change in the balance for the selected period. Balance at Date: The balance as of the last day in the selected period.;
                OptionCaptionML=ENU=Net Change,Balance at Date;
                ApplicationArea=#FixedAssets;
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             SetStartFilter(' ');
                           END;

                ImplicitType=Option }

    { 1108;2   ;Field     ;
                Name=MATRIX_CaptionRange;
                CaptionML=ENU=Column Set;
                ToolTipML=ENU=Specifies the range of values that are displayed in the matrix window, for example, the total period. To change the contents of the field, choose Next Set or Previous Set.;
                ApplicationArea=#FixedAssets;
                SourceExpr=MATRIX_CaptionRange;
                Editable=FALSE;
                ImplicitType=Text80 }

  }
  CODE
  {
    VAR
      Calendar@1010 : Record Date;
      MatrixRecord@1005 : Record Insurance;
      MatrixRecords@1098 : ARRAY [32] OF Record Insurance;
      MATRIX_CaptionSet@1099 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1100 : Text[80];
      MATRIX_PKFirstRecInCurrSet@1104 : Text;
      MATRIX_CurrentNoOfColumns@1105 : Integer;
      PeriodType@1002 : 'Day,Week,Month,Quarter,Year,"Accounting Period"';
      RoundingFactor@1003 : 'None,"1","1000","1000000"';
      AmountType@1004 : '"Net Change","Balance at Date"';
      NoOfColumns@1006 : Integer;
      SetWanted@1011 : 'Initial,Previous,Same,Next';

    [Internal]
    PROCEDURE SetStartFilter@1(SearchString@1001 : Code[10]);
    VAR
      PeriodFormMgt@1000 : Codeunit PeriodFormManagement;
    BEGIN
      if GETFILTER("FA Posting Date Filter") <> '' then begin
        Calendar.SETFILTER("Period Start",GETFILTER("FA Posting Date Filter"));
        if not PeriodFormMgt.FindDate('+',Calendar,PeriodType) then
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      end;
      PeriodFormMgt.FindDate(SearchString,Calendar,PeriodType);
      if AmountType = AmountType::"Net Change" then begin
        SETRANGE("FA Posting Date Filter",Calendar."Period Start",Calendar."Period End");
        if GETRANGEMIN("FA Posting Date Filter") = GETRANGEMAX("FA Posting Date Filter") then
          SETRANGE("FA Posting Date Filter",GETRANGEMIN("FA Posting Date Filter"));
      end else
        SETRANGE("FA Posting Date Filter",0D,Calendar."Period End");
    END;

    LOCAL PROCEDURE MATRIX_GenerateColumnCaptions@1107(SetWanted@1001 : 'First,Previous,Same,Next');
    VAR
      MatrixMgt@1003 : Codeunit "Matrix Management";
      RecRef@1002 : RecordRef;
      CurrentMatrixRecordOrdinal@1000 : Integer;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MatrixRecords);
      CurrentMatrixRecordOrdinal := 1;

      RecRef.GETTABLE(MatrixRecord);
      RecRef.SETTABLE(MatrixRecord);

      MatrixMgt.GenerateMatrixData(RecRef,SetWanted,ARRAYLEN(MatrixRecords),1,MATRIX_PKFirstRecInCurrSet,
        MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);

      if MATRIX_CurrentNoOfColumns > 0 then begin
        MatrixRecord.SETPOSITION(MATRIX_PKFirstRecInCurrSet);
        MatrixRecord.FIND;
        repeat
          MatrixRecords[CurrentMatrixRecordOrdinal].COPY(MatrixRecord);
          CurrentMatrixRecordOrdinal := CurrentMatrixRecordOrdinal + 1;
        until (CurrentMatrixRecordOrdinal > MATRIX_CurrentNoOfColumns) or (MatrixRecord.NEXT <> 1);
      end;
    END;

    LOCAL PROCEDURE GetMatrixDimension@2() : Integer;
    BEGIN
      exit(ARRAYLEN(MATRIX_CaptionSet));
    END;

    BEGIN
    END.
  }
}

