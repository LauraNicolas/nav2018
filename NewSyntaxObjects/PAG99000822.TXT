OBJECT Page 99000822 Order Tracking
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Order Tracking;
    SourceTable="Order Tracking Entry";
    DataCaptionExpr=TrackingMgt.GetCaption;
    PageType=Worksheet;
    OnInit=BEGIN
             UntrackedButtonEnable := true;
           END;

    OnOpenPage=BEGIN
                 if not Item.GET(CurrItemNo) then
                   CLEAR(Item);
                 TrackingMgt.FindRecords;
                 DemandedByVisible := TrackingMgt.IsSearchUp;
                 SuppliedByVisible := not TrackingMgt.IsSearchUp;

                 CurrUntrackedQuantity := CurrQuantity - TrackingMgt.TrackedQuantity;

                 UntrackedButtonEnable := IsPlanning;
               END;

    OnFindRecord=BEGIN
                   exit(TrackingMgt.FindRecord(Which,Rec));
                 END;

    OnNextRecord=BEGIN
                   exit(TrackingMgt.GetNextRecord(Steps,Rec));
                 END;

    OnAfterGetRecord=BEGIN
                       SuppliedbyOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 2       ;1   ;Action    ;
                      Name=UntrackedButton;
                      CaptionML=ENU=&Untracked Qty.;
                      ApplicationArea=#Planning;
                      Promoted=true;
                      Enabled=UntrackedButtonEnable;
                      Image=UntrackedQuantity;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Transparency.DrillDownUntrackedQty(TrackingMgt.GetCaption);
                               END;
                                }
      { 28      ;1   ;Action    ;
                      Name=Show;
                      CaptionML=ENU=&Show;
                      ToolTipML=ENU=View the order tracking details.;
                      ApplicationArea=#Planning;
                      Promoted=true;
                      Image=View;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 LookupName;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 27  ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 37  ;2   ;Field     ;
                Name=CurrItemNo;
                CaptionML=ENU=Item No.;
                ToolTipML=ENU=Specifies the number of the item related to the order.;
                ApplicationArea=#Advanced;
                SourceExpr=CurrItemNo;
                Editable=FALSE;
                ImplicitType=Code20 }

    { 10  ;2   ;Field     ;
                Name=StartingDate;
                CaptionML=ENU=Starting Date;
                ToolTipML=ENU=Specifies the starting date for the time period for which you want to track the order.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr=StartingDate;
                Editable=FALSE;
                ImplicitType=Date }

    { 12  ;2   ;Field     ;
                Name=EndingDate;
                CaptionML=ENU=Ending Date;
                ToolTipML=ENU=Specifies the end date.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr=EndingDate;
                Editable=FALSE;
                ImplicitType=Date }

    { 7   ;2   ;Field     ;
                Name=Total Quantity;
                CaptionML=ENU=Quantity;
                ToolTipML=ENU=Specifies the outstanding quantity on the line from which you opened the window.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr=CurrQuantity + DerivedTrackingQty;
                Editable=FALSE }

    { 32  ;2   ;Field     ;
                Name=Untracked Quantity;
                CaptionML=ENU=Untracked Quantity;
                ToolTipML=ENU=Specifies the amount of the quantity not directly related to a countering demand or supply by order tracking or reservations.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr=CurrUntrackedQuantity + DerivedTrackingQty;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              if not IsPlanning then
                                MESSAGE(Text001)
                              else
                                Transparency.DrillDownUntrackedQty(TrackingMgt.GetCaption);
                            END;
                             }

    { 16  ;1   ;Group     ;
                Name=Group16;
                Editable=FALSE;
                IndentationColumnName=SuppliedByIndent;
                IndentationControls=Name;
                GroupType=Repeater }

    { 24  ;2   ;Field     ;
                Name=Entry No.;
                ToolTipML=ENU=Specifies the number of the order tracking entry.;
                ApplicationArea=#Advanced;
                SourceExpr="Entry No.";
                Visible=FALSE;
                ImplicitType=Integer }

    { 20  ;2   ;Field     ;
                Name=Name;
                ToolTipML=ENU=Specifies the name of the line that the items are tracked from.;
                ApplicationArea=#Advanced;
                SourceExpr=Name;
                OnLookup=BEGIN
                           LookupName;
                         END;

                ImplicitType=Text80 }

    { 22  ;2   ;Field     ;
                Name=Demanded by;
                ToolTipML=ENU=Specifies the source of the demand that the supply is tracked from.;
                ApplicationArea=#Advanced;
                SourceExpr="Demanded by";
                Visible=DemandedByVisible;
                OnLookup=BEGIN
                           LookupLine
                         END;

                ImplicitType=Text80 }

    { 17  ;2   ;Field     ;
                Name=Supplied by;
                ToolTipML=ENU=Specifies the source of the supply that fills the demand you track from, such as, a production order line.;
                ApplicationArea=#Advanced;
                SourceExpr="Supplied by";
                Visible=SuppliedByVisible;
                OnLookup=BEGIN
                           LookupLine;
                         END;

                ImplicitType=Text80 }

    { 34  ;2   ;Field     ;
                Name=Warning;
                ToolTipML=ENU=Specifies there is a date conflict in the order tracking entries for this line.;
                ApplicationArea=#Advanced;
                SourceExpr=Warning;
                Visible=FALSE;
                ImplicitType=Boolean }

    { 1   ;2   ;Field     ;
                Name=Starting Date;
                ToolTipML=ENU=Specifies the starting date of the line that the items are tracked from.;
                ApplicationArea=#Advanced;
                SourceExpr="Starting Date";
                ImplicitType=Date }

    { 13  ;2   ;Field     ;
                Name=Ending Date;
                ToolTipML=ENU=Specifies the ending date of the line that the items are tracked from.;
                ApplicationArea=#Advanced;
                SourceExpr="Ending Date";
                ImplicitType=Date }

    { 15  ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the quantity, in the base unit of measure, of the item that has been tracked in this entry.;
                ApplicationArea=#Advanced;
                SourceExpr=Quantity;
                ImplicitType=Decimal }

    { 4   ;2   ;Field     ;
                Name=Shipment Date;
                ToolTipML=ENU=Specifies when items on the document are shipped or were shipped. A shipment date is usually calculated from a requested delivery date plus lead time.;
                ApplicationArea=#Advanced;
                SourceExpr="Shipment Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 6   ;2   ;Field     ;
                Name=Expected Receipt Date;
                ToolTipML=ENU=Specifies the date when the tracked items are expected to enter the inventory.;
                ApplicationArea=#Advanced;
                SourceExpr="Expected Receipt Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 29  ;2   ;Field     ;
                Name=Item No.;
                ToolTipML=ENU=Specifies the number of the item that has been tracked in this entry.;
                ApplicationArea=#Advanced;
                SourceExpr="Item No.";
                ImplicitType=Code20 }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Item@1000 : Record Item;
      TrackingMgt@1016 : Codeunit OrderTrackingManagement;
      Transparency@1030 : Codeunit "Planning Transparency";
      CurrItemNo@1017 : Code[20];
      CurrQuantity@1018 : Decimal;
      CurrUntrackedQuantity@1019 : Decimal;
      StartingDate@1020 : Date;
      EndingDate@1021 : Date;
      DerivedTrackingQty@1028 : Decimal;
      IsPlanning@1029 : Boolean;
      Text001@1031 : TextConst 'ENU=Information about untracked quantity is only available for calculated planning lines.';
      DemandedByVisible@19000447 : Boolean INDATASET;
      SuppliedByVisible@19035234 : Boolean INDATASET;
      UntrackedButtonEnable@19038303 : Boolean INDATASET;
      SuppliedByIndent@19043987 : Integer INDATASET;

    [External]
    PROCEDURE SetSalesLine@24(VAR CurrentSalesLine@1000 : Record "Sales Line");
    BEGIN
      TrackingMgt.SetSalesLine(CurrentSalesLine);

      CurrItemNo := CurrentSalesLine."No.";
      CurrQuantity := CurrentSalesLine."Outstanding Qty. (Base)";
      StartingDate := CurrentSalesLine."Shipment Date";
      EndingDate := CurrentSalesLine."Shipment Date";
    END;

    [External]
    PROCEDURE SetReqLine@23(VAR CurrentReqLine@1000 : Record "Requisition Line");
    BEGIN
      TrackingMgt.SetReqLine(CurrentReqLine);

      CurrItemNo := CurrentReqLine."No.";
      CurrQuantity := CurrentReqLine."Quantity (Base)";
      StartingDate := CurrentReqLine."Due Date";
      EndingDate := CurrentReqLine."Due Date";

      IsPlanning := CurrentReqLine."Planning Line Origin" = CurrentReqLine."Planning Line Origin"::Planning;
      if IsPlanning then
        Transparency.SetCurrReqLine(CurrentReqLine);
    END;

    [External]
    PROCEDURE SetPurchLine@22(VAR CurrentPurchLine@1000 : Record "Purchase Line");
    BEGIN
      TrackingMgt.SetPurchLine(CurrentPurchLine);

      CurrItemNo := CurrentPurchLine."No.";
      CurrQuantity := CurrentPurchLine."Outstanding Qty. (Base)";

      StartingDate := CurrentPurchLine."Expected Receipt Date";
      EndingDate := CurrentPurchLine."Expected Receipt Date";
    END;

    [External]
    PROCEDURE SetProdOrderLine@19(VAR CurrentProdOrderLine@1000 : Record "Prod. Order Line");
    BEGIN
      TrackingMgt.SetProdOrderLine(CurrentProdOrderLine);

      CurrItemNo := CurrentProdOrderLine."Item No.";
      CurrQuantity := CurrentProdOrderLine."Remaining Qty. (Base)";
      StartingDate := CurrentProdOrderLine."Starting Date";
      EndingDate := CurrentProdOrderLine."Ending Date";
    END;

    [External]
    PROCEDURE SetProdOrderComponent@18(VAR CurrentProdOrderComp@1000 : Record "Prod. Order Component");
    BEGIN
      TrackingMgt.SetProdOrderComp(CurrentProdOrderComp);

      CurrItemNo := CurrentProdOrderComp."Item No.";
      CurrQuantity := CurrentProdOrderComp."Remaining Qty. (Base)";

      StartingDate := CurrentProdOrderComp."Due Date";
      EndingDate := CurrentProdOrderComp."Due Date";
    END;

    [External]
    PROCEDURE SetAsmHeader@8(VAR CurrentAsmHeader@1000 : Record "Assembly Header");
    BEGIN
      TrackingMgt.SetAsmHeader(CurrentAsmHeader);

      CurrItemNo := CurrentAsmHeader."Item No.";
      CurrQuantity := CurrentAsmHeader."Remaining Quantity (Base)";

      StartingDate := CurrentAsmHeader."Due Date";
      EndingDate := CurrentAsmHeader."Due Date";
    END;

    [External]
    PROCEDURE SetAsmLine@9(VAR CurrentAsmLine@1000 : Record "Assembly Line");
    BEGIN
      TrackingMgt.SetAsmLine(CurrentAsmLine);

      CurrItemNo := CurrentAsmLine."No.";
      CurrQuantity := CurrentAsmLine."Remaining Quantity (Base)";
      StartingDate := CurrentAsmLine."Due Date";
      EndingDate := CurrentAsmLine."Due Date";
    END;

    [External]
    PROCEDURE SetPlanningComponent@1(VAR CurrentPlanningComponent@1000 : Record "Planning Component");
    BEGIN
      TrackingMgt.SetPlanningComponent(CurrentPlanningComponent);

      CurrItemNo := CurrentPlanningComponent."Item No.";
      DerivedTrackingQty := CurrentPlanningComponent."Expected Quantity (Base)" - CurrentPlanningComponent."Net Quantity (Base)";
      CurrQuantity := CurrentPlanningComponent."Net Quantity (Base)";
      StartingDate := CurrentPlanningComponent."Due Date";
      EndingDate := CurrentPlanningComponent."Due Date";
    END;

    [External]
    PROCEDURE SetItemLedgEntry@4(VAR CurrentItemLedgEntry@1000 : Record "Item Ledger Entry");
    BEGIN
      TrackingMgt.SetItemLedgEntry(CurrentItemLedgEntry);

      CurrItemNo := CurrentItemLedgEntry."Item No.";
      CurrQuantity := CurrentItemLedgEntry."Remaining Quantity";
      StartingDate := CurrentItemLedgEntry."Posting Date";
      EndingDate := CurrentItemLedgEntry."Posting Date";
    END;

    [External]
    PROCEDURE SetMultipleItemLedgEntries@3(VAR TempItemLedgEntry@1001 : TEMPORARY Record "Item Ledger Entry";SourceType@1006 : Integer;SourceSubtype@1005 : Integer;SourceID@1004 : Code[20];SourceBatchName@1003 : Code[10];SourceProdOrderLine@1002 : Integer;SourceRefNo@1000 : Integer);
    BEGIN
      // Used from posted shipment and receipt with item tracking.

      TrackingMgt.SetMultipleItemLedgEntries(TempItemLedgEntry,SourceType,SourceSubtype,SourceID,
        SourceBatchName,SourceProdOrderLine,SourceRefNo);

      TempItemLedgEntry.CALCSUMS(TempItemLedgEntry."Remaining Quantity");

      CurrItemNo := TempItemLedgEntry."Item No.";
      CurrQuantity := TempItemLedgEntry."Remaining Quantity";
      StartingDate := TempItemLedgEntry."Posting Date";
      EndingDate := TempItemLedgEntry."Posting Date";
    END;

    [External]
    PROCEDURE SetServLine@6(VAR CurrentServLine@1000 : Record "Service Line");
    BEGIN
      TrackingMgt.SetServLine(CurrentServLine);

      CurrItemNo := CurrentServLine."No.";
      CurrQuantity := CurrentServLine."Outstanding Qty. (Base)";
      StartingDate := CurrentServLine."Needed by Date";
      EndingDate := CurrentServLine."Needed by Date";
    END;

    [External]
    PROCEDURE SetJobPlanningLine@7(VAR CurrentJobPlanningLine@1000 : Record "Job Planning Line");
    BEGIN
      TrackingMgt.SetJobPlanningLine(CurrentJobPlanningLine);

      CurrItemNo := CurrentJobPlanningLine."No.";
      CurrQuantity := CurrentJobPlanningLine."Remaining Qty. (Base)";
      StartingDate := CurrentJobPlanningLine."Planning Date";
      EndingDate := CurrentJobPlanningLine."Planning Date";
    END;

    LOCAL PROCEDURE LookupLine@2();
    VAR
      ReservationMgt@1000 : Codeunit "Reservation Management";
    BEGIN
      ReservationMgt.LookupLine("For Type","For Subtype","For ID","For Batch Name",
        "For Prod. Order Line","For Ref. No.");
    END;

    LOCAL PROCEDURE LookupName@5();
    VAR
      ReservationMgt@1000 : Codeunit "Reservation Management";
    BEGIN
      ReservationMgt.LookupDocument("From Type","From Subtype","From ID","From Batch Name",
        "From Prod. Order Line","From Ref. No.");
    END;

    LOCAL PROCEDURE SuppliedbyOnFormat@19023034();
    BEGIN
      SuppliedByIndent := Level - 1;
    END;

    BEGIN
    END.
  }
}

