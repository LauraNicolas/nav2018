OBJECT Table 5480 Tax Group Buffer
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRename=BEGIN
               ERROR(CannotChangeIDErr);
             END;

    CaptionML=ENU=Tax Group Buffer;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=ENU=Code;
                                                   NotBlank=true }
    { 2   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 8000;   ;Id                  ;GUID          ;CaptionML=ENU=Id }
    { 8005;   ;Last Modified DateTime;DateTime    ;CaptionML=ENU=Last Modified DateTime }
    { 9600;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=[@@@={Locked};
                                                                    ENU=Sales Tax,VAT];
                                                   OptionString="Sales Tax",VAT }
  }
  KEYS
  {
    {    ;Id                                      ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CannotChangeIDErr@1001 : TextConst '@@@={Locked};ENU=The id cannot be changed.';
      RecordMustBeTemporaryErr@1000 : TextConst 'ENU=Tax Group Entity must be used as a temporary record.';

    PROCEDURE PropagateInsert@1();
    BEGIN
      PropagateUpdate(true);
    END;

    PROCEDURE PropagateModify@2();
    BEGIN
      PropagateUpdate(false);
    END;

    LOCAL PROCEDURE PropagateUpdate@4(Insert@1000 : Boolean);
    VAR
      GeneralLedgerSetup@1001 : Record "General Ledger Setup";
      VATProductPostingGroup@1002 : Record "VAT Product Posting Group";
      TaxGroup@1003 : Record "Tax Group";
    BEGIN
      if not ISTEMPORARY then
        ERROR(RecordMustBeTemporaryErr);

      if GeneralLedgerSetup.UseVat then begin
        if Insert then begin
          VATProductPostingGroup.TRANSFERFIELDS(Rec,true);
          VATProductPostingGroup.INSERT(true)
        end else begin
          if xRec.Code <> Code then begin
            VATProductPostingGroup.GET(xRec.Code);
            VATProductPostingGroup.RENAME(Code);
          end;

          VATProductPostingGroup.TRANSFERFIELDS(Rec,true);
          VATProductPostingGroup.MODIFY(true);
        end;

        UpdateFromVATProductPostingGroup(VATProductPostingGroup);
      end else begin
        if Insert then begin
          TaxGroup.TRANSFERFIELDS(Rec,true);
          TaxGroup.INSERT(true)
        end else begin
          if xRec.Code <> Code then begin
            TaxGroup.GET(xRec.Code);
            TaxGroup.RENAME(true)
          end;

          TaxGroup.TRANSFERFIELDS(Rec,true);
          TaxGroup.MODIFY(true);
        end;

        UpdateFromTaxGroup(TaxGroup);
      end;
    END;

    PROCEDURE PropagateDelete@3();
    VAR
      GeneralLedgerSetup@1002 : Record "General Ledger Setup";
      VATProductPostingGroup@1000 : Record "VAT Product Posting Group";
      TaxGroup@1001 : Record "Tax Group";
    BEGIN
      if GeneralLedgerSetup.UseVat then begin
        VATProductPostingGroup.GET(Code);
        VATProductPostingGroup.DELETE(true);
      end else begin
        TaxGroup.GET(Code);
        TaxGroup.DELETE(true);
      end;
    END;

    PROCEDURE LoadRecords@7() : Boolean;
    VAR
      GeneralLedgerSetup@1000 : Record "General Ledger Setup";
    BEGIN
      if not ISTEMPORARY then
        ERROR(RecordMustBeTemporaryErr);

      if GeneralLedgerSetup.UseVat then
        LoadFromVATProductPostingGroup
      else
        LoadFromTaxGroup;

      exit(FINDFIRST);
    END;

    LOCAL PROCEDURE LoadFromTaxGroup@18();
    VAR
      TaxGroup@1000 : Record "Tax Group";
    BEGIN
      if not TaxGroup.FINDSET then
        exit;

      repeat
        UpdateFromTaxGroup(TaxGroup);
        INSERT;
      until TaxGroup.NEXT = 0;
    END;

    LOCAL PROCEDURE LoadFromVATProductPostingGroup@19();
    VAR
      VATProductPostingGroup@1000 : Record "VAT Product Posting Group";
    BEGIN
      if not VATProductPostingGroup.FINDSET then
        exit;

      repeat
        UpdateFromVATProductPostingGroup(VATProductPostingGroup);
        INSERT;
      until VATProductPostingGroup.NEXT = 0;
    END;

    LOCAL PROCEDURE UpdateFromVATProductPostingGroup@5(VAR VATProductPostingGroup@1000 : Record "VAT Product Posting Group");
    BEGIN
      TRANSFERFIELDS(VATProductPostingGroup,true);
      Type := Type::VAT;
    END;

    LOCAL PROCEDURE UpdateFromTaxGroup@6(VAR TaxGroup@1000 : Record "Tax Group");
    BEGIN
      TRANSFERFIELDS(TaxGroup,true);
      Type := Type::"Sales Tax";
    END;

    BEGIN
    END.
  }
}

