OBJECT Codeunit 5656 InsuranceJnlManagement
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Insurance Journal Template"=imd,
                TableData "Insurance Journal Batch"=imd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=INSURANCE';
      Text001@1001 : TextConst 'ENU=Insurance Journal';
      Text002@1002 : TextConst 'ENU=DEFAULT';
      Text003@1003 : TextConst 'ENU=Default Journal';
      OldInsuranceNo@1004 : Code[20];
      OldFANo@1005 : Code[20];
      OpenFromBatch@1006 : Boolean;

    [External]
    PROCEDURE TemplateSelection@1(PageID@1003 : Integer;VAR InsuranceJnlLine@1002 : Record "Insurance Journal Line";VAR JnlSelected@1001 : Boolean);
    VAR
      InsuranceJnlTempl@1000 : Record "Insurance Journal Template";
    BEGIN
      JnlSelected := true;

      InsuranceJnlTempl.RESET;
      InsuranceJnlTempl.SETRANGE("Page ID",PageID);

      case InsuranceJnlTempl.COUNT of
        0:
          begin
            InsuranceJnlTempl.INIT;
            InsuranceJnlTempl.Name := Text000;
            InsuranceJnlTempl.Description := Text001;
            InsuranceJnlTempl.VALIDATE("Page ID");
            InsuranceJnlTempl.INSERT;
            COMMIT;
          end;
        1:
          InsuranceJnlTempl.FINDFIRST;
        else
          JnlSelected := PAGE.RUNMODAL(0,InsuranceJnlTempl) = ACTION::LookupOK;
      end;
      if JnlSelected then begin
        InsuranceJnlLine.FILTERGROUP := 2;
        InsuranceJnlLine.SETRANGE("Journal Template Name",InsuranceJnlTempl.Name);
        InsuranceJnlLine.FILTERGROUP := 0;
        if OpenFromBatch then begin
          InsuranceJnlLine."Journal Template Name" := '';
          PAGE.RUN(InsuranceJnlTempl."Page ID",InsuranceJnlLine);
        end;
      end;
    END;

    [External]
    PROCEDURE TemplateSelectionFromBatch@10(VAR InsuranceJnlBatch@1000 : Record "Insurance Journal Batch");
    VAR
      InsuranceJnlLine@1002 : Record "Insurance Journal Line";
      InsuranceJnlTempl@1003 : Record "Insurance Journal Template";
    BEGIN
      OpenFromBatch := true;
      InsuranceJnlTempl.GET(InsuranceJnlBatch."Journal Template Name");
      InsuranceJnlTempl.TESTFIELD("Page ID");
      InsuranceJnlBatch.TESTFIELD(Name);

      InsuranceJnlLine.FILTERGROUP := 2;
      InsuranceJnlLine.SETRANGE("Journal Template Name",InsuranceJnlTempl.Name);
      InsuranceJnlLine.FILTERGROUP := 0;

      InsuranceJnlLine."Journal Template Name" := '';
      InsuranceJnlLine."Journal Batch Name" := InsuranceJnlBatch.Name;
      PAGE.RUN(InsuranceJnlTempl."Page ID",InsuranceJnlLine);
    END;

    [External]
    PROCEDURE OpenJournal@2(VAR CurrentJnlBatchName@1000 : Code[10];VAR InsuranceJnlLine@1001 : Record "Insurance Journal Line");
    BEGIN
      CheckTemplateName(InsuranceJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
      InsuranceJnlLine.FILTERGROUP := 2;
      InsuranceJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      InsuranceJnlLine.FILTERGROUP := 0;
    END;

    [External]
    PROCEDURE OpenJnlBatch@12(VAR InsuranceJnlBatch@1000 : Record "Insurance Journal Batch");
    VAR
      InsuranceJnlTemplate@1002 : Record "Insurance Journal Template";
      InsuranceJnlLine@1004 : Record "Insurance Journal Line";
      JnlSelected@1003 : Boolean;
    BEGIN
      if InsuranceJnlBatch.GETFILTER("Journal Template Name") <> '' then
        exit;
      InsuranceJnlBatch.FILTERGROUP(2);
      if InsuranceJnlBatch.GETFILTER("Journal Template Name") <> '' then begin
        InsuranceJnlBatch.FILTERGROUP(0);
        exit;
      end;
      InsuranceJnlBatch.FILTERGROUP(0);

      if not InsuranceJnlBatch.FIND('-') then begin
        if not InsuranceJnlTemplate.FINDFIRST then
          TemplateSelection(0,InsuranceJnlLine,JnlSelected);
        if InsuranceJnlTemplate.FINDFIRST then
          CheckTemplateName(InsuranceJnlTemplate.Name,InsuranceJnlBatch.Name);
      end;
      InsuranceJnlBatch.FIND('-');
      JnlSelected := true;
      if InsuranceJnlBatch.GETFILTER("Journal Template Name") <> '' then
        InsuranceJnlTemplate.SETRANGE(Name,InsuranceJnlBatch.GETFILTER("Journal Template Name"));
      case InsuranceJnlTemplate.COUNT of
        1:
          InsuranceJnlTemplate.FINDFIRST;
        else
          JnlSelected := PAGE.RUNMODAL(0,InsuranceJnlTemplate) = ACTION::LookupOK;
      end;
      if not JnlSelected then
        ERROR('');

      InsuranceJnlBatch.FILTERGROUP(2);
      InsuranceJnlBatch.SETRANGE("Journal Template Name",InsuranceJnlTemplate.Name);
      InsuranceJnlBatch.FILTERGROUP(0);
    END;

    [External]
    PROCEDURE CheckName@4(CurrentJnlBatchName@1000 : Code[10];VAR InsuranceJnlLine@1001 : Record "Insurance Journal Line");
    VAR
      InsuranceJnlBatch@1002 : Record "Insurance Journal Batch";
    BEGIN
      InsuranceJnlBatch.GET(InsuranceJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
    END;

    [External]
    PROCEDURE SetName@5(CurrentJnlBatchName@1000 : Code[10];VAR InsuranceJnlLine@1001 : Record "Insurance Journal Line");
    BEGIN
      InsuranceJnlLine.FILTERGROUP := 2;
      InsuranceJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      InsuranceJnlLine.FILTERGROUP := 0;
      if InsuranceJnlLine.FIND('-') then;
    END;

    [External]
    PROCEDURE LookupName@6(VAR CurrentJnlBatchName@1000 : Code[10];VAR InsuranceJnlLine@1001 : Record "Insurance Journal Line");
    VAR
      InsuranceJnlBatch@1002 : Record "Insurance Journal Batch";
    BEGIN
      COMMIT;
      InsuranceJnlBatch."Journal Template Name" := InsuranceJnlLine.GETRANGEMAX("Journal Template Name");
      InsuranceJnlBatch.Name := InsuranceJnlLine.GETRANGEMAX("Journal Batch Name");
      InsuranceJnlBatch.FILTERGROUP(2);
      InsuranceJnlBatch.SETRANGE("Journal Template Name",InsuranceJnlBatch."Journal Template Name");
      InsuranceJnlBatch.FILTERGROUP(0);
      if PAGE.RUNMODAL(0,InsuranceJnlBatch) = ACTION::LookupOK then begin
        CurrentJnlBatchName := InsuranceJnlBatch.Name;
        SetName(CurrentJnlBatchName,InsuranceJnlLine);
      end;
    END;

    LOCAL PROCEDURE CheckTemplateName@3(CurrentJnlTemplateName@1000 : Code[10];VAR CurrentJnlBatchName@1001 : Code[10]);
    VAR
      InsuranceJnlBatch@1002 : Record "Insurance Journal Batch";
    BEGIN
      if not InsuranceJnlBatch.GET(CurrentJnlTemplateName,CurrentJnlBatchName) then begin
        InsuranceJnlBatch.SETRANGE("Journal Template Name",CurrentJnlTemplateName);
        if not InsuranceJnlBatch.FINDFIRST then begin
          InsuranceJnlBatch.INIT;
          InsuranceJnlBatch."Journal Template Name" := CurrentJnlTemplateName;
          InsuranceJnlBatch.SetupNewBatch;
          InsuranceJnlBatch.Name := Text002;
          InsuranceJnlBatch.Description := Text003;
          InsuranceJnlBatch.INSERT(true);
          COMMIT;
        end;
        CurrentJnlBatchName := InsuranceJnlBatch.Name;
      end;
    END;

    [External]
    PROCEDURE GetDescriptions@7(InsuranceJnlLine@1000 : Record "Insurance Journal Line";VAR InsuranceDescription@1001 : Text[50];VAR FADescription@1002 : Text[50]);
    VAR
      Insurance@1003 : Record Insurance;
      FA@1004 : Record "Fixed Asset";
    BEGIN
      if InsuranceJnlLine."Insurance No." <> OldInsuranceNo then begin
        InsuranceDescription := '';
        if InsuranceJnlLine."Insurance No." <> '' then
          if Insurance.GET(InsuranceJnlLine."Insurance No.") then
            InsuranceDescription := Insurance.Description;
        OldInsuranceNo := InsuranceJnlLine."Insurance No.";
      end;
      if InsuranceJnlLine."FA No." <> OldFANo then begin
        FADescription := '';
        if InsuranceJnlLine."FA No." <> '' then
          if FA.GET(InsuranceJnlLine."FA No.") then
            FADescription := FA.Description;
        OldFANo := FA."No.";
      end;
    END;

    BEGIN
    END.
  }
}

