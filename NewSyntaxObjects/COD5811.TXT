OBJECT Codeunit 5811 Change Exp. Cost Post. to G/L
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    TableNo="Inventory Setup";
    Permissions=TableData "Value Entry"=rm,
                TableData "Avg. Cost Adjmt. Entry Point"=id,
                TableData "Post Value Entry to G/L"=id;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=If you change the %1, the program must update table %2.';
      Text001@1001 : TextConst 'ENU=This can take several hours.\';
      Text002@1002 : TextConst 'ENU=Do you really want to change the %1?';
      Text003@1003 : TextConst 'ENU=The change has been cancelled.';
      Text004@1004 : TextConst 'ENU=Processing entries...\\';
      Text005@1005 : TextConst 'ENU=Item No. #1########## @2@@@@@@@@@@@@@';
      Text007@1007 : TextConst 'ENU=%1 has been changed to %2. You should now run %3.';
      Text008@1008 : TextConst 'ENU=Deleting %1 entries...';
      Window@1012 : Dialog;
      EntriesModified@1006 : Boolean;

    [External]
    PROCEDURE ChangeExpCostPostingToGL@6(VAR InvtSetup@1001 : Record "Inventory Setup";ExpCostPostingToGL@1002 : Boolean);
    VAR
      PostValueEntryToGL@1000 : Record "Post Value Entry to G/L";
    BEGIN
      if not
         CONFIRM(
           STRSUBSTNO(
             Text000 + Text001 + Text002,
             InvtSetup.FIELDCAPTION("Expected Cost Posting to G/L"),
             PostValueEntryToGL.TABLECAPTION),false)
      then
        ERROR(Text003);

      if ExpCostPostingToGL then
        EnableExpCostPostingToGL
      else
        DisableExpCostPostingToGL;

      UpdateInvtSetup(InvtSetup,ExpCostPostingToGL)
    END;

    LOCAL PROCEDURE EnableExpCostPostingToGL@3();
    VAR
      ItemLedgEntry@1000 : Record "Item Ledger Entry";
      ValueEntry@1001 : Record "Value Entry";
      PostValueEntryToGL@1006 : Record "Post Value Entry to G/L";
      OldItemNo@1004 : Code[20];
      LastUpdateTime@1005 : Time;
      RecordNo@1002 : Integer;
      NoOfRecords@1003 : Integer;
    BEGIN
      Window.OPEN(
        Text004 +
        Text005);

      ValueEntry.LOCKTABLE;
      LastUpdateTime := TIME;

      if PostValueEntryToGL.FINDSET then
        repeat
          ValueEntry.GET(PostValueEntryToGL."Value Entry No.");
          UpdatePostValueEntryToGL(ValueEntry."Item Ledger Entry No.");
        until PostValueEntryToGL.NEXT = 0;

      with ItemLedgEntry do begin
        SETCURRENTKEY("Item No.","Entry Type");
        SETFILTER("Entry Type",'%1|%2|%3',"Entry Type"::Sale,"Entry Type"::Purchase,"Entry Type"::Output);
        NoOfRecords := COUNT;
        if FIND('-') then
          repeat
            RecordNo := RecordNo + 1;

            if "Item No." <> OldItemNo then begin
              Window.UPDATE(1,"Item No.");
              OldItemNo := "Item No.";
            end;

            if TIME - LastUpdateTime >= 1000 then begin
              Window.UPDATE(2,ROUND(RecordNo / NoOfRecords * 10000,1));
              LastUpdateTime := TIME;
            end;

            if (Quantity <> "Invoiced Quantity") and (Quantity <> 0) then
              UpdatePostValueEntryToGL("Entry No.");

          until NEXT = 0;
      end;

      Window.CLOSE;
    END;

    LOCAL PROCEDURE UpdatePostValueEntryToGL@1(ItemLedgEntryNo@1000 : Integer);
    VAR
      PostValueEntryToGL@1001 : Record "Post Value Entry to G/L";
      ValueEntry@1002 : Record "Value Entry";
    BEGIN
      with ValueEntry do begin
        SETCURRENTKEY("Item Ledger Entry No.");
        SETRANGE("Item Ledger Entry No.",ItemLedgEntryNo);
        if FIND('-') then
          repeat
            if not EntriesModified then
              EntriesModified := true;
            if not PostValueEntryToGL.GET("Entry No.") and
               (("Cost Amount (Expected)" <> "Expected Cost Posted to G/L") or
                ("Cost Amount (Expected) (ACY)" <> "Exp. Cost Posted to G/L (ACY)"))
            then begin
              PostValueEntryToGL."Value Entry No." := "Entry No.";
              PostValueEntryToGL."Item No." := "Item No.";
              PostValueEntryToGL."Posting Date" := "Posting Date";
              PostValueEntryToGL.INSERT;
            end;
          until NEXT = 0;
      end;
    END;

    LOCAL PROCEDURE DisableExpCostPostingToGL@4();
    VAR
      PostValueEntryToGL@1001 : Record "Post Value Entry to G/L";
      ValueEntry@1000 : Record "Value Entry";
    BEGIN
      with PostValueEntryToGL do begin
        Window.OPEN(STRSUBSTNO(Text008,TABLECAPTION));
        if FINDSET(true,true) then
          repeat
            ValueEntry.GET("Value Entry No.");
            if ValueEntry."Expected Cost" then
              DELETE;

          until NEXT = 0;
      end;
      Window.CLOSE;
    END;

    LOCAL PROCEDURE UpdateInvtSetup@2(VAR InvtSetup@1001 : Record "Inventory Setup";ExpCostPostingToGL@1002 : Boolean);
    VAR
      ObjTransl@1000 : Record "Object Translation";
    BEGIN
      with InvtSetup do begin
        "Expected Cost Posting to G/L" := ExpCostPostingToGL;
        MODIFY;
        if EntriesModified then
          MESSAGE(
            Text007,FIELDCAPTION("Expected Cost Posting to G/L"),"Expected Cost Posting to G/L",
            ObjTransl.TranslateObject(ObjTransl."Object Type"::Report,REPORT::"Post Inventory Cost to G/L"));
      end;
    END;

    BEGIN
    END.
  }
}

