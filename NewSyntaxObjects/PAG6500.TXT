OBJECT Page 6500 Item Tracking Summary
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Item Tracking Summary;
    InsertAllowed=false;
    DeleteAllowed=false;
    SourceTable="Entry Summary";
    PageType=Worksheet;
    SourceTableTemporary=true;
    OnInit=BEGIN
             Undefined1Visible := true;
             Selected1Visible := true;
             MaxQuantity1Visible := true;
             BinContentVisible := true;
           END;

    OnOpenPage=BEGIN
                 UpdateSelectedQuantity;

                 BinContentVisible := CurrBinCode <> '';
               END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateIfFiltersHaveChanged;
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 18  ;2   ;Field     ;
                Name=Lot No.;
                ToolTipML=ENU=Specifies the lot number for which availability is presented in the Item Tracking Summary window.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Lot No.";
                Editable=FALSE;
                ImplicitType=Code20 }

    { 16  ;2   ;Field     ;
                Name=Serial No.;
                ToolTipML=ENU=Specifies the serial number for which availability is presented in the Item Tracking Summary window.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Serial No.";
                Editable=FALSE;
                ImplicitType=Code20 }

    { 20  ;2   ;Field     ;
                Name=Warranty Date;
                ToolTipML=ENU=Specifies the warranty expiration date, if any, of the item carrying the item tracking number.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Warranty Date";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Date }

    { 22  ;2   ;Field     ;
                Name=Expiration Date;
                ToolTipML=ENU=Specifies the expiration date, if any, of the item carrying the item tracking number.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Expiration Date";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Date }

    { 8   ;2   ;Field     ;
                Name=Total Quantity;
                DrillDown=true;
                ToolTipML=ENU=Specifies the total quantity of the item in inventory.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Total Quantity";
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrillDownEntries(FIELDNO("Total Quantity"));
                            END;

                ImplicitType=Decimal }

    { 24  ;2   ;Field     ;
                Name=Total Requested Quantity;
                DrillDown=true;
                ToolTipML=ENU=Specifies the total quantity of the lot or serial number that is requested in all documents.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Total Requested Quantity";
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrillDownEntries(FIELDNO("Total Requested Quantity"));
                            END;

                ImplicitType=Decimal }

    { 31  ;2   ;Field     ;
                Name=Current Pending Quantity;
                ToolTipML=ENU=Specifies the quantity from the item tracking line that is selected on the document but not yet committed to the database.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Current Pending Quantity";
                Editable=FALSE;
                ImplicitType=Decimal }

    { 12  ;2   ;Field     ;
                Name=Total Available Quantity;
                ToolTipML=ENU=Specifies the quantity available for the user to request, in entries of the type on the line.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Total Available Quantity";
                Editable=FALSE;
                ImplicitType=Decimal }

    { 14  ;2   ;Field     ;
                Name=Current Reserved Quantity;
                ToolTipML=ENU=Specifies the quantity of items in the entry that are reserved for the line that the Reservation window is opened from.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Current Reserved Quantity";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Decimal }

    { 10  ;2   ;Field     ;
                Name=Total Reserved Quantity;
                ToolTipML=ENU=Specifies the total quantity of the relevant item that is reserved on documents or entries of the type on the line.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Total Reserved Quantity";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Decimal }

    { 34  ;2   ;Field     ;
                Name=Bin Content;
                ToolTipML=ENU=Specifies the quantity of the item in the bin specified in the document line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Content";
                Visible=BinContentVisible;
                OnDrillDown=BEGIN
                              DrillDownBinContent(FIELDNO("Bin Content"));
                            END;

                ImplicitType=Decimal }

    { 2   ;2   ;Field     ;
                Name=Selected Quantity;
                ToolTipML=ENU=Specifies the quantity of each lot or serial number that you want to use to fulfill the demand for the transaction.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Selected Quantity";
                Visible=SelectedQuantityVisible;
                Editable=SelectedQuantityEditable;
                Style=Strong;
                StyleExpr=TRUE;
                OnValidate=BEGIN
                             SelectedQuantityOnAfterValidat;
                           END;

                ImplicitType=Decimal }

    { 50  ;1   ;Group     ;
                Name=Group50 }

    { 1901775901;2;Group  ;
                Name=Group1901775901;
                GroupType=FixedLayout }

    { 1900545401;3;Group  ;
                Name=Selectable;
                CaptionML=ENU=Selectable }

    { 27  ;4   ;Field     ;
                Name=MaxQuantity1;
                CaptionML=ENU=Selectable;
                ToolTipML=ENU=Specifies the value from the Undefined field on the Item Tracking Lines window. This value indicates how much can be selected.;
                ApplicationArea=#ItemTracking;
                DecimalPlaces=0:5;
                SourceExpr=MaxQuantity;
                Visible=MaxQuantity1Visible;
                Editable=FALSE;
                ImplicitType=Decimal }

    { 1900724401;3;Group  ;
                Name=Selected;
                CaptionML=ENU=Selected }

    { 5   ;4   ;Field     ;
                Name=Selected1;
                CaptionML=ENU=Selected;
                ToolTipML=ENU=Specifies the sum of the quantity that you have selected. It Specifies a total of the quantities in the Selected Quantity fields.;
                ApplicationArea=#ItemTracking;
                DecimalPlaces=0:5;
                SourceExpr=SelectedQuantity;
                Visible=Selected1Visible;
                Editable=FALSE;
                ImplicitType=Decimal }

    { 1900724101;3;Group  ;
                Name=Undefined;
                CaptionML=ENU=Undefined }

    { 6   ;4   ;Field     ;
                Name=Undefined1;
                CaptionML=ENU=Undefined;
                ToolTipML=ENU=Specifies the difference between the quantity that can be selected for the document line, and the quantity selected in this window.;
                ApplicationArea=#ItemTracking;
                DecimalPlaces=2:5;
                BlankZero=true;
                SourceExpr=MaxQuantity - SelectedQuantity;
                Visible=Undefined1Visible;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      CurrItemTrackingCode@1001 : Record "Item Tracking Code";
      TempReservEntry@1000 : TEMPORARY Record "Reservation Entry";
      xFilterRec@1006 : Record "Entry Summary";
      ItemTrackingDataCollection@1004 : Codeunit "Item Tracking Data Collection";
      MaxQuantity@1002 : Decimal;
      SelectedQuantity@1003 : Decimal;
      CurrBinCode@1005 : Code[20];
      SelectedQuantityVisible@19045813 : Boolean INDATASET;
      BinContentVisible@19045641 : Boolean INDATASET;
      MaxQuantity1Visible@19054264 : Boolean INDATASET;
      Selected1Visible@19001414 : Boolean INDATASET;
      Undefined1Visible@19007737 : Boolean INDATASET;
      SelectedQuantityEditable@19031275 : Boolean INDATASET;

    [External]
    PROCEDURE SetSources@1(VAR ReservEntry@1000 : Record "Reservation Entry";VAR EntrySummary@1001 : Record "Entry Summary");
    VAR
      xEntrySummary@1002 : Record "Entry Summary";
    BEGIN
      TempReservEntry.RESET;
      TempReservEntry.DELETEALL;
      if ReservEntry.FIND('-') then
        repeat
          TempReservEntry := ReservEntry;
          TempReservEntry.INSERT;
        until ReservEntry.NEXT = 0;

      xEntrySummary.SETVIEW(GETVIEW);
      RESET;
      DELETEALL;
      if EntrySummary.FINDSET then
        repeat
          if EntrySummary.HasQuantity then begin
            Rec := EntrySummary;
            INSERT;
          end;
        until EntrySummary.NEXT = 0;
      SETVIEW(xEntrySummary.GETVIEW);
      UpdateSelectedQuantity;
    END;

    [External]
    PROCEDURE SetSelectionMode@2(SelectionMode@1000 : Boolean);
    BEGIN
      SelectedQuantityVisible := SelectionMode;
      SelectedQuantityEditable := SelectionMode;
      MaxQuantity1Visible := SelectionMode;
      Selected1Visible := SelectionMode;
      Undefined1Visible := SelectionMode;
    END;

    [External]
    PROCEDURE SetMaxQuantity@3(MaxQty@1000 : Decimal);
    BEGIN
      MaxQuantity := MaxQty;
    END;

    [External]
    PROCEDURE SetCurrentBinAndItemTrkgCode@8(BinCode@1000 : Code[20];ItemTrackingCode@1001 : Record "Item Tracking Code");
    BEGIN
      ItemTrackingDataCollection.SetCurrentBinAndItemTrkgCode(BinCode,ItemTrackingCode);
      BinContentVisible := BinCode <> '';
      CurrBinCode := BinCode;
      CurrItemTrackingCode := ItemTrackingCode;
    END;

    [External]
    PROCEDURE AutoSelectTrackingNo@56();
    VAR
      AvailableQty@1002 : Decimal;
      SelectedQty@1000 : Decimal;
    BEGIN
      if MaxQuantity = 0 then
        exit;

      SelectedQty := MaxQuantity;
      if FINDSET then
        repeat
          AvailableQty := "Total Available Quantity";
          if "Bin Active" then
            AvailableQty := MinValueAbs("Bin Content","Total Available Quantity");

          if AvailableQty > 0 then begin
            "Selected Quantity" := MinValueAbs(AvailableQty,SelectedQty);
            SelectedQty -= "Selected Quantity";
            MODIFY;
          end;
        until (NEXT = 0) or (SelectedQty <= 0);
    END;

    LOCAL PROCEDURE MinValueAbs@20(Value1@1000 : Decimal;Value2@1001 : Decimal) : Decimal;
    BEGIN
      if ABS(Value1) < ABS(Value2) then
        exit(Value1);

      exit(Value2);
    END;

    LOCAL PROCEDURE UpdateSelectedQuantity@4();
    VAR
      xEntrySummary@1000 : Record "Entry Summary";
    BEGIN
      if not SelectedQuantityVisible then
        exit;
      if MODIFY then; // Ensure that changes to current rec are included in CALCSUMS
      xEntrySummary := Rec;
      CALCSUMS("Selected Quantity");
      SelectedQuantity := "Selected Quantity";
      Rec := xEntrySummary;
    END;

    [External]
    PROCEDURE GetSelected@5(VAR EntrySummary@1000 : Record "Entry Summary");
    BEGIN
      EntrySummary.RESET;
      EntrySummary.DELETEALL;
      SETFILTER("Selected Quantity",'<>%1',0);
      if FINDSET then
        repeat
          EntrySummary := Rec;
          EntrySummary.INSERT;
        until NEXT = 0;
    END;

    LOCAL PROCEDURE DrillDownEntries@7(FieldNumber@1001 : Integer);
    VAR
      TempReservEntry2@1000 : TEMPORARY Record "Reservation Entry";
    BEGIN
      TempReservEntry.RESET;
      TempReservEntry.SETCURRENTKEY(
        "Item No.","Source Type","Source Subtype","Reservation Status",
        "Location Code","Variant Code","Shipment Date","Expected Receipt Date","Serial No.","Lot No.");

      TempReservEntry.SETRANGE("Lot No.","Lot No.");
      if "Serial No." <> '' then
        TempReservEntry.SETRANGE("Serial No.","Serial No.");

      case FieldNumber of
        FIELDNO("Total Quantity"):
          begin
            // An Item Ledger Entry will in itself be represented with a surplus TempReservEntry. Order tracking
            // and reservations against Item Ledger Entries are therefore kept out, as these quantities would
            // otherwise be represented twice in the drill down.

            TempReservEntry.SETRANGE(Positive,true);
            TempReservEntry2.COPY(TempReservEntry);  // Copy key
            if TempReservEntry.FINDSET then
              repeat
                TempReservEntry2 := TempReservEntry;
                if TempReservEntry."Source Type" = DATABASE::"Item Ledger Entry" then begin
                  if TempReservEntry."Reservation Status" = TempReservEntry."Reservation Status"::Surplus then
                    TempReservEntry2.INSERT;
                end else
                  TempReservEntry2.INSERT;
              until TempReservEntry.NEXT = 0;
            TempReservEntry2.ASCENDING(false);
            PAGE.RUNMODAL(PAGE::"Avail. - Item Tracking Lines",TempReservEntry2);
          end;
        FIELDNO("Total Requested Quantity"):
          begin
            TempReservEntry.SETRANGE(Positive,false);
            TempReservEntry.ASCENDING(false);
            PAGE.RUNMODAL(PAGE::"Avail. - Item Tracking Lines",TempReservEntry);
          end;
      end;
    END;

    LOCAL PROCEDURE DrillDownBinContent@11(FieldNumber@1000 : Integer);
    VAR
      BinContent@1001 : Record "Bin Content";
    BEGIN
      if CurrBinCode = '' then
        exit;
      TempReservEntry.RESET;
      if not TempReservEntry.FINDFIRST then
        exit;

      CurrItemTrackingCode.TESTFIELD(Code);

      BinContent.SETRANGE("Location Code",TempReservEntry."Location Code");
      BinContent.SETRANGE("Item No.",TempReservEntry."Item No.");
      BinContent.SETRANGE("Variant Code",TempReservEntry."Variant Code");
      if CurrItemTrackingCode."Lot Warehouse Tracking" then
        if "Lot No." <> '' then
          BinContent.SETRANGE("Lot No. Filter","Lot No.");
      if CurrItemTrackingCode."SN Warehouse Tracking" then
        if "Serial No." <> '' then
          BinContent.SETRANGE("Serial No. Filter","Serial No.");

      if FieldNumber = FIELDNO("Bin Content") then
        BinContent.SETRANGE("Bin Code",CurrBinCode);

      PAGE.RUNMODAL(PAGE::"Bin Content",BinContent);
    END;

    LOCAL PROCEDURE UpdateIfFiltersHaveChanged@9();
    BEGIN
      // In order to update Selected Quantity when filters have been changed on the form.
      if GETFILTERS = xFilterRec.GETFILTERS then
        exit;

      UpdateSelectedQuantity;
      xFilterRec.COPY(Rec);
    END;

    LOCAL PROCEDURE SelectedQuantityOnAfterValidat@19049896();
    BEGIN
      UpdateSelectedQuantity;
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

