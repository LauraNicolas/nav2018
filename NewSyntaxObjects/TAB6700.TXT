OBJECT Table 6700 Exchange Sync
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Service Password"=rimd;
    OnDelete=BEGIN
               DeletePassword("Exchange Account Password Key");
             END;

    CaptionML=ENU=Exchange Sync;
  }
  FIELDS
  {
    { 1   ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=User ID;
                                                   NotBlank=true }
    { 2   ;   ;Enabled             ;Boolean       ;CaptionML=ENU=Enabled }
    { 4   ;   ;Exchange Account Password Key;GUID ;TableRelation="Service Password".Key;
                                                   CaptionML=ENU=Exchange Account Password Key }
    { 5   ;   ;Last Sync Date Time ;DateTime      ;CaptionML=ENU=Last Sync Date Time;
                                                   Editable=false }
    { 7   ;   ;Folder ID           ;Text30        ;CaptionML=ENU=Folder ID }
    { 9   ;   ;Filter              ;BLOB          ;CaptionML=ENU=Filter }
  }
  KEYS
  {
    {    ;"User ID"                               ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      EncryptionIsNotActivatedQst@1000 : TextConst 'ENU=Data encryption is not activated. It is recommended that you encrypt data. \Do you want to open the Data Encryption Management window?';

    [External]
    PROCEDURE SetExchangeAccountPassword@4(PasswordText@1001 : Text);
    VAR
      ServicePassword@1000 : Record "Service Password";
    BEGIN
      PasswordText := DELCHR(PasswordText,'=',' ');

      if ISNULLGUID("Exchange Account Password Key") or not ServicePassword.GET("Exchange Account Password Key") then begin
        ServicePassword.SavePassword(PasswordText);
        ServicePassword.INSERT(true);
        "Exchange Account Password Key" := ServicePassword.Key;
      end else begin
        ServicePassword.SavePassword(PasswordText);
        ServicePassword.MODIFY;
      end;

      if PasswordText <> '' then
        CheckEncryption;
    END;

    LOCAL PROCEDURE CheckEncryption@6();
    BEGIN
      if not ENCRYPTIONENABLED then
        if CONFIRM(EncryptionIsNotActivatedQst) then
          PAGE.RUN(PAGE::"Data Encryption Management");
    END;

    LOCAL PROCEDURE DeletePassword@1(PasswordKey@1000 : GUID);
    VAR
      ServicePassword@1001 : Record "Service Password";
    BEGIN
      if ServicePassword.GET(PasswordKey) then
        ServicePassword.DELETE;
    END;

    [External]
    PROCEDURE SaveFilter@2(FilterText@1000 : Text);
    VAR
      WriteStream@1001 : OutStream;
    BEGIN
      CLEAR(Filter);
      Filter.CREATEOUTSTREAM(WriteStream);
      WriteStream.WRITETEXT(FilterText);
    END;

    [External]
    PROCEDURE GetSavedFilter@3() FilterText : Text;
    VAR
      ReadStream@1000 : InStream;
    BEGIN
      CALCFIELDS(Filter);
      Filter.CREATEINSTREAM(ReadStream);
      ReadStream.READTEXT(FilterText);
    END;

    [External]
    PROCEDURE DeleteActivityLog@5();
    VAR
      ActivityLog@1000 : Record "Activity Log";
    BEGIN
      ActivityLog.SETRANGE("Record ID",RECORDID);
      ActivityLog.DELETEALL;
    END;

    BEGIN
    END.
  }
}

