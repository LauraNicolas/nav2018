OBJECT Page 491 Items by Location
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Items by Location;
    SaveValues=true;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable=Item;
    DataCaptionExpr='';
    PageType=ListPlus;
    OnInit=BEGIN
             TempMatrixLocation.GetLocationsIncludingUnspecifiedLocation(false,false);
           END;

    OnOpenPage=BEGIN
                 SetColumns(MATRIX_SetWanted::Initial);
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 31      ;1   ;Action    ;
                      Name=Previous Set;
                      CaptionML=ENU=Previous Set;
                      ToolTipML=ENU=Go to the previous set of data.;
                      ApplicationArea=#Location;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 SetColumns(MATRIX_SetWanted::Previous);
                               END;
                                }
      { 32      ;1   ;Action    ;
                      Name=Next Set;
                      CaptionML=ENU=Next Set;
                      ToolTipML=ENU=Go to the next set of data.;
                      ApplicationArea=#Location;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=NextSet;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 SetColumns(MATRIX_SetWanted::Next);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 12  ;1   ;Group     ;
                Name=Options;
                CaptionML=ENU=Options }

    { 14  ;2   ;Field     ;
                Name=ShowInTransit;
                CaptionML=ENU=Show Items in Transit;
                ToolTipML=ENU=Specifies the items in transit between locations.;
                ApplicationArea=#Advanced;
                SourceExpr=ShowInTransit;
                OnValidate=BEGIN
                             ShowInTransitOnAfterValidate;
                           END;

                ImplicitType=Boolean }

    { 15  ;2   ;Field     ;
                Name=ShowColumnName;
                CaptionML=ENU=Show Column Name;
                ToolTipML=ENU=Specifies that the names of columns are shown in the matrix window.;
                ApplicationArea=#Location;
                SourceExpr=ShowColumnName;
                OnValidate=BEGIN
                             ShowColumnNameOnAfterValidate;
                           END;

                ImplicitType=Boolean }

    { 30  ;2   ;Field     ;
                Name=MATRIX_CaptionRange;
                CaptionML=ENU=Column Set;
                ToolTipML=ENU=Specifies the range of values that are displayed in the matrix window, for example, the total period.;
                ApplicationArea=#Location;
                SourceExpr=MATRIX_CaptionRange;
                Editable=FALSE;
                ImplicitType=Text100 }

    { 1   ;1   ;Part      ;
                Name=MatrixForm;
                ApplicationArea=#Location;
                PagePartID="Items by Location Matrix";
                PartType=Page;
                ShowFilter=false }

  }
  CODE
  {
    VAR
      TempMatrixLocation@1000 : TEMPORARY Record Location;
      MatrixRecords@1010 : ARRAY [32] OF Record Location;
      MatrixRecordRef@1007 : RecordRef;
      MATRIX_SetWanted@1006 : 'Initial,Previous,Same,Next';
      ShowColumnName@1002 : Boolean;
      ShowInTransit@1003 : Boolean;
      MATRIX_CaptionSet@1008 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1011 : Text[100];
      MATRIX_PKFirstRecInCurrSet@1001 : Text[80];
      MATRIX_CurrSetLength@1004 : Integer;
      UnspecifiedLocationCodeTxt@1005 : TextConst '@@@=Code for unspecified location;ENU=UNSPECIFIED';

    [Internal]
    PROCEDURE SetColumns@6(SetWanted@1002 : 'Initial,Previous,Same,Next');
    VAR
      MatrixMgt@1000 : Codeunit "Matrix Management";
      CaptionFieldNo@1001 : Integer;
      CurrentMatrixRecordOrdinal@1003 : Integer;
    BEGIN
      TempMatrixLocation.SETRANGE("Use As In-Transit",ShowInTransit);

      CLEAR(MATRIX_CaptionSet);
      CLEAR(MatrixRecords);
      CurrentMatrixRecordOrdinal := 1;

      MatrixRecordRef.GETTABLE(TempMatrixLocation);
      MatrixRecordRef.SETTABLE(TempMatrixLocation);

      if ShowColumnName then
        CaptionFieldNo := TempMatrixLocation.FIELDNO(Name)
      else
        CaptionFieldNo := TempMatrixLocation.FIELDNO(Code);

      MatrixMgt.GenerateMatrixData(MatrixRecordRef,SetWanted,ARRAYLEN(MatrixRecords),CaptionFieldNo,MATRIX_PKFirstRecInCurrSet,
        MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrSetLength);

      if MATRIX_CaptionSet[1] = '' then begin
        MATRIX_CaptionSet[1] := UnspecifiedLocationCodeTxt;
        MATRIX_CaptionRange := STRSUBSTNO('%1%2',MATRIX_CaptionSet[1],MATRIX_CaptionRange);
      end;

      if MATRIX_CurrSetLength > 0 then begin
        TempMatrixLocation.SETPOSITION(MATRIX_PKFirstRecInCurrSet);
        TempMatrixLocation.FIND;
        repeat
          MatrixRecords[CurrentMatrixRecordOrdinal].COPY(TempMatrixLocation);
          CurrentMatrixRecordOrdinal := CurrentMatrixRecordOrdinal + 1;
        until (CurrentMatrixRecordOrdinal > MATRIX_CurrSetLength) or (TempMatrixLocation.NEXT <> 1);
      end;

      UpdateMatrixSubform;
    END;

    LOCAL PROCEDURE ShowColumnNameOnAfterValidate@19074585();
    BEGIN
      SetColumns(MATRIX_SetWanted::Same);
    END;

    LOCAL PROCEDURE ShowInTransitOnAfterValidate@19033613();
    BEGIN
      SetColumns(MATRIX_SetWanted::Initial);
    END;

    LOCAL PROCEDURE UpdateMatrixSubform@10();
    BEGIN
      CurrPage.MatrixForm.PAGE.Load(MATRIX_CaptionSet,MatrixRecords,TempMatrixLocation,MATRIX_CurrSetLength);
      CurrPage.MatrixForm.PAGE.SETRECORD(Rec);
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

