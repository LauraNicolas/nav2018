OBJECT Codeunit 5700 User Setup Management
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData Location=r,
                TableData "Responsibility Center"=r;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=customer';
      Text001@1001 : TextConst 'ENU=vendor';
      Text002@1002 : TextConst 'ENU=This %1 is related to %2 %3. Your identification is setup to process from %2 %4.';
      Text003@1003 : TextConst 'ENU=This document will be processed in your %2.';
      UserSetup@1004 : Record "User Setup";
      RespCenter@1005 : Record "Responsibility Center";
      CompanyInfo@1006 : Record "Company Information";
      UserLocation@1008 : Code[10];
      UserRespCenter@1014 : Code[10];
      SalesUserRespCenter@1013 : Code[10];
      PurchUserRespCenter@1012 : Code[10];
      ServUserRespCenter@1007 : Code[10];
      HasGotSalesUserSetup@1009 : Boolean;
      HasGotPurchUserSetup@1010 : Boolean;
      HasGotServUserSetup@1011 : Boolean;

    [External]
    PROCEDURE GetSalesFilter@1() : Code[10];
    BEGIN
      exit(GetSalesFilter2(USERID));
    END;

    [External]
    PROCEDURE GetPurchasesFilter@3() : Code[10];
    BEGIN
      exit(GetPurchasesFilter2(USERID));
    END;

    [External]
    PROCEDURE GetServiceFilter@5() : Code[10];
    BEGIN
      exit(GetServiceFilter2(USERID));
    END;

    [External]
    PROCEDURE GetSalesFilter2@6(UserCode@1000 : Code[50]) : Code[10];
    BEGIN
      if not HasGotSalesUserSetup then begin
        CompanyInfo.GET;
        SalesUserRespCenter := CompanyInfo."Responsibility Center";
        UserLocation := CompanyInfo."Location Code";
        if UserSetup.GET(UserCode) and (UserCode <> '') then
          if UserSetup."Sales Resp. Ctr. Filter" <> '' then
            SalesUserRespCenter := UserSetup."Sales Resp. Ctr. Filter";
        HasGotSalesUserSetup := true;
      end;
      exit(SalesUserRespCenter);
    END;

    [External]
    PROCEDURE GetPurchasesFilter2@13(UserCode@1000 : Code[50]) : Code[10];
    BEGIN
      if not HasGotPurchUserSetup then begin
        CompanyInfo.GET;
        PurchUserRespCenter := CompanyInfo."Responsibility Center";
        UserLocation := CompanyInfo."Location Code";
        if UserSetup.GET(UserCode) and (UserCode <> '') then
          if UserSetup."Purchase Resp. Ctr. Filter" <> '' then
            PurchUserRespCenter := UserSetup."Purchase Resp. Ctr. Filter";
        HasGotPurchUserSetup := true;
      end;
      exit(PurchUserRespCenter);
    END;

    [External]
    PROCEDURE GetServiceFilter2@17(UserCode@1000 : Code[50]) : Code[10];
    BEGIN
      if not HasGotServUserSetup then begin
        CompanyInfo.GET;
        ServUserRespCenter := CompanyInfo."Responsibility Center";
        UserLocation := CompanyInfo."Location Code";
        if UserSetup.GET(UserCode) and (UserCode <> '') then
          if UserSetup."Service Resp. Ctr. Filter" <> '' then
            ServUserRespCenter := UserSetup."Service Resp. Ctr. Filter";
        HasGotServUserSetup := true;
      end;
      exit(ServUserRespCenter);
    END;

    [External]
    PROCEDURE GetRespCenter@2(DocType@1000 : 'Sales,Purchase,Service';AccRespCenter@1001 : Code[10]) : Code[10];
    VAR
      AccType@1002 : Text[50];
    BEGIN
      case DocType of
        DocType::Sales:
          begin
            AccType := Text000;
            UserRespCenter := GetSalesFilter;
          end;
        DocType::Purchase:
          begin
            AccType := Text001;
            UserRespCenter := GetPurchasesFilter;
          end;
        DocType::Service:
          begin
            AccType := Text000;
            UserRespCenter := GetServiceFilter;
          end;
      end;
      if (AccRespCenter <> '') and
         (UserRespCenter <> '') and
         (AccRespCenter <> UserRespCenter)
      then
        MESSAGE(
          Text002 +
          Text003,
          AccType,RespCenter.TABLECAPTION,AccRespCenter,UserRespCenter);
      if UserRespCenter = '' then
        exit(AccRespCenter);

      exit(UserRespCenter);
    END;

    [External]
    PROCEDURE CheckRespCenter@4(DocType@1000 : 'Sales,Purchase,Service';AccRespCenter@1001 : Code[10]) : Boolean;
    BEGIN
      exit(CheckRespCenter2(DocType,AccRespCenter,USERID));
    END;

    [External]
    PROCEDURE CheckRespCenter2@7(DocType@1000 : 'Sales,Purchase,Service';AccRespCenter@1001 : Code[20];UserCode@1002 : Code[50]) : Boolean;
    BEGIN
      case DocType of
        DocType::Sales:
          UserRespCenter := GetSalesFilter2(UserCode);
        DocType::Purchase:
          UserRespCenter := GetPurchasesFilter2(UserCode);
        DocType::Service:
          UserRespCenter := GetServiceFilter2(UserCode);
      end;
      if (UserRespCenter <> '') and
         (AccRespCenter <> UserRespCenter)
      then
        exit(false);

      exit(true);
    END;

    [External]
    PROCEDURE GetLocation@46(DocType@1000 : 'Sales,Purchase,Service';AccLocation@1001 : Code[10];RespCenterCode@1002 : Code[10]) : Code[10];
    BEGIN
      case DocType of
        DocType::Sales:
          UserRespCenter := GetSalesFilter;
        DocType::Purchase:
          UserRespCenter := GetPurchasesFilter;
        DocType::Service:
          UserRespCenter := GetServiceFilter;
      end;
      if UserRespCenter <> '' then
        RespCenterCode := UserRespCenter;
      if RespCenter.GET(RespCenterCode) then
        if RespCenter."Location Code" <> '' then
          UserLocation := RespCenter."Location Code";
      if AccLocation <> '' then
        exit(AccLocation);

      exit(UserLocation);
    END;

    BEGIN
    END.
  }
}

