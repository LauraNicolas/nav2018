OBJECT Codeunit 1011 Job Jnl.-Check Line
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    TableNo="Job Journal Line";
    OnRun=BEGIN
            GLSetup.GET;
            RunCheck(Rec);
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=cannot be a closing date.';
      Text001@1001 : TextConst 'ENU=is not within your range of allowed posting dates.';
      Text002@1002 : TextConst 'ENU=The combination of dimensions used in %1 %2, %3, %4 is blocked. %5';
      Text003@1003 : TextConst 'ENU=A dimension used in %1 %2, %3, %4 has caused an error. %5';
      Location@1006 : Record Location;
      GLSetup@1004 : Record "General Ledger Setup";
      UserSetup@1005 : Record "User Setup";
      DimMgt@1007 : Codeunit DimensionManagement;
      TimeSheetMgt@1011 : Codeunit "Time Sheet Management";
      AllowPostingFrom@1008 : Date;
      AllowPostingTo@1009 : Date;
      Text004@1010 : TextConst '@@@="%1=Item;%2=JobJnlline.""No."";%3=Job;%4=JobJnlline.""Job No."";%5=JobJnlline.""Journal Batch Name"";%6=""Line No"";%7=JobJnlline.""Line No.""";ENU="You must post more usage of %1 %2 in %3 %4 before you can post job journal %5 %6 = %7."';

    [External]
    PROCEDURE RunCheck@1(VAR JobJnlLine@1000 : Record "Job Journal Line");
    VAR
      Job@1004 : Record Job;
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
    BEGIN
      with JobJnlLine do begin
        if EmptyLine then
          exit;
        TESTFIELD("Job No.");
        TESTFIELD("Job Task No.");
        TESTFIELD("No.");
        TESTFIELD("Posting Date");
        TESTFIELD(Quantity);

        Job.GET("Job No.");
        Job.TESTFIELD(Status,Job.Status::Open);

        if NORMALDATE("Posting Date") <> "Posting Date" then
          FIELDERROR("Posting Date",Text000);

        if ("Document Date" <> 0D) and ("Document Date" <> NORMALDATE("Document Date")) then
          FIELDERROR("Document Date",Text000);

        if DateNotAllowed("Posting Date") then
          FIELDERROR("Posting Date",Text001);

        if "Time Sheet No." <> '' then
          TimeSheetMgt.CheckJobJnlLine(JobJnlLine);

        if not DimMgt.CheckDimIDComb("Dimension Set ID") then
          ERROR(
            Text002,
            TABLECAPTION,"Journal Template Name","Journal Batch Name","Line No.",
            DimMgt.GetDimCombErr);

        TableID[1] := DATABASE::Job;
        No[1] := "Job No.";
        TableID[2] := DimMgt.TypeToTableID2(Type);
        No[2] := "No.";
        TableID[3] := DATABASE::"Resource Group";
        No[3] := "Resource Group No.";
        if not DimMgt.CheckDimValuePosting(TableID,No,"Dimension Set ID") then begin
          if "Line No." <> 0 then
            ERROR(
              Text003,
              TABLECAPTION,"Journal Template Name","Journal Batch Name","Line No.",
              DimMgt.GetDimValuePostingErr);
          ERROR(DimMgt.GetDimValuePostingErr);
        end;

        if Type = Type::Item then begin
          if ("Quantity (Base)" < 0) and ("Entry Type" = "Entry Type"::Usage) then
            CheckItemQuantityJobJnl(JobJnlLine);
          GetLocation("Location Code");
          if Location."Directed Put-away and Pick" then
            TESTFIELD("Bin Code",'')
          else
            if Location."Bin Mandatory" then
              TESTFIELD("Bin Code");
        end;
        if "Line Type" in ["Line Type"::Billable,"Line Type"::"Both Budget and Billable"] then
          TESTFIELD(Chargeable,true);
      end;
    END;

    LOCAL PROCEDURE GetLocation@7300(LocationCode@1000 : Code[10]);
    BEGIN
      if LocationCode = '' then
        CLEAR(Location)
      else
        if Location.Code <> LocationCode then
          Location.GET(LocationCode);
    END;

    LOCAL PROCEDURE DateNotAllowed@2(PostingDate@1000 : Date) : Boolean;
    BEGIN
      if (AllowPostingFrom = 0D) and (AllowPostingTo = 0D) then begin
        if USERID <> '' then
          if UserSetup.GET(USERID) then begin
            AllowPostingFrom := UserSetup."Allow Posting From";
            AllowPostingTo := UserSetup."Allow Posting To";
          end;
        if (AllowPostingFrom = 0D) and (AllowPostingTo = 0D) then begin
          GLSetup.GET;
          AllowPostingFrom := GLSetup."Allow Posting From";
          AllowPostingTo := GLSetup."Allow Posting To";
        end;
        if AllowPostingTo = 0D then
          AllowPostingTo := DMY2DATE(31,12,9999);
      end;
      exit((PostingDate < AllowPostingFrom) or (PostingDate > AllowPostingTo));
    END;

    LOCAL PROCEDURE CheckItemQuantityJobJnl@15(VAR JobJnlline@1001 : Record "Job Journal Line");
    VAR
      Item@1003 : Record Item;
      Job@1007 : Record Job;
    BEGIN
      Job.GET(JobJnlline."Job No.");
      if (Job.GetQuantityAvailable(JobJnlline."No.",JobJnlline."Location Code",JobJnlline."Variant Code",0,2) +
          JobJnlline."Quantity (Base)") < 0
      then
        ERROR(
          Text004,Item.TABLECAPTION,JobJnlline."No.",Job.TABLECAPTION,
          JobJnlline."Job No.",JobJnlline."Journal Batch Name",
          JobJnlline.FIELDCAPTION("Line No."),JobJnlline."Line No.");
    END;

    BEGIN
    END.
  }
}

