OBJECT Page 6060 Contract Trendscape
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Contract Trendscape;
    SaveValues=true;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable="Service Contract Header";
    PageType=ListPlus;
    OnAfterGetRecord=BEGIN
                       ContractNo := "Contract No.";
                       UpdateSubform;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           ContractNo := "Contract No.";
                           UpdateSubform;
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 16  ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 11  ;2   ;Field     ;
                Name=ContractNo;
                CaptionML=ENU=Contract No.;
                ToolTipML=ENU=Specifies billable profits for the job task that are related to items, expressed in the local currency.;
                ApplicationArea=#Service;
                SourceExpr=ContractNo;
                OnValidate=BEGIN
                             CLEAR(ServContract);
                             ServContract.SETRANGE("Contract Type",ServContract."Contract Type"::Contract);
                             ServContract.SETRANGE("Contract No.",ContractNo);
                             if ServContract.FINDFIRST then begin
                               GET(ServContract."Contract Type"::Contract,ServContract."Contract No.");
                               SETRANGE("Contract No.",ServContract."Contract No.");
                               SETRANGE("Contract Type","Contract Type"::Contract);
                               ContractNo := ServContract."Contract No.";
                             end;
                             ContractNoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CLEAR(ServContract);
                           ServContract.SETRANGE("Contract Type",ServContract."Contract Type"::Contract);
                           ServContract."Contract No." := ContractNo;
                           if PAGE.RUNMODAL(0,ServContract) = ACTION::LookupOK then begin
                             GET(ServContract."Contract Type"::Contract,ServContract."Contract No.");
                             SETRANGE("Contract Type","Contract Type"::Contract);
                             SETRANGE("Contract No.",ServContract."Contract No.");
                             ContractNo := ServContract."Contract No.";
                             CurrPage.UPDATE(false);
                           end;
                         END;

                ImplicitType=Code20 }

    { 13  ;2   ;Field     ;
                Name=Name;
                DrillDown=false;
                ToolTipML=ENU=Specifies the name of the customer in the service contract.;
                ApplicationArea=#Service;
                SourceExpr=Name;
                Editable=FALSE;
                ImplicitType=Text50 }

    { 1903121901;1;Group  ;
                Name=Options;
                CaptionML=ENU=Options }

    { 4   ;2   ;Field     ;
                Name=PeriodType;
                CaptionML=ENU=View by;
                ToolTipML=ENU=Specifies by which period amounts are displayed.;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Period;
                ApplicationArea=#Service;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             if PeriodType = PeriodType::Period then
                               PeriodPeriodTypeOnValidate;
                             if PeriodType = PeriodType::Year then
                               YearPeriodTypeOnValidate;
                             if PeriodType = PeriodType::Quarter then
                               QuarterPeriodTypeOnValidate;
                             if PeriodType = PeriodType::Month then
                               MonthPeriodTypeOnValidate;
                             if PeriodType = PeriodType::Week then
                               WeekPeriodTypeOnValidate;
                             if PeriodType = PeriodType::Day then
                               DayPeriodTypeOnValidate;
                           END;

                ImplicitType=Option }

    { 2   ;2   ;Field     ;
                Name=AmountType;
                CaptionML=ENU=View as;
                ToolTipML=ENU=Specifies how amounts are displayed. Net Change: The net change in the balance for the selected period. Balance at Date: The balance as of the last day in the selected period.;
                OptionCaptionML=ENU=Net Change,Balance at Date;
                ApplicationArea=#Service;
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             if AmountType = AmountType::"Balance at Date" then
                               BalanceatDateAmountTypeOnValid;
                             if AmountType = AmountType::"Net Change" then
                               NetChangeAmountTypeOnValidate;
                           END;

                ImplicitType=Option }

    { 3   ;1   ;Part      ;
                Name=TrendLines;
                ApplicationArea=#Service;
                PagePartID="Contract Trend Lines";
                PartType=Page }

  }
  CODE
  {
    VAR
      ServContract@1002 : Record "Service Contract Header";
      PeriodType@1000 : 'Day,Week,Month,Quarter,Year,Period';
      AmountType@1001 : '"Net Change","Balance at Date"';
      ContractNo@1003 : Code[20];

    LOCAL PROCEDURE UpdateSubform@1();
    BEGIN
      CurrPage.TrendLines.PAGE.Set(Rec,PeriodType,AmountType);
    END;

    LOCAL PROCEDURE ContractNoOnAfterValidate@19034635();
    BEGIN
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE DayPeriodTypeOnPush@19008851();
    BEGIN
      UpdateSubform;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnPush@19046063();
    BEGIN
      UpdateSubform;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnPush@19047374();
    BEGIN
      UpdateSubform;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnPush@19018850();
    BEGIN
      UpdateSubform;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnPush@19051042();
    BEGIN
      UpdateSubform;
    END;

    LOCAL PROCEDURE PeriodPeriodTypeOnPush@19032639();
    BEGIN
      UpdateSubform;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnPush@19049003();
    BEGIN
      UpdateSubform;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnPush@19074855();
    BEGIN
      UpdateSubform;
    END;

    LOCAL PROCEDURE DayPeriodTypeOnValidate@19012979();
    BEGIN
      DayPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnValidate@19058475();
    BEGIN
      WeekPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnValidate@19021027();
    BEGIN
      MonthPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnValidate@19015346();
    BEGIN
      QuarterPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnValidate@19064743();
    BEGIN
      YearPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE PeriodPeriodTypeOnValidate@19066307();
    BEGIN
      PeriodPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnValidate@19062218();
    BEGIN
      NetChangeAmountTypeOnPush;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnValid@19007073();
    BEGIN
      BalanceatDateAmountTypeOnPush;
    END;

    BEGIN
    END.
  }
}

