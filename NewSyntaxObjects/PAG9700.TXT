OBJECT Page 9700 Email Dialog
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Send Email;
    SaveValues=true;
    SourceTable="Email Item";
    PageType=StandardDialog;
    SourceTableTemporary=true;
    OnInit=BEGIN
             HasAttachment := false;
           END;

    OnOpenPage=VAR
                 TempBlob@1003 : TEMPORARY Record TempBlob;
                 FileManagement@1005 : Codeunit "File Management";
                 OfficeMgt@1001 : Codeunit "Office Management";
                 OrigMailBodyText@1000 : Text;
               BEGIN
                 OriginalFromEmail := OrigEmailItem."From Address";

                 if not IsEditEnabled then
                   LocalEdit := false;
                 if ForceOutlook then
                   LocalEdit := true;
                 if not LocalEdit then
                   ShownFromEmail := OriginalFromEmail
                 else
                   ShownFromEmail := '';

                 EmailItem.Subject := OrigEmailItem.Subject;
                 EmailItem."Attachment Name" := OrigEmailItem."Attachment Name";

                 SendToText := OrigEmailItem."Send to";
                 if OrigEmailItem."Send CC" <> '' then
                   CcText := OrigEmailItem."Send CC"
                 else
                   EmailItem."Send CC" := CcText;
                 if OrigEmailItem."Send BCC" <> '' then
                   BccText := OrigEmailItem."Send BCC"
                 else
                   EmailItem."Send BCC" := BccText;

                 BodyText := '';

                 if EmailItem."Plaintext Formatted" then
                   EmailItem."Message Type" := EmailItem."Message Type"::"Custom Message"
                 else begin
                   EmailItem."Body File Path" := OrigEmailItem."Body File Path";
                   FileManagement.BLOBImportFromServerFile(TempBlob,EmailItem."Body File Path");
                   EmailItem.Body := TempBlob.Blob;
                   EmailItem."Message Type" := EmailItem."Message Type"::"From Email Body Template";
                 end;

                 OrigMailBodyText := EmailItem.GetBodyText;
                 if OrigMailBodyText <> '' then
                   BodyText := OrigMailBodyText
                 else
                   EmailItem.SetBodyText(BodyText);

                 UpdatePlainTextVisible;
                 IsOfficeAddin := OfficeMgt.IsAvailable;
               END;

    OnClosePage=BEGIN
                  Rec := EmailItem;
                END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 3   ;1   ;Field     ;
                Name=FromAddress;
                ExtendedDatatype=E-Mail;
                CaptionML=ENU=From;
                ToolTipML=ENU=Specifies the sender of the email.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShownFromEmail;
                Visible=False;
                Enabled=False;
                ImplicitType=Text }

    { 10  ;1   ;Field     ;
                Name=SendTo;
                ExtendedDatatype=E-Mail;
                CaptionML=ENU=To;
                ToolTipML=ENU=Specifies the recipient of the email.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SendToText;
                OnValidate=BEGIN
                             EmailItem.VALIDATE("Send to",SendToText);
                             SendToText := EmailItem."Send to";
                           END;

                ImplicitType=Text250 }

    { 4   ;1   ;Field     ;
                Name=CcText;
                CaptionML=ENU=Cc;
                ToolTipML=ENU=Specifies one or more additional recipients.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CcText;
                OnValidate=BEGIN
                             EmailItem.VALIDATE("Send CC",CcText);
                             CcText := EmailItem."Send CC";
                           END;

                ImplicitType=Text250 }

    { 7   ;1   ;Field     ;
                Name=BccText;
                CaptionML=ENU=Bcc;
                ToolTipML=ENU=Specifies one or more additional recipients.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BccText;
                OnValidate=BEGIN
                             EmailItem.VALIDATE("Send BCC",BccText);
                             BccText := EmailItem."Send BCC";
                           END;

                ImplicitType=Text250 }

    { 11  ;1   ;Field     ;
                Name=Subject;
                CaptionML=ENU=Subject;
                ToolTipML=ENU=Specifies the text that will display as the subject of the email.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=EmailItem.Subject }

    { 2   ;1   ;Field     ;
                Name=Attachment Name;
                CaptionML=ENU=Attachment Name;
                ToolTipML=ENU=Specifies the name of the attached document.;
                ApplicationArea=#All;
                SourceExpr=EmailItem."Attachment Name";
                Visible=HasAttachment;
                Enabled=NOT IsOfficeAddin;
                Editable=IsOfficeAddin;
                OnAssistEdit=VAR
                               MailManagement@1000 : Codeunit "Mail Management";
                             BEGIN
                               MailManagement.DownloadPdfAttachment(EmailItem);
                             END;
                              }

    { 5   ;1   ;Field     ;
                Name=MessageContents;
                CaptionML=ENU=Message Content;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=EmailItem."Message Type";
                Visible=NOT PlainTextVisible;
                OnValidate=VAR
                             TempBlob@1001 : Record TempBlob;
                             FileManagement@1000 : Codeunit "File Management";
                           BEGIN
                             UpdatePlainTextVisible;

                             case EmailItem."Message Type" of
                               EmailItem."Message Type"::"From Email Body Template":
                                 begin
                                   FileManagement.BLOBImportFromServerFile(TempBlob,EmailItem."Body File Path");
                                   EmailItem.Body := TempBlob.Blob;
                                   BodyText := EmailItem.GetBodyText;
                                 end;
                               EmailItem."Message Type"::"Custom Message":
                                 begin
                                   BodyText := PreviousBodyText;
                                   EmailItem.SetBodyText(BodyText);
                                 end;
                             end;
                           END;
                            }

    { 14  ;1   ;Group     ;
                Name=Group14;
                GroupType=Group }

    { 12  ;2   ;Group     ;
                Name=Group12;
                Visible=NOT PlainTextVisible;
                GroupType=Group }

    { 6   ;3   ;Field     ;
                Name=BodyHTMLMessage;
                CaptionML=ENU=Body HTML Message;
                ToolTipML=ENU=Specifies a preview of the email message.;
                ApplicationArea=#Basic,#Suite;
                MultiLine=true;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.WebPageViewer;PublicKeyToken=31bf3856ad364e35];
                ShowCaption=false }

    { 13  ;2   ;Group     ;
                Name=Group13;
                Visible=PlainTextVisible;
                GroupType=Group }

    { 8   ;3   ;Field     ;
                Name=BodyText;
                CaptionML=ENU=Message;
                ToolTipML=ENU=Specifies the body of the email.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BodyText;
                MultiLine=true;
                OnValidate=BEGIN
                             EmailItem.SetBodyText(BodyText);

                             if "Message Type" = "Message Type"::"Custom Message" then
                               PreviousBodyText := BodyText;
                           END;

                ImplicitType=Text;
                ShowCaption=false }

    { 9   ;1   ;Field     ;
                Name=OutlookEdit;
                CaptionML=ENU=Edit in Outlook;
                ToolTipML=ENU=Specifies that Microsoft Outlook will open so you can complete the email there.;
                ApplicationArea=#All;
                SourceExpr=LocalEdit;
                Visible=IsEditEnabled;
                MultiLine=true;
                OnValidate=BEGIN
                             if LocalEdit = true then
                               ShownFromEmail := ''
                             else
                               ShownFromEmail := OriginalFromEmail;
                           END;

                ImplicitType=Boolean }

  }
  CODE
  {
    VAR
      EmailItem@1009 : Record "Email Item";
      OrigEmailItem@1001 : Record "Email Item";
      LocalEdit@1003 : Boolean;
      IsEditEnabled@1006 : Boolean;
      HasAttachment@1008 : Boolean;
      ForceOutlook@1007 : Boolean;
      PlainTextVisible@1013 : Boolean;
      IsOfficeAddin@1012 : Boolean;
      OriginalFromEmail@1000 : Text[250];
      BodyText@1002 : Text;
      SendToText@1005 : Text[250];
      BccText@1010 : Text[250];
      CcText@1011 : Text[250];
      ShownFromEmail@1004 : Text;
      PreviousBodyText@1014 : Text;

    [External]
    PROCEDURE SetValues@1(ParmEmailItem@1000 : Record "Email Item";ParmOutlookSupported@1005 : Boolean;ParmSmtpSupported@1001 : Boolean);
    BEGIN
      EmailItem := ParmEmailItem;
      OrigEmailItem.COPY(ParmEmailItem);

      ForceOutlook := ParmOutlookSupported and not ParmSmtpSupported;
      IsEditEnabled := ParmOutlookSupported and (CURRENTCLIENTTYPE = CLIENTTYPE::Windows);
      if not IsEditEnabled then
        LocalEdit := false
      else
        LocalEdit := true;

      if EmailItem."Attachment File Path" <> '' then
        HasAttachment := true;
    END;

    [External]
    PROCEDURE GetDoEdit@6() : Boolean;
    BEGIN
      exit(LocalEdit);
    END;

    LOCAL PROCEDURE UpdatePlainTextVisible@11();
    BEGIN
      PlainTextVisible := EmailItem."Message Type" = EmailItem."Message Type"::"Custom Message";
    END;

    EVENT BodyHTMLMessage@-6::ControlAddInReady@3(callbackUrl@1000 : Text);
    BEGIN
      CurrPage.BodyHTMLMessage.LinksOpenInNewWindow;
      CurrPage.BodyHTMLMessage.SetContent(BodyText);
    END;

    EVENT BodyHTMLMessage@-6::DocumentReady@7();
    BEGIN
    END;

    EVENT BodyHTMLMessage@-6::Callback@4(data@1000 : Text);
    BEGIN
    END;

    EVENT BodyHTMLMessage@-6::Refresh@5(CallbackUrl@1000 : Text);
    BEGIN
      CurrPage.BodyHTMLMessage.LinksOpenInNewWindow;
      CurrPage.BodyHTMLMessage.SetContent(BodyText);
    END;

    BEGIN
    END.
  }
}

