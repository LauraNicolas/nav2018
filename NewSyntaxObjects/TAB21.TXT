OBJECT Table 21 Cust. Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Cust. Ledger Entry;
    LookupPageID="Customer Ledger Entries";
    DrillDownPageID="Customer Ledger Entries";
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No. }
    { 3   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Customer No. }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=" ",Payment,Invoice,"Credit Memo","Finance Charge Memo",Reminder,Refund }
    { 6   ;   ;Document No.        ;Code20        ;OnLookup=VAR
                                                              IncomingDocument@1000 : Record "Incoming Document";
                                                            BEGIN
                                                              IncomingDocument.HyperlinkToDocument("Document No.","Posting Date");
                                                            END;

                                                   CaptionML=ENU=Document No. }
    { 7   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 11  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code }
    { 13  ;   ;Amount              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE ("Ledger Entry Amount"=CONST(true),
                                                                                                              "Cust. Ledger Entry No."=FIELD("Entry No."),
                                                                                                              "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Amount;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 14  ;   ;Remaining Amount    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE ("Cust. Ledger Entry No."=FIELD("Entry No."),
                                                                                                              "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Remaining Amount;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 15  ;   ;Original Amt. (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE ("Cust. Ledger Entry No."=FIELD("Entry No."),
                                                                                                                      "Entry Type"=FILTER("Initial Entry"),
                                                                                                                      "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Original Amt. (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 16  ;   ;Remaining Amt. (LCY);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE ("Cust. Ledger Entry No."=FIELD("Entry No."),
                                                                                                                      "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Remaining Amt. (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 17  ;   ;Amount (LCY)        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE ("Ledger Entry Amount"=CONST(true),
                                                                                                                      "Cust. Ledger Entry No."=FIELD("Entry No."),
                                                                                                                      "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Amount (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 18  ;   ;Sales (LCY)         ;Decimal       ;CaptionML=ENU=Sales (LCY);
                                                   AutoFormatType=1 }
    { 19  ;   ;Profit (LCY)        ;Decimal       ;CaptionML=ENU=Profit (LCY);
                                                   AutoFormatType=1 }
    { 20  ;   ;Inv. Discount (LCY) ;Decimal       ;CaptionML=ENU=Inv. Discount (LCY);
                                                   AutoFormatType=1 }
    { 21  ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Sell-to Customer No. }
    { 22  ;   ;Customer Posting Group;Code20      ;TableRelation="Customer Posting Group";
                                                   CaptionML=ENU=Customer Posting Group }
    { 23  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 24  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 25  ;   ;Salesperson Code    ;Code20        ;TableRelation="Salesperson/Purchaser";
                                                   CaptionML=ENU=Salesperson Code }
    { 27  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit "User Management";
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=User ID }
    { 28  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code }
    { 33  ;   ;On Hold             ;Code3         ;CaptionML=ENU=On Hold }
    { 34  ;   ;Applies-to Doc. Type;Option        ;CaptionML=ENU=Applies-to Doc. Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=" ",Payment,Invoice,"Credit Memo","Finance Charge Memo",Reminder,Refund }
    { 35  ;   ;Applies-to Doc. No. ;Code20        ;CaptionML=ENU=Applies-to Doc. No. }
    { 36  ;   ;Open                ;Boolean       ;CaptionML=ENU=Open }
    { 37  ;   ;Due Date            ;Date          ;OnValidate=VAR
                                                                ReminderEntry@1000 : Record "Reminder/Fin. Charge Entry";
                                                                ReminderIssue@1565 : Codeunit "Reminder-Issue";
                                                              BEGIN
                                                                TESTFIELD(Open,true);
                                                                if "Due Date" <> xRec."Due Date" then begin
                                                                  ReminderEntry.SETCURRENTKEY("Customer Entry No.",Type);
                                                                  ReminderEntry.SETRANGE("Customer Entry No.","Entry No.");
                                                                  ReminderEntry.SETRANGE(Type,ReminderEntry.Type::Reminder);
                                                                  ReminderEntry.SETRANGE("Reminder Level","Last Issued Reminder Level");
                                                                  if ReminderEntry.FINDLAST then
                                                                    ReminderIssue.ChangeDueDate(ReminderEntry,"Due Date",xRec."Due Date");
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Due Date }
    { 38  ;   ;Pmt. Discount Date  ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Open,true);
                                                              END;

                                                   CaptionML=ENU=Pmt. Discount Date }
    { 39  ;   ;Original Pmt. Disc. Possible;Decimal;
                                                   CaptionML=ENU=Original Pmt. Disc. Possible;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 40  ;   ;Pmt. Disc. Given (LCY);Decimal     ;CaptionML=ENU=Pmt. Disc. Given (LCY);
                                                   AutoFormatType=1 }
    { 43  ;   ;Positive            ;Boolean       ;CaptionML=ENU=Positive }
    { 44  ;   ;Closed by Entry No. ;Integer       ;TableRelation="Cust. Ledger Entry";
                                                   CaptionML=ENU=Closed by Entry No. }
    { 45  ;   ;Closed at Date      ;Date          ;CaptionML=ENU=Closed at Date }
    { 46  ;   ;Closed by Amount    ;Decimal       ;CaptionML=ENU=Closed by Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 47  ;   ;Applies-to ID       ;Code50        ;OnValidate=BEGIN
                                                                TESTFIELD(Open,true);
                                                              END;

                                                   CaptionML=ENU=Applies-to ID }
    { 49  ;   ;Journal Batch Name  ;Code10        ;CaptionML=ENU=Journal Batch Name }
    { 50  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code }
    { 51  ;   ;Bal. Account Type   ;Option        ;CaptionML=ENU=Bal. Account Type;
                                                   OptionCaptionML=ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset;
                                                   OptionString="G/L Account",Customer,Vendor,"Bank Account","Fixed Asset" }
    { 52  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF ("Bal. Account Type"=CONST("G/L Account")) "G/L Account"
                                                                 ELSE IF ("Bal. Account Type"=CONST(Customer)) Customer
                                                                 ELSE IF ("Bal. Account Type"=CONST(Vendor)) Vendor
                                                                 ELSE IF ("Bal. Account Type"=CONST("Bank Account")) "Bank Account"
                                                                 ELSE IF ("Bal. Account Type"=CONST("Fixed Asset")) "Fixed Asset";
                                                   CaptionML=ENU=Bal. Account No. }
    { 53  ;   ;Transaction No.     ;Integer       ;CaptionML=ENU=Transaction No. }
    { 54  ;   ;Closed by Amount (LCY);Decimal     ;CaptionML=ENU=Closed by Amount (LCY);
                                                   AutoFormatType=1 }
    { 58  ;   ;Debit Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Debit Amount" WHERE ("Ledger Entry Amount"=CONST(true),
                                                                                                                      "Cust. Ledger Entry No."=FIELD("Entry No."),
                                                                                                                      "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Debit Amount;
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 59  ;   ;Credit Amount       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Credit Amount" WHERE ("Ledger Entry Amount"=CONST(true),
                                                                                                                       "Cust. Ledger Entry No."=FIELD("Entry No."),
                                                                                                                       "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Credit Amount;
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 60  ;   ;Debit Amount (LCY)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Debit Amount (LCY)" WHERE ("Ledger Entry Amount"=CONST(true),
                                                                                                                            "Cust. Ledger Entry No."=FIELD("Entry No."),
                                                                                                                            "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Debit Amount (LCY);
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 61  ;   ;Credit Amount (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Credit Amount (LCY)" WHERE ("Ledger Entry Amount"=CONST(true),
                                                                                                                             "Cust. Ledger Entry No."=FIELD("Entry No."),
                                                                                                                             "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Credit Amount (LCY);
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 62  ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 63  ;   ;External Document No.;Code35       ;CaptionML=ENU=External Document No. }
    { 64  ;   ;Calculate Interest  ;Boolean       ;CaptionML=ENU=Calculate Interest }
    { 65  ;   ;Closing Interest Calculated;Boolean;CaptionML=ENU=Closing Interest Calculated }
    { 66  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series }
    { 67  ;   ;Closed by Currency Code;Code10     ;TableRelation=Currency;
                                                   CaptionML=ENU=Closed by Currency Code }
    { 68  ;   ;Closed by Currency Amount;Decimal  ;AccessByPermission=TableData Currency=R;
                                                   CaptionML=ENU=Closed by Currency Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Closed by Currency Code" }
    { 73  ;   ;Adjusted Currency Factor;Decimal   ;CaptionML=ENU=Adjusted Currency Factor;
                                                   DecimalPlaces=0:15 }
    { 74  ;   ;Original Currency Factor;Decimal   ;CaptionML=ENU=Original Currency Factor;
                                                   DecimalPlaces=0:15 }
    { 75  ;   ;Original Amount     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE ("Cust. Ledger Entry No."=FIELD("Entry No."),
                                                                                                              "Entry Type"=FILTER("Initial Entry"),
                                                                                                              "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Original Amount;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 76  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 77  ;   ;Remaining Pmt. Disc. Possible;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Open,true);
                                                                CALCFIELDS(Amount,"Original Amount");

                                                                if "Remaining Pmt. Disc. Possible" * Amount < 0 then
                                                                  FIELDERROR("Remaining Pmt. Disc. Possible",STRSUBSTNO(Text000,FIELDCAPTION(Amount)));

                                                                if ABS("Remaining Pmt. Disc. Possible") > ABS("Original Amount") then
                                                                  FIELDERROR("Remaining Pmt. Disc. Possible",STRSUBSTNO(Text001,FIELDCAPTION("Original Amount")));
                                                              END;

                                                   CaptionML=ENU=Remaining Pmt. Disc. Possible;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 78  ;   ;Pmt. Disc. Tolerance Date;Date     ;OnValidate=BEGIN
                                                                TESTFIELD(Open,true);
                                                              END;

                                                   CaptionML=ENU=Pmt. Disc. Tolerance Date }
    { 79  ;   ;Max. Payment Tolerance;Decimal     ;OnValidate=BEGIN
                                                                TESTFIELD(Open,true);
                                                                CALCFIELDS(Amount,"Remaining Amount");

                                                                if "Max. Payment Tolerance" * Amount < 0 then
                                                                  FIELDERROR("Max. Payment Tolerance",STRSUBSTNO(Text000,FIELDCAPTION(Amount)));

                                                                if ABS("Max. Payment Tolerance") > ABS("Remaining Amount") then
                                                                  FIELDERROR("Max. Payment Tolerance",STRSUBSTNO(Text001,FIELDCAPTION("Remaining Amount")));
                                                              END;

                                                   CaptionML=ENU=Max. Payment Tolerance;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 80  ;   ;Last Issued Reminder Level;Integer ;CaptionML=ENU=Last Issued Reminder Level }
    { 81  ;   ;Accepted Payment Tolerance;Decimal ;CaptionML=ENU=Accepted Payment Tolerance;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 82  ;   ;Accepted Pmt. Disc. Tolerance;Boolean;
                                                   CaptionML=ENU=Accepted Pmt. Disc. Tolerance }
    { 83  ;   ;Pmt. Tolerance (LCY);Decimal       ;CaptionML=ENU=Pmt. Tolerance (LCY);
                                                   AutoFormatType=1 }
    { 84  ;   ;Amount to Apply     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Open,true);
                                                                CALCFIELDS("Remaining Amount");

                                                                if "Amount to Apply" * "Remaining Amount" < 0 then
                                                                  FIELDERROR("Amount to Apply",STRSUBSTNO(Text000,FIELDCAPTION("Remaining Amount")));

                                                                if ABS("Amount to Apply") > ABS("Remaining Amount") then
                                                                  FIELDERROR("Amount to Apply",STRSUBSTNO(Text001,FIELDCAPTION("Remaining Amount")));
                                                              END;

                                                   CaptionML=ENU=Amount to Apply;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 85  ;   ;IC Partner Code     ;Code20        ;TableRelation="IC Partner";
                                                   CaptionML=ENU=IC Partner Code }
    { 86  ;   ;Applying Entry      ;Boolean       ;CaptionML=ENU=Applying Entry }
    { 87  ;   ;Reversed            ;Boolean       ;CaptionML=ENU=Reversed;
                                                   BlankZero=true }
    { 88  ;   ;Reversed by Entry No.;Integer      ;TableRelation="Cust. Ledger Entry";
                                                   CaptionML=ENU=Reversed by Entry No.;
                                                   BlankZero=true }
    { 89  ;   ;Reversed Entry No.  ;Integer       ;TableRelation="Cust. Ledger Entry";
                                                   CaptionML=ENU=Reversed Entry No.;
                                                   BlankZero=true }
    { 90  ;   ;Prepayment          ;Boolean       ;CaptionML=ENU=Prepayment }
    { 172 ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Open,true);
                                                              END;

                                                   CaptionML=ENU=Payment Method Code }
    { 173 ;   ;Applies-to Ext. Doc. No.;Code35    ;CaptionML=ENU=Applies-to Ext. Doc. No. }
    { 288 ;   ;Recipient Bank Account;Code10      ;TableRelation="Customer Bank Account".Code WHERE ("Customer No."=FIELD("Customer No."));
                                                   CaptionML=ENU=Recipient Bank Account }
    { 289 ;   ;Message to Recipient;Text140       ;OnValidate=BEGIN
                                                                TESTFIELD(Open,true);
                                                              END;

                                                   CaptionML=ENU=Message to Recipient }
    { 290 ;   ;Exported to Payment File;Boolean   ;CaptionML=ENU=Exported to Payment File;
                                                   Editable=false }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=false }
    { 1200;   ;Direct Debit Mandate ID;Code35     ;TableRelation="SEPA Direct Debit Mandate" WHERE ("Customer No."=FIELD("Customer No."));
                                                   CaptionML=ENU=Direct Debit Mandate ID }
  }
  KEYS
  {
    {    ;"Entry No."                             ;Clustered=true }
    {    ;"Customer No.","Posting Date","Currency Code";
                                                   SumIndexFields="Sales (LCY)","Profit (LCY)","Inv. Discount (LCY)" }
    { false;"Customer No.","Currency Code","Posting Date" }
    {    ;"Document No."                           }
    {    ;"External Document No."                  }
    {    ;"Customer No.",Open,Positive,"Due Date","Currency Code" }
    {    ;Open,"Due Date"                          }
    {    ;"Document Type","Customer No.","Posting Date","Currency Code";
                                                   SumIndexFields="Sales (LCY)","Profit (LCY)","Inv. Discount (LCY)";
                                                   MaintainSQLIndex=false;
                                                   MaintainSIFTIndex=false }
    {    ;"Salesperson Code","Posting Date"        }
    {    ;"Closed by Entry No."                    }
    {    ;"Transaction No."                        }
    { false;"Customer No.",Open,Positive,"Calculate Interest","Due Date" }
    { false;"Customer No.","Global Dimension 1 Code","Global Dimension 2 Code","Posting Date","Currency Code";
                                                   SumIndexFields="Sales (LCY)","Profit (LCY)","Inv. Discount (LCY)" }
    { false;"Customer No.",Open,"Global Dimension 1 Code","Global Dimension 2 Code",Positive,"Due Date","Currency Code" }
    { false;Open,"Global Dimension 1 Code","Global Dimension 2 Code","Due Date" }
    { false;"Document Type","Customer No.","Global Dimension 1 Code","Global Dimension 2 Code","Posting Date","Currency Code" }
    {    ;"Customer No.","Applies-to ID",Open,Positive,"Due Date" }
    {    ;"Document Type","Posting Date"          ;SumIndexFields="Sales (LCY)" }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;"Entry No.",Description,"Customer No.","Posting Date","Document Type","Document No." }
    { 2   ;Brick               ;"Document No.",Description,"Remaining Amt. (LCY)","Due Date" }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=must have the same sign as %1';
      Text001@1001 : TextConst 'ENU=must not be larger than %1';

    [External]
    PROCEDURE ShowDoc@7() : Boolean;
    VAR
      SalesInvoiceHdr@1003 : Record "Sales Invoice Header";
      SalesCrMemoHdr@1002 : Record "Sales Cr.Memo Header";
      ServiceInvoiceHeader@1000 : Record "Service Invoice Header";
      ServiceCrMemoHeader@1001 : Record "Service Cr.Memo Header";
    BEGIN
      case "Document Type" of
        "Document Type"::Invoice:
          begin
            if SalesInvoiceHdr.GET("Document No.") then begin
              PAGE.RUN(PAGE::"Posted Sales Invoice",SalesInvoiceHdr);
              exit(true);
            end;
            if ServiceInvoiceHeader.GET("Document No.") then begin
              PAGE.RUN(PAGE::"Posted Service Invoice",ServiceInvoiceHeader);
              exit(true);
            end;
          end;
        "Document Type"::"Credit Memo":
          begin
            if SalesCrMemoHdr.GET("Document No.") then begin
              PAGE.RUN(PAGE::"Posted Sales Credit Memo",SalesCrMemoHdr);
              exit(true);
            end;
            if ServiceCrMemoHeader.GET("Document No.") then begin
              PAGE.RUN(PAGE::"Posted Service Credit Memo",ServiceCrMemoHeader);
              exit(true);
            end;
          end;
      end;
    END;

    [External]
    PROCEDURE DrillDownOnEntries@1(VAR DtldCustLedgEntry@1000 : Record "Detailed Cust. Ledg. Entry");
    VAR
      CustLedgEntry@1001 : Record "Cust. Ledger Entry";
    BEGIN
      CustLedgEntry.RESET;
      DtldCustLedgEntry.COPYFILTER("Customer No.",CustLedgEntry."Customer No.");
      DtldCustLedgEntry.COPYFILTER("Currency Code",CustLedgEntry."Currency Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 1",CustLedgEntry."Global Dimension 1 Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 2",CustLedgEntry."Global Dimension 2 Code");
      CustLedgEntry.SETCURRENTKEY("Customer No.","Posting Date");
      CustLedgEntry.SETRANGE(Open,true);
      PAGE.RUN(0,CustLedgEntry);
    END;

    [External]
    PROCEDURE DrillDownOnOverdueEntries@4(VAR DtldCustLedgEntry@1000 : Record "Detailed Cust. Ledg. Entry");
    VAR
      CustLedgEntry@1001 : Record "Cust. Ledger Entry";
    BEGIN
      CustLedgEntry.RESET;
      DtldCustLedgEntry.COPYFILTER("Customer No.",CustLedgEntry."Customer No.");
      DtldCustLedgEntry.COPYFILTER("Currency Code",CustLedgEntry."Currency Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 1",CustLedgEntry."Global Dimension 1 Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 2",CustLedgEntry."Global Dimension 2 Code");
      CustLedgEntry.SETCURRENTKEY("Customer No.","Posting Date");
      CustLedgEntry.SETFILTER("Date Filter",'..%1',WORKDATE);
      CustLedgEntry.SETFILTER("Due Date",'<%1',WORKDATE);
      CustLedgEntry.SETFILTER("Remaining Amount",'<>%1',0);
      PAGE.RUN(0,CustLedgEntry);
    END;

    [External]
    PROCEDURE GetOriginalCurrencyFactor@2() : Decimal;
    BEGIN
      if "Original Currency Factor" = 0 then
        exit(1);
      exit("Original Currency Factor");
    END;

    [External]
    PROCEDURE ShowDimensions@3();
    VAR
      DimMgt@1000 : Codeunit DimensionManagement;
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Entry No."));
    END;

    [External]
    PROCEDURE SetStyle@5() : Text;
    BEGIN
      if Open then begin
        if WORKDATE > "Due Date" then
          exit('Unfavorable')
      end else
        if "Closed at Date" > "Due Date" then
          exit('Attention');
      exit('');
    END;

    [External]
    PROCEDURE SetApplyToFilters@9(CustomerNo@1000 : Code[20];ApplyDocType@1001 : Option;ApplyDocNo@1002 : Code[20];ApplyAmount@1003 : Decimal);
    BEGIN
      SETCURRENTKEY("Customer No.",Open,Positive,"Due Date");
      SETRANGE("Customer No.",CustomerNo);
      SETRANGE(Open,true);
      if ApplyDocNo <> '' then begin
        SETRANGE("Document Type",ApplyDocType);
        SETRANGE("Document No.",ApplyDocNo);
        if FINDFIRST then;
        SETRANGE("Document Type");
        SETRANGE("Document No.");
      end else
        if ApplyDocType <> 0 then begin
          SETRANGE("Document Type",ApplyDocType);
          if FINDFIRST then;
          SETRANGE("Document Type");
        end else
          if ApplyAmount <> 0 then begin
            SETRANGE(Positive,ApplyAmount < 0);
            if FINDFIRST then;
            SETRANGE(Positive);
          end;
    END;

    [External]
    PROCEDURE SetAmountToApply@35(AppliesToDocNo@1000 : Code[20];CustomerNo@1001 : Code[20]);
    BEGIN
      SETCURRENTKEY("Document No.");
      SETRANGE("Document No.",AppliesToDocNo);
      SETRANGE("Customer No.",CustomerNo);
      SETRANGE(Open,true);
      if FINDFIRST then begin
        if "Amount to Apply" = 0 then begin
          CALCFIELDS("Remaining Amount");
          "Amount to Apply" := "Remaining Amount";
        end else
          "Amount to Apply" := 0;
        "Accepted Payment Tolerance" := 0;
        "Accepted Pmt. Disc. Tolerance" := false;
        CODEUNIT.RUN(CODEUNIT::"Cust. Entry-Edit",Rec);
      end;
    END;

    [External]
    PROCEDURE CopyFromGenJnlLine@6(GenJnlLine@1000 : Record "Gen. Journal Line");
    BEGIN
      "Customer No." := GenJnlLine."Account No.";
      "Posting Date" := GenJnlLine."Posting Date";
      "Document Date" := GenJnlLine."Document Date";
      "Document Type" := GenJnlLine."Document Type";
      "Document No." := GenJnlLine."Document No.";
      "External Document No." := GenJnlLine."External Document No.";
      Description := GenJnlLine.Description;
      "Currency Code" := GenJnlLine."Currency Code";
      "Sales (LCY)" := GenJnlLine."Sales/Purch. (LCY)";
      "Profit (LCY)" := GenJnlLine."Profit (LCY)";
      "Inv. Discount (LCY)" := GenJnlLine."Inv. Discount (LCY)";
      "Sell-to Customer No." := GenJnlLine."Sell-to/Buy-from No.";
      "Customer Posting Group" := GenJnlLine."Posting Group";
      "Global Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
      "Global Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";
      "Dimension Set ID" := GenJnlLine."Dimension Set ID";
      "Salesperson Code" := GenJnlLine."Salespers./Purch. Code";
      "Source Code" := GenJnlLine."Source Code";
      "On Hold" := GenJnlLine."On Hold";
      "Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type";
      "Applies-to Doc. No." := GenJnlLine."Applies-to Doc. No.";
      "Due Date" := GenJnlLine."Due Date";
      "Pmt. Discount Date" := GenJnlLine."Pmt. Discount Date";
      "Applies-to ID" := GenJnlLine."Applies-to ID";
      "Journal Batch Name" := GenJnlLine."Journal Batch Name";
      "Reason Code" := GenJnlLine."Reason Code";
      "Direct Debit Mandate ID" := GenJnlLine."Direct Debit Mandate ID";
      "User ID" := USERID;
      "Bal. Account Type" := GenJnlLine."Bal. Account Type";
      "Bal. Account No." := GenJnlLine."Bal. Account No.";
      "No. Series" := GenJnlLine."Posting No. Series";
      "IC Partner Code" := GenJnlLine."IC Partner Code";
      Prepayment := GenJnlLine.Prepayment;
      "Recipient Bank Account" := GenJnlLine."Recipient Bank Account";
      "Message to Recipient" := GenJnlLine."Message to Recipient";
      "Applies-to Ext. Doc. No." := GenJnlLine."Applies-to Ext. Doc. No.";
      "Payment Method Code" := GenJnlLine."Payment Method Code";
      "Exported to Payment File" := GenJnlLine."Exported to Payment File";

      OnAfterCopyCustLedgerEntryFromGenJnlLine(Rec,GenJnlLine);
    END;

    [External]
    PROCEDURE CopyFromCVLedgEntryBuffer@10(VAR CVLedgerEntryBuffer@1000 : Record "CV Ledger Entry Buffer");
    BEGIN
      TRANSFERFIELDS(CVLedgerEntryBuffer);
      Amount := CVLedgerEntryBuffer.Amount;
      "Amount (LCY)" := CVLedgerEntryBuffer."Amount (LCY)";
      "Remaining Amount" := CVLedgerEntryBuffer."Remaining Amount";
      "Remaining Amt. (LCY)" := CVLedgerEntryBuffer."Remaining Amt. (LCY)";
      "Original Amount" := CVLedgerEntryBuffer."Original Amount";
      "Original Amt. (LCY)" := CVLedgerEntryBuffer."Original Amt. (LCY)";

      OnAfterCopyCustLedgerEntryFromCVLedgEntryBuffer(Rec,CVLedgerEntryBuffer);
    END;

    PROCEDURE RecalculateAmounts@26(FromCurrencyCode@1001 : Code[10];ToCurrencyCode@1002 : Code[10];PostingDate@1003 : Date);
    VAR
      CurrExchRate@1004 : Record "Currency Exchange Rate";
    BEGIN
      if ToCurrencyCode = FromCurrencyCode then
        exit;

      "Remaining Amount" :=
        CurrExchRate.ExchangeAmount("Remaining Amount",FromCurrencyCode,ToCurrencyCode,PostingDate);
      "Remaining Pmt. Disc. Possible" :=
        CurrExchRate.ExchangeAmount("Remaining Pmt. Disc. Possible",FromCurrencyCode,ToCurrencyCode,PostingDate);
      "Accepted Payment Tolerance" :=
        CurrExchRate.ExchangeAmount("Accepted Payment Tolerance",FromCurrencyCode,ToCurrencyCode,PostingDate);
      "Amount to Apply" :=
        CurrExchRate.ExchangeAmount("Amount to Apply",FromCurrencyCode,ToCurrencyCode,PostingDate);
    END;

    [Integration]
    [External]
    LOCAL PROCEDURE OnAfterCopyCustLedgerEntryFromGenJnlLine@8(VAR CustLedgerEntry@1000 : Record "Cust. Ledger Entry";GenJournalLine@1001 : Record "Gen. Journal Line");
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCopyCustLedgerEntryFromCVLedgEntryBuffer@11(VAR CustLedgerEntry@1001 : Record "Cust. Ledger Entry";CVLedgerEntryBuffer@1000 : Record "CV Ledger Entry Buffer");
    BEGIN
    END;

    BEGIN
    END.
  }
}

