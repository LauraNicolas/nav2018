OBJECT Page 1824 Jobs Setup Wizard
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Jobs Setup;
    SourceTable="Jobs Setup";
    DelayedInsert=true;
    PageType=NavigatePage;
    OnInit=BEGIN
             LoadTopBanners;
           END;

    OnOpenPage=BEGIN
                 INIT;

                 Step := Step::Welcome;
                 EnableControls;

                 if ResourcesSetup.FINDFIRST then;
                 if JobsSetup.FINDFIRST then;

                 if NoSeries.GET(JobTxt) then
                   NoSeriesJob := JobTxt;
                 if NoSeries.GET(ResourceTxt) then
                   NoSeriesResource := ResourceTxt;
                 if NoSeries.GET(TimeSheetTxt) then
                   NoSeriesTimeSheet := TimeSheetTxt;
                 if NoSeries.GET(JobWipTxt) then
                   NoSeriesJobWIP := JobWipTxt;
               END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      Name=ActionContainer10;
                      ActionContainerType=ActionItems }
      { 51      ;1   ;Action    ;
                      Name=ActionAddResource;
                      ShortCutKey=Ctrl+A;
                      CaptionML=ENU=Add;
                      ApplicationArea=#Basic,#Suite;
                      Visible=AddResourcesVisible;
                      Enabled=AddResourcesActionEnabled;
                      InFooterBar=true;
                      Image=Add;
                      OnAction=BEGIN
                                 AddResourceAction;
                               END;
                                }
      { 15      ;1   ;Action    ;
                      Name=ActionBack;
                      ShortCutKey=Ctrl+B;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite;
                      Visible=NOT FinalStepVisible;
                      Enabled=BackActionEnabled;
                      InFooterBar=true;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(true);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=ActionNext;
                      ShortCutKey=Ctrl+N;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite;
                      Visible=NOT FinalStepVisible;
                      Enabled=NextActionEnabled;
                      InFooterBar=true;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextStep(false);
                               END;
                                }
      { 44      ;1   ;Action    ;
                      Name=ActionCreateJob;
                      ShortCutKey=Ctrl+C;
                      CaptionML=ENU=Create a new job;
                      ApplicationArea=#Basic,#Suite;
                      Visible=FinalStepVisible;
                      Enabled=CreateJobActionEnabled;
                      InFooterBar=true;
                      Image=Job;
                      OnAction=BEGIN
                                 CreateAJobAction;
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionFinish;
                      ShortCutKey=Ctrl+F;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Basic,#Suite;
                      Visible=FinalStepVisible;
                      Enabled=FinishActionEnabled;
                      InFooterBar=true;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Name=Group96;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                Name=MediaResourcesStandard;
                ApplicationArea=#Jobs;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 98  ;1   ;Group     ;
                Name=Group98;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                Name=MediaResourcesDone;
                ApplicationArea=#Jobs;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 5   ;1   ;Group     ;
                Name=Group5;
                Visible=WelcomeStepVisible;
                GroupType=Group }

    { 3   ;2   ;Group     ;
                Name=Welcome to Jobs Setup;
                CaptionML=ENU=Welcome to Jobs Setup;
                Visible=WelcomeStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=You can use jobs to track costs such as time sheets that you can then charge to your customer. Choose between many reports to track your job's profitability. }

    { 28  ;2   ;Group     ;
                Name=Let's Go!;
                CaptionML=ENU=Let's Go!;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next so you can start the setup. }

    { 25  ;1   ;Group     ;
                Name=Group25;
                Visible=NoSeriesStepVisible;
                GroupType=Group }

    { 24  ;2   ;Group     ;
                Name=NumberSeriesHelpMessage;
                CaptionML=ENU=Number series are used to group jobs with consecutive IDs. Please specify the number series that you want to use for the different types of job.;
                Visible=NoSeriesStepVisible;
                GroupType=Group }

    { 32  ;3   ;Field     ;
                Name=NoSeriesJob;
                CaptionML=ENU=Jobs No Series:;
                ApplicationArea=#Jobs;
                SourceExpr=NoSeriesJob;
                TableRelation="No. Series".Code;
                OnValidate=BEGIN
                             if not NoSeries.GET(NoSeriesJob) then begin
                               MESSAGE(ValueNotExistMsg,JobsSetup.FIELDNAME("Job Nos."));
                               NoSeriesJob := ''
                             end
                           END;

                ImplicitType=Code10 }

    { 35  ;3   ;Field     ;
                Name=NoSeriesResource;
                CaptionML=ENU=Resource No Series:;
                ApplicationArea=#Jobs;
                SourceExpr=NoSeriesResource;
                TableRelation="No. Series".Code;
                OnValidate=BEGIN
                             if not NoSeries.GET(NoSeriesResource) then begin
                               MESSAGE(ValueNotExistMsg,ResourcesSetup.FIELDNAME("Resource Nos."));
                               NoSeriesResource := ''
                             end
                           END;

                ImplicitType=Code10 }

    { 34  ;3   ;Field     ;
                Name=NoSeriesTimeSheet;
                CaptionML=ENU=Time Sheet No Series:;
                ApplicationArea=#Jobs;
                SourceExpr=NoSeriesTimeSheet;
                TableRelation="No. Series".Code;
                OnValidate=BEGIN
                             if not NoSeries.GET(NoSeriesTimeSheet) then begin
                               MESSAGE(ValueNotExistMsg,ResourcesSetup.FIELDNAME("Time Sheet Nos."));
                               NoSeriesTimeSheet := ''
                             end
                           END;

                ImplicitType=Code10 }

    { 33  ;3   ;Field     ;
                Name=NoSeriesJobWIP;
                CaptionML=ENU=Job-WIP No Series:;
                ApplicationArea=#Jobs;
                SourceExpr=NoSeriesJobWIP;
                TableRelation="No. Series".Code;
                OnValidate=BEGIN
                             if not NoSeries.GET(NoSeriesTimeSheet) then begin
                               MESSAGE(ValueNotExistMsg,JobsSetup.FIELDNAME("Job WIP Nos."));
                               NoSeriesJobWIP := ''
                             end
                           END;

                ImplicitType=Code10 }

    { 7   ;1   ;Group     ;
                Name=Group7;
                Visible=PostWIPStepVisible;
                GroupType=Group }

    { 6   ;2   ;Group     ;
                Name=Specify the default posting group and WIP method.;
                CaptionML=ENU=Specify the default posting group and WIP method.;
                Visible=PostWIPStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Specify the default accounts that will be used to post to for jobs. The information is used when you create a new job, but you can change that for each job. }

    { 17  ;3   ;Field     ;
                Name=DefaultJobPostingGroup;
                CaptionML=ENU=Default Job Posting Group;
                ApplicationArea=#Jobs;
                SourceExpr=DefaultJobPostingGroup;
                TableRelation="Job Posting Group".Code;
                OnValidate=VAR
                             JobPostingGroup@1000 : Record "Job Posting Group";
                           BEGIN
                             if not JobPostingGroup.GET(DefaultJobPostingGroup) then begin
                               MESSAGE(ValueNotExistMsg,JobsSetup.FIELDNAME("Default Job Posting Group"));
                               DefaultJobPostingGroup := ''
                             end
                           END;

                ImplicitType=Code20 }

    { 26  ;3   ;Group     ;
                Name=Group26;
                Visible=PostWIPStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Specify the default method to be used for calculating work in process (WIP). If you do not want to calculate WIP, choose Completed Contract. }

    { 29  ;3   ;Field     ;
                Name=DefaultWIPMethod;
                CaptionML=ENU=Default WIP Method;
                ApplicationArea=#Jobs;
                SourceExpr=DefaultWIPMethod;
                TableRelation="Job WIP Method".Code;
                OnValidate=VAR
                             JobWIPMethod@1000 : Record "Job WIP Method";
                           BEGIN
                             if not JobWIPMethod.GET(DefaultWIPMethod) then begin
                               MESSAGE(ValueNotExistMsg,JobsSetup.FIELDNAME("Default WIP Posting Method"));
                               DefaultWIPMethod := ''
                             end
                           END;

                ImplicitType=Code20 }

    { 16  ;1   ;Group     ;
                Name=Group16;
                Visible=AskTimeSheetStepVisible;
                GroupType=Group }

    { 23  ;2   ;Group     ;
                Name=Do you want to set up time sheets?;
                CaptionML=ENU=Do you want to set up time sheets?;
                Visible=AskTimeSheetStepVisible;
                GroupType=Group }

    { 41  ;3   ;Group     ;
                Name=Group41;
                Visible=AskTimeSheetStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU="To start setting up time sheets, choose Yes. First, you will set up at least one user and one resource. " }

    { 21  ;4   ;Field     ;
                Name=YesCheckbox;
                CaptionML=ENU=Yes;
                ApplicationArea=#Jobs;
                SourceExpr=CreateTimesheetYes;
                OnValidate=BEGIN
                             if CreateTimesheetYes then begin
                               CreateTimesheetNo := false;
                               Step := Step::ResourcesSetup;
                             end
                           END;

                ImplicitType=Boolean }

    { 42  ;3   ;Group     ;
                Name=Group42;
                Visible=AskTimeSheetStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=To finish, choose No. You can set up time sheets later in the Time Sheet Setup window. }

    { 22  ;4   ;Field     ;
                Name=NoCheckbox;
                CaptionML=ENU=No;
                ApplicationArea=#Jobs;
                SourceExpr=CreateTimesheetNo;
                OnValidate=BEGIN
                             if CreateTimesheetNo then begin
                               CreateTimesheetYes := false;
                               Step := Step::Finish;
                             end
                           END;

                ImplicitType=Boolean }

    { 19  ;1   ;Group     ;
                Name=Group19;
                Visible=ResourcesSetupStepVisible;
                GroupType=Group }

    { 18  ;2   ;Group     ;
                Name=Set up time sheet options;
                CaptionML=ENU=Set up time sheet options;
                Visible=ResourcesSetupStepVisible;
                GroupType=Group }

    { 13  ;3   ;Field     ;
                Name=FirstWeekday;
                CaptionML=ENU=Time Sheet First Weekday;
                OptionCaptionML=ENU=Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday;
                ApplicationArea=#Jobs;
                SourceExpr=FirstWeekday;
                ImplicitType=Option }

    { 36  ;3   ;Field     ;
                Name=SuiteJobApproval;
                CaptionML=ENU=Time Sheet by Job Approval;
                OptionCaptionML=ENU=Time Sheet Approver User ID,Machine Only,Person Responsible;
                ApplicationArea=#Jobs;
                SourceExpr=SuiteJobApproval;
                ImplicitType=Option }

    { 2   ;2   ;Group     ;
                Name=Group2;
                Visible=ResourcesSetupStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=The time sheet approver that is specified for the resource will approve time sheets. }

    { 30  ;2   ;Group     ;
                Name=Group30;
                Visible=ResourcesSetupStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Machine Only - For machine time sheets that are linked to a job, the responsible person for the job will approve the time sheets. For machine time sheets that are linked to a resource, the time sheets are approved by the specified time sheet approver. }

    { 9   ;2   ;Group     ;
                Name=Group9;
                Visible=ResourcesSetupStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=The person who is specified as the responsible person for the job will approve time sheets. }

    { 20  ;1   ;Group     ;
                Name=AddUsers;
                CaptionML=ENU=Add Users;
                Visible=AddUsersVisible;
                GroupType=Group }

    { 39  ;2   ;Group     ;
                Name=Set up Users;
                CaptionML=ENU=Set up Users;
                Visible=AddUsersVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Add one or more users that you want to be able to create or approve time sheets. You can add more later. }

    { 45  ;3   ;Part      ;
                Name=Add one or more users;
                CaptionML=ENU=Add one or more users;
                ApplicationArea=#Jobs;
                PagePartID="Time Sheet User Setup Subform";
                PartType=Page }

    { 31  ;1   ;Group     ;
                Name=AddResources;
                CaptionML=ENU=Add Resources;
                Visible=AddResourcesVisible;
                GroupType=Group }

    { 40  ;2   ;Group     ;
                Name=Set up Resources;
                CaptionML=ENU=Set up Resources;
                Visible=AddResourcesVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Add one or more resources that you want to be able to use time sheets. Assign time sheet approvers as well. You can add more later. Click Next to continue after adding resources. }

    { 27  ;3   ;Field     ;
                Name=ResourceNo;
                CaptionML=ENU=Resource No:;
                ApplicationArea=#Jobs;
                SourceExpr=ResourceNo;
                TableRelation=Resource."No.";
                ImplicitType=Code20 }

    { 47  ;3   ;Field     ;
                Name=ResourceName;
                CaptionML=ENU=Name:;
                ApplicationArea=#Jobs;
                SourceExpr=ResourceName;
                ImplicitType=Text50 }

    { 52  ;3   ;Field     ;
                Name=ResourceType;
                CaptionML=ENU=Type:;
                OptionCaptionML=ENU=Person,Machine;
                ApplicationArea=#Jobs;
                SourceExpr=ResourceType;
                ImplicitType=Option }

    { 48  ;3   ;Field     ;
                Name=ResourceUseTimeSheet;
                CaptionML=ENU=Use Time Sheets:;
                ApplicationArea=#Jobs;
                SourceExpr=ResourceUseTimeSheet;
                ImplicitType=Boolean }

    { 49  ;3   ;Field     ;
                Name=ResourceTimeSheetOwnerID;
                CaptionML=ENU=Time Sheet Owner User ID:;
                ApplicationArea=#Jobs;
                SourceExpr=ResourceTimeSheetOwnerID;
                TableRelation="User Setup";
                ImplicitType=Code50 }

    { 50  ;3   ;Field     ;
                Name=ResourceTimeSheetApproverID;
                CaptionML=ENU=Time Sheet Approver User ID:;
                ApplicationArea=#Jobs;
                SourceExpr=ResourceTimeSheetApproverID;
                TableRelation="User Setup";
                ImplicitType=Code50 }

    { 38  ;1   ;Group     ;
                Name=Group38;
                Visible=DoTimeSheetStepVisible;
                GroupType=Group }

    { 37  ;2   ;Group     ;
                Name=Create Time Sheets;
                CaptionML=ENU=Create Time Sheets;
                Visible=DoTimeSheetStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Click Next to create time sheets. }

    { 8   ;1   ;Group     ;
                Name=Group8;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 12  ;2   ;Group     ;
                Name=That's it!;
                CaptionML=ENU=That's it!;
                GroupType=Group }

    { 4   ;3   ;Group     ;
                Name=Group4;
                GroupType=Group;
                InstructionalTextML=ENU=You have now set things up so you can start creating jobs. }

    { 43  ;3   ;Group     ;
                Name=Group43;
                GroupType=Group;
                InstructionalTextML=ENU=Let's get started with your first job! }

    { 46  ;3   ;Group     ;
                Name=Group46;
                GroupType=Group;
                InstructionalTextML=ENU=Click Finish then refresh your role center to see the Jobs activities. }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1040 : Record "Media Repository";
      MediaRepositoryDone@1041 : Record "Media Repository";
      MediaResourcesStandard@1049 : Record "Media Resources";
      MediaResourcesDone@1048 : Record "Media Resources";
      JobsSetup@1030 : Record "Jobs Setup";
      ResourcesSetup@1032 : Record "Resources Setup";
      Resource@1038 : Record Resource;
      NoSeries@1047 : Record "No. Series";
      NoSeriesJob@1001 : Code[10];
      NoSeriesResource@1003 : Code[10];
      NoSeriesTimeSheet@1004 : Code[10];
      NoSeriesJobWIP@1005 : Code[10];
      Step@1012 : 'Welcome,NoSeries,PostWIP,AskTimeSheet,ResourcesSetup,Users,Resources,DoTimeSheet,Finish';
      TopBannerVisible@1042 : Boolean;
      AddUsersVisible@1027 : Boolean;
      AddResourcesVisible@1031 : Boolean;
      WelcomeStepVisible@1000 : Boolean;
      NoSeriesStepVisible@1007 : Boolean;
      PostWIPStepVisible@1008 : Boolean;
      AskTimeSheetStepVisible@1011 : Boolean;
      ResourcesSetupStepVisible@1016 : Boolean;
      DoTimeSheetStepVisible@1017 : Boolean;
      FinalStepVisible@1015 : Boolean;
      FinishActionEnabled@1009 : Boolean;
      CreateJobActionEnabled@1026 : Boolean;
      BackActionEnabled@1013 : Boolean;
      NextActionEnabled@1014 : Boolean;
      AddResourcesActionEnabled@1043 : Boolean;
      CreateTimesheetYes@1022 : Boolean;
      CreateTimesheetNo@1021 : Boolean;
      SelectYesNoMsg@1025 : TextConst 'ENU=To continue, specify if you want to set up time sheets.';
      DefaultJobPostingGroup@1010 : Code[20];
      DefaultWIPMethod@1018 : Code[20];
      SelectGroupAndBatchMsg@1020 : TextConst 'ENU=To continue, specify a default job posting group and WIP method.';
      ModifyRecord@1023 : Boolean;
      FirstWeekday@1019 : Option;
      SuiteJobApproval@1028 : Option;
      EnterResourceNoMsg@1039 : TextConst 'ENU=To add this resource, specify a resource number.';
      ExistingResourceMsg@1046 : TextConst 'ENU=This resource number already exists. To continue, specify a new resource number.';
      JobTxt@1002 : TextConst '@@@={Locked};ENU=JOB';
      ResourceTxt@1006 : TextConst '@@@={Locked};ENU=RES';
      TimeSheetTxt@1024 : TextConst 'ENU=TS';
      JobWipTxt@1029 : TextConst '@@@={Locked};ENU=JOB-WIP';
      ResourceNo@1033 : Code[20];
      ResourceName@1034 : Text[50];
      ResourceUseTimeSheet@1035 : Boolean;
      ResourceTimeSheetOwnerID@1036 : Code[50];
      ResourceTimeSheetApproverID@1037 : Code[50];
      ResourceType@1044 : 'Person,Machine';
      ValueNotExistMsg@1045 : TextConst '@@@="%1=field name";ENU=The value for field %1 does not exist. To continue, select an existing value from the lookup.';

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      if Step = Step::AskTimeSheet then
        if (DefaultJobPostingGroup = '') or (DefaultWIPMethod = '') then begin
          MESSAGE(SelectGroupAndBatchMsg);
          Step := Step - 1;
          exit;
        end;

      if Step = Step::ResourcesSetup then
        if (not CreateTimesheetNo) and (not CreateTimesheetYes) then begin
          MESSAGE(SelectYesNoMsg);
          Step := Step - 1;
          exit;
        end;

      ResetControls;

      case Step of
        Step::Welcome:
          ShowWelcomeStep;
        Step::Users:
          ShowAddUsersStep;
        Step::Resources:
          ShowAddResourcesStep;
        Step::NoSeries:
          ShowNoSeriesStep;
        Step::PostWIP:
          ShowPostWIPStep;
        Step::AskTimeSheet:
          ShowAskTimeSheetStep;
        Step::ResourcesSetup:
          ShowResourcesSetupStep;
        Step::DoTimeSheet:
          ShowDoTimeSheetStep;
        Step::Finish:
          ShowFinalStep;
      end;
    END;

    LOCAL PROCEDURE FinishAction@12();
    BEGIN
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@41(Backwards@1000 : Boolean);
    BEGIN
      if Backwards then
        Step := Step - 1
      else
        if Step <> Step::Finish then
          Step := Step + 1;

      EnableControls;
    END;

    LOCAL PROCEDURE AddResourceAction@15();
    BEGIN
      if ResourceNo = '' then
        MESSAGE(EnterResourceNoMsg)
      else begin
        with Resource do
          if not GET(ResourceNo) then begin
            INIT;
            "No." := ResourceNo;
            Name := ResourceName;
            "Search Name" := FORMAT(ResourceName);
            Type := ResourceType;
            "Use Time Sheet" := ResourceUseTimeSheet;
            "Time Sheet Owner User ID" := ResourceTimeSheetOwnerID;
            "Time Sheet Approver User ID" := ResourceTimeSheetApproverID;
            INSERT;
            ResourceNo := '';
            ResourceName := '';
            ResourceType := 0;
            ResourceUseTimeSheet := true;
            ResourceTimeSheetOwnerID := '';
            ResourceTimeSheetApproverID := '';
          end else
            MESSAGE(ExistingResourceMsg)
      end;
    END;

    LOCAL PROCEDURE ShowAddUsersStep@9();
    BEGIN
      SetAllStepsFalse;
      AddUsersVisible := true;
      BackActionEnabled := true;
      FinishActionEnabled := false;
      AddResourcesActionEnabled := false;
      CreateJobActionEnabled := false;
    END;

    LOCAL PROCEDURE ShowAddResourcesStep@10();
    VAR
      NoSeriesManagement@1000 : Codeunit NoSeriesManagement;
    BEGIN
      SetAllStepsFalse;
      AddResourcesVisible := true;
      FinishActionEnabled := false;
      CreateJobActionEnabled := false;

      ResourceUseTimeSheet := true;

      if (NoSeriesResource <> '') and (ResourceNo = '') then // Number series for Resource is set, auto-populate the Resource number
        ResourceNo := NoSeriesManagement.GetNextNo(NoSeriesResource,0D,true);
    END;

    LOCAL PROCEDURE ShowWelcomeStep@3();
    BEGIN
      SetAllStepsFalse;
      WelcomeStepVisible := true;
      FinishActionEnabled := false;
      BackActionEnabled := false;
      AddResourcesActionEnabled := false;
      CreateJobActionEnabled := false;
      CreateTimesheetYes := true;
      CreateTimesheetNo := false;
    END;

    LOCAL PROCEDURE ShowNoSeriesStep@4();
    BEGIN
      SetAllStepsFalse;
      NoSeriesStepVisible := true;
      FinishActionEnabled := false;
      AddResourcesActionEnabled := false;
      CreateJobActionEnabled := false;
    END;

    LOCAL PROCEDURE ShowPostWIPStep@5();
    BEGIN
      SetAllStepsFalse;
      PostWIPStepVisible := true;
      FinishActionEnabled := false;
      AddResourcesActionEnabled := false;
      CreateJobActionEnabled := false;
    END;

    LOCAL PROCEDURE ShowAskTimeSheetStep@6();
    BEGIN
      SetAllStepsFalse;
      AskTimeSheetStepVisible := true;
      FinishActionEnabled := false;
      AddResourcesActionEnabled := false;
      CreateJobActionEnabled := false;
    END;

    LOCAL PROCEDURE ShowResourcesSetupStep@7();
    BEGIN
      SetAllStepsFalse;
      ResourcesSetupStepVisible := true;
      FinishActionEnabled := false;
      AddResourcesActionEnabled := false;
      CreateJobActionEnabled := false;
    END;

    LOCAL PROCEDURE ShowDoTimeSheetStep@8();
    BEGIN
      SaveResourceInformation;
      SaveJobsSetup;

      COMMIT;

      SetAllStepsFalse;
      FinalStepVisible := true;
      NextActionEnabled := false;
      AddResourcesActionEnabled := false;

      REPORT.RUN(REPORT::"Create Time Sheets");
    END;

    LOCAL PROCEDURE ShowFinalStep@34();
    BEGIN
      SetAllStepsFalse;
      FinalStepVisible := true;
      BackActionEnabled := false;
      NextActionEnabled := false;
      AddResourcesActionEnabled := false;

      if CreateTimesheetNo then begin
        SaveResourceInformation;
        SaveJobsSetup;
      end;
    END;

    LOCAL PROCEDURE ResetControls@1();
    BEGIN
      FinishActionEnabled := true;
      BackActionEnabled := true;
      NextActionEnabled := true;
      AddResourcesActionEnabled := true;
      CreateJobActionEnabled := true;

      SetAllStepsFalse;
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      if MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE)) and
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE))
      then
        if MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") and
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        then
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE SaveJobsSetup@13();
    BEGIN
      with JobsSetup do
        if not FINDFIRST then begin
          INIT;
          "Job Nos." := NoSeriesJob;
          "Job WIP Nos." := NoSeriesJobWIP;
          "Default Job Posting Group" := DefaultJobPostingGroup;
          "Default WIP Method" := DefaultWIPMethod;
          INSERT;
        end else begin
          GET;
          if "Job Nos." <> NoSeriesJob then begin
            ModifyRecord := true;
            "Job Nos." := NoSeriesJob;
          end;

          if "Job WIP Nos." <> NoSeriesJobWIP then begin
            ModifyRecord := true;
            "Job WIP Nos." := NoSeriesJobWIP;
          end;

          if "Default Job Posting Group" <> DefaultJobPostingGroup then begin
            ModifyRecord := true;
            "Default Job Posting Group" := DefaultJobPostingGroup;
          end;

          if "Default WIP Method" <> DefaultWIPMethod then begin
            ModifyRecord := true;
            "Default WIP Method" := DefaultWIPMethod;
          end;

          if ModifyRecord = true then
            MODIFY;
        end;
    END;

    LOCAL PROCEDURE SaveResourceInformation@14();
    BEGIN
      SaveNoSeriesResourceTimeSheet;
      with ResourcesSetup do
        if CreateTimesheetYes then
          if not FINDFIRST then begin
            INIT;
            "Time Sheet First Weekday" := FirstWeekday;
            "Time Sheet by Job Approval" := SuiteJobApproval;
            INSERT;
          end else begin
            GET;
            if "Time Sheet First Weekday" <> FirstWeekday then begin
              ModifyRecord := true;
              "Time Sheet First Weekday" := FirstWeekday;
            end;

            if "Time Sheet by Job Approval" <> SuiteJobApproval then begin
              ModifyRecord := true;
              "Time Sheet by Job Approval" := SuiteJobApproval;
            end;

            if ModifyRecord = true then
              MODIFY;
          end
    END;

    LOCAL PROCEDURE CreateAJobAction@29();
    BEGIN
      PAGE.RUN(PAGE::"Job Card");
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE SetAllStepsFalse@11();
    BEGIN
      WelcomeStepVisible := false;
      AddUsersVisible := false;
      AddResourcesVisible := false;
      NoSeriesStepVisible := false;
      PostWIPStepVisible := false;
      AskTimeSheetStepVisible := false;
      ResourcesSetupStepVisible := false;
      DoTimeSheetStepVisible := false;
      FinalStepVisible := false;
    END;

    LOCAL PROCEDURE SaveNoSeriesResourceTimeSheet@17();
    BEGIN
      with ResourcesSetup do
        if not FINDFIRST then begin
          INIT;
          "Resource Nos." := NoSeriesResource;
          "Time Sheet Nos." := NoSeriesTimeSheet;
          INSERT;
        end else begin
          GET;
          if "Resource Nos." <> NoSeriesResource then begin
            ModifyRecord := true;
            "Resource Nos." := NoSeriesResource;
          end;

          if "Time Sheet Nos." <> NoSeriesTimeSheet then begin
            ModifyRecord := true;
            "Time Sheet Nos." := NoSeriesTimeSheet;
          end;

          if ModifyRecord = true then
            MODIFY;
        end;
    END;

    BEGIN
    END.
  }
}

