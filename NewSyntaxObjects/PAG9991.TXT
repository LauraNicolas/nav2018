OBJECT Page 9991 Code Coverage Setup
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Code Coverage Setup;
    SaveValues=true;
    OnOpenPage=BEGIN
                 SetDefaultValues;
                 CodeCoverageMgt.StartAutomaticBackup(TimeInterval,BackupPath,SummaryPath);
               END;

  }
  CONTROLS
  {
    { 1000;    ;Container ;
                Name=Container;
                ContainerType=ContentArea }

    { 1001;1   ;Field     ;
                Name=<TimeInterval>;
                CaptionML=ENU=Time Interval (minutes);
                ToolTipML=ENU=Specifies the time interval in minutes.;
                ApplicationArea=#All;
                SourceExpr=TimeInterval;
                OnValidate=VAR
                             DefaultTimeIntervalInt@1001 : Integer;
                           BEGIN
                             EVALUATE(DefaultTimeIntervalInt,DefaultTimeIntervalInMinutesTxt);
                             if TimeInterval < DefaultTimeIntervalInt then
                               ERROR(TimeIntervalErr);

                             CodeCoverageMgt.UpdateAutomaticBackupSettings(TimeInterval,BackupPath,SummaryPath);
                             MESSAGE(AppliedSettingsSuccesfullyMsg);
                           END;
                            }

    { 1002;1   ;Field     ;
                Name=<BackupPath>;
                CaptionML=ENU=Backup Path;
                ToolTipML=ENU=Specifies where the backup file is saved.;
                ApplicationArea=#All;
                SourceExpr=BackupPath;
                OnValidate=BEGIN
                             if BackupPath = '' then
                               ERROR(BackupPathErr);

                             CodeCoverageMgt.UpdateAutomaticBackupSettings(TimeInterval,BackupPath,SummaryPath);
                             MESSAGE(AppliedSettingsSuccesfullyMsg);
                           END;

                OnAssistEdit=BEGIN
                               BackupPath := GetFolder;
                               if BackupPath = '' then
                                 ERROR(BackupPathErr);

                               CodeCoverageMgt.UpdateAutomaticBackupSettings(TimeInterval,BackupPath,SummaryPath);
                               MESSAGE(AppliedSettingsSuccesfullyMsg);
                             END;
                              }

    { 1   ;1   ;Field     ;
                Name=<SummaryPath>;
                CaptionML=ENU=Summary Path;
                ToolTipML=ENU=Specifies the summary path, when tracking which part of the application code has been exercised during test activity.;
                ApplicationArea=#All;
                SourceExpr=SummaryPath;
                OnValidate=BEGIN
                             if SummaryPath = '' then
                               ERROR(SummaryPathErr);

                             CodeCoverageMgt.UpdateAutomaticBackupSettings(TimeInterval,BackupPath,SummaryPath);
                             MESSAGE(AppliedSettingsSuccesfullyMsg);
                           END;

                OnAssistEdit=BEGIN
                               SummaryPath := GetFolder;
                               if SummaryPath = '' then
                                 ERROR(SummaryPathErr);

                               CodeCoverageMgt.UpdateAutomaticBackupSettings(TimeInterval,BackupPath,SummaryPath);
                               MESSAGE(AppliedSettingsSuccesfullyMsg);
                             END;
                              }

  }
  CODE
  {
    VAR
      CodeCoverageMgt@1003 : Codeunit "Code Coverage Mgt.";
      TimeInterval@1000 : Integer;
      BackupPath@1001 : Text[1024];
      SummaryPath@1002 : Text[1024];
      AppliedSettingsSuccesfullyMsg@1007 : TextConst 'ENU=Automatic Backup settings applied successfully.';
      BackupPathErr@1006 : TextConst 'ENU=Backup Path must have a value.';
      DefaultTimeIntervalInMinutesTxt@1008 : TextConst 'ENU=10';
      SummaryPathErr@1005 : TextConst 'ENU=Summary Path must have a value.';
      TimeIntervalErr@1004 : TextConst 'ENU=The time interval must be greater than or equal to 10.';

    [External]
    PROCEDURE GetFolder@1000() : Text[1024];
    VAR
      FolderBrowserDialog@1000 : DotNet "'System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Windows.Forms.FolderBrowserDialog" RUNONCLIENT;
    BEGIN
      FolderBrowserDialog := FolderBrowserDialog.FolderBrowserDialog;
      FolderBrowserDialog.ShowNewFolderButton(true);
      FolderBrowserDialog.Description('Select Folder');
      FolderBrowserDialog.ShowDialog;
      if FolderBrowserDialog.SelectedPath <> '' then
        exit(FolderBrowserDialog.SelectedPath + '\')
    END;

    [Internal]
    PROCEDURE SetDefaultValues@2();
    BEGIN
      // Set default values for automatic backups settings, in case they don't exist
      if TimeInterval < 10 then
        EVALUATE(TimeInterval,DefaultTimeIntervalInMinutesTxt);
      if BackupPath = '' then
        BackupPath := APPLICATIONPATH;
      if SummaryPath = '' then
        SummaryPath := APPLICATIONPATH;
    END;

    BEGIN
    END.
  }
}

