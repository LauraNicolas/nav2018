OBJECT Table 5771 Warehouse Source Filter
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Warehouse Source Filter;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=ENU=Code;
                                                   NotBlank=true }
    { 2   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 3   ;   ;Item No. Filter     ;Code100       ;TableRelation=Item;
                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Item No. Filter }
    { 4   ;   ;Variant Code Filter ;Code100       ;TableRelation="Item Variant".Code;
                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Variant Code Filter }
    { 5   ;   ;Unit of Measure Filter;Code100     ;TableRelation="Unit of Measure";
                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Unit of Measure Filter }
    { 6   ;   ;Sell-to Customer No. Filter;Code100;TableRelation=Customer;
                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Sell-to Customer No. Filter }
    { 7   ;   ;Buy-from Vendor No. Filter;Code100 ;TableRelation=Vendor;
                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Buy-from Vendor No. Filter }
    { 8   ;   ;Customer No. Filter ;Code100       ;TableRelation=Customer;
                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Customer No. Filter }
    { 10  ;   ;Planned Delivery Date Filter;Date  ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Planned Delivery Date Filter }
    { 11  ;   ;Shipment Method Code Filter;Code100;TableRelation="Shipment Method";
                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Shipment Method Code Filter }
    { 12  ;   ;Shipping Agent Code Filter;Code100 ;TableRelation="Shipping Agent";
                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Shipping Agent Code Filter }
    { 13  ;   ;Shipping Advice Filter;Code100     ;CaptionML=ENU=Shipping Advice Filter }
    { 15  ;   ;Do Not Fill Qty. to Handle;Boolean ;CaptionML=ENU=Do Not Fill Qty. to Handle }
    { 16  ;   ;Show Filter Request ;Boolean       ;CaptionML=ENU=Show Filter Request }
    { 17  ;   ;Shipping Agent Service Filter;Code100;
                                                   TableRelation="Shipping Agent Services".Code;
                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Shipping Agent Service Filter }
    { 18  ;   ;In-Transit Code Filter;Code100     ;TableRelation=Location WHERE ("Use As In-Transit"=CONST(true));
                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=In-Transit Code Filter }
    { 19  ;   ;Transfer-from Code Filter;Code100  ;TableRelation=Location WHERE ("Use As In-Transit"=CONST(false));
                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Transfer-from Code Filter }
    { 20  ;   ;Transfer-to Code Filter;Code100    ;TableRelation=Location WHERE ("Use As In-Transit"=CONST(false));
                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Transfer-to Code Filter }
    { 21  ;   ;Planned Shipment Date Filter;Date  ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Planned Shipment Date Filter }
    { 22  ;   ;Planned Receipt Date Filter;Date   ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Planned Receipt Date Filter }
    { 23  ;   ;Expected Receipt Date Filter;Date  ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Expected Receipt Date Filter }
    { 24  ;   ;Shipment Date Filter;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Shipment Date Filter }
    { 25  ;   ;Receipt Date Filter ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Receipt Date Filter }
    { 28  ;   ;Sales Shipment Date Filter;Date    ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Sales Shipment Date Filter }
    { 98  ;   ;Source No. Filter   ;Code100       ;CaptionML=ENU=Source No. Filter }
    { 99  ;   ;Source Document     ;Code250       ;CaptionML=ENU=Source Document }
    { 100 ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                if Type = Type::Inbound then begin
                                                                  "Sales Orders" := false;
                                                                  "Purchase Return Orders" := false;
                                                                  "Outbound Transfers" := false;
                                                                  "Service Orders" := false;
                                                                end else begin
                                                                  "Purchase Orders" := false;
                                                                  "Sales Return Orders" := false;
                                                                  "Inbound Transfers" := false;
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Inbound,Outbound;
                                                   OptionString=Inbound,Outbound }
    { 101 ;   ;Sales Orders        ;Boolean       ;InitValue=true;
                                                   OnValidate=BEGIN
                                                                if Type = Type::Outbound then
                                                                  CheckOutboundSourceDocumentChosen;
                                                              END;

                                                   AccessByPermission=TableData "Sales Shipment Header"=R;
                                                   CaptionML=ENU=Sales Orders }
    { 102 ;   ;Sales Return Orders ;Boolean       ;InitValue=true;
                                                   OnValidate=BEGIN
                                                                if Type = Type::Inbound then
                                                                  CheckInboundSourceDocumentChosen;
                                                              END;

                                                   AccessByPermission=TableData "Return Receipt Header"=R;
                                                   CaptionML=ENU=Sales Return Orders }
    { 103 ;   ;Purchase Orders     ;Boolean       ;InitValue=true;
                                                   OnValidate=BEGIN
                                                                if Type = Type::Inbound then
                                                                  CheckInboundSourceDocumentChosen;
                                                              END;

                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=Purchase Orders }
    { 104 ;   ;Purchase Return Orders;Boolean     ;InitValue=true;
                                                   OnValidate=BEGIN
                                                                if Type = Type::Outbound then
                                                                  CheckOutboundSourceDocumentChosen;
                                                              END;

                                                   AccessByPermission=TableData "Return Shipment Header"=R;
                                                   CaptionML=ENU=Purchase Return Orders }
    { 105 ;   ;Inbound Transfers   ;Boolean       ;InitValue=true;
                                                   OnValidate=BEGIN
                                                                if Type = Type::Inbound then
                                                                  CheckInboundSourceDocumentChosen;
                                                              END;

                                                   AccessByPermission=TableData "Transfer Header"=R;
                                                   CaptionML=ENU=Inbound Transfers }
    { 106 ;   ;Outbound Transfers  ;Boolean       ;InitValue=true;
                                                   OnValidate=BEGIN
                                                                if Type = Type::Outbound then
                                                                  CheckOutboundSourceDocumentChosen;
                                                              END;

                                                   AccessByPermission=TableData "Transfer Header"=R;
                                                   CaptionML=ENU=Outbound Transfers }
    { 108 ;   ;Partial             ;Boolean       ;InitValue=true;
                                                   OnValidate=BEGIN
                                                                if not Partial and not Complete then
                                                                  ERROR(Text000,FIELDCAPTION("Shipping Advice Filter"));
                                                              END;

                                                   CaptionML=ENU=Partial }
    { 109 ;   ;Complete            ;Boolean       ;InitValue=true;
                                                   OnValidate=BEGIN
                                                                if not Partial and not Complete then
                                                                  ERROR(Text000,FIELDCAPTION("Shipping Advice Filter"));
                                                              END;

                                                   CaptionML=ENU=Complete }
    { 110 ;   ;Service Orders      ;Boolean       ;InitValue=true;
                                                   OnValidate=BEGIN
                                                                if Type = Type::Outbound then
                                                                  CheckOutboundSourceDocumentChosen;
                                                              END;

                                                   CaptionML=ENU=Service Orders }
    { 7300;   ;Planned Delivery Date;Text250      ;CaptionML=ENU=Planned Delivery Date }
    { 7301;   ;Planned Shipment Date;Text250      ;CaptionML=ENU=Planned Shipment Date }
    { 7302;   ;Planned Receipt Date;Text250       ;CaptionML=ENU=Planned Receipt Date }
    { 7303;   ;Expected Receipt Date;Text250      ;CaptionML=ENU=Expected Receipt Date }
    { 7304;   ;Shipment Date       ;Text250       ;CaptionML=ENU=Shipment Date }
    { 7305;   ;Receipt Date        ;Text250       ;CaptionML=ENU=Receipt Date }
    { 7306;   ;Sales Shipment Date ;Text250       ;CaptionML=ENU=Sales Shipment Date }
  }
  KEYS
  {
    {    ;Type,Code                               ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 must be chosen.';

    [External]
    PROCEDURE SetFilters@1(VAR GetSourceBatch@1000 : Report "Get Source Documents";LocationCode@1001 : Code[10]);
    VAR
      WhseRequest@1002 : Record "Warehouse Request";
      SalesLine@1004 : Record "Sales Line";
      PurchLine@1006 : Record "Purchase Line";
      TransLine@1008 : Record "Transfer Line";
      SalesHeader@1003 : Record "Sales Header";
      ServiceHeader@1005 : Record "Service Header";
      ServiceLine@1007 : Record "Service Line";
    BEGIN
      "Source Document" := '';

      if "Sales Orders" then begin
        WhseRequest."Source Document" := WhseRequest."Source Document"::"Sales Order";
        AddFilter("Source Document",FORMAT(WhseRequest."Source Document"));
      end;

      if "Service Orders" then begin
        WhseRequest."Source Document" := WhseRequest."Source Document"::"Service Order";
        AddFilter("Source Document",FORMAT(WhseRequest."Source Document"));
      end;

      if "Sales Return Orders" then begin
        WhseRequest."Source Document" := WhseRequest."Source Document"::"Sales Return Order";
        AddFilter("Source Document",FORMAT(WhseRequest."Source Document"));
      end;

      if "Outbound Transfers" then begin
        WhseRequest."Source Document" := WhseRequest."Source Document"::"Outbound Transfer";
        AddFilter("Source Document",FORMAT(WhseRequest."Source Document"));
      end;

      if "Purchase Orders" then begin
        WhseRequest."Source Document" := WhseRequest."Source Document"::"Purchase Order";
        AddFilter("Source Document",FORMAT(WhseRequest."Source Document"));
      end;

      if "Purchase Return Orders" then begin
        WhseRequest."Source Document" := WhseRequest."Source Document"::"Purchase Return Order";
        AddFilter("Source Document",FORMAT(WhseRequest."Source Document"));
      end;

      if "Inbound Transfers" then begin
        WhseRequest."Source Document" := WhseRequest."Source Document"::"Inbound Transfer";
        AddFilter("Source Document",FORMAT(WhseRequest."Source Document"));
      end;

      if "Source Document" = '' then
        ERROR(Text000,FIELDCAPTION("Source Document"));

      WhseRequest.SETFILTER("Source Document","Source Document");

      WhseRequest.SETFILTER("Source No.","Source No. Filter");
      WhseRequest.SETFILTER("Shipment Method Code","Shipment Method Code Filter");

      "Shipping Advice Filter" := '';

      if Partial then begin
        WhseRequest."Shipping Advice" := WhseRequest."Shipping Advice"::Partial;
        AddFilter("Shipping Advice Filter",FORMAT(WhseRequest."Shipping Advice"));
      end;

      if Complete then begin
        WhseRequest."Shipping Advice" := WhseRequest."Shipping Advice"::Complete;
        AddFilter("Shipping Advice Filter",FORMAT(WhseRequest."Shipping Advice"));
      end;

      WhseRequest.SETFILTER("Shipping Advice","Shipping Advice Filter");
      WhseRequest.SETRANGE("Location Code",LocationCode);

      SalesLine.SETFILTER("No.","Item No. Filter");
      SalesLine.SETFILTER("Variant Code","Variant Code Filter");
      SalesLine.SETFILTER("Unit of Measure Code","Unit of Measure Filter");

      ServiceLine.SETRANGE(Type,ServiceLine.Type::Item);
      ServiceLine.SETFILTER("No.","Item No. Filter");
      ServiceLine.SETFILTER("Variant Code","Variant Code Filter");
      ServiceLine.SETFILTER("Unit of Measure Code","Unit of Measure Filter");

      PurchLine.SETFILTER("No.","Item No. Filter");
      PurchLine.SETFILTER("Variant Code","Variant Code Filter");
      PurchLine.SETFILTER("Unit of Measure Code","Unit of Measure Filter");

      TransLine.SETFILTER("Item No.","Item No. Filter");
      TransLine.SETFILTER("Variant Code","Variant Code Filter");
      TransLine.SETFILTER("Unit of Measure Code","Unit of Measure Filter");

      SalesHeader.SETFILTER("Sell-to Customer No.","Sell-to Customer No. Filter");
      SalesLine.SETFILTER("Planned Delivery Date","Planned Delivery Date");
      SalesLine.SETFILTER("Planned Shipment Date","Planned Shipment Date");
      SalesLine.SETFILTER("Shipment Date","Sales Shipment Date");

      ServiceHeader.SETFILTER("Customer No.","Customer No. Filter");

      ServiceLine.SETFILTER("Planned Delivery Date","Planned Delivery Date");

      PurchLine.SETFILTER("Buy-from Vendor No.","Buy-from Vendor No. Filter");
      PurchLine.SETFILTER("Expected Receipt Date","Expected Receipt Date");
      PurchLine.SETFILTER("Planned Receipt Date","Planned Receipt Date");

      TransLine.SETFILTER("In-Transit Code","In-Transit Code Filter");
      TransLine.SETFILTER("Transfer-from Code","Transfer-from Code Filter");
      TransLine.SETFILTER("Transfer-to Code","Transfer-to Code Filter");
      TransLine.SETFILTER("Shipment Date","Shipment Date");
      TransLine.SETFILTER("Receipt Date","Receipt Date");

      SalesLine.SETFILTER("Shipping Agent Code","Shipping Agent Code Filter");
      SalesLine.SETFILTER("Shipping Agent Service Code","Shipping Agent Service Filter");

      ServiceLine.SETFILTER("Shipping Agent Code","Shipping Agent Code Filter");
      ServiceLine.SETFILTER("Shipping Agent Service Code","Shipping Agent Service Filter");

      TransLine.SETFILTER("Shipping Agent Code","Shipping Agent Code Filter");
      TransLine.SETFILTER("Shipping Agent Service Code","Shipping Agent Service Filter");

      GetSourceBatch.SETTABLEVIEW(WhseRequest);
      GetSourceBatch.SETTABLEVIEW(SalesHeader);
      GetSourceBatch.SETTABLEVIEW(SalesLine);
      GetSourceBatch.SETTABLEVIEW(PurchLine);
      GetSourceBatch.SETTABLEVIEW(TransLine);
      GetSourceBatch.SETTABLEVIEW(ServiceHeader);
      GetSourceBatch.SETTABLEVIEW(ServiceLine);
      GetSourceBatch.SetDoNotFillQtytoHandle("Do Not Fill Qty. to Handle");
    END;

    LOCAL PROCEDURE AddFilter@2(VAR CodeField@1000 : Code[250];NewFilter@1001 : Text[100]);
    BEGIN
      if CodeField = '' then
        CodeField := NewFilter
      else
        CodeField := CodeField + '|' + NewFilter;
    END;

    LOCAL PROCEDURE CheckInboundSourceDocumentChosen@3();
    BEGIN
      if not ("Sales Return Orders" or "Purchase Orders" or "Inbound Transfers") then
        ERROR(Text000,FIELDCAPTION("Source Document"));
    END;

    LOCAL PROCEDURE CheckOutboundSourceDocumentChosen@5();
    BEGIN
      if not ("Sales Orders" or "Purchase Return Orders" or "Outbound Transfers" or "Service Orders") then
        ERROR(Text000,FIELDCAPTION("Source Document"));
    END;

    BEGIN
    END.
  }
}

