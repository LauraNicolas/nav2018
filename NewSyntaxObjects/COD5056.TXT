OBJECT Codeunit 5056 CustCont-Update
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      RMSetup@1000 : Record "Marketing Setup";

    [External]
    PROCEDURE OnInsert@3(VAR Cust@1000 : Record Customer);
    BEGIN
      RMSetup.GET;
      if RMSetup."Bus. Rel. Code for Customers" = '' then
        exit;

      InsertNewContact(Cust,true);
    END;

    [External]
    PROCEDURE OnModify@1(VAR Cust@1000 : Record Customer);
    VAR
      ContBusRel@1005 : Record "Contact Business Relation";
      Cont@1001 : Record Contact;
      OldCont@1002 : Record Contact;
      ContNo@1003 : Code[20];
      NoSeries@1004 : Code[20];
    BEGIN
      with ContBusRel do begin
        SETCURRENTKEY("Link to Table","No.");
        SETRANGE("Link to Table","Link to Table"::Customer);
        SETRANGE("No.",Cust."No.");
        if not FINDFIRST then
          exit;
        Cont.GET("Contact No.");
        OldCont := Cont;
      end;

      ContNo := Cont."No.";
      NoSeries := Cont."No. Series";
      Cont.VALIDATE("E-Mail",Cust."E-Mail");
      Cont.TRANSFERFIELDS(Cust);
      Cont."No." := ContNo ;
      Cont."No. Series" := NoSeries;
      Cont.VALIDATE(Name);
      Cont.OnModify(OldCont);
      Cont.MODIFY(true);

      Cust.GET(Cust."No.");
    END;

    [External]
    PROCEDURE OnDelete@2(VAR Cust@1000 : Record Customer);
    VAR
      ContBusRel@1001 : Record "Contact Business Relation";
    BEGIN
      with ContBusRel do begin
        SETCURRENTKEY("Link to Table","No.");
        SETRANGE("Link to Table","Link to Table"::Customer);
        SETRANGE("No.",Cust."No.");
        DELETEALL(true);
      end;
    END;

    [External]
    PROCEDURE InsertNewContact@5(VAR Cust@1000 : Record Customer;LocalCall@1001 : Boolean);
    VAR
      ContBusRel@1004 : Record "Contact Business Relation";
      Cont@1002 : Record Contact;
      NoSeriesMgt@1003 : Codeunit NoSeriesManagement;
    BEGIN
      if not LocalCall then begin
        RMSetup.GET;
        RMSetup.TESTFIELD("Bus. Rel. Code for Customers");
      end;

      with Cont do begin
        INIT;
        TRANSFERFIELDS(Cust);
        VALIDATE(Name);
        VALIDATE("E-Mail");
        "No." := '';
        "No. Series" := '';
        RMSetup.TESTFIELD("Contact Nos.");
        NoSeriesMgt.InitSeries(RMSetup."Contact Nos.",'',0D,"No.","No. Series");
        Type := Type::Company;
        TypeChange;
        SetSkipDefault;
        INSERT(true);
      end;

      with ContBusRel do begin
        INIT;
        "Contact No." := Cont."No.";
        "Business Relation Code" := RMSetup."Bus. Rel. Code for Customers";
        "Link to Table" := "Link to Table"::Customer;
        "No." := Cust."No.";
        INSERT(true);
      end;
    END;

    [Internal]
    PROCEDURE InsertNewContactPerson@4(VAR Cust@1001 : Record Customer;LocalCall@1003 : Boolean);
    VAR
      ContComp@1000 : Record Contact;
      ContBusRel@1002 : Record "Contact Business Relation";
      Cont@1004 : Record Contact;
    BEGIN
      if not LocalCall then begin
        RMSetup.GET;
        RMSetup.TESTFIELD("Bus. Rel. Code for Customers");
      end;

      ContBusRel.SETCURRENTKEY("Link to Table","No.");
      ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Customer);
      ContBusRel.SETRANGE("No.",Cust."No.");
      if ContBusRel.FINDFIRST then
        if ContComp.GET(ContBusRel."Contact No.") then
          with Cont do begin
            INIT;
            "No." := '';
            VALIDATE(Type,Type::Person);
            INSERT(true);
            "Company No." := ContComp."No.";
            VALIDATE(Name,Cust.Contact);
            InheritCompanyToPersonData(ContComp);
            MODIFY(true);
            Cust."Primary Contact No." := "No.";
          end
    END;

    [External]
    PROCEDURE DeleteCustomerContacts@6(VAR Customer@1000 : Record Customer);
    VAR
      Contact@1002 : Record Contact;
      ContactBusinessRelation@1001 : Record "Contact Business Relation";
    BEGIN
      with ContactBusinessRelation do begin
        SETCURRENTKEY("Link to Table","No.");
        SETRANGE("Link to Table","Link to Table"::Customer);
        SETRANGE("No.",Customer."No.");
        if FINDSET then
          repeat
            if Contact.GET("Contact No.") then
              Contact.DELETE(true);
          until NEXT = 0;
      end;
    END;

    BEGIN
    END.
  }
}

