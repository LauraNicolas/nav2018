OBJECT Page 9106 Customer Ledger Entry FactBox
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Customer Ledger Entry Details;
    SourceTable="Cust. Ledger Entry";
    PageType=CardPart;
    OnOpenPage=BEGIN
                 DocumentHeading := GetDocumentHeading(Rec);
                 CalcNoOfRecords;
               END;

    OnFindRecord=BEGIN
                   NoOfReminderFinEntries := 0;
                   NoOfAppliedEntries := 0;
                   DocumentHeading := '';

                   exit(FIND(Which));
                 END;

    OnAfterGetRecord=BEGIN
                       DocumentHeading := GetDocumentHeading(Rec);
                       CalcNoOfRecords;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 13  ;1   ;Field     ;
                Name=DocumentHeading;
                DrillDown=true;
                CaptionML=ENU=Document;
                ToolTipML=ENU=Specifies the document that the entry represents.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DocumentHeading;
                OnDrillDown=VAR
                              GLEntry@1006 : Record "G/L Entry";
                            BEGIN
                              if not ShowDoc then begin
                                GLEntry.SETCURRENTKEY("Document No.","Posting Date");
                                GLEntry.SETRANGE("Document No.","Document No.");
                                GLEntry.SETRANGE("Posting Date","Posting Date");

                                PAGE.RUN(PAGE::"General Ledger Entries",GLEntry);
                              end;
                            END;

                ImplicitType=Text250 }

    { 1   ;1   ;Field     ;
                Name=Due Date;
                ToolTipML=ENU=Specifies the due date on the entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                ImplicitType=Date }

    { 3   ;1   ;Field     ;
                Name=Pmt. Discount Date;
                ToolTipML=ENU=Specifies the date on which the amount in the entry must be paid for a payment discount to be granted.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pmt. Discount Date";
                ImplicitType=Date }

    { 5   ;1   ;Field     ;
                Name=NoOfReminderFinEntries;
                DrillDown=true;
                CaptionML=ENU=Reminder/Fin. Charge Entries;
                ToolTipML=ENU=Specifies reminder entries or finance charge entries for the customer ledger entry.;
                ApplicationArea=#Advanced;
                SourceExpr=NoOfReminderFinEntries;
                OnDrillDown=VAR
                              ReminderFinEntry@1001 : Record "Reminder/Fin. Charge Entry";
                            BEGIN
                              ReminderFinEntry.SETRANGE("Customer Entry No.","Entry No.");

                              PAGE.RUN(PAGE::"Reminder/Fin. Charge Entries",ReminderFinEntry);
                            END;

                ImplicitType=Integer }

    { 8   ;1   ;Field     ;
                Name=NoOfAppliedEntries;
                DrillDown=true;
                CaptionML=ENU=Applied Entries;
                ToolTipML=ENU=Specifies applied entries for the customer ledger entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NoOfAppliedEntries;
                OnDrillDown=VAR
                              AppliedCustomerEntriesList@1000 : Page "Applied Customer Entries";
                            BEGIN
                              AppliedCustomerEntriesList.SetTempCustLedgEntry("Entry No.");
                              AppliedCustomerEntriesList.RUN;
                            END;

                ImplicitType=Integer }

    { 2   ;1   ;Field     ;
                Name=NoOfDetailedCustomerEntries;
                DrillDown=true;
                CaptionML=ENU=Detailed Ledger Entries;
                ToolTipML=ENU=Specifies detailed ledger entries for the customer ledger entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NoOfDetailedCustomerEntries;
                OnDrillDown=VAR
                              DetailedCustLedgEntry@1000 : Record "Detailed Cust. Ledg. Entry";
                            BEGIN
                              DetailedCustLedgEntry.SETRANGE("Cust. Ledger Entry No.","Entry No.");
                              DetailedCustLedgEntry.SETRANGE("Customer No.","Customer No.");
                              PAGE.RUN(PAGE::"Detailed Cust. Ledg. Entries",DetailedCustLedgEntry);
                            END;

                ImplicitType=Integer }

  }
  CODE
  {
    VAR
      NoOfReminderFinEntries@1002 : Integer;
      NoOfAppliedEntries@1000 : Integer;
      NoOfDetailedCustomerEntries@1004 : Integer;
      DocumentHeading@1001 : Text[250];
      Text000@1003 : TextConst 'ENU=Document';

    LOCAL PROCEDURE CalcNoOfRecords@3();
    VAR
      ReminderFinChargeEntry@1005 : Record "Reminder/Fin. Charge Entry";
      DetailedCustLedgEntry@1000 : Record "Detailed Cust. Ledg. Entry";
    BEGIN
      ReminderFinChargeEntry.RESET;
      ReminderFinChargeEntry.SETRANGE("Customer Entry No.","Entry No.");
      NoOfReminderFinEntries := ReminderFinChargeEntry.COUNT;

      NoOfAppliedEntries := 0;
      if "Entry No." <> 0 then
        NoOfAppliedEntries := GetNoOfAppliedEntries(Rec);

      DetailedCustLedgEntry.RESET;
      DetailedCustLedgEntry.SETRANGE("Cust. Ledger Entry No.","Entry No.");
      DetailedCustLedgEntry.SETRANGE("Customer No.","Customer No.");
      NoOfDetailedCustomerEntries := DetailedCustLedgEntry.COUNT;
    END;

    LOCAL PROCEDURE GetNoOfAppliedEntries@1(CustLedgerEntry@1000 : Record "Cust. Ledger Entry") : Integer;
    BEGIN
      GetAppliedEntries(CustLedgerEntry);
      exit(CustLedgerEntry.COUNT);
    END;

    LOCAL PROCEDURE GetAppliedEntries@2(VAR CustLedgerEntry@1000 : Record "Cust. Ledger Entry");
    VAR
      DtldCustLedgEntry1@1005 : Record "Detailed Cust. Ledg. Entry";
      DtldCustLedgEntry2@1004 : Record "Detailed Cust. Ledg. Entry";
      CreateCustLedgEntry@1002 : Record "Cust. Ledger Entry";
    BEGIN
      CreateCustLedgEntry := CustLedgerEntry;

      DtldCustLedgEntry1.SETCURRENTKEY("Cust. Ledger Entry No.");
      DtldCustLedgEntry1.SETRANGE("Cust. Ledger Entry No.",CreateCustLedgEntry."Entry No.");
      DtldCustLedgEntry1.SETRANGE(Unapplied,false);
      if DtldCustLedgEntry1.FINDSET then
        repeat
          if DtldCustLedgEntry1."Cust. Ledger Entry No." =
             DtldCustLedgEntry1."Applied Cust. Ledger Entry No."
          then begin
            DtldCustLedgEntry2.INIT;
            DtldCustLedgEntry2.SETCURRENTKEY("Applied Cust. Ledger Entry No.","Entry Type");
            DtldCustLedgEntry2.SETRANGE(
              "Applied Cust. Ledger Entry No.",DtldCustLedgEntry1."Applied Cust. Ledger Entry No.");
            DtldCustLedgEntry2.SETRANGE("Entry Type",DtldCustLedgEntry2."Entry Type"::Application);
            DtldCustLedgEntry2.SETRANGE(Unapplied,false);
            if DtldCustLedgEntry2.FIND('-') then
              repeat
                if DtldCustLedgEntry2."Cust. Ledger Entry No." <>
                   DtldCustLedgEntry2."Applied Cust. Ledger Entry No."
                then begin
                  CustLedgerEntry.SETCURRENTKEY("Entry No.");
                  CustLedgerEntry.SETRANGE("Entry No.",DtldCustLedgEntry2."Cust. Ledger Entry No.");
                  if CustLedgerEntry.FINDFIRST then
                    CustLedgerEntry.MARK(true);
                end;
              until DtldCustLedgEntry2.NEXT = 0;
          end else begin
            CustLedgerEntry.SETCURRENTKEY("Entry No.");
            CustLedgerEntry.SETRANGE("Entry No.",DtldCustLedgEntry1."Applied Cust. Ledger Entry No.");
            if CustLedgerEntry.FINDFIRST then
              CustLedgerEntry.MARK(true);
          end;
        until DtldCustLedgEntry1.NEXT = 0;

      CustLedgerEntry.SETCURRENTKEY("Entry No.");
      CustLedgerEntry.SETRANGE("Entry No.");

      if CreateCustLedgEntry."Closed by Entry No." <> 0 then begin
        CustLedgerEntry."Entry No." := CreateCustLedgEntry."Closed by Entry No.";
        CustLedgerEntry.MARK(true);
      end;

      CustLedgerEntry.SETCURRENTKEY("Closed by Entry No.");
      CustLedgerEntry.SETRANGE("Closed by Entry No.",CreateCustLedgEntry."Entry No.");
      if CustLedgerEntry.FINDSET then
        repeat
          CustLedgerEntry.MARK(true);
        until CustLedgerEntry.NEXT = 0;

      CustLedgerEntry.SETCURRENTKEY("Entry No.");
      CustLedgerEntry.SETRANGE("Closed by Entry No.");

      CustLedgerEntry.MARKEDONLY(true);
    END;

    LOCAL PROCEDURE GetDocumentHeading@6(CustLedgerEntry@1000 : Record "Cust. Ledger Entry") : Text[50];
    VAR
      Heading@1001 : Text[50];
    BEGIN
      if CustLedgerEntry."Document Type" = 0 then
        Heading := Text000
      else
        Heading := FORMAT(CustLedgerEntry."Document Type");
      Heading := Heading + ' ' + CustLedgerEntry."Document No.";
      exit(Heading);
    END;

    BEGIN
    END.
  }
}

