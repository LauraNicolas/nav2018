OBJECT Codeunit 5942 ServContractQuote-Tmpl. Upd.
{
  OBJECT-PROPERTIES
  {
    Date=20120907D;
    Time=120000T;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    TableNo="Service Contract Header";
    OnRun=BEGIN
            ContractTemplate.RESET;
            if not ContractTemplate.FINDFIRST then
              exit;

            TESTFIELD("Contract No.");

            if PAGE.RUNMODAL(PAGE::"Service Contract Template List",ContractTemplate) = ACTION::LookupOK then begin
              ServContract := Rec;
              ServContract.Description := ContractTemplate.Description;
              ServContract.VALIDATE("Contract Group Code",ContractTemplate."Contract Group Code");
              ServContract.VALIDATE("Service Order Type",ContractTemplate."Service Order Type");
              ServContract.VALIDATE("Service Period",ContractTemplate."Default Service Period");
              ServContract.VALIDATE("Price Update Period",ContractTemplate."Price Update Period");
              ServContract.VALIDATE("Response Time (Hours)",ContractTemplate."Default Response Time (Hours)");
              ServContract.VALIDATE("Max. Labor Unit Price",ContractTemplate."Max. Labor Unit Price");
              ServContract.VALIDATE("Invoice after Service",ContractTemplate."Invoice after Service");
              ServContract.VALIDATE("Invoice Period",ContractTemplate."Invoice Period");
              ServContract.VALIDATE("Price Inv. Increase Code",ContractTemplate."Price Inv. Increase Code");
              ServContract.VALIDATE("Allow Unbalanced Amounts",ContractTemplate."Allow Unbalanced Amounts");
              ServContract.VALIDATE("Contract Lines on Invoice",ContractTemplate."Contract Lines on Invoice");
              ServContract.VALIDATE("Combine Invoices",ContractTemplate."Combine Invoices");
              ServContract.VALIDATE("Automatic Credit Memos",ContractTemplate."Automatic Credit Memos");
              ServContract.VALIDATE(Prepaid,ContractTemplate.Prepaid);
              ServContract.VALIDATE("Serv. Contract Acc. Gr. Code",ContractTemplate."Serv. Contract Acc. Gr. Code");
              ServContract."Template No." := ContractTemplate."No.";

              ServContract.CreateDim(
                DATABASE::"Service Contract Template",ContractTemplate."No.",
                0,'',0,'',0,'',0,'');
              with ServContract do
                CreateDim(
                  DATABASE::"Service Contract Template","Template No.",
                  DATABASE::Customer,"Bill-to Customer No.",
                  DATABASE::"Salesperson/Purchaser","Salesperson Code",
                  DATABASE::"Responsibility Center","Responsibility Center",
                  DATABASE::"Service Order Type","Service Order Type");

              ContractDisc.RESET;
              ContractDisc.SETRANGE("Contract Type",ServContract."Contract Type");
              ContractDisc.SETRANGE("Contract No.",ServContract."Contract No.");
              ContractDisc.DELETEALL;

              TemplateDisc.RESET;
              TemplateDisc.SETRANGE("Contract Type",TemplateDisc."Contract Type"::Template);
              TemplateDisc.SETRANGE("Contract No.",ContractTemplate."No.");
              if TemplateDisc.FIND('-') then
                repeat
                  ContractDisc := TemplateDisc;
                  ContractDisc."Contract Type" := ServContract."Contract Type";
                  ContractDisc."Contract No." := ServContract."Contract No.";
                  ContractDisc.INSERT;
                until TemplateDisc.NEXT = 0;

              Rec := ServContract;
            end;
          END;

  }
  CODE
  {
    VAR
      ServContract@1000 : Record "Service Contract Header";
      ContractTemplate@1001 : Record "Service Contract Template";
      ContractDisc@1002 : Record "Contract/Service Discount";
      TemplateDisc@1003 : Record "Contract/Service Discount";

    BEGIN
    END.
  }
}

