OBJECT Page 5769 Whse. Receipt Subform
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    MultipleNewLines=true;
    InsertAllowed=false;
    LinksAllowed=false;
    SourceTable="Warehouse Receipt Line";
    DelayedInsert=true;
    PageType=ListPart;
    AutoSplitKey=true;
    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1900724404;2 ;Action    ;
                      Name=Source &Document Line;
                      CaptionML=ENU=Source &Document Line;
                      ToolTipML=ENU="View the line on a released source document that the warehouse activity is for. ";
                      ApplicationArea=#Advanced;
                      Image=SourceDocLine;
                      OnAction=BEGIN
                                 ShowSourceLine;
                               END;
                                }
      { 1901313204;2 ;Action    ;
                      Name=&Bin Contents List;
                      AccessByPermission=TableData "Bin Content"=R;
                      CaptionML=ENU=&Bin Contents List;
                      ToolTipML=ENU=View the contents of each bin and the parameters that define how items are routed through the bin.;
                      ApplicationArea=#Warehouse;
                      Image=BinContent;
                      OnAction=BEGIN
                                 ShowBinContents;
                               END;
                                }
      { 1903867104;2 ;ActionGroup;
                      Name=Item Availability by;
                      CaptionML=ENU=Item Availability by;
                      Image=ItemAvailability }
      { 3       ;3   ;Action    ;
                      Name=Event;
                      CaptionML=ENU=Event;
                      ToolTipML=ENU=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.;
                      ApplicationArea=#Advanced;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailability(ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 1901313504;3 ;Action    ;
                      Name=Period;
                      CaptionML=ENU=Period;
                      ToolTipML=ENU=View the projected quantity of the item over time according to time periods, such as day, week, or month.;
                      ApplicationArea=#Advanced;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailability(ItemAvailFormsMgt.ByPeriod);
                               END;
                                }
      { 1900295904;3 ;Action    ;
                      Name=Variant;
                      CaptionML=ENU=Variant;
                      ToolTipML=ENU=View or edit the item's variants. Instead of setting up each color of an item as a separate item, you can set up the various colors as variants of the item.;
                      ApplicationArea=#Advanced;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailability(ItemAvailFormsMgt.ByVariant);
                               END;
                                }
      { 1901742304;3 ;Action    ;
                      Name=Location;
                      AccessByPermission=TableData Location=R;
                      CaptionML=ENU=Location;
                      ToolTipML=ENU=View the actual and projected quantity of the item per location.;
                      ApplicationArea=#Advanced;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailability(ItemAvailFormsMgt.ByLocation);
                               END;
                                }
      { 1903100004;2 ;Action    ;
                      Name=ItemTrackingLines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      ToolTipML=ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 12  ;2   ;Field     ;
                Name=Source Document;
                ToolTipML=ENU=Specifies the type of document to which the line relates.;
                ApplicationArea=#Warehouse;
                SourceExpr="Source Document";
                ImplicitType=Option }

    { 6   ;2   ;Field     ;
                Name=Source No.;
                ToolTipML=ENU=Specifies the number of the source document from which the entry originates.;
                ApplicationArea=#Warehouse;
                SourceExpr="Source No.";
                ImplicitType=Code20 }

    { 22  ;2   ;Field     ;
                Name=Item No.;
                ToolTipML=ENU=Specifies the number of the item that is expected to be received.;
                ApplicationArea=#Warehouse;
                SourceExpr="Item No.";
                ImplicitType=Code20 }

    { 14  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 30  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the description of the item in the line.;
                ApplicationArea=#Warehouse;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 16  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the code of the location where the items should be received.;
                ApplicationArea=#Warehouse;
                SourceExpr="Location Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 42  ;2   ;Field     ;
                Name=Zone Code;
                ToolTipML=ENU=Specifies the zone in which the items are being received.;
                ApplicationArea=#Warehouse;
                SourceExpr="Zone Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 40  ;2   ;Field     ;
                Name=Bin Code;
                ToolTipML=ENU=Specifies the bin where the items are picked or put away.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             BinCodeOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 38  ;2   ;Field     ;
                Name=Cross-Dock Zone Code;
                ToolTipML=ENU=Specifies the zone code that will be used for the quantity of items to be cross-docked.;
                ApplicationArea=#Warehouse;
                SourceExpr="Cross-Dock Zone Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 20  ;2   ;Field     ;
                Name=Cross-Dock Bin Code;
                ToolTipML=ENU=Specifies the bin code that will be used for the quantity of items to be cross-docked.;
                ApplicationArea=#Warehouse;
                SourceExpr="Cross-Dock Bin Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 18  ;2   ;Field     ;
                Name=Shelf No.;
                ToolTipML=ENU=Specifies the shelf number of the item for information use.;
                ApplicationArea=#Warehouse;
                SourceExpr="Shelf No.";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 34  ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the quantity that should be received.;
                ApplicationArea=#Warehouse;
                SourceExpr=Quantity;
                ImplicitType=Decimal }

    { 4   ;2   ;Field     ;
                Name=Qty. (Base);
                ToolTipML=ENU=Specifies the quantity to be received, in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. (Base)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 46  ;2   ;Field     ;
                Name=Qty. to Receive;
                ToolTipML=ENU=Specifies the quantity of items that remains to be received.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. to Receive";
                OnValidate=BEGIN
                             QtytoReceiveOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 44  ;2   ;Field     ;
                Name=Qty. to Cross-Dock;
                ToolTipML=ENU=Specifies the suggested quantity to put into the cross-dock bin on the put-away document when the receipt is posted.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. to Cross-Dock";
                Visible=FALSE;
                OnLookup=BEGIN
                           ShowCrossDockOpp(CrossDockOpp2);
                           CurrPage.UPDATE;
                         END;

                ImplicitType=Decimal }

    { 32  ;2   ;Field     ;
                Name=Qty. Received;
                ToolTipML=ENU=Specifies the quantity for this line that has been posted as received.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Received";
                Visible=TRUE;
                ImplicitType=Decimal }

    { 28  ;2   ;Field     ;
                Name=Qty. to Receive (Base);
                ToolTipML=ENU=Specifies the Qty. to Receive in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. to Receive (Base)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 48  ;2   ;Field     ;
                Name=Qty. to Cross-Dock (Base);
                ToolTipML=ENU=Specifies the suggested base quantity to put into the cross-dock bin on the put-away document hen the receipt is posted.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. to Cross-Dock (Base)";
                Visible=FALSE;
                OnLookup=BEGIN
                           ShowCrossDockOpp(CrossDockOpp2);
                           CurrPage.UPDATE;
                         END;

                ImplicitType=Decimal }

    { 36  ;2   ;Field     ;
                Name=Qty. Received (Base);
                ToolTipML=ENU=Specifies the quantity received, in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Received (Base)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 8   ;2   ;Field     ;
                Name=Qty. Outstanding;
                ToolTipML=ENU=Specifies the quantity that still needs to be handled.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Outstanding";
                Visible=TRUE;
                ImplicitType=Decimal }

    { 10  ;2   ;Field     ;
                Name=Qty. Outstanding (Base);
                ToolTipML=ENU=Specifies the quantity that still needs to be handled, in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Outstanding (Base)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 2   ;2   ;Field     ;
                Name=Due Date;
                ToolTipML=ENU=Specifies the date on which you expect to receive the items on the line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Due Date";
                ImplicitType=Date }

    { 26  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Warehouse;
                SourceExpr="Unit of Measure Code";
                ImplicitType=Code10 }

    { 24  ;2   ;Field     ;
                Name=Qty. per Unit of Measure;
                ToolTipML=ENU=Specifies the number of base units of measure, that are in the unit of measure specified for the item on the line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. per Unit of Measure";
                ImplicitType=Decimal }

  }
  CODE
  {
    VAR
      CrossDockOpp2@1000 : Record "Whse. Cross-Dock Opportunity";
      ItemAvailFormsMgt@1002 : Codeunit "Item Availability Forms Mgt";
      Text001@1001 : TextConst 'ENU=Cross-docking has been disabled for item %1 or location %2.';

    LOCAL PROCEDURE ShowSourceLine@1();
    VAR
      WMSMgt@1000 : Codeunit "WMS Management";
    BEGIN
      WMSMgt.ShowSourceDocLine(
        "Source Type","Source Subtype","Source No.","Source Line No.",0);
    END;

    LOCAL PROCEDURE ShowBinContents@6();
    VAR
      BinContent@1000 : Record "Bin Content";
    BEGIN
      BinContent.ShowBinContents("Location Code","Item No.","Variant Code","Bin Code");
    END;

    LOCAL PROCEDURE ItemAvailability@7(AvailabilityType@1000 : 'Date,Variant,Location,Bin,Event,BOM');
    BEGIN
      ItemAvailFormsMgt.ShowItemAvailFromWhseRcptLine(Rec,AvailabilityType);
    END;

    [External]
    PROCEDURE WhsePostRcptYesNo@3();
    VAR
      WhseRcptLine@1001 : Record "Warehouse Receipt Line";
    BEGIN
      WhseRcptLine.COPY(Rec);
      CODEUNIT.RUN(CODEUNIT::"Whse.-Post Receipt (Yes/No)",WhseRcptLine);
      RESET;
      SETCURRENTKEY("No.","Sorting Sequence No.");
      CurrPage.UPDATE(false);
    END;

    [External]
    PROCEDURE WhsePostRcptPrint@4();
    VAR
      WhseRcptLine@1001 : Record "Warehouse Receipt Line";
    BEGIN
      WhseRcptLine.COPY(Rec);
      CODEUNIT.RUN(CODEUNIT::"Whse.-Post Receipt + Print",WhseRcptLine);
      RESET;
      SETCURRENTKEY("No.","Sorting Sequence No.");
      CurrPage.UPDATE(false);
    END;

    [External]
    PROCEDURE WhsePostRcptPrintPostedRcpt@5();
    VAR
      WhseRcptLine@1001 : Record "Warehouse Receipt Line";
    BEGIN
      WhseRcptLine.COPY(Rec);
      CODEUNIT.RUN(CODEUNIT::"Whse.-Post Receipt + Pr. Pos.",WhseRcptLine);
      RESET;
      CurrPage.UPDATE(false);
    END;

    [External]
    PROCEDURE AutofillQtyToReceive@10();
    VAR
      WhseRcptLine@1000 : Record "Warehouse Receipt Line";
    BEGIN
      WhseRcptLine.COPY(Rec);
      AutofillQtyToReceive(WhseRcptLine);
    END;

    [External]
    PROCEDURE DeleteQtyToReceive@8();
    VAR
      WhseRcptLine@1000 : Record "Warehouse Receipt Line";
    BEGIN
      WhseRcptLine.COPY(Rec);
      DeleteQtyToReceive(WhseRcptLine);
    END;

    LOCAL PROCEDURE OpenItemTrackingLines@6500();
    BEGIN
      OpenItemTrackingLines;
    END;

    LOCAL PROCEDURE ShowCrossDockOpp@2(VAR CrossDockOpp@1000 : TEMPORARY Record "Whse. Cross-Dock Opportunity");
    VAR
      CrossDockMgt@1001 : Codeunit "Whse. Cross-Dock Management";
      UseCrossDock@1002 : Boolean;
    BEGIN
      CrossDockMgt.GetUseCrossDock(UseCrossDock,"Location Code","Item No.");
      if not UseCrossDock then
        ERROR(Text001,"Item No.","Location Code");
      CrossDockMgt.ShowCrossDock(CrossDockOpp,'',"No.","Line No.","Location Code","Item No.","Variant Code");
    END;

    LOCAL PROCEDURE BinCodeOnAfterValidate@19073508();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE QtytoReceiveOnAfterValidate@19059245();
    BEGIN
      CurrPage.SAVERECORD;
    END;

    BEGIN
    END.
  }
}

