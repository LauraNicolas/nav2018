OBJECT Table 5820 Cost Element Buffer
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Cost Element Buffer;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Direct Cost,Revaluation,Rounding,Indirect Cost,Variance,Total;
                                                   OptionString="Direct Cost",Revaluation,Rounding,"Indirect Cost",Variance,Total }
    { 2   ;   ;Variance Type       ;Option        ;CaptionML=ENU=Variance Type;
                                                   OptionCaptionML=ENU=" ,Purchase,Material,Capacity,Capacity Overhead,Manufacturing Overhead,Subcontracted";
                                                   OptionString=" ",Purchase,Material,Capacity,"Capacity Overhead","Manufacturing Overhead",Subcontracted }
    { 3   ;   ;Actual Cost         ;Decimal       ;CaptionML=ENU=Actual Cost;
                                                   AutoFormatType=1 }
    { 4   ;   ;Actual Cost (ACY)   ;Decimal       ;CaptionML=ENU=Actual Cost (ACY);
                                                   AutoFormatType=1 }
    { 5   ;   ;Rounding Residual   ;Decimal       ;CaptionML=ENU=Rounding Residual;
                                                   AutoFormatType=1 }
    { 6   ;   ;Rounding Residual (ACY);Decimal    ;CaptionML=ENU=Rounding Residual (ACY);
                                                   AutoFormatType=1 }
    { 7   ;   ;Expected Cost       ;Decimal       ;CaptionML=ENU=Expected Cost;
                                                   AutoFormatType=1 }
    { 8   ;   ;Expected Cost (ACY) ;Decimal       ;CaptionML=ENU=Expected Cost (ACY);
                                                   AutoFormatType=1 }
    { 9   ;   ;Invoiced Quantity   ;Decimal       ;CaptionML=ENU=Invoiced Quantity }
    { 10  ;   ;Remaining Quantity  ;Decimal       ;CaptionML=ENU=Remaining Quantity }
    { 11  ;   ;Inbound Completely Invoiced;Boolean;CaptionML=ENU=Inbound Completely Invoiced }
    { 12  ;   ;Last Valid Value Entry No;Integer  ;CaptionML=ENU=Last Valid Value Entry No }
  }
  KEYS
  {
    {    ;Type,"Variance Type"                    ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE AddActualCost@1(NewType@1000 : Option;NewVarianceType@1003 : Option;NewActualCost@1001 : Decimal;NewActualCostACY@1002 : Decimal);
    BEGIN
      if not HasNewCost(NewActualCost,NewActualCostACY) then begin
        Retrieve(NewType,NewVarianceType);
        exit;
      end;
      if Retrieve(NewType,NewVarianceType) then begin
        "Actual Cost" := "Actual Cost" + NewActualCost;
        "Actual Cost (ACY)" := "Actual Cost (ACY)" + NewActualCostACY;
        MODIFY;
      end else begin
        "Actual Cost" := NewActualCost;
        "Actual Cost (ACY)" := NewActualCostACY;
        INSERT;
      end;
    END;

    [External]
    PROCEDURE AddExpectedCost@2(NewType@1000 : Option;NewVarianceType@1003 : Option;NewExpectedCost@1001 : Decimal;NewExpectedCostACY@1002 : Decimal);
    BEGIN
      if not HasNewCost(NewExpectedCost,NewExpectedCostACY) then begin
        Retrieve(NewType,NewVarianceType);
        exit;
      end;
      if Retrieve(NewType,NewVarianceType) then begin
        "Expected Cost" := "Expected Cost" + NewExpectedCost;
        "Expected Cost (ACY)" := "Expected Cost (ACY)" + NewExpectedCostACY;
        MODIFY;
      end else begin
        "Expected Cost" := NewExpectedCost;
        "Expected Cost (ACY)" := NewExpectedCostACY;
        INSERT;
      end;
    END;

    [External]
    PROCEDURE RoundActualCost@77(ShareOfTotalCost@1003 : Decimal;AmtRndgPrec@1001 : Decimal;AmtRndgPrecACY@1002 : Decimal);
    BEGIN
      "Actual Cost" := ROUND("Actual Cost" * ShareOfTotalCost,AmtRndgPrec);
      "Actual Cost (ACY)" := ROUND("Actual Cost (ACY)" * ShareOfTotalCost,AmtRndgPrecACY);
    END;

    [External]
    PROCEDURE ExcludeEntryFromAvgCostCalc@69(ValueEntry@1001 : Record "Value Entry");
    BEGIN
      "Remaining Quantity" := "Remaining Quantity" - ValueEntry."Item Ledger Entry Quantity";
      "Actual Cost" := "Actual Cost" - ValueEntry."Cost Amount (Actual)" - ValueEntry."Cost Amount (Expected)";
      "Actual Cost (ACY)" :=
        "Actual Cost (ACY)" - ValueEntry."Cost Amount (Actual) (ACY)" - ValueEntry."Cost Amount (Expected) (ACY)";
    END;

    [External]
    PROCEDURE ExcludeBufFromAvgCostCalc@6(InvtAdjmtBuffer@1001 : Record "Inventory Adjustment Buffer");
    BEGIN
      "Remaining Quantity" := "Remaining Quantity" - InvtAdjmtBuffer."Item Ledger Entry Quantity";
      "Actual Cost" := "Actual Cost" - InvtAdjmtBuffer."Cost Amount (Actual)" - InvtAdjmtBuffer."Cost Amount (Expected)";
      "Actual Cost (ACY)" :=
        "Actual Cost (ACY)" - InvtAdjmtBuffer."Cost Amount (Actual) (ACY)" - InvtAdjmtBuffer."Cost Amount (Expected) (ACY)";
    END;

    [External]
    PROCEDURE Retrieve@72(NewType@1001 : Option;NewVarianceType@1000 : Option) : Boolean;
    BEGIN
      RESET;
      Type := NewType;
      "Variance Type" := NewVarianceType;
      if not FIND then begin
        INIT;
        exit(false);
      end;
      exit(true);
    END;

    LOCAL PROCEDURE HasNewCost@54(NewCost@1000 : Decimal;NewCostACY@1001 : Decimal) : Boolean;
    BEGIN
      exit((NewCost <> 0) or (NewCostACY <> 0));
    END;

    [External]
    PROCEDURE DeductOutbndValueEntryFromBuf@8(OutbndValueEntry@1000 : Record "Value Entry";CostElementBuf@1001 : Record "Cost Element Buffer";IsAvgCostCalcTypeItem@1002 : Boolean);
    BEGIN
      if "Remaining Quantity" + OutbndValueEntry."Valued Quantity" <= 0 then
        exit;

      if (OutbndValueEntry."Item Ledger Entry Type" = OutbndValueEntry."Item Ledger Entry Type"::Transfer) and
         IsAvgCostCalcTypeItem
      then
        exit;

      "Remaining Quantity" += OutbndValueEntry."Valued Quantity";
      "Actual Cost" += CostElementBuf."Actual Cost";
      "Actual Cost (ACY)" += CostElementBuf."Actual Cost (ACY)";
    END;

    [External]
    PROCEDURE UpdateAvgCostBuffer@4(CostElementBuf@1000 : Record "Cost Element Buffer";LastValidEntryNo@1001 : Integer);
    BEGIN
      "Actual Cost" := CostElementBuf."Actual Cost";
      "Actual Cost (ACY)" := CostElementBuf."Actual Cost (ACY)";
      "Last Valid Value Entry No" := LastValidEntryNo;
      "Remaining Quantity" := CostElementBuf."Remaining Quantity";
    END;

    [External]
    PROCEDURE UpdateCostElementBuffer@5(AvgCostBuf@1000 : Record "Cost Element Buffer");
    BEGIN
      "Remaining Quantity" := AvgCostBuf."Remaining Quantity";
      "Actual Cost" := AvgCostBuf."Actual Cost";
      "Actual Cost (ACY)" := AvgCostBuf."Actual Cost (ACY)";
      "Rounding Residual" := AvgCostBuf."Rounding Residual";
      "Rounding Residual (ACY)" := AvgCostBuf."Rounding Residual (ACY)";
    END;

    BEGIN
    END.
  }
}

