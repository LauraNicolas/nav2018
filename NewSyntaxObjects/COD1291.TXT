OBJECT Codeunit 1291 DotNet Exception Handler
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      OuterException@1000 : DotNet "'mscorlib'.System.Exception";

    [Internal]
    PROCEDURE Catch@3(VAR Exception@1002 : DotNet "'mscorlib'.System.Exception";Type@1007 : DotNet "'mscorlib'.System.Type");
    BEGIN
      Collect;
      if not CastToType(Exception,Type) then
        Rethrow;
    END;

    [Internal]
    PROCEDURE Collect@1();
    BEGIN
      OuterException := GETLASTERROROBJECT;
    END;

    LOCAL PROCEDURE IsCollected@10() : Boolean;
    BEGIN
      exit(not ISNULL(OuterException));
    END;

    [External]
    PROCEDURE TryCastToType@5(Type@1000 : DotNet "'mscorlib'.System.Type") : Boolean;
    VAR
      Exception@1001 : DotNet "'mscorlib'.System.FormatException";
    BEGIN
      exit(CastToType(Exception,Type));
    END;

    [External]
    PROCEDURE CastToType@2(VAR Exception@1002 : DotNet "'mscorlib'.System.Exception";Type@1007 : DotNet "'mscorlib'.System.Type") : Boolean;
    BEGIN
      if not IsCollected then
        exit(false);

      Exception := OuterException.GetBaseException;
      if ISNULL(Exception) then
        exit(false);

      if Type.Equals(Exception.GetType) then
        exit(true);

      exit(false);
    END;

    [External]
    PROCEDURE GetMessage@6() : Text;
    VAR
      Exception@1000 : DotNet "'mscorlib'.System.Exception";
    BEGIN
      if not IsCollected then
        exit;

      Exception := OuterException.GetBaseException;
      if ISNULL(Exception) then
        exit;

      exit(Exception.Message);
    END;

    [Internal]
    PROCEDURE Rethrow@4();
    VAR
      RootCauseMessage@1000 : Text;
    BEGIN
      RootCauseMessage := GetMessage;

      if RootCauseMessage <> '' then
        ERROR(RootCauseMessage);

      if ISNULL(OuterException.InnerException) then
        ERROR(OuterException.Message);

      ERROR(OuterException.InnerException.Message);
    END;

    BEGIN
    END.
  }
}

