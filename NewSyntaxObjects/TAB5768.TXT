OBJECT Table 5768 Whse. Cross-Dock Opportunity
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Whse. Cross-Dock Opportunity;
    LookupPageID="Cross-Dock Opportunities";
    DrillDownPageID="Cross-Dock Opportunities";
  }
  FIELDS
  {
    { 1   ;   ;Source Template Name;Code10        ;CaptionML=ENU=Source Template Name;
                                                   Editable=false }
    { 2   ;   ;Source Name/No.     ;Code20        ;CaptionML=ENU=Source Name/No.;
                                                   Editable=false }
    { 3   ;   ;Source Line No.     ;Integer       ;CaptionML=ENU=Source Line No.;
                                                   Editable=false }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No.;
                                                   Editable=false }
    { 5   ;   ;From Source Type    ;Integer       ;CaptionML=ENU=From Source Type;
                                                   Editable=false }
    { 6   ;   ;From Source Subtype ;Option        ;CaptionML=ENU=From Source Subtype;
                                                   OptionCaptionML=ENU=0,1,2,3,4,5,6,7,8,9,10;
                                                   OptionString="0","1","2","3","4","5","6","7","8","9","10";
                                                   Editable=false }
    { 7   ;   ;From Source No.     ;Code20        ;CaptionML=ENU=From Source No.;
                                                   Editable=false }
    { 8   ;   ;From Source Line No.;Integer       ;CaptionML=ENU=From Source Line No.;
                                                   Editable=false }
    { 9   ;   ;From Source Subline No.;Integer    ;CaptionML=ENU=From Source Subline No.;
                                                   Editable=false }
    { 10  ;   ;From Source Document;Option        ;CaptionML=ENU=From Source Document;
                                                   OptionCaptionML=ENU=,Sales Order,Sales Return Order,Purchase Order,Purchase Return Order,Inbound Transfer,Outbound Transfer,Prod. Consumption,Prod. Output,Item Ledger Entry,,,,,,,,,,,Assembly Consumption,Assembly Order;
                                                   OptionString=,"Sales Order","Sales Return Order","Purchase Order","Purchase Return Order","Inbound Transfer","Outbound Transfer","Prod. Consumption","Prod. Output","Item Ledger Entry",,,,,,,,,,,"Assembly Consumption","Assembly Order";
                                                   Editable=false }
    { 11  ;   ;To Source Type      ;Integer       ;CaptionML=ENU=To Source Type;
                                                   Editable=false }
    { 12  ;   ;To Source Subtype   ;Option        ;CaptionML=ENU=To Source Subtype;
                                                   OptionCaptionML=ENU=0,1,2,3,4,5,6,7,8,9,10;
                                                   OptionString="0","1","2","3","4","5","6","7","8","9","10";
                                                   Editable=false }
    { 13  ;   ;To Source No.       ;Code20        ;CaptionML=ENU=To Source No.;
                                                   Editable=false }
    { 14  ;   ;To Source Line No.  ;Integer       ;CaptionML=ENU=To Source Line No.;
                                                   Editable=false }
    { 15  ;   ;To Source Subline No.;Integer      ;CaptionML=ENU=To Source Subline No.;
                                                   Editable=false }
    { 16  ;   ;To Source Document  ;Option        ;CaptionML=ENU=To Source Document;
                                                   OptionCaptionML=ENU=,Sales Order,,,,,,,Purchase Return Order,,Outbound Transfer,Prod. Order Comp.,,,,,,,,,Assembly Consumption,Assembly Order;
                                                   OptionString=,"Sales Order",,,,,,,"Purchase Return Order",,"Outbound Transfer","Prod. Order Comp.",,,,,,,,,"Assembly Consumption","Assembly Order";
                                                   BlankZero=true }
    { 17  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=ENU=Item No.;
                                                   Editable=false }
    { 18  ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE ("Item No."=FIELD("Item No."));
                                                   CaptionML=ENU=Variant Code;
                                                   Editable=false }
    { 19  ;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE ("Item No."=FIELD("Item No."));
                                                   CaptionML=ENU=Unit of Measure Code;
                                                   Editable=false }
    { 20  ;   ;Qty. per Unit of Measure;Decimal   ;InitValue=1;
                                                   CaptionML=ENU=Qty. per Unit of Measure;
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 21  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=ENU=Location Code;
                                                   Editable=false }
    { 24  ;   ;Qty. Needed         ;Decimal       ;CaptionML=ENU=Qty. Needed;
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 25  ;   ;Qty. Needed (Base)  ;Decimal       ;CaptionML=ENU=Qty. Needed (Base);
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 26  ;   ;Qty. to Cross-Dock  ;Decimal       ;OnValidate=BEGIN
                                                                "Qty. to Cross-Dock (Base)" := CalcBaseQty("Qty. to Cross-Dock");
                                                                CALCFIELDS("Qty. Cross-Docked (Base)");
                                                                CalcQtyOnCrossDock(NotUsed,QtyOnCrossdockAllUomBase);
                                                                if ("Qty. Cross-Docked (Base)" + "Qty. to Cross-Dock (Base)" - xRec."Qty. to Cross-Dock (Base)") +
                                                                   QtyOnCrossdockAllUomBase >
                                                                   CalcQtyToHandleBase("Source Template Name","Source Name/No.","Source Line No.")
                                                                then
                                                                  ERROR(CrossDockQtyExceedsReceiptQtyErr);
                                                              END;

                                                   CaptionML=ENU=Qty. to Cross-Dock;
                                                   DecimalPlaces=0:5 }
    { 27  ;   ;Qty. to Cross-Dock (Base);Decimal  ;OnValidate=BEGIN
                                                                TESTFIELD("Qty. per Unit of Measure",1);
                                                                VALIDATE("Qty. to Cross-Dock","Qty. to Cross-Dock (Base)");
                                                              END;

                                                   CaptionML=ENU=Qty. to Cross-Dock (Base);
                                                   DecimalPlaces=0:5 }
    { 28  ;   ;Qty. Cross-Docked (Base);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Whse. Cross-Dock Opportunity"."Qty. to Cross-Dock (Base)" WHERE ("Source Template Name"=FIELD("Source Template Name"),
                                                                                                                                     "Source Name/No."=FIELD("Source Name/No."),
                                                                                                                                     "Source Line No."=FIELD("Source Line No."),
                                                                                                                                     "Location Code"=FIELD("Location Code")));
                                                   CaptionML=ENU=Qty. Cross-Docked (Base);
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 29  ;   ;Total Qty. Needed (Base);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Whse. Cross-Dock Opportunity"."Qty. Needed (Base)" WHERE ("Source Template Name"=FIELD("Source Template Name"),
                                                                                                                              "Source Name/No."=FIELD("Source Name/No."),
                                                                                                                              "Source Line No."=FIELD("Source Line No."),
                                                                                                                              "Location Code"=FIELD("Location Code")));
                                                   CaptionML=ENU=Total Qty. Needed (Base) }
    { 36  ;   ;Reserved Quantity   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Reservation Entry".Quantity WHERE ("Source ID"=FIELD("To Source No."),
                                                                                                        "Source Ref. No."=FIELD("To Source Line No."),
                                                                                                        "Source Type"=FIELD("To Source Type"),
                                                                                                        "Source Subtype"=FIELD("To Source Subtype"),
                                                                                                        "Source Prod. Order Line"=FIELD("To Source Subline No."),
                                                                                                        "Reservation Status"=CONST(Reservation)));
                                                   CaptionML=ENU=Reserved Quantity;
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 37  ;   ;Reserved Qty. (Base);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Reservation Entry".Quantity WHERE ("Source ID"=FIELD("To Source No."),
                                                                                                        "Source Ref. No."=FIELD("To Source Line No."),
                                                                                                        "Source Type"=FIELD("To Source Type"),
                                                                                                        "Source Subtype"=FIELD("To Source Subtype"),
                                                                                                        "Source Prod. Order Line"=FIELD("To Source Subline No."),
                                                                                                        "Reservation Status"=CONST(Reservation)));
                                                   CaptionML=ENU=Reserved Qty. (Base);
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 39  ;   ;To-Src. Unit of Measure Code;Code10;TableRelation="Item Unit of Measure".Code WHERE ("Item No."=FIELD("Item No."));
                                                   CaptionML=ENU=To-Src. Unit of Measure Code;
                                                   Editable=false }
    { 40  ;   ;To-Src. Qty. per Unit of Meas.;Decimal;
                                                   InitValue=1;
                                                   CaptionML=ENU=To-Src. Qty. per Unit of Meas.;
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 41  ;   ;Due Date            ;Date          ;CaptionML=ENU=Due Date;
                                                   Editable=false }
    { 42  ;   ;Pick Qty.           ;Decimal       ;FieldClass=Normal;
                                                   CaptionML=ENU=Pick Qty.;
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 43  ;   ;Pick Qty. (Base)    ;Decimal       ;FieldClass=Normal;
                                                   CaptionML=ENU=Pick Qty. (Base);
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 44  ;   ;Picked Qty.         ;Decimal       ;CaptionML=ENU=Picked Qty.;
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 45  ;   ;Picked Qty. (Base)  ;Decimal       ;CaptionML=ENU=Picked Qty. (Base);
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"Source Template Name","Source Name/No.","Source Line No.","Line No.";
                                                   SumIndexFields="Qty. to Cross-Dock","Qty. to Cross-Dock (Base)";
                                                   MaintainSIFTIndex=false;
                                                   Clustered=true }
    {    ;"Item No.","Location Code"              ;SumIndexFields="Qty. to Cross-Dock","Qty. to Cross-Dock (Base)","Qty. Needed","Qty. Needed (Base)" }
    {    ;"From Source Type","From Source Subtype","From Source No.","From Source Line No.","From Source Subline No.";
                                                   SumIndexFields="Qty. Needed","Qty. Needed (Base)";
                                                   MaintainSIFTIndex=false }
    {    ;"To Source Type","To Source Subtype","To Source No.","To Source Line No.","To Source Subline No.";
                                                   SumIndexFields="Qty. to Cross-Dock","Qty. to Cross-Dock (Base)";
                                                   MaintainSIFTIndex=false }
    {    ;"Due Date"                               }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CrossDockQtyExceedsReceiptQtyErr@1001 : TextConst 'ENU=The sum of the Qty. to Cross-Dock and Qty. Cross-Docked (Base) fields must not exceed the value in the Qty. to Receive field on the warehouse receipt line.';
      QtyOnCrossdockAllUomBase@1006 : Decimal;
      NotUsed@1003 : Decimal;

    [External]
    PROCEDURE AutoFillQtyToCrossDock@1(VAR Rec@1000 : Record "Whse. Cross-Dock Opportunity");
    VAR
      CrossDock@1001 : Record "Whse. Cross-Dock Opportunity";
      CrossDockMgt@1002 : Codeunit "Whse. Cross-Dock Management";
      QtyOnCrossDockBase@1003 : Decimal;
      QtyToHandleBase@1005 : Decimal;
      Dummy@1004 : Decimal;
    BEGIN
      CrossDock.COPYFILTERS(Rec);
      with CrossDock do
        if FIND('-') then begin
          QtyToHandleBase := CalcQtyToHandleBase("Source Template Name","Source Name/No.","Source Line No.");

          CrossDockMgt.CalcCrossDockedItems("Item No.","Variant Code",
            "Unit of Measure Code","Location Code",Dummy,QtyOnCrossDockBase);
          QtyOnCrossDockBase += CrossDockMgt.CalcCrossDockReceivedNotCrossDocked("Location Code","Item No.","Variant Code");

          repeat
            CALCFIELDS("Qty. Cross-Docked (Base)");
            if ("Qty. Cross-Docked (Base)" + QtyOnCrossDockBase) >= QtyToHandleBase then
              exit;
            if "Qty. Needed (Base)" <> Rec."Qty. to Cross-Dock (Base)" then
              if (QtyToHandleBase - "Qty. Cross-Docked (Base)" - QtyOnCrossDockBase) > "Qty. Needed (Base)" then begin
                VALIDATE(
                  "Qty. to Cross-Dock",
                  CalcQty("Qty. Needed (Base)","To-Src. Qty. per Unit of Meas."));
                MODIFY;
              end else begin
                VALIDATE(
                  "Qty. to Cross-Dock",
                  CalcQty(QtyToHandleBase - "Qty. Cross-Docked (Base)" - QtyOnCrossDockBase,"To-Src. Qty. per Unit of Meas."));
                MODIFY;
              end;
          until NEXT = 0;
        end;
    END;

    LOCAL PROCEDURE CalcBaseQty@14(Qty@1000 : Decimal) : Decimal;
    BEGIN
      TESTFIELD("To-Src. Qty. per Unit of Meas.");
      exit(ROUND(Qty * "To-Src. Qty. per Unit of Meas.",0.00001));
    END;

    LOCAL PROCEDURE CalcQty@2(QtyBase@1000 : Decimal;QtyPerUOM@1001 : Decimal) : Decimal;
    VAR
      Discriminant@1002 : Decimal;
    BEGIN
      if QtyPerUOM = 0 then
        QtyPerUOM := 1;
      Discriminant := QtyBase mod QtyPerUOM;
      if Discriminant = 0 then
        exit(ROUND(QtyBase / QtyPerUOM,0.00001));
    END;

    LOCAL PROCEDURE CalcQtyToHandleBase@3(TemplateName@1000 : Code[10];NameNo@1001 : Code[20];LineNo@1002 : Integer) QtyToHandleBase@1004 : Decimal;
    VAR
      ReceiptLine@1003 : Record "Warehouse Receipt Line";
    BEGIN
      QtyToHandleBase := 0;
      if TemplateName = '' then begin
        ReceiptLine.GET(NameNo,LineNo);
        QtyToHandleBase := ReceiptLine."Qty. to Receive (Base)";
      end;
    END;

    LOCAL PROCEDURE CalcQtyOnCrossDock@4(VAR QtyOnCrossDockUOMBase@1002 : Decimal;VAR QtyOnCrossDockAllUOMBase@1003 : Decimal);
    VAR
      ReceiptLine@1004 : Record "Warehouse Receipt Line";
      CrossDockMgt@1000 : Codeunit "Whse. Cross-Dock Management";
    BEGIN
      if "Source Template Name" = '' then begin
        ReceiptLine.GET("Source Name/No.","Source Line No.");
        CrossDockMgt.CalcCrossDockedItems(ReceiptLine."Item No.",ReceiptLine."Variant Code",
          ReceiptLine."Unit of Measure Code",ReceiptLine."Location Code",QtyOnCrossDockUOMBase,
          QtyOnCrossDockAllUOMBase);
        QtyOnCrossDockAllUOMBase +=
          CrossDockMgt.CalcCrossDockReceivedNotCrossDocked(
            ReceiptLine."Location Code",ReceiptLine."Item No.",ReceiptLine."Variant Code");
      end;
    END;

    [External]
    PROCEDURE ShowReservation@10();
    VAR
      SalesLine@1000 : Record "Sales Line";
      ProdComp@1001 : Record "Prod. Order Component";
      TransLine@1002 : Record "Transfer Line";
      AssemblyLine@1003 : Record "Assembly Line";
    BEGIN
      case "To Source Type" of
        37:
          begin
            SalesLine.GET("To Source Subtype","To Source No.","To Source Line No.");
            SalesLine.ShowReservation;
          end;
        5407:
          begin
            ProdComp.GET("To Source Subtype","To Source No.","To Source Subline No.","To Source Line No.");
            ProdComp.ShowReservation;
          end;
        5741:
          begin
            TransLine.GET("To Source No.","To Source Line No.");
            TransLine.ShowReservation;
          end;
        901:
          begin
            AssemblyLine.GET("To Source Subtype","To Source No.","To Source Line No.");
            AssemblyLine.ShowReservation;
          end;
      end;
    END;

    BEGIN
    END.
  }
}

