OBJECT Page 5340 CRM Systemuser List
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Users - Microsoft Dynamics 365 for Sales;
    InsertAllowed=false;
    DeleteAllowed=false;
    SourceTable="CRM Systemuser";
    SourceTableView=SORTING(FullName);
    PageType=List;
    OnInit=BEGIN
             CODEUNIT.RUN(CODEUNIT::"CRM Integration Management");
           END;

    OnAfterGetRecord=VAR
                       CRMIntegrationRecord@1000 : Record "CRM Integration Record";
                       SalespersonPurchaser@1004 : Record "Salesperson/Purchaser";
                       RecordID@1001 : RecordID;
                     BEGIN
                       if CRMIntegrationRecord.FindRecordIDFromID(SystemUserId,DATABASE::"Salesperson/Purchaser",RecordID) then begin
                         if SalespersonPurchaser.GET(RecordID) then
                           InsertUpdateTempCRMSystemUser(SalespersonPurchaser.Code,false)
                         else
                           InsertUpdateTempCRMSystemUser('',false);
                         if CurrentlyCoupledCRMSystemuser.SystemUserId = SystemUserId then begin
                           Coupled := Coupled::Current;
                           FirstColumnStyle := 'Strong';
                         end else begin
                           Coupled := Coupled::Yes;
                           FirstColumnStyle := 'Subordinate';
                         end
                       end else begin
                         InsertUpdateTempCRMSystemUser('',false);
                         Coupled := Coupled::No;
                         FirstColumnStyle := 'None';
                       end;
                     END;

    ActionList=ACTIONS
    {
      { 7       ;    ;ActionContainer;
                      Name=ActionContainer7;
                      ActionContainerType=NewDocumentItems }
      { 8       ;1   ;Action    ;
                      Name=CreateFromCRM;
                      CaptionML=ENU=Create Salesperson in Dynamics NAV;
                      ToolTipML=ENU=Create the Dynamics 365 for Sales user as a salesperson in Dynamics 365.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      Visible=ShowCouplingControls;
                      PromotedIsBig=true;
                      Image=NewCustomer;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=VAR
                                 CRMSystemuser@1000 : Record "CRM Systemuser";
                                 CRMIntegrationManagement@1001 : Codeunit "CRM Integration Management";
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(CRMSystemuser);
                                 CRMIntegrationManagement.CreateNewRecordsFromCRM(CRMSystemuser);
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=Couple;
                      CaptionML=ENU=Couple;
                      ToolTipML=ENU=Link the user in Dynamics 365 for Sales to a user Business Edition.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      Visible=ShowCouplingControls;
                      PromotedIsBig=true;
                      Image=LinkAccount;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=VAR
                                 SalespersonPurchaser@1002 : Record "Salesperson/Purchaser";
                                 CRMIntegrationRecord@1003 : Record "CRM Integration Record";
                                 CRMIntegrationManagement@1000 : Codeunit "CRM Integration Management";
                                 CRMCouplingManagement@1001 : Codeunit "CRM Coupling Management";
                                 OldRecordId@1006 : RecordID;
                                 Synchronize@1004 : Boolean;
                                 Direction@1005 : Option;
                               BEGIN
                                 TempCRMSystemuser.RESET;
                                 TempCRMSystemuser.SETRANGE(IsSyncWithDirectory,true);
                                 if TempCRMSystemuser.FINDSET then
                                   repeat
                                     if TempCRMSystemuser.FirstName <> '' then begin
                                       SalespersonPurchaser.GET(TempCRMSystemuser.FirstName);
                                       CRMIntegrationManagement.CoupleCRMEntity(
                                         SalespersonPurchaser.RECORDID,TempCRMSystemuser.SystemUserId,Synchronize,Direction);
                                     end else begin
                                       CRMIntegrationRecord.FindRecordIDFromID(
                                         TempCRMSystemuser.SystemUserId,DATABASE::"Salesperson/Purchaser",OldRecordId);
                                       CRMCouplingManagement.RemoveCoupling(OldRecordId);
                                     end;
                                   until TempCRMSystemuser.NEXT = 0;
                                 TempCRMSystemuser.MODIFYALL(IsSyncWithDirectory,false);
                                 TempCRMSystemuser.MODIFYALL(IsDisabled,false);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group2;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                Name=FullName;
                CaptionML=ENU=Name;
                ToolTipML=ENU=Specifies data from a corresponding field in a Dynamics 365 for Sales entity. For more information about Dynamics 365 for Sales, see Dynamics 365 for Sales Help Center.;
                ApplicationArea=#Suite;
                SourceExpr=FullName;
                Editable=FALSE;
                StyleExpr=FirstColumnStyle;
                ImplicitType=Text200 }

    { 5   ;2   ;Field     ;
                Name=InternalEMailAddress;
                ExtendedDatatype=E-Mail;
                CaptionML=ENU=Email Address;
                ToolTipML=ENU=Specifies the email address.;
                ApplicationArea=#Suite;
                SourceExpr=InternalEMailAddress;
                Editable=FALSE;
                ImplicitType=Text100 }

    { 6   ;2   ;Field     ;
                Name=MobilePhone;
                CaptionML=ENU=Mobile Phone;
                ToolTipML=ENU=Specifies data from a corresponding field in a Dynamics 365 for Sales entity. For more information about Dynamics 365 for Sales, see Dynamics 365 for Sales Help Center.;
                ApplicationArea=#Suite;
                SourceExpr=MobilePhone;
                Editable=FALSE;
                ImplicitType=Text64 }

    { 3   ;2   ;Field     ;
                Name=Coupled;
                CaptionML=ENU=Coupled;
                ToolTipML=ENU=Specifies if the Dynamics 365 for Sales record is coupled to Dynamics 365.;
                OptionCaptionML=ENU=Yes,No,Current;
                ApplicationArea=#Suite;
                SourceExpr=Coupled;
                Editable=FALSE;
                ImplicitType=Option }

    { 9   ;2   ;Field     ;
                Name=SalespersonPurchaserCode;
                CaptionML=ENU=Salesperson/Purchaser Code;
                ToolTipML=ENU=Specifies the code for the salesperson or purchaser.;
                ApplicationArea=#Suite;
                SourceExpr=TempCRMSystemuser.FirstName;
                TableRelation="Salesperson/Purchaser".Code;
                Enabled=ShowCouplingControls;
                OnValidate=VAR
                             SalespersonPurchaser@1000 : Record "Salesperson/Purchaser";
                           BEGIN
                             if TempCRMSystemuser.FirstName <> '' then begin
                               SalespersonPurchaser.GET(TempCRMSystemuser.FirstName);
                               InsertUpdateTempCRMSystemUser(SalespersonPurchaser.Code,true);
                               CleanDuplicateSalespersonRecords(SalespersonPurchaser.Code,SystemUserId);
                             end else
                               if (TempCRMSystemuser.FirstName = '') and (Coupled = Coupled::Yes) then
                                 InsertUpdateTempCRMSystemUser('',true);
                             CurrPage.UPDATE(false);
                           END;

                OnLookup=VAR
                           SalespersonPurchaser@1001 : Record "Salesperson/Purchaser";
                           SalespersonsPurchasers@1000 : Page "Salespersons/Purchasers";
                         BEGIN
                           SalespersonsPurchasers.LOOKUPMODE(true);
                           if SalespersonsPurchasers.RUNMODAL = ACTION::LookupOK then begin
                             SalespersonsPurchasers.GETRECORD(SalespersonPurchaser);
                             InsertUpdateTempCRMSystemUser(SalespersonPurchaser.Code,true);
                             CleanDuplicateSalespersonRecords(SalespersonPurchaser.Code,SystemUserId);
                           end;
                           CurrPage.UPDATE(false);
                         END;
                          }

  }
  CODE
  {
    VAR
      CurrentlyCoupledCRMSystemuser@1003 : Record "CRM Systemuser";
      TempCRMSystemuser@1002 : TEMPORARY Record "CRM Systemuser";
      Coupled@1001 : 'Yes,No,Current';
      FirstColumnStyle@1004 : Text;
      ShowCouplingControls@1000 : Boolean;

    [External]
    PROCEDURE SetCurrentlyCoupledCRMSystemuser@2(CRMSystemuser@1000 : Record "CRM Systemuser");
    BEGIN
      CurrentlyCoupledCRMSystemuser := CRMSystemuser;
    END;

    LOCAL PROCEDURE InsertUpdateTempCRMSystemUser@7(SalespersonCode@1001 : Code[20];SyncNeeded@1002 : Boolean);
    BEGIN
      // FirstName is used to store coupled/ready to couple Salesperson
      // IsSyncWithDirectory is used to mark CRM User for coupling
      if TempCRMSystemuser.GET(SystemUserId) then begin
        if not TempCRMSystemuser.IsDisabled or SyncNeeded then begin
          TempCRMSystemuser.FirstName := SalespersonCode;
          TempCRMSystemuser.IsSyncWithDirectory := SyncNeeded;
          TempCRMSystemuser.IsDisabled := SyncNeeded;
          TempCRMSystemuser.MODIFY;
        end
      end else begin
        TempCRMSystemuser.SystemUserId := SystemUserId;
        TempCRMSystemuser.FirstName := SalespersonCode;
        TempCRMSystemuser.IsSyncWithDirectory := SyncNeeded;
        TempCRMSystemuser.IsDisabled := SyncNeeded;
        TempCRMSystemuser.INSERT;
      end;
    END;

    LOCAL PROCEDURE CleanDuplicateSalespersonRecords@1(SalesPersonCode@1001 : Code[20];CRMUserId@1000 : GUID);
    BEGIN
      TempCRMSystemuser.RESET;
      TempCRMSystemuser.SETRANGE(FirstName,SalesPersonCode);
      TempCRMSystemuser.SETFILTER(SystemUserId,'<>' + FORMAT(CRMUserId));
      if TempCRMSystemuser.FINDFIRST then begin
        TempCRMSystemuser.IsDisabled := true;
        TempCRMSystemuser.FirstName := '';
        TempCRMSystemuser.MODIFY;
      end;
    END;

    PROCEDURE Initialize@3(NewShowCouplingControls@1000 : Boolean);
    BEGIN
      ShowCouplingControls := NewShowCouplingControls;
    END;

    BEGIN
    END.
  }
}

