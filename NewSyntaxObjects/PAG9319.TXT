OBJECT Page 9319 Service Invoices
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Service Invoices;
    SourceTable="Service Header";
    SourceTableView=WHERE("Document Type"=CONST(Invoice));
    DataCaptionFields="Customer No.";
    PageType=List;
    CardPageID="Service Invoice";
    OnOpenPage=BEGIN
                 SetSecurityFilterOnRespCenter;

                 CopyCustomerFilter;
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 1102601022;1 ;ActionGroup;
                      Name=&Invoice;
                      CaptionML=ENU=&Invoice;
                      Image=Invoice }
      { 1102601024;2 ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      ToolTipML=ENU=View statistical information, such as the value of posted entries, for the record.;
                      ApplicationArea=#Service;
                      Promoted=true;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CalcInvDiscForHeader;
                                 COMMIT;
                                 PAGE.RUNMODAL(PAGE::"Service Statistics",Rec);
                               END;
                                }
      { 1102601026;2 ;Action    ;
                      Name=Co&mments;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Service;
                      RunObject=Page "Service Comment Sheet";
                      RunPageLink="Table Name"=CONST("Service Header"),
                                  "Table Subtype"=FIELD("Document Type"),
                                  "No."=FIELD("No."),
                                  Type=CONST(General);
                      Image=ViewComments }
      { 1102601027;2 ;Action    ;
                      Name=&Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=&Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to journal lines to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                               END;
                                }
      { 1102601029;2 ;Action    ;
                      Name=Service Document Lo&g;
                      CaptionML=ENU=Service Document Lo&g;
                      ToolTipML=ENU=View a list of the service document changes that have been logged. The program creates entries in the window when, for example, the response time or service order status changed, a resource was allocated, a service order was shipped or invoiced, and so on. Each line in this window identifies the event that occurred to the service document. The line contains the information about the field that was changed, its old and new value, the date and time when the change took place, and the ID of the user who actually made the changes.;
                      ApplicationArea=#Service;
                      Image=Log;
                      OnAction=VAR
                                 TempServDocLog@1001 : TEMPORARY Record "Service Document Log";
                               BEGIN
                                 TempServDocLog.RESET;
                                 TempServDocLog.DELETEALL;
                                 TempServDocLog.CopyServLog(TempServDocLog."Document Type"::Invoice,"No.");

                                 TempServDocLog.RESET;
                                 TempServDocLog.SETCURRENTKEY("Change Date","Change Time");
                                 TempServDocLog.ASCENDING(false);

                                 PAGE.RUN(0,TempServDocLog);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 1102601000;1 ;ActionGroup;
                      Name=P&osting;
                      CaptionML=ENU=P&osting;
                      Image=Post }
      { 1102601002;2 ;Action    ;
                      Name=P&ost;
                      ShortCutKey=F9;
                      CaptionML=ENU=P&ost;
                      ToolTipML=ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                      ApplicationArea=#Service;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServPostYesNo@1000 : Codeunit "Service-Post (Yes/No)";
                               BEGIN
                                 ServPostYesNo.PostDocument(Rec);
                               END;
                                }
      { 3       ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=ENU=Preview Posting;
                      ToolTipML=ENU=Review the different types of entries that will be created when you post the document or journal.;
                      ApplicationArea=#Service;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 ServPostYesNo@1000 : Codeunit "Service-Post (Yes/No)";
                               BEGIN
                                 ServPostYesNo.PreviewDocument(Rec);
                               END;
                                }
      { 7       ;2   ;Action    ;
                      Name=PostAndSend;
                      Ellipsis=true;
                      CaptionML=ENU=Post and &Send;
                      ToolTipML=ENU=Finalize and prepare to send the document according to the customer's sending profile, such as attached to an email. The Send document to window opens first so you can confirm or select a sending profile.;
                      ApplicationArea=#Service;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostSendTo;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Service-Post and Send",Rec);
                               END;
                                }
      { 1102601003;2 ;Action    ;
                      Name=Post and &Print;
                      ShortCutKey=Shift+F9;
                      CaptionML=ENU=Post and &Print;
                      ToolTipML=ENU=Finalize and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.;
                      ApplicationArea=#Service;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServPostPrint@1000 : Codeunit "Service-Post+Print";
                               BEGIN
                                 ServPostPrint.PostDocument(Rec);
                               END;
                                }
      { 1102601004;2 ;Action    ;
                      Name=Post &Batch;
                      Ellipsis=true;
                      CaptionML=ENU=Post &Batch;
                      ToolTipML=ENU=Post several documents at once. A report request window opens where you can specify which documents to post.;
                      ApplicationArea=#Service;
                      Image=PostBatch;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Batch Post Service Invoices",true,true,Rec);
                                 CurrPage.UPDATE(false);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the service document you are creating.;
                ApplicationArea=#Service;
                SourceExpr="No.";
                ImplicitType=Code20 }

    { 14  ;2   ;Field     ;
                Name=Status;
                ToolTipML=ENU=Specifies the service order status, which reflects the repair or maintenance status of all service items on the service order.;
                ApplicationArea=#Service;
                SourceExpr=Status;
                ImplicitType=Option }

    { 4   ;2   ;Field     ;
                Name=Order Date;
                ToolTipML=ENU=Specifies the date when the order was created.;
                ApplicationArea=#Service;
                SourceExpr="Order Date";
                ImplicitType=Date }

    { 6   ;2   ;Field     ;
                Name=Order Time;
                ToolTipML=ENU=Specifies the time when the service order was created.;
                ApplicationArea=#Service;
                SourceExpr="Order Time";
                ImplicitType=Time }

    { 10  ;2   ;Field     ;
                Name=Customer No.;
                ToolTipML=ENU=Specifies the number of the customer who owns the items in the service document.;
                ApplicationArea=#Service;
                SourceExpr="Customer No.";
                ImplicitType=Code20 }

    { 25  ;2   ;Field     ;
                Name=Ship-to Code;
                ToolTipML=ENU=Specifies a code for an alternate shipment address if you want to ship to another address than the one that has been entered automatically. This field is also used in case of drop shipment.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Code";
                ImplicitType=Code10 }

    { 12  ;2   ;Field     ;
                Name=Name;
                ToolTipML=ENU=Specifies the name of the customer to whom the items on the document will be shipped.;
                ApplicationArea=#Service;
                SourceExpr=Name;
                ImplicitType=Text50 }

    { 9   ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the code of the location (for example, warehouse or distribution center) of the items specified on the service item lines.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                ImplicitType=Code10 }

    { 23  ;2   ;Field     ;
                Name=Priority;
                ToolTipML=ENU=Specifies the priority of the service order.;
                ApplicationArea=#Service;
                SourceExpr=Priority;
                ImplicitType=Option }

    { 121 ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 119 ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 31  ;2   ;Field     ;
                Name=Assigned User ID;
                ToolTipML=ENU=Specifies the ID of the user who is responsible for the document.;
                ApplicationArea=#Service;
                SourceExpr="Assigned User ID";
                ImplicitType=Code50 }

    { 1102601001;2;Field  ;
                Name=Document Date;
                ToolTipML=ENU=Specifies the date when the document was created.;
                ApplicationArea=#Service;
                SourceExpr="Document Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 1102601006;2;Field  ;
                Name=Payment Terms Code;
                ToolTipML=ENU=Specifies the code that represents the service header payment terms, which are used to calculate the due date and payment discount date.;
                ApplicationArea=#Service;
                SourceExpr="Payment Terms Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 1102601008;2;Field  ;
                Name=Due Date;
                ToolTipML=ENU=Specifies when the invoice is due.;
                ApplicationArea=#Service;
                SourceExpr="Due Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 1102601010;2;Field  ;
                Name=Payment Discount %;
                ToolTipML=ENU=Specifies the percentage of payment discount given, if the customer pays by the date entered in the Pmt. Discount Date field.;
                ApplicationArea=#Service;
                SourceExpr="Payment Discount %";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 1102601012;2;Field  ;
                Name=Payment Method Code;
                ToolTipML=ENU=Specifies the code for the method the customer uses to pay for the service.;
                ApplicationArea=#Service;
                SourceExpr="Payment Method Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1902018507;1;Part   ;
                Name=Part1902018507;
                ApplicationArea=#Service;
                SubPageLink="No."=FIELD("Bill-to Customer No."),
                            "Date Filter"=FIELD("Date Filter");
                PagePartID="Customer Statistics FactBox";
                Visible=TRUE;
                PartType=Page }

    { 1900316107;1;Part   ;
                Name=Part1900316107;
                ApplicationArea=#Service;
                SubPageLink="No."=FIELD("Customer No."),
                            "Date Filter"=FIELD("Date Filter");
                PagePartID="Customer Details FactBox";
                Visible=TRUE;
                PartType=Page }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {

    BEGIN
    END.
  }
}

