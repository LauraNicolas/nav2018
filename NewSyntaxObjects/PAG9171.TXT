OBJECT Page 9171 Profile List
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Profile List;
    SourceTable="All Profile";
    PageType=List;
    CardPageID="Profile Card";
    RefreshOnActivate=true;
    PromotedActionCategoriesML=ENU=New,Process,Report,Resource Translation;
    OnOpenPage=VAR
                 FileManagement@1000 : Codeunit "File Management";
                 PermissionManager@1001 : Codeunit "Permission Manager";
                 ConfPersonalizationMgt@1002 : Codeunit "Conf./Personalization Mgt.";
               BEGIN
                 CanRunDotNetOnClient := FileManagement.CanRunDotNetOnClient;
                 RoleCenterSubtype := RoleCenterTxt;
                 IsSaaS := PermissionManager.SoftwareAsAService;
                 ConfPersonalizationMgt.HideSandboxProfiles(Rec);
               END;

    OnFindRecord=BEGIN
                   exit(FindFirstAllowedRec(Which));
                 END;

    OnNextRecord=BEGIN
                   exit(FindNextAllowedRec(Steps));
                 END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 1102601007;1 ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 17      ;2   ;Action    ;
                      Name=SetDefaultRoleCenter;
                      CaptionML=ENU=Set Default Role Center;
                      ToolTipML=ENU=Specify that this Role Center will open by default when the user starts the client.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=NOT IsSaaS;
                      Image=Default;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ConfPersonalizationMgt@1000 : Codeunit "Conf./Personalization Mgt.";
                               BEGIN
                                 TESTFIELD("Profile ID");
                                 TESTFIELD("Role Center ID");
                                 VALIDATE("Default Role Center",true);
                                 MODIFY;
                                 ConfPersonalizationMgt.ChangeDefaultRoleCenter(Rec);
                               END;
                                }
      { 1102601008;2 ;Action    ;
                      Name=Copy Profile;
                      Ellipsis=true;
                      CaptionML=ENU=Copy Profile;
                      ToolTipML=ENU=Copy an existing profile to create a new profile based on the same content.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Image=Copy;
                      OnAction=VAR
                                 Profile@1035 : Record "All Profile";
                                 CopyProfile@1034 : Report "Copy Profile";
                               BEGIN
                                 Profile.SETRANGE("Profile ID","Profile ID");
                                 CopyProfile.SETTABLEVIEW(Profile);
                                 CopyProfile.RUNMODAL;

                                 if GET(Profile.Scope,Profile."App ID",CopyProfile.GetProfileID) then;
                               END;
                                }
      { 4       ;2   ;Action    ;
                      Name=Import Profile;
                      Ellipsis=true;
                      CaptionML=ENU=Import Profile;
                      ToolTipML=ENU=Implement UI configurations for a profile by importing an XML file that holds the configured profile.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=NOT IsSaaS;
                      Enabled=Scope = Scope::System;
                      Image=Import;
                      OnAction=BEGIN
                                 COMMIT;
                                 REPORT.RUNMODAL(REPORT::"Import Profiles",false);
                                 COMMIT;
                               END;
                                }
      { 16      ;2   ;Action    ;
                      Name=ExportProfiles;
                      CaptionML=ENU=Export Profiles;
                      ToolTipML=ENU=Export a profile, for example to reuse UI configurations in other Dynamics 365 databases.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=NOT IsSaaS;
                      Enabled=Scope = Scope::System;
                      Image=Export;
                      OnAction=VAR
                                 Profile@1000 : Record "All Profile";
                                 ConfPersonalizationMgt@1001 : Codeunit "Conf./Personalization Mgt.";
                               BEGIN
                                 AlertIfTenantProfileSelected;
                                 CurrPage.SETSELECTIONFILTER(Profile);
                                 Profile.SETRANGE(Scope,Profile.Scope::System);
                                 ConfPersonalizationMgt.ExportProfilesInZipFile(Profile);
                               END;
                                }
      { 14      ;1   ;ActionGroup;
                      Name=Resource Translation;
                      CaptionML=ENU=Resource Translation }
      { 6       ;2   ;Action    ;
                      Name=Import Translated Profile Resources From Folder;
                      Ellipsis=true;
                      CaptionML=ENU=Import Translated Profile Resources From Folder;
                      ToolTipML=ENU=Import the translated profile data into the profile from a folder.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=CanRunDotNetOnClient AND (NOT IsSaaS);
                      Enabled=Scope = Scope::System;
                      Image=Language;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ProfileRec@1002 : Record "All Profile";
                                 ConfPersonalizationMgt@1001 : Codeunit "Conf./Personalization Mgt.";
                               BEGIN
                                 AlertIfTenantProfileSelected;
                                 CurrPage.SETSELECTIONFILTER(ProfileRec);
                                 ConfPersonalizationMgt.ImportTranslatedResourcesWithFolderSelection(ProfileRec);
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Name=Import Translated Profile Resources From Zip File;
                      Ellipsis=true;
                      CaptionML=ENU=Import Translated Profile Resources From Zip File;
                      ToolTipML=ENU=Import the translated profile data into the profile from a Zip file.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=NOT IsSaaS;
                      Enabled=Scope = Scope::System;
                      Image=Language;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ProfileRec@1002 : Record "All Profile";
                                 ConfPersonalizationMgt@1001 : Codeunit "Conf./Personalization Mgt.";
                               BEGIN
                                 AlertIfTenantProfileSelected;
                                 CurrPage.SETSELECTIONFILTER(ProfileRec);
                                 ConfPersonalizationMgt.ImportTranslatedResources(ProfileRec,'',true);
                               END;
                                }
      { 11      ;2   ;Action    ;
                      Name=Export Translated Profile Resources;
                      Ellipsis=true;
                      CaptionML=ENU=Export Translated Profile Resources;
                      ToolTipML=ENU=Prepare to perform customized translation of profiles by exporting and importing resource (.resx) files.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=NOT IsSaaS;
                      Enabled=Scope = Scope::System;
                      Image=ExportAttachment;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ProfileRec@1002 : Record "All Profile";
                                 ConfPersonalizationMgt@1001 : Codeunit "Conf./Personalization Mgt.";
                               BEGIN
                                 AlertIfTenantProfileSelected;
                                 CurrPage.SETSELECTIONFILTER(ProfileRec);
                                 ProfileRec.SETRANGE(Scope,ProfileRec.Scope::System);
                                 ConfPersonalizationMgt.ExportTranslatedResourcesWithFolderSelection(ProfileRec);
                               END;
                                }
      { 12      ;2   ;Action    ;
                      Name=Remove Translated Profile Resources;
                      Ellipsis=true;
                      CaptionML=ENU=Remove Translated Profile Resources;
                      ToolTipML=ENU=Remove the translated resource from the profile.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=NOT IsSaaS;
                      Enabled=Scope = Scope::System;
                      Image=RemoveLine;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ProfileRec@1002 : Record "All Profile";
                                 ConfPersonalizationMgt@1001 : Codeunit "Conf./Personalization Mgt.";
                               BEGIN
                                 AlertIfTenantProfileSelected;
                                 CurrPage.SETSELECTIONFILTER(ProfileRec);
                                 ProfileRec.SETRANGE(Scope,ProfileRec.Scope::System);
                                 ConfPersonalizationMgt.RemoveTranslatedResourcesWithLanguageSelection(ProfileRec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Profile ID;
                CaptionML=ENU=Profile ID;
                ToolTipML=ENU=Specifies the ID (name) of the profile.;
                ApplicationArea=#Basic,#Suite;
                NotBlank=true;
                SourceExpr="Profile ID";
                ImplicitType=Code30 }

    { 8   ;2   ;Field     ;
                Name=Description;
                CaptionML=ENU=Description;
                ToolTipML=ENU=Specifies a description of the profile.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                ImplicitType=Text250 }

    { 20  ;2   ;Field     ;
                Name=Scope;
                CaptionML=ENU=Scope;
                ToolTipML=ENU=Specifies if the profile is general for the system or applies to a tenant database.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Scope;
                ImplicitType=Option }

    { 18  ;2   ;Field     ;
                Name=App Name;
                CaptionML=ENU=Extension Name;
                ToolTipML=ENU=Specifies the name of the extension that provided the profile.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="App Name";
                ImplicitType=Text250 }

    { 15  ;2   ;Field     ;
                Name=Role Center ID;
                Lookup=false;
                CaptionML=ENU=Role Center ID;
                ToolTipML=ENU=Specifies the ID of the Role Center associated with the profile.;
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr="Role Center ID";
                ImplicitType=Integer }

    { 1102601000;2;Field  ;
                Name=Default Role Center;
                CaptionML=ENU=Default Role Center;
                ToolTipML=ENU=Specifies whether the Role Center associated with this profile is the default Role Center.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Default Role Center";
                ImplicitType=Boolean }

    { 3   ;2   ;Field     ;
                Name=Disable Personalization;
                ToolTipML=ENU=Specifies whether personalization is disabled for users of the profile.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Disable Personalization";
                ImplicitType=Boolean }

    { 5   ;2   ;Field     ;
                Name=Use Record Notes;
                ToolTipML=ENU=Specifies information used by the OneNote integration feature. For more information, see How to: Set up OneNote Integration for a Group of Users.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Use Record Notes";
                ImplicitType=Boolean }

    { 7   ;2   ;Field     ;
                Name=Record Notebook;
                ToolTipML=ENU=Specifies information used by the OneNote integration feature. For more information, see How to: Set up OneNote Integration for a Group of Users.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Record Notebook";
                ImplicitType=Text250 }

    { 9   ;2   ;Field     ;
                Name=Use Page Notes;
                ToolTipML=ENU=Specifies information used by the OneNote integration feature. For more information, see How to: Set up OneNote Integration for a Group of Users.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Use Page Notes";
                ImplicitType=Boolean }

    { 10  ;2   ;Field     ;
                Name=Page Notebook;
                ToolTipML=ENU=Specifies information used by the OneNote integration feature. For more information, see How to: Set up OneNote Integration for a Group of Users.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Page Notebook";
                ImplicitType=Text250 }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      CanRunDotNetOnClient@1001 : Boolean;
      RoleCenterSubtype@1000 : Text;
      RoleCenterTxt@1002 : TextConst '@@@={Locked};ENU=RoleCenter';
      ListContainsTenantProfilesErr@1004 : TextConst 'ENU=Tenant Profiles does not support this action. Please remove any Tenant Profiles from selection and try again.';
      IsSaaS@1003 : Boolean;

    [External]
    PROCEDURE FindFirstAllowedRec@13(Which@1000 : Text[1024]) : Boolean;
    BEGIN
      if FIND(Which) then
        if not RoleCenterExist("Role Center ID") then
          exit(false);
      exit(true);
    END;

    [External]
    PROCEDURE FindNextAllowedRec@14(Steps@1000 : Integer) : Integer;
    VAR
      ProfileBrowser@1001 : Record "All Profile";
      RealSteps@1003 : Integer;
      NextSteps@1002 : Integer;
    BEGIN
      RealSteps := 0;
      if Steps <> 0 then begin
        ProfileBrowser := Rec;
        repeat
          NextSteps := NEXT(Steps / ABS(Steps));
          if RoleCenterExist("Role Center ID") then begin
            RealSteps := RealSteps + NextSteps;
            ProfileBrowser := Rec;
          end;
        until (NextSteps = 0) or (RealSteps = Steps);
        Rec := ProfileBrowser;
        if not FIND then ;
      end;
      exit(RealSteps);
    END;

    LOCAL PROCEDURE RoleCenterExist@1(PageID@1000 : Integer) : Boolean;
    VAR
      AllObjWithCaption@1002 : Record AllObjWithCaption;
    BEGIN
      if (PageID = PAGE::"O365 Sales Activities RC") or (PageID = PAGE::"O365 Invoicing RC") then
        exit(false);
      AllObjWithCaption.SETRANGE("Object Type",AllObjWithCaption."Object Type"::Page);
      AllObjWithCaption.SETRANGE("Object Subtype",RoleCenterSubtype);
      AllObjWithCaption.SETRANGE("Object ID",PageID);
      exit(not AllObjWithCaption.ISEMPTY);
    END;

    LOCAL PROCEDURE IsTenantProfileSelected@3() : Boolean;
    VAR
      Profile@1000 : Record "All Profile";
    BEGIN
      CurrPage.SETSELECTIONFILTER(Profile);
      Profile.SETRANGE(Scope,Profile.Scope::Tenant);
      if Profile.FINDFIRST then
        exit(true);
      exit(false);
    END;

    LOCAL PROCEDURE AlertIfTenantProfileSelected@4();
    BEGIN
      if IsTenantProfileSelected then
        ERROR(ListContainsTenantProfilesErr);
    END;

    BEGIN
    END.
  }
}

