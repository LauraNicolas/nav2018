OBJECT Page 2108 O365 Outstanding Customer List
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Customers;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    SourceTable=Customer;
    SourceTableView=SORTING(Name);
    PageType=List;
    OnOpenPage=BEGIN
                 SETRANGE("Date Filter",0D,WORKDATE);
                 OverdueBalanceAutoFormatExpr := STRSUBSTNO(AutoFormatExprWithPrefixTxt,OverdueTxt);
               END;

    OnAfterGetRecord=BEGIN
                       SETRANGE("Date Filter",0D,WORKDATE - 1);
                       CALCFIELDS("Balance Due (LCY)");
                       SETRANGE("Date Filter",0D,WORKDATE);
                     END;

    OnDeleteRecord=BEGIN
                     BlockCustomerAndDeleteContact;
                     exit(false);
                   END;

    ActionList=ACTIONS
    {
      { 3       ;    ;ActionContainer;
                      Name=ActionContainer3;
                      ActionContainerType=ActionItems }
      { 5       ;1   ;Action    ;
                      Name=View;
                      ShortCutKey=Return;
                      CaptionML=ENU=View;
                      ToolTipML=ENU=Open the card for the selected record.;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Image=ViewDetails;
                      OnAction=VAR
                                 O365SalesDocument@1000 : Record "O365 Sales Document";
                               BEGIN
                                 O365SalesDocument.SETRANGE(Posted,true);
                                 O365SalesDocument.SETFILTER("Outstanding Amount",'>0');
                                 O365SalesDocument.SETFILTER("Sell-to Customer No.","No.");
                                 O365SalesDocument.SetSortByDocDate;

                                 PAGE.RUN(PAGE::"O365 Customer Sales Documents",O365SalesDocument);
                               END;

                      Gesture=None }
      { 7       ;1   ;Action    ;
                      Name=NewSalesInvoice;
                      CaptionML=ENU=New Invoice;
                      ToolTipML=ENU=Create a new invoice for the customer.;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=NewSalesInvoice;
                      Scope=Repeater;
                      OnAction=VAR
                                 SalesHeader@1000 : Record "Sales Header";
                               BEGIN
                                 SalesHeader.INIT;
                                 SalesHeader.VALIDATE("Document Type",SalesHeader."Document Type"::Invoice);
                                 SalesHeader.VALIDATE("Sell-to Customer No.","No.");
                                 SalesHeader.INSERT(true);
                                 COMMIT;

                                 PAGE.RUN(PAGE::"O365 Sales Invoice",SalesHeader);
                               END;

                      Gesture=LeftSwipe }
    }
  }
  CONTROLS
  {
    { 1900000001;;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                CaptionML=ENU="";
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the customer.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Name;
                ToolTipML=ENU=Specifies the customer's name. This name will appear on all sales documents for the customer. You can enter a maximum of 50 characters, both numbers and letters.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Name;
                ImplicitType=Text50 }

    { 6   ;2   ;Field     ;
                Name=Phone No.;
                ToolTipML=ENU=Specifies the customer's telephone number.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Phone No.";
                ImplicitType=Text30 }

    { 34  ;2   ;Field     ;
                Name=Contact;
                ToolTipML=ENU=Specifies the name of the person you regularly contact when you do business with this customer.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Contact;
                ImplicitType=Text50 }

    { 62  ;2   ;Field     ;
                Name=Balance (LCY);
                ToolTipML=ENU=Specifies the payment amount that the customer owes for completed sales. This value is also known as the customer's balance.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Balance (LCY)";
                AutoFormatType=10;
                AutoFormatExpr='1';
                OnDrillDown=BEGIN
                              OpenCustomerLedgerEntries(false);
                            END;

                ImplicitType=Decimal }

    { 59  ;2   ;Field     ;
                Name=Balance Due (LCY);
                ToolTipML=ENU=Specifies payments from the customer that are overdue per today's date.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                BlankZero=true;
                SourceExpr="Balance Due (LCY)";
                AutoFormatType=10;
                AutoFormatExpr=OverdueBalanceAutoFormatExpr;
                Style=Attention;
                StyleExpr=TRUE;
                OnDrillDown=BEGIN
                              OpenCustomerLedgerEntries(true);
                            END;

                ImplicitType=Decimal }

    { 32  ;2   ;Field     ;
                Name=Sales (LCY);
                ToolTipML=ENU=Specifies the total net amount of sales to the customer in LCY.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Sales (LCY)";
                AutoFormatType=10;
                AutoFormatExpr='1';
                ImplicitType=Decimal }

  }
  CODE
  {
    VAR
      AutoFormatExprWithPrefixTxt@1000 : TextConst '@@@={Locked};ENU=1,,%1';
      OverdueTxt@1001 : TextConst 'ENU=Overdue:';
      OverdueBalanceAutoFormatExpr@1002 : Text;

    LOCAL PROCEDURE BlockCustomerAndDeleteContact@1();
    VAR
      CustContUpdate@1000 : Codeunit "CustCont-Update";
    BEGIN
      Blocked := Blocked::All;
      MODIFY(true);
      CustContUpdate.DeleteCustomerContacts(Rec);
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

