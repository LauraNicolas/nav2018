OBJECT Table 99000763 Routing Header
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    DataCaptionFields="No.",Description;
    OnInsert=BEGIN
               MfgSetup.GET;
               if "No." = '' then begin
                 MfgSetup.TESTFIELD("Routing Nos.");
                 NoSeriesMgt.InitSeries(MfgSetup."Routing Nos.",xRec."No. Series",0D,"No.","No. Series");
               end;
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
             END;

    OnDelete=VAR
               Item@1000 : Record Item;
               RtngLine@1001 : Record "Routing Line";
               MfgComment@1002 : Record "Manufacturing Comment Line";
             BEGIN
               MfgComment.SETRANGE("Table Name",MfgComment."Table Name"::"Routing Header");
               MfgComment.SETRANGE("No.","No.");
               MfgComment.DELETEALL;

               RtngLine.LOCKTABLE;
               RtngLine.SETRANGE("Routing No.","No.");
               RtngLine.DELETEALL(true);

               RtngVersion.SETRANGE("Routing No.","No.");
               RtngVersion.DELETEALL;

               Item.SETRANGE("Routing No.","No.");
               if not Item.ISEMPTY then
                 ERROR(Text000);
             END;

    OnRename=BEGIN
               if Status = Status::Certified then
                 ERROR(Text002,TABLECAPTION,FIELDCAPTION(Status),FORMAT(Status));
             END;

    CaptionML=ENU=Routing Header;
    LookupPageID="Routing List";
    DrillDownPageID="Routing List";
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Description;
                                                   CaptionML=ENU=No. }
    { 2   ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                "Search Description" := Description;
                                                              END;

                                                   CaptionML=ENU=Description }
    { 3   ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 4   ;   ;Search Description  ;Code50        ;CaptionML=ENU=Search Description }
    { 10  ;   ;Last Date Modified  ;Date          ;CaptionML=ENU=Last Date Modified;
                                                   Editable=false }
    { 12  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Manufacturing Comment Line" WHERE ("Table Name"=CONST("Routing Header"),
                                                                                                         "No."=FIELD("No.")));
                                                   CaptionML=ENU=Comment;
                                                   Editable=false }
    { 20  ;   ;Status              ;Option        ;OnValidate=BEGIN
                                                                if (Status <> xRec.Status) and (Status = Status::Certified) then
                                                                  CheckRouting.Calculate(Rec,'');

                                                                if Status = Status::Closed then begin
                                                                  if CONFIRM(
                                                                       Text001,false)
                                                                  then begin
                                                                    RtngVersion.SETRANGE("Routing No.","No.");
                                                                    RtngVersion.MODIFYALL(Status,RtngVersion.Status::Closed);
                                                                  end else
                                                                    Status := xRec.Status;
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=New,Certified,Under Development,Closed;
                                                   OptionString=New,Certified,"Under Development",Closed }
    { 21  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                if Status = Status::Certified then
                                                                  FIELDERROR(Status);
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Serial,Parallel;
                                                   OptionString=Serial,Parallel }
    { 50  ;   ;Version Nos.        ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Version Nos. }
    { 51  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
    {    ;"Search Description"                     }
    {    ;Description                              }
    {    ;Status                                   }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;"No.",Description,Status                 }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=This Routing is being used on Items.';
      Text001@1001 : TextConst 'ENU=All versions attached to the routing will be closed. Close routing?';
      MfgSetup@1002 : Record "Manufacturing Setup";
      RoutingHeader@1003 : Record "Routing Header";
      RtngVersion@1004 : Record "Routing Version";
      CheckRouting@1005 : Codeunit "Check Routing Lines";
      NoSeriesMgt@1006 : Codeunit NoSeriesManagement;
      Text002@1007 : TextConst 'ENU=You cannot rename the %1 when %2 is %3.';

    [External]
    PROCEDURE AssistEdit@2(OldRtngHeader@1000 : Record "Routing Header") : Boolean;
    BEGIN
      with RoutingHeader do begin
        RoutingHeader := Rec;
        MfgSetup.GET;
        MfgSetup.TESTFIELD("Routing Nos.");
        if NoSeriesMgt.SelectSeries(MfgSetup."Routing Nos.",OldRtngHeader."No. Series","No. Series") then begin
          NoSeriesMgt.SetSeries("No.");
          Rec := RoutingHeader;
          exit(true);
        end;
      end;
    END;

    BEGIN
    END.
  }
}

