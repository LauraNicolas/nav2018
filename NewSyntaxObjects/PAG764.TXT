OBJECT Page 764 Acc. Sched. Chart Matrix
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Acc. Sched. Chart Matrix;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    SourceTable="Acc. Sched. Chart Setup Line";
    PageType=List;
    OnFindRecord=BEGIN
                   exit(FINDSET);
                 END;

    OnAfterGetRecord=VAR
                       AccSchedLine@1000 : Record "Acc. Schedule Line";
                     BEGIN
                       if AccSchedLine.GET("Account Schedule Name","Account Schedule Line No.") then begin
                         AccSchedLineRowNo := AccSchedLine."Row No.";
                         AccSchedLineDescription := AccSchedLine.Description;
                         GetChartTypes;
                       end;
                     END;

    ActionList=ACTIONS
    {
      { 7       ;    ;ActionContainer;
                      Name=ActionContainer7;
                      ActionContainerType=ActionItems }
      { 19      ;1   ;Action    ;
                      Name=ShowAll;
                      CaptionML=ENU=Select All;
                      ToolTipML=ENU=Select all lines.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=AllLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 AccSchedChartSetupLine@1000 : Record "Acc. Sched. Chart Setup Line";
                                 AccSchedChartManagement@1001 : Codeunit "Acc. Sched. Chart Management";
                               BEGIN
                                 AccSchedChartSetupLine.COPY(Rec);
                                 AccSchedChartSetupLine.SETRANGE("Column Layout Line No.");
                                 AccSchedChartManagement.SelectAll(AccSchedChartSetupLine,true);
                               END;
                                }
      { 20      ;1   ;Action    ;
                      Name=ShowNone;
                      CaptionML=ENU=Deselect All;
                      ToolTipML=ENU=Unselect all lines.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=CancelAllLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 AccSchedChartSetupLine@1001 : Record "Acc. Sched. Chart Setup Line";
                                 AccSchedChartManagement@1000 : Codeunit "Acc. Sched. Chart Management";
                               BEGIN
                                 AccSchedChartSetupLine.COPY(Rec);
                                 AccSchedChartSetupLine.SETRANGE("Column Layout Line No.");
                                 AccSchedChartManagement.DeselectAll(AccSchedChartSetupLine,true);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 5   ;2   ;Field     ;
                Name=<Row No.>;
                CaptionML=ENU=Row No.;
                ToolTipML=ENU=Specifies the number of the row.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AccSchedLineRowNo;
                Editable=FALSE;
                ImplicitType=Code10 }

    { 6   ;2   ;Field     ;
                Name=<Description>;
                CaptionML=ENU=Description;
                ToolTipML=ENU=Specifies a description of the account schedule.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AccSchedLineDescription;
                Editable=FALSE;
                ImplicitType=Text80 }

    { 18  ;2   ;Field     ;
                Name=ChartType[1];
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr=ChartType[1];
                CaptionClass='3,' + ColumnCaptions[1];
                OnValidate=BEGIN
                             SetChartType(1);
                           END;
                            }

    { 17  ;2   ;Field     ;
                Name=ChartType[2];
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr=ChartType[2];
                CaptionClass='3,' + ColumnCaptions[2];
                OnValidate=BEGIN
                             SetChartType(2);
                           END;
                            }

    { 16  ;2   ;Field     ;
                Name=ChartType[3];
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr=ChartType[3];
                CaptionClass='3,' + ColumnCaptions[3];
                OnValidate=BEGIN
                             SetChartType(3);
                           END;
                            }

    { 15  ;2   ;Field     ;
                Name=ChartType[4];
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr=ChartType[4];
                CaptionClass='3,' + ColumnCaptions[4];
                OnValidate=BEGIN
                             SetChartType(4);
                           END;
                            }

    { 14  ;2   ;Field     ;
                Name=ChartType[5];
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr=ChartType[5];
                CaptionClass='3,' + ColumnCaptions[5];
                OnValidate=BEGIN
                             SetChartType(5);
                           END;
                            }

    { 13  ;2   ;Field     ;
                Name=ChartType[6];
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr=ChartType[6];
                CaptionClass='3,' + ColumnCaptions[6];
                OnValidate=BEGIN
                             SetChartType(6);
                           END;
                            }

    { 12  ;2   ;Field     ;
                Name=ChartType[7];
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr=ChartType[7];
                CaptionClass='3,' + ColumnCaptions[7];
                OnValidate=BEGIN
                             SetChartType(7);
                           END;
                            }

    { 11  ;2   ;Field     ;
                Name=ChartType[8];
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr=ChartType[8];
                CaptionClass='3,' + ColumnCaptions[8];
                OnValidate=BEGIN
                             SetChartType(8);
                           END;
                            }

    { 10  ;2   ;Field     ;
                Name=ChartType[9];
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr=ChartType[9];
                CaptionClass='3,' + ColumnCaptions[9];
                OnValidate=BEGIN
                             SetChartType(9);
                           END;
                            }

    { 9   ;2   ;Field     ;
                Name=ChartType[10];
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr=ChartType[10];
                CaptionClass='3,' + ColumnCaptions[10];
                OnValidate=BEGIN
                             SetChartType(10);
                           END;
                            }

    { 4   ;2   ;Field     ;
                Name=ChartType[11];
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr=ChartType[11];
                CaptionClass='3,' + ColumnCaptions[11];
                OnValidate=BEGIN
                             SetChartType(11);
                           END;
                            }

    { 3   ;2   ;Field     ;
                Name=ChartType[12];
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr=ChartType[12];
                CaptionClass='3,' + ColumnCaptions[12];
                OnValidate=BEGIN
                             SetChartType(12);
                           END;
                            }

  }
  CODE
  {
    VAR
      AccSchedLineRowNo@1004 : Code[10];
      AccSchedLineDescription@1005 : Text[80];
      ChartType@1000 : ARRAY [12] OF '" ",Line,StepLine,Column,StackedColumn';
      ColumnCaptions@1001 : ARRAY [12] OF Text[80];
      ColumnLineNos@1002 : ARRAY [12] OF Integer;
      MaxColumns@1003 : Integer;
      Text001@1006 : TextConst 'ENU=Invalid Column Layout.';

    [External]
    PROCEDURE SetFilters@1(AccountSchedulesChartSetup@1000 : Record "Account Schedules Chart Setup");
    BEGIN
      RESET;

      AccountSchedulesChartSetup.SetLinkToLines(Rec);
      case AccountSchedulesChartSetup."Base X-Axis on" of
        AccountSchedulesChartSetup."Base X-Axis on"::Period:
          if FINDFIRST then
            SETRANGE("Column Layout Line No.","Column Layout Line No.");
        AccountSchedulesChartSetup."Base X-Axis on"::"Acc. Sched. Line",
        AccountSchedulesChartSetup."Base X-Axis on"::"Acc. Sched. Column":
          SETRANGE("Column Layout Line No.",0);
      end;
      UpdateColumnCaptions(AccountSchedulesChartSetup);
    END;

    LOCAL PROCEDURE UpdateColumnCaptions@19(AccountSchedulesChartSetup@1003 : Record "Account Schedules Chart Setup");
    VAR
      ColumnLayout@1002 : Record "Column Layout";
      ColumnNo@1000 : Integer;
      i@1001 : Integer;
    BEGIN
      CLEAR(ColumnCaptions);
      AccountSchedulesChartSetup.FilterColumnLayout(ColumnLayout);
      if ColumnLayout.FINDSET then
        repeat
          ColumnNo := ColumnNo + 1;
          if ColumnNo <= ARRAYLEN(ColumnCaptions) then begin
            ColumnCaptions[ColumnNo] := ColumnLayout."Column Header";
            ColumnLineNos[ColumnNo] := ColumnLayout."Line No.";
          end;
        until ColumnLayout.NEXT = 0;
      MaxColumns := ColumnNo;
      // Set unused columns to blank to prevent RTC to display control ID as caption
      for i := MaxColumns + 1 to ARRAYLEN(ColumnCaptions) do
        ColumnCaptions[i] := ' ';
    END;

    LOCAL PROCEDURE GetChartTypes@3();
    VAR
      AccountSchedulesChartSetup@1003 : Record "Account Schedules Chart Setup";
      AccSchedChartSetupLine@1000 : Record "Acc. Sched. Chart Setup Line";
      AccSchedChartSetupLine2@1002 : Record "Acc. Sched. Chart Setup Line";
      i@1001 : Integer;
    BEGIN
      AccountSchedulesChartSetup.GET("User ID",Name);
      case AccountSchedulesChartSetup."Base X-Axis on" of
        AccountSchedulesChartSetup."Base X-Axis on"::Period:
          for i := 1 to MaxColumns do begin
            if AccSchedChartSetupLine.GET("User ID",Name,"Account Schedule Line No.",ColumnLineNos[i]) then
              ChartType[i] := AccSchedChartSetupLine."Chart Type";
          end;
        AccountSchedulesChartSetup."Base X-Axis on"::"Acc. Sched. Line":
          begin
            AccSchedChartSetupLine.GET("User ID",Name,"Account Schedule Line No.",0);
            if AccSchedChartSetupLine."Chart Type" <> AccSchedChartSetupLine."Chart Type"::" " then
              for i := 1 to MaxColumns do begin
                if AccSchedChartSetupLine2.GET("User ID",Name,0,ColumnLineNos[i]) then
                  ChartType[i] := AccSchedChartSetupLine2."Chart Type"
              end
            else
              for i := 1 to MaxColumns do
                ChartType[i] := AccSchedChartSetupLine2."Chart Type"::" ";
          end;
        AccountSchedulesChartSetup."Base X-Axis on"::"Acc. Sched. Column":
          begin
            AccSchedChartSetupLine.GET("User ID",Name,"Account Schedule Line No.",0);
            for i := 1 to MaxColumns do begin
              AccSchedChartSetupLine2.GET("User ID",Name,0,ColumnLineNos[i]);
              if AccSchedChartSetupLine2."Chart Type" <> AccSchedChartSetupLine2."Chart Type"::" " then
                ChartType[i] := AccSchedChartSetupLine."Chart Type"
              else
                ChartType[i] := AccSchedChartSetupLine."Chart Type"::" ";
            end;
          end;
      end;
      for i := MaxColumns + 1 to ARRAYLEN(ColumnCaptions) do
        ChartType[i] := AccSchedChartSetupLine."Chart Type"::" ";
    END;

    LOCAL PROCEDURE SetChartType@2(ColumnNo@1000 : Integer);
    VAR
      AccSchedChartSetupLine@1001 : Record "Acc. Sched. Chart Setup Line";
      AccountSchedulesChartSetup@1002 : Record "Account Schedules Chart Setup";
    BEGIN
      if ColumnNo > MaxColumns then
        ERROR(Text001);

      AccountSchedulesChartSetup.GET("User ID",Name);
      case AccountSchedulesChartSetup."Base X-Axis on" of
        AccountSchedulesChartSetup."Base X-Axis on"::Period:
          AccSchedChartSetupLine.GET("User ID",Name,"Account Schedule Line No.",ColumnLineNos[ColumnNo]);
        AccountSchedulesChartSetup."Base X-Axis on"::"Acc. Sched. Line":
          AccSchedChartSetupLine.GET("User ID",Name,0,ColumnLineNos[ColumnNo]);
        AccountSchedulesChartSetup."Base X-Axis on"::"Acc. Sched. Column":
          AccSchedChartSetupLine.GET("User ID",Name,"Account Schedule Line No.",0);
      end;
      AccSchedChartSetupLine.VALIDATE("Chart Type",ChartType[ColumnNo]);
      AccSchedChartSetupLine.MODIFY;
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

