OBJECT Page 2106 O365 Item Card
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Price;
    SourceTable=Item;
    DataCaptionExpr=Description;
    PageType=Card;
    RefreshOnActivate=true;
    PromotedActionCategoriesML=ENU=New,Process,Report,Item,History,Special Prices & Discounts,Approve,Request Approval,Details;
    OnInit=VAR
             O365SalesInitialSetup@6115 : Record "O365 Sales Initial Setup";
           BEGIN
             IsUsingVAT := O365SalesInitialSetup.IsUsingVAT;
             IsPhoneApp := CURRENTCLIENTTYPE = CLIENTTYPE::Phone;
           END;

    OnOpenPage=BEGIN
                 if Description = '' then
                   ItemCardStatus := ItemCardStatus::Delete
                 else
                   ItemCardStatus := ItemCardStatus::Keep;
               END;

    OnNewRecord=BEGIN
                  OnNewRec;
                END;

    OnInsertRecord=BEGIN
                     if Description = '' then
                       ItemCardStatus := ItemCardStatus::Delete
                     else
                       ItemCardStatus := ItemCardStatus::Keep;

                     exit(true);
                   END;

    OnModifyRecord=BEGIN
                     if Description = '' then
                       ItemCardStatus := ItemCardStatus::Prompt
                     else
                       ItemCardStatus := ItemCardStatus::Keep;

                     exit(true);
                   END;

    OnQueryClosePage=BEGIN
                       exit(CanExitAfterProcessingItem);
                     END;

    OnAfterGetCurrRecord=VAR
                           VATProductPostingGroup@1000 : Record "VAT Product Posting Group";
                           UnitOfMeasure@1001 : Record "Unit of Measure";
                         BEGIN
                           CreateItemFromTemplate;
                           if VATProductPostingGroup.GET("VAT Prod. Posting Group") then
                             VATProductPostingGroupDescription := VATProductPostingGroup.Description;
                           if UnitOfMeasure.GET("Base Unit of Measure") then
                             UnitOfMeasureDescription := UnitOfMeasure.GetDescriptionInCurrentLanguage;
                           IsPageEditable := CurrPage.EDITABLE;
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Item;
                CaptionML=ENU=Price;
                GroupType=Group }

    { 2   ;2   ;Field     ;
                Name=Description2;
                ToolTipML=ENU=Specifies what you are selling.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Description;
                Visible=NOT IsPhoneApp;
                ImplicitType=Text50 }

    { 4   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies what you are selling.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Description;
                Visible=IsPhoneApp;
                ImplicitType=Text50;
                ShowCaption=false }

    { 38  ;2   ;Field     ;
                Name=Unit Price;
                CaptionML=ENU=Price;
                ToolTipML=ENU=Specifies the price for one unit.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Unit Price";
                ImplicitType=Decimal }

    { 30  ;1   ;Group     ;
                Name=Details;
                CaptionML=ENU=Details;
                GroupType=Group }

    { 6   ;2   ;Field     ;
                Name=UnitOfMeasureDescription;
                CaptionML=ENU=Price is per;
                ToolTipML=ENU=Specifies the price for one unit.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=UnitOfMeasureDescription;
                Editable=IsPageEditable;
                OnValidate=BEGIN
                             CurrPage.UPDATE(true);
                           END;

                OnLookup=VAR
                           TempUnitOfMeasure@1000 : TEMPORARY Record "Unit of Measure";
                         BEGIN
                           TempUnitOfMeasure.CreateListInCurrentLangauage(TempUnitOfMeasure);
                           if PAGE.RUNMODAL(PAGE::"O365 Units of Measure",TempUnitOfMeasure) = ACTION::LookupOK then begin
                             VALIDATE("Base Unit of Measure",TempUnitOfMeasure.Code);
                             UnitOfMeasureDescription := TempUnitOfMeasure.Description;
                           end;
                         END;

                ImplicitType=Text10;
                QuickEntry=FALSE }

    { 8   ;2   ;Field     ;
                Name=Tax Group Code;
                CaptionML=ENU=Tax Group;
                ToolTipML=ENU=Specifies the tax group code for the tax-detail entry.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                NotBlank=true;
                SourceExpr="Tax Group Code";
                Visible=NOT IsUsingVAT;
                ImplicitType=Code20 }

    { 13  ;2   ;Field     ;
                Name=VATProductPostingGroupDescription;
                CaptionML=ENU=VAT;
                ToolTipML=ENU=Specifies the VAT rate for this price.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                NotBlank=true;
                SourceExpr=VATProductPostingGroupDescription;
                Visible=IsUsingVAT;
                Editable=IsPageEditable;
                OnLookup=VAR
                           VATProductPostingGroup@1000 : Record "VAT Product Posting Group";
                         BEGIN
                           if PAGE.RUNMODAL(PAGE::"O365 VAT Product Posting Gr.",VATProductPostingGroup) = ACTION::LookupOK then begin
                             VALIDATE("VAT Prod. Posting Group",VATProductPostingGroup.Code);
                             VATProductPostingGroupDescription := VATProductPostingGroup.Description;
                           end;
                         END;

                ImplicitType=Text50;
                QuickEntry=FALSE }

  }
  CODE
  {
    VAR
      ItemCardStatus@1000 : 'Keep,Delete,Prompt';
      ProcessNewItemOptionQst@1002 : TextConst 'ENU=Keep editing,Discard';
      ProcessNewItemInstructionTxt@1001 : TextConst 'ENU=Description is missing. Keep the price?';
      VATProductPostingGroupDescription@1027 : Text[50];
      NewMode@1006 : Boolean;
      IsUsingVAT@6115 : Boolean;
      IsPageEditable@1003 : Boolean;
      UnitOfMeasureDescription@1004 : Text[10];
      IsPhoneApp@1005 : Boolean;

    LOCAL PROCEDURE OnNewRec@16();
    VAR
      DocumentNoVisibility@1000 : Codeunit DocumentNoVisibility;
    BEGIN
      if GUIALLOWED and DocumentNoVisibility.ItemNoSeriesIsDefault then
        NewMode := true;
    END;

    LOCAL PROCEDURE CanExitAfterProcessingItem@2() : Boolean;
    VAR
      Response@1000 : ',KeepEditing,Discard';
    BEGIN
      if "No." = '' then
        exit(true);

      if ItemCardStatus = ItemCardStatus::Delete then begin
        // workaround for bug: delete for new empty record returns false
        if DELETE(true) then;
        exit(true);
      end;

      if GUIALLOWED and (ItemCardStatus = ItemCardStatus::Prompt) then
        case STRMENU(ProcessNewItemOptionQst,Response::KeepEditing,ProcessNewItemInstructionTxt) of
          Response::Discard:
            exit(DELETE(true));
          else
            exit(false);
        end;

      exit(true);
    END;

    LOCAL PROCEDURE CreateItemFromTemplate@3();
    VAR
      ItemTemplate@1001 : Record "Item Template";
      Item@1000 : Record Item;
      O365SalesManagement@1002 : Codeunit "O365 Sales Management";
    BEGIN
      if NewMode then begin
        if ItemTemplate.NewItemFromTemplate(Item) then begin
          COPY(Item);
          O365SalesManagement.SetItemDefaultValues(Item);
          CurrPage.UPDATE;
        end;
        ItemCardStatus := ItemCardStatus::Delete;
        NewMode := false;
      end;
    END;

    BEGIN
    END.
  }
}

