OBJECT Table 130405 CAL Test Result
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=CAL Test Result;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Integer       ;AutoIncrement=true;
                                                   CaptionML=ENU=No. }
    { 2   ;   ;Test Run No.        ;Integer       ;CaptionML=ENU=Test Run No. }
    { 3   ;   ;Codeunit ID         ;Integer       ;OnValidate=BEGIN
                                                                SetCodeunitName;
                                                              END;

                                                   CaptionML=ENU=Codeunit ID }
    { 4   ;   ;Codeunit Name       ;Text30        ;CaptionML=ENU=Codeunit Name }
    { 5   ;   ;Function Name       ;Text128       ;CaptionML=ENU=Function Name }
    { 6   ;   ;Platform            ;Option        ;CaptionML=ENU=Platform;
                                                   OptionCaptionML=ENU=Classic,ServiceTier;
                                                   OptionString=Classic,ServiceTier }
    { 7   ;   ;Result              ;Option        ;InitValue=Incomplete;
                                                   CaptionML=ENU=Result;
                                                   OptionCaptionML=ENU=Passed,Failed,Inconclusive,Incomplete;
                                                   OptionString=Passed,Failed,Inconclusive,Incomplete }
    { 8   ;   ;Restore             ;Boolean       ;CaptionML=ENU=Restore }
    { 9   ;   ;Execution Time      ;Duration      ;CaptionML=ENU=Execution Time }
    { 10  ;   ;Error Code          ;Text250       ;CaptionML=ENU=Error Code }
    { 11  ;   ;Error Message       ;Text250       ;CaptionML=ENU=Error Message }
    { 12  ;   ;File                ;Text250       ;CaptionML=ENU=File }
    { 14  ;   ;Call Stack          ;BLOB          ;Compressed=false;
                                                   CaptionML=ENU=Call Stack }
    { 15  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit "User Management";
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=false;
                                                   CaptionML=ENU=User ID }
    { 16  ;   ;Start Time          ;DateTime      ;CaptionML=ENU=Start Time;
                                                   Editable=false }
    { 17  ;   ;Finish Time         ;DateTime      ;CaptionML=ENU=Finish Time;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
    {    ;"Test Run No.","Codeunit ID","Function Name",Platform }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [Internal]
    PROCEDURE Add@1(SourceCALTestLine@1000 : Record "CAL Test Line";TestRunNo@1003 : Integer);
    BEGIN
      Initialize(TestRunNo,SourceCALTestLine."Test Codeunit",SourceCALTestLine."Function",SourceCALTestLine."Start Time");
      Update(SourceCALTestLine.Result = SourceCALTestLine.Result::Success,SourceCALTestLine."Finish Time");
    END;

    [External]
    PROCEDURE Initialize@7(TestRunNo@1003 : Integer;CodeunitId@1000 : Integer;FunctionName@1002 : Text[128];StartTime@1001 : DateTime) : Boolean;
    BEGIN
      INIT;
      "No." := GetNextNo;
      "Test Run No." := TestRunNo;
      VALIDATE("Codeunit ID",CodeunitId);
      "Function Name" := FunctionName;
      "Start Time" := StartTime;
      "User ID" := USERID;
      Result := Result::Incomplete;
      Platform := Platform::ServiceTier;
      INSERT;
    END;

    [Internal]
    PROCEDURE Update@6(Success@1000 : Boolean;FinishTime@1001 : DateTime);
    VAR
      Out@1002 : OutStream;
    BEGIN
      if Success then begin
        Result := Result::Passed;
        CLEARLASTERROR;
      end else begin
        "Error Code" := CropTo(GETLASTERRORCODE,250);
        "Error Message" := CropTo(GETLASTERRORTEXT,250);
        "Call Stack".CREATEOUTSTREAM(Out);
        Out.WRITETEXT(GETLASTERRORCALLSTACK);
        if STRPOS("Error Message",'Known failure:') = 1 then
          Result := Result::Inconclusive
        else
          Result := Result::Failed;
      end;

      "Finish Time" := FinishTime;
      "Execution Time" := "Finish Time" - "Start Time";
      MODIFY;
    END;

    LOCAL PROCEDURE GetNextNo@5() : Integer;
    VAR
      CALTestResult@1000 : Record "CAL Test Result";
    BEGIN
      if CALTestResult.FINDLAST then
        exit(CALTestResult."No." + 1);
      exit(1);
    END;

    LOCAL PROCEDURE CropTo@8(String@1000 : Text;Length@1001 : Integer) : Text[250];
    BEGIN
      if STRLEN(String) > Length then
        exit(PADSTR(String,Length));
      exit(String);
    END;

    [External]
    PROCEDURE LastTestRunNo@2() : Integer;
    BEGIN
      SETCURRENTKEY("Test Run No.","Codeunit ID","Function Name",Platform);
      if FINDLAST then;
      exit("Test Run No.");
    END;

    LOCAL PROCEDURE SetCodeunitName@4();
    VAR
      AllObjWithCaption@1000 : Record AllObjWithCaption;
    BEGIN
      AllObjWithCaption.SETRANGE("Object Type",AllObjWithCaption."Object Type"::Codeunit);
      AllObjWithCaption.SETRANGE("Object ID","Codeunit ID");
      if AllObjWithCaption.FINDFIRST then
        "Codeunit Name" := AllObjWithCaption."Object Name";
    END;

    BEGIN
    END.
  }
}

