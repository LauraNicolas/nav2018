OBJECT Codeunit 130404 CAL Test Project Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FileMgt@1000 : Codeunit "File Management";
      FileDialogFilterTxt@1001 : TextConst '@@@={Locked};ENU=Test Project file (*.xml)|*.xml|All Files (*.*)|*.*';
      XMLDOMMgt@1002 : Codeunit "XML DOM Management";

    [Internal]
    PROCEDURE Export@10(CALTestSuiteName@1007 : Code[10]) : Boolean;
    VAR
      CALTestSuite@1006 : Record "CAL Test Suite";
      CALTestLine@1001 : Record "CAL Test Line";
      ProjectXML@1101 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      DocumentElement@1005 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      TestNode@1004 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      XMLDataFile@1000 : Text;
      FileFilter@1002 : Text;
      ToFile@1003 : Text;
    BEGIN
      XMLDOMMgt.LoadXMLDocumentFromText(
        STRSUBSTNO(
          '<?xml version="1.0" encoding="UTF-16" standalone="yes"?><%1></%1>','CALTests'),
        ProjectXML);

      CALTestSuite.GET(CALTestSuiteName);
      DocumentElement := ProjectXML.DocumentElement;
      XMLDOMMgt.AddAttribute(DocumentElement,CALTestSuite.FIELDNAME(Name),CALTestSuite.Name);
      XMLDOMMgt.AddAttribute(DocumentElement,CALTestSuite.FIELDNAME(Description),CALTestSuite.Description);

      CALTestLine.SETRANGE("Test Suite",CALTestSuite.Name);
      CALTestLine.SETRANGE("Line Type",CALTestLine."Line Type"::Codeunit);
      if CALTestLine.FINDSET then
        repeat
          TestNode := ProjectXML.CreateElement('Codeunit');
          XMLDOMMgt.AddAttribute(TestNode,'ID',FORMAT(CALTestLine."Test Codeunit"));
          DocumentElement.AppendChild(TestNode);
        until CALTestLine.NEXT = 0;

      XMLDataFile := FileMgt.ServerTempFileName('');
      FileFilter := GetFileDialogFilter;
      ToFile := 'PROJECT.xml';
      ProjectXML.Save(XMLDataFile);

      FileMgt.DownloadHandler(XMLDataFile,'Download','',FileFilter,ToFile);

      exit(true);
    END;

    [Internal]
    PROCEDURE Import@1();
    VAR
      CALTestSuite@1004 : Record "CAL Test Suite";
      AllObjWithCaption@1010 : Record AllObjWithCaption;
      CALTestManagement@1011 : Codeunit "CAL Test Management";
      ProjectXML@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      DocumentElement@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      TestNode@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      TestNodes@1006 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeList";
      ServerFileName@1000 : Text;
      NodeCount@1007 : Integer;
      TestID@1008 : Integer;
    BEGIN
      ServerFileName := FileMgt.ServerTempFileName('.xml');
      if UploadXMLPackage(ServerFileName) then begin
        XMLDOMMgt.LoadXMLDocumentFromFile(ServerFileName,ProjectXML);
        DocumentElement := ProjectXML.DocumentElement;

        CALTestSuite.Name :=
          COPYSTR(
            GetAttribute(GetElementName(CALTestSuite.FIELDNAME(Name)),DocumentElement),1,
            MAXSTRLEN(CALTestSuite.Name));
        CALTestSuite.Description :=
          COPYSTR(
            GetAttribute(GetElementName(CALTestSuite.FIELDNAME(Description)),DocumentElement),1,
            MAXSTRLEN(CALTestSuite.Description));
        if not CALTestSuite.GET(CALTestSuite.Name) then
          CALTestSuite.INSERT;

        TestNodes := DocumentElement.ChildNodes;
        for NodeCount := 0 to (TestNodes.Count - 1) do begin
          TestNode := TestNodes.Item(NodeCount);
          if EVALUATE(TestID,FORMAT(GetAttribute('ID',TestNode))) then begin
            AllObjWithCaption.SETRANGE("Object Type",AllObjWithCaption."Object Type"::Codeunit);
            AllObjWithCaption.SETRANGE("Object ID",TestID);
            CALTestManagement.AddTestCodeunits(CALTestSuite,AllObjWithCaption);
          end;
        end;
      end;
    END;

    LOCAL PROCEDURE GetAttribute@2(AttributeName@1001 : Text;VAR XMLNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode") : Text;
    VAR
      XMLAttributes@1002 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNamedNodeMap";
      XMLAttributeNode@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
    BEGIN
      XMLAttributes := XMLNode.Attributes;
      XMLAttributeNode := XMLAttributes.GetNamedItem(AttributeName);
      if ISNULL(XMLAttributeNode) then
        exit('');
      exit(FORMAT(XMLAttributeNode.InnerText));
    END;

    LOCAL PROCEDURE GetElementName@22(NameIn@1000 : Text) : Text;
    BEGIN
      NameIn := DELCHR(NameIn,'=','Ã¯''`');
      NameIn := DELCHR(CONVERTSTR(NameIn,'<>,./\+-&()%:','             '),'=',' ');
      NameIn := DELCHR(NameIn,'=',' ');
      if NameIn[1] in ['0','1','2','3','4','5','6','7','8','9'] then
        NameIn := '_' + NameIn;
      exit(NameIn);
    END;

    LOCAL PROCEDURE GetFileDialogFilter@15() : Text;
    BEGIN
      exit(FileDialogFilterTxt);
    END;

    LOCAL PROCEDURE UploadXMLPackage@23(ServerFileName@1000 : Text) : Boolean;
    BEGIN
      exit(UPLOAD('Import project','',GetFileDialogFilter,'',ServerFileName));
    END;

    BEGIN
    END.
  }
}

