OBJECT Page 1131 Cost Budget per Period Matrix
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Cost Budget per Period Matrix;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable="Cost Type";
    PageType=ListPart;
    RefreshOnActivate=true;
    ShowFilter=false;
    OnAfterGetRecord=VAR
                       MATRIX_CurrentColumnOrdinal@1000 : Integer;
                     BEGIN
                       for MATRIX_CurrentColumnOrdinal := 1 to MATRIX_CurrentNoOfMatrixColumn do
                         MATRIX_OnAfterGetRecord(MATRIX_CurrentColumnOrdinal);
                       NameIndent := Indentation;
                       Emphasize := Type <> Type::"Cost Type";
                     END;

    ActionList=ACTIONS
    {
      { 1       ;0   ;ActionContainer;
                      Name=ActionContainer1;
                      ActionContainerType=ActionItems }
      { 2       ;1   ;ActionGroup;
                      Name=&Cost Type;
                      CaptionML=ENU=&Cost Type;
                      Image=Costs }
      { 3       ;2   ;Action    ;
                      Name=&Card;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=&Card;
                      ToolTipML=ENU=View or edit detailed information for the cost type.;
                      ApplicationArea=#CostAccounting;
                      RunObject=Page "Cost Type Card";
                      RunPageOnRec=true;
                      RunPageLink="No."=FIELD("No."),
                                  "Date Filter"=FIELD("Date Filter"),
                                  "Cost Center Filter"=FIELD("Cost Center Filter"),
                                  "Cost Object Filter"=FIELD("Cost Object Filter"),
                                  "Budget Filter"=FIELD("Budget Filter");
                      Image=EditLines }
      { 4       ;2   ;Action    ;
                      Name=E&ntries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=E&ntries;
                      ToolTipML=ENU=View the entries for the cost budget per period.;
                      ApplicationArea=#CostAccounting;
                      RunObject=Page "Cost Entries";
                      RunPageView=SORTING("Cost Type No.","Posting Date");
                      RunPageLink="Cost Type No."=FIELD("No.");
                      Image=Entries }
      { 5       ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 6       ;2   ;Action    ;
                      Name=&Copy Cost Budget to Cost Budget;
                      Ellipsis=true;
                      CaptionML=ENU=&Copy Cost Budget to Cost Budget;
                      ToolTipML=ENU=Copy cost budget amounts within a budget or from budget to budget. You can copy a budget several times and enter a factor to increase or reduce the budget amounts.;
                      ApplicationArea=#CostAccounting;
                      Image=CopyCostBudget;
                      OnAction=BEGIN
                                 COPYFILTER("Budget Filter",CostBudgetEntry."Budget Name");
                                 COPYFILTER("Cost Center Filter",CostBudgetEntry."Cost Center Code");
                                 COPYFILTER("Cost Object Filter",CostBudgetEntry."Cost Object Code");
                                 REPORT.RUNMODAL(REPORT::"Copy Cost Budget",true,false,CostBudgetEntry);
                               END;
                                }
      { 7       ;2   ;Action    ;
                      Name=Copy &G/L Budget to Cost Budget;
                      Ellipsis=true;
                      CaptionML=ENU=Copy &G/L Budget to Cost Budget;
                      ToolTipML=ENU=Copy general ledger budget figures to the cost accounting budget. You can also enter budgets for the cost centers and cost objects in the general ledger.;
                      ApplicationArea=#CostAccounting;
                      RunObject=Report "Copy G/L Budget to Cost Acctg.";
                      Image=CopyGLtoCostBudget }
      { 8       ;2   ;Action    ;
                      Name=Copy Cost &Budget to G/L Budget;
                      CaptionML=ENU=Copy Cost &Budget to G/L Budget;
                      ToolTipML=ENU=Copy selected cost budget entries into the general ledger. Multiplication factors and multiple copies with date offsets are also possible.;
                      ApplicationArea=#CostAccounting;
                      RunPageOnRec=true;
                      Image=CopyCosttoGLBudget;
                      OnAction=BEGIN
                                 COPYFILTER("Budget Filter",CostBudgetEntry."Budget Name");
                                 COPYFILTER("Cost Center Filter",CostBudgetEntry."Cost Center Code");
                                 COPYFILTER("Cost Object Filter",CostBudgetEntry."Cost Object Code");
                                 REPORT.RUNMODAL(REPORT::"Copy Cost Acctg. Budget to G/L",true,false,CostBudgetEntry);
                               END;
                                }
      { 9       ;2   ;Separator ;
                      Name=Separator9 }
      { 10      ;2   ;Action    ;
                      Name=Compress Budget &Entries;
                      CaptionML=ENU=Compress Budget &Entries;
                      ToolTipML=ENU=Compresses cost budget entries so that they take up less space in the database.;
                      ApplicationArea=#CostAccounting;
                      OnAction=BEGIN
                                 CostBudgetEntry.CompressBudgetEntries(GETFILTER("Budget Filter"));
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 11  ;0   ;Container ;
                Name=Container11;
                ContainerType=ContentArea }

    { 12  ;1   ;Group     ;
                Name=Group12;
                IndentationColumnName=NameIndent;
                IndentationControls=Name;
                GroupType=Repeater }

    { 13  ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the record.;
                ApplicationArea=#CostAccounting;
                SourceExpr="No.";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize;
                ImplicitType=Code20 }

    { 14  ;2   ;Field     ;
                Name=Name;
                ToolTipML=ENU=Specifies the name of the cost type.;
                ApplicationArea=#CostAccounting;
                SourceExpr=Name;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize;
                ImplicitType=Text50 }

    { 15  ;2   ;Field     ;
                Name=Column1;
                ApplicationArea=#CostAccounting;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[1];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_ColumnCaption[1];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(1);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(1);
                            END;
                             }

    { 16  ;2   ;Field     ;
                Name=Column2;
                ApplicationArea=#CostAccounting;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[2];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_ColumnCaption[2];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(2);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(2);
                            END;
                             }

    { 17  ;2   ;Field     ;
                Name=Column3;
                ApplicationArea=#CostAccounting;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[3];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_ColumnCaption[3];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(3);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(3);
                            END;
                             }

    { 18  ;2   ;Field     ;
                Name=Column4;
                ApplicationArea=#CostAccounting;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[4];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_ColumnCaption[4];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(4);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(4);
                            END;
                             }

    { 19  ;2   ;Field     ;
                Name=Column5;
                ApplicationArea=#CostAccounting;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[5];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_ColumnCaption[5];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(5);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(5);
                            END;
                             }

    { 20  ;2   ;Field     ;
                Name=Column6;
                ApplicationArea=#CostAccounting;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[6];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_ColumnCaption[6];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(6);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(6);
                            END;
                             }

    { 21  ;2   ;Field     ;
                Name=Column7;
                ApplicationArea=#CostAccounting;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[7];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_ColumnCaption[7];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(7);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(7);
                            END;
                             }

    { 22  ;2   ;Field     ;
                Name=Column8;
                ApplicationArea=#CostAccounting;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[8];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_ColumnCaption[8];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(8);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(8);
                            END;
                             }

    { 23  ;2   ;Field     ;
                Name=Column9;
                ApplicationArea=#CostAccounting;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[9];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_ColumnCaption[9];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(9);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(9);
                            END;
                             }

    { 24  ;2   ;Field     ;
                Name=Column10;
                ApplicationArea=#CostAccounting;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[10];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_ColumnCaption[10];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(10);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(10);
                            END;
                             }

    { 25  ;2   ;Field     ;
                Name=Column11;
                ApplicationArea=#CostAccounting;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[11];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_ColumnCaption[11];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(11);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(11);
                            END;
                             }

    { 26  ;2   ;Field     ;
                Name=Column12;
                ApplicationArea=#CostAccounting;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[12];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_ColumnCaption[12];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(12);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(12);
                            END;
                             }

  }
  CODE
  {
    VAR
      MatrixRecords@1000 : ARRAY [32] OF Record Date;
      CostBudgetEntry@1001 : Record "Cost Budget Entry";
      MatrixMgt@1009 : Codeunit "Matrix Management";
      CostCenterFilter@1012 : Code[20];
      CostObjectFilter@1013 : Code[20];
      BudgetFilter@1002 : Code[10];
      MATRIX_ColumnCaption@1003 : ARRAY [12] OF Text[80];
      RoundingFactorFormatString@1016 : Text;
      AmtType@1011 : '"Balance at Date","Net Change"';
      RoundingFactor@1005 : 'None,"1","1000","1000000"';
      MATRIX_CurrentNoOfMatrixColumn@1006 : Integer;
      MATRIX_CellData@1007 : ARRAY [32] OF Decimal;
      Emphasize@1008 : Boolean INDATASET;
      NameIndent@1010 : Integer INDATASET;
      Text000@1014 : TextConst 'ENU=Set View As to Net Change before you edit entries.';
      Text001@1015 : TextConst 'ENU=%1 or %2 must not be blank.';
      CurrRegNo@1004 : Integer;

    LOCAL PROCEDURE SetDateFilter@1(MATRIX_ColumnOrdinal@1000 : Integer);
    BEGIN
      if AmtType = AmtType::"Net Change" then
        if MatrixRecords[MATRIX_ColumnOrdinal]."Period Start" = MatrixRecords[MATRIX_ColumnOrdinal]."Period End" then
          SETRANGE("Date Filter",MatrixRecords[MATRIX_ColumnOrdinal]."Period Start")
        else
          SETRANGE("Date Filter",MatrixRecords[MATRIX_ColumnOrdinal]."Period Start",MatrixRecords[MATRIX_ColumnOrdinal]."Period End")
      else
        SETRANGE("Date Filter",0D,MatrixRecords[MATRIX_ColumnOrdinal]."Period End");
    END;

    [Internal]
    PROCEDURE Load@2(MatrixColumns1@1000 : ARRAY [32] OF Text[80];VAR MatrixRecords1@1001 : ARRAY [32] OF Record Date;CurrentNoOfMatrixColumns@1008 : Integer;CostCenterFilter1@1002 : Code[20];CostObjectFilter1@1003 : Code[20];BudgetFilter1@1004 : Code[10];RoundingFactor1@1005 : 'None,"1","1000","1000000"';AmtType1@1007 : '"Balance at Date","Net Change"');
    VAR
      i@1006 : Integer;
    BEGIN
      for i := 1 to 12 do begin
        if MatrixColumns1[i] = '' then
          MATRIX_ColumnCaption[i] := ' '
        else
          MATRIX_ColumnCaption[i] := MatrixColumns1[i];
        MatrixRecords[i] := MatrixRecords1[i];
      end;
      if MATRIX_ColumnCaption[1] = '' then; // To make this form pass preCAL test

      if CurrentNoOfMatrixColumns > ARRAYLEN(MATRIX_CellData) then
        MATRIX_CurrentNoOfMatrixColumn := ARRAYLEN(MATRIX_CellData)
      else
        MATRIX_CurrentNoOfMatrixColumn := CurrentNoOfMatrixColumns;
      CostCenterFilter := CostCenterFilter1;
      CostObjectFilter := CostObjectFilter1;
      BudgetFilter := BudgetFilter1;
      RoundingFactor := RoundingFactor1;
      AmtType := AmtType1;
      RoundingFactorFormatString := MatrixMgt.GetFormatString(RoundingFactor,false);

      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE MATRIX_OnDrillDown@3(ColumnID@1000 : Integer);
    VAR
      CostBudgetEntries@1001 : Page "Cost Budget Entries";
    BEGIN
      SetDateFilter(ColumnID);
      CostBudgetEntry.SETCURRENTKEY("Budget Name","Cost Type No.","Cost Center Code","Cost Object Code",Date);
      if Type in [Type::Total,Type::"End-Total"] then
        CostBudgetEntry.SETFILTER("Cost Type No.",Totaling)
      else
        CostBudgetEntry.SETRANGE("Cost Type No.","No.");
      CostBudgetEntry.SETFILTER("Cost Center Code",CostCenterFilter);
      CostBudgetEntry.SETFILTER("Cost Object Code",CostObjectFilter);
      CostBudgetEntry.SETFILTER("Budget Name",BudgetFilter);
      CostBudgetEntry.SETFILTER(Date,GETFILTER("Date Filter"));
      CostBudgetEntry.FILTERGROUP(26);
      CostBudgetEntry.SETFILTER(Date,'..%1|%1..',MatrixRecords[ColumnID]."Period Start");
      CostBudgetEntry.FILTERGROUP(0);

      CostBudgetEntries.SetCurrRegNo(CurrRegNo);
      CostBudgetEntries.SETTABLEVIEW(CostBudgetEntry);
      CostBudgetEntries.RUNMODAL;
      CurrRegNo := CostBudgetEntries.GetCurrRegNo;
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE MATRIX_OnAfterGetRecord@4(ColumnID@1000 : Integer);
    BEGIN
      SetFilters(ColumnID);
      CALCFIELDS("Budget Amount");
      MATRIX_CellData[ColumnID] := MatrixMgt.RoundValue("Budget Amount",RoundingFactor);
    END;

    LOCAL PROCEDURE UpdateAmount@5(ColumnID@1000 : Integer);
    BEGIN
      if AmtType <> AmtType::"Net Change" then
        ERROR(Text000);

      if (CostCenterFilter = '') and (CostObjectFilter = '') then
        ERROR(Text001,FIELDCAPTION("Cost Center Filter"),FIELDCAPTION("Cost Object Filter"));

      SetFilters(ColumnID);
      CALCFIELDS("Budget Amount");
      InsertMatrixCostBudgetEntry(CurrRegNo,ColumnID);
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE SetFilters@6(ColumnID@1000 : Integer);
    BEGIN
      SetDateFilter(ColumnID);
      SETFILTER("Cost Center Filter",CostCenterFilter);
      SETFILTER("Cost Object Filter",CostObjectFilter);
      SETFILTER("Budget Filter",BudgetFilter);
    END;

    LOCAL PROCEDURE InsertMatrixCostBudgetEntry@7(VAR RegNo@1000 : Integer;ColumnID@1002 : Integer);
    VAR
      MatrixCostBudgetEntry@1001 : Record "Cost Budget Entry";
    BEGIN
      MatrixCostBudgetEntry.SetCostBudgetRegNo(RegNo);
      MatrixCostBudgetEntry.INIT;
      MatrixCostBudgetEntry."Budget Name" := BudgetFilter;
      MatrixCostBudgetEntry."Cost Type No." := "No.";
      MatrixCostBudgetEntry.Date := MatrixRecords[ColumnID]."Period Start";
      MatrixCostBudgetEntry."Cost Center Code" := CostCenterFilter;
      MatrixCostBudgetEntry."Cost Object Code" := CostObjectFilter;
      MatrixCostBudgetEntry.Amount := MATRIX_CellData[ColumnID] - "Budget Amount";
      MatrixCostBudgetEntry.INSERT(true);
      RegNo := MatrixCostBudgetEntry.GetCostBudgetRegNo;
    END;

    LOCAL PROCEDURE FormatStr@8() : Text;
    BEGIN
      exit(RoundingFactorFormatString);
    END;

    BEGIN
    END.
  }
}

