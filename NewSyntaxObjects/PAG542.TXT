OBJECT Page 542 Default Dimensions-Multiple
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Default Dimensions-Multiple;
    SourceTable="Default Dimension";
    DataCaptionExpr=GetCaption;
    PageType=List;
    SourceTableTemporary=true;
    OnInit=BEGIN
             CurrPage.LOOKUPMODE := true;
           END;

    OnOpenPage=BEGIN
                 GetDefaultDim;
               END;

    OnAfterGetRecord=BEGIN
                       DimensionValueCodeOnFormat(FORMAT("Dimension Value Code"));
                       ValuePostingOnFormat(FORMAT("Value Posting"));
                     END;

    OnInsertRecord=BEGIN
                     SETRANGE("Dimension Code","Dimension Code");
                     if not FIND('-') and ("Dimension Code" <> '') then begin
                       "Multi Selection Action" := "Multi Selection Action"::Change;
                       INSERT;
                     end;
                     SETRANGE("Dimension Code");
                     exit(false);
                   END;

    OnModifyRecord=BEGIN
                     "Multi Selection Action" := "Multi Selection Action"::Change;
                     MODIFY;
                     exit(false);
                   END;

    OnDeleteRecord=BEGIN
                     "Multi Selection Action" := "Multi Selection Action"::Delete;
                     MODIFY;
                     exit(false);
                   END;

    OnQueryClosePage=BEGIN
                       if CloseAction = ACTION::LookupOK then
                         LookupOKOnPush;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Dimension Code;
                ToolTipML=ENU=Specifies the code for the default dimension.;
                ApplicationArea=#Suite;
                SourceExpr="Dimension Code";
                OnValidate=BEGIN
                             if (xRec."Dimension Code" <> '') and (xRec."Dimension Code" <> "Dimension Code") then
                               ERROR(CannotRenameErr,TABLECAPTION);
                           END;

                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Dimension Value Code;
                ToolTipML=ENU=Specifies the dimension value code to suggest as the default dimension.;
                ApplicationArea=#Suite;
                SourceExpr="Dimension Value Code";
                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name=Value Posting;
                ToolTipML=ENU=Specifies how default dimensions and their values must be used.;
                ApplicationArea=#Suite;
                SourceExpr="Value Posting";
                ImplicitType=Option }

  }
  CODE
  {
    VAR
      CannotRenameErr@1000 : TextConst 'ENU=You cannot rename a %1.';
      Text001@1001 : TextConst 'ENU=(Conflict)';
      TempDefaultDim2@1003 : TEMPORARY Record "Default Dimension";
      TempDefaultDim3@1004 : TEMPORARY Record "Default Dimension";
      TotalRecNo@1005 : Integer;

    [External]
    PROCEDURE SetMultiGLAcc@1(VAR GLAcc@1000 : Record "G/L Account");
    BEGIN
      TempDefaultDim2.DELETEALL;
      with GLAcc do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::"G/L Account","No.");
          until NEXT = 0;
    END;

    LOCAL PROCEDURE SetCommonDefaultDim@2();
    VAR
      DefaultDim@1000 : Record "Default Dimension";
    BEGIN
      SETRANGE(
        "Multi Selection Action","Multi Selection Action"::Delete);
      if FIND('-') then
        repeat
          if TempDefaultDim3.FIND('-') then
            repeat
              if DefaultDim.GET(
                   TempDefaultDim3."Table ID",TempDefaultDim3."No.","Dimension Code")
              then
                DefaultDim.DELETE(true);
            until TempDefaultDim3.NEXT = 0;
        until NEXT = 0;
      SETRANGE(
        "Multi Selection Action","Multi Selection Action"::Change);
      if FIND('-') then
        repeat
          if TempDefaultDim3.FIND('-') then
            repeat
              if DefaultDim.GET(
                   TempDefaultDim3."Table ID",TempDefaultDim3."No.","Dimension Code")
              then begin
                DefaultDim."Dimension Code" := "Dimension Code";
                DefaultDim."Dimension Value Code" := "Dimension Value Code";
                DefaultDim."Value Posting" := "Value Posting";
                DefaultDim.MODIFY(true);
              end else begin
                DefaultDim.INIT;
                DefaultDim."Table ID" := TempDefaultDim3."Table ID";
                DefaultDim."No." := TempDefaultDim3."No.";
                DefaultDim."Dimension Code" := "Dimension Code";
                DefaultDim."Dimension Value Code" := "Dimension Value Code";
                DefaultDim."Value Posting" := "Value Posting";
                DefaultDim.INSERT(true);
              end;
            until TempDefaultDim3.NEXT = 0;
        until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiCust@3(VAR Cust@1000 : Record Customer);
    BEGIN
      TempDefaultDim2.DELETEALL;
      with Cust do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::Customer,"No.");
          until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiVendor@4(VAR Vend@1000 : Record Vendor);
    BEGIN
      TempDefaultDim2.DELETEALL;
      with Vend do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::Vendor,"No.");
          until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiItem@5(VAR Item@1000 : Record Item);
    BEGIN
      TempDefaultDim2.DELETEALL;
      with Item do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::Item,"No.");
          until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiResGr@6(VAR ResGr@1000 : Record "Resource Group");
    BEGIN
      TempDefaultDim2.DELETEALL;
      with ResGr do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::"Resource Group","No.");
          until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiResource@7(VAR Res@1000 : Record Resource);
    BEGIN
      TempDefaultDim2.DELETEALL;
      with Res do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::Resource,"No.");
          until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiJob@8(VAR Job@1000 : Record Job);
    BEGIN
      TempDefaultDim2.DELETEALL;
      with Job do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::Job,"No.");
          until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiBankAcc@9(VAR BankAcc@1000 : Record "Bank Account");
    BEGIN
      TempDefaultDim2.DELETEALL;
      with BankAcc do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::"Bank Account","No.");
          until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiEmployee@11(VAR Employee@1000 : Record Employee);
    BEGIN
      TempDefaultDim2.DELETEALL;
      with Employee do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::Employee,"No.");
          until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiFA@12(VAR FA@1000 : Record "Fixed Asset");
    BEGIN
      TempDefaultDim2.DELETEALL;
      with FA do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::"Fixed Asset","No.");
          until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiInsurance@13(VAR Insurance@1000 : Record Insurance);
    BEGIN
      TempDefaultDim2.DELETEALL;
      with Insurance do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::Insurance,"No.");
          until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiRespCenter@10(VAR RespCenter@1000 : Record "Responsibility Center");
    BEGIN
      TempDefaultDim2.DELETEALL;
      with RespCenter do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::"Responsibility Center",Code);
          until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiSalesperson@16(VAR SalesPurchPerson@1000 : Record "Salesperson/Purchaser");
    BEGIN
      TempDefaultDim2.DELETEALL;
      with SalesPurchPerson do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::"Salesperson/Purchaser",Code);
          until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiWorkCenter@18(VAR WorkCenter@1000 : Record "Work Center");
    BEGIN
      TempDefaultDim2.DELETEALL;
      with WorkCenter do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::"Work Center","No.");
          until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiCampaign@17(VAR Campaign@1000 : Record Campaign);
    BEGIN
      TempDefaultDim2.DELETEALL;
      with Campaign do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::Campaign,"No.");
          until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiCustTemplate@19(VAR CustTemplate@1000 : Record "Customer Template");
    BEGIN
      TempDefaultDim2.DELETEALL;
      with CustTemplate do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::"Customer Template",Code);
          until NEXT = 0;
    END;

    LOCAL PROCEDURE CopyDefaultDimToDefaultDim@14(TableID@1000 : Integer;No@1001 : Code[20]);
    VAR
      DefaultDim@1002 : Record "Default Dimension";
    BEGIN
      TotalRecNo := TotalRecNo + 1;
      TempDefaultDim3."Table ID" := TableID;
      TempDefaultDim3."No." := No;
      TempDefaultDim3.INSERT;

      DefaultDim.SETRANGE("Table ID",TableID);
      DefaultDim.SETRANGE("No.",No);
      if DefaultDim.FIND('-') then
        repeat
          TempDefaultDim2 := DefaultDim;
          TempDefaultDim2.INSERT;
        until DefaultDim.NEXT = 0;
    END;

    LOCAL PROCEDURE GetDefaultDim@15();
    VAR
      Dim@1000 : Record Dimension;
      RecNo@1001 : Integer;
    BEGIN
      RESET;
      DELETEALL;
      if Dim.FIND('-') then
        repeat
          RecNo := 0;
          TempDefaultDim2.SETRANGE("Dimension Code",Dim.Code);
          SETRANGE("Dimension Code",Dim.Code);
          if TempDefaultDim2.FIND('-') then
            repeat
              if FINDFIRST then begin
                if "Dimension Value Code" <> TempDefaultDim2."Dimension Value Code" then begin
                  if ("Multi Selection Action" <> 10) and
                     ("Multi Selection Action" <> 21)
                  then begin
                    "Multi Selection Action" :=
                      "Multi Selection Action" + 10;
                    "Dimension Value Code" := '';
                  end;
                end;
                if "Value Posting" <> TempDefaultDim2."Value Posting" then begin
                  if ("Multi Selection Action" <> 11) and
                     ("Multi Selection Action" <> 21)
                  then begin
                    "Multi Selection Action" :=
                      "Multi Selection Action" + 11;
                    "Value Posting" := "Value Posting"::" ";
                  end;
                end;
                MODIFY;
                RecNo := RecNo + 1;
              end else begin
                Rec := TempDefaultDim2;
                INSERT;
                RecNo := RecNo + 1;
              end;
            until TempDefaultDim2.NEXT = 0;

          if FIND('-') and (RecNo <> TotalRecNo) then
            if ("Multi Selection Action" <> 10) and
               ("Multi Selection Action" <> 21)
            then begin
              "Multi Selection Action" :=
                "Multi Selection Action" + 10;
              "Dimension Value Code" := '';
              MODIFY;
            end;
        until Dim.NEXT = 0;

      RESET;
      SETCURRENTKEY("Dimension Code");
      SETFILTER(
        "Multi Selection Action",'<>%1',"Multi Selection Action"::Delete);
    END;

    [External]
    PROCEDURE SetMultiServiceItem@20(VAR ServiceItem@1000 : Record "Service Item");
    BEGIN
      TempDefaultDim2.DELETEALL;
      with ServiceItem do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::"Service Item","No.");
          until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiServiceItemGroup@21(VAR ServiceItemGroup@1000 : Record "Service Item Group");
    BEGIN
      TempDefaultDim2.DELETEALL;
      with ServiceItemGroup do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::"Service Item Group",Code);
          until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiServiceOrderType@22(VAR ServiceOrderType@1000 : Record "Service Order Type");
    BEGIN
      TempDefaultDim2.DELETEALL;
      with ServiceOrderType do
        if FIND('-') then
          repeat
            CopyDefaultDimToDefaultDim(DATABASE::"Service Order Type",Code);
          until NEXT = 0;
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    BEGIN
      SetCommonDefaultDim;
    END;

    LOCAL PROCEDURE DimensionValueCodeOnFormat@19000225(Text@19073275 : Text[1024]);
    BEGIN
      if "Dimension Code" <> '' then
        if ("Multi Selection Action" = 10) or
           ("Multi Selection Action" = 21)
        then
          Text := Text001;
    END;

    LOCAL PROCEDURE ValuePostingOnFormat@19024282(Text@19070135 : Text[1024]);
    BEGIN
      if "Dimension Code" <> '' then
        if ("Multi Selection Action" = 11) or
           ("Multi Selection Action" = 21)
        then
          Text := Text001;
    END;

    BEGIN
    END.
  }
}

