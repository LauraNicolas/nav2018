OBJECT Table 467 Workflow Webhook Entry
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnModify=BEGIN
               "Last Date-Time Modified" := CREATEDATETIME(TODAY,TIME);
               "Last Modified By User ID" := USERID;
             END;

    CaptionML=ENU=Workflow Webhook Entry;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;AutoIncrement=true;
                                                   CaptionML=ENU=Entry No. }
    { 3   ;   ;Workflow Step Instance ID;GUID     ;CaptionML=ENU=Workflow Step Instance ID }
    { 5   ;   ;Initiated By User ID;Code50        ;OnLookup=BEGIN
                                                              UserMgt.LookupUserID("Initiated By User ID");
                                                            END;

                                                   CaptionML=ENU=Initiated By User ID }
    { 7   ;   ;Response            ;Option        ;CaptionML=ENU=Response;
                                                   OptionCaptionML=ENU=NotExpected,Pending,Cancel,Continue,Reject;
                                                   OptionString=NotExpected,Pending,Cancel,Continue,Reject }
    { 8   ;   ;Response Argument   ;GUID          ;CaptionML=ENU=Response Argument }
    { 9   ;   ;Date-Time Initiated ;DateTime      ;CaptionML=ENU=Date-Time Initiated }
    { 11  ;   ;Last Date-Time Modified;DateTime   ;CaptionML=ENU=Last Date-Time Modified }
    { 13  ;   ;Last Modified By User ID;Code50    ;OnLookup=BEGIN
                                                              UserMgt.LookupUserID("Last Modified By User ID");
                                                            END;

                                                   CaptionML=ENU=Last Modified By User ID }
    { 15  ;   ;Data ID             ;GUID          ;CaptionML=ENU=Data ID }
    { 17  ;   ;Record ID           ;RecordID      ;CaptionML=ENU=Record ID }
  }
  KEYS
  {
    {    ;"Entry No."                             ;Clustered=true }
    {    ;"Workflow Step Instance ID"              }
    {    ;"Data ID"                                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      UserMgt@1000 : Codeunit "User Management";
      PageManagement@1001 : Codeunit "Page Management";

    PROCEDURE SetDefaultFilter@1(VAR WorkflowWebhookEntry@1000 : Record "Workflow Webhook Entry");
    VAR
      UserSetup@1002 : Record "User Setup";
      IsApprovalAdmin@1001 : Boolean;
      ResponseUserID@1005 : Code[50];
    BEGIN
      IsApprovalAdmin := false;

      if UserSetup.GET(USERID) then begin
        if UserSetup."Approval Administrator" then
          IsApprovalAdmin := true;
      end;

      CLEAR(WorkflowWebhookEntry);
      WorkflowWebhookEntry.INIT;
      WorkflowWebhookEntry.SETRANGE(Response,WorkflowWebhookEntry.Response::Pending);

      if not IsApprovalAdmin then begin
        if WorkflowWebhookEntry.FINDSET then
          repeat
            if WorkflowWebhookEntry."Initiated By User ID" = USERID then
              WorkflowWebhookEntry.MARK(true)
            else
              // Look to see if the entry is awaiting a response from the active user
              if GetResponseUserIdFromArgument(WorkflowWebhookEntry."Response Argument",ResponseUserID) then
                if ResponseUserID = USERID then
                  WorkflowWebhookEntry.MARK(true);
          until WorkflowWebhookEntry.NEXT = 0;
        WorkflowWebhookEntry.MARKEDONLY(true);
      end;
    END;

    LOCAL PROCEDURE GetResponseUserIdFromArgument@9(Argument@1000 : GUID;VAR ResponseUserID@1002 : Code[50]) : Boolean;
    VAR
      WorkflowStepArgument@1001 : Record "Workflow Step Argument";
    BEGIN
      CLEAR(ResponseUserID);

      if not ISNULLGUID(Argument) then begin
        WorkflowStepArgument.INIT;
        if WorkflowStepArgument.GET(Argument) then
          case WorkflowStepArgument."Response Type" of
            WorkflowStepArgument."Response Type"::"User ID":
              begin
                ResponseUserID := WorkflowStepArgument."Response User ID";
                exit(true);
              end;
          end;
      end;

      exit(false);
    END;

    [Internal]
    PROCEDURE ShowRecord@2();
    VAR
      RecRef@1000 : RecordRef;
    BEGIN
      // When called on a Workflow Webhook Entry row, finds the associated parent record and navigates to
      // the appropriate page to show that record.
      // Used by the Flow Entries page. Based on code from the Approval Entries page/Approval Entry table.
      if not RecRef.GET("Record ID") then
        exit;
      RecRef.SETRECFILTER;
      PageManagement.PageRun(RecRef);
    END;

    BEGIN
    END.
  }
}

