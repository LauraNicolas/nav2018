OBJECT Codeunit 8620 Config. Package - Import
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      PathIsEmptyErr@1001 : TextConst 'ENU=You must enter a file path.';
      ErrorsImportingPackageErr@1000 : TextConst '@@@="%1 = No. of errors, %2 = Package Code";ENU=%1 errors occurred when importing %2 package.';
      PathIsTooLongErr@1002 : TextConst '@@@="%1 = Max no. of characters";ENU=The path cannot be longer than %1 characters.';

    [Internal]
    PROCEDURE ImportAndApplyRapidStartPackage@1(PackageFileLocation@1000 : Text);
    VAR
      TempConfigSetup@1001 : TEMPORARY Record "Config. Setup";
    BEGIN
      ImportRapidStartPackage(PackageFileLocation,TempConfigSetup);
      ApplyRapidStartPackage(TempConfigSetup);
    END;

    [Internal]
    PROCEDURE ImportRapidStartPackage@2(PackageFileLocation@1000 : Text;VAR TempConfigSetup@1001 : TEMPORARY Record "Config. Setup");
    VAR
      DecompressedFileName@1003 : Text;
      FileLocation@1002 : Text[250];
    BEGIN
      if PackageFileLocation = '' then
        ERROR(PathIsEmptyErr);

      if STRLEN(PackageFileLocation) > MAXSTRLEN(TempConfigSetup."Package File Name") then
        ERROR(PathIsTooLongErr,MAXSTRLEN(TempConfigSetup."Package File Name"));

      FileLocation :=
        COPYSTR(PackageFileLocation,1,MAXSTRLEN(TempConfigSetup."Package File Name"));

      TempConfigSetup.INIT;
      TempConfigSetup.INSERT;
      TempConfigSetup."Package File Name" := FileLocation;
      DecompressedFileName := TempConfigSetup.DecompressPackage(false);

      TempConfigSetup.SetHideDialog(true);
      TempConfigSetup.ReadPackageHeader(DecompressedFileName);
      TempConfigSetup.ImportPackage(DecompressedFileName);
    END;

    [Internal]
    PROCEDURE ApplyRapidStartPackage@3(VAR TempConfigSetup@1000 : TEMPORARY Record "Config. Setup");
    VAR
      ErrorCount@1001 : Integer;
    BEGIN
      ErrorCount := TempConfigSetup.ApplyPackages;
      if ErrorCount > 0 then
        ERROR(ErrorsImportingPackageErr,ErrorCount,TempConfigSetup."Package Code");
      TempConfigSetup.ApplyAnswers;
    END;

    BEGIN
    END.
  }
}

