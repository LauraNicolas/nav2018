OBJECT Page 38 Item Ledger Entries
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Item Ledger Entries;
    SourceTable="Item Ledger Entry";
    DataCaptionExpr=GetCaption;
    SourceTableView=SORTING("Entry No.")
                    ORDER(Descending);
    DataCaptionFields="Item No.";
    PageType=List;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 60      ;1   ;ActionGroup;
                      Name=Ent&ry;
                      CaptionML=ENU=Ent&ry;
                      Image=Entry }
      { 61      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Suite;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=SetDimensionFilter;
                      Ellipsis=true;
                      CaptionML=ENU=Set Dimension Filter;
                      ToolTipML=ENU=Limit the entries according to dimension filters that you specify.;
                      ApplicationArea=#Suite;
                      Image=Filter;
                      OnAction=BEGIN
                                 SETFILTER("Dimension Set ID",DimensionSetIDFilter.LookupFilter);
                               END;
                                }
      { 64      ;2   ;Action    ;
                      Name=&Value Entries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=&Value Entries;
                      ToolTipML=ENU=View the history of posted amounts that affect the value of the item. Value entries are created for every transaction with the item.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Value Entries";
                      RunPageView=SORTING("Item Ledger Entry No.");
                      RunPageLink="Item Ledger Entry No."=FIELD("Entry No.");
                      Image=ValueLedger }
      { 30      ;1   ;ActionGroup;
                      Name=&Application;
                      CaptionML=ENU=&Application;
                      Image=Apply }
      { 58      ;2   ;Action    ;
                      Name=Applied E&ntries;
                      CaptionML=ENU=Applied E&ntries;
                      ToolTipML=ENU=View the ledger entries that have been applied to this record.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Approve;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Show Applied Entries",Rec);
                               END;
                                }
      { 56      ;2   ;Action    ;
                      Name=Reservation Entries;
                      AccessByPermission=TableData Item=R;
                      CaptionML=ENU=Reservation Entries;
                      ToolTipML=ENU=View the entries for every reservation that is made, either manually or automatically.;
                      ApplicationArea=#Advanced;
                      Image=ReservationLedger;
                      OnAction=BEGIN
                                 ShowReservationEntries(true);
                               END;
                                }
      { 86      ;2   ;Action    ;
                      Name=Application Worksheet;
                      CaptionML=ENU=Application Worksheet;
                      ToolTipML=ENU=View item applications that are automatically created between item ledger entries during item transactions.;
                      ApplicationArea=#Advanced;
                      Image=ApplicationWorksheet;
                      OnAction=VAR
                                 Worksheet@1000 : Page "Application Worksheet";
                               BEGIN
                                 CLEAR(Worksheet);
                                 Worksheet.SetRecordToShow(Rec);
                                 Worksheet.RUN;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 57      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 59      ;2   ;Action    ;
                      Name=Order &Tracking;
                      CaptionML=ENU=Order &Tracking;
                      ToolTipML=ENU=Tracks the connection of a supply to its corresponding demand. This can help you find the original demand that created a specific production order or purchase order.;
                      ApplicationArea=#ItemTracking;
                      Image=OrderTracking;
                      OnAction=VAR
                                 TrackingForm@1001 : Page "Order Tracking";
                               BEGIN
                                 TrackingForm.SetItemLedgEntry(Rec);
                                 TrackingForm.RUNMODAL;
                               END;
                                }
      { 32      ;1   ;Action    ;
                      Name=&Navigate;
                      CaptionML=ENU=&Navigate;
                      ToolTipML=ENU=Find all entries and documents that exist for the document number and posting date on the selected entry or document.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Navigate.SetDoc("Posting Date","Document No.");
                                 Navigate.RUN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Posting Date;
                ToolTipML=ENU=Specifies the posting date for the entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                ImplicitType=Date }

    { 4   ;2   ;Field     ;
                Name=Entry Type;
                ToolTipML=ENU=Specifies which type of transaction that the entry is created from.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Entry Type";
                ImplicitType=Option }

    { 76  ;2   ;Field     ;
                Name=Document Type;
                ToolTipML=ENU=Specifies what type of document was posted to create the item ledger entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type";
                ImplicitType=Option }

    { 6   ;2   ;Field     ;
                Name=Document No.;
                ToolTipML=ENU=Specifies the document number on the entry. The document is the voucher that the entry was based on, for example, a receipt.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                ImplicitType=Code20 }

    { 78  ;2   ;Field     ;
                Name=Document Line No.;
                ToolTipML=ENU=Specifies the number of the line on the posted document that corresponds to the item ledger entry.;
                ApplicationArea=#Advanced;
                SourceExpr="Document Line No.";
                Visible=FALSE;
                ImplicitType=Integer }

    { 8   ;2   ;Field     ;
                Name=Item No.;
                ToolTipML=ENU=Specifies the number of the item in the entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item No.";
                ImplicitType=Code20 }

    { 16  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 10  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 20  ;2   ;Field     ;
                Name=Return Reason Code;
                ToolTipML=ENU=Specifies the code explaining why the item was returned.;
                ApplicationArea=#Advanced;
                SourceExpr="Return Reason Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 34  ;2   ;Field     ;
                Name=Global Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for the global dimension that is linked to the record or entry for analysis purposes. Two global dimensions, typically for the company's most important activities, are available on all cards, documents, reports, and lists.;
                ApplicationArea=#Suite;
                SourceExpr="Global Dimension 1 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 36  ;2   ;Field     ;
                Name=Global Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for the global dimension that is linked to the record or entry for analysis purposes. Two global dimensions, typically for the company's most important activities, are available on all cards, documents, reports, and lists.;
                ApplicationArea=#Suite;
                SourceExpr="Global Dimension 2 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 82  ;2   ;Field     ;
                Name=Expiration Date;
                ToolTipML=ENU=Specifies the last date that the item on the line can be used.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Expiration Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 68  ;2   ;Field     ;
                Name=Serial No.;
                ToolTipML=ENU=Specifies a serial number if the posted item carries such a number.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Serial No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 70  ;2   ;Field     ;
                Name=Lot No.;
                ToolTipML=ENU=Specifies a lot number if the posted item carries such a number.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Lot No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 38  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the code for the location that the entry is linked to.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                ImplicitType=Code10 }

    { 12  ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the number of units of the item in the item entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Quantity;
                ImplicitType=Decimal }

    { 42  ;2   ;Field     ;
                Name=Invoiced Quantity;
                ToolTipML=ENU=Specifies how many units of the item on the line have been invoiced.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Invoiced Quantity";
                Visible=TRUE;
                ImplicitType=Decimal }

    { 44  ;2   ;Field     ;
                Name=Remaining Quantity;
                ToolTipML=ENU=Specifies the quantity in the Quantity field that remains to be processed.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Remaining Quantity";
                Visible=TRUE;
                ImplicitType=Decimal }

    { 84  ;2   ;Field     ;
                Name=Shipped Qty. Not Returned;
                ToolTipML=ENU=Specifies the quantity for this item ledger entry that was shipped and has not yet been returned.;
                ApplicationArea=#Advanced;
                SourceExpr="Shipped Qty. Not Returned";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 117 ;2   ;Field     ;
                Name=Reserved Quantity;
                ToolTipML=ENU=Specifies how many units of the item on the line have been reserved.;
                ApplicationArea=#Advanced;
                SourceExpr="Reserved Quantity";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 52  ;2   ;Field     ;
                Name=Qty. per Unit of Measure;
                ToolTipML=ENU=Specifies the quantity per item unit of measure.;
                ApplicationArea=#Advanced;
                SourceExpr="Qty. per Unit of Measure";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 18  ;2   ;Field     ;
                Name=Sales Amount (Expected);
                ToolTipML=ENU=Specifies the expected sales amount, in LCY.;
                ApplicationArea=#Advanced;
                SourceExpr="Sales Amount (Expected)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 22  ;2   ;Field     ;
                Name=Sales Amount (Actual);
                ToolTipML=ENU=Specifies the sales amount, in LCY.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sales Amount (Actual)";
                ImplicitType=Decimal }

    { 31  ;2   ;Field     ;
                Name=Cost Amount (Expected);
                ToolTipML=ENU=Specifies the expected cost, in LCY, of the quantity posting.;
                ApplicationArea=#Advanced;
                SourceExpr="Cost Amount (Expected)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 41  ;2   ;Field     ;
                Name=Cost Amount (Actual);
                ToolTipML=ENU=Specifies the adjusted cost, in LCY, of the quantity posting.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cost Amount (Actual)";
                ImplicitType=Decimal }

    { 47  ;2   ;Field     ;
                Name=Cost Amount (Non-Invtbl.);
                ToolTipML=ENU=Specifies the adjusted non-inventoriable cost, that is an item charge assigned to an outbound entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cost Amount (Non-Invtbl.)";
                ImplicitType=Decimal }

    { 49  ;2   ;Field     ;
                Name=Cost Amount (Expected) (ACY);
                ToolTipML=ENU=Specifies the expected cost, in ACY, of the quantity posting.;
                ApplicationArea=#Advanced;
                SourceExpr="Cost Amount (Expected) (ACY)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 72  ;2   ;Field     ;
                Name=Cost Amount (Actual) (ACY);
                ToolTipML=ENU=Specifies the adjusted cost of the entry, in the additional reporting currency.;
                ApplicationArea=#Advanced;
                SourceExpr="Cost Amount (Actual) (ACY)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 74  ;2   ;Field     ;
                Name=Cost Amount (Non-Invtbl.)(ACY);
                ToolTipML=ENU=Specifies the adjusted non-inventoriable cost, that is, an item charge assigned to an outbound entry in the additional reporting currency.;
                ApplicationArea=#Advanced;
                SourceExpr="Cost Amount (Non-Invtbl.)(ACY)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 66  ;2   ;Field     ;
                Name=Completely Invoiced;
                ToolTipML=ENU=Specifies if the entry has been fully invoiced or if more posted invoices are expected. Only completely invoiced entries can be revalued.;
                ApplicationArea=#Advanced;
                SourceExpr="Completely Invoiced";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 24  ;2   ;Field     ;
                Name=Open;
                ToolTipML=ENU=Specifies whether the entry has been fully applied to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Open;
                ImplicitType=Boolean }

    { 80  ;2   ;Field     ;
                Name=Drop Shipment;
                ToolTipML=ENU=Specifies if your vendor ships the items directly to your customer.;
                ApplicationArea=#Advanced;
                SourceExpr="Drop Shipment";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 5   ;2   ;Field     ;
                Name=Assemble to Order;
                ToolTipML=ENU=Specifies if the posting represents an assemble-to-order sale.;
                ApplicationArea=#Advanced;
                SourceExpr="Assemble to Order";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 14  ;2   ;Field     ;
                Name=Applied Entry to Adjust;
                ToolTipML=ENU=Specifies whether there is one or more applied entries, which need to be adjusted.;
                ApplicationArea=#Advanced;
                SourceExpr="Applied Entry to Adjust";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 3   ;2   ;Field     ;
                Name=Order Type;
                ToolTipML=ENU=Specifies which type of order that the entry was created in.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Order Type";
                ImplicitType=Option }

    { 54  ;2   ;Field     ;
                Name=Order No.;
                ToolTipML=ENU=Specifies the number of the order that created the entry.;
                ApplicationArea=#Advanced;
                SourceExpr="Order No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 51  ;2   ;Field     ;
                Name=Order Line No.;
                ToolTipML=ENU=Specifies the line number of the order that created the entry.;
                ApplicationArea=#Advanced;
                SourceExpr="Order Line No.";
                Visible=FALSE;
                ImplicitType=Integer }

    { 63  ;2   ;Field     ;
                Name=Prod. Order Comp. Line No.;
                ToolTipML=ENU=Specifies the line number of the production order component.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Prod. Order Comp. Line No.";
                Visible=FALSE;
                ImplicitType=Integer }

    { 26  ;2   ;Field     ;
                Name=Entry No.;
                ToolTipML=ENU=Specifies the entry number for the entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Entry No.";
                ImplicitType=Integer }

    { 1000;2   ;Field     ;
                Name=Job No.;
                ToolTipML=ENU=Specifies the number of the related job.;
                ApplicationArea=#Advanced;
                SourceExpr="Job No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 1002;2   ;Field     ;
                Name=Job Task No.;
                ToolTipML=ENU=Specifies the number of the related job task.;
                ApplicationArea=#Advanced;
                SourceExpr="Job Task No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 7   ;2   ;Field     ;
                Name=Dimension Set ID;
                ToolTipML=ENU=Specifies a reference to a combination of dimension values. The actual values are stored in the Dimension Set Entry table.;
                ApplicationArea=#Suite;
                SourceExpr="Dimension Set ID";
                Visible=FALSE;
                ImplicitType=Integer }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Navigate@1000 : Page Navigate;
      DimensionSetIDFilter@1001 : Page "Dimension Set ID Filter";

    LOCAL PROCEDURE GetCaption@3() : Text;
    VAR
      GLSetup@1010 : Record "General Ledger Setup";
      ObjTransl@1009 : Record "Object Translation";
      Item@1008 : Record Item;
      ProdOrder@1007 : Record "Production Order";
      Cust@1006 : Record Customer;
      Vend@1005 : Record Vendor;
      Dimension@1004 : Record Dimension;
      DimValue@1003 : Record "Dimension Value";
      SourceTableName@1002 : Text;
      SourceFilter@1001 : Text;
      Description@1000 : Text[100];
    BEGIN
      Description := '';

      case true of
        GETFILTER("Item No.") <> '':
          begin
            SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,27);
            SourceFilter := GETFILTER("Item No.");
            if MAXSTRLEN(Item."No.") >= STRLEN(SourceFilter) then
              if Item.GET(SourceFilter) then
                Description := Item.Description;
          end;
        (GETFILTER("Order No.") <> '') and ("Order Type" = "Order Type"::Production):
          begin
            SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,5405);
            SourceFilter := GETFILTER("Order No.");
            if MAXSTRLEN(ProdOrder."No.") >= STRLEN(SourceFilter) then
              if ProdOrder.GET(ProdOrder.Status::Released,SourceFilter) or
                 ProdOrder.GET(ProdOrder.Status::Finished,SourceFilter)
              then begin
                SourceTableName := STRSUBSTNO('%1 %2',ProdOrder.Status,SourceTableName);
                Description := ProdOrder.Description;
              end;
          end;
        GETFILTER("Source No.") <> '':
          case "Source Type" of
            "Source Type"::Customer:
              begin
                SourceTableName :=
                  ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,18);
                SourceFilter := GETFILTER("Source No.");
                if MAXSTRLEN(Cust."No.") >= STRLEN(SourceFilter) then
                  if Cust.GET(SourceFilter) then
                    Description := Cust.Name;
              end;
            "Source Type"::Vendor:
              begin
                SourceTableName :=
                  ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,23);
                SourceFilter := GETFILTER("Source No.");
                if MAXSTRLEN(Vend."No.") >= STRLEN(SourceFilter) then
                  if Vend.GET(SourceFilter) then
                    Description := Vend.Name;
              end;
          end;
        GETFILTER("Global Dimension 1 Code") <> '':
          begin
            GLSetup.GET;
            Dimension.Code := GLSetup."Global Dimension 1 Code";
            SourceFilter := GETFILTER("Global Dimension 1 Code");
            SourceTableName := Dimension.GetMLName(GLOBALLANGUAGE);
            if MAXSTRLEN(DimValue.Code) >= STRLEN(SourceFilter) then
              if DimValue.GET(GLSetup."Global Dimension 1 Code",SourceFilter) then
                Description := DimValue.Name;
          end;
        GETFILTER("Global Dimension 2 Code") <> '':
          begin
            GLSetup.GET;
            Dimension.Code := GLSetup."Global Dimension 2 Code";
            SourceFilter := GETFILTER("Global Dimension 2 Code");
            SourceTableName := Dimension.GetMLName(GLOBALLANGUAGE);
            if MAXSTRLEN(DimValue.Code) >= STRLEN(SourceFilter) then
              if DimValue.GET(GLSetup."Global Dimension 2 Code",SourceFilter) then
                Description := DimValue.Name;
          end;
        GETFILTER("Document Type") <> '':
          begin
            SourceTableName := GETFILTER("Document Type");
            SourceFilter := GETFILTER("Document No.");
            Description := GETFILTER("Document Line No.");
          end;
      end;
      exit(STRSUBSTNO('%1 %2 %3',SourceTableName,SourceFilter,Description));
    END;

    BEGIN
    END.
  }
}

