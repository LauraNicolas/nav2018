OBJECT Codeunit 8619 Config. Pckg. Compression Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FileNotExistErr@1002 : TextConst 'ENU=The file %1 does not exist.';
      FileAlreadyExistErr@1001 : TextConst 'ENU=The file name %1 already exists.';
      NotValidFileNameErr@1000 : TextConst 'ENU=%1 is not a valid file name.';

    [Internal]
    PROCEDURE ServersideCompress@25(SourceFilePath@1002 : Text;DestinationFilePath@1003 : Text);
    BEGIN
      ProcessGZip(SourceFilePath,DestinationFilePath,true);
    END;

    [Internal]
    PROCEDURE ServersideDecompress@45(SourceFilePath@1001 : Text;DestinationFilePath@1000 : Text) : Boolean;
    VAR
      FileMgt@1002 : Codeunit "File Management";
    BEGIN
      if not FileMgt.IsGZip(SourceFilePath) then
        exit(false);
      ProcessGZip(SourceFilePath,DestinationFilePath,false);

      exit(true);
    END;

    LOCAL PROCEDURE ProcessGZip@6(SourceFilePath@1007 : Text;DestinationFilePath@1006 : Text;ToCompress@1008 : Boolean);
    VAR
      FileMgt@1009 : Codeunit "File Management";
      CompressionMode@1000 : DotNet "'System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Compression.CompressionMode";
      CompressedStream@1005 : DotNet "'System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Compression.GZipStream";
      SourceFile@1003 : File;
      DestinationFile@1004 : File;
      OutStream@1002 : OutStream;
      InStream@1001 : InStream;
    BEGIN
      if not FILE.EXISTS(SourceFilePath) then
        ERROR(FileNotExistErr,SourceFilePath);

      if not FileMgt.IsValidFileName(FileMgt.GetFileName(DestinationFilePath)) then
        ERROR(NotValidFileNameErr,DestinationFilePath);

      if FILE.EXISTS(DestinationFilePath) then
        ERROR(FileAlreadyExistErr,DestinationFilePath);

      OpenFileAndInStream(InStream,SourceFile,SourceFilePath);
      CreateFileAndOutStream(OutStream,DestinationFile,DestinationFilePath);

      if ToCompress then begin
        CompressedStream := CompressedStream.GZipStream(OutStream,CompressionMode.Compress);
        COPYSTREAM(CompressedStream,InStream);
      end else begin
        CompressedStream := CompressedStream.GZipStream(InStream,CompressionMode.Decompress);
        COPYSTREAM(OutStream,CompressedStream);
      end;

      CompressedStream.Close;
    END;

    LOCAL PROCEDURE OpenFileAndInStream@29(VAR InStream@1000 : InStream;VAR File@1002 : File;FilePath@1001 : Text);
    BEGIN
      File.WRITEMODE(false);
      File.TEXTMODE(false);
      File.OPEN(FilePath);
      File.CREATEINSTREAM(InStream);
    END;

    LOCAL PROCEDURE CreateFileAndOutStream@30(VAR OutStream@1001 : OutStream;VAR File@1003 : File;FilePath@1000 : Text);
    BEGIN
      File.WRITEMODE(false);
      File.TEXTMODE(false);
      File.CREATE(FilePath);
      File.CREATEOUTSTREAM(OutStream);
    END;

    BEGIN
    END.
  }
}

