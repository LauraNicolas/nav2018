OBJECT Report 1235 Get File Structure
{
  OBJECT-PROPERTIES
  {
    Date=20161025D;
    Time=120000T;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Get File Structure;
    ProcessingOnly=true;
    OnPostReport=BEGIN
                   CheckFileType(DataExchDef);

                   case FileType of
                     FileType::Xsd:
                       ;
                     FileType::Xml:
                       SuggestColDefinitionXML.GenerateDataExchColDef(FilePath,DataExchLineDef);
                     FileType::Csv:
                       ;
                     FileType::Json:
                       SuggestColDefinitionJson.GenerateDataExchColDef(FilePath,DataExchLineDef);
                   end;
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1   ;    ;Container ;
                  Name=Container1;
                  ContainerType=ContentArea }

      { 3   ;1   ;Field     ;
                  Name=FileType;
                  CaptionML=ENU=File Type;
                  ToolTipML=ENU=Specifies the file type whose structure will be reused to fill the Data Column Definitions FastTab. XML and Json are supported.;
                  OptionCaptionML=ENU=" ,,Xml,,Json";
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=FileType;
                  OnValidate=BEGIN
                               CheckFileType(DataExchDef);
                             END;
                              }

      { 2   ;1   ;Field     ;
                  Name=FilePath;
                  ExtendedDatatype=URL;
                  CaptionML=ENU=Path;
                  ToolTipML=ENU=Specifies the path or URL of the file that will be processed with this data exchange definition.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=FilePath }

      { 4   ;1   ;Field     ;
                  Name=DataExchDefCode;
                  CaptionML=ENU=Data Exch. Def. Code;
                  ToolTipML=ENU=Specifies the data exchange definition for the file that will be processed.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DataExchLineDef."Data Exch. Def Code";
                  Editable=FALSE }

      { 5   ;1   ;Field     ;
                  Name=Code;
                  CaptionML=ENU=Line Definition Code;
                  ToolTipML=ENU=Specifies the value in the Code field on the Line Definitions FastTab.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DataExchLineDef.Code;
                  Editable=FALSE }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      DataExchLineDef@1002 : Record "Data Exch. Line Def";
      DataExchDef@1005 : Record "Data Exch. Def";
      SuggestColDefinitionXML@1003 : Codeunit "Suggest Col. Definition - XML";
      SuggestColDefinitionJson@1004 : Codeunit "Suggest Col. Definition - Json";
      FileType@1000 : '" ",Xsd,Xml,Csv,Json';
      FilePath@1001 : Text;
      FileTypeCannotBeSelectedErr@1006 : TextConst '@@@="%1 is XML, JSON, etc, %2 is simlar to %1, and %3 will be Data Exch. Definition. ";ENU=" You cannot select %1 when File Type is %2 in %3."';
      FileTypeNotSupportedErr@1007 : TextConst '@@@=%1 is XML, JSON, etc;ENU=" File type %1 is not supported."';

    PROCEDURE Initialize@3(NewDataExchLineDef@1001 : Record "Data Exch. Line Def");
    BEGIN
      DataExchLineDef := NewDataExchLineDef;
      DataExchDef.GET(DataExchLineDef."Data Exch. Def Code");

      SetFileType(DataExchDef);
    END;

    LOCAL PROCEDURE CheckFileType@5(DataExchDef@1000 : Record "Data Exch. Def");
    BEGIN
      with DataExchDef do begin
        FIND;
        case "File Type" of
          "File Type"::Xml:
            if not (FileType in [FileType::Xml]) then
              ERROR(FileTypeCannotBeSelectedErr,FileType,"File Type",TABLECAPTION);
          "File Type"::Json:
            if not (FileType in [FileType::Json]) then
              ERROR(FileTypeCannotBeSelectedErr,FileType,"File Type",TABLECAPTION);
        end;
      end;
    END;

    LOCAL PROCEDURE SetFileType@6(DataExchDef@1000 : Record "Data Exch. Def");
    BEGIN
      with DataExchDef do begin
        FIND;
        case "File Type" of
          "File Type"::Xml:
            FileType := FileType::Xml;
          "File Type"::Json:
            FileType := FileType::Json;
          else
            ERROR(FileTypeNotSupportedErr,"File Type");
        end;
      end;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

