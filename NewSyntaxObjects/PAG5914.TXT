OBJECT Page 5914 Service Order Statistics
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Order Statistics;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable="Service Header";
    PageType=Card;
    OnOpenPage=BEGIN
                 SalesSetup.GET;
                 AllowInvDisc := not (SalesSetup."Calc. Inv. Discount" and CustInvDiscRecExists("Invoice Disc. Code"));
                 AllowVATDifference :=
                   SalesSetup."Allow VAT Difference" and
                   ("Document Type" <> "Document Type"::Quote);
                 VATLinesFormIsEditable := AllowVATDifference or AllowInvDisc;
                 CurrPage.EDITABLE := VATLinesFormIsEditable;
               END;

    OnAfterGetRecord=VAR
                       ServLine@1000 : Record "Service Line";
                       TempServLine@1001 : TEMPORARY Record "Service Line";
                     BEGIN
                       CurrPage.CAPTION(STRSUBSTNO(Text000,"Document Type"));

                       if PrevNo = "No." then
                         exit;
                       PrevNo := "No.";
                       FILTERGROUP(2);
                       SETRANGE("No.",PrevNo);
                       FILTERGROUP(0);

                       CLEAR(ServLine);
                       CLEAR(TotalServLine);
                       CLEAR(TotalServLineLCY);
                       CLEAR(ServAmtsMgt);

                       for i := 1 to 7 do begin
                         TempServLine.DELETEALL;
                         CLEAR(TempServLine);
                         ServAmtsMgt.GetServiceLines(Rec,TempServLine,i - 1);

                         case i of
                           1:
                             ServLine.CalcVATAmountLines(0,Rec,TempServLine,TempVATAmountLine1,false);
                           2:
                             ServLine.CalcVATAmountLines(0,Rec,TempServLine,TempVATAmountLine2,false);
                           3:
                             ServLine.CalcVATAmountLines(0,Rec,TempServLine,TempVATAmountLine3,false);
                         end;

                         ServAmtsMgt.SumServiceLinesTemp(
                           Rec,TempServLine,i - 1,TotalServLine[i],TotalServLineLCY[i],
                           VATAmount[i],VATAmountText[i],ProfitLCY[i],ProfitPct[i],TotalAdjCostLCY[i]);
                         ProfitLCY[i] := MakeNegativeZero(ProfitLCY[i]);

                         if i = 3 then
                           TotalAdjCostLCY[i] := TotalServLineLCY[i]."Unit Cost (LCY)";

                         if TotalServLineLCY[i].Amount = 0 then
                           ProfitPct[i] := 0
                         else
                           ProfitPct[i] := ROUND(100 * ProfitLCY[i] / TotalServLineLCY[i].Amount,0.1);

                         AdjProfitLCY[i] := TotalServLineLCY[i].Amount - TotalAdjCostLCY[i];
                         AdjProfitLCY[i] := MakeNegativeZero(AdjProfitLCY[i]);
                         if TotalServLineLCY[i].Amount <> 0 then
                           AdjProfitPct[i] := ROUND(100 * AdjProfitLCY[i] / TotalServLineLCY[i].Amount,0.1);

                         if "Prices Including VAT" then begin
                           TotalAmount2[i] := TotalServLine[i].Amount;
                           TotalAmount1[i] := TotalAmount2[i] + VATAmount[i];
                           TotalServLine[i]."Line Amount" := TotalAmount1[i] + TotalServLine[i]."Inv. Discount Amount";
                         end else begin
                           TotalAmount1[i] := TotalServLine[i].Amount;
                           TotalAmount2[i] := TotalServLine[i]."Amount Including VAT";
                         end;
                       end;

                       if Cust.GET("Bill-to Customer No.") then
                         Cust.CALCFIELDS("Balance (LCY)")
                       else
                         CLEAR(Cust);

                       case true of
                         Cust."Credit Limit (LCY)" = 0:
                           CreditLimitLCYExpendedPct := 0;
                         Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" < 0:
                           CreditLimitLCYExpendedPct := 0;
                         Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" > 1:
                           CreditLimitLCYExpendedPct := 10000;
                         else
                           CreditLimitLCYExpendedPct := ROUND(Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" * 10000,1);
                       end;

                       TempVATAmountLine1.MODIFYALL(Modified,false);
                       TempVATAmountLine2.MODIFYALL(Modified,false);
                       TempVATAmountLine3.MODIFYALL(Modified,false);

                       PrevTab := -1;
                     END;

    OnQueryClosePage=BEGIN
                       GetVATSpecification(PrevTab);
                       if TempVATAmountLine1.GetAnyLineModified or TempVATAmountLine2.GetAnyLineModified then
                         UpdateVATOnServLines;
                       exit(true);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 39  ;2   ;Field     ;
                Name=Amount_General;
                ApplicationArea=#Service;
                SourceExpr=TotalServLine[1]."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text002,false);
                Editable=FALSE }

    { 30  ;2   ;Field     ;
                Name=Inv. Discount Amount_General;
                CaptionML=ENU=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount for the entire service order.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLine[1]."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                OnValidate=BEGIN
                             ActiveTab := ActiveTab::General;
                             UpdateInvDiscAmount(1);
                           END;
                            }

    { 20  ;2   ;Field     ;
                Name=TotalAmount1[1];
                ApplicationArea=#Service;
                SourceExpr=TotalAmount1[1];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,false);
                OnValidate=BEGIN
                             ActiveTab := ActiveTab::General;
                             UpdateTotalAmount(1);
                           END;
                            }

    { 16  ;2   ;Field     ;
                Name=VAT Amount_General;
                CaptionML=ENU=VAT Amount;
                ToolTipML=ENU=Specifies the total VAT amount that has been calculated for all the lines in the service order.;
                ApplicationArea=#Service;
                SourceExpr=VATAmount[1];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT(VATAmountText[1]);
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                Name=Total Incl. VAT_General;
                ApplicationArea=#Service;
                SourceExpr=TotalAmount2[1];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,true);
                Editable=FALSE;
                OnValidate=BEGIN
                             TotalAmount21OnAfterValidate;
                           END;
                            }

    { 7   ;2   ;Field     ;
                Name=Sales (LCY)_General;
                CaptionML=ENU=Sales (LCY);
                ToolTipML=ENU=Specifies your total service sales turnover in the fiscal year. It is calculated from amounts excluding VAT on all completed and open service sales invoices and credit memos.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLineLCY[1].Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 32  ;2   ;Field     ;
                Name=Original Profit (LCY);
                CaptionML=ENU=Original Profit (LCY);
                ToolTipML=ENU=Specifies the total cost, in LCY, of the G/L account entries, costs, items and/or resources in the service order. The cost is calculated as a product of unit cost multiplied by quantity of the relevant items or resources.;
                ApplicationArea=#Service;
                SourceExpr=ProfitLCY[1];
                AutoFormatType=1;
                Editable=FALSE }

    { 135 ;2   ;Field     ;
                Name=Adjusted Profit (LCY);
                CaptionML=ENU=Adjusted Profit (LCY);
                ToolTipML=ENU=Specifies the amount of profit for the service order, in LCY, adjusted for any changes in the original item costs.;
                ApplicationArea=#Service;
                SourceExpr=AdjProfitLCY[1];
                AutoFormatType=1;
                Editable=FALSE }

    { 24  ;2   ;Field     ;
                Name=Original Profit %;
                CaptionML=ENU=Original Profit %;
                ToolTipML=ENU=Specifies the profit percentage prior to any item cost adjustments on the service order.;
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct[1];
                Editable=FALSE }

    { 137 ;2   ;Field     ;
                Name=Adjusted Profit %;
                CaptionML=ENU=Adjusted Profit %;
                ToolTipML=ENU=Specifies the amount of the adjusted profit on the service order, expressed as percentage of the amount in the Amount Excl. VAT (Amount Incl. VAT) field.;
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=AdjProfitPct[1];
                Editable=FALSE }

    { 22  ;2   ;Field     ;
                Name=Quantity;
                CaptionML=ENU=Quantity;
                ToolTipML=ENU=Specifies the quantity of all G/L account entries, costs, items and/or resource hours in the service order.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[1].Quantity;
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                Name=Parcels;
                CaptionML=ENU=Parcels;
                ToolTipML=ENU=Specifies the quantity of parcels of the items specified on the service lines in the order.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[1]."Units per Parcel";
                Editable=FALSE }

    { 18  ;2   ;Field     ;
                Name=Net Weight;
                CaptionML=ENU=Net Weight;
                ToolTipML=ENU=Specifies the net weight of the items specified on the service lines in the order.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[1]."Net Weight";
                Editable=FALSE }

    { 11  ;2   ;Field     ;
                Name=Gross Weight;
                CaptionML=ENU=Gross Weight;
                ToolTipML=ENU=Specifies the gross weight of the items on the service lines in the order.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[1]."Gross Weight";
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                Name=Volume;
                CaptionML=ENU=Volume;
                ToolTipML=ENU=Specifies the volume of the items on the service lines in the order.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[1]."Unit Volume";
                Editable=FALSE }

    { 37  ;2   ;Field     ;
                Name=OriginalCostLCY;
                CaptionML=ENU=Original Cost (LCY);
                ToolTipML=ENU=Specifies the total cost, in LCY, of the G/L account entries, costs, items and/or resources in the service order. The cost is calculated as a product of unit cost multiplied by quantity of the relevant items.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLineLCY[1]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 141 ;2   ;Field     ;
                Name=AdjustedCostLCY;
                CaptionML=ENU=Adjusted Cost (LCY);
                ToolTipML=ENU=Specifies the total cost, in LCY, of the items in the service order, adjusted for any changes in the original costs of these items;
                ApplicationArea=#Service;
                SourceExpr=TotalAdjCostLCY[1];
                AutoFormatType=1;
                Editable=FALSE }

    { 139 ;2   ;Field     ;
                Name=Cost Adjmt. Amount (LCY);
                CaptionML=ENU=Cost Adjmt. Amount (LCY);
                ToolTipML=ENU=Specifies the difference between the original cost and the total adjusted cost of the items in the service order.;
                ApplicationArea=#Service;
                SourceExpr=TotalAdjCostLCY[1] - TotalServLineLCY[1]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE;
                OnLookup=BEGIN
                           LookupAdjmtValueEntries(0);
                         END;
                          }

    { 1102601000;2;Field  ;
                Name=No. of VAT Lines_General;
                DrillDown=true;
                CaptionML=ENU=No. of VAT Lines;
                ToolTipML=ENU=Specifies the number of service order lines that are associated with the VAT ledger line.;
                ApplicationArea=#Service;
                SourceExpr=TempVATAmountLine1.COUNT;
                OnDrillDown=BEGIN
                              VATLinesDrillDown(TempVATAmountLine1,false);
                              UpdateHeaderInfo(1,TempVATAmountLine1);
                            END;
                             }

    { 1901902601;1;Group  ;
                Name=Details;
                CaptionML=ENU=Details }

    { 1904230801;2;Group  ;
                Name=Group1904230801;
                GroupType=FixedLayout }

    { 1905623601;3;Group  ;
                Name=Invoicing;
                CaptionML=ENU=Invoicing }

    { 166 ;4   ;Field     ;
                Name=TotalServLine[2].Quantity;
                CaptionML=ENU=Quantity;
                ToolTipML=ENU=Specifies the quantity of all G/L account entries, costs, items and/or resource hours in the service order.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[2].Quantity;
                Editable=FALSE }

    { 156 ;4   ;Field     ;
                Name=Amount_Invoicing;
                CaptionML=ENU=Amount;
                ToolTipML=ENU=Specifies the amount for the relevant service order.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLine[2]."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 153 ;4   ;Field     ;
                Name=Inv. Discount Amount_Invoicing;
                CaptionML=ENU=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount for the entire service order.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLine[2]."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                OnValidate=BEGIN
                             ActiveTab := ActiveTab::Details;
                             UpdateInvDiscAmount(2);
                           END;
                            }

    { 150 ;4   ;Field     ;
                Name=Total;
                CaptionML=ENU=Total;
                ToolTipML=ENU=Specifies the total amount.;
                ApplicationArea=#Service;
                SourceExpr=TotalAmount1[2];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                OnValidate=BEGIN
                             ActiveTab := ActiveTab::Details;
                             UpdateTotalAmount(2);
                           END;
                            }

    { 147 ;4   ;Field     ;
                Name=VAT Amount_Invoicing;
                CaptionML=ENU=VAT Amount;
                ToolTipML=ENU=Specifies the total VAT amount that has been calculated for all the lines in the service order.;
                ApplicationArea=#Service;
                SourceExpr=VATAmount[2];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 144 ;4   ;Field     ;
                Name=Total Incl. VAT_Invoicing;
                CaptionML=ENU=Total Amount;
                ToolTipML=ENU=Specifies the total amounts on the service order that result from adding the invoicing amounts to the consuming amounts.;
                ApplicationArea=#Service;
                SourceExpr=TotalAmount2[2];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 117 ;4   ;Field     ;
                Name=Sales (LCY)_Invoicing;
                CaptionML=ENU=Sales (LCY);
                ToolTipML=ENU=Specifies your total service sales turnover in the fiscal year. It is calculated from amounts excluding VAT on all completed and open service sales invoices and credit memos.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLineLCY[2].Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 107 ;4   ;Field     ;
                Name=ProfitLCY[2];
                CaptionML=ENU=Original Profit (LCY);
                ToolTipML=ENU=Specifies the total cost, in LCY, of the G/L account entries, costs, items and/or resources in the service order. The cost is calculated as a product of unit cost multiplied by quantity of the relevant items or resources.;
                ApplicationArea=#Service;
                SourceExpr=ProfitLCY[2];
                AutoFormatType=1;
                Editable=FALSE }

    { 104 ;4   ;Field     ;
                Name=AdjProfitLCY[2];
                CaptionML=ENU=Adjusted Profit (LCY);
                ToolTipML=ENU=Specifies the amount of profit for the service order, in LCY, adjusted for any changes in the original item costs.;
                ApplicationArea=#Service;
                SourceExpr=AdjProfitLCY[2];
                AutoFormatType=1;
                Editable=FALSE }

    { 102 ;4   ;Field     ;
                Name=ProfitPct[2];
                CaptionML=ENU=Original Profit %;
                ToolTipML=ENU=Specifies the profit percentage prior to any item cost adjustments on the service order.;
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct[2];
                Editable=FALSE }

    { 105 ;4   ;Field     ;
                Name=AdjProfitPct[2];
                CaptionML=ENU=Adjusted Profit %;
                ToolTipML=ENU=Specifies the amount of the adjusted profit on the service order, expressed as percentage of the amount in the Amount Excl. VAT (Amount Incl. VAT) field.;
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=AdjProfitPct[2];
                Editable=FALSE }

    { 99  ;4   ;Field     ;
                Name=Original Cost (LCY);
                CaptionML=ENU=Original Cost (LCY);
                ToolTipML=ENU=Specifies the total cost, in LCY, of the G/L account entries, costs, items and/or resources in the service order. The cost is calculated as a product of unit cost multiplied by quantity of the relevant items or resources.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLineLCY[2]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 101 ;4   ;Field     ;
                Name=Adjusted Cost (LCY);
                CaptionML=ENU=Adjusted Cost (LCY);
                ToolTipML=ENU=Specifies the total cost, in LCY, of the items in the service order, adjusted for any changes in the original costs of these items;
                ApplicationArea=#Service;
                SourceExpr=TotalAdjCostLCY[2];
                AutoFormatType=1;
                Editable=FALSE }

    { 100 ;4   ;Field     ;
                Name=TotalAdjCostLCY[2] - TotalServLineLCY[2]."Unit Cost (LCY)";
                CaptionML=ENU=Cost Adjmt. Amount (LCY);
                ToolTipML=ENU=Specifies the difference between the original cost and the total adjusted cost of the items in the service order.;
                ApplicationArea=#Service;
                SourceExpr=TotalAdjCostLCY[2] - TotalServLineLCY[2]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE;
                OnLookup=BEGIN
                           LookupAdjmtValueEntries(1);
                         END;
                          }

    { 1901770501;3;Group  ;
                Name=Consuming;
                CaptionML=ENU=Consuming }

    { 165 ;4   ;Field     ;
                Name=Quantity_Consuming;
                CaptionML=ENU=Quantity;
                ToolTipML=ENU=Specifies the quantity of all G/L account entries, costs, items and/or resource hours in the service order.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[4].Quantity;
                Editable=FALSE }

    { 45  ;4   ;Field     ;
                Name=Text006;
                ApplicationArea=#Service;
                SourceExpr=Text006;
                Visible=FALSE;
                ImplicitType=TextConst }

    { 46  ;4   ;Field     ;
                Name=Field46;
                ApplicationArea=#Service;
                SourceExpr=Text006;
                Visible=FALSE;
                ImplicitType=TextConst }

    { 47  ;4   ;Field     ;
                Name=Field47;
                ApplicationArea=#Service;
                SourceExpr=Text006;
                Visible=FALSE;
                ImplicitType=TextConst }

    { 48  ;4   ;Field     ;
                Name=Field48;
                ApplicationArea=#Service;
                SourceExpr=Text006;
                Visible=FALSE;
                ImplicitType=TextConst }

    { 49  ;4   ;Field     ;
                Name=Field49;
                ApplicationArea=#Service;
                SourceExpr=Text006;
                Visible=FALSE;
                ImplicitType=TextConst }

    { 50  ;4   ;Field     ;
                Name=Field50;
                ApplicationArea=#Service;
                SourceExpr=Text006;
                Visible=FALSE;
                ImplicitType=TextConst }

    { 109 ;4   ;Field     ;
                Name=ProfitLCY[4];
                CaptionML=ENU=Original Profit (LCY);
                ToolTipML=ENU=Specifies the total cost, in LCY, of the G/L account entries, costs, items and/or resources in the service order. The cost is calculated as a product of unit cost multiplied by quantity of the relevant items or resources.;
                ApplicationArea=#Service;
                SourceExpr=ProfitLCY[4];
                AutoFormatType=1;
                Editable=FALSE }

    { 106 ;4   ;Field     ;
                Name=AdjProfitLCY[4];
                CaptionML=ENU=Adjusted Profit (LCY);
                ToolTipML=ENU=Specifies the amount of profit for the service order, in LCY, adjusted for any changes in the original item costs.;
                ApplicationArea=#Service;
                SourceExpr=AdjProfitLCY[4];
                AutoFormatType=1;
                Editable=FALSE }

    { 98  ;4   ;Field     ;
                Name=ProfitPct[4];
                CaptionML=ENU=Original Profit %;
                ToolTipML=ENU=Specifies the amount of original profit for the service order (in LCY), prior to any item cost adjustment. The program calculates the amount as the difference between the values in the Amount Excl. VAT (Amount Incl. VAT) and the Original Cost (LCY) fields.;
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct[4];
                Editable=FALSE }

    { 96  ;4   ;Field     ;
                Name=AdjProfitPct[4];
                CaptionML=ENU=Adjusted Profit %;
                ToolTipML=ENU=Specifies the amount of the adjusted profit on the service order, expressed as percentage of the amount in the Amount Excl. VAT (Amount Incl. VAT) field.;
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=AdjProfitPct[4];
                Editable=FALSE }

    { 92  ;4   ;Field     ;
                Name=Cost (LCY);
                CaptionML=ENU=Cost (LCY);
                ToolTipML=ENU=Specifies the LCY cost.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLineLCY[4]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 94  ;4   ;Field     ;
                Name=TotalAdjCostLCY[4];
                CaptionML=ENU=Adjusted Cost (LCY);
                ToolTipML=ENU=Specifies the total cost, in LCY, of the items in the service order, adjusted for any changes in the original costs of these items;
                ApplicationArea=#Service;
                SourceExpr=TotalAdjCostLCY[4];
                AutoFormatType=1;
                Editable=FALSE }

    { 93  ;4   ;Field     ;
                Name=Adjustment Cost (LCY);
                CaptionML=ENU=Adjustment Cost (LCY);
                ToolTipML=ENU=Specifies the total cost, in LCY, of the items in the service order, adjusted for any changes in the original costs of these items.;
                ApplicationArea=#Service;
                SourceExpr=TotalAdjCostLCY[4] - TotalServLineLCY[4]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE;
                OnLookup=BEGIN
                           LookupAdjmtValueEntries(1);
                         END;
                          }

    { 1906106001;3;Group  ;
                Name=Group1906106001;
                CaptionML=ENU=Total }

    { 168 ;4   ;Field     ;
                Name=TotalServLine[2].Quantity + TotalServLine[4].Quantity;
                CaptionML=ENU=Quantity;
                ToolTipML=ENU=Specifies the quantity of all G/L account entries, costs, items and/or resource hours in the service order.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[2].Quantity + TotalServLine[4].Quantity;
                Editable=FALSE }

    { 162 ;4   ;Field     ;
                Name=TotalServLine[2]."Line Amount";
                ApplicationArea=#Service;
                SourceExpr=TotalServLine[2]."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text002,false);
                Editable=FALSE }

    { 155 ;4   ;Field     ;
                Name=Inv. Discount Amount;
                CaptionML=ENU=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount for the entire service order.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLine[2]."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE;
                OnValidate=BEGIN
                             ActiveTab := ActiveTab::Details;
                             UpdateInvDiscAmount(2);
                           END;
                            }

    { 152 ;4   ;Field     ;
                Name=TotalAmount1[2];
                ApplicationArea=#Service;
                SourceExpr=TotalAmount1[2];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,false);
                Editable=FALSE;
                OnValidate=BEGIN
                             ActiveTab := ActiveTab::Details;
                             UpdateTotalAmount(2);
                           END;
                            }

    { 149 ;4   ;Field     ;
                Name=VATAmount[2];
                ApplicationArea=#Service;
                SourceExpr=VATAmount[2];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE;
                ShowCaption=false }

    { 146 ;4   ;Field     ;
                Name=TotalAmount2[2];
                ApplicationArea=#Service;
                SourceExpr=TotalAmount2[2];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,true);
                Editable=FALSE }

    { 143 ;4   ;Field     ;
                Name=Amount (LCY);
                CaptionML=ENU=Amount (LCY);
                ToolTipML=ENU=Specifies the amount of the ledger entry, in the local currency.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLineLCY[2].Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 108 ;4   ;Field     ;
                Name=Profit (LCY);
                CaptionML=ENU=Profit (LCY);
                ToolTipML=ENU=Specifies the profit related to the service order, in local currency.;
                ApplicationArea=#Service;
                SourceExpr=AdjProfitLCY[2] + AdjProfitLCY[4];
                AutoFormatType=1;
                Editable=FALSE }

    { 103 ;4   ;Field     ;
                Name=ProfitLCY[2] + ProfitLCY[4];
                CaptionML=ENU=Profit (LCY);
                ToolTipML=ENU=Specifies the profit related to the service order, in local currency.;
                ApplicationArea=#Service;
                SourceExpr=ProfitLCY[2] + ProfitLCY[4];
                AutoFormatType=1;
                Editable=FALSE }

    { 97  ;4   ;Field     ;
                Name=Profit %;
                CaptionML=ENU=Profit %;
                ToolTipML=ENU=Specifies the percent of profit related to the service order.;
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=GetDetailsTotal;
                Editable=FALSE }

    { 95  ;4   ;Field     ;
                Name=GetAdjDetailsTotal;
                CaptionML=ENU=Profit %;
                ToolTipML=ENU=Specifies the percent of profit related to the service order.;
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=GetAdjDetailsTotal;
                Editable=FALSE }

    { 91  ;4   ;Field     ;
                Name=TotalServLineLCY[2]."Unit Cost (LCY)" + TotalServLineLCY[4]."Unit Cost (LCY)";
                CaptionML=ENU=Cost (LCY);
                ToolTipML=ENU=Specifies the LCY cost.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLineLCY[2]."Unit Cost (LCY)" + TotalServLineLCY[4]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 90  ;4   ;Field     ;
                Name=TotalAdjCostLCY[2] + TotalAdjCostLCY[4];
                CaptionML=ENU=Cost (LCY);
                ToolTipML=ENU=Specifies the LCY cost.;
                ApplicationArea=#Service;
                SourceExpr=TotalAdjCostLCY[2] + TotalAdjCostLCY[4];
                AutoFormatType=1;
                Editable=FALSE }

    { 89  ;4   ;Field     ;
                Name=DetailedTotalLCYCost;
                CaptionML=ENU=Cost (LCY);
                ToolTipML=ENU=Specifies the LCY cost.;
                ApplicationArea=#Service;
                SourceExpr=(TotalAdjCostLCY[2] - TotalServLineLCY[2]."Unit Cost (LCY)") + (TotalAdjCostLCY[4] - TotalServLineLCY[4]."Unit Cost (LCY)");
                AutoFormatType=1;
                Editable=FALSE }

    { 1906801201;1;Group  ;
                Name=Shipping;
                CaptionML=ENU=Shipping }

    { 190 ;2   ;Field     ;
                Name=Amount_Shipping;
                ApplicationArea=#Service;
                SourceExpr=TotalServLine[3]."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text002,false);
                Editable=FALSE }

    { 187 ;2   ;Field     ;
                Name=Inv. Discount Amount_Shipping;
                CaptionML=ENU=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount for the entire service order.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLine[3]."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 186 ;2   ;Field     ;
                Name=TotalAmount1[3];
                ApplicationArea=#Service;
                SourceExpr=TotalAmount1[3];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,false);
                Editable=FALSE }

    { 185 ;2   ;Field     ;
                Name=VAT Amount_Shipping;
                ApplicationArea=#Service;
                SourceExpr=VATAmount[3];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT(VATAmountText[3]);
                Editable=FALSE }

    { 184 ;2   ;Field     ;
                Name=Total Incl. VAT_Shipping;
                ApplicationArea=#Service;
                SourceExpr=TotalAmount2[3];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,true);
                Editable=FALSE }

    { 43  ;2   ;Field     ;
                Name=Sales (LCY)_Shipping;
                CaptionML=ENU=Sales (LCY);
                ToolTipML=ENU=Specifies your total service sales turnover in the fiscal year. It is calculated from amounts excluding VAT on all completed and open service sales invoices and credit memos.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLineLCY[3].Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 41  ;2   ;Field     ;
                Name=TotalServLineLCY[3]."Unit Cost (LCY)";
                CaptionML=ENU=Cost (LCY);
                ToolTipML=ENU=Specifies the LCY cost.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLineLCY[3]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 35  ;2   ;Field     ;
                Name=ProfitLCY[3];
                CaptionML=ENU=Profit (LCY);
                ToolTipML=ENU=Specifies the profit related to the service order, in local currency.;
                ApplicationArea=#Service;
                SourceExpr=ProfitLCY[3];
                AutoFormatType=1;
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                Name=ProfitPct[3];
                CaptionML=ENU=Profit %;
                ToolTipML=ENU=Specifies the percent of profit related to the service order.;
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct[3];
                Editable=FALSE }

    { 188 ;2   ;Field     ;
                Name=TotalServLine[3].Quantity;
                CaptionML=ENU=Quantity;
                ToolTipML=ENU=Specifies the quantity of all G/L account entries, costs, items and/or resource hours in the service order.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[3].Quantity;
                Editable=FALSE }

    { 182 ;2   ;Field     ;
                Name=TotalServLine[3]."Units per Parcel";
                CaptionML=ENU=Parcels;
                ToolTipML=ENU=Specifies the quantity of parcels of the items specified on the service lines in the order.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[3]."Units per Parcel";
                Editable=FALSE }

    { 180 ;2   ;Field     ;
                Name=TotalServLine[3]."Net Weight";
                CaptionML=ENU=Net Weight;
                ToolTipML=ENU=Specifies the net weight of the items specified on the service lines in the order.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[3]."Net Weight";
                Editable=FALSE }

    { 178 ;2   ;Field     ;
                Name=TotalServLine[3]."Gross Weight";
                CaptionML=ENU=Gross Weight;
                ToolTipML=ENU=Specifies the gross weight of the items on the service lines in the order.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[3]."Gross Weight";
                Editable=FALSE }

    { 172 ;2   ;Field     ;
                Name=TotalServLine[3]."Unit Volume";
                CaptionML=ENU=Volume;
                ToolTipML=ENU=Specifies the volume of the items on the service lines in the order.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[3]."Unit Volume";
                Editable=FALSE }

    { 1102601002;2;Field  ;
                Name=No. of VAT Lines_Shipping;
                DrillDown=true;
                CaptionML=ENU=No. of VAT Lines;
                ToolTipML=ENU=Specifies the number of service order lines that are associated with the VAT ledger line.;
                ApplicationArea=#Service;
                SourceExpr=TempVATAmountLine3.COUNT;
                OnDrillDown=BEGIN
                              VATLinesDrillDown(TempVATAmountLine3,false);
                            END;
                             }

    { 1903781401;1;Group  ;
                Name=Service Line;
                CaptionML=ENU=Service Line }

    { 1903442601;2;Group  ;
                Name=Group1903442601;
                GroupType=FixedLayout }

    { 1903866501;3;Group  ;
                Name=Items;
                CaptionML=ENU=Items }

    { 69  ;4   ;Field     ;
                Name=TotalServLine[5].Quantity;
                CaptionML=ENU=Quantity;
                ToolTipML=ENU=Specifies the quantity of all G/L account entries, costs, items and/or resource hours in the service order.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[5].Quantity;
                Editable=FALSE }

    { 68  ;4   ;Field     ;
                Name=Amount_Items;
                CaptionML=ENU=Amount;
                ToolTipML=ENU=Specifies the amount for the relevant service order.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLine[5]."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 67  ;4   ;Field     ;
                Name=Inv. Discount Amount_Items;
                CaptionML=ENU=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount for the entire service order.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLine[5]."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 66  ;4   ;Field     ;
                Name=Total2;
                CaptionML=ENU=Total;
                ToolTipML=ENU=Specifies the total amount.;
                ApplicationArea=#Service;
                SourceExpr=TotalAmount1[5];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 71  ;4   ;Field     ;
                Name=VAT Amount_Items;
                CaptionML=ENU=VAT Amount;
                ToolTipML=ENU=Specifies the total VAT amount that has been calculated for all the lines in the service order.;
                ApplicationArea=#Service;
                SourceExpr=VATAmount[5];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 73  ;4   ;Field     ;
                Name=Total Incl. VAT_Items;
                CaptionML=ENU=Total Amount;
                ToolTipML=ENU=Specifies the total amount minus any invoice discount amount for the service order. The value does not include VAT.;
                ApplicationArea=#Service;
                SourceExpr=TotalAmount2[5];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 75  ;4   ;Field     ;
                Name=Sales (LCY)_Items;
                CaptionML=ENU=Sales (LCY);
                ToolTipML=ENU=Specifies your total service sales turnover in the fiscal year. It is calculated from amounts excluding VAT on all completed and open service sales invoices and credit memos.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLineLCY[5].Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 79  ;4   ;Field     ;
                Name=ProfitLCY[5];
                CaptionML=ENU=Original Profit (LCY);
                ToolTipML=ENU=Specifies the total cost, in LCY, of the G/L account entries, costs, items and/or resources in the service order. The cost is calculated as a product of unit cost multiplied by quantity of the relevant items or resources.;
                ApplicationArea=#Service;
                SourceExpr=ProfitLCY[5];
                AutoFormatType=1;
                Editable=FALSE }

    { 159 ;4   ;Field     ;
                Name=AdjProfitLCY[5];
                CaptionML=ENU=Adjusted Profit (LCY);
                ToolTipML=ENU=Specifies the amount of profit for the service order, in LCY, adjusted for any changes in the original item costs.;
                ApplicationArea=#Service;
                SourceExpr=AdjProfitLCY[5];
                AutoFormatType=1;
                Editable=FALSE }

    { 81  ;4   ;Field     ;
                Name=ProfitPct[5];
                CaptionML=ENU=Original Profit %;
                ToolTipML=ENU=Specifies the amount of original profit for the service order (in LCY), prior to any item cost adjustment. The program calculates the amount as the difference between the values in the Amount Excl. VAT (Amount Incl. VAT) and the Original Cost (LCY) fields.;
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct[5];
                Editable=FALSE }

    { 163 ;4   ;Field     ;
                Name=AdjProfitPct[5];
                CaptionML=ENU=Adjusted Profit %;
                ToolTipML=ENU=Specifies the amount of the adjusted profit on the service order, expressed as percentage of the amount in the Amount Excl. VAT (Amount Incl. VAT) field.;
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=AdjProfitPct[5];
                Editable=FALSE }

    { 77  ;4   ;Field     ;
                Name=TotalServLineLCY[5]."Unit Cost (LCY)";
                CaptionML=ENU=Original Cost (LCY);
                ToolTipML=ENU=Specifies the total cost, in LCY, of the G/L account entries, costs, items and/or resources in the service order. The cost is calculated as a product of unit cost multiplied by quantity of the relevant items.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLineLCY[5]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 174 ;4   ;Field     ;
                Name=TotalAdjCostLCY[5];
                CaptionML=ENU=Adjusted Cost (LCY);
                ToolTipML=ENU=Specifies the total cost, in LCY, of the items in the service order, adjusted for any changes in the original costs of these items;
                ApplicationArea=#Service;
                SourceExpr=TotalAdjCostLCY[5];
                AutoFormatType=1;
                Editable=FALSE }

    { 173 ;4   ;Field     ;
                Name=TotalAdjCostLCY[5] - TotalServLineLCY[5]."Unit Cost (LCY)";
                CaptionML=ENU=Cost Adjmt. Amount (LCY);
                ToolTipML=ENU=Specifies the difference between the original cost and the total adjusted cost of the items in the service order.;
                ApplicationArea=#Service;
                SourceExpr=TotalAdjCostLCY[5] - TotalServLineLCY[5]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE;
                OnLookup=BEGIN
                           LookupAdjmtValueEntries(1);
                         END;
                          }

    { 1901992801;3;Group  ;
                Name=Resources;
                CaptionML=ENU=Resources }

    { 86  ;4   ;Field     ;
                Name=TotalServLine[6].Quantity;
                CaptionML=ENU=Quantity;
                ToolTipML=ENU=Specifies the quantity of all G/L account entries, costs, items and/or resource hours in the service order.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[6].Quantity;
                Editable=FALSE }

    { 85  ;4   ;Field     ;
                Name=Amount_Resources;
                ApplicationArea=#Service;
                SourceExpr=TotalServLine[6]."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text002,false);
                Editable=FALSE }

    { 84  ;4   ;Field     ;
                Name=Inv. Discount Amount_Resources;
                CaptionML=ENU=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount for the entire service order.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLine[6]."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 83  ;4   ;Field     ;
                Name=TotalAmount1[6];
                ApplicationArea=#Service;
                SourceExpr=TotalAmount1[6];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,false);
                Editable=FALSE }

    { 88  ;4   ;Field     ;
                Name=VAT Amount_Resources;
                ApplicationArea=#Service;
                SourceExpr=VATAmount[6];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE;
                ShowCaption=false }

    { 119 ;4   ;Field     ;
                Name=Total Incl. VAT_Resources;
                ApplicationArea=#Service;
                SourceExpr=TotalAmount2[6];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,true);
                Editable=FALSE }

    { 120 ;4   ;Field     ;
                Name=Sales (LCY)_Resources;
                CaptionML=ENU=Amount (LCY);
                ToolTipML=ENU=Specifies the amount of the ledger entry, in the local currency.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLineLCY[6].Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 122 ;4   ;Field     ;
                Name=ProfitLCY[6];
                CaptionML=ENU=Profit (LCY);
                ToolTipML=ENU=Specifies the profit related to the service order, in local currency.;
                ApplicationArea=#Service;
                SourceExpr=ProfitLCY[6];
                AutoFormatType=1;
                Editable=FALSE }

    { 158 ;4   ;Field     ;
                Name=AdjProfitLCY[6];
                CaptionML=ENU=Profit (LCY);
                ToolTipML=ENU=Specifies the profit related to the service order, in local currency.;
                ApplicationArea=#Service;
                SourceExpr=AdjProfitLCY[6];
                AutoFormatType=1;
                Editable=FALSE }

    { 123 ;4   ;Field     ;
                Name=ProfitPct[6];
                CaptionML=ENU=Profit %;
                ToolTipML=ENU=Specifies the percent of profit related to the service order.;
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct[6];
                Editable=FALSE }

    { 51  ;4   ;Field     ;
                Name=Field51;
                ApplicationArea=#Service;
                SourceExpr=Text006;
                Visible=FALSE;
                ImplicitType=TextConst }

    { 121 ;4   ;Field     ;
                Name=TotalServLineLCY[6]."Unit Cost (LCY)";
                CaptionML=ENU=Cost (LCY);
                ToolTipML=ENU=Specifies the LCY cost.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLineLCY[6]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 53  ;4   ;Field     ;
                Name=Field53;
                ApplicationArea=#Service;
                SourceExpr=Text006;
                Visible=FALSE;
                ImplicitType=TextConst }

    { 55  ;4   ;Field     ;
                Name=Field55;
                ApplicationArea=#Service;
                SourceExpr=Text006;
                Visible=FALSE;
                ImplicitType=TextConst }

    { 1903502501;3;Group  ;
                Name=Costs && G/L Accounts;
                CaptionML=ENU=Costs && G/L Accounts }

    { 127 ;4   ;Field     ;
                Name=TotalServLine[7].Quantity;
                CaptionML=ENU=Quantity;
                ToolTipML=ENU=Specifies the quantity of all G/L account entries, costs, items and/or resource hours in the service order.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalServLine[7].Quantity;
                Editable=FALSE }

    { 126 ;4   ;Field     ;
                Name=Amount_Costs;
                ApplicationArea=#Service;
                SourceExpr=TotalServLine[7]."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text002,false);
                Editable=FALSE }

    { 125 ;4   ;Field     ;
                Name=Inv. Discount Amount_Costs;
                CaptionML=ENU=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount for the entire service order.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLine[7]."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 124 ;4   ;Field     ;
                Name=TotalAmount1[7];
                ApplicationArea=#Service;
                SourceExpr=TotalAmount1[7];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,false);
                Editable=FALSE }

    { 129 ;4   ;Field     ;
                Name=VAT Amount_Costs;
                ApplicationArea=#Service;
                SourceExpr=VATAmount[7];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE;
                ShowCaption=false }

    { 130 ;4   ;Field     ;
                Name=Total Incl. VAT_Costs;
                ApplicationArea=#Service;
                SourceExpr=TotalAmount2[7];
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,true);
                Editable=FALSE }

    { 131 ;4   ;Field     ;
                Name=Sales (LCY)_Costs;
                CaptionML=ENU=Amount (LCY);
                ToolTipML=ENU=Specifies the amount of the ledger entry, in the local currency.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLineLCY[7].Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 133 ;4   ;Field     ;
                Name=ProfitLCY[7];
                CaptionML=ENU=Profit (LCY);
                ToolTipML=ENU=Specifies the profit related to the service order, in local currency.;
                ApplicationArea=#Service;
                SourceExpr=ProfitLCY[7];
                AutoFormatType=1;
                Editable=FALSE }

    { 157 ;4   ;Field     ;
                Name=AdjProfitLCY[7];
                CaptionML=ENU=Profit (LCY);
                ToolTipML=ENU=Specifies the profit related to the service order, in local currency.;
                ApplicationArea=#Service;
                SourceExpr=AdjProfitLCY[7];
                AutoFormatType=1;
                Editable=FALSE }

    { 134 ;4   ;Field     ;
                Name=ProfitPct[7];
                CaptionML=ENU=Profit %;
                ToolTipML=ENU=Specifies the percent of profit related to the service order.;
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct[7];
                Editable=FALSE }

    { 52  ;4   ;Field     ;
                Name=Field52;
                ApplicationArea=#Service;
                SourceExpr=Text006;
                Visible=FALSE;
                ImplicitType=TextConst }

    { 132 ;4   ;Field     ;
                Name=TotalServLineLCY[7]."Unit Cost (LCY)";
                CaptionML=ENU=Cost (LCY);
                ToolTipML=ENU=Specifies the LCY cost.;
                ApplicationArea=#Service;
                SourceExpr=TotalServLineLCY[7]."Unit Cost (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 54  ;4   ;Field     ;
                Name=Field54;
                ApplicationArea=#Service;
                SourceExpr=Text006;
                Visible=FALSE;
                ImplicitType=TextConst }

    { 56  ;4   ;Field     ;
                Name=Field56;
                ApplicationArea=#Service;
                SourceExpr=Text006;
                Visible=FALSE;
                ImplicitType=TextConst }

    { 1903289601;1;Group  ;
                Name=Customer;
                CaptionML=ENU=Customer }

    { 28  ;2   ;Field     ;
                Name=Balance (LCY);
                CaptionML=ENU=Balance (LCY);
                ToolTipML=ENU=Specifies the balance in LCY on the customer's account.;
                ApplicationArea=#Service;
                SourceExpr=Cust."Balance (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 17  ;2   ;Field     ;
                Name=Credit Limit (LCY)_Customer;
                CaptionML=ENU=Credit Limit (LCY);
                ToolTipML=ENU=Specifies information about the customer's credit limit.;
                ApplicationArea=#Service;
                SourceExpr=Cust."Credit Limit (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 27  ;2   ;Field     ;
                Name=CreditLimitLCYExpendedPct;
                ExtendedDatatype=Ratio;
                CaptionML=ENU=Expended % of Credit Limit (LCY);
                ToolTipML=ENU=Specifies the expended percentage of the credit limit in (LCY).;
                ApplicationArea=#Service;
                SourceExpr=CreditLimitLCYExpendedPct;
                ImplicitType=Decimal }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Service %1 Statistics';
      Text001@1001 : TextConst 'ENU=Total';
      Text002@1002 : TextConst 'ENU=Amount';
      Text003@1003 : TextConst 'ENU=%1 must not be 0.';
      Text004@1004 : TextConst 'ENU=%1 must not be greater than %2.';
      Text005@1005 : TextConst '@@@=You cannot change the invoice discount because there is a Cust. Invoice Disc. record for Invoice Disc. Code 10000.;ENU=You cannot change the invoice discount because there is a %1 record for %2 %3.';
      TotalServLine@1006 : ARRAY [7] OF Record "Service Line";
      TotalServLineLCY@1007 : ARRAY [7] OF Record "Service Line";
      Cust@1008 : Record Customer;
      TempVATAmountLine1@1009 : TEMPORARY Record "VAT Amount Line";
      TempVATAmountLine2@1010 : TEMPORARY Record "VAT Amount Line";
      TempVATAmountLine3@1011 : TEMPORARY Record "VAT Amount Line";
      SalesSetup@1012 : Record "Sales & Receivables Setup";
      ServAmtsMgt@1029 : Codeunit "Serv-Amounts Mgt.";
      VATLinesForm@1025 : Page "VAT Amount Lines";
      TotalAmount1@1014 : ARRAY [7] OF Decimal;
      TotalAmount2@1015 : ARRAY [7] OF Decimal;
      AdjProfitLCY@1031 : ARRAY [7] OF Decimal;
      AdjProfitPct@1030 : ARRAY [7] OF Decimal;
      TotalAdjCostLCY@1013 : ARRAY [7] OF Decimal;
      VATAmount@1016 : ARRAY [7] OF Decimal;
      VATAmountText@1017 : ARRAY [7] OF Text[30];
      ProfitLCY@1018 : ARRAY [7] OF Decimal;
      ProfitPct@1019 : ARRAY [7] OF Decimal;
      CreditLimitLCYExpendedPct@1020 : Decimal;
      i@1021 : Integer;
      PrevNo@1022 : Code[20];
      ActiveTab@1023 : 'General,Details,Shipping';
      PrevTab@1024 : 'General,Details,Shipping';
      VATLinesFormIsEditable@1026 : Boolean;
      AllowInvDisc@1027 : Boolean;
      AllowVATDifference@1028 : Boolean;
      Text006@1032 : TextConst 'ENU=Placeholder';

    LOCAL PROCEDURE UpdateHeaderInfo@5(IndexNo@1000 : Integer;VAR VATAmountLine@1001 : Record "VAT Amount Line");
    VAR
      CurrExchRate@1002 : Record "Currency Exchange Rate";
      UseDate@1003 : Date;
    BEGIN
      TotalServLine[IndexNo]."Inv. Discount Amount" := VATAmountLine.GetTotalInvDiscAmount;
      TotalAmount1[IndexNo] :=
        TotalServLine[IndexNo]."Line Amount" - TotalServLine[IndexNo]."Inv. Discount Amount";
      VATAmount[IndexNo] := VATAmountLine.GetTotalVATAmount;
      if "Prices Including VAT" then begin
        TotalAmount1[IndexNo] := VATAmountLine.GetTotalAmountInclVAT;
        TotalAmount2[IndexNo] := TotalAmount1[IndexNo] - VATAmount[IndexNo];
        TotalServLine[IndexNo]."Line Amount" :=
          TotalAmount1[IndexNo] + TotalServLine[IndexNo]."Inv. Discount Amount";
      end else
        TotalAmount2[IndexNo] := TotalAmount1[IndexNo] + VATAmount[IndexNo];

      if "Prices Including VAT" then
        TotalServLineLCY[IndexNo].Amount := TotalAmount2[IndexNo]
      else
        TotalServLineLCY[IndexNo].Amount := TotalAmount1[IndexNo];
      if "Currency Code" <> '' then
        if ("Document Type" = "Document Type"::Quote) and
           ("Posting Date" = 0D)
        then
          UseDate := WORKDATE
        else
          UseDate := "Posting Date";

      TotalServLineLCY[IndexNo].Amount :=
        CurrExchRate.ExchangeAmtFCYToLCY(
          UseDate,"Currency Code",TotalServLineLCY[IndexNo].Amount,"Currency Factor");

      ProfitLCY[IndexNo] := TotalServLineLCY[IndexNo].Amount - TotalServLineLCY[IndexNo]."Unit Cost (LCY)";
      ProfitLCY[IndexNo] := MakeNegativeZero(ProfitLCY[IndexNo]);
      if TotalServLineLCY[IndexNo].Amount = 0 then
        ProfitPct[IndexNo] := 0
      else
        ProfitPct[IndexNo] := ROUND(100 * ProfitLCY[IndexNo] / TotalServLineLCY[IndexNo].Amount,0.1);

      AdjProfitLCY[IndexNo] := TotalServLineLCY[IndexNo].Amount - TotalAdjCostLCY[IndexNo];
      AdjProfitLCY[IndexNo] := MakeNegativeZero(AdjProfitLCY[IndexNo]);
      if TotalServLineLCY[IndexNo].Amount = 0 then
        AdjProfitPct[IndexNo] := 0
      else
        AdjProfitPct[IndexNo] := ROUND(100 * AdjProfitLCY[IndexNo] / TotalServLineLCY[IndexNo].Amount,0.1);
    END;

    LOCAL PROCEDURE GetVATSpecification@21(QtyType@1000 : 'General,Details,Shipping');
    BEGIN
      case QtyType of
        QtyType::General:
          begin
            VATLinesForm.GetTempVATAmountLine(TempVATAmountLine1);
            UpdateHeaderInfo(1,TempVATAmountLine1);
          end;
        QtyType::Details:
          begin
            VATLinesForm.GetTempVATAmountLine(TempVATAmountLine2);
            UpdateHeaderInfo(2,TempVATAmountLine2);
          end;
        QtyType::Shipping:
          VATLinesForm.GetTempVATAmountLine(TempVATAmountLine3);
      end;
    END;

    LOCAL PROCEDURE UpdateTotalAmount@16(IndexNo@1000 : Integer);
    VAR
      SaveTotalAmount@1001 : Decimal;
    BEGIN
      CheckAllowInvDisc;
      if "Prices Including VAT" then begin
        SaveTotalAmount := TotalAmount1[IndexNo];
        UpdateInvDiscAmount(IndexNo);
        TotalAmount1[IndexNo] := SaveTotalAmount;
      end;

      with TotalServLine[IndexNo] do
        "Inv. Discount Amount" := "Line Amount" - TotalAmount1[IndexNo];
      UpdateInvDiscAmount(IndexNo);
    END;

    LOCAL PROCEDURE UpdateInvDiscAmount@3(ModifiedIndexNo@1000 : Integer);
    VAR
      PartialInvoicing@1001 : Boolean;
      MaxIndexNo@1002 : Integer;
      IndexNo@1003 : ARRAY [2] OF Integer;
      i@1004 : Integer;
      InvDiscBaseAmount@1005 : Decimal;
    BEGIN
      CheckAllowInvDisc;
      if not (ModifiedIndexNo in [1,2]) then
        exit;

      if ModifiedIndexNo = 1 then
        InvDiscBaseAmount := TempVATAmountLine1.GetTotalInvDiscBaseAmount(false,"Currency Code")
      else
        InvDiscBaseAmount := TempVATAmountLine2.GetTotalInvDiscBaseAmount(false,"Currency Code");

      if InvDiscBaseAmount = 0 then
        ERROR(Text003,TempVATAmountLine2.FIELDCAPTION("Inv. Disc. Base Amount"));

      if TotalServLine[ModifiedIndexNo]."Inv. Discount Amount" / InvDiscBaseAmount > 1 then
        ERROR(
          Text004,
          TotalServLine[ModifiedIndexNo].FIELDCAPTION("Inv. Discount Amount"),
          TempVATAmountLine2.FIELDCAPTION("Inv. Disc. Base Amount"));

      PartialInvoicing := (TotalServLine[1]."Line Amount" <> TotalServLine[2]."Line Amount");

      IndexNo[1] := ModifiedIndexNo;
      IndexNo[2] := 3 - ModifiedIndexNo;
      if (ModifiedIndexNo = 2) and PartialInvoicing then
        MaxIndexNo := 1
      else
        MaxIndexNo := 2;

      if not PartialInvoicing then
        if ModifiedIndexNo = 1 then
          TotalServLine[2]."Inv. Discount Amount" := TotalServLine[1]."Inv. Discount Amount"
        else
          TotalServLine[1]."Inv. Discount Amount" := TotalServLine[2]."Inv. Discount Amount";

      for i := 1 to MaxIndexNo do
        with TotalServLine[IndexNo[i]] do begin
          if (i = 1) or not PartialInvoicing then
            if IndexNo[i] = 1 then begin
              TempVATAmountLine1.SetInvoiceDiscountAmount(
                "Inv. Discount Amount","Currency Code","Prices Including VAT","VAT Base Discount %");
            end else
              TempVATAmountLine2.SetInvoiceDiscountAmount(
                "Inv. Discount Amount","Currency Code","Prices Including VAT","VAT Base Discount %");

          if (i = 2) and PartialInvoicing then
            if IndexNo[i] = 1 then begin
              InvDiscBaseAmount := TempVATAmountLine2.GetTotalInvDiscBaseAmount(false,"Currency Code");
              if InvDiscBaseAmount = 0 then
                TempVATAmountLine1.SetInvoiceDiscountPercent(
                  0,"Currency Code","Prices Including VAT",false,"VAT Base Discount %")
              else
                TempVATAmountLine1.SetInvoiceDiscountPercent(
                  100 * TempVATAmountLine2.GetTotalInvDiscAmount / InvDiscBaseAmount,
                  "Currency Code","Prices Including VAT",false,"VAT Base Discount %");
            end else begin
              InvDiscBaseAmount := TempVATAmountLine1.GetTotalInvDiscBaseAmount(false,"Currency Code");
              if InvDiscBaseAmount = 0 then
                TempVATAmountLine2.SetInvoiceDiscountPercent(
                  0,"Currency Code","Prices Including VAT",false,"VAT Base Discount %")
              else
                TempVATAmountLine2.SetInvoiceDiscountPercent(
                  100 * TempVATAmountLine1.GetTotalInvDiscAmount / InvDiscBaseAmount,
                  "Currency Code","Prices Including VAT",false,"VAT Base Discount %");
            end;
        end;

      UpdateHeaderInfo(1,TempVATAmountLine1);
      UpdateHeaderInfo(2,TempVATAmountLine2);

      if ModifiedIndexNo = 1 then
        VATLinesForm.SetTempVATAmountLine(TempVATAmountLine1)
      else
        VATLinesForm.SetTempVATAmountLine(TempVATAmountLine2);

      "Invoice Discount Calculation" := "Invoice Discount Calculation"::Amount;
      "Invoice Discount Value" := TotalServLine[1]."Inv. Discount Amount";
      MODIFY;

      UpdateVATOnServLines;
    END;

    LOCAL PROCEDURE GetCaptionClass@2(FieldCaption@1000 : Text[100];ReverseCaption@1001 : Boolean) : Text[80];
    BEGIN
      if "Prices Including VAT" xor ReverseCaption then
        exit('2,1,' + FieldCaption);
      exit('2,0,' + FieldCaption);
    END;

    LOCAL PROCEDURE UpdateVATOnServLines@1();
    VAR
      ServLine@1000 : Record "Service Line";
    BEGIN
      GetVATSpecification(ActiveTab);
      if TempVATAmountLine1.GetAnyLineModified then
        ServLine.UpdateVATOnLines(0,Rec,ServLine,TempVATAmountLine1);
      if TempVATAmountLine2.GetAnyLineModified then
        ServLine.UpdateVATOnLines(1,Rec,ServLine,TempVATAmountLine2);
      PrevNo := '';
    END;

    LOCAL PROCEDURE CustInvDiscRecExists@4(InvDiscCode@1000 : Code[20]) : Boolean;
    VAR
      CustInvDisc@1001 : Record "Cust. Invoice Disc.";
    BEGIN
      CustInvDisc.SETRANGE(Code,InvDiscCode);
      exit(CustInvDisc.FINDFIRST);
    END;

    LOCAL PROCEDURE CheckAllowInvDisc@8();
    VAR
      CustInvDisc@1000 : Record "Cust. Invoice Disc.";
    BEGIN
      if not AllowInvDisc then
        ERROR(
          Text005,
          CustInvDisc.TABLECAPTION,FIELDCAPTION("Invoice Disc. Code"),"Invoice Disc. Code");
    END;

    LOCAL PROCEDURE GetDetailsTotal@6() : Decimal;
    BEGIN
      if TotalServLineLCY[2].Amount = 0 then
        exit(0);
      exit(ROUND(100 * (ProfitLCY[2] + ProfitLCY[4]) / TotalServLineLCY[2].Amount,0.01));
    END;

    LOCAL PROCEDURE GetAdjDetailsTotal@7() : Decimal;
    BEGIN
      if TotalServLineLCY[2].Amount = 0 then
        exit(0);
      exit(ROUND(100 * (AdjProfitLCY[2] + AdjProfitLCY[4]) / TotalServLineLCY[2].Amount,0.01));
    END;

    LOCAL PROCEDURE VATLinesDrillDown@1102601000(VAR VATLinesToDrillDown@1000 : Record "VAT Amount Line";ThisTabAllowsVATEditing@1001 : Boolean);
    BEGIN
      CLEAR(VATLinesForm);
      VATLinesForm.SetTempVATAmountLine(VATLinesToDrillDown);
      VATLinesForm.InitGlobals(
        "Currency Code",AllowVATDifference,AllowVATDifference and ThisTabAllowsVATEditing,
        "Prices Including VAT",AllowInvDisc,"VAT Base Discount %");
      VATLinesForm.RUNMODAL;
      VATLinesForm.GetTempVATAmountLine(VATLinesToDrillDown);
    END;

    LOCAL PROCEDURE TotalAmount21OnAfterValidate@19074760();
    BEGIN
      with TotalServLine[1] do begin
        if "Prices Including VAT" then
          "Inv. Discount Amount" := "Line Amount" - "Amount Including VAT"
        else
          "Inv. Discount Amount" := "Line Amount" - Amount;
      end;
      ActiveTab := ActiveTab::General;
      UpdateInvDiscAmount(1);
    END;

    LOCAL PROCEDURE MakeNegativeZero@10(Amount@1000 : Decimal) : Decimal;
    BEGIN
      if Amount < 0 then
        exit(0);
      exit(Amount);
    END;

    BEGIN
    END.
  }
}

