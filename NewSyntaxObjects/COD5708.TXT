OBJECT Codeunit 5708 Release Transfer Document
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    TableNo="Transfer Header";
    OnRun=VAR
            TransLine@1000 : Record "Transfer Line";
          BEGIN
            if Status = Status::Released then
              exit;

            OnBeforeReleaseTransferDoc(Rec);
            TESTFIELD("Transfer-from Code");
            TESTFIELD("Transfer-to Code");
            if "Transfer-from Code" = "Transfer-to Code" then
              ERROR(Text001,"No.",FIELDCAPTION("Transfer-from Code"),FIELDCAPTION("Transfer-to Code"));
            if not "Direct Transfer" then
              TESTFIELD("In-Transit Code");
            TESTFIELD(Status,Status::Open);

            TransLine.SETRANGE("Document No.","No.");
            TransLine.SETFILTER(Quantity,'<>0');
            if TransLine.ISEMPTY then
              ERROR(Text002,"No.");

            VALIDATE(Status,Status::Released);
            MODIFY;

            WhseTransferRelease.SetCallFromTransferOrder(true);
            WhseTransferRelease.Release(Rec);

            OnAfterReleaseTransferDoc(Rec);
          END;

  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=The transfer order %1 cannot be released because %2 and %3 are the same.';
      Text002@1002 : TextConst 'ENU=There is nothing to release for transfer order %1.';
      WhseTransferRelease@1005 : Codeunit "Whse.-Transfer Release";

    [External]
    PROCEDURE Reopen@1(VAR TransHeader@1000 : Record "Transfer Header");
    BEGIN
      with TransHeader do begin
        if Status = Status::Open then
          exit;
        WhseTransferRelease.Reopen(TransHeader);
        VALIDATE(Status,Status::Open);
        MODIFY;
      end;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeReleaseTransferDoc@2(VAR TransferHeader@1000 : Record "Transfer Header");
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterReleaseTransferDoc@3(VAR TransferHeader@1000 : Record "Transfer Header");
    BEGIN
    END;

    BEGIN
    END.
  }
}

