OBJECT Page 47 Sales Invoice Subform
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    MultipleNewLines=true;
    LinksAllowed=false;
    SourceTable="Sales Line";
    DelayedInsert=true;
    SourceTableView=WHERE("Document Type"=FILTER(Invoice));
    PageType=ListPart;
    AutoSplitKey=true;
    OnInit=BEGIN
             SalesSetup.GET;
             Currency.InitRoundingPrecision;
             TempOptionLookupBuffer.FillBuffer(TempOptionLookupBuffer."Lookup Type"::Sales);
             IsFoundation := ApplicationAreaSetup.IsFoundationEnabled;
           END;

    OnOpenPage=VAR
                 Location@1000 : Record Location;
               BEGIN
                 if Location.READPERMISSION then
                   LocationCodeVisible := not Location.ISEMPTY;
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       UpdateTypeText;
                       SetItemChargeFieldsStyle;
                     END;

    OnNewRecord=BEGIN
                  InitType;

                  // Default to Item for the first line and to previous line type for the others
                  if ApplicationAreaSetup.IsFoundationEnabled then
                    if xRec."Document No." = '' then
                      Type := Type::Item;

                  CLEAR(ShortcutDimCode);
                  UpdateTypeText;
                END;

    OnDeleteRecord=VAR
                     ReserveSalesLine@1000 : Codeunit "Sales Line-Reserve";
                   BEGIN
                     if (Quantity <> 0) and ItemExists("No.") then begin
                       COMMIT;
                       if not ReserveSalesLine.DeleteLineConfirm(Rec) then
                         exit(false);
                       ReserveSalesLine.DeleteLine(Rec);
                     end;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           CalculateTotals;
                           UpdateEditableOnRow;
                           SetItemChargeFieldsStyle;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1906587504;2 ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 1903079504;3 ;Action    ;
                      Name=Get &Price;
                      AccessByPermission=TableData "Sales Price"=R;
                      Ellipsis=true;
                      CaptionML=ENU=Get &Price;
                      ToolTipML=ENU=Insert the lowest possible price in the Unit Price field according to any special price that you have set up.;
                      ApplicationArea=#Advanced;
                      Image=Price;
                      OnAction=BEGIN
                                 ShowPrices
                               END;
                                }
      { 1907415004;3 ;Action    ;
                      Name=Get Li&ne Discount;
                      AccessByPermission=TableData "Sales Line Discount"=R;
                      Ellipsis=true;
                      CaptionML=ENU=Get Li&ne Discount;
                      ToolTipML=ENU=Insert the best possible discount in the Line Discount field according to any special discounts that you have set up.;
                      ApplicationArea=#Advanced;
                      Image=LineDiscount;
                      OnAction=BEGIN
                                 ShowLineDisc
                               END;
                                }
      { 1903098604;3 ;Action    ;
                      Name=E&xplode BOM;
                      AccessByPermission=TableData "BOM Component"=R;
                      CaptionML=ENU=E&xplode BOM;
                      ToolTipML=ENU=Insert new lines for the components on the bill of materials, for example to sell the parent item as a kit. CAUTION: The line for the parent item will be deleted and represented by a description only. To undo, you must delete the component lines and add a line the parent item again.;
                      ApplicationArea=#Advanced;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 1900206204;3 ;Action    ;
                      Name=InsertExtTexts;
                      AccessByPermission=TableData "Extended Text Header"=R;
                      CaptionML=ENU=Insert &Ext. Texts;
                      ToolTipML=ENU=Insert the extended item description that is set up for the item that is being processed on the line.;
                      ApplicationArea=#Suite;
                      Image=Text;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 InsertExtendedText(true);
                               END;
                                }
      { 1900545004;3 ;Action    ;
                      Name=GetShipmentLines;
                      AccessByPermission=TableData "Sales Shipment Header"=R;
                      Ellipsis=true;
                      CaptionML=ENU=Get &Shipment Lines;
                      ToolTipML=ENU=Select multiple shipments to the same customer because you want to combine them on one invoice.;
                      ApplicationArea=#Suite;
                      Image=Shipment;
                      OnAction=BEGIN
                                 GetShipment;
                               END;
                                }
      { 1905427604;2 ;ActionGroup;
                      Name=Item Availability by;
                      CaptionML=ENU=Item Availability by;
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      Name=Event;
                      CaptionML=ENU=Event;
                      ToolTipML=ENU=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 1900639404;3 ;Action    ;
                      Name=Period;
                      CaptionML=ENU=Period;
                      ToolTipML=ENU=Show the projected quantity of the item over time according to time periods, such as day, week, or month.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 1904974904;3 ;Action    ;
                      Name=Variant;
                      CaptionML=ENU=Variant;
                      ToolTipML=ENU=View or edit the item's variants. Instead of setting up each color of an item as a separate item, you can set up the various colors as variants of the item.;
                      ApplicationArea=#Advanced;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 1904945204;3 ;Action    ;
                      Name=Location;
                      AccessByPermission=TableData Location=R;
                      CaptionML=ENU=Location;
                      ToolTipML=ENU=View the actual and projected quantity of the item per location.;
                      ApplicationArea=#Location;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 3       ;3   ;Action    ;
                      Name=BOM Level;
                      AccessByPermission=TableData "BOM Buffer"=R;
                      CaptionML=ENU=BOM Level;
                      ToolTipML=ENU=View availability figures for items on bills of materials that show how many units of a parent item you can make based on the availability of child items.;
                      ApplicationArea=#Assembly;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 23      ;2   ;ActionGroup;
                      Name=Related Information;
                      CaptionML=ENU=Related Information }
      { 1904522204;3 ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Suite;
                      Image=Dimensions;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1900948904;3 ;Action    ;
                      Name=Co&mments;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Advanced;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 ShowLineComments;
                               END;
                                }
      { 1907184504;3 ;Action    ;
                      Name=Item Charge &Assignment;
                      AccessByPermission=TableData "Item Charge"=R;
                      CaptionML=ENU=Item Charge &Assignment;
                      ToolTipML=ENU=Assign additional direct costs, for example for freight, to the item on the line.;
                      ApplicationArea=#ItemCharges;
                      Image=ItemCosts;
                      OnAction=BEGIN
                                 ShowItemChargeAssgnt;
                                 SetItemChargeFieldsStyle;
                               END;
                                }
      { 1905987604;3 ;Action    ;
                      Name=Item &Tracking Lines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      ToolTipML=ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 17      ;3   ;Action    ;
                      Name=DeferralSchedule;
                      CaptionML=ENU=Deferral Schedule;
                      ToolTipML=ENU=View or edit the deferral schedule that governs how revenue made with this sales document is deferred to different accounting periods when the document is posted.;
                      ApplicationArea=#Suite;
                      Enabled="Deferral Code" <> '';
                      Image=PaymentPeriod;
                      OnAction=BEGIN
                                 TotalSalesHeader.GET("Document Type","Document No.");
                                 ShowDeferrals(TotalSalesHeader."Posting Date",TotalSalesHeader."Currency Code");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the type of entity that will be posted for this sales line, such as Item, Resource, or G/L Account.;
                ApplicationArea=#Advanced;
                SourceExpr=Type;
                OnValidate=BEGIN
                             NoOnAfterValidate;
                             UpdateEditableOnRow;

                             if xRec."No." <> '' then
                               RedistributeTotalsOnAfterValidate;

                             UpdateTypeText;
                           END;

                ImplicitType=Option }

    { 77  ;2   ;Field     ;
                Name=FilteredTypeField;
                CaptionML=ENU=Type;
                ToolTipML=ENU=Specifies the type of entity that will be posted for this sales line, such as Item,, or G/L Account.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TypeAsText;
                TableRelation="Option Lookup Buffer"."Option Caption" WHERE ("Lookup Type"=CONST(Sales));
                Visible=IsFoundation;
                LookupPageID="Option Lookup List";
                OnValidate=BEGIN
                             if TempOptionLookupBuffer.AutoCompleteOption(TypeAsText,TempOptionLookupBuffer."Lookup Type"::Sales) then
                               VALIDATE(Type,TempOptionLookupBuffer.ID);
                             TempOptionLookupBuffer.ValidateOption(TypeAsText);
                             UpdateEditableOnRow;
                             UpdateTypeText;
                           END;

                ImplicitType=Text30 }

    { 4   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of a general ledger account, item, resource, additional cost, or fixed asset, depending on the contents of the Type field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No.";
                OnValidate=BEGIN
                             NoOnAfterValidate;
                             UpdateEditableOnRow;
                             ShowShortcutDimCode(ShortcutDimCode);
                             if xRec."No." <> '' then
                               RedistributeTotalsOnAfterValidate;
                             UpdateTypeText;
                           END;

                ImplicitType=Code20;
                ShowMandatory=Type <> Type::" " }

    { 58  ;2   ;Field     ;
                Name=Cross-Reference No.;
                ToolTipML=ENU=Specifies the cross-referenced item number. If you enter a cross reference between yours and your vendor's or customer's item number, then this number will override the standard item number when you enter the cross-reference number on a sales or purchase document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             NoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           NoOnAfterValidate;
                         END;

                ImplicitType=Code20 }

    { 74  ;2   ;Field     ;
                Name=IC Partner Code;
                ToolTipML=ENU=Specifies the code of the intercompany partner that the transaction is related to if the entry was created from an intercompany transaction.;
                ApplicationArea=#Intercompany;
                SourceExpr="IC Partner Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 46  ;2   ;Field     ;
                Name=IC Partner Ref. Type;
                ToolTipML=ENU=Specifies the item or account in your IC partner's company that corresponds to the item or account on the line.;
                ApplicationArea=#Intercompany;
                SourceExpr="IC Partner Ref. Type";
                Visible=FALSE;
                ImplicitType=Option }

    { 70  ;2   ;Field     ;
                Name=IC Partner Reference;
                ToolTipML=ENU=Specifies the IC partner. If the line is being sent to one of your intercompany partners, this field is used together with the IC Partner Ref. Type field to indicate the item or account in your partner's company that corresponds to the line.;
                ApplicationArea=#Intercompany;
                SourceExpr="IC Partner Reference";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 30  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 62  ;2   ;Field     ;
                Name=Nonstock;
                ToolTipML=ENU=Specifies that this item is a nonstock item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Nonstock;
                Visible=FALSE;
                ImplicitType=Boolean }

    { 14  ;2   ;Field     ;
                Name=VAT Prod. Posting Group;
                ToolTipML=ENU=Specifies the VAT product posting group. Links business transactions made for the item, resource, or G/L account with the general ledger, to account for VAT amounts resulting from trade with that record.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the entry, which is based on the contents of the Type and No. fields.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                OnValidate=BEGIN
                             UpdateEditableOnRow;

                             if "No." = xRec."No." then
                               exit;

                             NoOnAfterValidate;
                             ShowShortcutDimCode(ShortcutDimCode);
                             if xRec."No." <> '' then
                               RedistributeTotalsOnAfterValidate;
                             UpdateTypeText;
                           END;

                ImplicitType=Text50;
                ShowMandatory=NOT IsCommentLine }

    { 50  ;2   ;Field     ;
                Name=Return Reason Code;
                ToolTipML=ENU=Specifies the code explaining why the item was returned.;
                ApplicationArea=#Advanced;
                SourceExpr="Return Reason Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 32  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the inventory location from which the items sold should be picked and where the inventory decrease is registered.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Visible=LocationCodeVisible;
                Enabled=NOT IsCommentLine;
                Editable=NOT IsCommentLine;
                ImplicitType=Code10 }

    { 76  ;2   ;Field     ;
                Name=Bin Code;
                ToolTipML=ENU=Specifies the bin where the items are picked or put away.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies how many units are being sold.;
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr=Quantity;
                Enabled=NOT IsCommentLine;
                Editable=NOT IsCommentLine;
                OnValidate=BEGIN
                             ValidateAutoReserve;
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal;
                ShowMandatory=(NOT IsCommentLine) AND ("No." <> '') }

    { 34  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure Code";
                Enabled=UnitofMeasureCodeIsChangeable;
                Editable=UnitofMeasureCodeIsChangeable;
                OnValidate=BEGIN
                             ValidateAutoReserve;
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Code10 }

    { 10  ;2   ;Field     ;
                Name=Unit of Measure;
                ToolTipML=ENU=Specifies the unit of measure for the item or resource on the sales line.;
                ApplicationArea=#Advanced;
                SourceExpr="Unit of Measure";
                Visible=FALSE;
                ImplicitType=Text10 }

    { 26  ;2   ;Field     ;
                Name=Unit Cost (LCY);
                ToolTipML=ENU=Specifies the unit cost of the item on the line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 88  ;2   ;Field     ;
                Name=Sales Price Exists;
                CaptionML=ENU=Sales Price Exists;
                ToolTipML=ENU=Specifies that there is a specific price for this customer.;
                ApplicationArea=#Advanced;
                SourceExpr=PriceExists;
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Boolean }

    { 12  ;2   ;Field     ;
                Name=Unit Price;
                ToolTipML=ENU=Specifies the price for one unit on the sales line.;
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr="Unit Price";
                Enabled=NOT IsCommentLine;
                Editable=NOT IsCommentLine;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal;
                ShowMandatory=(NOT IsCommentLine) AND ("No." <> '') }

    { 16  ;2   ;Field     ;
                Name=Line Discount %;
                ToolTipML=ENU=Specifies the discount percentage that is granted for the item on the line.;
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr="Line Discount %";
                Enabled=NOT IsCommentLine;
                Editable=NOT IsCommentLine;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 64  ;2   ;Field     ;
                Name=Line Amount;
                ToolTipML=ENU=Specifies the net amount, excluding any invoice discount amount, that must be paid for products on the line.;
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr="Line Amount";
                Enabled=NOT IsCommentLine;
                Editable=NOT IsCommentLine;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal;
                ShowMandatory=(NOT IsCommentLine) AND ("No." <> '') }

    { 90  ;2   ;Field     ;
                Name=Sales Line Disc. Exists;
                CaptionML=ENU=Sales Line Disc. Exists;
                ToolTipML=ENU=Specifies that there is a specific discount for this customer.;
                ApplicationArea=#Advanced;
                SourceExpr=LineDiscExists;
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Boolean }

    { 40  ;2   ;Field     ;
                Name=Line Discount Amount;
                ToolTipML=ENU=Specifies the discount amount that is granted for the item on the line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 42  ;2   ;Field     ;
                Name=Allow Invoice Disc.;
                ToolTipML=ENU=Specifies if the invoice line is included when the invoice discount is calculated.;
                ApplicationArea=#Advanced;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 80  ;2   ;Field     ;
                Name=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount for the line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 84  ;2   ;Field     ;
                Name=Allow Item Charge Assignment;
                ToolTipML=ENU=Specifies that you can assign item charges to this line.;
                ApplicationArea=#Advanced;
                SourceExpr="Allow Item Charge Assignment";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 36  ;2   ;Field     ;
                Name=Qty. to Assign;
                ToolTipML=ENU=Specifies how many units of the item charge will be assigned to the line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Qty. to Assign";
                StyleExpr=ItemChargeStyleExpression;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdatePage(false);
                            END;

                ImplicitType=Decimal }

    { 82  ;2   ;Field     ;
                Name=Qty. Assigned;
                ToolTipML=ENU=Specifies the quantity of the item charge that was assigned to a specified item when you posted this sales line.;
                ApplicationArea=#Advanced;
                BlankZero=true;
                SourceExpr="Qty. Assigned";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdatePage(false);
                            END;

                ImplicitType=Decimal }

    { 52  ;2   ;Field     ;
                Name=Job No.;
                ToolTipML=ENU=Specifies the number of the related job. If you fill in this field and the Job Task No. field, then a job ledger entry will be posted together with the sales line.;
                ApplicationArea=#Jobs;
                SourceExpr="Job No.";
                Visible=FALSE;
                Editable=FALSE;
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;

                ImplicitType=Code20 }

    { 18  ;2   ;Field     ;
                Name=Job Task No.;
                ToolTipML=ENU=Specifies the number of the related job task.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Task No.";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Code20 }

    { 60  ;2   ;Field     ;
                Name=Job Contract Entry No.;
                ToolTipML=ENU=Specifies the entry number of the job planning line that the sales line is linked to.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Contract Entry No.";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Integer }

    { 19  ;2   ;Field     ;
                Name=Tax Category;
                ToolTipML=ENU=Specifies the VAT category in connection with electronic document sending. For example, when you send sales documents through the PEPPOL service, the value in this field is used to populate several fields, such as the ClassifiedTaxCategory element in the Item group. It is also used to populate the TaxCategory element in both the TaxSubtotal and AllowanceCharge group. The number is based on the UNCL5305 standard.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Category";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 25  ;2   ;Field     ;
                Name=Shipping Agent Code;
                ToolTipML=ENU=Specifies the code for the shipping agent who is transporting the items.;
                ApplicationArea=#Suite;
                SourceExpr="Shipping Agent Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 27  ;2   ;Field     ;
                Name=Shipping Agent Service Code;
                ToolTipML=ENU=Specifies the code for the service, such as a one-day delivery, that is offered by the shipping agent.;
                ApplicationArea=#Suite;
                SourceExpr="Shipping Agent Service Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 72  ;2   ;Field     ;
                Name=Work Type Code;
                ToolTipML=ENU=Specifies which work type the resource applies to when the sale is related to a job.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Work Type Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 54  ;2   ;Field     ;
                Name=Blanket Order No.;
                ToolTipML=ENU=Specifies the number of the blanket order that the record originates from.;
                ApplicationArea=#Advanced;
                SourceExpr="Blanket Order No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 56  ;2   ;Field     ;
                Name=Blanket Order Line No.;
                ToolTipML=ENU=Specifies the number of the blanket order line that the record originates from.;
                ApplicationArea=#Advanced;
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE;
                ImplicitType=Integer }

    { 24  ;2   ;Field     ;
                Name=FA Posting Date;
                ToolTipML=ENU=Specifies the date that will be used on related fixed asset ledger entries.;
                ApplicationArea=#Advanced;
                SourceExpr="FA Posting Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 44  ;2   ;Field     ;
                Name=Depr. until FA Posting Date;
                ToolTipML=ENU=Specifies if depreciation was calculated until the FA posting date of the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Depr. until FA Posting Date";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 28  ;2   ;Field     ;
                Name=Depreciation Book Code;
                ToolTipML=ENU=Specifies the code for the depreciation book to which the line will be posted if you have selected Fixed Asset in the Type field for this line.;
                ApplicationArea=#Advanced;
                SourceExpr="Depreciation Book Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 68  ;2   ;Field     ;
                Name=Use Duplication List;
                ToolTipML=ENU="Specifies, if the type is Fixed Asset, that information on the line is to be posted to all the assets defined depreciation books. ";
                ApplicationArea=#Advanced;
                SourceExpr="Use Duplication List";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 66  ;2   ;Field     ;
                Name=Duplicate in Depreciation Book;
                ToolTipML=ENU=Specifies a depreciation book code if you want the journal line to be posted to that depreciation book, as well as to the depreciation book in the Depreciation Book Code field.;
                ApplicationArea=#Advanced;
                SourceExpr="Duplicate in Depreciation Book";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 38  ;2   ;Field     ;
                Name=Appl.-from Item Entry;
                ToolTipML=ENU=Specifies the number of the item ledger entry that the document or journal line is applied from.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Appl.-from Item Entry";
                Visible=FALSE;
                ImplicitType=Integer }

    { 48  ;2   ;Field     ;
                Name=Appl.-to Item Entry;
                ToolTipML=ENU=Specifies the number of the item ledger entry that the document or journal line is applied -to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE;
                ImplicitType=Integer }

    { 21  ;2   ;Field     ;
                Name=Deferral Code;
                ToolTipML=ENU=Specifies the deferral template that governs how revenue earned with this sales document is deferred to the different accounting periods when the good or service was delivered.;
                ApplicationArea=#Suite;
                SourceExpr="Deferral Code";
                Visible=FALSE;
                Enabled=(Type <> Type::"Fixed Asset") AND (Type <> Type::" ");
                ImplicitType=Code10 }

    { 20  ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 22  ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 300 ;2   ;Field     ;
                Name=ShortcutDimCode[3];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(3),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                Name=ShortcutDimCode[4];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(4),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                Name=ShortcutDimCode[5];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(5),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                Name=ShortcutDimCode[6];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(6),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                Name=ShortcutDimCode[7];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(7),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                Name=ShortcutDimCode[8];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(8),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 104 ;2   ;Field     ;
                Name=Document No.;
                ToolTipML=ENU=Specifies the document number.;
                ApplicationArea=#Advanced;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Code20 }

    { 106 ;2   ;Field     ;
                Name=Line No.;
                ToolTipML=ENU=Specifies the line number.;
                ApplicationArea=#Advanced;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Integer }

    { 39  ;1   ;Group     ;
                Name=Group39;
                GroupType=Group }

    { 33  ;2   ;Group     ;
                Name=Group33;
                GroupType=Group }

    { 7   ;3   ;Field     ;
                Name=Subtotal Excl. VAT;
                CaptionML=ENU=Subtotal Excl. VAT;
                ToolTipML=ENU=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalSalesLine."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetTotalLineAmountWithVATAndCurrencyCaption(Currency.Code,TotalSalesHeader."Prices Including VAT");
                Editable=FALSE }

    { 31  ;3   ;Field     ;
                Name=Invoice Discount Amount;
                CaptionML=ENU=Invoice Discount Amount;
                ToolTipML=ENU=Specifies a discount amount that is deducted from the value in the Total Incl. VAT field. You can enter or change the amount manually.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=InvoiceDiscountAmount;
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetInvoiceDiscAmountWithVATAndCurrencyCaption(FIELDCAPTION("Inv. Discount Amount"),Currency.Code);
                Editable=InvDiscAmountEditable;
                OnValidate=BEGIN
                             ValidateInvoiceDiscountAmount;
                           END;

                ImplicitType=Decimal }

    { 29  ;3   ;Field     ;
                Name=Invoice Disc. Pct.;
                CaptionML=ENU=Invoice Discount %;
                ToolTipML=ENU=Specifies a discount percentage that is granted if criteria that you have set up for the customer are met.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:2;
                SourceExpr=InvoiceDiscountPct;
                Editable=InvDiscAmountEditable;
                OnValidate=BEGIN
                             InvoiceDiscountAmount := ROUND(TotalSalesLine."Line Amount" * InvoiceDiscountPct / 100,Currency."Amount Rounding Precision");
                             ValidateInvoiceDiscountAmount;
                           END;

                ImplicitType=Decimal }

    { 15  ;2   ;Group     ;
                Name=Group15;
                GroupType=Group }

    { 13  ;3   ;Field     ;
                Name=Total Amount Excl. VAT;
                DrillDown=false;
                CaptionML=ENU=Total Amount Excl. VAT;
                ToolTipML=ENU=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalSalesLine.Amount;
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetTotalExclVATCaption(Currency.Code);
                Editable=FALSE }

    { 11  ;3   ;Field     ;
                Name=Total VAT Amount;
                CaptionML=ENU=Total VAT;
                ToolTipML=ENU=Specifies the sum of VAT amounts on all lines in the document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetTotalVATCaption(Currency.Code);
                Editable=FALSE;
                ImplicitType=Decimal }

    { 9   ;3   ;Field     ;
                Name=Total Amount Incl. VAT;
                CaptionML=ENU=Total Amount Incl. VAT;
                ToolTipML=ENU=Specifies the sum of the value in the Line Amount Incl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalSalesLine."Amount Including VAT";
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetTotalInclVATCaption(Currency.Code);
                Editable=FALSE }

  }
  CODE
  {
    VAR
      TotalSalesHeader@1014 : Record "Sales Header";
      TotalSalesLine@1013 : Record "Sales Line";
      Currency@1024 : Record Currency;
      SalesSetup@1010 : Record "Sales & Receivables Setup";
      ApplicationAreaSetup@1008 : Record "Application Area Setup";
      TempOptionLookupBuffer@1018 : TEMPORARY Record "Option Lookup Buffer";
      TransferExtendedText@1003 : Codeunit "Transfer Extended Text";
      SalesPriceCalcMgt@1005 : Codeunit "Sales Price Calc. Mgt.";
      ItemAvailFormsMgt@1001 : Codeunit "Item Availability Forms Mgt";
      SalesCalcDiscByType@1015 : Codeunit "Sales - Calc Discount By Type";
      DocumentTotals@1016 : Codeunit "Document Totals";
      VATAmount@1017 : Decimal;
      InvoiceDiscountAmount@1009 : Decimal;
      InvoiceDiscountPct@1023 : Decimal;
      ShortcutDimCode@1004 : ARRAY [8] OF Code[20];
      UpdateAllowedVar@1002 : Boolean;
      Text000@1006 : TextConst 'ENU=Unable to run this function while in View mode.';
      LocationCodeVisible@1007 : Boolean;
      InvDiscAmountEditable@1012 : Boolean;
      IsCommentLine@1000 : Boolean;
      UnitofMeasureCodeIsChangeable@1011 : Boolean;
      IsFoundation@1020 : Boolean;
      ItemChargeStyleExpression@1022 : Text;
      TypeAsText@1098 : Text[30];

    [External]
    PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Disc. (Yes/No)",Rec);
    END;

    LOCAL PROCEDURE ValidateInvoiceDiscountAmount@22();
    VAR
      SalesHeader@1000 : Record "Sales Header";
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      SalesCalcDiscByType.ApplyInvDiscBasedOnAmt(InvoiceDiscountAmount,SalesHeader);
      CurrPage.UPDATE(false);
    END;

    [External]
    PROCEDURE CalcInvDisc@8();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Calc. Discount",Rec);
    END;

    [External]
    PROCEDURE ExplodeBOM@3();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Explode BOM",Rec);
    END;

    [External]
    PROCEDURE GetShipment@4();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Get Shipment",Rec);
    END;

    [External]
    PROCEDURE InsertExtendedText@7(Unconditionally@1000 : Boolean);
    BEGIN
      if TransferExtendedText.SalesCheckIfAnyExtText(Rec,Unconditionally) then begin
        CurrPage.SAVERECORD;
        COMMIT;
        TransferExtendedText.InsertSalesExtText(Rec);
      end;
      if TransferExtendedText.MakeUpdate then
        UpdatePage(true);
    END;

    [External]
    PROCEDURE UpdatePage@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    [Internal]
    PROCEDURE ShowPrices@15();
    BEGIN
      TotalSalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLinePrice(TotalSalesHeader,Rec);
    END;

    [External]
    PROCEDURE ShowLineDisc@16();
    BEGIN
      TotalSalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLineLineDisc(TotalSalesHeader,Rec);
    END;

    [External]
    PROCEDURE SetUpdateAllowed@5(UpdateAllowed@1000 : Boolean);
    BEGIN
      UpdateAllowedVar := UpdateAllowed;
    END;

    [External]
    PROCEDURE UpdateAllowed@20() : Boolean;
    BEGIN
      if UpdateAllowedVar = false then begin
        MESSAGE(Text000);
        exit(false);
      end;
      exit(true);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(false);

      if (Type = Type::"Charge (Item)") and ("No." <> xRec."No.") and (xRec."No." <> '') then
        CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE UpdateEditableOnRow@11();
    VAR
      SalesLine@1000 : Record "Sales Line";
    BEGIN
      IsCommentLine := not HasTypeToFillMandatotyFields;
      if not IsCommentLine then
        UnitofMeasureCodeIsChangeable := CanEditUnitOfMeasureCode
      else
        UnitofMeasureCodeIsChangeable := false;

      if TotalSalesHeader."No." <> '' then begin
        SalesLine.SETRANGE("Document No.",TotalSalesHeader."No.");
        SalesLine.SETRANGE("Document Type",TotalSalesHeader."Document Type");
        if not SalesLine.ISEMPTY then
          InvDiscAmountEditable :=
            SalesCalcDiscByType.InvoiceDiscIsAllowed(TotalSalesHeader."Invoice Disc. Code") and CurrPage.EDITABLE;
      end;
    END;

    LOCAL PROCEDURE ValidateAutoReserve@19032465();
    BEGIN
      if Reserve = Reserve::Always then begin
        CurrPage.SAVERECORD;
        AutoReserve;
      end;
    END;

    LOCAL PROCEDURE GetTotalSalesHeader@13();
    BEGIN
      if not TotalSalesHeader.GET("Document Type","Document No.") then
        CLEAR(TotalSalesHeader);
      if Currency.Code <> TotalSalesHeader."Currency Code" then
        if not Currency.GET(TotalSalesHeader."Currency Code") then begin
          CLEAR(Currency);
          Currency.InitRoundingPrecision;
        end
    END;

    LOCAL PROCEDURE CalculateTotals@6();
    BEGIN
      GetTotalSalesHeader;
      TotalSalesHeader.CALCFIELDS("Recalculate Invoice Disc.");

      if SalesSetup."Calc. Inv. Discount" and ("Document No." <> '') and (TotalSalesHeader."Customer Posting Group" <> '') and
         TotalSalesHeader."Recalculate Invoice Disc."
      then
        if FIND then
          CalcInvDisc;

      DocumentTotals.CalculateSalesTotals(TotalSalesLine,VATAmount,Rec);
      InvoiceDiscountAmount := TotalSalesLine."Inv. Discount Amount";
      InvoiceDiscountPct := SalesCalcDiscByType.GetCustInvoiceDiscountPct(Rec);
    END;

    LOCAL PROCEDURE RedistributeTotalsOnAfterValidate@2();
    BEGIN
      CurrPage.SAVERECORD;

      TotalSalesHeader.GET("Document Type","Document No.");
      DocumentTotals.SalesRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalSalesLine);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ValidateSaveShortcutDimCode@9(FieldNumber@1001 : Integer;VAR ShortcutDimCode@1000 : Code[20]);
    BEGIN
      ValidateShortcutDimCode(FieldNumber,ShortcutDimCode);
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE UpdateTypeText@18();
    VAR
      RecRef@1000 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      TypeAsText := TempOptionLookupBuffer.FormatOption(RecRef.FIELD(FIELDNO(Type)));
    END;

    LOCAL PROCEDURE SetItemChargeFieldsStyle@24();
    BEGIN
      ItemChargeStyleExpression := '';
      if AssignedItemCharge then
        ItemChargeStyleExpression := 'Unfavorable';
    END;

    BEGIN
    END.
  }
}

