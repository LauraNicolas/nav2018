OBJECT Page 950 Time Sheet
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Time Sheet;
    SaveValues=true;
    SourceTable="Time Sheet Line";
    DataCaptionFields="Time Sheet No.";
    PageType=Worksheet;
    AutoSplitKey=true;
    RefreshOnActivate=true;
    PromotedActionCategoriesML=ENU=New,Process,Report,Navigate,Lines;
    OnOpenPage=BEGIN
                 if "Time Sheet No." <> '' then
                   CurrTimeSheetNo := "Time Sheet No."
                 else
                   CurrTimeSheetNo := TimeSheetHeader.FindLastTimeSheetNo(TimeSheetHeader.FIELDNO("Owner User ID"));

                 TimeSheetMgt.SetTimeSheetNo(CurrTimeSheetNo,Rec);
                 UpdateControls;
               END;

    OnAfterGetRecord=BEGIN
                       AfterGetCurrentRecord;
                     END;

    OnNewRecord=BEGIN
                  AfterGetCurrentRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 34      ;1   ;ActionGroup;
                      Name=&Time Sheet;
                      CaptionML=ENU=&Time Sheet;
                      Image=Timesheet }
      { 7       ;2   ;Action    ;
                      Name=PreviousPeriod;
                      ShortCutKey=Ctrl+PgUp;
                      CaptionML=ENU=&Previous Period;
                      ToolTipML=ENU=Show the information based on the previous period. If you set the View by field to Day, the date filter changes to the day before.;
                      ApplicationArea=#Jobs;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PreviousSet;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 FindTimeSheet(SetWanted::Previous);
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=NextPeriod;
                      ShortCutKey=Ctrl+PgDn;
                      CaptionML=ENU=&Next Period;
                      ToolTipML=ENU=View information for the next period.;
                      ApplicationArea=#Jobs;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=NextSet;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 FindTimeSheet(SetWanted::Next);
                               END;
                                }
      { 22      ;1   ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 24      ;2   ;Action    ;
                      Name=Time Sheet Allocation;
                      CaptionML=ENU=Time Sheet Allocation;
                      ToolTipML=ENU=Allocate posted hours among days of the week on a time sheet.;
                      ApplicationArea=#Jobs;
                      Image=Allocate;
                      OnAction=BEGIN
                                 TimeAllocation;
                               END;
                                }
      { 37      ;2   ;Action    ;
                      Name=Activity &Details;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Activity &Details;
                      ToolTipML=ENU=View the quantity of hours for each time sheet status.;
                      ApplicationArea=#Jobs;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=View;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 ShowLineDetails(false);
                               END;
                                }
      { 38      ;1   ;ActionGroup;
                      Name=Comments;
                      CaptionML=ENU=Co&mments;
                      Image=ViewComments }
      { 39      ;2   ;Action    ;
                      Name=TimeSheetComments;
                      CaptionML=ENU=&Time Sheet Comments;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Time Sheet Comment Sheet";
                      RunPageLink="No."=FIELD("Time Sheet No."),
                                  "Time Sheet Line No."=CONST(0);
                      Promoted=true;
                      Image=ViewComments;
                      PromotedCategory=Category5 }
      { 40      ;2   ;Action    ;
                      Name=LineComments;
                      CaptionML=ENU=&Line Comments;
                      ToolTipML=ENU=View or create comments.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Time Sheet Comment Sheet";
                      RunPageLink="No."=FIELD("Time Sheet No."),
                                  "Time Sheet Line No."=FIELD("Line No.");
                      Promoted=true;
                      Image=ViewComments;
                      PromotedCategory=Category5;
                      Scope=Repeater }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 33      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 35      ;2   ;Action    ;
                      Name=Submit;
                      ShortCutKey=F9;
                      CaptionML=ENU=&Submit;
                      ToolTipML=ENU=Submit the time sheet for approval.;
                      ApplicationArea=#Jobs;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Submit;
                               END;
                                }
      { 46      ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=ENU=&Reopen;
                      ToolTipML=ENU=Reopen the time sheet, for example, after it has been rejected. The approver of a time sheet has permission to approve, reject, or reopen a time sheet. The approver can also submit a time sheet for approval.;
                      ApplicationArea=#Jobs;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Reopen;
                               END;
                                }
      { 28      ;2   ;Separator ;
                      Name=Separator28 }
      { 30      ;2   ;Action    ;
                      Name=CopyLinesFromPrevTS;
                      CaptionML=ENU=&Copy lines from previous time sheet;
                      ToolTipML=ENU=Copy information from the previous time sheet, such as type and description, and then modify the lines. If a line is related to a job, the job number is copied.;
                      ApplicationArea=#Jobs;
                      Promoted=true;
                      Image=Copy;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 QtyToBeCopied@1001 : Integer;
                               BEGIN
                                 QtyToBeCopied := TimeSheetMgt.CalcPrevTimeSheetLines(TimeSheetHeader);
                                 if QtyToBeCopied = 0 then
                                   MESSAGE(Text004)
                                 else
                                   if CONFIRM(Text009,true,QtyToBeCopied) then
                                     TimeSheetMgt.CopyPrevTimeSheetLines(TimeSheetHeader);
                               END;
                                }
      { 31      ;2   ;Action    ;
                      Name=CreateLinesFromJobPlanning;
                      CaptionML=ENU=Create lines from &job planning;
                      ToolTipML=ENU=Create time sheet lines that are based on job planning lines.;
                      ApplicationArea=#Jobs;
                      Promoted=true;
                      Image=CreateLinesFromJob;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 QtyToBeCreated@1001 : Integer;
                               BEGIN
                                 QtyToBeCreated := TimeSheetMgt.CalcLinesFromJobPlanning(TimeSheetHeader);
                                 if QtyToBeCreated = 0 then
                                   MESSAGE(Text003)
                                 else
                                   if CONFIRM(Text010,true,QtyToBeCreated) then
                                     TimeSheetMgt.CreateLinesFromJobPlanning(TimeSheetHeader);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 26  ;1   ;Group     ;
                Name=Group26;
                GroupType=Group }

    { 10  ;2   ;Field     ;
                Name=CurrTimeSheetNo;
                CaptionML=ENU=Time Sheet No;
                ToolTipML=ENU=Specifies the number of the time sheet.;
                ApplicationArea=#Jobs;
                SourceExpr=CurrTimeSheetNo;
                OnValidate=BEGIN
                             TimeSheetHeader.RESET;
                             TimeSheetMgt.FilterTimeSheets(TimeSheetHeader,TimeSheetHeader.FIELDNO("Owner User ID"));
                             TimeSheetMgt.CheckTimeSheetNo(TimeSheetHeader,CurrTimeSheetNo);
                             CurrPage.SAVERECORD;
                             TimeSheetMgt.SetTimeSheetNo(CurrTimeSheetNo,Rec);
                             UpdateControls;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           TimeSheetMgt.LookupOwnerTimeSheet(CurrTimeSheetNo,Rec,TimeSheetHeader);
                           UpdateControls;
                         END;

                ImplicitType=Code20 }

    { 14  ;2   ;Field     ;
                Name=ResourceNo;
                CaptionML=ENU=Resource No.;
                ToolTipML=ENU=Specifies a number for the resource.;
                ApplicationArea=#Jobs;
                SourceExpr=TimeSheetHeader."Resource No.";
                Editable=false }

    { 16  ;2   ;Field     ;
                Name=ApproverUserID;
                CaptionML=ENU=Approver User ID;
                ToolTipML=ENU=Specifies the ID of the time sheet approver.;
                ApplicationArea=#Jobs;
                SourceExpr=TimeSheetHeader."Approver User ID";
                Visible=FALSE;
                Editable=FALSE }

    { 3   ;2   ;Field     ;
                Name=StartingDate;
                CaptionML=ENU=Starting Date;
                ToolTipML=ENU=Specifies the date from which the report or batch job processes information.;
                ApplicationArea=#Jobs;
                SourceExpr=TimeSheetHeader."Starting Date";
                Editable=FALSE }

    { 5   ;2   ;Field     ;
                Name=EndingDate;
                CaptionML=ENU=Ending Date;
                ToolTipML=ENU=Specifies the date to which the report or batch job processes information.;
                ApplicationArea=#Jobs;
                SourceExpr=TimeSheetHeader."Ending Date";
                Editable=FALSE }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 13  ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the type of time sheet line.;
                ApplicationArea=#Jobs;
                SourceExpr=Type;
                Editable=AllowEdit;
                OnValidate=BEGIN
                             AfterGetCurrentRecord;
                             CurrPage.UPDATE(true);
                           END;

                ImplicitType=Option }

    { 23  ;2   ;Field     ;
                Name=Job No.;
                ToolTipML=ENU=Specifies the number for the job that is associated with the time sheet line.;
                ApplicationArea=#Jobs;
                SourceExpr="Job No.";
                Visible=FALSE;
                Editable=AllowEdit;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                           END;

                ImplicitType=Code20 }

    { 29  ;2   ;Field     ;
                Name=Job Task No.;
                ToolTipML=ENU=Specifies the number of the related job task.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Task No.";
                Visible=FALSE;
                Editable=AllowEdit;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                           END;

                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the time sheet line.;
                ApplicationArea=#Jobs;
                SourceExpr=Description;
                Editable=AllowEdit;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                           END;

                OnAssistEdit=BEGIN
                               if "Line No." = 0 then
                                 exit;

                               ShowLineDetails(false);
                               CurrPage.UPDATE(false);
                             END;

                ImplicitType=Text50 }

    { 6   ;2   ;Field     ;
                Name=Cause of Absence Code;
                ToolTipML=ENU=Specifies a list of standard absence codes, from which you may select one.;
                ApplicationArea=#Jobs;
                SourceExpr="Cause of Absence Code";
                Visible=FALSE;
                Editable=AllowEdit;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                           END;

                ImplicitType=Code10 }

    { 20  ;2   ;Field     ;
                Name=Chargeable;
                ToolTipML=ENU=Specifies if the usage that you are posting is chargeable.;
                ApplicationArea=#Jobs;
                SourceExpr=Chargeable;
                Visible=FALSE;
                Editable=AllowEdit;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                           END;

                ImplicitType=Boolean }

    { 2   ;2   ;Field     ;
                Name=Work Type Code;
                ToolTipML=ENU=Specifies which work type the resource applies to. Prices are updated based on this entry.;
                ApplicationArea=#Jobs;
                SourceExpr="Work Type Code";
                Visible=FALSE;
                Editable=AllowEdit;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                           END;

                ImplicitType=Code10 }

    { 36  ;2   ;Field     ;
                Name=Service Order No.;
                ToolTipML=ENU=Specifies the service order number that is associated with the time sheet line.;
                ApplicationArea=#Jobs;
                SourceExpr="Service Order No.";
                Visible=FALSE;
                Editable=AllowEdit;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                           END;

                ImplicitType=Code20 }

    { 18  ;2   ;Field     ;
                Name=Assembly Order No.;
                ToolTipML=ENU=Specifies the assembly order number that is associated with the time sheet line.;
                ApplicationArea=#Advanced;
                SourceExpr="Assembly Order No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 11  ;2   ;Field     ;
                Name=Field1;
                Width=6;
                ApplicationArea=#Jobs;
                DecimalPlaces=0:2;
                BlankZero=true;
                SourceExpr=CellData[1];
                CaptionClass='3,' + ColumnCaption[1];
                Editable=AllowEdit;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             ValidateQuantity(1);
                             CellDataOnAfterValidate;
                           END;
                            }

    { 15  ;2   ;Field     ;
                Name=Field2;
                Width=6;
                ApplicationArea=#Jobs;
                DecimalPlaces=0:2;
                BlankZero=true;
                SourceExpr=CellData[2];
                CaptionClass='3,' + ColumnCaption[2];
                Editable=AllowEdit;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             ValidateQuantity(2);
                             CellDataOnAfterValidate;
                           END;
                            }

    { 17  ;2   ;Field     ;
                Name=Field3;
                Width=6;
                ApplicationArea=#Jobs;
                DecimalPlaces=0:2;
                BlankZero=true;
                SourceExpr=CellData[3];
                CaptionClass='3,' + ColumnCaption[3];
                Editable=AllowEdit;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             ValidateQuantity(3);
                             CellDataOnAfterValidate;
                           END;
                            }

    { 19  ;2   ;Field     ;
                Name=Field4;
                Width=6;
                ApplicationArea=#Jobs;
                DecimalPlaces=0:2;
                BlankZero=true;
                SourceExpr=CellData[4];
                CaptionClass='3,' + ColumnCaption[4];
                Editable=AllowEdit;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             ValidateQuantity(4);
                             CellDataOnAfterValidate;
                           END;
                            }

    { 21  ;2   ;Field     ;
                Name=Field5;
                Width=6;
                ApplicationArea=#Jobs;
                DecimalPlaces=0:2;
                BlankZero=true;
                SourceExpr=CellData[5];
                CaptionClass='3,' + ColumnCaption[5];
                Editable=AllowEdit;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             ValidateQuantity(5);
                             CellDataOnAfterValidate;
                           END;
                            }

    { 25  ;2   ;Field     ;
                Name=Field6;
                Width=6;
                ApplicationArea=#Jobs;
                BlankZero=true;
                SourceExpr=CellData[6];
                CaptionClass='3,' + ColumnCaption[6];
                Visible=FALSE;
                Editable=AllowEdit;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             ValidateQuantity(6);
                             CellDataOnAfterValidate;
                           END;
                            }

    { 27  ;2   ;Field     ;
                Name=Field7;
                Width=6;
                ApplicationArea=#Jobs;
                BlankZero=true;
                SourceExpr=CellData[7];
                CaptionClass='3,' + ColumnCaption[7];
                Visible=FALSE;
                Editable=AllowEdit;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             ValidateQuantity(7);
                             CellDataOnAfterValidate;
                           END;
                            }

    { 48  ;2   ;Field     ;
                Name=Total Quantity;
                DrillDown=false;
                CaptionML=ENU=Total;
                ToolTipML=ENU=Specifies the total number of hours that have been entered on a time sheet.;
                ApplicationArea=#Jobs;
                SourceExpr="Total Quantity";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 8   ;2   ;Field     ;
                Name=Status;
                ToolTipML=ENU=Specifies information about the status of a time sheet line.;
                ApplicationArea=#Jobs;
                SourceExpr=Status;
                ImplicitType=Option }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 12  ;1   ;Part      ;
                Name=TimeSheetStatusFactBox;
                CaptionML=ENU=Time Sheet Status;
                ApplicationArea=#Jobs;
                PagePartID="Time Sheet Status FactBox";
                PartType=Page }

    { 1905767507;1;Part   ;
                Name=ActualSchedSummaryFactBox;
                CaptionML=ENU=Actual/Budgeted Summary;
                ApplicationArea=#Jobs;
                PagePartID="Actual/Sched. Summary FactBox";
                Visible=TRUE;
                PartType=Page }

    { 32  ;1   ;Part      ;
                Name=ActivityDetailsFactBox;
                CaptionML=ENU=Activity Details;
                ApplicationArea=#Jobs;
                SubPageLink="Time Sheet No."=FIELD("Time Sheet No."),
                            "Line No."=FIELD("Line No.");
                PagePartID="Activity Details FactBox";
                PartType=Page }

  }
  CODE
  {
    VAR
      TimeSheetHeader@1006 : Record "Time Sheet Header";
      TimeSheetDetail@1003 : Record "Time Sheet Detail";
      ColumnRecords@1004 : ARRAY [32] OF Record Date;
      TimeSheetMgt@1007 : Codeunit "Time Sheet Management";
      TimeSheetApprovalMgt@1005 : Codeunit "Time Sheet Approval Management";
      NoOfColumns@1002 : Integer;
      CellData@1001 : ARRAY [32] OF Decimal;
      ColumnCaption@1000 : ARRAY [32] OF Text[1024];
      CurrTimeSheetNo@1008 : Code[20];
      SetWanted@1009 : 'Previous,Next';
      Text001@1010 : TextConst 'ENU=The type of time sheet line cannot be empty.';
      Text003@1014 : TextConst 'ENU=Could not find job planning lines.';
      Text004@1015 : TextConst 'ENU=There are no time sheet lines to copy.';
      Text009@1018 : TextConst 'ENU=Do you want to copy lines from the previous time sheet (%1)?';
      Text010@1019 : TextConst 'ENU=Do you want to create lines from job planning (%1)?';
      AllowEdit@1011 : Boolean;

    [Internal]
    PROCEDURE SetColumns@11();
    VAR
      Calendar@1003 : Record Date;
    BEGIN
      CLEAR(ColumnCaption);
      CLEAR(ColumnRecords);
      CLEAR(Calendar);
      CLEAR(NoOfColumns);

      TimeSheetHeader.GET(CurrTimeSheetNo);
      Calendar.SETRANGE("Period Type",Calendar."Period Type"::Date);
      Calendar.SETRANGE("Period Start",TimeSheetHeader."Starting Date",TimeSheetHeader."Ending Date");
      if Calendar.FINDSET then
        repeat
          NoOfColumns += 1;
          ColumnRecords[NoOfColumns]."Period Start" := Calendar."Period Start";
          ColumnCaption[NoOfColumns] := TimeSheetMgt.FormatDate(Calendar."Period Start",1);
        until Calendar.NEXT = 0;
    END;

    LOCAL PROCEDURE AfterGetCurrentRecord@8();
    VAR
      i@1000 : Integer;
    BEGIN
      i := 0;
      while i < NoOfColumns do begin
        i := i + 1;
        if ("Line No." <> 0) and TimeSheetDetail.GET(
             "Time Sheet No.",
             "Line No.",
             ColumnRecords[i]."Period Start")
        then
          CellData[i] := TimeSheetDetail.Quantity
        else
          CellData[i] := 0;
      end;
      UpdateFactBoxes;
      AllowEdit := Status in [Status::Open,Status::Rejected];
    END;

    LOCAL PROCEDURE ValidateQuantity@1(ColumnNo@1000 : Integer);
    BEGIN
      if (CellData[ColumnNo] <> 0) and (Type = Type::" ") then
        ERROR(Text001);

      if TimeSheetDetail.GET(
           "Time Sheet No.",
           "Line No.",
           ColumnRecords[ColumnNo]."Period Start")
      then begin
        if CellData[ColumnNo] <> TimeSheetDetail.Quantity then
          TestTimeSheetLineStatus;

        if CellData[ColumnNo] = 0 then
          TimeSheetDetail.DELETE
        else begin
          TimeSheetDetail.Quantity := CellData[ColumnNo];
          TimeSheetDetail.MODIFY(true);
        end;
      end else
        if CellData[ColumnNo] <> 0 then begin
          TestTimeSheetLineStatus;

          TimeSheetDetail.INIT;
          TimeSheetDetail.CopyFromTimeSheetLine(Rec);
          TimeSheetDetail.Date := ColumnRecords[ColumnNo]."Period Start";
          TimeSheetDetail.Quantity := CellData[ColumnNo];
          TimeSheetDetail.INSERT(true);
        end;
    END;

    LOCAL PROCEDURE Process@4(Action@1000 : '"Submit Selected","Submit All","Reopen Selected","Reopen All"');
    VAR
      TimeSheetLine@1001 : Record "Time Sheet Line";
      ActionType@1002 : 'Submit,Reopen';
    BEGIN
      CurrPage.SAVERECORD;
      case Action of
        Action::"Submit All":
          FilterAllLines(TimeSheetLine,ActionType::Submit);
        Action::"Reopen All":
          FilterAllLines(TimeSheetLine,ActionType::Reopen);
        else
          CurrPage.SETSELECTIONFILTER(TimeSheetLine);
      end;
      if TimeSheetLine.FINDSET then
        repeat
          case Action of
            Action::"Submit Selected",
            Action::"Submit All":
              TimeSheetApprovalMgt.Submit(TimeSheetLine);
            Action::"Reopen Selected",
            Action::"Reopen All":
              TimeSheetApprovalMgt.ReopenSubmitted(TimeSheetLine);
          end;
        until TimeSheetLine.NEXT = 0;
      CurrPage.UPDATE(true);
    END;

    LOCAL PROCEDURE CellDataOnAfterValidate@6();
    BEGIN
      UpdateFactBoxes;
      CALCFIELDS("Total Quantity");
    END;

    LOCAL PROCEDURE FindTimeSheet@7(Which@1000 : Option);
    BEGIN
      CurrTimeSheetNo := TimeSheetMgt.FindTimeSheet(TimeSheetHeader,Which);
      TimeSheetMgt.SetTimeSheetNo(CurrTimeSheetNo,Rec);
      UpdateControls;
    END;

    LOCAL PROCEDURE UpdateFactBoxes@9();
    BEGIN
      CurrPage.ActualSchedSummaryFactBox.PAGE.UpdateData(TimeSheetHeader);
      CurrPage.TimeSheetStatusFactBox.PAGE.UpdateData(TimeSheetHeader);
      if "Line No." = 0 then
        CurrPage.ActivityDetailsFactBox.PAGE.SetEmptyLine;
    END;

    LOCAL PROCEDURE UpdateControls@12();
    BEGIN
      SetColumns;
      UpdateFactBoxes;
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE TestTimeSheetLineStatus@10();
    VAR
      TimeSheetLine@1000 : Record "Time Sheet Line";
    BEGIN
      TimeSheetLine.GET("Time Sheet No.","Line No.");
      TimeSheetLine.TestStatus;
    END;

    LOCAL PROCEDURE Submit@2();
    VAR
      Action@1001 : '"Submit Selected","Submit All","Reopen Selected","Reopen All"';
      ActionType@1002 : 'Submit,Reopen';
    BEGIN
      case ShowDialog(ActionType::Submit) of
        1:
          Process(Action::"Submit All");
        2:
          Process(Action::"Submit Selected");
      end;
    END;

    LOCAL PROCEDURE Reopen@14();
    VAR
      ActionType@1002 : 'Submit,Reopen';
      Action@1001 : '"Submit Selected","Submit All","Reopen Selected","Reopen All"';
    BEGIN
      case ShowDialog(ActionType::Reopen) of
        1:
          Process(Action::"Reopen All");
        2:
          Process(Action::"Reopen Selected");
      end;
    END;

    LOCAL PROCEDURE TimeAllocation@3();
    VAR
      TimeSheetAllocation@1000 : Page "Time Sheet Allocation";
      AllocatedQty@1002 : ARRAY [7] OF Decimal;
    BEGIN
      TESTFIELD(Posted,true);
      CALCFIELDS("Total Quantity");
      TimeSheetAllocation.InitParameters("Time Sheet No.","Line No.","Total Quantity");
      if TimeSheetAllocation.RUNMODAL = ACTION::OK then begin
        TimeSheetAllocation.GetAllocation(AllocatedQty);
        TimeSheetMgt.UpdateTimeAllocation(Rec,AllocatedQty);
      end;
    END;

    LOCAL PROCEDURE GetDialogText@16(ActionType@1000 : 'Submit,Reopen') : Text[100];
    VAR
      TimeSheetLine@1003 : Record "Time Sheet Line";
    BEGIN
      FilterAllLines(TimeSheetLine,ActionType);
      exit(TimeSheetApprovalMgt.GetTimeSheetDialogText(ActionType,TimeSheetLine.COUNT));
    END;

    LOCAL PROCEDURE FilterAllLines@22(VAR TimeSheetLine@1000 : Record "Time Sheet Line";ActionType@1001 : 'Submit,Reopen');
    BEGIN
      TimeSheetLine.SETRANGE("Time Sheet No.",CurrTimeSheetNo);
      TimeSheetLine.COPYFILTERS(Rec);
      TimeSheetLine.FILTERGROUP(2);
      TimeSheetLine.SETFILTER(Type,'<>%1',TimeSheetLine.Type::" ");
      TimeSheetLine.FILTERGROUP(0);
      case ActionType of
        ActionType::Submit:
          TimeSheetLine.SETFILTER(Status,'%1|%2',TimeSheetLine.Status::Open,TimeSheetLine.Status::Rejected);
        ActionType::Reopen:
          TimeSheetLine.SETRANGE(Status,TimeSheetLine.Status::Submitted);
      end;
    END;

    LOCAL PROCEDURE ShowDialog@5(ActionType@1001 : 'Submit,Reopen') : Integer;
    BEGIN
      exit(STRMENU(GetDialogText(ActionType),1,TimeSheetApprovalMgt.GetTimeSheetDialogInstruction(ActionType)));
    END;

    BEGIN
    END.
  }
}

