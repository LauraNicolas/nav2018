OBJECT Codeunit 9090 Postcode Service Manager
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      TechnicalErr@1000 : TextConst 'ENU=A general technical error occurred while contacting remote service.';
      ServiceNotConfiguredErr@1002 : TextConst 'ENU=Postcode service is not configured.';
      DisabledTok@1001 : TextConst 'ENU=Disabled';

    PROCEDURE DiscoverPostcodeServices@1002(VAR TempServiceListNameValueBuffer@1000 : TEMPORARY Record "Name/Value Buffer");
    BEGIN
      OnDiscoverPostcodeServices(TempServiceListNameValueBuffer);
    END;

    PROCEDURE ShowConfigurationPage@1011(ServiceKey@1000 : Text;VAR IsSuccessful@1001 : Boolean);
    BEGIN
      OnShowConfigurationPage(ServiceKey,IsSuccessful);
    END;

    [External]
    PROCEDURE IsServiceConfigured@16(ServiceKey@1000 : Text;VAR IsConfigured@1001 : Boolean);
    BEGIN
      OnCheckIsServiceConfigured(ServiceKey,IsConfigured);
    END;

    [External]
    PROCEDURE GetAddressList@1008(TempEnteredAutocompleteAddress@1000 : TEMPORARY Record "Autocomplete Address";VAR TempAddressListNameValueBuffer@1002 : TEMPORARY Record "Name/Value Buffer") : Boolean;
    VAR
      IsSuccessful@1004 : Boolean;
      ErrorMsg@1003 : Text;
    BEGIN
      IsSuccessful := true;
      if not TryGetAddressList(GetActiveService,TempEnteredAutocompleteAddress,TempAddressListNameValueBuffer,IsSuccessful,ErrorMsg) then begin
        IsSuccessful := false;
        ErrorMsg := TechnicalErr;
      end;

      HandleErrorsIfNeccessary(IsSuccessful,ErrorMsg);
      exit(IsSuccessful);
    END;

    [External]
    PROCEDURE GetAddress@1005(TempSelectedAddressNameValueBuffer@1001 : TEMPORARY Record "Name/Value Buffer";VAR TempEnteredAutocompleteAddress@1002 : TEMPORARY Record "Autocomplete Address";VAR TempAutocompleteAddress@1000 : TEMPORARY Record "Autocomplete Address") : Boolean;
    VAR
      IsSuccessful@1005 : Boolean;
      ErrorMsg@1004 : Text;
    BEGIN
      IsSuccessful := true;
      if not TryGetAddress(GetActiveService,TempEnteredAutocompleteAddress,
           TempSelectedAddressNameValueBuffer,TempAutocompleteAddress,IsSuccessful,ErrorMsg)
      then begin
        IsSuccessful := false;
        ErrorMsg := TechnicalErr;
      end;

      HandleErrorsIfNeccessary(IsSuccessful,ErrorMsg);
      exit(IsSuccessful);
    END;

    PROCEDURE SetSelectedService@9(ServiceKey@1000 : Text);
    VAR
      PostcodeServiceConfig@1001 : Record "Postcode Service Config";
    BEGIN
      if not PostcodeServiceConfig.FINDFIRST then begin
        PostcodeServiceConfig.INIT;
        PostcodeServiceConfig.INSERT;
      end;

      PostcodeServiceConfig.SaveServiceKey(COPYSTR(ServiceKey,250));
      COMMIT;
    END;

    [External]
    PROCEDURE RegisterService@1001(VAR TempServiceListNameValueBuffer@1000 : TEMPORARY Record "Name/Value Buffer";ServiceIdentifier@1001 : Text[250];ServiceName@1002 : Text[250]);
    BEGIN
      InsertNameValueBuffer(TempServiceListNameValueBuffer,ServiceIdentifier,ServiceName);
    END;

    [External]
    PROCEDURE AddSelectionAddress@1009(VAR TempAddressListNameValueBuffer@1000 : TEMPORARY Record "Name/Value Buffer";Identifier@1001 : Text[250];DisplayString@1002 : Text[250]);
    BEGIN
      InsertNameValueBuffer(TempAddressListNameValueBuffer,Identifier,DisplayString);
    END;

    [External]
    PROCEDURE IsConfigured@1015() : Boolean;
    VAR
      PostcodeServiceConfig@1000 : Record "Postcode Service Config";
      IsSerConf@1001 : Boolean;
    BEGIN
      if not PostcodeServiceConfig.FINDFIRST then
        exit(false);

      if PostcodeServiceConfig.GetServiceKey = DisabledTok then
        exit(false);

      IsServiceConfigured(PostcodeServiceConfig.GetServiceKey,IsSerConf);
      exit(IsSerConf);
    END;

    [TryFunction]
    LOCAL PROCEDURE TryGetAddressList@1006(ServiceKey@1002 : Text;TempEnteredAutocompleteAddress@1001 : TEMPORARY Record "Autocomplete Address";VAR TempAddressListNameValueBuffer@1000 : TEMPORARY Record "Name/Value Buffer";VAR IsSuccessful@1003 : Boolean;VAR ErrorMSg@1004 : Text);
    BEGIN
      OnRetrieveAddressList(ServiceKey,TempEnteredAutocompleteAddress,TempAddressListNameValueBuffer,IsSuccessful,ErrorMSg);
    END;

    [TryFunction]
    LOCAL PROCEDURE TryGetAddress@1013(ServiceKey@1005 : Text;TempEnteredAutocompleteAddress@1004 : TEMPORARY Record "Autocomplete Address";TempSelectedAddressNameValueBuffer@1003 : TEMPORARY Record "Name/Value Buffer";VAR TempAutocompleteAddress@1002 : TEMPORARY Record "Autocomplete Address";VAR IsSuccessful@1001 : Boolean;VAR ErrorMsg@1000 : Text);
    BEGIN
      OnRetrieveAddress(ServiceKey,TempEnteredAutocompleteAddress,TempSelectedAddressNameValueBuffer,
        TempAutocompleteAddress,IsSuccessful,ErrorMsg);
    END;

    LOCAL PROCEDURE HandleErrorsIfNeccessary@1012(IsSuccessful@1001 : Boolean;ErrorMsg@1000 : Text);
    BEGIN
      if not IsSuccessful then
        MESSAGE(ErrorMsg);
    END;

    LOCAL PROCEDURE InsertNameValueBuffer@1010(VAR TempNameValueBuffer@1000 : TEMPORARY Record "Name/Value Buffer";Name@1001 : Text[250];Value@1002 : Text[250]);
    VAR
      LastId@1003 : Integer;
    BEGIN
      LastId := 0;
      if TempNameValueBuffer.FINDLAST then
        LastId := TempNameValueBuffer.ID;

      TempNameValueBuffer.INIT;
      TempNameValueBuffer.ID := LastId + 1;
      TempNameValueBuffer.Name := Name;
      TempNameValueBuffer.Value := Value;
      TempNameValueBuffer.INSERT;
    END;

    PROCEDURE GetActiveService@1021() : Text;
    VAR
      PostcodeServiceConfig@1000 : Record "Postcode Service Config";
    BEGIN
      if not PostcodeServiceConfig.FINDFIRST then
        ERROR(ServiceNotConfiguredErr);

      exit(PostcodeServiceConfig.GetServiceKey);
    END;

    [Integration]
    PROCEDURE OnDiscoverPostcodeServices@1000(VAR TempServiceListNameValueBuffer@1000 : TEMPORARY Record "Name/Value Buffer");
    BEGIN
      // Emit broadcast message to find all postcode service
    END;

    [Integration]
    PROCEDURE OnRetrieveAddressList@1007(ServiceKey@1000 : Text;TempEnteredAutocompleteAddress@1002 : TEMPORARY Record "Autocomplete Address";VAR TempAddressListNameValueBuffer@1003 : TEMPORARY Record "Name/Value Buffer";VAR IsSuccessful@1004 : Boolean;VAR ErrorMsg@1005 : Text);
    BEGIN
      // Retrieve the list of possible UK addresses or autocompletetion based on parameters
    END;

    [Integration]
    PROCEDURE OnRetrieveAddress@1003(ServiceKey@1000 : Text;TempEnteredAutocompleteAddress@1002 : TEMPORARY Record "Autocomplete Address";TempSelectedAddressNameValueBuffer@1003 : TEMPORARY Record "Name/Value Buffer";VAR TempAutocompleteAddress@1001 : TEMPORARY Record "Autocomplete Address";VAR IsSuccessful@1006 : Boolean;VAR ErrorMsg@1005 : Text);
    BEGIN
      // Retrieve specific address
    END;

    [Integration]
    PROCEDURE OnShowConfigurationPage@1004(ServiceKey@1000 : Text;VAR Successful@1001 : Boolean);
    BEGIN
      // Notify services to create their configuration records if necessary
    END;

    [Integration]
    PROCEDURE OnCheckIsServiceConfigured@13(ServiceKey@1000 : Text;VAR IsConfigured@1001 : Boolean);
    BEGIN
      // Retrieve information from service if it is configured
    END;

    BEGIN
    END.
  }
}

