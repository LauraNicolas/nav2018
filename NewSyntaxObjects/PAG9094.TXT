OBJECT Page 9094 Vendor Statistics FactBox
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Vendor Statistics;
    SourceTable=Vendor;
    PageType=CardPart;
    OnInit=BEGIN
             ShowVendorNo := true;
           END;

    OnFindRecord=BEGIN
                   TotalAmountLCY := 0;

                   exit(FIND(Which));
                 END;

    OnAfterGetRecord=BEGIN
                       FILTERGROUP(4);
                       DateFilterSet := GETFILTER("Date Filter") <> '';
                       SETAUTOCALCFIELDS("Balance (LCY)","Outstanding Orders (LCY)","Amt. Rcd. Not Invoiced (LCY)","Outstanding Invoices (LCY)");
                       TotalAmountLCY := "Balance (LCY)" + "Outstanding Orders (LCY)" + "Amt. Rcd. Not Invoiced (LCY)" + "Outstanding Invoices (LCY)";
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 13  ;1   ;Field     ;
                Name=No.;
                CaptionML=ENU=Vendor No.;
                ToolTipML=ENU=Specifies the number of the vendor. The field is either filled automatically from a defined number series, or you enter the number manually because you have enabled manual number entry in the number-series setup.;
                ApplicationArea=#All;
                SourceExpr="No.";
                Visible=ShowVendorNo;
                OnDrillDown=BEGIN
                              ShowDetails;
                            END;

                ImplicitType=Code20 }

    { 4   ;1   ;Field     ;
                Name=Balance (LCY);
                ToolTipML=ENU=Specifies the total value of your completed purchases from the vendor in the current fiscal year. It is calculated from amounts excluding VAT on all completed purchase invoices and credit memos.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Balance (LCY)";
                OnDrillDown=VAR
                              VendLedgEntry@1001 : Record "Vendor Ledger Entry";
                              DtldVendLedgEntry@1000 : Record "Detailed Vendor Ledg. Entry";
                            BEGIN
                              DtldVendLedgEntry.SETRANGE("Vendor No.","No.");
                              COPYFILTER("Global Dimension 1 Filter",DtldVendLedgEntry."Initial Entry Global Dim. 1");
                              COPYFILTER("Global Dimension 2 Filter",DtldVendLedgEntry."Initial Entry Global Dim. 2");
                              COPYFILTER("Currency Filter",DtldVendLedgEntry."Currency Code");
                              VendLedgEntry.DrillDownOnEntries(DtldVendLedgEntry);
                            END;

                ImplicitType=Decimal }

    { 5   ;1   ;Field     ;
                Name=Outstanding Orders (LCY);
                ToolTipML=ENU=Specifies the sum of outstanding orders (in LCY) to this vendor.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Outstanding Orders (LCY)";
                HideValue=DateFilterSet;
                ImplicitType=Decimal }

    { 6   ;1   ;Field     ;
                Name=Amt. Rcd. Not Invoiced (LCY);
                CaptionML=ENU=Amt. Rcd. Not Invd. (LCY);
                ToolTipML=ENU=Specifies the total invoice amount (in LCY) for the items you have received but not yet been invoiced for.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amt. Rcd. Not Invoiced (LCY)";
                HideValue=DateFilterSet;
                ImplicitType=Decimal }

    { 7   ;1   ;Field     ;
                Name=Outstanding Invoices (LCY);
                ToolTipML=ENU=Specifies the sum of the vendor's outstanding purchase invoices in LCY.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Outstanding Invoices (LCY)";
                HideValue=DateFilterSet;
                ImplicitType=Decimal }

    { 9   ;1   ;Field     ;
                Name=TotalAmountLCY;
                CaptionML=ENU=Total (LCY);
                ToolTipML=ENU=Specifies the payment amount that you owe the vendor for completed purchases plus purchases that are still ongoing.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalAmountLCY;
                AutoFormatType=1;
                HideValue=DateFilterSet;
                ImplicitType=Decimal }

    { 12  ;1   ;Field     ;
                Name=Balance Due (LCY);
                ApplicationArea=#Advanced;
                SourceExpr=CalcOverDueBalance;
                CaptionClass=FORMAT(STRSUBSTNO(Text000,FORMAT(WORKDATE)));
                OnDrillDown=VAR
                              VendLedgEntry@1001 : Record "Vendor Ledger Entry";
                              DtldVendLedgEntry@1000 : Record "Detailed Vendor Ledg. Entry";
                            BEGIN
                              DtldVendLedgEntry.SETFILTER("Vendor No.","No.");
                              COPYFILTER("Global Dimension 1 Filter",DtldVendLedgEntry."Initial Entry Global Dim. 1");
                              COPYFILTER("Global Dimension 2 Filter",DtldVendLedgEntry."Initial Entry Global Dim. 2");
                              COPYFILTER("Currency Filter",DtldVendLedgEntry."Currency Code");
                              VendLedgEntry.DrillDownOnOverdueEntries(DtldVendLedgEntry);
                            END;

                ImplicitType=Decimal }

    { 1   ;1   ;Field     ;
                Name=Invoiced Prepayment Amount (LCY);
                CaptionML=ENU=Invoiced Prepayment Amount (LCY);
                ToolTipML=ENU=Specifies your payments to the vendor, based on invoiced prepayments.;
                ApplicationArea=#Prepayments;
                SourceExpr=GetInvoicedPrepmtAmountLCY;
                HideValue=DateFilterSet;
                ImplicitType=Decimal }

  }
  CODE
  {
    VAR
      TotalAmountLCY@1014 : Decimal;
      Text000@1018 : TextConst 'ENU=Overdue Amounts (LCY) as of %1';
      ShowVendorNo@1000 : Boolean;
      DateFilterSet@1001 : Boolean;

    LOCAL PROCEDURE ShowDetails@1102601000();
    BEGIN
      PAGE.RUN(PAGE::"Vendor Card",Rec);
    END;

    [External]
    PROCEDURE SetVendorNoVisibility@2(Visible@1000 : Boolean);
    BEGIN
      ShowVendorNo := Visible;
    END;

    BEGIN
    END.
  }
}

