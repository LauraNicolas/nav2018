OBJECT Page 5734 Item Category Attributes
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Item Category Attributes;
    LinksAllowed=false;
    SourceTable="Item Attribute Value Selection";
    SourceTableView=SORTING("Inheritance Level","Attribute Name")
                    ORDER(Ascending);
    PageType=ListPart;
    SourceTableTemporary=true;
    RefreshOnActivate=true;
    OnClosePage=BEGIN
                  TempRecentlyItemAttributeValueMapping.DELETEALL;
                END;

    OnAfterGetRecord=BEGIN
                       UpdateProperties;
                     END;

    OnInsertRecord=VAR
                     TempItemAttributeValueToInsert@1000 : TEMPORARY Record "Item Attribute Value";
                     ItemAttributeValueMapping@1002 : Record "Item Attribute Value Mapping";
                     ItemAttributeManagement@1001 : Codeunit "Item Attribute Management";
                   BEGIN
                     if ItemCategoryCode <> '' then begin
                       ItemAttributeValueMapping."Table ID" := DATABASE::"Item Category";
                       ItemAttributeValueMapping."No." := ItemCategoryCode;
                       ItemAttributeValueMapping."Item Attribute ID" := "Attribute ID";
                       ItemAttributeValueMapping."Item Attribute Value ID" := GetAttributeValueID(TempItemAttributeValueToInsert);
                       ItemAttributeValueMapping.INSERT;
                       ItemAttributeManagement.InsertCategoryItemsBufferedAttributeValueMapping(
                         TempItemAttributeValueToInsert,TempRecentlyItemAttributeValueMapping,ItemCategoryCode);
                       InsertRecentlyAddedCategoryAttribute(ItemAttributeValueMapping);
                     end;
                   END;

    OnDeleteRecord=VAR
                     TempItemAttributeValueToDelete@1000 : TEMPORARY Record "Item Attribute Value";
                     ItemAttributeValue@1001 : Record "Item Attribute Value";
                     ItemAttributeValueMapping@1003 : Record "Item Attribute Value Mapping";
                     ItemAttributeManagement@1002 : Codeunit "Item Attribute Management";
                   BEGIN
                     if "Inherited-From Key Value" <> '' then
                       ERROR(DeleteInheritedAttribErr);

                     ItemAttributeValueMapping.SETRANGE("Table ID",DATABASE::"Item Category");
                     ItemAttributeValueMapping.SETRANGE("No.",ItemCategoryCode);
                     ItemAttributeValueMapping.SETRANGE("Item Attribute ID","Attribute ID");
                     ItemAttributeValueMapping.FINDFIRST;
                     if ItemAttributeManagement.SearchCategoryItemsForAttribute(ItemCategoryCode,"Attribute ID") then
                       if CONFIRM(STRSUBSTNO(DeleteItemInheritedParentCategoryAttributesQst,ItemCategoryCode,ItemCategoryCode)) then begin
                         ItemAttributeValue.SETRANGE("Attribute ID","Attribute ID");
                         ItemAttributeValue.SETRANGE(ID,ItemAttributeValueMapping."Item Attribute Value ID");
                         ItemAttributeValue.FINDFIRST;
                         TempItemAttributeValueToDelete.TRANSFERFIELDS(ItemAttributeValue);
                         TempItemAttributeValueToDelete.INSERT;
                         DeleteRecentlyItemAttributeValueMapping("Attribute ID");
                         ItemAttributeManagement.DeleteCategoryItemsAttributeValueMapping(TempItemAttributeValueToDelete,ItemCategoryCode);
                       end;
                     ItemAttributeValueMapping.DELETE;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateProperties;
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                Enabled=RowEditable;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=Attribute Name;
                AssistEdit=false;
                CaptionML=ENU=Attribute;
                ToolTipML=ENU=Specifies the item attribute.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Attribute Name";
                TableRelation="Item Attribute".Name WHERE (Blocked=CONST(false));
                StyleExpr=StyleTxt;
                OnValidate=BEGIN
                             PersistInheritanceData;
                           END;

                ImplicitType=Text250 }

    { 4   ;2   ;Field     ;
                Name=Value;
                CaptionML=ENU=Default Value;
                ToolTipML=ENU=Specifies the value of the item attribute.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Value;
                TableRelation=IF ("Attribute Type"=CONST(Option)) "Item Attribute Value".Value WHERE ("Attribute ID"=FIELD("Attribute ID"),
                                                                                                      Blocked=CONST(false));
                StyleExpr=StyleTxt;
                OnValidate=BEGIN
                             PersistInheritanceData;
                             ChangeDefaultValue;
                           END;

                ImplicitType=Text250 }

    { 2   ;2   ;Field     ;
                Name=Unit of Measure;
                ToolTipML=ENU=Specifies the unit of measure for the item attribute.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure";
                StyleExpr=StyleTxt;
                ImplicitType=Text30 }

    { 5   ;2   ;Field     ;
                Name=Inherited-From Key Value;
                CaptionML=ENU=Inherited From;
                ToolTipML=ENU=Specifies the parent item category that the item attributes are inherited from.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Inherited-From Key Value";
                Editable=FALSE;
                StyleExpr=StyleTxt;
                ImplicitType=Code20 }

  }
  CODE
  {
    VAR
      TempRecentlyItemAttributeValueMapping@1006 : TEMPORARY Record "Item Attribute Value Mapping";
      ItemCategoryCode@1000 : Code[20];
      DeleteInheritedAttribErr@1002 : TextConst 'ENU=You cannot delete attributes that are inherited from a parent item category.';
      RowEditable@1001 : Boolean;
      StyleTxt@1003 : Text;
      ChangingDefaultValueMsg@1005 : TextConst '@@@=%1 - item category code;ENU=The new default value will not apply to items that use the current item category, ''''%1''''. It will only apply to new items.';
      DeleteItemInheritedParentCategoryAttributesQst@1004 : TextConst '@@@=%1 - item category code,%2 - item category code;ENU=One or more items belong to item category ''''%1''''.\\Do you want to delete the inherited item attributes for the items in question?';

    [External]
    PROCEDURE LoadAttributes@29(CategoryCode@1004 : Code[20]);
    VAR
      TempItemAttributeValue@1000 : TEMPORARY Record "Item Attribute Value";
      ItemAttributeValue@1002 : Record "Item Attribute Value";
      ItemAttributeValueMapping@1001 : Record "Item Attribute Value Mapping";
      ItemCategory@1007 : Record "Item Category";
      CurrentCategoryCode@1005 : Code[20];
    BEGIN
      RESET;
      DELETEALL;
      if CategoryCode = '' then
        exit;
      SortByInheritance;
      ItemAttributeValueMapping.SETRANGE("Table ID",DATABASE::"Item Category");
      SetItemCategoryCode(CategoryCode);
      CurrentCategoryCode := CategoryCode;
      repeat
        if ItemCategory.GET(CurrentCategoryCode) then begin
          ItemAttributeValueMapping.SETRANGE("No.",CurrentCategoryCode);
          if ItemAttributeValueMapping.FINDSET then
            repeat
              if ItemAttributeValue.GET(
                   ItemAttributeValueMapping."Item Attribute ID",ItemAttributeValueMapping."Item Attribute Value ID")
              then begin
                TempItemAttributeValue.TRANSFERFIELDS(ItemAttributeValue);
                if TempItemAttributeValue.INSERT then
                  if not AttributeExists(TempItemAttributeValue."Attribute ID") then begin
                    if CurrentCategoryCode = ItemCategoryCode then
                      InsertRecord(TempItemAttributeValue,DATABASE::"Item Category",'')
                    else
                      InsertRecord(TempItemAttributeValue,DATABASE::"Item Category",CurrentCategoryCode);
                    "Inheritance Level" := ItemCategory.Indentation;
                    MODIFY;
                  end;
              end
            until ItemAttributeValueMapping.NEXT = 0;
          CurrentCategoryCode := ItemCategory."Parent Category";
        end else
          CurrentCategoryCode := '';
      until CurrentCategoryCode = '';
      RESET;
      CurrPage.UPDATE(false);
      SortByInheritance;
    END;

    [External]
    PROCEDURE SaveAttributes@2(CategoryCode@1003 : Code[20]);
    VAR
      TempNewItemAttributeValue@1000 : TEMPORARY Record "Item Attribute Value";
      ItemAttributeValueMapping@1001 : Record "Item Attribute Value Mapping";
      ItemAttribute@1002 : Record "Item Attribute";
      TempNewCategItemAttributeValue@1008 : TEMPORARY Record "Item Attribute Value";
      TempOldCategItemAttributeValue@1007 : TEMPORARY Record "Item Attribute Value";
      ItemAttributeManagement@1004 : Codeunit "Item Attribute Management";
    BEGIN
      if CategoryCode = '' then
        exit;
      TempOldCategItemAttributeValue.LoadCategoryAttributesFactBoxData(CategoryCode);

      SETRANGE("Inherited-From Table ID",DATABASE::"Item Category");
      SETRANGE("Inherited-From Key Value",'');
      PopulateItemAttributeValue(TempNewItemAttributeValue);
      ItemAttributeValueMapping.SETRANGE("Table ID",DATABASE::"Item Category");
      ItemAttributeValueMapping.SETRANGE("No.",CategoryCode);
      ItemAttributeValueMapping.DELETEALL;

      if TempNewItemAttributeValue.FINDSET then
        repeat
          ItemAttributeValueMapping."Table ID" := DATABASE::"Item Category";
          ItemAttributeValueMapping."No." := CategoryCode;
          ItemAttributeValueMapping."Item Attribute ID" := TempNewItemAttributeValue."Attribute ID";
          ItemAttributeValueMapping."Item Attribute Value ID" := TempNewItemAttributeValue.ID;
          ItemAttributeValueMapping.INSERT;
          ItemAttribute.GET(ItemAttributeValueMapping."Item Attribute ID");
          ItemAttribute.RemoveUnusedArbitraryValues;
        until TempNewItemAttributeValue.NEXT = 0;

      TempNewCategItemAttributeValue.LoadCategoryAttributesFactBoxData(CategoryCode);
      ItemAttributeManagement.UpdateCategoryItemsAttributeValueMapping(
        TempNewCategItemAttributeValue,TempOldCategItemAttributeValue,ItemCategoryCode,ItemCategoryCode);
    END;

    LOCAL PROCEDURE PersistInheritanceData@1();
    BEGIN
      "Inherited-From Table ID" := DATABASE::"Item Category";
      CurrPage.SAVERECORD;
    END;

    [External]
    PROCEDURE SetItemCategoryCode@3(CategoryCode@1000 : Code[20]);
    BEGIN
      if ItemCategoryCode <> CategoryCode then begin
        ItemCategoryCode := CategoryCode;
        TempRecentlyItemAttributeValueMapping.DELETEALL;
      end;
    END;

    [External]
    PROCEDURE SortByInheritance@4();
    BEGIN
      SETCURRENTKEY("Inheritance Level","Attribute Name");
    END;

    LOCAL PROCEDURE UpdateProperties@6();
    BEGIN
      RowEditable := "Inherited-From Key Value" = '';
      if RowEditable then
        StyleTxt := 'Standard'
      else
        StyleTxt := 'Strong';
    END;

    LOCAL PROCEDURE AttributeExists@9(AttributeID@1001 : Integer) AttribExist : Boolean;
    BEGIN
      SETRANGE("Attribute ID",AttributeID);
      AttribExist := not ISEMPTY;
      RESET;
    END;

    LOCAL PROCEDURE ChangeDefaultValue@5();
    VAR
      ItemAttributeValueMapping@1001 : Record "Item Attribute Value Mapping";
      TempItemAttributeValueToInsert@1002 : TEMPORARY Record "Item Attribute Value";
      ItemAttributeManagement@1000 : Codeunit "Item Attribute Management";
    BEGIN
      ItemAttributeValueMapping.SETRANGE("Table ID",DATABASE::"Item Category");
      ItemAttributeValueMapping.SETRANGE("No.",ItemCategoryCode);
      ItemAttributeValueMapping.SETRANGE("Item Attribute ID","Attribute ID");
      if ItemAttributeValueMapping.FINDFIRST then begin
        ItemAttributeValueMapping."Item Attribute Value ID" := GetAttributeValueID(TempItemAttributeValueToInsert);
        ItemAttributeValueMapping.MODIFY;
      end;

      if IsRecentlyAddedCategoryAttribute("Attribute ID") then
        UpdateRecentlyItemAttributeValueMapping(TempItemAttributeValueToInsert)
      else
        if ItemAttributeManagement.SearchCategoryItemsForAttribute(ItemCategoryCode,"Attribute ID") then
          MESSAGE(STRSUBSTNO(ChangingDefaultValueMsg,ItemCategoryCode));
    END;

    LOCAL PROCEDURE InsertRecentlyAddedCategoryAttribute@24(ItemAttributeValueMapping@1000 : Record "Item Attribute Value Mapping");
    BEGIN
      TempRecentlyItemAttributeValueMapping.TRANSFERFIELDS(ItemAttributeValueMapping);
      if TempRecentlyItemAttributeValueMapping.INSERT then;
    END;

    LOCAL PROCEDURE IsRecentlyAddedCategoryAttribute@7(AttributeID@1001 : Integer) : Boolean;
    BEGIN
      TempRecentlyItemAttributeValueMapping.SETRANGE("Item Attribute ID",AttributeID);
      exit(not TempRecentlyItemAttributeValueMapping.ISEMPTY)
    END;

    LOCAL PROCEDURE UpdateRecentlyItemAttributeValueMapping@10(VAR TempItemAttributeValueToInsert@1000 : TEMPORARY Record "Item Attribute Value");
    VAR
      ItemAttributeValueMapping@1001 : Record "Item Attribute Value Mapping";
    BEGIN
      TempRecentlyItemAttributeValueMapping.SETRANGE("Item Attribute ID",TempItemAttributeValueToInsert."Attribute ID");
      if TempRecentlyItemAttributeValueMapping.FINDFIRST then begin
        ItemAttributeValueMapping.SETRANGE("Table ID",TempRecentlyItemAttributeValueMapping."Table ID");
        ItemAttributeValueMapping.SETRANGE("No.",TempRecentlyItemAttributeValueMapping."No.");
        ItemAttributeValueMapping.SETRANGE("Item Attribute ID",TempRecentlyItemAttributeValueMapping."Item Attribute ID");
        ItemAttributeValueMapping.FINDFIRST;
        ItemAttributeValueMapping.VALIDATE("Item Attribute Value ID",TempItemAttributeValueToInsert.ID);
        ItemAttributeValueMapping.MODIFY;
      end;
    END;

    LOCAL PROCEDURE DeleteRecentlyItemAttributeValueMapping@12(AttributeID@1000 : Integer);
    BEGIN
      TempRecentlyItemAttributeValueMapping.SETRANGE("Item Attribute ID",AttributeID);
      TempRecentlyItemAttributeValueMapping.DELETEALL;
    END;

    BEGIN
    END.
  }
}

