OBJECT Page 51 Purchase Invoice
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Purchase Invoice;
    SourceTable="Purchase Header";
    SourceTableView=WHERE("Document Type"=FILTER(Invoice));
    PageType=Document;
    RefreshOnActivate=true;
    PromotedActionCategoriesML=ENU=New,Process,Report,Approve,Invoice,Posting,View,Request Approval,Incoming Document;
    OnInit=VAR
             PurchasesPayablesSetup@1001 : Record "Purchases & Payables Setup";
           BEGIN
             JobQueuesUsed := PurchasesPayablesSetup.JobQueueActive;
             SetExtDocNoMandatoryCondition;
             ShowShippingOptionsWithLocation := DummyApplicationAreaSetup.IsLocationEnabled or DummyApplicationAreaSetup.IsAllDisabled;
           END;

    OnOpenPage=VAR
                 OfficeMgt@1000 : Codeunit "Office Management";
               BEGIN
                 SetDocNoVisible;
                 IsOfficeAddin := OfficeMgt.IsAvailable;
                 CreateIncomingDocFromEmailAttachment := OfficeMgt.OCRAvailable;
                 CreateIncomingDocumentVisible := not OfficeMgt.IsOutlookMobileApp;

                 if UserMgt.GetPurchasesFilter <> '' then begin
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetPurchasesFilter);
                   FILTERGROUP(0);
                 end;
                 if ("No." <> '') and ("Buy-from Vendor No." = '') then
                   DocumentIsPosted := (not GET("Document Type","No."));
               END;

    OnAfterGetRecord=BEGIN
                       CalculateCurrentShippingAndPayToOption;
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetPurchasesFilter;

                  if (not DocNoVisible) and ("No." = '') then
                    SetBuyFromVendorFromFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     exit(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       if not DocumentIsPosted then
                         exit(ConfirmCloseUnposted);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           CurrPage.ApprovalFactBox.PAGE.UpdateApprovalEntriesFromSourceRecord(RECORDID);
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                           SetControlAppearance;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;  ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 55      ;1   ;ActionGroup;
                      Name=&Invoice;
                      CaptionML=ENU=&Invoice;
                      Image=Invoice }
      { 57      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      ToolTipML=ENU=View statistical information, such as the value of posted entries, for the record.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Image=Statistics;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 CalcInvDiscForHeader;
                                 COMMIT;
                                 PAGE.RUNMODAL(PAGE::"Purchase Statistics",Rec);
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 58      ;2   ;Action    ;
                      Name=Vendor;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Vendor;
                      ToolTipML=ENU=View or edit detailed information about the vendor on the purchase document.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Vendor Card";
                      RunPageLink="No."=FIELD("Buy-from Vendor No.");
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Vendor;
                      PromotedCategory=Category5;
                      PromotedOnly=true }
      { 59      ;2   ;Action    ;
                      Name=Co&mments;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Purch. Comment Sheet";
                      RunPageLink="Document Type"=FIELD("Document Type"),
                                  "No."=FIELD("No."),
                                  "Document Line No."=CONST(0);
                      Image=ViewComments }
      { 113     ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      Enabled="No." <> '';
                      PromotedIsBig=true;
                      Image=Dimensions;
                      PromotedCategory=Category5;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 41      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=ENU=Incoming Document;
                      Visible=FALSE }
      { 39      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=ENU=View;
                      ToolTipML=ENU=View any incoming document records and file attachments that exist for the entry or document.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=HasIncomingDocument;
                      PromotedIsBig=true;
                      Image=ViewOrder;
                      PromotedCategory=Category9;
                      PromotedOnly=true;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record "Incoming Document";
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 37      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData "Incoming Document"=R;
                      CaptionML=ENU=Select;
                      ToolTipML=ENU=Select an incoming document record and file attachment that you want to link to the entry or document.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=SelectLineToApply;
                      PromotedCategory=Category9;
                      PromotedOnly=true;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record "Incoming Document";
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No.",RECORDID));
                               END;
                                }
      { 35      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=true;
                      CaptionML=ENU=Create from File;
                      ToolTipML=ENU=Create an incoming document record by selecting a file to attach, and then link the incoming document record to the entry or document.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=CreateIncomingDocumentVisible;
                      Enabled=CreateIncomingDocumentEnabled;
                      PromotedIsBig=true;
                      Image=Attach;
                      PromotedCategory=Category9;
                      PromotedOnly=true;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record "Incoming Document Attachment";
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromPurchaseDocument(Rec);
                               END;
                                }
      { 16      ;3   ;Action    ;
                      Name=IncomingDocEmailAttachment;
                      Ellipsis=true;
                      CaptionML=ENU=Create from Attachment;
                      ToolTipML=ENU=Create an incoming document record by selecting an attachment from outlook email, and then link the incoming document record to the entry or document.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=CreateIncomingDocFromEmailAttachment;
                      Enabled=IncomingDocEmailAttachmentEnabled;
                      PromotedIsBig=true;
                      Image=SendElectronicDocument;
                      PromotedCategory=Category9;
                      PromotedOnly=true;
                      OnAction=VAR
                                 OfficeMgt@1001 : Codeunit "Office Management";
                               BEGIN
                                 if not INSERT(true) then
                                   MODIFY(true);
                                 OfficeMgt.InitiateSendToIncomingDocumentsWithPurchaseHeaderLink(Rec,"Buy-from Vendor No.");
                               END;
                                }
      { 29      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=ENU=Remove;
                      ToolTipML=ENU=Remove an external document that has been recorded, manually or automatically, and attached as a file to a document or ledger entry.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=HasIncomingDocument;
                      PromotedIsBig=true;
                      Image=RemoveLine;
                      PromotedCategory=Category9;
                      PromotedOnly=true;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record "Incoming Document";
                               BEGIN
                                 if IncomingDocument.GET("Incoming Document Entry No.") then
                                   IncomingDocument.RemoveLinkToRelatedRecord;
                                 "Incoming Document Entry No." := 0;
                                 MODIFY(true);
                               END;
                                }
      { 25      ;1   ;ActionGroup;
                      Name=Approval;
                      CaptionML=ENU=Approval }
      { 23      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=ENU=Approve;
                      ToolTipML=ENU=Approve the requested changes.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=true;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID)
                               END;
                                }
      { 21      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=ENU=Reject;
                      ToolTipML=ENU=Reject the approval request.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=true;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID)
                               END;
                                }
      { 19      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=ENU=Delegate;
                      ToolTipML=ENU=Delegate the approval to a substitute approver.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID)
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=ENU=Comments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      Name=Release;
                      CaptionML=ENU=Release;
                      Image=Release }
      { 120     ;2   ;Action    ;
                      Name=Re&lease;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=Re&lease;
                      ToolTipML=ENU=Release the document to the next stage of processing. When a document is released, it will be included in all availability calculations from the expected receipt date of the items. You must reopen the document before you can make changes to it.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReleasePurchDoc@1000 : Codeunit "Release Purchase Document";
                               BEGIN
                                 ReleasePurchDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 121     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=ENU=Re&open;
                      ToolTipML=ENU=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      Enabled=Status <> Status::Open;
                      PromotedIsBig=true;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ReleasePurchDoc@1001 : Codeunit "Release Purchase Document";
                               BEGIN
                                 ReleasePurchDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 60      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 4       ;2   ;Action    ;
                      Name=GetRecurringPurchaseLines;
                      Ellipsis=true;
                      CaptionML=ENU=Get Recurring Purchase Lines;
                      ToolTipML=ENU=Insert purchase document lines that you have set up for the vendor as recurring. Recurring purchase lines could be for a monthly replenishment order or a fixed freight expense.;
                      ApplicationArea=#Suite;
                      PromotedIsBig=true;
                      Image=VendorCode;
                      OnAction=VAR
                                 StdVendPurchCode@1000 : Record "Standard Vendor Purchase Code";
                               BEGIN
                                 StdVendPurchCode.InsertPurchLines(Rec);
                               END;
                                }
      { 63      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=true;
                      CaptionML=ENU=Copy Document;
                      ToolTipML=ENU=Copy document lines and header information from another purchase document to this document. You can copy a posted purchase invoice into a new purchase invoice to quickly create a similar document.;
                      ApplicationArea=#Suite;
                      PromotedIsBig=true;
                      Image=CopyDocument;
                      OnAction=BEGIN
                                 CopyPurchDoc.SetPurchHeader(Rec);
                                 CopyPurchDoc.RUNMODAL;
                                 CLEAR(CopyPurchDoc);
                                 if GET("Document Type","No.") then;
                               END;
                                }
      { 61      ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      AccessByPermission=TableData "Vendor Invoice Disc."=R;
                      CaptionML=ENU=Calculate &Invoice Discount;
                      ToolTipML=ENU=Calculate the invoice discount for the entire purchase invoice.;
                      ApplicationArea=#Basic,#Suite;
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 136     ;2   ;Separator ;
                      Name=Separator136 }
      { 137     ;2   ;Separator ;
                      Name=Separator137 }
      { 112     ;2   ;Action    ;
                      Name=MoveNegativeLines;
                      Ellipsis=true;
                      CaptionML=ENU=Move Negative Lines;
                      ToolTipML=ENU=Prepare to create a replacement sales order in a sales return process.;
                      ApplicationArea=#Advanced;
                      Image=MoveNegativeLines;
                      OnAction=BEGIN
                                 CLEAR(MoveNegPurchLines);
                                 MoveNegPurchLines.SetPurchHeader(Rec);
                                 MoveNegPurchLines.RUNMODAL;
                                 MoveNegPurchLines.ShowDocument;
                               END;
                                }
      { 47      ;1   ;ActionGroup;
                      Name=Request Approval;
                      CaptionML=ENU=Request Approval }
      { 45      ;2   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData "Approval Entry"=R;
                      CaptionML=ENU=Approvals;
                      ToolTipML=ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Approvals;
                      PromotedCategory=Category8;
                      PromotedOnly=true;
                      OnAction=VAR
                                 WorkflowsEntriesBuffer@1001 : Record "Workflows Entries Buffer";
                               BEGIN
                                 WorkflowsEntriesBuffer.RunWorkflowEntriesPage(RECORDID,DATABASE::"Purchase Header","Document Type","No.");
                               END;
                                }
      { 142     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=ENU=Send A&pproval Request;
                      ToolTipML=ENU=Request approval of the document.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=NOT OpenApprovalEntriesExist AND CanRequestApprovalForFlow;
                      PromotedIsBig=true;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category8;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 if ApprovalsMgmt.CheckPurchaseApprovalPossible(Rec) then
                                   ApprovalsMgmt.OnSendPurchaseDocForApproval(Rec);
                               END;
                                }
      { 143     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=ENU=Cancel Approval Re&quest;
                      ToolTipML=ENU=Cancel the approval request.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=CanCancelApprovalForRecord OR CanCancelApprovalForFlow;
                      PromotedIsBig=true;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category8;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                                 WorkflowWebhookMgt@1001 : Codeunit "Workflow Webhook Management";
                               BEGIN
                                 ApprovalsMgmt.OnCancelPurchaseApprovalRequest(Rec);
                                 WorkflowWebhookMgt.FindAndCancel(RECORDID);
                               END;
                                }
      { 62      ;1   ;ActionGroup;
                      Name=Flow;
                      CaptionML=ENU=Flow;
                      Image=Flow }
      { 71      ;2   ;Action    ;
                      Name=CreateFlow;
                      CaptionML=ENU=Create a Flow;
                      ToolTipML=ENU=Create a new Flow from a list of relevant Flow templates.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Image=Flow;
                      PromotedCategory=Category8;
                      PromotedOnly=true;
                      OnAction=VAR
                                 FlowServiceManagement@1000 : Codeunit "Flow Service Management";
                                 FlowTemplateSelector@1001 : Page "Flow Template Selector";
                               BEGIN
                                 // Opens page 6400 where the user can use filtered templates to create new flows.
                                 FlowTemplateSelector.SetSearchText(FlowServiceManagement.GetPurchasingTemplateFilter);
                                 FlowTemplateSelector.RUN;
                               END;
                                }
      { 73      ;2   ;Action    ;
                      Name=SeeFlows;
                      CaptionML=ENU=See my Flows;
                      ToolTipML=ENU=View and configure Flows that you created.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Flow Selector";
                      Promoted=true;
                      Image=Flow;
                      PromotedCategory=Category8;
                      PromotedOnly=true }
      { 66      ;1   ;ActionGroup;
                      Name=P&osting;
                      CaptionML=ENU=P&osting;
                      Image=Post }
      { 68      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=ENU=P&ost;
                      ToolTipML=ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 VerifyTotal;
                                 Post(CODEUNIT::"Purch.-Post (Yes/No)");
                               END;
                                }
      { 33      ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=ENU=Preview Posting;
                      ToolTipML=ENU=Review the different types of entries that will be created when you post the document or journal.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 PurchPostYesNo@1000 : Codeunit "Purch.-Post (Yes/No)";
                               BEGIN
                                 PurchPostYesNo.Preview(Rec);
                               END;
                                }
      { 67      ;2   ;Action    ;
                      Name=TestReport;
                      Ellipsis=true;
                      CaptionML=ENU=Test Report;
                      ToolTipML=ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                      ApplicationArea=#Advanced;
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintPurchHeader(Rec);
                               END;
                                }
      { 69      ;2   ;Action    ;
                      Name=PostAndPrint;
                      ShortCutKey=Shift+F9;
                      CaptionML=ENU=Post and &Print;
                      ToolTipML=ENU=Finalize and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      Visible=NOT IsOfficeAddin;
                      PromotedIsBig=true;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 VerifyTotal;
                                 Post(CODEUNIT::"Purch.-Post + Print");
                               END;
                                }
      { 70      ;2   ;Action    ;
                      Name=PostBatch;
                      Ellipsis=true;
                      CaptionML=ENU=Post &Batch;
                      ToolTipML=ENU=Post several documents at once. A report request window opens where you can specify which documents to post.;
                      ApplicationArea=#Advanced;
                      Image=PostBatch;
                      OnAction=BEGIN
                                 VerifyTotal;
                                 REPORT.RUNMODAL(REPORT::"Batch Post Purchase Invoices",true,true,Rec);
                                 CurrPage.UPDATE(false);
                               END;
                                }
      { 7       ;2   ;Action    ;
                      Name=RemoveFromJobQueue;
                      CaptionML=ENU=Remove From Job Queue;
                      ToolTipML=ENU=Remove the scheduled processing of this record from the job queue.;
                      ApplicationArea=#All;
                      Visible="Job Queue Status" = "Job Queue Status"::"Scheduled For Posting";
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the purchase document. The field is only visible if you have not set up a number series for the type of purchase document, or if the Manual Nos. field is selected for the number series.;
                ApplicationArea=#All;
                SourceExpr="No.";
                Importance=Additional;
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               if AssistEdit(xRec) then
                                 CurrPage.UPDATE;
                             END;

                ImplicitType=Code20 }

    { 64  ;2   ;Field     ;
                Name=Buy-from Vendor No.;
                CaptionML=ENU=Vendor No.;
                ToolTipML=ENU=Specifies the number of the vendor who delivers the products.;
                ApplicationArea=#All;
                NotBlank=true;
                SourceExpr="Buy-from Vendor No.";
                Importance=Additional;
                OnValidate=BEGIN
                             OnAfterValidateBuyFromVendorNo(Rec,xRec);
                             CurrPage.UPDATE;
                           END;

                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name=Buy-from Vendor Name;
                CaptionML=ENU=Vendor Name;
                ToolTipML=ENU=Specifies the name of the vendor who delivers the products.;
                ApplicationArea=#All;
                NotBlank=true;
                SourceExpr="Buy-from Vendor Name";
                Importance=Promoted;
                OnValidate=VAR
                             ApplicationAreaSetup@1000 : Record "Application Area Setup";
                           BEGIN
                             OnAfterValidateBuyFromVendorNo(Rec,xRec);

                             if ApplicationAreaSetup.IsFoundationEnabled then
                               PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;

                ImplicitType=Text50;
                ShowMandatory=TRUE }

    { 51  ;2   ;Group     ;
                Name=Buy-from;
                CaptionML=ENU=Buy-from;
                GroupType=Group }

    { 72  ;3   ;Field     ;
                Name=Buy-from Address;
                CaptionML=ENU=Address;
                ToolTipML=ENU=Specifies the address of the vendor who ships the items.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Address";
                Importance=Additional;
                ImplicitType=Text50 }

    { 74  ;3   ;Field     ;
                Name=Buy-from Address 2;
                CaptionML=ENU=Address 2;
                ToolTipML=ENU=Specifies additional address information.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Address 2";
                Importance=Additional;
                ImplicitType=Text50 }

    { 77  ;3   ;Field     ;
                Name=Buy-from Post Code;
                CaptionML=ENU=Post Code;
                ToolTipML=ENU=Specifies the postal code.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Post Code";
                Importance=Additional;
                ImplicitType=Code20 }

    { 76  ;3   ;Field     ;
                Name=Buy-from City;
                CaptionML=ENU=City;
                ToolTipML=ENU=Specifies the city of the vendor on the purchase document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from City";
                Importance=Additional;
                ImplicitType=Text30 }

    { 128 ;3   ;Field     ;
                Name=Buy-from Contact No.;
                CaptionML=ENU=Contact No.;
                ToolTipML=ENU=Specifies the number of your contact at the vendor.;
                ApplicationArea=#Advanced;
                SourceExpr="Buy-from Contact No.";
                Importance=Additional;
                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name=Buy-from Contact;
                CaptionML=ENU=Contact;
                ToolTipML=ENU=Specifies the name of the person to contact about shipment of the item from this vendor.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Contact";
                Editable="Buy-from Vendor No." <> '';
                ImplicitType=Text50 }

    { 43  ;2   ;Field     ;
                Name=Document Date;
                ToolTipML=ENU=Specifies the date on which you created the document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Importance=Additional;
                ImplicitType=Date }

    { 12  ;2   ;Field     ;
                Name=Posting Date;
                ToolTipML=ENU=Specifies the date when the posting of the purchase document will be recorded.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                Importance=Promoted;
                ImplicitType=Date }

    { 30  ;2   ;Field     ;
                Name=Due Date;
                ToolTipML=ENU=Specifies when the invoice is due. The program calculates the date using the Payment Terms Code and Document Date fields.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                Importance=Promoted;
                ImplicitType=Date }

    { 11  ;2   ;Field     ;
                Name=Incoming Document Entry No.;
                ToolTipML=ENU=Specifies the number of the incoming document that this purchase document is created for.;
                ApplicationArea=#Advanced;
                SourceExpr="Incoming Document Entry No.";
                Importance=Additional;
                Visible=FALSE;
                ImplicitType=Integer }

    { 14  ;2   ;Field     ;
                Name=Vendor Invoice No.;
                ToolTipML=ENU=Specifies the document number of the original document you received from the vendor. You can require the document number for posting, or let it be optional. By default, it's required, so that this document references the original. Making document numbers optional removes a step from the posting process. For example, if you attach the original invoice as a PDF, you might not need to enter the document number. To specify whether document numbers are required, in the Purchases & Payables Setup window, select or clear the Ext. Doc. No. Mandatory field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Invoice No.";
                ImplicitType=Code35;
                ShowMandatory=VendorInvoiceNoMandatory }

    { 10  ;2   ;Field     ;
                Name=Purchaser Code;
                ToolTipML=ENU=Specifies which purchaser is assigned to the vendor.;
                ApplicationArea=#Suite;
                SourceExpr="Purchaser Code";
                Importance=Additional;
                OnValidate=BEGIN
                             PurchaserCodeOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 1102601000;2;Field  ;
                Name=Campaign No.;
                ToolTipML=ENU=Specifies the campaign number the document is linked to.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Campaign No.";
                Importance=Additional;
                ImplicitType=Code20 }

    { 84  ;2   ;Field     ;
                Name=Order Address Code;
                CaptionML=ENU=Alternate Vendor Address Code;
                ToolTipML=ENU=Specifies the order address of the related vendor.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Order Address Code";
                Importance=Additional;
                ImplicitType=Code10 }

    { 115 ;2   ;Field     ;
                Name=Responsibility Center;
                ToolTipML=ENU=Specifies the code of the responsibility center that is associated with the user, company, or vendor.;
                ApplicationArea=#Advanced;
                SourceExpr="Responsibility Center";
                Importance=Additional;
                ImplicitType=Code10 }

    { 65  ;2   ;Field     ;
                Name=Assigned User ID;
                ToolTipML=ENU=Specifies the ID of the user who is responsible for the document.;
                ApplicationArea=#Advanced;
                SourceExpr="Assigned User ID";
                Importance=Additional;
                ImplicitType=Code50 }

    { 118 ;2   ;Field     ;
                Name=Status;
                ToolTipML=ENU=Specifies whether the record is open, waiting to be approved, invoiced for prepayment, or released to the next stage of processing.;
                ApplicationArea=#Suite;
                SourceExpr=Status;
                Importance=Additional;
                ImplicitType=Option }

    { 5   ;2   ;Field     ;
                Name=Job Queue Status;
                ToolTipML=ENU=Specifies the status of a job queue entry that handles the posting of purchase invoices.;
                ApplicationArea=#All;
                SourceExpr="Job Queue Status";
                Importance=Additional;
                Visible=JobQueuesUsed;
                ImplicitType=Option }

    { 54  ;1   ;Part      ;
                Name=PurchLines;
                ApplicationArea=#Basic,#Suite;
                SubPageLink="Document No."=FIELD("No.");
                PagePartID="Purch. Invoice Subform";
                Enabled="Buy-from Vendor No." <> '';
                Editable="Buy-from Vendor No." <> '';
                UpdatePropagation=Both }

    { 1905885101;1;Group  ;
                Name=Invoice Details;
                CaptionML=ENU=Invoice Details;
                GroupType=Group }

    { 104 ;2   ;Field     ;
                Name=Currency Code;
                ToolTipML=ENU=Specifies the currency code for amounts on the purchase lines.;
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               if "Posting Date" <> 0D then
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               else
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               if ChangeExchangeRate.RUNMODAL = ACTION::OK then begin
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               end;
                               CLEAR(ChangeExchangeRate);
                             END;

                ImplicitType=Code10 }

    { 48  ;2   ;Field     ;
                Name=Expected Receipt Date;
                ToolTipML=ENU=Specifies the date you expect to receive the items on the purchase document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Expected Receipt Date";
                Importance=Promoted;
                ImplicitType=Date }

    { 108 ;2   ;Field     ;
                Name=Prices Including VAT;
                ToolTipML=ENU=Specifies if the Unit Price and Line Amount fields on document lines should be shown with or without VAT.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;

                ImplicitType=Boolean }

    { 138 ;2   ;Field     ;
                Name=VAT Bus. Posting Group;
                ToolTipML=ENU=Specifies the vendor's VAT specification to link transactions made for this vendor with the appropriate general ledger account according to the VAT posting setup.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=VAR
                             ApplicationAreaSetup@1000 : Record "Application Area Setup";
                           BEGIN
                             CurrPage.UPDATE;

                             if ApplicationAreaSetup.IsFoundationEnabled then
                               PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                ImplicitType=Code20 }

    { 28  ;2   ;Field     ;
                Name=Payment Terms Code;
                ToolTipML=ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the purchase document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Terms Code";
                Importance=Promoted;
                ImplicitType=Code10 }

    { 102 ;2   ;Field     ;
                Name=Payment Method Code;
                ToolTipML=ENU=Specifies how payment for the purchase document must be submitted, such as bank transfer or check.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Method Code";
                Importance=Additional;
                ImplicitType=Code10 }

    { 50  ;2   ;Field     ;
                Name=Transaction Type;
                ToolTipML=ENU=Specifies the number for the transaction type, for the purpose of reporting to INTRASTAT.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Transaction Type";
                ImplicitType=Code10 }

    { 85  ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the dimension value code associated with the purchase header.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;

                ImplicitType=Code20 }

    { 87  ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the dimension value code associated with the purchase header.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;

                ImplicitType=Code20 }

    { 32  ;2   ;Field     ;
                Name=Payment Discount %;
                ToolTipML=ENU=Specifies the payment discount percent granted if payment is made on or before the date in the Pmt. Discount Date field.;
                ApplicationArea=#Advanced;
                SourceExpr="Payment Discount %";
                ImplicitType=Decimal }

    { 34  ;2   ;Field     ;
                Name=Pmt. Discount Date;
                ToolTipML=ENU=Specifies the date on which the amount in the entry must be paid for a payment discount to be granted.;
                ApplicationArea=#Advanced;
                SourceExpr="Pmt. Discount Date";
                Importance=Additional;
                ImplicitType=Date }

    { 46  ;2   ;Field     ;
                Name=Shipment Method Code;
                ToolTipML=ENU=Specifies the delivery conditions of the related shipment, such as free on board (FOB).;
                ApplicationArea=#Advanced;
                SourceExpr="Shipment Method Code";
                Importance=Additional;
                ImplicitType=Code10 }

    { 17  ;2   ;Field     ;
                Name=Payment Reference;
                ToolTipML=ENU=Specifies the payment of the purchase invoice.;
                ApplicationArea=#Advanced;
                SourceExpr="Payment Reference";
                Importance=Additional;
                ImplicitType=Code50 }

    { 15  ;2   ;Field     ;
                Name=Creditor No.;
                ToolTipML=ENU=Specifies the vendor who sent the purchase invoice.;
                ApplicationArea=#Advanced;
                SourceExpr="Creditor No.";
                Importance=Additional;
                ImplicitType=Code20 }

    { 91  ;2   ;Field     ;
                Name=On Hold;
                ToolTipML=ENU=Specifies if the posted invoice will be included in the payment suggestion.;
                ApplicationArea=#Advanced;
                SourceExpr="On Hold";
                Importance=Additional;
                ImplicitType=Code3 }

    { 1906801201;1;Group  ;
                Name=Shipping and Payment;
                CaptionML=ENU=Shipping and Payment;
                GroupType=Group }

    { 53  ;2   ;Group     ;
                Name=Group53;
                GroupType=Group }

    { 78  ;3   ;Group     ;
                Name=Group78;
                GroupType=Group }

    { 75  ;4   ;Field     ;
                Name=ShippingOptionWithLocation;
                CaptionML=ENU=Ship-to;
                ToolTipML=ENU=Specifies the address that the products on the purchase document are shipped to. Default (Company Address): The same as the company address specified in the Company Information window. Location: One of the company's location addresses. Custom Address: Any ship-to address that you specify in the fields below.;
                OptionCaptionML=ENU=Default (Company Address),Location,Custom Address;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShipToOptions;
                Visible=ShowShippingOptionsWithLocation;
                OnValidate=BEGIN
                             ValidateShippingOption;
                           END;

                ImplicitType=Option }

    { 80  ;4   ;Field     ;
                Name=ShippingOptionWithoutLocation;
                CaptionML=ENU=Ship-to;
                ToolTipML=ENU=Specifies the address that the products on the purchase document are shipped to. Default (Company Address): The same as the company address specified in the Company Information window. Custom Address: Any ship-to address that you specify in the fields below.;
                OptionCaptionML=ENU=Default (Company Address),,Custom Address;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShipToOptions;
                Visible=NOT ShowShippingOptionsWithLocation;
                OnValidate=BEGIN
                             ValidateShippingOption
                           END;

                ImplicitType=Option }

    { 79  ;4   ;Group     ;
                Name=Group79;
                GroupType=Group }

    { 81  ;5   ;Group     ;
                Name=Group81;
                Visible=ShipToOptions = ShipToOptions::Location;
                GroupType=Group }

    { 89  ;6   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies a code for the location where you want the items to be placed when they are received.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                ImplicitType=Code10 }

    { 36  ;5   ;Field     ;
                Name=Ship-to Name;
                CaptionML=ENU=Name;
                ToolTipML=ENU=Specifies the name of the company at the address that you want the items on the purchase document to be shipped to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Name";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address";
                ImplicitType=Text50 }

    { 38  ;5   ;Field     ;
                Name=Ship-to Address;
                CaptionML=ENU=Address;
                ToolTipML=ENU=Specifies the address that you want the items on the purchase document to be shipped to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Address";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address";
                ImplicitType=Text50 }

    { 40  ;5   ;Field     ;
                Name=Ship-to Address 2;
                CaptionML=ENU=Address 2;
                ToolTipML=ENU=Specifies additional address information.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Address 2";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address";
                ImplicitType=Text50 }

    { 94  ;5   ;Field     ;
                Name=Ship-to Post Code;
                CaptionML=ENU=Post Code;
                ToolTipML=ENU=Specifies the postal code of the address that you want the items on the purchase document to be shipped to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Post Code";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address";
                ImplicitType=Code20 }

    { 42  ;5   ;Field     ;
                Name=Ship-to City;
                CaptionML=ENU=City;
                ToolTipML=ENU=Specifies the city of the address that you want the items on the purchase document to be shipped to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to City";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address";
                ImplicitType=Text30 }

    { 83  ;5   ;Field     ;
                Name=Ship-to Country/Region Code;
                CaptionML=ENU=Country/Region;
                ToolTipML=ENU=Specifies the country/region code of the address that you want the items on the purchase document to be shipped to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Country/Region Code";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address";
                ImplicitType=Code10 }

    { 44  ;5   ;Field     ;
                Name=Ship-to Contact;
                CaptionML=ENU=Contact;
                ToolTipML=ENU=Specifies the name of a contact person for the address of the address that you want the items on the purchase document to be shipped to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Contact";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address";
                ImplicitType=Text50 }

    { 56  ;2   ;Group     ;
                Name=Group56;
                GroupType=Group }

    { 86  ;3   ;Field     ;
                Name=PayToOptions;
                CaptionML=ENU=Pay-to;
                ToolTipML=ENU=Specifies the vendor that the purchase document will be paid to. Default (Vendor): The same as the vendor on the purchase document. Another Vendor: Any vendor that you specify in the fields below.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PayToOptions;
                OnValidate=BEGIN
                             if PayToOptions = PayToOptions::"Default (Vendor)" then
                               VALIDATE("Pay-to Vendor No.","Buy-from Vendor No.");
                           END;

                ImplicitType=Option }

    { 88  ;3   ;Group     ;
                Name=Group88;
                Visible=PayToOptions = PayToOptions::"Another Vendor";
                GroupType=Group }

    { 18  ;4   ;Field     ;
                Name=Pay-to Name;
                CaptionML=ENU=Name;
                ToolTipML=ENU=Specifies the name of the vendor sending the invoice.;
                ApplicationArea=#Basic,#Suite;
                NotBlank=true;
                SourceExpr="Pay-to Name";
                Importance=Promoted;
                OnValidate=VAR
                             ApplicationAreaSetup@1000 : Record "Application Area Setup";
                           BEGIN
                             if GETFILTER("Pay-to Vendor No.") = xRec."Pay-to Vendor No." then
                               if "Pay-to Vendor No." <> xRec."Pay-to Vendor No." then
                                 SETRANGE("Pay-to Vendor No.");

                             if ApplicationAreaSetup.IsFoundationEnabled then
                               PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;

                ImplicitType=Text50 }

    { 20  ;4   ;Field     ;
                Name=Pay-to Address;
                CaptionML=ENU=Address;
                ToolTipML=ENU=Specifies the address of the vendor sending the invoice.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Address";
                Importance=Additional;
                Enabled="Buy-from Vendor No." <> "Pay-to Vendor No.";
                Editable="Buy-from Vendor No." <> "Pay-to Vendor No.";
                ImplicitType=Text50 }

    { 22  ;4   ;Field     ;
                Name=Pay-to Address 2;
                CaptionML=ENU=Address 2;
                ToolTipML=ENU=Specifies additional address information.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Address 2";
                Importance=Additional;
                Enabled="Buy-from Vendor No." <> "Pay-to Vendor No.";
                Editable="Buy-from Vendor No." <> "Pay-to Vendor No.";
                ImplicitType=Text50 }

    { 82  ;4   ;Field     ;
                Name=Pay-to Post Code;
                CaptionML=ENU=Post Code;
                ToolTipML=ENU=Specifies the postal code.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Post Code";
                Importance=Additional;
                Enabled="Buy-from Vendor No." <> "Pay-to Vendor No.";
                Editable="Buy-from Vendor No." <> "Pay-to Vendor No.";
                ImplicitType=Code20 }

    { 24  ;4   ;Field     ;
                Name=Pay-to City;
                CaptionML=ENU=City;
                ToolTipML=ENU=Specifies the city of the vendor on the purchase document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to City";
                Importance=Additional;
                Enabled="Buy-from Vendor No." <> "Pay-to Vendor No.";
                Editable="Buy-from Vendor No." <> "Pay-to Vendor No.";
                ImplicitType=Text30 }

    { 130 ;4   ;Field     ;
                Name=Pay-to Contact No.;
                CaptionML=ENU=Contact No.;
                ToolTipML=ENU=Specifies the number of the contact who sends the invoice.;
                ApplicationArea=#Advanced;
                SourceExpr="Pay-to Contact No.";
                Importance=Additional;
                Enabled="Buy-from Vendor No." <> "Pay-to Vendor No.";
                Editable="Buy-from Vendor No." <> "Pay-to Vendor No.";
                ImplicitType=Code20 }

    { 26  ;4   ;Field     ;
                Name=Pay-to Contact;
                CaptionML=ENU=Contact;
                ToolTipML=ENU=Specifies the name of the person to contact about an invoice from this vendor.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Contact";
                Enabled="Buy-from Vendor No." <> "Pay-to Vendor No.";
                Editable="Buy-from Vendor No." <> "Pay-to Vendor No.";
                ImplicitType=Text50 }

    { 1907468901;1;Group  ;
                Name=Foreign Trade;
                CaptionML=ENU=Foreign Trade }

    { 100 ;2   ;Field     ;
                Name=Transaction Specification;
                ToolTipML=ENU=Specifies a code for the purchase header's transaction specification here.;
                ApplicationArea=#Advanced;
                SourceExpr="Transaction Specification";
                ImplicitType=Code10 }

    { 52  ;2   ;Field     ;
                Name=Transport Method;
                ToolTipML=ENU=Specifies the code for the transport method to be used with this purchase header.;
                ApplicationArea=#Advanced;
                SourceExpr="Transport Method";
                ImplicitType=Code10 }

    { 96  ;2   ;Field     ;
                Name=Entry Point;
                ToolTipML=ENU=Specifies the code of the port of entry where the items pass into your country/region, for reporting to Intrastat.;
                ApplicationArea=#Advanced;
                SourceExpr="Entry Point";
                ImplicitType=Code10 }

    { 98  ;2   ;Field     ;
                Name=Area;
                ToolTipML=ENU=Specifies the code for the area of the vendor's address.;
                ApplicationArea=#Advanced;
                SourceExpr=Area;
                ImplicitType=Code10 }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 27  ;1   ;Part      ;
                Name=Part27;
                ApplicationArea=#All;
                SubPageLink="Table ID"=CONST(38),
                            "Document Type"=FIELD("Document Type"),
                            "Document No."=FIELD("No.");
                PagePartID="Pending Approval FactBox";
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1906354007;1;Part   ;
                Name=ApprovalFactBox;
                ApplicationArea=#Advanced;
                PagePartID="Approval FactBox";
                Visible=FALSE;
                PartType=Page }

    { 1901138007;1;Part   ;
                Name=Part1901138007;
                ApplicationArea=#Advanced;
                SubPageLink="No."=FIELD("Buy-from Vendor No.");
                PagePartID="Vendor Details FactBox";
                Visible=FALSE;
                PartType=Page }

    { 31  ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                ApplicationArea=#Basic,#Suite;
                PagePartID="Incoming Doc. Attach. FactBox";
                Visible=NOT IsOfficeAddin;
                PartType=Page;
                ShowFilter=false }

    { 1904651607;1;Part   ;
                Name=Part1904651607;
                ApplicationArea=#Advanced;
                SubPageLink="No."=FIELD("Pay-to Vendor No.");
                PagePartID="Vendor Statistics FactBox";
                PartType=Page }

    { 1903435607;1;Part   ;
                Name=Part1903435607;
                ApplicationArea=#Advanced;
                SubPageLink="No."=FIELD("Buy-from Vendor No.");
                PagePartID="Vendor Hist. Buy-from FactBox";
                Visible=FALSE;
                PartType=Page }

    { 1906949207;1;Part   ;
                Name=Part1906949207;
                ApplicationArea=#Advanced;
                SubPageLink="No."=FIELD("Pay-to Vendor No.");
                PagePartID="Vendor Hist. Pay-to FactBox";
                Visible=FALSE;
                PartType=Page }

    { 3   ;1   ;Part      ;
                Name=Part3;
                ApplicationArea=#Advanced;
                SubPageLink="Document Type"=FIELD("Document Type"),
                            "Document No."=FIELD("Document No."),
                            "Line No."=FIELD("Line No.");
                PagePartID="Purchase Line FactBox";
                ProviderID=54;
                Visible=FALSE;
                PartType=Page }

    { 49  ;1   ;Part      ;
                Name=WorkflowStatus;
                ApplicationArea=#All;
                PagePartID="Workflow Status FactBox";
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=false }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      DummyApplicationAreaSetup@1027 : Record "Application Area Setup";
      CopyPurchDoc@1002 : Report "Copy Purchase Document";
      MoveNegPurchLines@1005 : Report "Move Negative Purchase Lines";
      ReportPrint@1003 : Codeunit "Test Report-Print";
      UserMgt@1004 : Codeunit "User Setup Management";
      PurchCalcDiscByType@1007 : Codeunit "Purch - Calc Disc. By Type";
      OfficeMgt@1022 : Codeunit "Office Management";
      ChangeExchangeRate@1001 : Page "Change Exchange Rate";
      ShipToOptions@1025 : '"Default (Company Address)",Location,"Custom Address"';
      PayToOptions@1028 : '"Default (Vendor)","Another Vendor"';
      HasIncomingDocument@1010 : Boolean;
      DocNoVisible@1006 : Boolean;
      VendorInvoiceNoMandatory@1008 : Boolean;
      OpenApprovalEntriesExist@1009 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1000 : Boolean;
      ShowWorkflowStatus@1011 : Boolean;
      JobQueuesUsed@1014 : Boolean;
      OpenPostedPurchaseInvQst@1015 : TextConst 'ENU=The invoice has been posted and moved to the Posted Purchase Invoices window.\\Do you want to open the posted invoice?';
      IsOfficeAddin@1017 : Boolean;
      CanCancelApprovalForRecord@1013 : Boolean;
      DocumentIsPosted@1012 : Boolean;
      CreateIncomingDocumentEnabled@1016 : Boolean;
      CreateIncomingDocumentVisible@1021 : Boolean;
      CreateIncomingDocFromEmailAttachment@1018 : Boolean;
      TotalsMismatchErr@1019 : TextConst 'ENU=The invoice cannot be posted because the total is different from the total on the related incoming document.';
      IncomingDocEmailAttachmentEnabled@1020 : Boolean;
      CanRequestApprovalForFlow@1023 : Boolean;
      CanCancelApprovalForFlow@1024 : Boolean;
      ShowShippingOptionsWithLocation@1026 : Boolean;

    [External]
    PROCEDURE LineModified@7();
    BEGIN
    END;

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    VAR
      PurchaseHeader@1002 : Record "Purchase Header";
      PurchInvHeader@1003 : Record "Purch. Inv. Header";
      LinesInstructionMgt@1001 : Codeunit "Lines Instruction Mgt.";
      InstructionMgt@1004 : Codeunit "Instruction Mgt.";
      IsScheduledPosting@1005 : Boolean;
    BEGIN
      if DummyApplicationAreaSetup.IsFoundationEnabled then
        LinesInstructionMgt.PurchaseCheckAllLinesHaveQuantityAssigned(Rec);

      SendToPosting(PostingCodeunitID);

      IsScheduledPosting := "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting";
      DocumentIsPosted := (not PurchaseHeader.GET("Document Type","No.")) or IsScheduledPosting;

      if IsScheduledPosting then
        CurrPage.CLOSE;
      CurrPage.UPDATE(false);

      if PostingCodeunitID <> CODEUNIT::"Purch.-Post (Yes/No)" then
        exit;

      if IsOfficeAddin then begin
        PurchInvHeader.SETRANGE("Pre-Assigned No.","No.");
        PurchInvHeader.SETRANGE("Order No.",'');
        if PurchInvHeader.FINDFIRST then
          PAGE.RUN(PAGE::"Posted Purchase Invoice",PurchInvHeader);
      end else
        if InstructionMgt.IsEnabled(InstructionMgt.ShowPostedConfirmationMessageCode) then
          ShowPostedConfirmationMessage;
    END;

    LOCAL PROCEDURE VerifyTotal@22();
    BEGIN
      if not IsTotalValid then
        ERROR(TotalsMismatchErr);
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.PurchLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE PurchaserCodeOnAfterValidate@19046120();
    BEGIN
      CurrPage.PurchLines.PAGE.UpdateForm(true);
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
      CALCFIELDS("Invoice Discount Amount");
    END;

    LOCAL PROCEDURE SetDocNoVisible@2();
    VAR
      DocumentNoVisibility@1000 : Codeunit DocumentNoVisibility;
      DocType@1003 : 'Quote,Order,Invoice,"Credit Memo","Blanket Order","Return Order",Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.PurchaseDocumentNoIsVisible(DocType::Invoice,"No.");
    END;

    LOCAL PROCEDURE SetExtDocNoMandatoryCondition@3();
    VAR
      PurchasesPayablesSetup@1000 : Record "Purchases & Payables Setup";
    BEGIN
      PurchasesPayablesSetup.GET;
      VendorInvoiceNoMandatory := PurchasesPayablesSetup."Ext. Doc. No. Mandatory"
    END;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      ApprovalsMgmt@1002 : Codeunit "Approvals Mgmt.";
      WorkflowWebhookMgt@1000 : Codeunit "Workflow Webhook Management";
    BEGIN
      HasIncomingDocument := "Incoming Document Entry No." <> 0;
      CreateIncomingDocumentEnabled := (not HasIncomingDocument) and ("No." <> '');
      SetExtDocNoMandatoryCondition;

      IncomingDocEmailAttachmentEnabled := OfficeMgt.EmailHasAttachments;
      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);

      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);

      WorkflowWebhookMgt.GetCanRequestAndCanCancel(RECORDID,CanRequestApprovalForFlow,CanCancelApprovalForFlow);
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@13();
    VAR
      PurchInvHeader@1000 : Record "Purch. Inv. Header";
      InstructionMgt@1001 : Codeunit "Instruction Mgt.";
    BEGIN
      PurchInvHeader.SETRANGE("Pre-Assigned No.","No.");
      PurchInvHeader.SETRANGE("Order No.",'');
      if PurchInvHeader.FINDFIRST then
        if InstructionMgt.ShowConfirm(OpenPostedPurchaseInvQst,InstructionMgt.ShowPostedConfirmationMessageCode) then
          PAGE.RUN(PAGE::"Posted Purchase Invoice",PurchInvHeader);
    END;

    LOCAL PROCEDURE ValidateShippingOption@8();
    BEGIN
      case ShipToOptions of
        ShipToOptions::"Default (Company Address)",
        ShipToOptions::"Custom Address":
          VALIDATE("Location Code",'');
        ShipToOptions::Location:
          VALIDATE("Location Code");
      end;
    END;

    LOCAL PROCEDURE CalculateCurrentShippingAndPayToOption@36();
    BEGIN
      if "Location Code" <> '' then
        ShipToOptions := ShipToOptions::Location
      else
        if ShipToAddressEqualsCompanyShipToAddress then
          ShipToOptions := ShipToOptions::"Default (Company Address)"
        else
          ShipToOptions := ShipToOptions::"Custom Address";

      if "Pay-to Vendor No." = "Buy-from Vendor No." then
        PayToOptions := PayToOptions::"Default (Vendor)"
      else
        PayToOptions := PayToOptions::"Another Vendor";
    END;

    BEGIN
    END.
  }
}

