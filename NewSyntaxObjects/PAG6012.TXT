OBJECT Page 6012 Res.Gr Availability Lines (SM)
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Lines;
    SaveValues=true;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable=Date;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 RESET;
               END;

    OnFindRecord=BEGIN
                   exit(PeriodFormMgt.FindDate(Which,Rec,PeriodType));
                 END;

    OnNextRecord=BEGIN
                   exit(PeriodFormMgt.NextDate(Steps,Rec,PeriodType));
                 END;

    OnAfterGetRecord=BEGIN
                       SetDateFilter;
                       ResGr.CALCFIELDS(Capacity,"Qty. on Service Order");
                       CapacityAfterOrders := ResGr.Capacity;
                       CapacityAfterQuotes := CapacityAfterOrders;
                       NetAvailability := CapacityAfterQuotes - ResGr."Qty. on Service Order";
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Period Start;
                CaptionML=ENU=Period Start;
                ToolTipML=ENU="Specifies the start date of the period defined on the line for the resource group. ";
                ApplicationArea=#Advanced;
                SourceExpr="Period Start";
                ImplicitType=Date }

    { 14  ;2   ;Field     ;
                Name=Period Name;
                CaptionML=ENU=Period Name;
                ToolTipML=ENU=Specifies the name of the period shown in the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Period Name";
                ImplicitType=Text31 }

    { 4   ;2   ;Field     ;
                Name=Capacity;
                CaptionML=ENU=Capacity;
                ToolTipML=ENU=Specifies the total capacity for the corresponding time period.;
                ApplicationArea=#Manufacturing;
                DecimalPlaces=0:5;
                SourceExpr=ResGr.Capacity;
                OnDrillDown=VAR
                              ResCapacityEntry@1001 : Record "Res. Capacity Entry";
                            BEGIN
                              ResCapacityEntry.SETRANGE("Resource Group No.",ResGr."No.");
                              ResCapacityEntry.SETRANGE(Date,"Period Start","Period End");
                              PAGE.RUNMODAL(0,ResCapacityEntry);
                            END;
                             }

    { 16  ;2   ;Field     ;
                Name=Qty. on Service Order;
                CaptionML=ENU=Qty. on Service Order;
                ToolTipML=ENU=Specifies how many units of the item are allocated to service orders, meaning listed on outstanding service order lines.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=ResGr."Qty. on Service Order";
                OnDrillDown=VAR
                              ServOrderAlloc@1001 : Record "Service Order Allocation";
                            BEGIN
                              ServOrderAlloc.SETRANGE("Resource Group No.",ResGr."No.");
                              ServOrderAlloc.SETRANGE("Allocation Date","Period Start","Period End");
                              ServOrderAlloc.SETFILTER(Status,'%1|%2',ServOrderAlloc.Status::Active,ServOrderAlloc.Status::Finished);
                              ServOrderAlloc.SETRANGE(Posted,false);
                              PAGE.RUNMODAL(0,ServOrderAlloc);
                            END;
                             }

    { 18  ;2   ;Field     ;
                Name=NetAvailability;
                CaptionML=ENU=Net Availability;
                ToolTipML=ENU=Specifies capacity, minus the quantity on order (Job), minus quantity on Service Order, minus Job Quotes Allocation.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr=NetAvailability;
                ImplicitType=Decimal }

  }
  CODE
  {
    VAR
      ResGr@1006 : Record "Resource Group";
      PeriodFormMgt@1003 : Codeunit PeriodFormManagement;
      CapacityAfterOrders@1000 : Decimal;
      CapacityAfterQuotes@1001 : Decimal;
      NetAvailability@1002 : Decimal;
      PeriodType@1004 : 'Day,Week,Month,Quarter,Year,"Accounting Period"';
      AmountType@1005 : '"Net Change","Balance at Date"';

    [External]
    PROCEDURE Set@1(VAR NewResGr@1000 : Record "Resource Group";NewPeriodType@1001 : Integer;NewAmountType@1002 : '"Net Change","Balance at Date"');
    BEGIN
      ResGr.COPY(NewResGr);
      PeriodType := NewPeriodType;
      AmountType := NewAmountType;
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE SetDateFilter@4();
    BEGIN
      if AmountType = AmountType::"Net Change" then
        ResGr.SETRANGE("Date Filter","Period Start","Period End")
      else
        ResGr.SETRANGE("Date Filter",0D,"Period End");
    END;

    BEGIN
    END.
  }
}

