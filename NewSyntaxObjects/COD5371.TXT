OBJECT Codeunit 5371 CRM Synch. Job Management
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [External]
    PROCEDURE SetInitialState@5(VAR CRMSynchJobStatusCue@1001 : Record "CRM Synch. Job Status Cue");
    BEGIN
      with CRMSynchJobStatusCue do begin
        RESET;
        if not FINDFIRST then begin
          INIT;
          Code := GetDefaultPkValue;
          INSERT;
        end;
        SetFilters(CRMSynchJobStatusCue);
      end;
    END;

    [External]
    PROCEDURE OnReset@6(VAR CRMSynchJobStatusCue@1000 : Record "CRM Synch. Job Status Cue");
    BEGIN
      with CRMSynchJobStatusCue do begin
        RESET;
        FINDFIRST;
        "Reset Date" := GetLastFailedDate(GetDefaultJobRunner);
        MODIFY;
        SetFilters(CRMSynchJobStatusCue);
      end;
    END;

    LOCAL PROCEDURE FindLastJobQueue@4(VAR JobQueueEntry@1000 : Record "Job Queue Entry";JobToRun@1001 : Integer) : Boolean;
    BEGIN
      with JobQueueEntry do begin
        SETRANGE(Status,Status::Error);
        SETRANGE("Object ID to Run",JobToRun);
        exit(FINDLAST);
      end;
    END;

    LOCAL PROCEDURE GetLastFailedDate@1(JobToRun@1001 : Integer) : DateTime;
    VAR
      JobQueueEntry@1000 : Record "Job Queue Entry";
    BEGIN
      if FindLastJobQueue(JobQueueEntry,JobToRun) then
        exit(JobQueueEntry."Last Ready State");
      exit(CREATEDATETIME(TODAY,TIME));
    END;

    LOCAL PROCEDURE GetDefaultPkValue@7() : Code[10];
    BEGIN
      exit('0');
    END;

    LOCAL PROCEDURE SetFilters@3(VAR CRMSynchJobStatusCue@1000 : Record "CRM Synch. Job Status Cue");
    BEGIN
      with CRMSynchJobStatusCue do begin
        SETRANGE("Object ID to Run",GetDefaultJobRunner);
        SETFILTER("Date Filter",'>%1',"Reset Date");
      end;
    END;

    [External]
    PROCEDURE GetDefaultJobRunner@8() : Integer;
    BEGIN
      exit(CODEUNIT::"Integration Synch. Job Runner");
    END;

    BEGIN
    END.
  }
}

