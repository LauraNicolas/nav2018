OBJECT Report 5979 Copy Service Document
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Copy Service Document;
    ProcessingOnly=true;
    OnPreReport=BEGIN
                  if DocNo = '' then
                    ERROR(Text004);
                  ValidateDocNo;
                  if FromServContractHeader."Ship-to Code" <> ServContractHeader."Ship-to Code" then
                    if not CONFIRM(Text003,false) then
                      CurrReport.QUIT;
                  AllLinesCopied := CopyDocMgt.CopyServContractLines(ServContractHeader,DocType,DocNo,OutServContractLine);
                END;

    OnPostReport=BEGIN
                   COMMIT;
                   if not AllLinesCopied then
                     if CONFIRM(
                          Text000,
                          true)
                     then begin
                       OutServContractLine.MARKEDONLY := true;
                       PAGE.RUNMODAL(PAGE::"Service Contract Line List",OutServContractLine);
                     end;
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnOpenPage=BEGIN
                   if DocNo <> '' then begin
                     case DocType of
                       DocType::Quote:
                         if FromServContractHeader.GET(FromServContractHeader."Contract Type"::Quote,DocNo) then;
                       DocType::Contract:
                         if FromServContractHeader.GET(FromServContractHeader."Contract Type"::Contract,DocNo) then;
                     end;
                     if FromServContractHeader."Contract No." = '' then
                       DocNo := ''
                     else
                       FromServContractHeader.CALCFIELDS(Name);
                   end;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 3   ;2   ;Field     ;
                  Name=Document Type;
                  CaptionML=ENU=Document Type;
                  ToolTipML=ENU=Specifies the type of service document that you want to copy.;
                  OptionCaptionML=ENU=Quote,Contract;
                  ApplicationArea=#Service;
                  SourceExpr=DocType;
                  OnValidate=BEGIN
                               DocNo := '';
                               ValidateDocNo;
                             END;
                              }

      { 8   ;2   ;Field     ;
                  Name=Document No.;
                  CaptionML=ENU=Document No.;
                  ToolTipML=ENU=Specifies the document number that you want to copy from by choosing the field.;
                  ApplicationArea=#Service;
                  SourceExpr=DocNo;
                  OnValidate=BEGIN
                               ValidateDocNo;
                             END;

                  OnLookup=BEGIN
                             LookupDocNo;
                           END;
                            }

      { 2   ;2   ;Field     ;
                  Name=Customer No.;
                  CaptionML=ENU=Customer No.;
                  ToolTipML=ENU=Specifies the number of the customer.;
                  ApplicationArea=#Service;
                  SourceExpr=FromServContractHeader."Customer No.";
                  Editable=FALSE }

      { 5   ;2   ;Field     ;
                  Name=Customer Name;
                  CaptionML=ENU=Customer Name;
                  ToolTipML=ENU=Specifies the customer name from a document that you have selected to copy the information from.;
                  ApplicationArea=#Service;
                  SourceExpr=FromServContractHeader.Name;
                  Editable=FALSE }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ServContractHeader@1007 : Record "Service Contract Header";
      FromServContractHeader@1010 : Record "Service Contract Header";
      OutServContractLine@1004 : Record "Service Contract Line";
      CopyDocMgt@1009 : Codeunit "Copy Document Mgt.";
      DocType@1026 : 'Quote,Contract';
      DocNo@1027 : Code[20];
      AllLinesCopied@1003 : Boolean;
      Text000@1005 : TextConst 'ENU=It was not possible to copy all of the service contract lines.\\Do you want to see these lines?';
      Text002@1002 : TextConst 'ENU=You can only copy the document with the same %1.';
      Text003@1006 : TextConst 'ENU=The document has a different ship-to code.\\Do you want to continue?';
      Text004@1008 : TextConst 'ENU=You must fill in the Document No. field.';

    PROCEDURE SetServContractHeader@2(VAR NewServContractHeader@1000 : Record "Service Contract Header");
    BEGIN
      ServContractHeader := NewServContractHeader;
    END;

    LOCAL PROCEDURE ValidateDocNo@10();
    BEGIN
      if DocNo = '' then
        FromServContractHeader.INIT
      else begin
        FromServContractHeader.INIT;
        FromServContractHeader.GET(DocType,DocNo);
        if FromServContractHeader."Customer No." <> ServContractHeader."Customer No." then
          ERROR(Text002,ServContractHeader.FIELDCAPTION("Customer No."));
        if FromServContractHeader."Currency Code" <> ServContractHeader."Currency Code" then
          ERROR(Text002,ServContractHeader.FIELDCAPTION("Currency Code"));
        FromServContractHeader.CALCFIELDS(Name);
      end;
    END;

    LOCAL PROCEDURE LookupDocNo@3();
    BEGIN
      FromServContractHeader.FILTERGROUP := 2;
      FromServContractHeader.SETRANGE("Contract Type",CopyDocMgt.ServContractHeaderDocType(DocType));
      if ServContractHeader."Contract Type" = CopyDocMgt.ServContractHeaderDocType(DocType) then
        FromServContractHeader.SETFILTER("Contract No.",'<>%1',ServContractHeader."Contract No.");
      FromServContractHeader."Contract Type" := CopyDocMgt.ServContractHeaderDocType(DocType);
      FromServContractHeader."Contract No." := DocNo;
      FromServContractHeader.SETCURRENTKEY("Customer No.","Currency Code","Ship-to Code");
      FromServContractHeader.SETRANGE("Customer No.",ServContractHeader."Customer No.");
      FromServContractHeader.SETRANGE("Currency Code",ServContractHeader."Currency Code");
      FromServContractHeader.FILTERGROUP := 0;
      FromServContractHeader.SETRANGE("Ship-to Code",ServContractHeader."Ship-to Code");
      if PAGE.RUNMODAL(0,FromServContractHeader) = ACTION::LookupOK then
        DocNo := FromServContractHeader."Contract No.";
      ValidateDocNo;
    END;

    PROCEDURE InitializeRequest@1(DocumentType@1000 : Option;DocumentNo@1001 : Code[20]);
    BEGIN
      DocType := DocumentType;
      DocNo := DocumentNo;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

