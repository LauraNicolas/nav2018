OBJECT Codeunit 330 ReqJnlManagement
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Req. Wksh. Template"=imd,
                TableData "Requisition Wksh. Name"=imd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text002@1000 : TextConst 'ENU=RECURRING';
      Text004@1001 : TextConst 'ENU=DEFAULT';
      Text005@1002 : TextConst 'ENU=Default Journal';
      Text99000000@1003 : TextConst 'ENU=%1 Worksheet';
      Text99000001@1004 : TextConst 'ENU=Recurring Worksheet';
      LastReqLine@1005 : Record "Requisition Line";
      OpenFromBatch@1006 : Boolean;

    [External]
    PROCEDURE TemplateSelection@1(PageID@1006 : Integer;RecurringJnl@1000 : Boolean;Type@1001 : '"Req.","For. Labor",Planning';VAR ReqLine@1004 : Record "Requisition Line";VAR JnlSelected@1003 : Boolean);
    VAR
      ReqWkshTmpl@1002 : Record "Req. Wksh. Template";
      LocalText000@1005 : TextConst 'ENU=Req.,For. Labor,Planning';
    BEGIN
      JnlSelected := true;

      ReqWkshTmpl.RESET;
      ReqWkshTmpl.SETRANGE("Page ID",PageID);
      ReqWkshTmpl.SETRANGE(Recurring,RecurringJnl);
      ReqWkshTmpl.SETRANGE(Type,Type);
      case ReqWkshTmpl.COUNT of
        0:
          begin
            ReqWkshTmpl.INIT;
            ReqWkshTmpl.Recurring := RecurringJnl;
            ReqWkshTmpl.Type := Type;
            if not RecurringJnl then begin
              ReqWkshTmpl.Name := COPYSTR(FORMAT(SELECTSTR(Type + 1,LocalText000)),1,MAXSTRLEN(ReqWkshTmpl.Name));
              ReqWkshTmpl.Description := STRSUBSTNO(Text99000000,SELECTSTR(Type + 1,LocalText000));
            end else begin
              ReqWkshTmpl.Name := Text002;
              ReqWkshTmpl.Description := Text99000001;
            end;
            ReqWkshTmpl.VALIDATE("Page ID");
            ReqWkshTmpl.INSERT;
            COMMIT;
          end;
        1:
          ReqWkshTmpl.FINDFIRST;
        else
          JnlSelected := PAGE.RUNMODAL(0,ReqWkshTmpl) = ACTION::LookupOK;
      end;
      if JnlSelected then begin
        ReqLine.FILTERGROUP := 2;
        ReqLine.SETRANGE("Worksheet Template Name",ReqWkshTmpl.Name);
        ReqLine.FILTERGROUP := 0;
        if OpenFromBatch then begin
          ReqLine."Worksheet Template Name" := '';
          PAGE.RUN(ReqWkshTmpl."Page ID",ReqLine);
        end;
      end;
    END;

    [External]
    PROCEDURE TemplateSelectionFromBatch@9(VAR ReqWkshName@1003 : Record "Requisition Wksh. Name");
    VAR
      ReqLine@1000 : Record "Requisition Line";
      ReqWkshTmpl@1002 : Record "Req. Wksh. Template";
    BEGIN
      OpenFromBatch := true;
      ReqWkshTmpl.GET(ReqWkshName."Worksheet Template Name");
      ReqWkshTmpl.TESTFIELD("Page ID");
      ReqWkshName.TESTFIELD(Name);

      ReqLine.FILTERGROUP := 2;
      ReqLine.SETRANGE("Worksheet Template Name",ReqWkshTmpl.Name);
      ReqLine.FILTERGROUP := 0;

      ReqLine."Worksheet Template Name" := '';
      ReqLine."Journal Batch Name" := ReqWkshName.Name;
      PAGE.RUN(ReqWkshTmpl."Page ID",ReqLine);
    END;

    [External]
    PROCEDURE OpenJnl@2(VAR CurrentJnlBatchName@1000 : Code[10];VAR ReqLine@1001 : Record "Requisition Line");
    BEGIN
      CheckTemplateName(ReqLine.GETRANGEMAX("Worksheet Template Name"),CurrentJnlBatchName);
      ReqLine.FILTERGROUP := 2;
      ReqLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      ReqLine.FILTERGROUP := 0;
    END;

    [External]
    PROCEDURE OpenJnlBatch@10(VAR ReqWkshName@1002 : Record "Requisition Wksh. Name");
    VAR
      ReqWkshTmpl@1003 : Record "Req. Wksh. Template";
      ReqLine@1004 : Record "Requisition Line";
      JnlSelected@1001 : Boolean;
    BEGIN
      if ReqWkshName.GETFILTER("Worksheet Template Name") <> '' then
        exit;
      ReqWkshName.FILTERGROUP(2);
      if ReqWkshName.GETFILTER("Worksheet Template Name") <> '' then begin
        ReqWkshName.FILTERGROUP(0);
        exit;
      end;
      ReqWkshName.FILTERGROUP(0);

      if not ReqWkshName.FIND('-') then
        for ReqWkshTmpl.Type := ReqWkshTmpl.Type::"Req." to ReqWkshTmpl.Type::Planning do begin
          ReqWkshTmpl.SETRANGE(Type,ReqWkshTmpl.Type);
          if not ReqWkshTmpl.FINDFIRST then
            TemplateSelection(0,false,ReqWkshTmpl.Type,ReqLine,JnlSelected);
          if ReqWkshTmpl.FINDFIRST then
            CheckTemplateName(ReqWkshTmpl.Name,ReqWkshName.Name);
          if ReqWkshTmpl.Type in [ReqWkshTmpl.Type::"Req."] then begin
            ReqWkshTmpl.SETRANGE(Recurring,true);
            if not ReqWkshTmpl.FINDFIRST then
              TemplateSelection(0,true,ReqWkshTmpl.Type,ReqLine,JnlSelected);
            if ReqWkshTmpl.FINDFIRST then
              CheckTemplateName(ReqWkshTmpl.Name,ReqWkshName.Name);
            ReqWkshTmpl.SETRANGE(Recurring);
          end;
        end;

      ReqWkshName.FIND('-');
      JnlSelected := true;
      ReqWkshName.CALCFIELDS("Template Type",Recurring);
      ReqWkshTmpl.SETRANGE(Recurring,ReqWkshName.Recurring);
      if not ReqWkshName.Recurring then
        ReqWkshTmpl.SETRANGE(Type,ReqWkshName."Template Type");
      if ReqWkshName.GETFILTER("Worksheet Template Name") <> '' then
        ReqWkshTmpl.SETRANGE(Name,ReqWkshName.GETFILTER("Worksheet Template Name"));
      case ReqWkshTmpl.COUNT of
        1:
          ReqWkshTmpl.FINDFIRST;
        else
          JnlSelected := PAGE.RUNMODAL(0,ReqWkshTmpl) = ACTION::LookupOK;
      end;
      if not JnlSelected then
        ERROR('');

      ReqWkshName.FILTERGROUP(2);
      ReqWkshName.SETRANGE("Worksheet Template Name",ReqWkshTmpl.Name);
      ReqWkshName.FILTERGROUP(0);
    END;

    LOCAL PROCEDURE CheckTemplateName@3(CurrentJnlTemplateName@1000 : Code[10];VAR CurrentJnlBatchName@1001 : Code[10]);
    VAR
      ReqWkshName@1002 : Record "Requisition Wksh. Name";
    BEGIN
      ReqWkshName.SETRANGE("Worksheet Template Name",CurrentJnlTemplateName);
      if not ReqWkshName.GET(CurrentJnlTemplateName,CurrentJnlBatchName) then begin
        if not ReqWkshName.FINDFIRST then begin
          ReqWkshName.INIT;
          ReqWkshName."Worksheet Template Name" := CurrentJnlTemplateName;
          ReqWkshName.Name := Text004;
          ReqWkshName.Description := Text005;
          ReqWkshName.INSERT(true);
          COMMIT;
        end;
        CurrentJnlBatchName := ReqWkshName.Name
      end;
    END;

    [External]
    PROCEDURE CheckName@4(CurrentJnlBatchName@1000 : Code[10];VAR ReqLine@1001 : Record "Requisition Line");
    VAR
      ReqWkshName@1002 : Record "Requisition Wksh. Name";
    BEGIN
      ReqWkshName.GET(ReqLine.GETRANGEMAX("Worksheet Template Name"),CurrentJnlBatchName);
    END;

    [External]
    PROCEDURE SetName@5(CurrentJnlBatchName@1000 : Code[10];VAR ReqLine@1001 : Record "Requisition Line");
    BEGIN
      ReqLine.FILTERGROUP := 2;
      ReqLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      ReqLine.FILTERGROUP := 0;
      if ReqLine.FIND('-') then;
    END;

    [External]
    PROCEDURE LookupName@8(VAR CurrentJnlBatchName@1000 : Code[10];VAR ReqLine@1001 : Record "Requisition Line");
    VAR
      ReqWkshName@1002 : Record "Requisition Wksh. Name";
    BEGIN
      COMMIT;
      ReqWkshName."Worksheet Template Name" := ReqLine.GETRANGEMAX("Worksheet Template Name");
      ReqWkshName.Name := ReqLine.GETRANGEMAX("Journal Batch Name");
      ReqWkshName.FILTERGROUP(2);
      ReqWkshName.SETRANGE("Worksheet Template Name",ReqWkshName."Worksheet Template Name");
      ReqWkshName.FILTERGROUP(0);
      if PAGE.RUNMODAL(0,ReqWkshName) = ACTION::LookupOK then begin
        CurrentJnlBatchName := ReqWkshName.Name;
        SetName(CurrentJnlBatchName,ReqLine);
      end;
    END;

    [External]
    PROCEDURE GetDescriptionAndRcptName@6(VAR ReqLine@1000 : Record "Requisition Line";VAR Description@1001 : Text[50];VAR BuyFromVendorName@1002 : Text[50]);
    VAR
      Vend@1003 : Record Vendor;
      GLAcc@1004 : Record "G/L Account";
    BEGIN
      if ReqLine."No." = '' then
        Description := ''
      else
        if (ReqLine.Type <> LastReqLine.Type) or
           (ReqLine."No." <> LastReqLine."No.")
        then
          case ReqLine.Type of
            ReqLine.Type::"G/L Account":
              if GLAcc.GET(ReqLine."No.") then
                Description := GLAcc.Name
              else
                Description := '';
          end;

      if ReqLine."Vendor No." = '' then
        BuyFromVendorName := ''
      else
        if ReqLine."Vendor No." <> LastReqLine."Vendor No." then begin
          if Vend.GET(ReqLine."Vendor No.") then
            BuyFromVendorName := Vend.Name
          else
            BuyFromVendorName := '';
        end;

      LastReqLine := ReqLine;
    END;

    [External]
    PROCEDURE SetUpNewLine@7(VAR ReqLine@1000 : Record "Requisition Line";LastReqLine@1001 : Record "Requisition Line");
    BEGIN
      ReqLine.Type := LastReqLine.Type;
      ReqLine."Recurring Method" := LastReqLine."Recurring Method";
      ReqLine."Order Date" := LastReqLine."Order Date";
    END;

    BEGIN
    END.
  }
}

