OBJECT Page 7507 Filter Items - AssistEdit
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Specify Filter Value;
    SourceTable="Item Attribute";
    PageType=StandardDialog;
    OnAfterGetCurrRecord=BEGIN
                           UpdateGroupVisiblity;
                         END;

  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 14  ;1   ;Group     ;
                Name=Group14;
                GroupType=Group }

    { 2   ;2   ;Group     ;
                Name=Group2;
                Visible=TextGroupVisible;
                GroupType=Group }

    { 4   ;3   ;Field     ;
                Name=TextConditions;
                CaptionML=ENU=Condition;
                ToolTipML=ENU="Specifies the condition for the filter value. Example: To specify that the value for a Material Description attribute must start with blue, fill the fields as follows: Condition field = Starts With. Value field = blue.";
                OptionCaptionML=ENU=Contains,Starts With,Ends With,Exact Match;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TextConditions;
                ImplicitType=Option }

    { 3   ;3   ;Field     ;
                Name=TextValue;
                CaptionML=ENU=Value;
                ToolTipML=ENU=Specifies the filter value that the condition applies to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TextValue;
                ImplicitType=Text240 }

    { 9   ;2   ;Group     ;
                Name=Group9;
                Visible=NumericGroupVisible;
                GroupType=Group }

    { 11  ;3   ;Field     ;
                Name=NumericConditions;
                CaptionML=ENU=Condition;
                ToolTipML=ENU="Specifies the condition for the filter value. Example: To specify that the value for a Quantity attribute must be higher than 10, fill the fields as follows: Condition field > Greater. Value field = 10.";
                OptionCaptionML=ENU="=  - Equals,..  - Range,<  - Less,<= - Less or Equal,>  - Greater,>= - Greater or Equal";
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NumericConditions;
                OnValidate=BEGIN
                             UpdateGroupVisiblity;
                           END;

                ImplicitType=Option }

    { 10  ;3   ;Field     ;
                Name=NumericValue;
                CaptionML=ENU=Value;
                ToolTipML=ENU=Specifies the filter value that the condition applies to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NumericValue;
                OnValidate=BEGIN
                             ValidateValueIsNumeric(NumericValue);
                           END;

                ImplicitType=Text }

    { 12  ;3   ;Group     ;
                Name=Group12;
                Visible=NumericGroupMaxValueVisible;
                GroupType=Group }

    { 13  ;4   ;Field     ;
                Name=MaxNumericValue;
                CaptionML=ENU=To Value;
                ToolTipML=ENU=Specifies the end value in the range.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MaxNumericValue;
                OnValidate=BEGIN
                             ValidateValueIsNumeric(MaxNumericValue);
                           END;

                ImplicitType=Text }

  }
  CODE
  {
    VAR
      TextValue@1001 : Text[240];
      TextConditions@1004 : 'Contains,"Starts With","Ends With","Exact Match"';
      NumericConditions@1003 : '"=  - Equals","..  - Range","<  - Less","<= - Less or Equal",">  - Greater",">= - Greater or Equal"';
      NumericValue@1006 : Text;
      MaxNumericValue@1007 : Text;
      NumericGroupVisible@1009 : Boolean;
      NumericGroupMaxValueVisible@1012 : Boolean;
      TextGroupVisible@1010 : Boolean;

    LOCAL PROCEDURE UpdateGroupVisiblity@31();
    BEGIN
      TextGroupVisible := Type = Type::Text;
      NumericGroupVisible := Type in [Type::Decimal,Type::Integer];
      NumericGroupMaxValueVisible := NumericGroupVisible and (NumericConditions = NumericConditions::"..  - Range")
    END;

    LOCAL PROCEDURE ValidateValueIsNumeric@1(TextValue@1000 : Text);
    VAR
      ValidDecimal@1002 : Decimal;
      ValidInteger@1001 : Integer;
    BEGIN
      if Type = Type::Decimal then
        EVALUATE(ValidDecimal,TextValue);

      if Type = Type::Integer then
        EVALUATE(ValidInteger,TextValue);
    END;

    [External]
    PROCEDURE LookupOptionValue@5(PreviousValue@1004 : Text) : Text;
    VAR
      ItemAttributeValue@1002 : Record "Item Attribute Value";
      SelectedItemAttributeValue@1001 : Record "Item Attribute Value";
      SelectItemAttributeValue@1000 : Page "Select Item Attribute Value";
      OptionFilter@1003 : Text;
    BEGIN
      ItemAttributeValue.SETRANGE("Attribute ID",ID);
      SelectItemAttributeValue.SETTABLEVIEW(ItemAttributeValue);
      // SelectItemAttributeValue.LOOKUPMODE(TRUE);
      SelectItemAttributeValue.EDITABLE(false);

      if not (SelectItemAttributeValue.RUNMODAL in [ACTION::OK,ACTION::LookupOK]) then
        exit(PreviousValue);

      OptionFilter := '';
      SelectItemAttributeValue.GetSelectedValue(SelectedItemAttributeValue);
      if SelectedItemAttributeValue.FINDSET then begin
        repeat
          if SelectedItemAttributeValue.Value <> '' then
            OptionFilter := STRSUBSTNO('%1|%2',SelectedItemAttributeValue.Value,OptionFilter);
        until SelectedItemAttributeValue.NEXT = 0;
        OptionFilter := COPYSTR(OptionFilter,1,STRLEN(OptionFilter) - 1);
      end;

      exit(OptionFilter);
    END;

    [External]
    PROCEDURE GenerateFilter@2() FilterText : Text;
    BEGIN
      case Type of
        Type::Decimal,Type::Integer:
          begin
            if NumericValue = '' then
              exit('');

            if NumericConditions = NumericConditions::"..  - Range" then
              FilterText := STRSUBSTNO('%1..%2',NumericValue,MaxNumericValue)
            else
              FilterText := STRSUBSTNO('%1%2',DELCHR(COPYSTR(FORMAT(NumericConditions),1,2),'=',' '),NumericValue);
          end;
        Type::Text:
          begin
            if TextValue = '' then
              exit('');

            case TextConditions of
              TextConditions::"Starts With":
                FilterText := STRSUBSTNO('@%1*',TextValue);
              TextConditions::"Ends With":
                FilterText := STRSUBSTNO('@*%1',TextValue);
              TextConditions::Contains:
                FilterText := STRSUBSTNO('@*%1*',TextValue);
              TextConditions::"Exact Match":
                FilterText := STRSUBSTNO('''%1''',TextValue);
            end;
          end;
      end;
    END;

    BEGIN
    END.
  }
}

