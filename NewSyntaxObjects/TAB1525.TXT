OBJECT Table 1525 Workflow - Record Change
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Workflow - Record Change;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;AutoIncrement=true;
                                                   CaptionML=ENU=Entry No. }
    { 2   ;   ;Table No.           ;Integer       ;CaptionML=ENU=Table No. }
    { 3   ;   ;Field No.           ;Integer       ;CaptionML=ENU=Field No. }
    { 4   ;   ;Old Value           ;Text250       ;CaptionML=ENU=Old Value }
    { 5   ;   ;New Value           ;Text250       ;CaptionML=ENU=New Value }
    { 6   ;   ;Record ID           ;RecordID      ;CaptionML=ENU=Record ID }
    { 7   ;   ;Workflow Step Instance ID;GUID     ;CaptionML=ENU=Workflow Step Instance ID }
    { 8   ;   ;Field Caption       ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD("Table No."),
                                                                                                   "No."=FIELD("Field No.")));
                                                   CaptionML=ENU=Field Caption }
    { 9   ;   ;Inactive            ;Boolean       ;CaptionML=ENU=Inactive }
  }
  KEYS
  {
    {    ;"Entry No."                             ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE GetFormattedNewValue@4(FormatOptionString@1000 : Boolean) : Text;
    BEGIN
      exit(FormatValue("New Value",FormatOptionString));
    END;

    [External]
    PROCEDURE GetFormattedOldValue@5(FormatOptionString@1000 : Boolean) : Text;
    BEGIN
      exit(FormatValue("Old Value",FormatOptionString));
    END;

    [External]
    PROCEDURE FormatValue@2(Value@1001 : Text;FormatOptionString@1002 : Boolean) : Text;
    VAR
      RecRef@1000 : RecordRef;
      FieldRef@1013 : FieldRef;
      Bool@1004 : Boolean;
      Date@1003 : Date;
      DateFormula@1005 : DateFormula;
      DateTime@1006 : DateTime;
      Decimal@1007 : Decimal;
      Duration@1008 : Duration;
      Integer@1009 : Integer;
      Option@1010 : Option;
      Time@1011 : Time;
      BigInteger@1012 : BigInteger;
    BEGIN
      RecRef.GET("Record ID");
      FieldRef := RecRef.FIELD("Field No.");
      case FORMAT(FieldRef.TYPE) of
        'Date':
          begin
            EVALUATE(Date,Value,9);
            exit(FORMAT(Date));
          end;
        'Boolean':
          begin
            EVALUATE(Bool,Value,9);
            exit(FORMAT(Bool));
          end;
        'DateFormula':
          begin
            EVALUATE(DateFormula,Value,9);
            exit(FORMAT(DateFormula));
          end;
        'DateTime':
          begin
            EVALUATE(DateTime,Value,9);
            exit(FORMAT(DateTime));
          end;
        'BigInteger':
          begin
            EVALUATE(BigInteger,Value,9);
            exit(FORMAT(BigInteger));
          end;
        'Time':
          begin
            EVALUATE(Time,Value,9);
            exit(FORMAT(Time));
          end;
        'Option':
          begin
            EVALUATE(Option,Value,9);
            if FormatOptionString then begin
              FieldRef.VALUE := Option;
              exit(FORMAT(FieldRef.VALUE));
            end;
            exit(FORMAT(Option));
          end;
        'Integer':
          begin
            EVALUATE(Integer,Value,9);
            exit(FORMAT(Integer));
          end;
        'Duration':
          begin
            EVALUATE(Duration,Value,9);
            exit(FORMAT(Duration));
          end;
        'Decimal':
          begin
            EVALUATE(Decimal,Value,9);
            exit(FORMAT(Decimal));
          end;
        'Code','Text':
          exit(FORMAT(Value));
        else
          exit(FORMAT(Value));
      end;
    END;

    BEGIN
    END.
  }
}

