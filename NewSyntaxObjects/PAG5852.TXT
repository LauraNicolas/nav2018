OBJECT Page 5852 Get Post.Doc - S.InvLn Subform
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Lines;
    LinksAllowed=false;
    SourceTable="Sales Invoice Line";
    PageType=ListPart;
    OnFindRecord=BEGIN
                   if not Visible then
                     exit(false);

                   if FIND(Which) then begin
                     SalesInvLine := Rec;
                     while true do begin
                       ShowRec := IsShowRec(Rec);
                       if ShowRec then
                         exit(true);
                       if NEXT(1) = 0 then begin
                         Rec := SalesInvLine;
                         if FIND(Which) then
                           while true do begin
                             ShowRec := IsShowRec(Rec);
                             if ShowRec then
                               exit(true);
                             if NEXT(-1) = 0 then
                               exit(false);
                           end;
                       end;
                     end;
                   end;
                   exit(false);
                 END;

    OnNextRecord=VAR
                   RealSteps@1001 : Integer;
                   NextSteps@1000 : Integer;
                 BEGIN
                   if Steps = 0 then
                     exit;

                   SalesInvLine := Rec;
                   repeat
                     NextSteps := NEXT(Steps / ABS(Steps));
                     ShowRec := IsShowRec(Rec);
                     if ShowRec then begin
                       RealSteps := RealSteps + NextSteps;
                       SalesInvLine := Rec;
                     end;
                   until (NextSteps = 0) or (RealSteps = Steps);
                   Rec := SalesInvLine;
                   FIND;
                   exit(RealSteps);
                 END;

    OnAfterGetRecord=BEGIN
                       DocumentNoHideValue := false;
                       DocumentNoOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1903099004;2 ;Action    ;
                      Name=Show Document;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Show Document;
                      ToolTipML=ENU=Open the document that the selected line exists on.;
                      ApplicationArea=#Basic,#Suite;
                      Image=View;
                      OnAction=BEGIN
                                 ShowDocument;
                               END;
                                }
      { 1900545404;2 ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Suite;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1901991804;2 ;Action    ;
                      Name=Item &Tracking Lines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      ToolTipML=ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 ItemTrackingLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Document No.;
                Lookup=false;
                ToolTipML=ENU=Specifies the invoice number.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                HideValue=DocumentNoHideValue;
                StyleExpr='Strong';
                ImplicitType=Code20 }

    { 36  ;2   ;Field     ;
                Name=Posting Date;
                CaptionML=ENU=Posting Date;
                ToolTipML=ENU=Specifies the posting date of the record.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesInvHeader."Posting Date" }

    { 40  ;2   ;Field     ;
                Name=Shipment Date;
                ToolTipML=ENU=Specifies when items on the document are shipped or were shipped. A shipment date is usually calculated from a requested delivery date plus lead time.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipment Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 50  ;2   ;Field     ;
                Name=Bill-to Customer No.;
                ToolTipML=ENU=Specifies the number of the customer that you send or sent the invoice or credit memo to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Customer No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Sell-to Customer No.;
                ToolTipML=ENU=Specifies the number of the customer the invoice was sent to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Customer No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the line type.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Type;
                ImplicitType=Option }

    { 8   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of a general ledger account, item, resource, additional cost, or fixed asset, depending on the contents of the Type field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No.";
                ImplicitType=Code20 }

    { 28  ;2   ;Field     ;
                Name=Cross-Reference No.;
                ToolTipML=ENU=Specifies the cross-reference number of the item specified on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 10  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 30  ;2   ;Field     ;
                Name=Nonstock;
                ToolTipML=ENU=Specifies that this item is a nonstock item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Nonstock;
                Visible=FALSE;
                ImplicitType=Boolean }

    { 12  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the name of the item or general ledger account, or some descriptive text.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 42  ;2   ;Field     ;
                Name=Return Reason Code;
                ToolTipML=ENU=Specifies the code explaining why the item was returned.;
                ApplicationArea=#Advanced;
                SourceExpr="Return Reason Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 18  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the location in which the invoice line was registered.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 20  ;2   ;Field     ;
                Name=Bin Code;
                ToolTipML=ENU=Specifies the bin where the items are picked or put away.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 14  ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 16  ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 24  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure Code";
                ImplicitType=Code10 }

    { 22  ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the number of units of the item specified on the line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Quantity;
                ImplicitType=Decimal }

    { 44  ;2   ;Field     ;
                Name=QtyNotReturned;
                CaptionML=ENU=Qty. Not Returned;
                ToolTipML=ENU=Specifies the quantity from the posted document line that has been shipped to the customer and not returned by the customer.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=QtyNotReturned;
                ImplicitType=Decimal }

    { 38  ;2   ;Field     ;
                Name=Qty. Returned;
                CaptionML=ENU=Qty. Returned;
                ToolTipML=ENU=Specifies the quantity that was returned.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=CalcQtyReturned }

    { 26  ;2   ;Field     ;
                Name=Unit of Measure;
                ToolTipML=ENU=Specifies the unit of measure for the item (bottle or piece, for example).;
                ApplicationArea=#Advanced;
                SourceExpr="Unit of Measure";
                Visible=FALSE;
                ImplicitType=Text10 }

    { 46  ;2   ;Field     ;
                Name=Unit Cost (LCY);
                ToolTipML=ENU=Specifies the unit cost of the item on the invoice line.;
                ApplicationArea=#Advanced;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 60  ;2   ;Field     ;
                Name=RevUnitCostLCY;
                CaptionML=ENU=Reverse Unit Cost (LCY);
                ToolTipML=ENU=Specifies the unit cost that will appear on the new document lines.;
                ApplicationArea=#Advanced;
                SourceExpr=RevUnitCostLCY;
                AutoFormatType=2;
                Visible=FALSE;
                ImplicitType=Decimal }

    { 80  ;2   ;Field     ;
                Name=UnitPrice;
                CaptionML=ENU=Unit Price;
                ToolTipML=ENU=Specifies the item's unit price.;
                ApplicationArea=#Advanced;
                SourceExpr=UnitPrice;
                AutoFormatType=2;
                AutoFormatExpr=SalesInvHeader."Currency Code";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 76  ;2   ;Field     ;
                Name=LineAmount;
                CaptionML=ENU=Line Amount;
                ToolTipML=ENU=Specifies the net amount, excluding any invoice discount amount, that must be paid for products on the line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=LineAmount;
                AutoFormatType=1;
                AutoFormatExpr=SalesInvHeader."Currency Code";
                ImplicitType=Decimal }

    { 78  ;2   ;Field     ;
                Name=Currency Code;
                CaptionML=ENU=Currency Code;
                ToolTipML=ENU=Specifies the code for the currency that amounts are shown in.;
                ApplicationArea=#Advanced;
                SourceExpr=SalesInvHeader."Currency Code";
                Visible=FALSE }

    { 84  ;2   ;Field     ;
                Name=Prices Including VAT;
                CaptionML=ENU=Prices Including VAT;
                ToolTipML=ENU=Specifies if the Unit Price and Line Amount fields on document lines should be shown with or without VAT.;
                ApplicationArea=#Advanced;
                SourceExpr=SalesInvHeader."Prices Including VAT";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                Name=Line Discount %;
                ToolTipML=ENU=Specifies the discount percentage that is granted for the item on the line.;
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr="Line Discount %";
                ImplicitType=Decimal }

    { 52  ;2   ;Field     ;
                Name=Line Discount Amount;
                ToolTipML=ENU=Specifies the discount amount that is granted for the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 54  ;2   ;Field     ;
                Name=Allow Invoice Disc.;
                ToolTipML=ENU=Specifies if the invoice line is included when the invoice discount is calculated.;
                ApplicationArea=#Advanced;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 56  ;2   ;Field     ;
                Name=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount for the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 34  ;2   ;Field     ;
                Name=Job No.;
                ToolTipML=ENU=Specifies the number of the related job.;
                ApplicationArea=#Advanced;
                SourceExpr="Job No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 70  ;2   ;Field     ;
                Name=Blanket Order No.;
                ToolTipML=ENU=Specifies the number of the blanket order that the record originates from.;
                ApplicationArea=#Advanced;
                SourceExpr="Blanket Order No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 72  ;2   ;Field     ;
                Name=Blanket Order Line No.;
                ToolTipML=ENU=Specifies the number of the blanket order line that the record originates from.;
                ApplicationArea=#Advanced;
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE;
                ImplicitType=Integer }

    { 74  ;2   ;Field     ;
                Name=Appl.-from Item Entry;
                ToolTipML=ENU=Specifies the number of the item ledger entry that the document or journal line is applied from.;
                ApplicationArea=#Advanced;
                SourceExpr="Appl.-from Item Entry";
                Visible=FALSE;
                ImplicitType=Integer }

    { 32  ;2   ;Field     ;
                Name=Appl.-to Item Entry;
                ToolTipML=ENU=Specifies the number of the item ledger entry that the document or journal line is applied -to.;
                ApplicationArea=#Advanced;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE;
                ImplicitType=Integer }

  }
  CODE
  {
    VAR
      ToSalesHeader@1010 : Record "Sales Header";
      SalesInvHeader@1008 : Record "Sales Invoice Header";
      SalesInvLine@1003 : Record "Sales Invoice Line";
      TempSalesInvLine@1002 : TEMPORARY Record "Sales Invoice Line";
      QtyNotReturned@1004 : Decimal;
      RevUnitCostLCY@1000 : Decimal;
      UnitPrice@1009 : Decimal;
      LineAmount@1005 : Decimal;
      RevQtyFilter@1001 : Boolean;
      FillExactCostReverse@1006 : Boolean;
      Visible@1011 : Boolean;
      ShowRec@1013 : Boolean;
      DocumentNoHideValue@19020538 : Boolean INDATASET;

    LOCAL PROCEDURE IsFirstDocLine@2() : Boolean;
    VAR
      SalesInvHeader2@1003 : Record "Sales Invoice Header";
      SalesInvLine2@1000 : Record "Sales Invoice Line";
      QtyNotReturned2@1001 : Decimal;
      RevUnitCostLCY2@1002 : Decimal;
    BEGIN
      TempSalesInvLine.RESET;
      TempSalesInvLine.COPYFILTERS(Rec);
      TempSalesInvLine.SETRANGE("Document No.","Document No.");
      if not TempSalesInvLine.FINDFIRST then begin
        SalesInvHeader2 := SalesInvHeader;
        QtyNotReturned2 := QtyNotReturned;
        RevUnitCostLCY2 := RevUnitCostLCY;
        SalesInvLine2.COPYFILTERS(Rec);
        SalesInvLine2.SETRANGE("Document No.","Document No.");
        if not SalesInvLine2.FINDSET then
          exit(false);
        repeat
          ShowRec := IsShowRec(SalesInvLine2);
          if ShowRec then begin
            TempSalesInvLine := SalesInvLine2;
            TempSalesInvLine.INSERT;
          end;
        until (SalesInvLine2.NEXT = 0) or ShowRec;
        SalesInvHeader := SalesInvHeader2;
        QtyNotReturned := QtyNotReturned2;
        RevUnitCostLCY := RevUnitCostLCY2;
      end;

      if "Document No." <> SalesInvHeader."No." then
        SalesInvHeader.GET("Document No.");

      UnitPrice := "Unit Price";
      LineAmount := "Line Amount";

      exit("Line No." = TempSalesInvLine."Line No.");
    END;

    LOCAL PROCEDURE IsShowRec@3(SalesInvLine2@1000 : Record "Sales Invoice Line") : Boolean;
    BEGIN
      with SalesInvLine2 do begin
        QtyNotReturned := 0;
        if "Document No." <> SalesInvHeader."No." then
          SalesInvHeader.GET("Document No.");
        if SalesInvHeader."Prepayment Invoice" then
          exit(false);
        if RevQtyFilter then begin
          if SalesInvHeader."Currency Code" <> ToSalesHeader."Currency Code" then
            exit(false);
          if Type = Type::" " then
            exit("Attached to Line No." = 0);
        end;
        if Type <> Type::Item then
          exit(true);
        CalcShippedSaleNotReturned(QtyNotReturned,RevUnitCostLCY,FillExactCostReverse);
        if not RevQtyFilter then
          exit(true);
        exit(QtyNotReturned > 0);
      end;
    END;

    LOCAL PROCEDURE CalcQtyReturned@6() : Decimal;
    BEGIN
      if (Type = Type::Item) and (Quantity - QtyNotReturned > 0) then
        exit(Quantity - QtyNotReturned);
      exit(0);
    END;

    [External]
    PROCEDURE Initialize@4(NewToSalesHeader@1002 : Record "Sales Header";NewRevQtyFilter@1000 : Boolean;NewFillExactCostReverse@1001 : Boolean;NewVisible@1003 : Boolean);
    BEGIN
      ToSalesHeader := NewToSalesHeader;
      RevQtyFilter := NewRevQtyFilter;
      FillExactCostReverse := NewFillExactCostReverse;
      Visible := NewVisible;

      if Visible then begin
        TempSalesInvLine.RESET;
        TempSalesInvLine.DELETEALL;
      end;
    END;

    [External]
    PROCEDURE GetSelectedLine@1(VAR FromSalesInvLine@1000 : Record "Sales Invoice Line");
    BEGIN
      FromSalesInvLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(FromSalesInvLine);
    END;

    LOCAL PROCEDURE ShowDocument@7();
    BEGIN
      if not SalesInvHeader.GET("Document No.") then
        exit;
      PAGE.RUN(PAGE::"Posted Sales Invoice",SalesInvHeader);
    END;

    LOCAL PROCEDURE ItemTrackingLines@12();
    VAR
      FromSalesInvLine@1000 : Record "Sales Invoice Line";
    BEGIN
      GetSelectedLine(FromSalesInvLine);
      FromSalesInvLine.ShowItemTrackingLines;
    END;

    LOCAL PROCEDURE DocumentNoOnFormat@19001080();
    BEGIN
      if not IsFirstDocLine then
        DocumentNoHideValue := true;
    END;

    BEGIN
    END.
  }
}

