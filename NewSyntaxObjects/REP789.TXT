OBJECT Report 789 Delete Phys. Inventory Ledger
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Date Compr. Register"=rimd,
                TableData "Phys. Inventory Ledger Entry"=rimd,
                TableData "Inventory Period Entry"=rimd;
    CaptionML=ENU=Delete Phys. Inventory Ledger;
    ProcessingOnly=true;
  }
  DATASET
  {
    { 3360;    ;DataItem;Phys. Inventory Ledger Entry;
               DataItemTable="Phys. Inventory Ledger Entry";
               OnPreDataItem=BEGIN
                               if not CONFIRM(Text000,false) then
                                 CurrReport.BREAK;

                               if EntrdDateComprReg."Ending Date" = 0D then
                                 ERROR(STRSUBSTNO(Text003,EntrdDateComprReg.FIELDCAPTION("Ending Date")));

                               Window.OPEN(
                                 Text004 +
                                 Text005 +
                                 Text006 +
                                 Text007,
                                 "Item No.",
                                 "Posting Date",
                                 NoOfDeleted);

                               if PhysInvtLedgEntry2.FINDLAST then;
                               LastEntryNo := PhysInvtLedgEntry2."Entry No.";
                               SETRANGE("Entry No.",0,LastEntryNo);
                               SETRANGE("Posting Date",EntrdDateComprReg."Starting Date",EntrdDateComprReg."Ending Date");
                             END;

               OnAfterGetRecord=VAR
                                  InvtPeriodEntry@1000 : Record "Inventory Period Entry";
                                  InvtPeriod@1001 : Record "Inventory Period";
                                BEGIN
                                  if not InvtPeriod.IsValidDate("Posting Date") then
                                    InvtPeriod.ShowError("Posting Date");

                                  PhysInvtLedgEntry2 := "Phys. Inventory Ledger Entry";
                                  with PhysInvtLedgEntry2 do begin
                                    SETCURRENTKEY("Item No.","Variant Code","Location Code","Posting Date");
                                    COPYFILTERS("Phys. Inventory Ledger Entry");
                                    SETRANGE("Item No.","Item No.");
                                    SETFILTER("Posting Date",DateComprMgt.GetDateFilter("Posting Date",EntrdDateComprReg,true));
                                    SETRANGE("Inventory Posting Group","Inventory Posting Group");
                                    SETRANGE("Entry Type","Entry Type");

                                    Window.UPDATE(1);
                                    Window.UPDATE(2);

                                    DELETE;

                                    InvtPeriodEntry.RemoveItemRegNo("Entry No.",true);

                                    NoOfDeleted := NoOfDeleted + 1;
                                    Window.UPDATE(3);
                                  end;

                                  if NoOfDeleted >= LastNoOfDeleted + 10 then begin
                                    LastNoOfDeleted := NoOfDeleted;
                                    COMMIT;
                                  end;
                                END;

               ReqFilterFields="Item No.","Inventory Posting Group" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnOpenPage=BEGIN
                   if EntrdDateComprReg."Ending Date" = 0D then
                     EntrdDateComprReg."Ending Date" := TODAY;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=StartingDate;
                  CaptionML=ENU=Starting Date;
                  ToolTipML=ENU=Specifies the first date of the period from which the program will suggest physical inventory ledger entries. The batch job will include all entries from this date to the ending date.;
                  ApplicationArea=#Advanced;
                  SourceExpr=EntrdDateComprReg."Starting Date" }

      { 2   ;2   ;Field     ;
                  Name=EndingDate;
                  CaptionML=ENU=Ending Date;
                  ToolTipML=ENU=Specifies the last date of the period from which the program will suggest physical inventory ledger entries.;
                  ApplicationArea=#Advanced;
                  SourceExpr=EntrdDateComprReg."Ending Date" }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=This batch job deletes entries. Therefore, it is important that you make a backup of the database before you run the batch job.\\Do you want to delete the entries?';
      Text003@1003 : TextConst 'ENU=%1 must be specified.';
      Text004@1004 : TextConst 'ENU=Deleting phys. inventory ledger entries...\\';
      Text005@1005 : TextConst 'ENU=Item No.             #1##########\';
      Text006@1006 : TextConst 'ENU=Date                 #2######\\';
      Text007@1007 : TextConst 'ENU=No. of entries del.  #3######';
      EntrdDateComprReg@1008 : Record "Date Compr. Register";
      PhysInvtLedgEntry2@1009 : Record "Phys. Inventory Ledger Entry";
      DateComprMgt@1010 : Codeunit DateComprMgt;
      Window@1011 : Dialog;
      LastEntryNo@1012 : Integer;
      NoOfDeleted@1013 : Integer;
      LastNoOfDeleted@1014 : Integer;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

