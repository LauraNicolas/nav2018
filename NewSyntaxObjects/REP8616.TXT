OBJECT Report 8616 Get Package Tables
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Get Package Tables;
    ProcessingOnly=true;
    OnPreReport=VAR
                  ConfigLine@1000 : Record "Config. Line";
                BEGIN
                  if PackageCode = '' then
                    ERROR(Text001);

                  TempConfigSelection.RESET;
                  TempConfigSelection.SETRANGE("Line Type",TempConfigSelection."Line Type"::Table);
                  TempConfigSelection.SETRANGE(Selected,true);
                  if TempConfigSelection.FINDSET then
                    repeat
                      if DataExists(TempConfigSelection."Table ID") and not ConfigPackageTable.GET(PackageCode,TempConfigSelection."Table ID") then begin
                        ConfigPackageTable.INIT;
                        ConfigPackageTable.VALIDATE("Package Code",PackageCode);
                        ConfigPackageTable.VALIDATE("Table ID",TempConfigSelection."Table ID");
                        ConfigPackageTable.INSERT(true);
                        ConfigLine.GET(TempConfigSelection."Line No.");
                        if ConfigLine."Package Code" = '' then begin
                          ConfigLine."Package Code" := PackageCode;
                          ConfigLine.MODIFY;
                        end;
                      end;
                    until TempConfigSelection.NEXT = 0;

                  CurrReport.BREAK;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnInit=BEGIN
               InitSelection;
             END;

    }
    CONTROLS
    {
      { 8   ;0   ;Container ;
                  Name=Container8;
                  ContainerType=ContentArea }

      { 7   ;1   ;Group     ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 2   ;2   ;Field     ;
                  Name=SelectTables;
                  CaptionML=ENU=Select Tables;
                  ToolTipML=ENU=Specifies which tables to include. When you choose the field, the Config. Selection windows opens in which you can select tables.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=SelectedTables;
                  Editable=FALSE;
                  OnAssistEdit=VAR
                                 ConfigSelection@1000 : Page "Config. Selection";
                               BEGIN
                                 ConfigSelection.Set(TempConfigSelection);
                                 COMMIT;
                                 if ConfigSelection.RUNMODAL = ACTION::OK then
                                   SelectedTables := ConfigSelection.Get(TempConfigSelection);
                               END;
                                }

      { 6   ;2   ;Field     ;
                  Name=WithDataOnly;
                  CaptionML=ENU=With Data Only;
                  ToolTipML=ENU=Specifies if only data from the tables is included.;
                  OptionCaptionML=ENU=Purchase,Sale,Positive Adjmt.,Negative Adjmt.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=WithDataOnly }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ConfigPackageTable@1007 : Record "Config. Package Table";
      TempConfigSelection@1003 : TEMPORARY Record "Config. Selection";
      TableInfo@1006 : Record "Table Information";
      SelectedTables@1008 : Integer;
      PackageCode@1001 : Code[20];
      WithDataOnly@1005 : Boolean;
      Text001@1009 : TextConst 'ENU=Package is not set.';

    [External]
    PROCEDURE Set@2(NewPackageCode@1001 : Code[20]);
    BEGIN
      PackageCode := NewPackageCode;
    END;

    LOCAL PROCEDURE DataExists@4(TableID@1000 : Integer) : Boolean;
    BEGIN
      if not WithDataOnly then
        exit(true);

      TableInfo.SETRANGE("Company Name",COMPANYNAME);
      TableInfo.SETRANGE("Table No.",TableID);
      if TableInfo.FINDFIRST then
        if TableInfo."No. of Records" > 0 then
          exit(true);

      exit(false);
    END;

    LOCAL PROCEDURE InitSelection@1();
    VAR
      ConfigLine@1000 : Record "Config. Line";
    BEGIN
      with TempConfigSelection do begin
        RESET;
        ConfigLine.SETFILTER("Table ID",'<>0');
        if ConfigLine.FINDSET then
          repeat
            if (ConfigLine."Line Type" <> ConfigLine."Line Type"::Table) or
               ((ConfigLine."Line Type" = ConfigLine."Line Type"::Table) and (ConfigLine."Package Code" = ''))
            then
              if not GET(ConfigLine."Line No.") then begin
                INIT;
                "Line No." := ConfigLine."Line No.";
                "Table ID" := ConfigLine."Table ID";
                Name := ConfigLine.Name;
                "Line Type" := ConfigLine."Line Type";
                INSERT;
              end;
          until ConfigLine.NEXT = 0;
      end;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

