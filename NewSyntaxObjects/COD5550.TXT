OBJECT Codeunit 5550 Fixed Asset Acquisition Wizard
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GenJournalBatchNameTxt@1000 : TextConst '@@@=Translate normally and keep the upper case;ENU=AUTOMATIC';
      SimpleJnlDescriptionTxt@1001 : TextConst 'ENU=Fixed Asset Acquisition';
      FixedAssetNoTok@1002 : TextConst '@@@={Locked};ENU=FixedAssetNo';

    [External]
    PROCEDURE RunAcquisitionWizard@7(FixedAssetNo@1001 : Code[20]);
    VAR
      TempGenJournalLine@1003 : TEMPORARY Record "Gen. Journal Line";
    BEGIN
      TempGenJournalLine.SETRANGE("Account No.",FixedAssetNo);
      PAGE.RUNMODAL(PAGE::"Fixed Asset Acquisition Wizard",TempGenJournalLine);
    END;

    [External]
    PROCEDURE RunAcquisitionWizardFromNotification@2(FixedAssetAcquisitionNotification@1001 : Notification);
    VAR
      FixedAssetNo@1002 : Code[10];
    BEGIN
      InitializeFromNotification(FixedAssetAcquisitionNotification,FixedAssetNo);
      RunAcquisitionWizard(FixedAssetNo);
    END;

    [External]
    PROCEDURE PopulateDataOnNotification@1(VAR FixedAssetAcquisitionNotification@1000 : Notification;FixedAssetNo@1012 : Code[20]);
    BEGIN
      FixedAssetAcquisitionNotification.SETDATA(FixedAssetNoTok,FixedAssetNo);
    END;

    [External]
    PROCEDURE InitializeFromNotification@4(FixedAssetAcquisitionNotification@1000 : Notification;VAR FixedAssetNo@1008 : Code[20]);
    BEGIN
      FixedAssetNo := FixedAssetAcquisitionNotification.GETDATA(FixedAssetNoTok);
    END;

    [External]
    PROCEDURE GetAutogenJournalBatch@214() : Code[10];
    VAR
      GenJournalBatch@1000 : Record "Gen. Journal Batch";
    BEGIN
      if not GenJournalBatch.GET(SelectFATemplate,GenJournalBatchNameTxt) then begin
        GenJournalBatch.INIT;
        GenJournalBatch."Journal Template Name" := SelectFATemplate;
        GenJournalBatch.Name := GenJournalBatchNameTxt;
        GenJournalBatch.Description := SimpleJnlDescriptionTxt;
        GenJournalBatch.SetupNewBatch;
        GenJournalBatch.INSERT;
      end;

      exit(GenJournalBatch.Name);
    END;

    [External]
    PROCEDURE SelectFATemplate@215() ReturnValue : Code[10];
    VAR
      FAJournalLine@1170000001 : Record "FA Journal Line";
      FAJnlManagement@1003 : Codeunit FAJnlManagement;
      JnlSelected@1000 : Boolean;
    BEGIN
      FAJnlManagement.TemplateSelection(PAGE::"Fixed Asset Journal",false,FAJournalLine,JnlSelected);

      if JnlSelected then begin
        FAJournalLine.FILTERGROUP := 2;
        ReturnValue := COPYSTR(FAJournalLine.GETFILTER("Journal Template Name"),1,MAXSTRLEN(FAJournalLine."Journal Template Name"));
        FAJournalLine.FILTERGROUP := 0;
      end;
    END;

    PROCEDURE HideNotificationForCurrentUser@5(Notification@1001 : Notification);
    VAR
      FixedAsset@1000 : Record "Fixed Asset";
    BEGIN
      if Notification.ID = FixedAsset.GetNotificationID then
        FixedAsset.DontNotifyCurrentUserAgain;
    END;

    [EventSubscriber(Page,5600,OnClosePageEvent)]
    PROCEDURE RecallNotificationAboutFAAcquisitionWizardOnFixedAssetCard@8(VAR Rec@1000 : Record "Fixed Asset");
    VAR
      FixedAsset@1001 : Record "Fixed Asset";
    BEGIN
      FixedAsset.RecallNotificationForCurrentUser;
    END;

    [EventSubscriber(Page,1518,OnInitializingNotificationWithDefaultState)]
    PROCEDURE EnableSaaSNotificationPreferenceSetupOnInitializingNotificationWithDefaultState@9();
    VAR
      FixedAsset@1000 : Record "Fixed Asset";
    BEGIN
      FixedAsset.SetNotificationDefaultState;
    END;

    BEGIN
    END.
  }
}

