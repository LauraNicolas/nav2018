OBJECT Page 1342 Item Template Card
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Item Template;
    SourceTable="Item Template";
    DataCaptionExpr="Template Name";
    PageType=Card;
    SourceTableTemporary=true;
    CardPageID="Item Template Card";
    PromotedActionCategoriesML=ENU=New,Process,Reports,Master Data;
    OnOpenPage=BEGIN
                 if Item."No." <> '' then
                   CreateConfigTemplateFromExistingItem(Item,Rec);
               END;

    OnDeleteRecord=BEGIN
                     CheckTemplateNameProvided
                   END;

    OnQueryClosePage=BEGIN
                       case CloseAction of
                         ACTION::LookupOK:
                           if Code <> '' then
                             CheckTemplateNameProvided;
                         ACTION::LookupCancel:
                           if DELETE(true) then;
                       end;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           SetInventoryPostingGroupEditable;
                           SetDimensionsEnabled;
                           SetTemplateEnabled;
                           SetCostingMethodDefault;
                         END;

    ActionList=ACTIONS
    {
      { 22      ;    ;ActionContainer;
                      Name=ActionContainer22;
                      ActionContainerType=ActionItems }
      { 3       ;1   ;ActionGroup;
                      Name=Master Data;
                      CaptionML=ENU=Master Data }
      { 24      ;2   ;Action    ;
                      Name=Default Dimensions;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Suite;
                      RunObject=Page "Dimensions Template List";
                      RunPageLink="Table Id"=CONST(27),
                                  "Master Record Template Code"=FIELD(Code);
                      Promoted=true;
                      Enabled=DimensionsEnabled;
                      PromotedIsBig=true;
                      Image=Dimensions;
                      PromotedCategory=Category4 }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General;
                GroupType=Group }

    { 4   ;2   ;Field     ;
                Name=Template Name;
                ToolTipML=ENU=Specifies the name of the template.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Template Name";
                OnValidate=BEGIN
                             SetDimensionsEnabled;
                           END;

                ImplicitType=Text50 }

    { 23  ;2   ;Field     ;
                Name=TemplateEnabled;
                CaptionML=ENU=Enabled;
                ToolTipML=ENU=Specifies if the template is ready to be used;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TemplateEnabled;
                OnValidate=VAR
                             ConfigTemplateHeader@1000 : Record "Config. Template Header";
                           BEGIN
                             if ConfigTemplateHeader.GET(Code) then
                               ConfigTemplateHeader.SetTemplateEnabled(TemplateEnabled);
                           END;

                ImplicitType=Boolean }

    { 18  ;1   ;Group     ;
                Name=Item Setup;
                CaptionML=ENU=Item Setup;
                GroupType=Group }

    { 5   ;2   ;Field     ;
                Name=Base Unit of Measure;
                ToolTipML=ENU=Specifies the unit in which the item is held in inventory. The base unit of measure also serves as the conversion basis for alternate units of measure.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Base Unit of Measure";
                ImplicitType=Code10 }

    { 6   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies if the item card represents a physical item (Inventory) or a service (Service).;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Type;
                OnValidate=BEGIN
                             SetInventoryPostingGroupEditable;
                           END;

                ImplicitType=Option }

    { 16  ;2   ;Field     ;
                Name=Automatic Ext. Texts;
                ToolTipML=ENU=Specifies that an extended text will be added on sales or purchase documents for this item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Automatic Ext. Texts";
                ImplicitType=Boolean }

    { 21  ;1   ;Group     ;
                Name=Price;
                CaptionML=ENU=Price;
                GroupType=Group }

    { 14  ;2   ;Field     ;
                Name=Price Includes VAT;
                ToolTipML=ENU=Specifies if the Unit Price and Line Amount fields on sales document lines for this item should be shown with or without VAT.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Price Includes VAT";
                ImplicitType=Boolean }

    { 10  ;2   ;Field     ;
                Name=Price/Profit Calculation;
                ToolTipML=ENU=Specifies the relationship between the Unit Cost, Unit Price, and Profit Percentage fields associated with this item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Price/Profit Calculation";
                ImplicitType=Option }

    { 11  ;2   ;Field     ;
                Name=Profit %;
                ToolTipML=ENU=Specifies the profit margin that you want to sell the item at. You can enter a profit percentage manually or have it entered according to the Price/Profit Calculation field;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Profit %";
                ImplicitType=Decimal }

    { 9   ;2   ;Field     ;
                Name=Allow Invoice Disc.;
                ToolTipML=ENU=Specifies if the item should be included in the calculation of an invoice discount on documents where the item is traded.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Allow Invoice Disc.";
                ImplicitType=Boolean }

    { 8   ;2   ;Field     ;
                Name=Item Disc. Group;
                ToolTipML=ENU=Specifies an item group code that can be used as a criterion to grant a discount when the item is sold to a certain customer.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item Disc. Group";
                ImplicitType=Code20 }

    { 20  ;1   ;Group     ;
                Name=Cost;
                CaptionML=ENU=Cost;
                GroupType=Group }

    { 12  ;2   ;Field     ;
                Name=Costing Method;
                ToolTipML=ENU=Specifies links between business transactions made for this item and the general ledger, to account for VAT amounts that result from trade with the item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Costing Method";
                ImplicitType=Option }

    { 13  ;2   ;Field     ;
                Name=Indirect Cost %;
                ToolTipML=ENU=Specifies the percentage of the item's last purchase cost that includes indirect costs, such as freight that is associated with the purchase of the item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Indirect Cost %";
                ImplicitType=Decimal }

    { 19  ;1   ;Group     ;
                Name=Financial Details;
                CaptionML=ENU=Financial Details;
                GroupType=Group }

    { 15  ;2   ;Field     ;
                Name=Gen. Prod. Posting Group;
                ToolTipML=ENU=Specifies the item's product type to link transactions made for this item with the appropriate general ledger account according to the general posting setup.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Gen. Prod. Posting Group";
                ImplicitType=Code20 }

    { 17  ;2   ;Field     ;
                Name=VAT Prod. Posting Group;
                ToolTipML=ENU=Specifies the VAT product posting group. Links business transactions made for the item, resource, or G/L account with the general ledger, to account for VAT amounts resulting from trade with that record.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Prod. Posting Group";
                ImplicitType=Code20 }

    { 7   ;2   ;Field     ;
                Name=Inventory Posting Group;
                ToolTipML=ENU=Specifies links between business transactions made for the item and an inventory account in the general ledger, to group amounts for that item type.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Inventory Posting Group";
                Editable=InventoryPostingGroupEditable;
                ImplicitType=Code20 }

    { 27  ;2   ;Field     ;
                Name=Tax Group Code;
                ToolTipML=ENU=Specifies the tax group code for the tax-detail entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Group Code";
                ImplicitType=Code20 }

    { 25  ;1   ;Group     ;
                Name=Categorization;
                CaptionML=ENU=Categorization;
                GroupType=Group }

    { 26  ;2   ;Field     ;
                Name=Item Category Code;
                ToolTipML=ENU=Specifies the category that the item belongs to. Item categories also contain any assigned item attributes.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item Category Code";
                ImplicitType=Code20 }

    { 28  ;2   ;Field     ;
                Name=Service Item Group;
                ToolTipML=ENU=Specifies the code of the service item group that the item belongs to.;
                ApplicationArea=#Service;
                SourceExpr="Service Item Group";
                ImplicitType=Code10 }

    { 29  ;2   ;Field     ;
                Name=Warehouse Class Code;
                ToolTipML=ENU=Specifies the warehouse class code for the item.;
                ApplicationArea=#Warehouse;
                SourceExpr="Warehouse Class Code";
                ImplicitType=Code10 }

  }
  CODE
  {
    VAR
      Item@1003 : Record Item;
      InventoryPostingGroupEditable@1000 : Boolean INDATASET;
      DimensionsEnabled@1001 : Boolean INDATASET;
      ProvideTemplateNameErr@1002 : TextConst '@@@=%1 Template Name;ENU=You must enter a %1.';
      TemplateEnabled@1004 : Boolean;

    [External]
    PROCEDURE SetInventoryPostingGroupEditable@1();
    BEGIN
      InventoryPostingGroupEditable := Type = Type::Inventory;
    END;

    LOCAL PROCEDURE SetDimensionsEnabled@4();
    BEGIN
      DimensionsEnabled := "Template Name" <> '';
    END;

    LOCAL PROCEDURE SetTemplateEnabled@5();
    VAR
      ConfigTemplateHeader@1000 : Record "Config. Template Header";
    BEGIN
      TemplateEnabled := ConfigTemplateHeader.GET(Code) and ConfigTemplateHeader.Enabled;
    END;

    LOCAL PROCEDURE CheckTemplateNameProvided@2();
    BEGIN
      if "Template Name" = '' then
        ERROR(STRSUBSTNO(ProvideTemplateNameErr,FIELDCAPTION("Template Name")));
    END;

    [External]
    PROCEDURE CreateFromItem@3(FromItem@1000 : Record Item);
    BEGIN
      Item := FromItem;
    END;

    LOCAL PROCEDURE SetCostingMethodDefault@6();
    VAR
      ConfigTemplateLine@1000 : Record "Config. Template Line";
      InventorySetup@1001 : Record "Inventory Setup";
    BEGIN
      if Item."No." <> '' then
        exit;

      ConfigTemplateLine.SETRANGE("Data Template Code",Code);
      ConfigTemplateLine.SETRANGE("Table ID",DATABASE::Item);
      ConfigTemplateLine.SETRANGE("Field ID",Item.FIELDNO("Costing Method"));
      if ConfigTemplateLine.ISEMPTY and InventorySetup.GET then
        "Costing Method" := InventorySetup."Default Costing Method";
    END;

    BEGIN
    END.
  }
}

