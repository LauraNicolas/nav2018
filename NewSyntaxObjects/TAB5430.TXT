OBJECT Table 5430 Planning Error Log
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Planning Error Log;
    LookupPageID="Planning Error Log";
    DrillDownPageID="Planning Error Log";
  }
  FIELDS
  {
    { 1   ;   ;Worksheet Template Name;Code10     ;TableRelation="Req. Wksh. Template";
                                                   CaptionML=ENU=Worksheet Template Name }
    { 2   ;   ;Journal Batch Name  ;Code10        ;TableRelation="Requisition Wksh. Name".Name WHERE ("Worksheet Template Name"=FIELD("Worksheet Template Name"));
                                                   CaptionML=ENU=Journal Batch Name }
    { 3   ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No. }
    { 4   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=ENU=Item No. }
    { 5   ;   ;Error Description   ;Text250       ;CaptionML=ENU=Error Description }
    { 6   ;   ;Table ID            ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE ("Object Type"=CONST(Table));
                                                   CaptionML=ENU=Table ID }
    { 7   ;   ;Table Position      ;Text250       ;CaptionML=ENU=Table Position }
  }
  KEYS
  {
    {    ;"Worksheet Template Name","Journal Batch Name","Entry No.";
                                                   Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE Caption@5() : Text[100];
    VAR
      ReqWkshName@1000 : Record "Requisition Wksh. Name";
    BEGIN
      case true of
        GETFILTERS = '':
          exit('');
        not ReqWkshName.GET("Worksheet Template Name","Journal Batch Name"):
          exit('');
        else
          exit(STRSUBSTNO('%1 %2',"Journal Batch Name",ReqWkshName.Description));
      end;
    END;

    [External]
    PROCEDURE SetJnlBatch@1(WkshTemplName@1000 : Code[10];JnlBatchName@1001 : Code[10];ItemNo@1002 : Code[20]);
    BEGIN
      SETRANGE("Worksheet Template Name",WkshTemplName);
      SETRANGE("Journal Batch Name",JnlBatchName);
      if FIND('+') then;
      "Worksheet Template Name" := WkshTemplName;
      "Journal Batch Name" := JnlBatchName;
      "Item No." := ItemNo;
    END;

    [External]
    PROCEDURE SetError@40(TheError@1000 : Text[250];TheTableID@1002 : Integer;TheTablePosition@1003 : Text[250]);
    BEGIN
      "Entry No." := "Entry No." + 1;
      "Error Description" := TheError;
      "Table ID" := TheTableID;
      "Table Position" := TheTablePosition;
      INSERT;
    END;

    [External]
    PROCEDURE GetError@47(VAR PlanningErrorLog@1000 : Record "Planning Error Log") : Boolean;
    BEGIN
      if not FIND('-') then
        exit(false);
      DELETE;
      PlanningErrorLog.SETRANGE("Worksheet Template Name","Worksheet Template Name");
      PlanningErrorLog.SETRANGE("Journal Batch Name","Journal Batch Name");
      if PlanningErrorLog.FIND('+') then
        "Entry No." := PlanningErrorLog."Entry No." + 1;

      PlanningErrorLog := Rec;
      PlanningErrorLog.INSERT;
      exit(true);
    END;

    [Internal]
    PROCEDURE ShowError@2();
    VAR
      NoSeries@1012 : Record "No. Series";
      Item@1010 : Record Item;
      SKU@1013 : Record "Stockkeeping Unit";
      MfgSetup@1009 : Record "Manufacturing Setup";
      Vendor@1008 : Record Vendor;
      Currency@1007 : Record Currency;
      ProdBOMHeader@1006 : Record "Production BOM Header";
      ProdBOMVersion@1005 : Record "Production BOM Version";
      RtngHeader@1004 : Record "Routing Header";
      RtngVersion@1003 : Record "Routing Version";
      WorkCenter@1002 : Record "Work Center";
      MachCenter@1001 : Record "Machine Center";
      RecRef@1000 : RecordRef;
    BEGIN
      if "Table ID" = 0 then
        exit;

      RecRef.OPEN("Table ID");
      RecRef.SETPOSITION("Table Position");

      case "Table ID" of
        DATABASE::Item:
          begin
            RecRef.SETTABLE(Item);
            Item.SETRECFILTER;
            PAGE.RUNMODAL(PAGE::"Item Card",Item);
          end;
        DATABASE::"Stockkeeping Unit":
          begin
            RecRef.SETTABLE(SKU);
            SKU.SETRECFILTER;
            PAGE.RUNMODAL(PAGE::"Stockkeeping Unit Card",SKU);
          end;
        DATABASE::Currency:
          begin
            RecRef.SETTABLE(Currency);
            Currency.SETRECFILTER;
            PAGE.RUNMODAL(PAGE::Currencies,Currency);
          end;
        DATABASE::Vendor:
          begin
            RecRef.SETTABLE(Vendor);
            Vendor.SETRECFILTER;
            PAGE.RUNMODAL(PAGE::"Vendor Card",Vendor);
          end;
        DATABASE::"No. Series":
          begin
            RecRef.SETTABLE(NoSeries);
            NoSeries.SETRECFILTER;
            PAGE.RUNMODAL(PAGE::"No. Series",NoSeries);
          end;
        DATABASE::"Production BOM Header":
          begin
            RecRef.SETTABLE(ProdBOMHeader);
            ProdBOMHeader.SETRECFILTER;
            PAGE.RUNMODAL(PAGE::"Production BOM",ProdBOMHeader);
          end;
        DATABASE::"Routing Header":
          begin
            RecRef.SETTABLE(RtngHeader);
            RtngHeader.SETRECFILTER;
            PAGE.RUNMODAL(PAGE::Routing,RtngHeader);
          end;
        DATABASE::"Production BOM Version":
          begin
            RecRef.SETTABLE(ProdBOMVersion);
            ProdBOMVersion.SETRECFILTER;
            PAGE.RUNMODAL(PAGE::"Production BOM Version",ProdBOMVersion);
          end;
        DATABASE::"Routing Version":
          begin
            RecRef.SETTABLE(RtngVersion);
            RtngVersion.SETRECFILTER;
            PAGE.RUNMODAL(PAGE::"Routing Version",RtngVersion);
          end;
        DATABASE::"Machine Center":
          begin
            RecRef.SETTABLE(MachCenter);
            MachCenter.SETRECFILTER;
            PAGE.RUNMODAL(PAGE::"Machine Center Card",MachCenter);
          end;
        DATABASE::"Work Center":
          begin
            RecRef.SETTABLE(WorkCenter);
            WorkCenter.SETRECFILTER;
            PAGE.RUNMODAL(PAGE::"Work Center Card",WorkCenter);
          end;
        DATABASE::"Manufacturing Setup":
          begin
            RecRef.SETTABLE(MfgSetup);
            PAGE.RUNMODAL(0,MfgSetup);
          end;
        DATABASE::"Transfer Route":
          PAGE.RUNMODAL(PAGE::"Transfer Routes");
      end;
    END;

    BEGIN
    END.
  }
}

