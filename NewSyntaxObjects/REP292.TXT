OBJECT Report 292 Copy Sales Document
{
  OBJECT-PROPERTIES
  {
    Date=20161025D;
    Time=120000T;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Copy Sales Document;
    ProcessingOnly=true;
    OnPreReport=BEGIN
                  SalesSetup.GET;
                  CopyDocMgt.SetProperties(
                    IncludeHeader,RecalculateLines,false,false,false,SalesSetup."Exact Cost Reversing Mandatory",false);
                  CopyDocMgt.CopySalesDoc(DocType,DocNo,SalesHeader)
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnOpenPage=BEGIN
                   if DocNo <> '' then begin
                     case DocType of
                       DocType::Quote:
                         if FromSalesHeader.GET(FromSalesHeader."Document Type"::Quote,DocNo) then;
                       DocType::"Blanket Order":
                         if FromSalesHeader.GET(FromSalesHeader."Document Type"::"Blanket Order",DocNo) then;
                       DocType::Order:
                         if FromSalesHeader.GET(FromSalesHeader."Document Type"::Order,DocNo) then;
                       DocType::Invoice:
                         if FromSalesHeader.GET(FromSalesHeader."Document Type"::Invoice,DocNo) then;
                       DocType::"Return Order":
                         if FromSalesHeader.GET(FromSalesHeader."Document Type"::"Return Order",DocNo) then;
                       DocType::"Credit Memo":
                         if FromSalesHeader.GET(FromSalesHeader."Document Type"::"Credit Memo",DocNo) then;
                       DocType::"Posted Shipment":
                         if FromSalesShptHeader.GET(DocNo) then
                           FromSalesHeader.TRANSFERFIELDS(FromSalesShptHeader);
                       DocType::"Posted Invoice":
                         if FromSalesInvHeader.GET(DocNo) then
                           FromSalesHeader.TRANSFERFIELDS(FromSalesInvHeader);
                       DocType::"Posted Return Receipt":
                         if FromReturnRcptHeader.GET(DocNo) then
                           FromSalesHeader.TRANSFERFIELDS(FromReturnRcptHeader);
                       DocType::"Posted Credit Memo":
                         if FromSalesCrMemoHeader.GET(DocNo) then
                           FromSalesHeader.TRANSFERFIELDS(FromSalesCrMemoHeader);
                     end;
                     if FromSalesHeader."No." = '' then
                       DocNo := '';
                   end;
                   ValidateDocNo;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 3   ;2   ;Field     ;
                  Name=DocumentType;
                  CaptionML=ENU=Document Type;
                  ToolTipML=ENU=Specifies the type of document that is processed by the report or batch job.;
                  OptionCaptionML=ENU=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo;
                  ApplicationArea=#Suite;
                  SourceExpr=DocType;
                  OnValidate=BEGIN
                               DocNo := '';
                               ValidateDocNo;
                             END;
                              }

      { 8   ;2   ;Field     ;
                  Name=DocumentNo;
                  CaptionML=ENU=Document No.;
                  ToolTipML=ENU=Specifies the number of the document that is processed by the report or batch job.;
                  ApplicationArea=#Suite;
                  SourceExpr=DocNo;
                  OnValidate=BEGIN
                               ValidateDocNo;
                             END;

                  OnLookup=BEGIN
                             LookupDocNo;
                           END;
                            }

      { 5   ;2   ;Field     ;
                  Name=SellToCustNo;
                  CaptionML=ENU=Sell-to Customer No.;
                  ToolTipML=ENU=Specifies the sell-to customer number that will appear on the new sales document.;
                  ApplicationArea=#Suite;
                  SourceExpr=FromSalesHeader."Sell-to Customer No.";
                  Editable=FALSE }

      { 7   ;2   ;Field     ;
                  Name=SellToCustName;
                  CaptionML=ENU=Sell-to Customer Name;
                  ToolTipML=ENU=Specifies the sell-to customer name that will appear on the new sales document.;
                  ApplicationArea=#Suite;
                  SourceExpr=FromSalesHeader."Sell-to Customer Name";
                  Editable=FALSE }

      { 1   ;2   ;Field     ;
                  Name=IncludeHeader_Options;
                  CaptionML=ENU=Include Header;
                  ToolTipML=ENU=Specifies if you also want to copy the information from the document header. When you copy quotes, if the posting date field of the new document is empty, the work date is used as the posting date of the new document.;
                  ApplicationArea=#Suite;
                  SourceExpr=IncludeHeader;
                  OnValidate=BEGIN
                               ValidateIncludeHeader;
                             END;
                              }

      { 4   ;2   ;Field     ;
                  Name=RecalculateLines;
                  CaptionML=ENU=Recalculate Lines;
                  ToolTipML=ENU=Specifies that lines are recalculate and inserted on the sales document you are creating. The batch job retains the item numbers and item quantities but recalculates the amounts on the lines based on the customer information on the new document header. In this way, the batch job accounts for item prices and discounts that are specifically linked to the customer on the new header.;
                  ApplicationArea=#Suite;
                  SourceExpr=RecalculateLines;
                  OnValidate=BEGIN
                               if (DocType = DocType::"Posted Shipment") or (DocType = DocType::"Posted Return Receipt") then
                                 RecalculateLines := true;
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      SalesHeader@1007 : Record "Sales Header";
      FromSalesHeader@1010 : Record "Sales Header";
      FromSalesShptHeader@1012 : Record "Sales Shipment Header";
      FromSalesInvHeader@1014 : Record "Sales Invoice Header";
      FromReturnRcptHeader@1016 : Record "Return Receipt Header";
      FromSalesCrMemoHeader@1018 : Record "Sales Cr.Memo Header";
      SalesSetup@1003 : Record "Sales & Receivables Setup";
      CopyDocMgt@1008 : Codeunit "Copy Document Mgt.";
      DocType@1026 : 'Quote,"Blanket Order",Order,Invoice,"Return Order","Credit Memo","Posted Shipment","Posted Invoice","Posted Return Receipt","Posted Credit Memo"';
      DocNo@1027 : Code[20];
      IncludeHeader@1028 : Boolean;
      RecalculateLines@1029 : Boolean;
      Text000@1000 : TextConst 'ENU=The price information may not be reversed correctly, if you copy a %1. If possible copy a %2 instead or use %3 functionality.';
      Text001@1001 : TextConst 'ENU=Undo Shipment';
      Text002@1002 : TextConst 'ENU=Undo Return Receipt';
      Text003@1004 : TextConst 'ENU=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo';

    PROCEDURE SetSalesHeader@2(VAR NewSalesHeader@1000 : Record "Sales Header");
    BEGIN
      NewSalesHeader.TESTFIELD("No.");
      SalesHeader := NewSalesHeader;
    END;

    LOCAL PROCEDURE ValidateDocNo@10();
    VAR
      DocType2@1000 : 'Quote,"Blanket Order",Order,Invoice,"Return Order","Credit Memo","Posted Shipment","Posted Invoice","Posted Return Receipt","Posted Credit Memo"';
    BEGIN
      if DocNo = '' then
        FromSalesHeader.INIT
      else
        if FromSalesHeader."No." = '' then begin
          FromSalesHeader.INIT;
          case DocType of
            DocType::Quote,
            DocType::"Blanket Order",
            DocType::Order,
            DocType::Invoice,
            DocType::"Return Order",
            DocType::"Credit Memo":
              FromSalesHeader.GET(CopyDocMgt.SalesHeaderDocType(DocType),DocNo);
            DocType::"Posted Shipment":
              begin
                FromSalesShptHeader.GET(DocNo);
                FromSalesHeader.TRANSFERFIELDS(FromSalesShptHeader);
                if SalesHeader."Document Type" in
                   [SalesHeader."Document Type"::"Return Order",SalesHeader."Document Type"::"Credit Memo"]
                then begin
                  DocType2 := DocType2::"Posted Invoice";
                  MESSAGE(Text000,SELECTSTR(1 + DocType,Text003),SELECTSTR(1 + DocType2,Text003),Text001);
                end;
              end;
            DocType::"Posted Invoice":
              begin
                FromSalesInvHeader.GET(DocNo);
                FromSalesHeader.TRANSFERFIELDS(FromSalesInvHeader);
              end;
            DocType::"Posted Return Receipt":
              begin
                FromReturnRcptHeader.GET(DocNo);
                FromSalesHeader.TRANSFERFIELDS(FromReturnRcptHeader);
                if SalesHeader."Document Type" in
                   [SalesHeader."Document Type"::Order,SalesHeader."Document Type"::Invoice]
                then begin
                  DocType2 := DocType2::"Posted Credit Memo";
                  MESSAGE(Text000,SELECTSTR(1 + DocType,Text003),SELECTSTR(1 + DocType2,Text003),Text002);
                end;
              end;
            DocType::"Posted Credit Memo":
              begin
                FromSalesCrMemoHeader.GET(DocNo);
                FromSalesHeader.TRANSFERFIELDS(FromSalesCrMemoHeader);
              end;
          end;
        end;
      FromSalesHeader."No." := '';

      IncludeHeader :=
        (DocType in [DocType::"Posted Invoice",DocType::"Posted Credit Memo"]) and
        ((DocType = DocType::"Posted Credit Memo") <>
         (SalesHeader."Document Type" in
          [SalesHeader."Document Type"::"Return Order",SalesHeader."Document Type"::"Credit Memo"])) and
        (SalesHeader."Bill-to Customer No." in [FromSalesHeader."Bill-to Customer No.",'']);
      ValidateIncludeHeader;
    END;

    LOCAL PROCEDURE LookupDocNo@3();
    BEGIN
      case DocType of
        DocType::Quote,
        DocType::"Blanket Order",
        DocType::Order,
        DocType::Invoice,
        DocType::"Return Order",
        DocType::"Credit Memo":
          begin
            FromSalesHeader.FILTERGROUP := 0;
            FromSalesHeader.SETRANGE("Document Type",CopyDocMgt.SalesHeaderDocType(DocType));
            if SalesHeader."Document Type" = CopyDocMgt.SalesHeaderDocType(DocType) then
              FromSalesHeader.SETFILTER("No.",'<>%1',SalesHeader."No.");
            FromSalesHeader.FILTERGROUP := 2;
            FromSalesHeader."Document Type" := CopyDocMgt.SalesHeaderDocType(DocType);
            FromSalesHeader."No." := DocNo;
            if (DocNo = '') and (SalesHeader."Sell-to Customer No." <> '') then
              if FromSalesHeader.SETCURRENTKEY("Document Type","Sell-to Customer No.") then begin
                FromSalesHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                if FromSalesHeader.FIND('=><') then;
              end;
            if PAGE.RUNMODAL(0,FromSalesHeader) = ACTION::LookupOK then
              DocNo := FromSalesHeader."No.";
          end;
        DocType::"Posted Shipment":
          begin
            FromSalesShptHeader."No." := DocNo;
            if (DocNo = '') and (SalesHeader."Sell-to Customer No." <> '') then
              if FromSalesShptHeader.SETCURRENTKEY("Sell-to Customer No.") then begin
                FromSalesShptHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                if FromSalesShptHeader.FIND('=><') then;
              end;
            if PAGE.RUNMODAL(0,FromSalesShptHeader) = ACTION::LookupOK then
              DocNo := FromSalesShptHeader."No.";
          end;
        DocType::"Posted Invoice":
          begin
            FromSalesInvHeader."No." := DocNo;
            if (DocNo = '') and (SalesHeader."Sell-to Customer No." <> '') then
              if FromSalesInvHeader.SETCURRENTKEY("Sell-to Customer No.") then begin
                FromSalesInvHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                if FromSalesInvHeader.FIND('=><') then;
              end;
            FromSalesInvHeader.FILTERGROUP(2);
            FromSalesInvHeader.SETRANGE("Prepayment Invoice",false);
            FromSalesInvHeader.FILTERGROUP(0);
            if PAGE.RUNMODAL(0,FromSalesInvHeader) = ACTION::LookupOK then
              DocNo := FromSalesInvHeader."No.";
          end;
        DocType::"Posted Return Receipt":
          begin
            FromReturnRcptHeader."No." := DocNo;
            if (DocNo = '') and (SalesHeader."Sell-to Customer No." <> '') then
              if FromReturnRcptHeader.SETCURRENTKEY("Sell-to Customer No.") then begin
                FromReturnRcptHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                if FromReturnRcptHeader.FIND('=><') then;
              end;
            if PAGE.RUNMODAL(0,FromReturnRcptHeader) = ACTION::LookupOK then
              DocNo := FromReturnRcptHeader."No.";
          end;
        DocType::"Posted Credit Memo":
          begin
            FromSalesCrMemoHeader."No." := DocNo;
            if (DocNo = '') and (SalesHeader."Sell-to Customer No." <> '') then
              if FromSalesCrMemoHeader.SETCURRENTKEY("Sell-to Customer No.") then begin
                FromSalesCrMemoHeader."Sell-to Customer No." := SalesHeader."Sell-to Customer No.";
                if FromSalesCrMemoHeader.FIND('=><') then;
              end;
            FromSalesCrMemoHeader.FILTERGROUP(2);
            FromSalesCrMemoHeader.SETRANGE("Prepayment Credit Memo",false);
            FromSalesCrMemoHeader.FILTERGROUP(0);
            if PAGE.RUNMODAL(0,FromSalesCrMemoHeader) = ACTION::LookupOK then
              DocNo := FromSalesCrMemoHeader."No.";
          end;
      end;
      ValidateDocNo;
    END;

    LOCAL PROCEDURE ValidateIncludeHeader@4();
    BEGIN
      RecalculateLines :=
        (DocType in [DocType::"Posted Shipment",DocType::"Posted Return Receipt"]) or not IncludeHeader;
    END;

    PROCEDURE InitializeRequest@1(NewDocType@1001 : Option;NewDocNo@1000 : Code[20];NewIncludeHeader@1002 : Boolean;NewRecalcLines@1003 : Boolean);
    BEGIN
      DocType := NewDocType;
      DocNo := NewDocNo;
      IncludeHeader := NewIncludeHeader;
      RecalculateLines := NewRecalcLines;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

