OBJECT Report 5706 Create Stockkeeping Unit
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create Stockkeeping Unit;
    ProcessingOnly=true;
  }
  DATASET
  {
    { 8129;    ;DataItem;Item                ;
               DataItemTable=Item;
               DataItemTableView=SORTING("No.");
               OnPreDataItem=BEGIN
                               Location.SETRANGE("Use As In-Transit",false);

                               DialogWindow.OPEN(
                                 Text000 +
                                 Text001 +
                                 Text002);

                               SaveFilters := true;
                             END;

               OnAfterGetRecord=VAR
                                  ItemVariant@1000 : Record "Item Variant";
                                BEGIN
                                  if SaveFilters then begin
                                    LocationFilter := GETFILTER("Location Filter");
                                    VariantFilter := GETFILTER("Variant Filter");
                                    SaveFilters := false;
                                  end;
                                  SETFILTER("Location Filter",LocationFilter);
                                  SETFILTER("Variant Filter",VariantFilter);

                                  Location.SETFILTER(Code,GETFILTER("Location Filter"));

                                  if ReplacePreviousSKUs then begin
                                    StockkeepingUnit.RESET;
                                    StockkeepingUnit.SETRANGE("Item No.","No.");
                                    if GETFILTER("Variant Filter") <> '' then
                                      StockkeepingUnit.SETFILTER("Variant Code",GETFILTER("Variant Filter"));
                                    if GETFILTER("Location Filter") <> '' then
                                      StockkeepingUnit.SETFILTER("Location Code",GETFILTER("Location Filter"));
                                    StockkeepingUnit.DELETEALL;
                                  end;

                                  DialogWindow.UPDATE(1,"No.");
                                  ItemVariant.SETRANGE("Item No.","No.");
                                  ItemVariant.SETFILTER(Code,GETFILTER("Variant Filter"));
                                  case true of
                                    (SKUCreationMethod = SKUCreationMethod::Location) or
                                    ((SKUCreationMethod = SKUCreationMethod::"Location & Variant") and
                                     (not ItemVariant.FIND('-'))):
                                      begin
                                        if Location.FIND('-') then
                                          repeat
                                            DialogWindow.UPDATE(2,Location.Code);
                                            SETRANGE("Location Filter",Location.Code);
                                            CreateSKU(Item,Location.Code,'');
                                          until Location.NEXT = 0;
                                      end;
                                    (SKUCreationMethod = SKUCreationMethod::Variant) or
                                    ((SKUCreationMethod = SKUCreationMethod::"Location & Variant") and
                                     (not Location.FIND('-'))):
                                      begin
                                        if ItemVariant.FIND('-') then
                                          repeat
                                            DialogWindow.UPDATE(3,ItemVariant.Code);
                                            SETRANGE("Variant Filter",ItemVariant.Code);
                                            CreateSKU(Item,'',ItemVariant.Code);
                                          until ItemVariant.NEXT = 0;
                                      end;
                                    (SKUCreationMethod = SKUCreationMethod::"Location & Variant"):
                                      begin
                                        if Location.FIND('-') then
                                          repeat
                                            DialogWindow.UPDATE(2,Location.Code);
                                            SETRANGE("Location Filter",Location.Code);
                                            if ItemVariant.FIND('-') then
                                              repeat
                                                DialogWindow.UPDATE(3,ItemVariant.Code);
                                                SETRANGE("Variant Filter",ItemVariant.Code);
                                                CreateSKU(Item,Location.Code,ItemVariant.Code);
                                              until ItemVariant.NEXT = 0;
                                          until Location.NEXT = 0;
                                      end;
                                  end;
                                END;

               OnPostDataItem=BEGIN
                                DialogWindow.CLOSE;
                              END;

               ReqFilterFields="No.","Inventory Posting Group","Location Filter","Variant Filter" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnOpenPage=BEGIN
                   ReplacePreviousSKUs := false;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 3   ;2   ;Field     ;
                  Name=Create Per;
                  CaptionML=ENU=Create Per;
                  ToolTipML=ENU=Specifies if you want to create stockkeeping units per location or per variant or per location combined with variant.;
                  OptionCaptionML=ENU=Location,Variant,Location & Variant;
                  ApplicationArea=#Location;
                  SourceExpr=SKUCreationMethod }

      { 1   ;2   ;Field     ;
                  Name=Item In Inventory Only;
                  CaptionML=ENU=Item In Inventory Only;
                  ToolTipML=ENU=Specifies if you only want the batch job to create stockkeeping units for items that are in your inventory (that is, for items where the value in the Inventory field is above 0).;
                  ApplicationArea=#Location;
                  SourceExpr=ItemInInventoryOnly }

      { 7   ;2   ;Field     ;
                  Name=Replace Previous SKUs;
                  CaptionML=ENU=Replace Previous SKUs;
                  ToolTipML=ENU=Specifies if you want the batch job to replace all previous created stockkeeping units on the items you have included in the batch job.;
                  ApplicationArea=#Warehouse;
                  SourceExpr=ReplacePreviousSKUs }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Item No.       #1##################\';
      Text001@1001 : TextConst 'ENU=Location Code  #2########\';
      Text002@1002 : TextConst 'ENU=Variant Code   #3########\';
      StockkeepingUnit@1003 : Record "Stockkeeping Unit";
      Location@1004 : Record Location;
      DialogWindow@1008 : Dialog;
      SKUCreationMethod@1005 : 'Location,Variant,"Location & Variant"';
      ItemInInventoryOnly@1006 : Boolean;
      ReplacePreviousSKUs@1007 : Boolean;
      SaveFilters@1009 : Boolean;
      LocationFilter@1010 : Code[1024];
      VariantFilter@1011 : Code[1024];

    LOCAL PROCEDURE CreateSKU@26(VAR Item2@1000 : Record Item;LocationCode@1001 : Code[10];VariantCode@1002 : Code[10]);
    BEGIN
      Item2.CALCFIELDS(Inventory);
      if (ItemInInventoryOnly and (Item2.Inventory > 0)) or
         (not ItemInInventoryOnly)
      then
        if not StockkeepingUnit.GET(LocationCode,Item2."No.",VariantCode) then begin
          StockkeepingUnit.INIT;
          StockkeepingUnit."Item No." := Item2."No.";
          StockkeepingUnit."Location Code" := LocationCode;
          StockkeepingUnit."Variant Code" := VariantCode;
          StockkeepingUnit.CopyFromItem(Item2);
          StockkeepingUnit."Last Date Modified" := WORKDATE;
          StockkeepingUnit."Special Equipment Code" := Item2."Special Equipment Code";
          StockkeepingUnit."Put-away Template Code" := Item2."Put-away Template Code";
          StockkeepingUnit.SetHideValidationDialog(true);
          StockkeepingUnit.VALIDATE("Phys Invt Counting Period Code",Item2."Phys Invt Counting Period Code");
          StockkeepingUnit."Put-away Unit of Measure Code" := Item2."Put-away Unit of Measure Code";
          StockkeepingUnit."Use Cross-Docking" := Item2."Use Cross-Docking";
          StockkeepingUnit.INSERT(true);
        end;
    END;

    PROCEDURE InitializeRequest@1(CreatePerOption@1000 : 'Location,Variant,"Location & Variant"';NewItemInInventoryOnly@1001 : Boolean;NewReplacePreviousSKUs@1002 : Boolean);
    BEGIN
      SKUCreationMethod := CreatePerOption;
      ItemInInventoryOnly := NewItemInInventoryOnly;
      ReplacePreviousSKUs := NewReplacePreviousSKUs;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

