OBJECT Page 5489 Dimension Lines Entity
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=[@@@={Locked};
               ENU=dimensionLines];
    SourceTable="Dimension Set Entry Buffer";
    DelayedInsert=true;
    PageType=API;
    SourceTableTemporary=true;
    OnFindRecord=VAR
                   ParentIdFilter@1001 : Text;
                 BEGIN
                   ParentIdFilter := GETFILTER("Parent Id");
                   if ParentIdFilter = '' then
                     ERROR(ParentIDNotSpecifiedErr);
                   exit(LoadLinesFromFilter(ParentIdFilter));
                 END;

    OnAfterGetRecord=BEGIN
                       SetCalculatedFields;
                     END;

    OnNewRecord=BEGIN
                  ClearCalculatedFields;
                END;

    OnInsertRecord=VAR
                     DimensionId@1002 : GUID;
                     BlankGUID@1001 : GUID;
                   BEGIN
                     if "Parent Id" = BlankGUID then
                       ERROR(ParentIDRequiredErr);

                     CheckIfValuesAreProperlyFilled;
                     AssignDimensionValueToRecord;

                     DimensionId := "Dimension Id";
                     INSERT(true);

                     LoadLinesFromFilter("Parent Id");
                     SaveDimensions;

                     LoadLinesFromFilter("Parent Id");
                     GET("Parent Id",DimensionId);
                     SetCalculatedFields;

                     exit(false);
                   END;

    OnModifyRecord=VAR
                     DimensionId@1000 : GUID;
                   BEGIN
                     EVALUATE(DimensionId,GETFILTER("Dimension Id"));
                     if "Dimension Id" <> DimensionId then
                       ERROR(IdAndCodeCannotBeModifiedErr);

                     AssignDimensionValueToRecord;
                     MODIFY(true);

                     SaveDimensions;
                     LoadLinesFromFilter(GETFILTER("Parent Id"));
                     GET("Parent Id",DimensionId);
                     SetCalculatedFields;

                     exit(false);
                   END;

    OnDeleteRecord=BEGIN
                     DELETE(true);
                     SaveDimensions;
                     exit(false);
                   END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 9   ;2   ;Field     ;
                Name=parentId;
                CaptionML=[@@@={Locked};
                           ENU=ParentId];
                ApplicationArea=#All;
                SourceExpr="Parent Id";
                ImplicitType=GUID }

    { 7   ;2   ;Field     ;
                Name=id;
                CaptionML=[@@@={Locked};
                           ENU=Id];
                ApplicationArea=#All;
                SourceExpr="Dimension Id";
                OnValidate=BEGIN
                             GlobalDimension.SETRANGE(Id,"Dimension Id");
                             if not GlobalDimension.FINDFIRST then
                               ERROR(DimensionIdDoesNotMatchADimensionErr);

                             "Dimension Code" := GlobalDimension.Code;
                           END;

                ImplicitType=GUID }

    { 3   ;2   ;Field     ;
                Name=code;
                CaptionML=[@@@={Locked};
                           ENU=Code];
                ApplicationArea=#All;
                SourceExpr="Dimension Code";
                OnValidate=BEGIN
                             if GlobalDimension.Code <> '' then begin
                               if GlobalDimension.Code <> "Dimension Code" then
                                 ERROR(DimensionFieldsDontMatchErr);
                               exit;
                             end;

                             if not GlobalDimension.GET("Dimension Code") then
                               ERROR(DimensionCodeDoesNotMatchADimensionErr);

                             "Dimension Id" := GlobalDimension.Id;
                           END;

                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name=displayName;
                CaptionML=[@@@={Locked};
                           ENU=DisplayName];
                ApplicationArea=#All;
                SourceExpr="Dimension Name";
                ImplicitType=Text30 }

    { 4   ;2   ;Field     ;
                Name=valueId;
                CaptionML=[@@@={Locked};
                           ENU=ValueId];
                ToolTipML=ENU=Specifies the ID of the Dimension value.;
                ApplicationArea=#All;
                SourceExpr=GlobalDimensionValueId;
                OnValidate=BEGIN
                             GlobalDimensionValue.SETRANGE(Id,GlobalDimensionValueId);
                             if not GlobalDimensionValue.FINDFIRST then
                               ERROR(DimensionValueIdDoesNotMatchADimensionValueErr);

                             GlobalDimensionValueCode := GlobalDimensionValue.Code;
                           END;

                ImplicitType=GUID }

    { 5   ;2   ;Field     ;
                Name=valueCode;
                CaptionML=[@@@={Locked};
                           ENU=ValueCode];
                ToolTipML=ENU=Specifies the Code of the Dimension value.;
                ApplicationArea=#All;
                SourceExpr=GlobalDimensionValueCode;
                OnValidate=BEGIN
                             if GlobalDimensionValue.Code <> '' then begin
                               if GlobalDimensionValue.Code <> GlobalDimensionValueCode then
                                 ERROR(DimensionValueFieldsDontMatchErr);
                               exit;
                             end;

                             if not GlobalDimensionValue.GET("Dimension Code",GlobalDimensionValueCode) then
                               ERROR(DimensionValueCodeDoesNotMatchADimensionValueErr);

                             GlobalDimensionValueId := GlobalDimensionValue.Id;
                           END;

                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name=valueDisplayName;
                CaptionML=[@@@={Locked};
                           ENU=ValueDisplayName];
                ApplicationArea=#All;
                SourceExpr="Dimension Value Name";
                ImplicitType=Text50 }

  }
  CODE
  {
    VAR
      GlobalDimension@1004 : Record Dimension;
      GlobalDimensionValue@1005 : Record "Dimension Value";
      GlobalDimensionValueId@1015 : GUID;
      GlobalDimensionValueCode@1016 : Code[20];
      LinesLoaded@1002 : Boolean;
      ParentIDNotSpecifiedErr@1017 : TextConst '@@@={Locked};ENU=You must specify a parent id to get the lines.';
      ParentIDRequiredErr@1018 : TextConst '@@@={Locked};ENU=The parent ID must be filled in.';
      IdOrCodeShouldBeFilledErr@1013 : TextConst '@@@={Locked};ENU=The ID or Code field must be filled in.';
      ValueIdOrValueCodeShouldBeFilledErr@1012 : TextConst '@@@={Locked};ENU=The valueId or valueCode field must be filled in.';
      IdAndCodeCannotBeModifiedErr@1014 : TextConst '@@@={Locked};ENU=The ID and Code fields cannot be modified.';
      RecordDoesntExistErr@1000 : TextConst '@@@={Locked};ENU=Could not find the record.';
      RecordWasDeletedErr@1001 : TextConst '@@@={Locked};ENU=The record was deleted.';
      WrongEntityErr@1003 : TextConst '@@@={Locked};ENU=Dimension Lines do not exist for the Entity with that Id.';
      DimensionFieldsDontMatchErr@1008 : TextConst '@@@={Locked};ENU=The dimension field values do not match to a specific Dimension.';
      DimensionIdDoesNotMatchADimensionErr@1007 : TextConst '@@@={Locked};ENU=The "id" does not match to a Dimension.';
      DimensionCodeDoesNotMatchADimensionErr@1006 : TextConst '@@@={Locked};ENU=The "code" does not match to a Dimension.';
      DimensionValueFieldsDontMatchErr@1011 : TextConst '@@@={Locked};ENU=The values of the Dimension Code field and the Dimension ID field do not refer to the same Dmension Value.';
      DimensionValueIdDoesNotMatchADimensionValueErr@1010 : TextConst '@@@={Locked};ENU=The "valueId" does not match to a Dimension Value.';
      DimensionValueCodeDoesNotMatchADimensionValueErr@1009 : TextConst '@@@={Locked};ENU=The "valueCode" does not match to a Dimension Value.';

    LOCAL PROCEDURE LoadLinesFromFilter@8(ParentIdFilter@1002 : Text) : Boolean;
    VAR
      FilterView@1000 : Text;
    BEGIN
      if not LinesLoaded then begin
        FilterView := GETVIEW;
        LoadLinesFromId(ParentIdFilter);
        SETVIEW(FilterView);
        if not FINDFIRST then
          exit(false);
        LinesLoaded := true;
      end;

      exit(true);
    END;

    LOCAL PROCEDURE LoadLinesFromId@24(IntegrationId@1000 : Text);
    VAR
      TempDimensionSetEntry@1008 : TEMPORARY Record "Dimension Set Entry";
      DimensionManagement@1007 : Codeunit DimensionManagement;
      DimensionSetId@1001 : Integer;
    BEGIN
      DimensionSetId := GetSetId(IntegrationId);
      if DimensionSetId = 0 then
        exit;

      TempDimensionSetEntry.SETAUTOCALCFIELDS("Dimension Name","Dimension Value Name");
      DimensionManagement.GetDimensionSet(TempDimensionSetEntry,DimensionSetId);

      if not TempDimensionSetEntry.FIND('-') then
        exit;

      repeat
        CLEAR(Rec);
        TRANSFERFIELDS(TempDimensionSetEntry,true);
        "Parent Id" := IntegrationId;
        INSERT(true);
      until TempDimensionSetEntry.NEXT = 0;
    END;

    LOCAL PROCEDURE GetSetId@12(IntegrationId@1000 : Text) : Integer;
    VAR
      IntegrationRecord@1001 : Record "Integration Record";
      GenJournalLine@1005 : Record "Gen. Journal Line";
      DummyRecordId@1004 : RecordID;
    BEGIN
      if not IntegrationRecord.GET(IntegrationId) then
        ERROR(RecordDoesntExistErr);

      if FORMAT(IntegrationRecord."Record ID") = FORMAT(DummyRecordId) then
        ERROR(RecordWasDeletedErr);

      case IntegrationRecord."Table ID" of
        DATABASE::"Gen. Journal Line":
          begin
            GenJournalLine.GET(IntegrationRecord."Record ID");
            exit(GenJournalLine."Dimension Set ID");
          end;
        else
          ERROR(WrongEntityErr);
      end;
    END;

    LOCAL PROCEDURE SaveDimensions@1();
    VAR
      TempDimensionSetEntry@1000 : TEMPORARY Record "Dimension Set Entry";
      IntegrationRecord@1001 : Record "Integration Record";
      GenJournalLine@1003 : Record "Gen. Journal Line";
      DimensionManagement@1004 : Codeunit DimensionManagement;
    BEGIN
      IntegrationRecord.GET("Parent Id");

      RESET;
      if FINDFIRST then
        repeat
          TempDimensionSetEntry.TRANSFERFIELDS(Rec,true);
          TempDimensionSetEntry."Dimension Set ID" := 0;
          TempDimensionSetEntry.INSERT(true);
        until NEXT = 0;

      case IntegrationRecord."Table ID" of
        DATABASE::"Gen. Journal Line":
          begin
            GenJournalLine.GET(IntegrationRecord."Record ID");
            GenJournalLine."Dimension Set ID" := DimensionManagement.GetDimensionSetID(TempDimensionSetEntry);
            DimensionManagement.UpdateGlobalDimFromDimSetID(
              GenJournalLine."Dimension Set ID",GenJournalLine."Shortcut Dimension 1 Code",GenJournalLine."Shortcut Dimension 2 Code");
            GenJournalLine.MODIFY(true);
          end;
        else
          ERROR(WrongEntityErr);
      end;
    END;

    LOCAL PROCEDURE CheckIfValuesAreProperlyFilled@19();
    BEGIN
      if "Dimension Code" = '' then
        ERROR(IdOrCodeShouldBeFilledErr);

      if ISNULLGUID(GlobalDimensionValueId) and
         (GlobalDimensionValueCode = '')
      then
        ERROR(ValueIdOrValueCodeShouldBeFilledErr);
    END;

    LOCAL PROCEDURE AssignDimensionValueToRecord@2();
    BEGIN
      if not ISNULLGUID(GlobalDimensionValueId) then
        VALIDATE("Value Id",GlobalDimensionValueId);

      if GlobalDimensionValueCode <> '' then
        VALIDATE("Dimension Value Code",GlobalDimensionValueCode);
    END;

    LOCAL PROCEDURE SetCalculatedFields@21();
    BEGIN
      GlobalDimensionValueId := "Value Id";
      GlobalDimensionValueCode := "Dimension Value Code";
    END;

    LOCAL PROCEDURE ClearCalculatedFields@5();
    BEGIN
      CLEAR(GlobalDimensionValueId);
      CLEAR(GlobalDimensionValueCode);
    END;

    BEGIN
    END.
  }
}

