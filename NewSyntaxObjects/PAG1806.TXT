OBJECT Page 1806 Exchange Setup Wizard
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Office Add-In Setup;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable="Office Add-in";
    PageType=NavigatePage;
    SourceTableTemporary=true;
    ShowFilter=false;
    OnInit=VAR
             User@1000 : Record User;
           BEGIN
             User.SETRANGE("User Name",USERID);
             if User.FINDFIRST then
               Email := User."Authentication Email";

             LoadTopBanners;
             CredentialsRequired := (Email = '') or ExchangeAddinSetup.CredentialsRequired(Email);
             EmailIsHostedO365 := true;
           END;

    OnOpenPage=BEGIN
                 ShowIntroStep;
               END;

    OnQueryClosePage=VAR
                       AssistedSetup@1000 : Record "Assisted Setup";
                     BEGIN
                       if CloseAction = ACTION::OK then
                         if AssistedSetup.GetStatus(PAGE::"Exchange Setup Wizard") = AssistedSetup.Status::"Not Completed" then
                           if not CONFIRM(NAVNotSetUpQst,false) then
                             ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 9       ;    ;ActionContainer;
                      Name=ActionContainer9;
                      ActionContainerType=ActionItems }
      { 12      ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=BackEnabled;
                      InFooterBar=true;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(true);
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NextEnabled;
                      InFooterBar=true;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 if Step = Step::Credentials then
                                   ValidateCredentials;
                                 NextStep(false);
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FinishEnabled;
                      InFooterBar=true;
                      Image=Approve;
                      OnAction=VAR
                                 AssistedSetup@1004 : Record "Assisted Setup";
                               BEGIN
                                 DeployToExchange;
                                 AssistedSetup.SetStatus(PAGE::"Exchange Setup Wizard",AssistedSetup.Status::Completed);
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=Control 1;
                CaptionML=ENU="";
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Name=Group96;
                Visible=TopBannerVisible AND NOT DoneVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                Name=MediaResourcesStandard;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 98  ;1   ;Group     ;
                Name=Group98;
                Visible=TopBannerVisible AND DoneVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                Name=MediaResourcesDone;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 2   ;1   ;Group     ;
                Name=Step1;
                CaptionML=ENU="";
                Visible=IntroVisible;
                GroupType=Group }

    { 3   ;2   ;Group     ;
                Name=Para1.1;
                CaptionML=ENU=Welcome to Office Add-In Setup;
                GroupType=Group }

    { 4   ;3   ;Group     ;
                Name=Para1.1.1;
                CaptionML=ENU="";
                GroupType=Group;
                InstructionalTextML=ENU=You can set up Office add-ins in Exchange or Exchange Online to complete business tasks without leaving your Outlook inbox. }

    { 13  ;2   ;Group     ;
                Name=Para1.2;
                CaptionML=ENU=Let's go!;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next so you can set up Office add-ins. }

    { 16  ;1   ;Group     ;
                Name=Step2;
                CaptionML=ENU="";
                Visible=DeploymentModeVisible;
                GroupType=Group }

    { 17  ;2   ;Group     ;
                Name=Para2.1;
                CaptionML=ENU=Do you want to set up the add-ins for your organization or only for you?;
                GroupType=Group }

    { 18  ;3   ;Field     ;
                Name=DeploymentMode;
                CaptionML=ENU=Set up for:;
                OptionCaptionML=ENU=My Mailbox,My Organization;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DeploymentMode;
                ImplicitType=Option }

    { 25  ;1   ;Group     ;
                Name=Step2.1;
                CaptionML=ENU="";
                Visible=O365Visible;
                GroupType=Group }

    { 31  ;2   ;Field     ;
                Name=UseO365;
                DrillDown=true;
                CaptionML=ENU=Is your email hosted in Office 365?;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=EmailIsHostedO365;
                ImplicitType=Boolean }

    { 5   ;1   ;Group     ;
                Name=Step3;
                CaptionML=ENU="";
                Visible=CredentialsVisible;
                GroupType=Group }

    { 6   ;2   ;Group     ;
                Name=Step3.1;
                CaptionML=ENU=Provide your credentials for Exchange or Exchange Online.;
                Visible=NOT OnPremOrgDeploy;
                GroupType=Group }

    { 7   ;3   ;Field     ;
                Name=Email;
                ExtendedDatatype=E-Mail;
                CaptionML=ENU=Email;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Email;
                OnValidate=BEGIN
                             CredentialsValidated := false;
                           END;

                ImplicitType=Text80 }

    { 8   ;3   ;Field     ;
                Name=Password;
                ExtendedDatatype=Masked;
                CaptionML=ENU=Password;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Password;
                OnValidate=BEGIN
                             CredentialsValidated := false;
                           END;

                ImplicitType=Text30 }

    { 20  ;3   ;Group     ;
                Name=Group20;
                CaptionML=ENU="";
                Visible=DeploymentMode = DeploymentMode::Organization;
                GroupType=Group }

    { 19  ;4   ;Field     ;
                Name=Administrator;
                CaptionML=ENU=You must specify credentials for an administrative account.;
                ApplicationArea=#Basic,#Suite;
                Style=Attention;
                StyleExpr=TRUE }

    { 26  ;2   ;Group     ;
                Name=Step3.2;
                CaptionML=ENU="";
                Visible=OnPremOrgDeploy;
                GroupType=Group }

    { 27  ;3   ;Field     ;
                Name=ExchangeUserName;
                CaptionML=ENU=Exchange administrator user name;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=UserName;
                ImplicitType=Text80 }

    { 28  ;3   ;Field     ;
                Name=ExchangePassword;
                ExtendedDatatype=Masked;
                CaptionML=ENU=Exchange administrator password;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Password;
                ImplicitType=Text30 }

    { 29  ;3   ;Field     ;
                Name=ExchangeEndpoint;
                CaptionML=ENU=Exchange PowerShell endpoint;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PSEndpoint;
                ImplicitType=Text250 }

    { 21  ;1   ;Group     ;
                Name=Step4;
                CaptionML=ENU="";
                Visible=EmailVisible;
                GroupType=Group }

    { 22  ;2   ;Group     ;
                Name=Para4.1;
                CaptionML=ENU=Receive a sample email message to evaluate the add-ins;
                GroupType=Group }

    { 24  ;3   ;Group     ;
                Name=Para4.1.1;
                CaptionML=ENU="";
                GroupType=Group;
                InstructionalTextML=ENU=We can send you a sample email message from a contact in this evaluation company so that you can try out the Outlook add-in experience. To have a sample email sent to your inbox, select the checkbox. }

    { 23  ;3   ;Field     ;
                Name=SetupEmails;
                CaptionML=ENU=Send sample email message;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SetupEmails;
                ImplicitType=Boolean }

    { 14  ;1   ;Group     ;
                Name=Step5;
                CaptionML=ENU="";
                Visible=DoneVisible;
                GroupType=Group }

    { 15  ;2   ;Group     ;
                Name=That's it!;
                CaptionML=ENU=That's it!;
                Visible=NOT OnPremOrgDeploy;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Finish to enable Office add-ins in Exchange Online. }

    { 30  ;2   ;Group     ;
                Name=Group30;
                CaptionML=ENU=That's it!;
                Visible=OnPremOrgDeploy;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Finish to enable Office add-ins in Exchange. }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1040 : Record "Media Repository";
      MediaRepositoryDone@1041 : Record "Media Repository";
      MediaResourcesStandard@1033 : Record "Media Resources";
      MediaResourcesDone@1032 : Record "Media Resources";
      ExchangeAddinSetup@1018 : Codeunit "Exchange Add-in Setup";
      Step@1008 : 'Intro,DeploymentMode,UseO365,Credentials,Email,Done';
      Email@1000 : Text[80];
      UserName@1020 : Text[80];
      Password@1001 : Text[30];
      PSEndpoint@1021 : Text[250];
      EmailIsHostedO365@1025 : Boolean;
      DeploymentMode@1012 : 'User,Organization';
      BackEnabled@1002 : Boolean;
      NextEnabled@1003 : Boolean;
      FinishEnabled@1004 : Boolean;
      TopBannerVisible@1042 : Boolean;
      IntroVisible@1005 : Boolean;
      DeploymentModeVisible@1011 : Boolean;
      O365Visible@1024 : Boolean;
      CredentialsVisible@1006 : Boolean;
      EmailVisible@1013 : Boolean;
      DoneVisible@1007 : Boolean;
      NAVNotSetUpQst@1010 : TextConst 'ENU=No Office add-ins have been set up.\\Are you sure that you want to exit?';
      SetupEmails@1015 : Boolean;
      CredentialsRequired@1019 : Boolean;
      CredentialsValidated@1017 : Boolean;
      EmailPasswordMissingErr@1009 : TextConst 'ENU=Please enter a valid email address and password.';
      SkipDeployment@1016 : Boolean;
      UsernamePasswordMissingErr@1031 : TextConst 'ENU=Please enter a valid domain username and password.';
      SampleEndpointTxt@1022 : TextConst '@@@={Locked};ENU=http://mail.cronus.com/PowerShell';
      OnPremOrgDeploy@1023 : Boolean;
      ConnectingMsg@1014 : TextConst 'ENU=Connecting to Exchange.';
      DeployAccountMsg@1026 : TextConst 'ENU=Deploying add-ins for your account.';
      DeployOrgMsg@1027 : TextConst 'ENU=Deploying add-ins for your organization.';
      DeploySampleMailMsg@1028 : TextConst 'ENU=Deploying sample emails to your mailbox.';
      DeployAddInMsg@1029 : TextConst '@@@=%1 is the name of an Office add-in.;ENU=Deploying %1.';
      ProgressTemplateMsg@1030 : TextConst '@@@={Locked};ENU=#1##########\@2@@@@@@@@@@';

    LOCAL PROCEDURE NextStep@1003(Backwards@1000 : Boolean);
    BEGIN
      if Backwards then
        Step := Step - 1
      else
        Step := Step + 1;

      case Step of
        Step::Intro:
          ShowIntroStep;
        Step::DeploymentMode:
          ShowDeploymentModeStep;
        Step::UseO365:
          ShowO365Step(Backwards);
        Step::Credentials:
          ShowCredentialsStep(Backwards);
        Step::Email:
          ShowEmailStep(Backwards);
        Step::Done:
          ShowDoneStep;
      end;

      CurrPage.UPDATE(true);
    END;

    LOCAL PROCEDURE ShowIntroStep@1001();
    BEGIN
      ResetWizardControls;
      IntroVisible := true;
      BackEnabled := false;
    END;

    LOCAL PROCEDURE ShowDeploymentModeStep@1007();
    BEGIN
      ResetWizardControls;
      NextEnabled := true;
      DeploymentModeVisible := true;
      OnPremOrgDeploy := false;
    END;

    LOCAL PROCEDURE ShowO365Step@1042(Backwards@1000 : Boolean);
    BEGIN
      ResetWizardControls;
      NextEnabled := true;
      O365Visible := true;

      if DeploymentMode <> DeploymentMode::Organization then
        NextStep(Backwards);
    END;

    LOCAL PROCEDURE ShowCredentialsStep@1009(Backwards@1000 : Boolean);
    BEGIN
      ResetWizardControls;
      CredentialsVisible := true;
      OnPremOrgDeploy := (DeploymentMode = DeploymentMode::Organization) and (not EmailIsHostedO365);

      if OnPremOrgDeploy and (PSEndpoint = '') then
        PSEndpoint := SampleEndpointTxt;

      if not NeedCredentials then
        NextStep(Backwards);
    END;

    LOCAL PROCEDURE ShowEmailStep@1023(Backwards@1001 : Boolean);
    BEGIN
      ResetWizardControls;
      NextEnabled := true;
      EmailVisible := true;

      if (not ExchangeAddinSetup.SampleEmailsAvailable) or OnPremOrgDeploy then
        NextStep(Backwards);
    END;

    LOCAL PROCEDURE ShowDoneStep@1011();
    BEGIN
      ResetWizardControls;
      DoneVisible := true;
      NextEnabled := false;
      FinishEnabled := true;
    END;

    LOCAL PROCEDURE ResetWizardControls@1010();
    BEGIN
      // Buttons
      BackEnabled := true;
      NextEnabled := true;
      FinishEnabled := false;

      // Tabs
      IntroVisible := false;
      DeploymentModeVisible := false;
      CredentialsVisible := false;
      EmailVisible := false;
      DoneVisible := false;
      O365Visible := false;
    END;

    LOCAL PROCEDURE DeployToExchange@1043();
    VAR
      OfficeAddin@1000 : Record "Office Add-in";
      AddinDeploymentHelper@1001 : Codeunit "Add-in Deployment Helper";
      ProgressWindow@1002 : Dialog;
      Progress@1003 : Integer;
    BEGIN
      if SkipDeployment then
        exit;
      ProgressWindow.OPEN(ProgressTemplateMsg);
      ProgressWindow.UPDATE(1,ConnectingMsg);
      ProgressWindow.UPDATE(2,3000);

      if not OnPremOrgDeploy then
        if NeedCredentials then
          ExchangeAddinSetup.InitializeServiceWithCredentials(Email,Password);

      if DeploymentMode = DeploymentMode::User then begin
        ProgressWindow.UPDATE(1,DeployAccountMsg);
        ProgressWindow.UPDATE(2,6000);
        ExchangeAddinSetup.DeployAddins(OfficeAddin);
      end else
        if OfficeAddin.GetAddins then begin
          Progress := 4000;
          ProgressWindow.UPDATE(1,DeployOrgMsg);
          ProgressWindow.UPDATE(2,Progress);
          if OnPremOrgDeploy then begin
            AddinDeploymentHelper.SetManifestDeploymentCustomEndpoint(PSEndpoint);
            AddinDeploymentHelper.SetManifestDeploymentCredentials(UserName,Password);
          end else begin
            AddinDeploymentHelper.SetManifestDeploymentCustomEndpoint(PSEndpoint);
            AddinDeploymentHelper.SetManifestDeploymentCredentials(Email,Password);
          end;
          repeat
            Progress += 1000;
            ProgressWindow.UPDATE(1,STRSUBSTNO(DeployAddInMsg,OfficeAddin.Name));
            ProgressWindow.UPDATE(2,Progress);
            AddinDeploymentHelper.DeployManifest(OfficeAddin);
          until OfficeAddin.NEXT = 0;
        end;

      if SetupEmails then begin
        ProgressWindow.UPDATE(1,DeploySampleMailMsg);
        ProgressWindow.UPDATE(2,9000);
        ExchangeAddinSetup.DeploySampleEmails;
      end;

      ProgressWindow.UPDATE(2,10000);
      ProgressWindow.CLOSE;
    END;

    LOCAL PROCEDURE ValidateCredentials@1013();
    BEGIN
      if SkipDeployment then
        exit;

      if OnPremOrgDeploy then begin
        if (UserName = '') or (Password = '') or (PSEndpoint = '') then
          ERROR(UsernamePasswordMissingErr);
      end else begin
        if NeedCredentials and not CredentialsValidated then begin
          if (Email = '') or (Password = '') then
            ERROR(EmailPasswordMissingErr);
          ExchangeAddinSetup.InitializeServiceWithCredentials(Email,Password);
        end;
        CredentialsValidated := true;
      end;
    END;

    [External]
    PROCEDURE SkipDeploymentToExchange@1002(Skip@1000 : Boolean);
    BEGIN
      SkipDeployment := Skip;
    END;

    LOCAL PROCEDURE NeedCredentials@1017() : Boolean;
    BEGIN
      exit((DeploymentMode = DeploymentMode::Organization) or CredentialsRequired);
    END;

    LOCAL PROCEDURE LoadTopBanners@1040();
    BEGIN
      if MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE)) and
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE))
      then
        if MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") and
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        then
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    BEGIN
    END.
  }
}

