OBJECT Table 5401 Item Variant
{
  OBJECT-PROPERTIES
  {
    Date=20120907D;
    Time=120000T;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    DataCaptionFields="Item No.",Code,Description;
    OnDelete=VAR
               ItemTranslation@1000 : Record "Item Translation";
               SKU@1001 : Record "Stockkeeping Unit";
               ItemIdent@1002 : Record "Item Identifier";
               ItemCrossReference@1003 : Record "Item Cross Reference";
               SalesPrice@1004 : Record "Sales Price";
               SalesLineDiscount@1005 : Record "Sales Line Discount";
               PurchasePrice@1006 : Record "Purchase Price";
               PurchaseLineDiscount@1007 : Record "Purchase Line Discount";
               BOMComp@1008 : Record "BOM Component";
               ItemJnlLine@1009 : Record "Item Journal Line";
               RequisitionLine@1010 : Record "Requisition Line";
               PurchOrderLine@1011 : Record "Purchase Line";
               SalesOrderLine@1012 : Record "Sales Line";
               ProdOrderComp@1013 : Record "Prod. Order Component";
               TransLine@1014 : Record "Transfer Line";
               ServiceLine@1015 : Record "Service Line";
               ProdBOMLine@1016 : Record "Production BOM Line";
               ServiceContractLine@1017 : Record "Service Contract Line";
               ServiceItem@1018 : Record "Service Item";
               AssemblyHeader@1019 : Record "Assembly Header";
               ItemSubstitution@1020 : Record "Item Substitution";
               ItemVend@1021 : Record "Item Vendor";
               PlanningAssignment@1022 : Record "Planning Assignment";
               ServiceItemComponent@1023 : Record "Service Item Component";
               BinContent@1024 : Record "Bin Content";
               ItemLedgerEntry@1026 : Record "Item Ledger Entry";
               ValueEntry@1027 : Record "Value Entry";
               AssemblyLine@1028 : Record "Assembly Line";
             BEGIN
               BOMComp.RESET;
               BOMComp.SETCURRENTKEY(Type,"No.");
               BOMComp.SETRANGE(Type,BOMComp.Type::Item);
               BOMComp.SETRANGE("No.","Item No.");
               BOMComp.SETRANGE("Variant Code",Code);
               if not BOMComp.ISEMPTY then
                 ERROR(Text001,Code,BOMComp.TABLECAPTION);

               ProdBOMLine.RESET;
               ProdBOMLine.SETCURRENTKEY(Type,"No.");
               ProdBOMLine.SETRANGE(Type,ProdBOMLine.Type::Item);
               ProdBOMLine.SETRANGE("No.","Item No.");
               ProdBOMLine.SETRANGE("Variant Code",Code);
               if not ProdBOMLine.ISEMPTY then
                 ERROR(Text001,Code,ProdBOMLine.TABLECAPTION);

               ProdOrderComp.RESET;
               ProdOrderComp.SETCURRENTKEY(Status,"Item No.");
               ProdOrderComp.SETRANGE("Item No.","Item No.");
               ProdOrderComp.SETRANGE("Variant Code",Code);
               if not ProdOrderComp.ISEMPTY then
                 ERROR(Text001,Code,ProdOrderComp.TABLECAPTION);

               if ProdOrderExist then
                 ERROR(Text002,"Item No.");

               AssemblyHeader.RESET;
               AssemblyHeader.SETCURRENTKEY("Document Type","Item No.");
               AssemblyHeader.SETRANGE("Item No.","Item No.");
               AssemblyHeader.SETRANGE("Variant Code",Code);
               if not AssemblyHeader.ISEMPTY then
                 ERROR(Text001,Code,AssemblyHeader.TABLECAPTION);

               AssemblyLine.RESET;
               AssemblyLine.SETCURRENTKEY("Document Type",Type,"No.");
               AssemblyLine.SETRANGE("No.","Item No.");
               AssemblyLine.SETRANGE("Variant Code",Code);
               if not AssemblyLine.ISEMPTY then
                 ERROR(Text001,Code,AssemblyLine.TABLECAPTION);

               BinContent.RESET;
               BinContent.SETCURRENTKEY("Item No.");
               BinContent.SETRANGE("Item No.","Item No.");
               BinContent.SETRANGE("Variant Code",Code);
               if not BinContent.ISEMPTY then
                 ERROR(Text001,Code,BinContent.TABLECAPTION);

               TransLine.RESET;
               TransLine.SETCURRENTKEY("Item No.");
               TransLine.SETRANGE("Item No.","Item No.");
               TransLine.SETRANGE("Variant Code",Code);
               if not TransLine.ISEMPTY then
                 ERROR(Text001,Code,TransLine.TABLECAPTION);

               RequisitionLine.RESET;
               RequisitionLine.SETCURRENTKEY(Type,"No.");
               RequisitionLine.SETRANGE(Type,RequisitionLine.Type::Item);
               RequisitionLine.SETRANGE("No.","Item No.");
               RequisitionLine.SETRANGE("Variant Code",Code);
               if not RequisitionLine.ISEMPTY then
                 ERROR(Text001,Code,RequisitionLine.TABLECAPTION);

               PurchOrderLine.RESET;
               PurchOrderLine.SETCURRENTKEY(Type,"No.");
               PurchOrderLine.SETRANGE(Type,PurchOrderLine.Type::Item);
               PurchOrderLine.SETRANGE("No.","Item No.");
               PurchOrderLine.SETRANGE("Variant Code",Code);
               if not PurchOrderLine.ISEMPTY then
                 ERROR(Text001,Code,PurchOrderLine.TABLECAPTION);

               SalesOrderLine.RESET;
               SalesOrderLine.SETCURRENTKEY(Type,"No.");
               SalesOrderLine.SETRANGE(Type,SalesOrderLine.Type::Item);
               SalesOrderLine.SETRANGE("No.","Item No.");
               SalesOrderLine.SETRANGE("Variant Code",Code);
               if not SalesOrderLine.ISEMPTY then
                 ERROR(Text001,Code,SalesOrderLine.TABLECAPTION);

               ServiceItem.RESET;
               ServiceItem.SETCURRENTKEY("Item No.","Serial No.");
               ServiceItem.SETRANGE("Item No.","Item No.");
               ServiceItem.SETRANGE("Variant Code",Code);
               if not ServiceItem.ISEMPTY then
                 ERROR(Text001,Code,ServiceItem.TABLECAPTION);

               ServiceLine.RESET;
               ServiceLine.SETCURRENTKEY(Type,"No.");
               ServiceLine.SETRANGE(Type,ServiceLine.Type::Item);
               ServiceLine.SETRANGE("No.","Item No.");
               ServiceLine.SETRANGE("Variant Code",Code);
               if not ServiceLine.ISEMPTY then
                 ERROR(Text001,Code,ServiceLine.TABLECAPTION);

               ServiceContractLine.RESET;
               ServiceContractLine.SETRANGE("Item No.","Item No.");
               ServiceContractLine.SETRANGE("Variant Code",Code);
               if not ServiceContractLine.ISEMPTY then
                 ERROR(Text001,Code,ServiceContractLine.TABLECAPTION);

               ServiceItemComponent.RESET;
               ServiceItemComponent.SETRANGE(Type,ServiceItemComponent.Type::Item);
               ServiceItemComponent.SETRANGE("No.","Item No.");
               ServiceItemComponent.SETRANGE("Variant Code",Code);
               ServiceItemComponent.MODIFYALL("Variant Code",'');

               ItemJnlLine.RESET;
               ItemJnlLine.SETCURRENTKEY("Item No.");
               ItemJnlLine.SETRANGE("Item No.","Item No.");
               ItemJnlLine.SETRANGE("Variant Code",Code);
               if not ItemJnlLine.ISEMPTY then
                 ERROR(Text001,Code,ItemJnlLine.TABLECAPTION);

               ItemLedgerEntry.RESET;
               ItemLedgerEntry.SETCURRENTKEY("Item No.");
               ItemLedgerEntry.SETRANGE("Item No.","Item No.");
               ItemLedgerEntry.SETRANGE("Variant Code",Code);
               if not ItemLedgerEntry.ISEMPTY then
                 ERROR(Text001,Code,ItemLedgerEntry.TABLECAPTION);

               ValueEntry.RESET;
               ValueEntry.SETCURRENTKEY("Item No.");
               ValueEntry.SETRANGE("Item No.","Item No.");
               ValueEntry.SETRANGE("Variant Code",Code);
               if not ValueEntry.ISEMPTY then
                 ERROR(Text001,Code,ValueEntry.TABLECAPTION);

               ItemTranslation.SETRANGE("Item No.","Item No.");
               ItemTranslation.SETRANGE("Variant Code",Code);
               ItemTranslation.DELETEALL;

               ItemIdent.RESET;
               ItemIdent.SETCURRENTKEY("Item No.");
               ItemIdent.SETRANGE("Item No.","Item No.");
               ItemIdent.SETRANGE("Variant Code",Code);
               ItemIdent.DELETEALL;

               ItemCrossReference.SETRANGE("Item No.","Item No.");
               ItemCrossReference.SETRANGE("Variant Code",Code);
               ItemCrossReference.DELETEALL;

               ItemSubstitution.RESET;
               ItemSubstitution.SETRANGE(Type,ItemSubstitution.Type::Item);
               ItemSubstitution.SETRANGE("No.","Item No.");
               ItemSubstitution.SETRANGE("Substitute Type",ItemSubstitution."Substitute Type"::Item);
               ItemSubstitution.SETRANGE("Variant Code",Code);
               ItemSubstitution.DELETEALL;

               ItemVend.RESET;
               ItemVend.SETCURRENTKEY("Item No.");
               ItemVend.SETRANGE("Item No.","Item No.");
               ItemVend.SETRANGE("Variant Code",Code);
               ItemVend.DELETEALL;

               SalesPrice.RESET;
               SalesPrice.SETRANGE("Item No.","Item No.");
               SalesPrice.SETRANGE("Variant Code",Code);
               SalesPrice.DELETEALL;

               SalesLineDiscount.RESET;
               SalesLineDiscount.SETRANGE(Code,"Item No.");
               SalesLineDiscount.SETRANGE("Variant Code",Code);
               SalesLineDiscount.DELETEALL;

               PurchasePrice.RESET;
               PurchasePrice.SETRANGE("Item No.","Item No.");
               PurchasePrice.SETRANGE("Variant Code",Code);
               PurchasePrice.DELETEALL;

               PurchaseLineDiscount.RESET;
               PurchaseLineDiscount.SETRANGE("Item No.","Item No.");
               PurchaseLineDiscount.SETRANGE("Variant Code",Code);
               PurchaseLineDiscount.DELETEALL;

               SKU.SETRANGE("Item No.","Item No.");
               SKU.SETRANGE("Variant Code",Code);
               SKU.DELETEALL(true);

               PlanningAssignment.RESET;
               PlanningAssignment.SETRANGE("Item No.","Item No.");
               PlanningAssignment.SETRANGE("Variant Code",Code);
               PlanningAssignment.DELETEALL;
             END;

    CaptionML=ENU=Item Variant;
    LookupPageID="Item Variants";
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=ENU=Code;
                                                   NotBlank=true }
    { 2   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=ENU=Item No.;
                                                   NotBlank=true }
    { 3   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 4   ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
  }
  KEYS
  {
    {    ;"Item No.",Code                         ;Clustered=true }
    {    ;Code                                     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=You cannot delete item variant %1 because there is at least one %2 that includes this Variant Code.';
      Text002@1000 : TextConst 'ENU=You cannot delete item variant %1 because there are one or more outstanding production orders that include this item.';

    LOCAL PROCEDURE ProdOrderExist@7() : Boolean;
    VAR
      ProdOrderLine@1040 : Record "Prod. Order Line";
    BEGIN
      ProdOrderLine.SETCURRENTKEY(Status,"Item No.");
      ProdOrderLine.SETRANGE("Item No.","Item No.");
      ProdOrderLine.SETRANGE("Variant Code",Code);
      if not ProdOrderLine.ISEMPTY then
        exit(true);

      exit(false);
    END;

    BEGIN
    END.
  }
}

