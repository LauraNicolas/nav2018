OBJECT Page 9621 Add Page Fields
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=true;
    CaptionML=ENU=New Field;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable="Page Table Field";
    PageType=NavigatePage;
    SourceTableTemporary=true;
    OnOpenPage=VAR
                 DesignerPageId@1000 : Codeunit DesignerPageId;
               BEGIN
                 InitializeVariables;
                 PageId := DesignerPageId.GetPageId;
                 RelatedFieldType := RelatedFieldType::"Computed value";
                 CurrentNavigationPage := CurrentNavigationPage::FieldSelectionPage;
               END;

    ActionList=ACTIONS
    {
      { 20      ;    ;ActionContainer;
                      Name=ActionItems;
                      CaptionML=ENU=ActionItems;
                      ActionContainerType=ActionItems }
      { 21      ;1   ;Action    ;
                      Name=Next;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite;
                      Visible=IsNextVisible;
                      InFooterBar=true;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 case CurrentNavigationPage of
                                   CurrentNavigationPage::FieldBasicDefinitionPage:
                                     begin
                                       if NewFieldName = '' then
                                         ERROR(MandateFieldNameErr);
                                       LoadRequestedPage(CurrentNavigationPage::FieldAdvancedDefinitionPage);
                                     end;
                                 end;
                               END;
                                }
      { 22      ;1   ;Action    ;
                      Name=Previous;
                      CaptionML=ENU=Previous;
                      ApplicationArea=#Basic,#Suite;
                      Visible=IsBackVisible;
                      InFooterBar=true;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 case CurrentNavigationPage of
                                   CurrentNavigationPage::FieldBasicDefinitionPage:
                                     LoadRequestedPage(CurrentNavigationPage::FieldSelectionPage);
                                   CurrentNavigationPage::FieldAdvancedDefinitionPage:
                                     LoadRequestedPage(CurrentNavigationPage::FieldBasicDefinitionPage);
                                 end;
                               END;
                                }
      { 23      ;1   ;Action    ;
                      Name=Create;
                      CaptionML=ENU=Create;
                      ApplicationArea=#Basic,#Suite;
                      Visible=IsCreateBtnVisible;
                      InFooterBar=true;
                      Image=NextRecord;
                      OnAction=VAR
                                 FieldTypeOptions@1000 : 'Number,Text,Boolean,DateTime,RelatedData,Option';
                               BEGIN
                                 ClearAllDynamicFieldsVisibility;
                                 EVALUATE(FieldTypeOptions,CurrPage.FieldTypes.PAGE.GetSelectedRecType);
                                 case FieldTypeOptions of
                                   FieldTypeOptions::Number:
                                     begin
                                       NewFieldType := 'Integer';
                                       IsNumberFieldTypeVisible := true;
                                       FieldTypeEnumValue := NavDesignerFieldType.Integer;
                                     end;
                                   FieldTypeOptions::Text:
                                     begin
                                       NewFieldType := 'Text';
                                       TextFieldTypeDataLength := 30;
                                       IsTextFieldTypeVisible := true;
                                       FieldTypeEnumValue := NavDesignerFieldType.Text;
                                     end;
                                   FieldTypeOptions::Boolean:
                                     begin
                                       NewFieldType := 'Boolean';
                                       IsFinishBtnVisible := true;
                                       IsNextVisible := false;
                                       FieldTypeEnumValue := NavDesignerFieldType.Boolean;
                                     end;
                                   FieldTypeOptions::DateTime:
                                     begin
                                       NewFieldType := 'Date';
                                       IsDateTimeFieldTypeVisible := true;
                                       FieldTypeEnumValue := NavDesignerFieldType.Date;
                                     end;
                                   FieldTypeOptions::RelatedData:
                                     begin
                                       NewFieldType := 'Related Data Field';
                                       RelatedFieldType := RelatedFieldType::"Linked value";
                                       FilterType := FilterType::FIELD;
                                     end;
                                   FieldTypeOptions::Option:
                                     begin
                                       NewFieldType := 'Option';
                                       IsOptionDetailsVisible := true;
                                       FieldTypeEnumValue := NavDesignerFieldType.Option;
                                     end;
                                 end;
                                 LoadRequestedPage(CurrentNavigationPage::FieldBasicDefinitionPage);
                               END;
                                }
      { 24      ;1   ;Action    ;
                      Name=Finish;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Basic,#Suite;
                      Visible=IsFinishBtnVisible;
                      InFooterBar=true;
                      Image=Approve;
                      OnAction=BEGIN
                                 SaveNewFieldDefinition;
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=PageControl;
                CaptionML=ENU=Page Control;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Select Type;
                CaptionML=ENU=Select Type;
                Visible=CurrentNavigationPage = CurrentNavigationPage::FieldSelectionPage;
                GroupType=Group }

    { 3   ;2   ;Field     ;
                Name=NewFieldDescription;
                CaptionML=ENU=By adding a new field to the table you can store and display additional information about a data entry.;
                ApplicationArea=#Basic,#Suite }

    { 4   ;2   ;Part      ;
                Name=FieldTypes;
                CaptionML=ENU=Choose type of field;
                ApplicationArea=#Basic,#Suite;
                Description=Choose type of field';
                PagePartID="Table Field Types ListPart";
                Editable=FALSE;
                PartType=Page }

    { 7   ;1   ;Group     ;
                Name=Step details;
                CaptionML=ENU=Step details;
                Visible=(CurrentNavigationPage = CurrentNavigationPage::FieldBasicDefinitionPage) AND (NewFieldType <> 'Boolean');
                GroupType=Group }

    { 8   ;2   ;Group     ;
                Name=Step 1 of 2;
                CaptionML=ENU=Step 1 of 2;
                GroupType=Group }

    { 9   ;3   ;Group     ;
                Name=Step1Header;
                CaptionML=ENU=FIELD DEFINITION;
                GroupType=Group;
                InstructionalTextML=ENU=Fill in information about the new field. You can change the field information later if you need to. }

    { 10  ;4   ;Field     ;
                Name=NewFieldName;
                CaptionML=ENU=Name;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewFieldName;
                OnValidate=BEGIN
                             NewFieldCaption := NewFieldName;
                           END;

                ImplicitType=Text;
                ShowMandatory=True }

    { 11  ;4   ;Field     ;
                Name=NewFieldCaption;
                CaptionML=ENU=Caption;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewFieldCaption;
                ImplicitType=Text }

    { 12  ;4   ;Field     ;
                Name=NewDescription;
                CaptionML=ENU=Description;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewFieldDescr;
                MultiLine=true;
                ImplicitType=Text }

    { 47  ;4   ;Group     ;
                Name=Group47;
                Visible=NewFieldType = 'Related Data Field';
                GroupType=Group }

    { 44  ;5   ;Field     ;
                Name=RelatedFieldType;
                CaptionML=ENU=Linked value Type;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=RelatedFieldType;
                OnValidate=BEGIN
                             if RelatedFieldType = RelatedFieldType::"Linked value" then
                               FilterType := FilterType::FIELD;
                           END;

                ImplicitType=Option }

    { 13  ;1   ;Group     ;
                Name=Step 2;
                CaptionML=ENU=Step 2;
                Visible=CurrentNavigationPage = CurrentNavigationPage::FieldAdvancedDefinitionPage;
                GroupType=Group }

    { 30  ;2   ;Group     ;
                Name=Step 2 of 2;
                CaptionML=ENU=Step 2 of 2;
                GroupType=Group;
                InstructionalTextML=ENU=Choose how the system initializes and validates the text that is typed or pasted into the field. }

    { 14  ;3   ;Group     ;
                Name=Group14;
                Visible=NewFieldType <> 'Related Data Field';
                GroupType=Group }

    { 19  ;4   ;Group     ;
                Name=Group19;
                Visible=IsNumberFieldTypeVisible;
                GroupType=Group }

    { 5   ;5   ;Field     ;
                Name=NumberFieldType;
                CaptionML=ENU=Field data type;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NumberFieldTypes;
                OnValidate=BEGIN
                             case NumberFieldTypes of
                               NumberFieldTypes::BigInteger:
                                 begin
                                   NewFieldType := 'BigInteger';
                                   FieldTypeEnumValue := NavDesignerFieldType.BigInteger;
                                 end;
                               NumberFieldTypes::Decimal:
                                 begin
                                   NewFieldType := 'Decimal';
                                   FieldTypeEnumValue := NavDesignerFieldType.Decimal;
                                 end;
                               NumberFieldTypes::Integer:
                                 begin
                                   NewFieldType := 'Integer';
                                   FieldTypeEnumValue := NavDesignerFieldType.Integer;
                                 end;
                             end;
                           END;

                ImplicitType=Option }

    { 36  ;5   ;Group     ;
                Name=Group36;
                Visible=NumberFieldTypes = NumberFieldTypes::"Decimal";
                GroupType=Group }

    { 37  ;6   ;Field     ;
                Name=Field_NoOfDecimalPlaces;
                CaptionML=ENU=Number of decimal places;
                ApplicationArea=#Basic,#Suite;
                NotBlank=true;
                BlankZero=true;
                SourceExpr=Field_NoOfDecimalPlaces;
                ImplicitType=Text }

    { 28  ;5   ;Field     ;
                Name=Editable;
                CaptionML=ENU=Editable;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=IsFieldEditable;
                ImplicitType=Boolean }

    { 29  ;5   ;Field     ;
                Name=IsBlankZero;
                CaptionML=ENU=If zero show blank;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=IsBlankZero;
                ImplicitType=Boolean }

    { 25  ;4   ;Group     ;
                Name=Group25;
                Visible=IsTextFieldTypeVisible;
                GroupType=Group }

    { 6   ;5   ;Field     ;
                Name=TextFieldType;
                CaptionML=ENU=Field data type;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TextFieldType;
                OnValidate=BEGIN
                             case TextFieldType of
                               TextFieldType::Code:
                                 begin
                                   NewFieldType := 'Code';
                                   FieldTypeEnumValue := NavDesignerFieldType.Code;
                                   TextFieldTypeDataLength := 10;
                                 end;
                               TextFieldType::Text:
                                 begin
                                   NewFieldType := 'Text';
                                   FieldTypeEnumValue := NavDesignerFieldType.Text;
                                   TextFieldTypeDataLength := 30;
                                 end;
                             end;
                           END;

                ImplicitType=Option }

    { 33  ;5   ;Field     ;
                Name=DataLength;
                CaptionML=ENU=Text Length;
                ApplicationArea=#Basic,#Suite;
                BlankNumbers=BlankZero;
                SourceExpr=TextFieldTypeDataLength;
                ImplicitType=Integer }

    { 53  ;5   ;Group     ;
                Name=Group53;
                Visible=TextFieldType = TextFieldType::"Text";
                GroupType=Group }

    { 34  ;5   ;Field     ;
                Name=Editable_text;
                CaptionML=ENU=Editable;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=IsFieldEditable;
                ImplicitType=Boolean }

    { 26  ;4   ;Group     ;
                Name=Group26;
                Visible=IsDateTimeFieldTypeVisible;
                GroupType=Group }

    { 27  ;5   ;Field     ;
                Name=DateTimeFieldType;
                CaptionML=ENU=Field data type;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DateTimeFieldType;
                OnValidate=BEGIN
                             case DateTimeFieldType of
                               DateTimeFieldType::Time:
                                 begin
                                   NewFieldType := 'Time';
                                   FieldTypeMessage := TimeFieldDescMsg;
                                   FieldTypeEnumValue := NavDesignerFieldType.Time;
                                 end;
                               DateTimeFieldType::Date:
                                 begin
                                   NewFieldType := 'Date';
                                   FieldTypeMessage := DateFieldDescMsg;
                                   FieldTypeEnumValue := NavDesignerFieldType.Date;
                                 end;
                               DateTimeFieldType::DateTime:
                                 begin
                                   NewFieldType := 'DateTime';
                                   FieldTypeMessage := DateTimeFieldDescMsg;
                                   FieldTypeEnumValue := NavDesignerFieldType.DateTime;
                                 end
                             end;
                           END;

                ImplicitType=Option }

    { 32  ;5   ;Field     ;
                Name=typeDesc;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=FieldTypeMessage;
                Editable=False;
                MultiLine=true;
                ImplicitType=Text;
                ShowCaption=false }

    { 15  ;4   ;Group     ;
                Name=Group15;
                Visible=IsOptionDetailsVisible;
                Editable=True;
                GroupType=Group }

    { 16  ;5   ;Field     ;
                Name=OptionsValue;
                CaptionML=ENU=Options Value;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewOptionsFieldValues;
                ImplicitType=Text }

    { 17  ;5   ;Field     ;
                Name=InitialValue;
                CaptionML=ENU=Initial Value;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewFieldInitialValue;
                ImplicitType=Text }

    { 39  ;3   ;Group     ;
                Name=Group39;
                Visible=NewFieldType = 'Related Data Field';
                GroupType=Group }

    { 42  ;4   ;Group     ;
                Name=Please select the related table and then the corresponding field.;
                CaptionML=ENU=Please select the related table and then the corresponding field.;
                GroupType=Group }

    { 41  ;5   ;Field     ;
                Name=TableSearch;
                CaptionML=ENU=Table;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=RelatedTableName;
                OnValidate=VAR
                             AvailableTables@1000 : Record "Table Metadata";
                             IsNumber@1001 : Integer;
                           BEGIN
                             if EVALUATE(IsNumber,RelatedTableName) then
                               AvailableTables.SETRANGE(ID,IsNumber)
                             else
                               AvailableTables.SETRANGE(Name,RelatedTableName);

                             if AvailableTables.FINDFIRST then begin
                               RelatedTableNumber := AvailableTables.ID;
                               RelatedTableName := AvailableTables.Name;
                               RelatedTableFilterFieldName := '';
                               RelatedTableFieldName := '';
                             end else
                               if RelatedTableName = '' then begin
                                 RelatedTableFilterFieldName := '';
                                 RelatedTableFieldName := '';
                               end else
                                 ERROR(InvalidTableNumberOrNameErr,RelatedTableName);
                           END;

                OnLookup=VAR
                           AvailableTables@1001 : Record "Table Metadata";
                         BEGIN
                           if PAGE.RUNMODAL(PAGE::"Available Table Selection List",AvailableTables) = ACTION::LookupOK then begin
                             RelatedTableName := AvailableTables.Name;
                             RelatedTableNumber := AvailableTables.ID;
                             RelatedTableFilterFieldName := '';
                             RelatedTableFieldName := '';
                           end;
                         END;

                ImplicitType=Text }

    { 43  ;5   ;Field     ;
                Name=FieldName;
                CaptionML=ENU=Field;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=RelatedTableFieldName;
                Editable=RelatedTableName <> '';
                OnValidate=VAR
                             FieldTable@1000 : Record Field;
                           BEGIN
                             FieldTable.SETRANGE("Field Caption",RelatedTableFieldName);
                             FieldTable.SETFILTER(TableNo,FORMAT(RelatedTableNumber));

                             if FieldTable.FINDFIRST then
                               RelatedTableFieldName := FieldTable."Field Caption"
                             else
                               if RelatedTableFieldName <> '' then
                                 ERROR(InvalidRelatedFieldNameErr,RelatedTableFieldName);
                           END;

                OnLookup=VAR
                           FieldTable@1000 : Record Field;
                         BEGIN
                           FieldTable.SETFILTER(TableNo,FORMAT(RelatedTableNumber));
                           if PAGE.RUNMODAL(PAGE::"Available Field Selection Page",FieldTable) = ACTION::LookupOK then
                             RelatedTableFieldName := FieldTable."Field Caption";
                         END;

                ImplicitType=Text }

    { 40  ;4   ;Group     ;
                Name=Group40;
                Visible=RelatedFieldType = RelatedFieldType::"Computed value";
                GroupType=Group }

    { 45  ;5   ;Field     ;
                Name=Method;
                CaptionML=ENU=Method;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=RelatedFieldMethod;
                ImplicitType=Option }

    { 38  ;5   ;Field     ;
                Name=ReverseSign;
                CaptionML=ENU=Reverse Sign;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=RelatedFieldFormulaCalc_ReverseSign;
                ImplicitType=Boolean }

    { 58  ;4   ;Group     ;
                Name=FilterSection;
                CaptionML=ENU=RELATED TABLE FILTER CRITERIA;
                Enabled=(RelatedTableName <> '') AND (RelatedTableFieldName <> '');
                GroupType=Group }

    { 56  ;5   ;Field     ;
                Name=RelatedTableFilterField;
                CaptionML=ENU=Filtered field;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=RelatedTableFilterFieldName;
                OnValidate=VAR
                             FieldTable@1000 : Record Field;
                           BEGIN
                             FieldTable.SETRANGE("Field Caption",RelatedTableFilterFieldName);
                             FieldTable.SETFILTER(TableNo,FORMAT(RelatedTableNumber));
                             if FieldTable.FINDFIRST then
                               FieldType := FORMAT(FieldTable.Type)
                             else
                               if RelatedTableFilterFieldName <> '' then
                                 ERROR(InvalidRelatedFieldNameErr,RelatedTableFilterFieldName);
                           END;

                OnLookup=VAR
                           FieldTable@1000 : Record Field;
                         BEGIN
                           FieldTable.SETFILTER(TableNo,FORMAT(RelatedTableNumber));
                           if PAGE.RUNMODAL(PAGE::"Available Field Selection Page",FieldTable) = ACTION::LookupOK then begin
                             RelatedTableFilterFieldName := FieldTable."Field Caption";
                             FieldType := FORMAT(FieldTable.Type);
                           end;
                         END;

                ImplicitType=Text }

    { 48  ;5   ;Group     ;
                Name=Group48;
                Visible=RelatedFieldType = RelatedFieldType::"Computed value";
                GroupType=Group }

    { 54  ;6   ;Field     ;
                Name=Filter Type;
                CaptionML=ENU=Filter Type;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=FilterType;
                ImplicitType=Option }

    { 59  ;5   ;Group     ;
                Name=Group59;
                Visible=FilterType = FilterType::"FIELD";
                GroupType=Group }

    { 57  ;6   ;Field     ;
                Name=CurrentTableFilterField;
                CaptionML=ENU=Filter Value From field;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CurrentTableFilterFieldName;
                OnValidate=VAR
                             PageTableField@1000 : Record "Page Table Field";
                           BEGIN
                             PageTableField.SETRANGE(Caption,CurrentTableFilterFieldName);
                             if PageTableField.FINDFIRST then
                               RelatedTableFilterFieldName := PageTableField.Caption
                             else
                               if RelatedTableFilterFieldName <> '' then
                                 ERROR(InvalidRelatedFieldNameErr,CurrentTableFilterFieldName);
                           END;

                OnLookup=VAR
                           PageTableField@1000 : Record "Page Table Field";
                         BEGIN
                           PageTableField.SETFILTER("Page ID",FORMAT(PageId));

                           case FieldType of
                             'Text','Code':
                               PageTableField.SETFILTER(Type,'%1|%2',PageTableField.Type::Text,PageTableField.Type::Code);
                             'Integer':
                               PageTableField.SETFILTER(Type,'%1',PageTableField.Type::Integer);
                             'Date':
                               PageTableField.SETFILTER(Type,'%1',PageTableField.Type::Date);
                           end;

                           if PAGE.RUNMODAL(PAGE::"Page Fields Selection List",PageTableField) = ACTION::LookupOK then
                             CurrentTableFilterFieldName := PageTableField.Caption;
                         END;

                ImplicitType=Text }

    { 60  ;5   ;Group     ;
                Name=Group60;
                Visible=FilterType <> FilterType::"FIELD";
                GroupType=Group }

    { 61  ;6   ;Field     ;
                Name=Value;
                CaptionML=ENU=Value;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=FilterValue;
                ImplicitType=Text }

    { 52  ;1   ;Group     ;
                Name=Group52;
                CaptionML=ENU=Step details;
                Visible=(CurrentNavigationPage = CurrentNavigationPage::FieldBasicDefinitionPage) AND (NewFieldType = 'Boolean');
                GroupType=Group }

    { 51  ;2   ;Group     ;
                Name=Step1Header_Boolean;
                CaptionML=ENU=FIELD DEFINITION;
                GroupType=Group;
                InstructionalTextML=ENU=Fill in information about the new field. You can change the field information later if you need to. }

    { 50  ;3   ;Field     ;
                Name=NewFieldName_Boolean;
                CaptionML=ENU=Name;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewFieldName;
                OnValidate=BEGIN
                             NewFieldCaption := NewFieldName;
                           END;

                ImplicitType=Text;
                ShowMandatory=True }

    { 49  ;3   ;Field     ;
                Name=NewFieldCaption_Boolean;
                CaptionML=ENU=Caption;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewFieldCaption;
                ImplicitType=Text }

    { 46  ;3   ;Field     ;
                Name=NewDescription_Boolean;
                CaptionML=ENU=Description;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewFieldDescr;
                MultiLine=true;
                ImplicitType=Text }

  }
  CODE
  {
    VAR
      NavDesignerProperty@1017 : DotNet "'Microsoft.Dynamics.Nav.Ncl, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Runtime.Designer.DesignerFieldProperty";
      NavDesignerFieldType@1050 : DotNet "'Microsoft.Dynamics.Nav.Ncl, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Runtime.Designer.DesignerFieldType";
      NavDesigner@1000 : DotNet "'Microsoft.Dynamics.Nav.Ncl, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Runtime.Designer.NavDesignerALFunctions";
      PropertyDictionary@1037 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.Dictionary`2";
      IsNextVisible@1001 : Boolean;
      IsBackVisible@1004 : Boolean;
      IsCreateBtnVisible@1005 : Boolean;
      IsFinishBtnVisible@1007 : Boolean;
      NewFieldName@1008 : Text;
      NewFieldDescr@1009 : Text;
      NewFieldCaption@1010 : Text;
      NewOptionsFieldValues@1011 : Text;
      NewFieldInitialValue@1012 : Text;
      PageId@1014 : Integer;
      NewFieldId@1015 : Integer;
      NewFieldType@1016 : Text;
      NumberFieldTypes@1019 : 'Integer,Decimal,BigInteger';
      TextFieldType@1021 : 'Text,Code';
      IsTextFieldTypeVisible@1022 : Boolean;
      IsNumberFieldTypeVisible@1023 : Boolean;
      DateTimeFieldType@1024 : 'Date,DateTime,Time';
      IsDateTimeFieldTypeVisible@1025 : Boolean;
      TextFieldTypeDataLength@1032 : Integer;
      Field_NoOfDecimalPlaces@1035 : Text;
      IsOptionDetailsVisible@1026 : Boolean;
      IsFieldEditable@1027 : Boolean;
      IsBlankZero@1028 : Boolean;
      RelatedTableFieldName@1038 : Text;
      RelatedTableName@1039 : Text;
      RelatedFieldMethod@1041 : 'Sum,Average,Count';
      FilterType@1052 : 'CONST,FILTER,FIELD';
      RelatedTableNumber@1053 : Integer;
      RelatedTableFilterFieldName@1056 : Text;
      CurrentTableFilterFieldName@1058 : Text;
      FilterValue@1059 : Text;
      RelatedFieldFormulaCalc_ReverseSign@1029 : Boolean;
      RelatedFieldType@1033 : '"Linked value","Computed value"';
      FieldType@1002 : Text;
      MandateFieldNameErr@1003 : TextConst 'ENU=Field name is required.';
      RelatedFieldValidationErrorErr@1006 : TextConst 'ENU=Table and Field values are required.';
      FieldCreationErrorErr@1018 : TextConst 'ENU=Error occurred while creating the field. Please validate the input values are correct and field name is unique.';
      InvalidRelatedFieldNameErr@1020 : TextConst '@@@="%1 = Field name";ENU=%1 field not found.';
      InvalidTableNumberOrNameErr@1034 : TextConst '@@@="%1 = Table name";ENU=%1 table not found.';
      CurrentNavigationPage@1036 : 'FieldSelectionPage,FieldBasicDefinitionPage,FieldAdvancedDefinitionPage';
      DateFieldDescMsg@1046 : TextConst 'ENU=Stores date of an event';
      FieldTypeMessage@1047 : Text;
      TimeFieldDescMsg@1048 : TextConst 'ENU=Stores time of an event';
      DateTimeFieldDescMsg@1049 : TextConst 'ENU=Stores Date and Time of an event';
      FieldTypeEnumValue@1042 : Integer;
      PageIdNotFoundErr@1013 : TextConst 'ENU=Please navigate to a card details page and begin process for field creation.';

    LOCAL PROCEDURE SaveNewFieldDefinition@2();
    VAR
      FieldDetails@1001 : Record Field;
    BEGIN
      FieldType := NewFieldType;
      if NewFieldType = 'Related Data Field' then begin
        if (RelatedTableName = '') or (RelatedTableFieldName = '') then
          ERROR(RelatedFieldValidationErrorErr);

        FieldDetails.SETFILTER(TableNo,FORMAT(RelatedTableNumber));
        FieldDetails.SETFILTER(FieldName,RelatedTableFieldName);
        if FieldDetails.FINDFIRST then begin
          FieldType := FORMAT(FieldDetails.Type);
          TextFieldTypeDataLength := 0;
          if (FieldType = 'Text') or (FieldType = 'Code') then
            TextFieldTypeDataLength := FieldDetails.Len;
        end;
      end;

      PropertyDictionary := PropertyDictionary.Dictionary;
      PropertyDictionary.Add(NavDesignerProperty.Description,NewFieldDescr);
      PropertyDictionary.Add(NavDesignerProperty.Caption,NewFieldCaption);

      case NewFieldType of
        'Text','Code':
          PropertyDictionary.Add(NavDesignerProperty.Editable,ConvertToBooleanText(IsFieldEditable));
        'Decimal':
          begin
            PropertyDictionary.Add(NavDesignerProperty.DecimalPlaces,FORMAT(Field_NoOfDecimalPlaces));
            PropertyDictionary.Add(NavDesignerProperty.BlankZero,ConvertToBooleanText(IsBlankZero));
          end;
        'Integer','BigInteger':
          PropertyDictionary.Add(NavDesignerProperty.BlankZero,ConvertToBooleanText(IsBlankZero));
        'Option':
          begin
            PropertyDictionary.Add(NavDesignerProperty.OptionString,NewOptionsFieldValues);
            PropertyDictionary.Add(NavDesignerProperty.InitValue,NewFieldInitialValue);
          end;
      end;

      if PageId > 0 then
        NewFieldId := NavDesigner.CreateTableField(PageId,NewFieldName,FieldTypeEnumValue,TextFieldTypeDataLength,PropertyDictionary)
      else
        ERROR(PageIdNotFoundErr);

      if NewFieldId = 0 then
        ERROR(FieldCreationErrorErr);
    END;

    LOCAL PROCEDURE InitializeVariables@4();
    BEGIN
      IsCreateBtnVisible := true;
      IsBackVisible := false;
      IsNextVisible := false;
      IsFinishBtnVisible := false;

      ClearAllDynamicFieldsVisibility;

      NewFieldName := '';
      NewFieldDescr := '';
      NewFieldCaption := '';
      NewFieldInitialValue := '';
      RelatedTableFieldName := '';
      RelatedTableName := '';
      FilterValue := '';
      FieldTypeMessage := DateFieldDescMsg;
    END;

    LOCAL PROCEDURE ClearAllDynamicFieldsVisibility@6();
    BEGIN
      IsNumberFieldTypeVisible := false;
      IsTextFieldTypeVisible := false;
      IsDateTimeFieldTypeVisible := false;
      IsOptionDetailsVisible := false;
    END;

    LOCAL PROCEDURE LoadRequestedPage@7(Page@1000 : Option);
    BEGIN
      IsBackVisible := true;
      IsNextVisible := true;
      IsFinishBtnVisible := false;
      IsCreateBtnVisible := false;

      case Page of
        CurrentNavigationPage::FieldSelectionPage:
          begin
            CurrentNavigationPage := CurrentNavigationPage::FieldSelectionPage;
            InitializeVariables;
          end;
        CurrentNavigationPage::FieldBasicDefinitionPage:
          begin
            CurrentNavigationPage := CurrentNavigationPage::FieldBasicDefinitionPage;
            if NewFieldType = 'Boolean' then begin
              IsNextVisible := false;
              IsFinishBtnVisible := true;
            end;
          end;
        CurrentNavigationPage::FieldAdvancedDefinitionPage:
          begin
            CurrentNavigationPage := CurrentNavigationPage::FieldAdvancedDefinitionPage;
            IsNextVisible := false;
            IsFinishBtnVisible := true;
          end;
        else
          LoadRequestedPage(CurrentNavigationPage::FieldSelectionPage);
      end;
    END;

    LOCAL PROCEDURE ConvertToBooleanText@5(Value@1000 : Boolean) : Text;
    VAR
      Result@1001 : Text;
    BEGIN
      Result := 'True';
      if not Value then
        Result := 'False';
      exit(Result);
    END;

    BEGIN
    END.
  }
}

