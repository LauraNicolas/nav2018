OBJECT Codeunit 412 SMTP Test Mail
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=VAR
            TempNameValueBuffer@1000 : TEMPORARY Record "Name/Value Buffer";
            Mail@1001 : Codeunit Mail;
            AddressChoice@1003 : Text;
            ChosenAddress@1004 : ',ADMail,BasicAuthMail,UserTableMail,OtherMail';
            Address@1002 : Text;
          BEGIN
            Mail.CollectCurrentUserEmailAddresses(TempNameValueBuffer);
            TempNameValueBuffer.RESET;
            if TempNameValueBuffer.FINDSET then
              repeat
                if AddressChoice <> '' then
                  AddressChoice := AddressChoice + ',';
                AddressChoice := AddressChoice + TempNameValueBuffer.Value;
              until TempNameValueBuffer.NEXT = 0;

            AddressChoice := STRSUBSTNO('%1,%2',AddressChoice,TestMailOtherTxt);

            if AddressChoice = ',' + TestMailOtherTxt then
              PromptAndSendEmail
            else begin
              ChosenAddress := STRMENU(AddressChoice,TempNameValueBuffer.COUNT + 1,TestMailChoiceTxt);
              if ChosenAddress = 0 then
                exit;
              if ChosenAddress < TempNameValueBuffer.COUNT + 1 then begin
                Address := SELECTSTR(ChosenAddress,AddressChoice);
                SendTestMail(Address);
                MESSAGE(TestMailSuccessMsg,Address);
              end else
                PromptAndSendEmail;
            end;
          END;

  }
  CODE
  {
    VAR
      TestMailChoiceTxt@1003 : TextConst 'ENU=Choose the email address that should receive a test email message:';
      TestMailTitleTxt@1002 : TextConst 'ENU=SMTP Test Email Message';
      TestMailBodyTxt@1001 : TextConst '@@@="{Locked=""p style="",""font-family:"",""font-size"",""pt"",""<b>"",""</b>"",""</p>"",""<BR>"",""SMTP""} %1 is an email address, such as user@domain.com; %2 is the name of a mail server, such as mail.live.com; %3 is the TCP port number, such as 25; %4 is the authentication method, such as Basic Authentication; %5 is a boolean value, such as True; %6 is a numeric ID such as 12; %7 is the name identifier of a tenant instance, such as ''MyTenant1'';";ENU="<p style=""font-family:Verdana,Arial;font-size:10pt""><b>This mail message has been generated by the user %1 for test purposes.</b></p><p style=""font-family:Verdana,Arial;font-size:9pt""><b>Sent through SMTP Server:</b> %2<BR><b>SMTP Port:</b> %3<BR><b>Authentication:</b> %4<BR><b>Using Secure Connection:</b> %5<BR><b>Server Instance ID:</b> %6<BR><b>Tenant ID:</b> %7</p>"';
      TestMailSuccessMsg@1000 : TextConst '@@@=%1 is an email address.;ENU=Test email has been sent to %1.\Check your email for messages to make sure that the email was delivered successfully.';
      TestMailOtherTxt@1004 : TextConst 'ENU=Other...';

    [TryFunction]
    PROCEDURE SendTestMail@5(EmailAddress@1002 : Text);
    VAR
      SMTPMailSetup@1003 : Record "SMTP Mail Setup";
      SMTPMail@1000 : Codeunit "SMTP Mail";
      MailManagement@1001 : Codeunit "Mail Management";
    BEGIN
      SMTPMailSetup.GET;

      SMTPMail.CreateMessage(
        '',
        MailManagement.GetSenderEmailAddress,
        EmailAddress,
        TestMailTitleTxt,
        STRSUBSTNO(
          TestMailBodyTxt,
          USERID,
          SMTPMailSetup."SMTP Server",
          FORMAT(SMTPMailSetup."SMTP Server Port"),
          SMTPMailSetup.Authentication,
          SMTPMailSetup."Secure Connection",
          SERVICEINSTANCEID,
          TENANTID),
        true);

      SMTPMail.Send;
    END;

    LOCAL PROCEDURE PromptAndSendEmail@13();
    VAR
      SMTPUserSpecifiedAddress@1001 : Page "SMTP User-Specified Address";
      Address@1000 : Text;
    BEGIN
      if SMTPUserSpecifiedAddress.RUNMODAL = ACTION::OK then begin
        Address := SMTPUserSpecifiedAddress.GetEmailAddress;
        if Address = '' then
          exit;
        SendTestMail(Address);
        MESSAGE(TestMailSuccessMsg,Address);
      end;
    END;

    BEGIN
    END.
  }
}

