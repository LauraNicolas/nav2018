OBJECT Codeunit 270 ResJnlManagement
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Res. Journal Template"=imd,
                TableData "Res. Journal Batch"=imd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=RESOURCES';
      Text001@1001 : TextConst 'ENU=Resource Journals';
      Text002@1002 : TextConst 'ENU=RECURRING';
      Text003@1003 : TextConst 'ENU=Recurring Resource Journal';
      Text004@1004 : TextConst 'ENU=DEFAULT';
      Text005@1005 : TextConst 'ENU=Default Journal';
      OldResNo@1006 : Code[20];
      OpenFromBatch@1007 : Boolean;

    [External]
    PROCEDURE TemplateSelection@1(PageID@1004 : Integer;RecurringJnl@1000 : Boolean;VAR ResJnlLine@1003 : Record "Res. Journal Line";VAR JnlSelected@1002 : Boolean);
    VAR
      ResJnlTemplate@1001 : Record "Res. Journal Template";
    BEGIN
      JnlSelected := true;

      ResJnlTemplate.RESET;
      ResJnlTemplate.SETRANGE("Page ID",PageID);
      ResJnlTemplate.SETRANGE(Recurring,RecurringJnl);

      case ResJnlTemplate.COUNT of
        0:
          begin
            ResJnlTemplate.INIT;
            ResJnlTemplate.Recurring := RecurringJnl;
            if not RecurringJnl then begin
              ResJnlTemplate.Name := Text000;
              ResJnlTemplate.Description := Text001;
            end else begin
              ResJnlTemplate.Name := Text002;
              ResJnlTemplate.Description := Text003;
            end;
            ResJnlTemplate.VALIDATE("Page ID");
            ResJnlTemplate.INSERT;
            COMMIT;
          end;
        1:
          ResJnlTemplate.FINDFIRST;
        else
          JnlSelected := PAGE.RUNMODAL(0,ResJnlTemplate) = ACTION::LookupOK;
      end;
      if JnlSelected then begin
        ResJnlLine.FILTERGROUP := 2;
        ResJnlLine.SETRANGE("Journal Template Name",ResJnlTemplate.Name);
        ResJnlLine.FILTERGROUP := 0;
        if OpenFromBatch then begin
          ResJnlLine."Journal Template Name" := '';
          PAGE.RUN(ResJnlTemplate."Page ID",ResJnlLine);
        end;
      end;
    END;

    [External]
    PROCEDURE TemplateSelectionFromBatch@10(VAR ResJnlBatch@1000 : Record "Res. Journal Batch");
    VAR
      ResJnlLine@1002 : Record "Res. Journal Line";
      ResJnlTemplate@1003 : Record "Res. Journal Template";
    BEGIN
      OpenFromBatch := true;
      ResJnlTemplate.GET(ResJnlBatch."Journal Template Name");
      ResJnlTemplate.TESTFIELD("Page ID");
      ResJnlBatch.TESTFIELD(Name);

      ResJnlLine.FILTERGROUP := 2;
      ResJnlLine.SETRANGE("Journal Template Name",ResJnlTemplate.Name);
      ResJnlLine.FILTERGROUP := 0;

      ResJnlLine."Journal Template Name" := '';
      ResJnlLine."Journal Batch Name" := ResJnlBatch.Name;
      PAGE.RUN(ResJnlTemplate."Page ID",ResJnlLine);
    END;

    [External]
    PROCEDURE OpenJnl@2(VAR CurrentJnlBatchName@1000 : Code[10];VAR ResJnlLine@1001 : Record "Res. Journal Line");
    BEGIN
      CheckTemplateName(ResJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
      ResJnlLine.FILTERGROUP := 2;
      ResJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      ResJnlLine.FILTERGROUP := 0;
    END;

    [External]
    PROCEDURE OpenJnlBatch@12(VAR ResJnlBatch@1000 : Record "Res. Journal Batch");
    VAR
      ResJnlTemplate@1002 : Record "Res. Journal Template";
      ResJnlLine@1004 : Record "Res. Journal Line";
      JnlSelected@1003 : Boolean;
    BEGIN
      if ResJnlBatch.GETFILTER("Journal Template Name") <> '' then
        exit;
      ResJnlBatch.FILTERGROUP(2);
      if ResJnlBatch.GETFILTER("Journal Template Name") <> '' then begin
        ResJnlBatch.FILTERGROUP(0);
        exit;
      end;
      ResJnlBatch.FILTERGROUP(0);

      if not ResJnlBatch.FIND('-') then begin
        if not ResJnlTemplate.FINDFIRST then
          TemplateSelection(0,false,ResJnlLine,JnlSelected);
        if ResJnlTemplate.FINDFIRST then
          CheckTemplateName(ResJnlTemplate.Name,ResJnlBatch.Name);
        ResJnlTemplate.SETRANGE(Recurring,true);
        if not ResJnlTemplate.FINDFIRST then
          TemplateSelection(0,true,ResJnlLine,JnlSelected);
        if ResJnlTemplate.FINDFIRST then
          CheckTemplateName(ResJnlTemplate.Name,ResJnlBatch.Name);
        ResJnlTemplate.SETRANGE(Recurring);
      end;
      ResJnlBatch.FIND('-');
      JnlSelected := true;
      ResJnlBatch.CALCFIELDS(Recurring);
      ResJnlTemplate.SETRANGE(Recurring,ResJnlBatch.Recurring);
      if ResJnlBatch.GETFILTER("Journal Template Name") <> '' then
        ResJnlTemplate.SETRANGE(Name,ResJnlBatch.GETFILTER("Journal Template Name"));
      case ResJnlTemplate.COUNT of
        1:
          ResJnlTemplate.FINDFIRST;
        else
          JnlSelected := PAGE.RUNMODAL(0,ResJnlTemplate) = ACTION::LookupOK;
      end;
      if not JnlSelected then
        ERROR('');

      ResJnlBatch.FILTERGROUP(2);
      ResJnlBatch.SETRANGE("Journal Template Name",ResJnlTemplate.Name);
      ResJnlBatch.FILTERGROUP(0);
    END;

    LOCAL PROCEDURE CheckTemplateName@3(CurrentJnlTemplateName@1000 : Code[10];VAR CurrentJnlBatchName@1001 : Code[10]);
    VAR
      ResJnlBatch@1002 : Record "Res. Journal Batch";
    BEGIN
      ResJnlBatch.SETRANGE("Journal Template Name",CurrentJnlTemplateName);
      if not ResJnlBatch.GET(CurrentJnlTemplateName,CurrentJnlBatchName) then begin
        if not ResJnlBatch.FINDFIRST then begin
          ResJnlBatch.INIT;
          ResJnlBatch."Journal Template Name" := CurrentJnlTemplateName;
          ResJnlBatch.SetupNewBatch;
          ResJnlBatch.Name := Text004;
          ResJnlBatch.Description := Text005;
          ResJnlBatch.INSERT(true);
          COMMIT;
        end;
        CurrentJnlBatchName := ResJnlBatch.Name;
      end;
    END;

    [External]
    PROCEDURE CheckName@4(CurrentJnlBatchName@1000 : Code[10];VAR ResJnlLine@1001 : Record "Res. Journal Line");
    VAR
      ResJnlBatch@1002 : Record "Res. Journal Batch";
    BEGIN
      ResJnlBatch.GET(ResJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
    END;

    [External]
    PROCEDURE SetName@5(CurrentJnlBatchName@1000 : Code[10];VAR ResJnlLine@1001 : Record "Res. Journal Line");
    BEGIN
      ResJnlLine.FILTERGROUP := 2;
      ResJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      ResJnlLine.FILTERGROUP := 0;
      if ResJnlLine.FIND('-') then;
    END;

    [External]
    PROCEDURE LookupName@6(VAR CurrentJnlBatchName@1000 : Code[10];VAR ResJnlLine@1001 : Record "Res. Journal Line");
    VAR
      ResJnlBatch@1002 : Record "Res. Journal Batch";
    BEGIN
      COMMIT;
      ResJnlBatch."Journal Template Name" := ResJnlLine.GETRANGEMAX("Journal Template Name");
      ResJnlBatch.Name := ResJnlLine.GETRANGEMAX("Journal Batch Name");
      ResJnlBatch.FILTERGROUP(2);
      ResJnlBatch.SETRANGE("Journal Template Name",ResJnlBatch."Journal Template Name");
      ResJnlBatch.FILTERGROUP(0);
      if PAGE.RUNMODAL(0,ResJnlBatch) = ACTION::LookupOK then begin
        CurrentJnlBatchName := ResJnlBatch.Name;
        SetName(CurrentJnlBatchName,ResJnlLine);
      end;
    END;

    [External]
    PROCEDURE GetRes@7(ResNo@1000 : Code[20];VAR ResName@1001 : Text[50]);
    VAR
      Res@1002 : Record Resource;
    BEGIN
      if ResNo <> OldResNo then begin
        ResName := '';
        if ResNo <> '' then
          if Res.GET(ResNo) then
            ResName := Res.Name;
        OldResNo := ResNo;
      end;
    END;

    BEGIN
    END.
  }
}

