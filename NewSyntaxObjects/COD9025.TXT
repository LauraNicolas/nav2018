OBJECT Codeunit 9025 Small Business Report Catalog
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ToFileNameTxt@1000 : TextConst 'ENU=DetailTrialBalance.xlsx';

    [External]
    PROCEDURE RunAgedAccountsReceivableReport@1(UseRequestPage@1004 : Boolean);
    VAR
      AgedAccountsReceivable@1003 : Report "Aged Accounts Receivable";
      AgingBy@1002 : '"Due Date","Posting Date","Document Date"';
      HeadingType@1001 : '"Date Interval","Number of Days"';
      PeriodLength@1000 : DateFormula;
    BEGIN
      EVALUATE(PeriodLength,'<30D>');
      AgedAccountsReceivable.InitializeRequest(
        WORKDATE,AgingBy::"Posting Date",PeriodLength,false,false,HeadingType::"Date Interval",false);
      AgedAccountsReceivable.USEREQUESTPAGE(UseRequestPage);

      AgedAccountsReceivable.RUN;
    END;

    [External]
    PROCEDURE RunAgedAccountsPayableReport@2(UseRequestPage@1004 : Boolean);
    VAR
      AgedAccountsPayable@1003 : Report "Aged Accounts Payable";
      AgingBy@1002 : '"Due Date","Posting Date","Document Date"';
      HeadingType@1001 : '"Date Interval","Number of Days"';
      PeriodLength@1000 : DateFormula;
    BEGIN
      EVALUATE(PeriodLength,'<30D>');
      AgedAccountsPayable.InitializeRequest(
        WORKDATE,AgingBy::"Posting Date",PeriodLength,false,false,HeadingType::"Date Interval",false);
      AgedAccountsPayable.USEREQUESTPAGE(UseRequestPage);

      AgedAccountsPayable.RUN;
    END;

    [External]
    PROCEDURE RunCustomerTop10ListReport@3(UseRequestPage@1003 : Boolean);
    VAR
      CustomerTop10ListReport@1002 : Report "Customer - Top 10 List";
      ChartType@1001 : '"Bar chart","Pie chart"';
      ShowType@1000 : '"Sales (LCY)","Balance (LCY)"';
    BEGIN
      CustomerTop10ListReport.InitializeRequest(ChartType::"Bar chart",ShowType::"Sales (LCY)",10);
      CustomerTop10ListReport.USEREQUESTPAGE(UseRequestPage);
      CustomerTop10ListReport.RUN;
    END;

    [External]
    PROCEDURE RunVendorTop10ListReport@4(UseRequestPage@1002 : Boolean);
    VAR
      VendorTop10ListReport@1001 : Report "Vendor - Top 10 List";
      ShowType@1000 : '"Purchases (LCY)","Balance (LCY)"';
    BEGIN
      VendorTop10ListReport.InitializeRequest(ShowType::"Purchases (LCY)",10);
      VendorTop10ListReport.USEREQUESTPAGE(UseRequestPage);
      VendorTop10ListReport.RUN;
    END;

    [External]
    PROCEDURE RunCustomerStatementReport@5(UseRequestPage@1014 : Boolean);
    VAR
      CustomerStatementReport@1013 : Report Statement;
      AccSchedManagement@1012 : Codeunit AccSchedManagement;
      NewPrintEntriesDue@1011 : Boolean;
      NewPrintAllHavingEntry@1010 : Boolean;
      NewPrintAllHavingBal@1009 : Boolean;
      NewPrintReversedEntries@1008 : Boolean;
      NewPrintUnappliedEntries@1007 : Boolean;
      NewIncludeAgingBand@1006 : Boolean;
      NewPeriodLength@1005 : Text[30];
      NewDateChoice@1004 : Option;
      NewLogInteraction@1003 : Boolean;
      NewStartDate@1002 : Date;
      NewEndDate@1001 : Date;
      DateChoice@1000 : '"Due Date","Posting Date"';
    BEGIN
      // Use default parameters when you launch the request page, with Start/End Date being the YTD of current financial year
      NewPrintEntriesDue := false;
      NewPrintAllHavingEntry := false;
      NewPrintAllHavingBal := true;
      NewPrintReversedEntries := false;
      NewPrintUnappliedEntries := false;
      NewIncludeAgingBand := false;
      NewPeriodLength := '<1M+CM>';
      NewDateChoice := DateChoice::"Due Date";
      NewLogInteraction := true;

      NewStartDate := AccSchedManagement.FindFiscalYear(WORKDATE);
      NewEndDate := WORKDATE;

      CustomerStatementReport.InitializeRequest(
        NewPrintEntriesDue,NewPrintAllHavingEntry,NewPrintAllHavingBal,NewPrintReversedEntries,
        NewPrintUnappliedEntries,NewIncludeAgingBand,NewPeriodLength,NewDateChoice,
        NewLogInteraction,NewStartDate,NewEndDate);
      CustomerStatementReport.USEREQUESTPAGE(UseRequestPage);
      CustomerStatementReport.RUN;
    END;

    [External]
    PROCEDURE RunTrialBalanceReport@7(UseRequestPage@1001 : Boolean);
    VAR
      TrialBalance@1000 : Report "Trial Balance";
    BEGIN
      TrialBalance.USEREQUESTPAGE(UseRequestPage);

      TrialBalance.RUN;
    END;

    [Internal]
    PROCEDURE RunDetailTrialBalanceReport@6(UseRequestPage@1001 : Boolean);
    VAR
      DetailTrialBalance@1000 : Report "Detail Trial Balance";
      FileMgt@1004 : Codeunit "File Management";
      FileName@1003 : Text;
      ToFile@1002 : Text;
    BEGIN
      DetailTrialBalance.USEREQUESTPAGE(UseRequestPage);

      FileName := FileMgt.ServerTempFileName('xlsx');
      // Render report on the server
      DetailTrialBalance.SAVEASEXCEL(FileName);

      ToFile := ToFileNameTxt;
      DOWNLOAD(FileName,'',FileMgt.Magicpath,'',ToFile);
      ERASE(FileName);
    END;

    BEGIN
    END.
  }
}

