OBJECT Page 5847 Average Cost Calc. Overview
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Average Cost Calc. Overview;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    SourceTable="Average Cost Calc. Overview";
    DataCaptionExpr=ItemName;
    SourceTableView=SORTING("Attached to Valuation Date","Attached to Entry No.",Type);
    PageType=List;
    SourceTableTemporary=true;
    OnOpenPage=BEGIN
                 InitTempTable;
                 ExpandAll(AvgCostCalcOverview);

                 SetRecFilters;
                 CurrPage.UPDATE(false);

                 ItemName := STRSUBSTNO('%1  %2',Item."No.",Item.Description);
               END;

    OnAfterGetRecord=BEGIN
                       DocumentLineNoHideValue := false;
                       EntryTypeHideValue := false;
                       ItemLedgerEntryNoHideValue := false;
                       TypeIndent := 0;
                       SetExpansionStatus;
                       if Type = Type::"Closing Entry" then begin
                         Quantity := CalculateRemainingQty;
                         "Cost Amount (Expected)" := CalculateCostAmt(false);
                         "Cost Amount (Actual)" := CalculateCostAmt(true);
                       end;
                       TypeOnFormat;
                       ItemLedgerEntryNoOnFormat;
                       EntryTypeOnFormat;
                       DocumentLineNoOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;  ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=ActionItems }
      { 41      ;1   ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 54      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Suite;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 if ItemLedgEntry.GET("Entry No.") then
                                   ItemLedgEntry.ShowDimensions;
                               END;
                                }
      { 55      ;2   ;Action    ;
                      Name=&Value Entries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=&Value Entries;
                      ToolTipML=ENU=View the history of posted amounts that affect the value of the item. Value entries are created for every transaction with the item.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Value Entries";
                      RunPageView=SORTING("Item Ledger Entry No.");
                      RunPageLink="Item Ledger Entry No."=FIELD("Item Ledger Entry No."),
                                  "Valuation Date"=FIELD("Valuation Date");
                      Image=ValueLedger }
      { 45      ;1   ;ActionGroup;
                      Name=&Application;
                      CaptionML=ENU=&Application;
                      Image=Apply }
      { 56      ;2   ;Action    ;
                      Name=Applied E&ntries;
                      CaptionML=ENU=Applied E&ntries;
                      ToolTipML=ENU=View the ledger entries that have been applied to this record.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Approve;
                      OnAction=VAR
                                 ItemLedgEntry@1000 : Record "Item Ledger Entry";
                               BEGIN
                                 if ItemLedgEntry.GET("Item Ledger Entry No.") then
                                   CODEUNIT.RUN(CODEUNIT::"Show Applied Entries",ItemLedgEntry);
                               END;
                                }
      { 57      ;2   ;Action    ;
                      Name=Reservation Entries;
                      AccessByPermission=TableData Item=R;
                      CaptionML=ENU=Reservation Entries;
                      ToolTipML=ENU=View the entries for every reservation that is made, either manually or automatically.;
                      ApplicationArea=#Advanced;
                      Image=ReservationLedger;
                      OnAction=VAR
                                 ItemLedgEntry@1000 : Record "Item Ledger Entry";
                               BEGIN
                                 ItemLedgEntry.GET("Item Ledger Entry No.");
                                 ItemLedgEntry.ShowReservationEntries(true);
                               END;
                                }
      { 1900000004;  ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=RelatedInformation }
      { 53      ;1   ;Action    ;
                      Name=&Navigate;
                      CaptionML=ENU=&Navigate;
                      ToolTipML=ENU=Find all entries and documents that exist for the document number and posting date on the selected entry or document.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Navigate.SetDoc("Posting Date","Document No.");
                                 Navigate.RUN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                IndentationColumnName=TypeIndent;
                IndentationControls=Type;
                ShowAsTree=true;
                GroupType=Repeater }

    { 19  ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies either that the entry is a summary entry, Closing Entry, or the type that was used in the calculation of the average cost of the item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Type;
                Editable=FALSE;
                StyleExpr='Strong';
                ImplicitType=Option }

    { 34  ;2   ;Field     ;
                Name=Valuation Date;
                ToolTipML=ENU=Specifies the valuation date associated with the average cost calculation.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Valuation Date";
                Editable=FALSE;
                StyleExpr='Strong';
                ImplicitType=Date }

    { 4   ;2   ;Field     ;
                Name=Item No.;
                ToolTipML=ENU=Specifies the number of the item associated with the entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item No.";
                Editable=FALSE;
                ImplicitType=Code20 }

    { 15  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the location code associated with the entry.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Code10 }

    { 47  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Code10 }

    { 49  ;2   ;Field     ;
                Name=AverageCostCntrl;
                CaptionML=ENU=Unit Cost;
                ToolTipML=ENU=Specifies the average cost for this entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CalculateAverageCost;
                AutoFormatType=2;
                Editable=FALSE;
                StyleExpr='Strong';
                ImplicitType=Decimal }

    { 28  ;2   ;Field     ;
                Name=Cost is Adjusted;
                ToolTipML=ENU=Specifies whether the cost is adjusted for the entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cost is Adjusted";
                Editable=FALSE;
                ImplicitType=Boolean }

    { 2   ;2   ;Field     ;
                Name=Item Ledger Entry No.;
                ToolTipML=ENU=Specifies the number of the item ledger entry that this entry is linked to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item Ledger Entry No.";
                Visible=FALSE;
                Editable=FALSE;
                HideValue=ItemLedgerEntryNoHideValue;
                ImplicitType=Integer }

    { 6   ;2   ;Field     ;
                Name=Posting Date;
                ToolTipML=ENU=Specifies the posting date for the entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Date }

    { 8   ;2   ;Field     ;
                Name=Entry Type;
                ToolTipML=ENU=Specifies which type of transaction that the entry is created from.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Entry Type";
                Editable=FALSE;
                HideValue=EntryTypeHideValue;
                ImplicitType=Option }

    { 23  ;2   ;Field     ;
                Name=Document Type;
                ToolTipML=ENU=Specifies the type of document that the average cost applies to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Option }

    { 10  ;2   ;Field     ;
                Name=Document No.;
                ToolTipML=ENU=Specifies a document number for the entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Code20 }

    { 25  ;2   ;Field     ;
                Name=Document Line No.;
                ToolTipML=ENU=Specifies the document line that the comment applies to.;
                ApplicationArea=#Advanced;
                SourceExpr="Document Line No.";
                Visible=FALSE;
                Editable=FALSE;
                HideValue=DocumentLineNoHideValue;
                ImplicitType=Integer }

    { 21  ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the quantity associated with the entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Quantity;
                Editable=FALSE;
                StyleExpr='Strong';
                ImplicitType=Decimal }

    { 17  ;2   ;Field     ;
                Name=Cost Amount (Expected);
                ToolTipML=ENU=Specifies the expected cost in LCY of the quantity posting.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cost Amount (Expected)";
                Editable=FALSE;
                StyleExpr='Strong';
                ImplicitType=Decimal }

    { 51  ;2   ;Field     ;
                Name=Cost Amount (Actual);
                ToolTipML=ENU=Specifies the adjusted cost in LCY of the quantity posting.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cost Amount (Actual)";
                Editable=FALSE;
                StyleExpr='Strong';
                ImplicitType=Decimal }

  }
  CODE
  {
    VAR
      Item@1003 : Record Item;
      AvgCostCalcOverview@1002 : TEMPORARY Record "Average Cost Calc. Overview";
      ItemLedgEntry@1001 : Record "Item Ledger Entry";
      GetAvgCostCalcOverview@1004 : Codeunit "Get Average Cost Calc Overview";
      Navigate@1005 : Page Navigate;
      ActualExpansionStatus@1000 : Integer;
      ItemName@1006 : Text[250];
      TypeIndent@19015277 : Integer INDATASET;
      ItemLedgerEntryNoHideValue@19024839 : Boolean INDATASET;
      EntryTypeHideValue@19058570 : Boolean INDATASET;
      DocumentLineNoHideValue@19051570 : Boolean INDATASET;

    [Internal]
    PROCEDURE SetExpansionStatus@16();
    BEGIN
      case true of
        IsExpanded(Rec):
          ActualExpansionStatus := 1;
        HasChildren(Rec):
          ActualExpansionStatus := 0
        else
          ActualExpansionStatus := 2;
      end;
    END;

    [External]
    PROCEDURE InitTempTable@1();
    VAR
      AvgCostCalcOverviewFilters@1000 : Record "Average Cost Calc. Overview";
    BEGIN
      AvgCostCalcOverview."Item No." := Item."No.";
      AvgCostCalcOverview.SETFILTER("Valuation Date",Item.GETFILTER("Date Filter"));
      AvgCostCalcOverview.SETFILTER("Location Code",Item.GETFILTER("Location Filter"));
      AvgCostCalcOverview.SETFILTER("Variant Code",Item.GETFILTER("Variant Filter"));

      GetAvgCostCalcOverview.RUN(AvgCostCalcOverview);
      AvgCostCalcOverview.RESET;
      AvgCostCalcOverviewFilters.COPYFILTERS(Rec);
      RESET;
      DELETEALL;
      if AvgCostCalcOverview.FIND('-') then
        repeat
          if AvgCostCalcOverview.Level = 0 then begin
            Rec := AvgCostCalcOverview;
            INSERT;
          end;
        until AvgCostCalcOverview.NEXT = 0;
      COPYFILTERS(AvgCostCalcOverviewFilters);
    END;

    LOCAL PROCEDURE ExpandAll@12(VAR AvgCostCalcOverview@1000 : Record "Average Cost Calc. Overview");
    VAR
      AvgCostCalcOverviewFilters@1001 : Record "Average Cost Calc. Overview";
    BEGIN
      AvgCostCalcOverview."Item No." := Item."No.";
      AvgCostCalcOverview.SETFILTER("Valuation Date",Item.GETFILTER("Date Filter"));
      AvgCostCalcOverview.SETFILTER("Location Code",Item.GETFILTER("Location Filter"));
      AvgCostCalcOverview.SETFILTER("Variant Code",Item.GETFILTER("Variant Filter"));

      GetAvgCostCalcOverview.RUN(AvgCostCalcOverview);
      AvgCostCalcOverviewFilters.COPYFILTERS(Rec);
      RESET;
      DELETEALL;

      if AvgCostCalcOverview.FIND('+') then
        repeat
          Rec := AvgCostCalcOverview;
          GetAvgCostCalcOverview.Calculate(AvgCostCalcOverview);
          AvgCostCalcOverview.RESET;
          AvgCostCalcOverview := Rec;
        until AvgCostCalcOverview.NEXT(-1) = 0;

      if AvgCostCalcOverview.FIND('+') then
        repeat
          Rec := AvgCostCalcOverview;
          INSERT;
        until AvgCostCalcOverview.NEXT(-1) = 0;

      COPYFILTERS(AvgCostCalcOverviewFilters);
    END;

    LOCAL PROCEDURE IsExpanded@20(ActualAvgCostCalcOverview@1000 : Record "Average Cost Calc. Overview") : Boolean;
    VAR
      xAvgCostCalcOverview@1002 : TEMPORARY Record "Average Cost Calc. Overview";
      Found@1003 : Boolean;
    BEGIN
      xAvgCostCalcOverview := Rec;
      SETCURRENTKEY("Attached to Valuation Date","Attached to Entry No.",Type);
      Rec := ActualAvgCostCalcOverview;
      Found := (NEXT(GetDirection) <> 0);
      if Found then
        Found := (Level > ActualAvgCostCalcOverview.Level);
      Rec := xAvgCostCalcOverview;
      exit(Found);
    END;

    LOCAL PROCEDURE HasChildren@19(VAR ActualAvgCostCalcOverview@1000 : Record "Average Cost Calc. Overview") : Boolean;
    BEGIN
      AvgCostCalcOverview := ActualAvgCostCalcOverview;
      if Type = Type::"Closing Entry" then
        exit(GetAvgCostCalcOverview.EntriesExist(AvgCostCalcOverview));
      exit(false);
    END;

    LOCAL PROCEDURE GetDirection@3() : Integer;
    BEGIN
      if ASCENDING then
        exit(1);
      exit(-1);
    END;

    [External]
    PROCEDURE SetRecFilters@5();
    BEGIN
      RESET;
      SETCURRENTKEY("Attached to Valuation Date","Attached to Entry No.",Type);
      CurrPage.UPDATE(false);
    END;

    [External]
    PROCEDURE SetItem@2(VAR Item2@1000 : Record Item);
    BEGIN
      Item.COPY(Item2);
    END;

    LOCAL PROCEDURE TypeOnFormat@19025827();
    BEGIN
      if Type <> Type::"Closing Entry" then
        TypeIndent := 1;
    END;

    LOCAL PROCEDURE ItemLedgerEntryNoOnFormat@19009322();
    BEGIN
      if Type = Type::"Closing Entry" then
        ItemLedgerEntryNoHideValue := true;
    END;

    LOCAL PROCEDURE EntryTypeOnFormat@19043113();
    BEGIN
      if Type = Type::"Closing Entry" then
        EntryTypeHideValue := true;
    END;

    LOCAL PROCEDURE DocumentLineNoOnFormat@19065899();
    BEGIN
      if Type = Type::"Closing Entry" then
        DocumentLineNoHideValue := true;
    END;

    BEGIN
    END.
  }
}

