OBJECT Codeunit 5527 Graph Mgt - Purchase Invoice
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Purch. Inv. Header"=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE ProcessComplexTypes@1(VAR PurchInvEntityAggregate@1000 : Record "Purch. Inv. Entity Aggregate";PayToAddressJSON@1001 : Text);
    BEGIN
      ParsePayToVendorAddressFromJSON(PayToAddressJSON,PurchInvEntityAggregate);
    END;

    PROCEDURE ParsePayToVendorAddressFromJSON@10(PayToAddressJSON@1000 : Text;VAR PurchInvEntityAggregate@1002 : Record "Purch. Inv. Entity Aggregate");
    VAR
      GraphMgtComplexTypes@1003 : Codeunit "Graph Mgt - Complex Types";
      RecRef@1001 : RecordRef;
    BEGIN
      if PayToAddressJSON <> '' then
        with PurchInvEntityAggregate do begin
          RecRef.GETTABLE(PurchInvEntityAggregate);
          GraphMgtComplexTypes.ApplyPostalAddressFromJSON(PayToAddressJSON,RecRef,
            FIELDNO("Buy-from Address"),FIELDNO("Buy-from Address 2"),FIELDNO("Buy-from City"),FIELDNO("Buy-from County"),
            FIELDNO("Buy-from Country/Region Code"),FIELDNO("Buy-from Post Code"));
          RecRef.SETTABLE(PurchInvEntityAggregate);
        end;
    END;

    PROCEDURE PayToVendorAddressToJSON@5(PurchInvEntityAggregate@1000 : Record "Purch. Inv. Entity Aggregate") JSON : Text;
    VAR
      GraphMgtComplexTypes@1001 : Codeunit "Graph Mgt - Complex Types";
    BEGIN
      with PurchInvEntityAggregate do
        GraphMgtComplexTypes.GetPostalAddressJSON("Buy-from Address","Buy-from Address 2",
          "Buy-from City","Buy-from County","Buy-from Country/Region Code","Buy-from Post Code",JSON);
    END;

    PROCEDURE UpdateIntegrationRecordIds@34(OnlyRecordsWithoutID@1007 : Boolean);
    VAR
      DummyPurchInvEntityAggregate@1001 : Record "Purch. Inv. Entity Aggregate";
      DummyVendor@1005 : Record Vendor;
      GraphMgtGeneralTools@1008 : Codeunit "Graph Mgt - General Tools";
      PurchaseInvoiceHeaderRecordRef@1002 : RecordRef;
      PurchaseHeaderRecordRef@1000 : RecordRef;
      VendorRecordRef@1004 : RecordRef;
    BEGIN
      VendorRecordRef.OPEN(DATABASE::Vendor);
      GraphMgtGeneralTools.UpdateIntegrationRecords(
        VendorRecordRef,DummyVendor.FIELDNO(Id),true);

      PurchaseHeaderRecordRef.OPEN(DATABASE::"Purchase Header");
      GraphMgtGeneralTools.UpdateIntegrationRecords(
        PurchaseHeaderRecordRef,DummyPurchInvEntityAggregate.FIELDNO(Id),OnlyRecordsWithoutID);

      PurchaseInvoiceHeaderRecordRef.OPEN(DATABASE::"Purch. Inv. Header");
      GraphMgtGeneralTools.UpdateIntegrationRecords(
        PurchaseInvoiceHeaderRecordRef,DummyPurchInvEntityAggregate.FIELDNO(Id),OnlyRecordsWithoutID);
    END;

    LOCAL PROCEDURE CheckSupportedTable@3(VAR RecRef@1000 : RecordRef) : Boolean;
    VAR
      PurchaseHeader@1002 : Record "Purchase Header";
    BEGIN
      case RecRef.NUMBER of
        DATABASE::"Purch. Inv. Header":
          exit(true);
        DATABASE::"Purchase Header":
          begin
            RecRef.SETTABLE(PurchaseHeader);
            exit(PurchaseHeader."Document Type" = PurchaseHeader."Document Type"::Invoice);
          end;
        else
          exit(false);
      end;
    END;

    [EventSubscriber(Codeunit,5150,OnUpdateReferencedIdField)]
    LOCAL PROCEDURE HandleUpdateReferencedIdFieldOnPurchaseInvoiceHeader@19(VAR RecRef@1000 : RecordRef;NewId@1001 : GUID;VAR Handled@1002 : Boolean);
    VAR
      DummyPurchInvEntityAggregate@1004 : Record "Purch. Inv. Entity Aggregate";
      GraphMgtGeneralTools@1003 : Codeunit "Graph Mgt - General Tools";
    BEGIN
      if not CheckSupportedTable(RecRef) then
        exit;

      GraphMgtGeneralTools.HandleUpdateReferencedIdFieldOnItem(
        RecRef,NewId,Handled,RecRef.NUMBER,DummyPurchInvEntityAggregate.FIELDNO(Id));
    END;

    [EventSubscriber(Codeunit,5150,OnGetPredefinedIdValue)]
    LOCAL PROCEDURE HandleGetPredefinedIdValue@21(VAR Id@1000 : GUID;VAR RecRef@1001 : RecordRef;VAR Handled@1002 : Boolean);
    VAR
      DummyPurchInvEntityAggregate@1004 : Record "Purch. Inv. Entity Aggregate";
      GraphMgtGeneralTools@1007 : Codeunit "Graph Mgt - General Tools";
    BEGIN
      if not CheckSupportedTable(RecRef) then
        exit;

      GraphMgtGeneralTools.HandleGetPredefinedIdValue(
        Id,RecRef,Handled,RecRef.NUMBER,DummyPurchInvEntityAggregate.FIELDNO(Id));
    END;

    [EventSubscriber(Codeunit,5465,ApiSetup)]
    PROCEDURE HandleApiSetup@2();
    VAR
      PurchInvAggregator@1000 : Codeunit "Purch. Inv. Aggregator";
    BEGIN
      UpdateIntegrationRecordIds(false);
      PurchInvAggregator.UpdateAggregateTableRecords;
    END;

    BEGIN
    END.
  }
}

