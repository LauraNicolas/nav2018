OBJECT Table 7824 MS-QBO Setup
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=MS-QBO Setup;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Realm Id            ;Text250       ;CaptionML=ENU=Realm Id }
    { 3   ;   ;Token Key           ;Text250       ;CaptionML=ENU=Token Key }
    { 4   ;   ;Token Secret        ;Text250       ;CaptionML=ENU=Token Secret }
    { 5   ;   ;Enabled             ;Boolean       ;OnValidate=VAR
                                                                WebhooksAdapterMgt@1000 : Codeunit "Webhooks Adapter Mgt.";
                                                                WebhooksAdapterUri@1002 : Text[250];
                                                              BEGIN
                                                                if not Enabled then begin
                                                                  WebhooksAdapterUri := COPYSTR(WebhooksAdapterMgt.GetWebhooksAdapterUri(false),1,250);
                                                                  if WebhooksAdapterUri = '' then begin
                                                                    WebhooksAdapterUriNotFound;
                                                                    exit;
                                                                  end ;

                                                                  WebhooksAdapterMgt.DeleteWebhookSubscription(WebhooksAdapterUri);
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Enabled }
    { 6   ;   ;Default Tax Code    ;Text250       ;CaptionML=ENU=Default Tax Code }
    { 7   ;   ;Default Country     ;Code10        ;OnValidate=BEGIN
                                                                case "Default Country" of
                                                                  'CA':
                                                                    VALIDATE("Default Country As Option","Default Country As Option"::Canada);
                                                                  'GB':
                                                                    VALIDATE("Default Country As Option","Default Country As Option"::UK);
                                                                  'US':
                                                                    VALIDATE("Default Country As Option","Default Country As Option"::USA);
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Default Country }
    { 8   ;   ;Default Country As Option;Option   ;CaptionML=ENU=Default Country As Option;
                                                   OptionCaptionML=[@@@={Locked};
                                                                    ENU=Unknown,Canada,UK,USA];
                                                   OptionString=Unknown,Canada,UK,USA }
    { 9   ;   ;Default Tax Rate    ;Text250       ;CaptionML=ENU=Default Tax Rate }
    { 10  ;   ;Default Discount Account Id;Text250;CaptionML=ENU=Default Discount Account Id }
    { 11  ;   ;Default Discount Account Code;Text250;
                                                   CaptionML=ENU=Default Discount Account Code }
    { 12  ;   ;Target Application  ;Option        ;CaptionML=ENU=Target Application;
                                                   OptionCaptionML=ENU=InvoicingApp,BusinessCenter;
                                                   OptionString=InvoicingApp,BusinessCenter }
    { 13  ;   ;Access Tokens Last Fetched On;DateTime;
                                                   CaptionML=ENU=Access Tokens Last Fetched On }
  }
  KEYS
  {
    {    ;"Primary Key"                           ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      QuickBooksCommunicationErr@1000 : TextConst 'ENU=Oops, an error occured when communicating with QuickBooks Online. Please try again later.';

    PROCEDURE InitializeSetup@2(TokenKey@1001 : Text[250];TokenSecret@1002 : Text[250];RealmId@1003 : Text[250];TargetApplication@1008 : 'InvoicingApp,BusinessCenter');
    VAR
      ExtTxtIDIntegrationRecord@1004 : Record "Ext Txt ID Integration Record";
      MSQBOCustomer@1005 : Record "MS-QBO Customer";
      MSQBOItem@1006 : Record "MS-QBO Item";
      MSQBOInvoice@1007 : Record "MS-QBO Invoice";
      FirstInsertion@1000 : Boolean;
    BEGIN
      if not GET then begin
        INIT;
        INSERT;
        FirstInsertion := true;
      end;
      if ("Realm Id" <> RealmId) and not FirstInsertion then begin
        ExtTxtIDIntegrationRecord.DELETEALL;
        MSQBOCustomer.DELETEALL;
        MSQBOItem.DELETEALL;
        MSQBOInvoice.DELETEALL;
      end;
      "Realm Id" := RealmId;
      InitializeTokens(TokenKey,TokenSecret,false);
      "Target Application" := TargetApplication;
      Enabled := false;
      MODIFY;
    END;

    PROCEDURE InitializeTokens@4(TokenKey@1001 : Text[250];TokenSecret@1000 : Text[250];CallModify@1002 : Boolean);
    VAR
      DateTimeNow@1003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.DateTime";
    BEGIN
      "Token Key" := TokenKey;
      "Token Secret" := TokenSecret;
      DateTimeNow := DateTimeNow.Now;
      "Access Tokens Last Fetched On" := DateTimeNow.AddDays(1);
      if CallModify then
        MODIFY;
    END;

    PROCEDURE SynchronizationIsSetUp@3() : Boolean;
    BEGIN
      if not GET then
        exit(false);

      exit(("Realm Id" <> '') and ("Token Key" <> '') and ("Token Secret" <> '') and Enabled);
    END;

    PROCEDURE SetDefaultCountry@1(MSQBOTableMgt@1000 : Codeunit "MS-QBO Table Mgt.");
    VAR
      JSONManagement@1004 : Codeunit "JSON Management";
      CompanyInfoJToken@1003 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JArray";
      CompanyInfoJObject@1002 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";
      Value@1001 : Variant;
    BEGIN
      MSQBOTableMgt.GetEntity("Realm Id",'CompanyInfo',CompanyInfoJToken);

      if ISNULL(CompanyInfoJToken) then
        ERROR(QuickBooksCommunicationErr);

      CompanyInfoJObject := CompanyInfoJToken.Root;
      if JSONManagement.GetPropertyValueFromJObjectByPath(CompanyInfoJObject,'CompanyInfo.Country',Value)
      then begin
        VALIDATE("Default Country",Value);
        MODIFY(true);
      end;
    END;

    [Integration]
    LOCAL PROCEDURE WebhooksAdapterUriNotFound@5();
    BEGIN
    END;

    BEGIN
    END.
  }
}

