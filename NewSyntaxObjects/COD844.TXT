OBJECT Codeunit 844 Cash Flow Wksh.-Register Batch
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    TableNo="Cash Flow Worksheet Line";
    OnRun=BEGIN
            CFWkshLine.COPY(Rec);
            Code;
            Rec := CFWkshLine;
          END;

  }
  CODE
  {
    VAR
      Text1002@1002 : TextConst 'ENU=Checking lines        #2######\';
      Text1005@1005 : TextConst 'ENU=Register lines         #3###### @4@@@@@@@@@@@@@';
      CFWkshLine@1010 : Record "Cash Flow Worksheet Line";
      LicPermission@1017 : Record "License Permission";
      CFWkshCheckLine@1018 : Codeunit "Cash Flow Wksh.- Check Line";
      Window@1023 : Dialog;
      StartLineNo@1025 : Integer;
      NoOfRecords@1032 : Integer;

    LOCAL PROCEDURE Code@1000();
    VAR
      UpdateAnalysisView@1002 : Codeunit "Update Analysis View";
      Which@1000 : '"Ledger Entries","Budget Entries",Both';
    BEGIN
      with CFWkshLine do begin
        LOCKTABLE;

        if not FIND('=><') then begin
          "Line No." := 0;
          COMMIT;
          exit;
        end;

        CreateWindow;

        CheckLines;
        RegisterLines;

        DeleteLines;

        COMMIT;
      end;

      LicPermission.GET(
        LicPermission."Object Type"::Codeunit,
        CODEUNIT::"Update Analysis View");
      if LicPermission."Execute Permission" = LicPermission."Execute Permission"::Yes then begin
        UpdateAnalysisView.UpdateAll(Which::"Ledger Entries",true);
        COMMIT;
      end;
    END;

    LOCAL PROCEDURE DeleteLines@1();
    VAR
      CFWkshLine2@1002 : Record "Cash Flow Worksheet Line";
    BEGIN
      CFWkshLine2.COPY(CFWkshLine);
      CFWkshLine2.DELETEALL;
    END;

    LOCAL PROCEDURE CreateWindow@2();
    BEGIN
      Window.OPEN(
        Text1002 +
        Text1005);
    END;

    LOCAL PROCEDURE CheckLines@4();
    VAR
      LineCount@1000 : Integer;
    BEGIN
      with CFWkshLine do begin
        LineCount := 0;
        StartLineNo := "Line No.";
        repeat
          LineCount := LineCount + 1;
          Window.UPDATE(2,LineCount);
          CFWkshCheckLine.RunCheck(CFWkshLine);
          if NEXT = 0 then
            FIND('-');
        until "Line No." = StartLineNo;
        NoOfRecords := LineCount;
      end;
    END;

    LOCAL PROCEDURE RegisterLines@7();
    VAR
      LineCount@1000 : Integer;
    BEGIN
      with CFWkshLine do begin
        LineCount := 0;
        FIND('-');
        repeat
          LineCount := LineCount + 1;
          Window.UPDATE(3,LineCount);
          Window.UPDATE(4,ROUND(LineCount / NoOfRecords * 10000,1));
          CODEUNIT.RUN(CODEUNIT::"Cash Flow Wksh. -Register Line",CFWkshLine);
        until NEXT = 0;
      end;
    END;

    BEGIN
    END.
  }
}

