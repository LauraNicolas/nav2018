OBJECT Table 5968 Service Contract Template
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    DataCaptionFields="No.",Description;
    OnInsert=BEGIN
               ServMgtSetup.GET;
               if "No." = '' then begin
                 ServMgtSetup.TESTFIELD("Contract Template Nos.");
                 NoSeriesMgt.InitSeries(ServMgtSetup."Contract Template Nos.",xRec."No. Series",0D,
                   "No.","No. Series");
               end;
             END;

    OnDelete=BEGIN
               DimMgt.DeleteDefaultDim(DATABASE::"Service Contract Header","No.");
               ServContract.SETCURRENTKEY("Template No.");
               ServContract.SETRANGE("Template No.","No.");
               ServContract.MODIFYALL("Template No.",'');
             END;

    CaptionML=ENU=Service Contract Template;
    LookupPageID="Service Contract Template List";
    DrillDownPageID="Service Contract Template List";
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                if "No." <> xRec."No." then begin
                                                                  ServMgtSetup.GET;
                                                                  NoSeriesMgt.TestManual(ServMgtSetup."Contract Template Nos.");
                                                                  "No. Series" := '';
                                                                end;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 2   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 3   ;   ;Invoice Period      ;Option        ;CaptionML=ENU=Invoice Period;
                                                   OptionCaptionML=ENU=Month,Two Months,Quarter,Half Year,Year,None;
                                                   OptionString=Month,"Two Months",Quarter,"Half Year",Year,None }
    { 4   ;   ;Max. Labor Unit Price;Decimal      ;CaptionML=ENU=Max. Labor Unit Price;
                                                   BlankZero=true;
                                                   AutoFormatType=2 }
    { 5   ;   ;Combine Invoices    ;Boolean       ;CaptionML=ENU=Combine Invoices }
    { 6   ;   ;Prepaid             ;Boolean       ;OnValidate=BEGIN
                                                                if "Invoice after Service" and Prepaid then
                                                                  ERROR(
                                                                    Text001,
                                                                    FIELDCAPTION("Invoice after Service"),
                                                                    FIELDCAPTION(Prepaid));
                                                              END;

                                                   CaptionML=ENU=Prepaid }
    { 7   ;   ;Service Zone Code   ;Code10        ;TableRelation="Service Zone";
                                                   CaptionML=ENU=Service Zone Code }
    { 8   ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=ENU=Language Code }
    { 9   ;   ;Default Response Time (Hours);Decimal;
                                                   CaptionML=ENU=Default Response Time (Hours);
                                                   DecimalPlaces=0:5;
                                                   BlankZero=true }
    { 10  ;   ;Contract Lines on Invoice;Boolean  ;CaptionML=ENU=Contract Lines on Invoice }
    { 11  ;   ;Default Service Period;DateFormula ;CaptionML=ENU=Default Service Period }
    { 14  ;   ;Invoice after Service;Boolean      ;OnValidate=BEGIN
                                                                if not ServHeader.READPERMISSION and
                                                                   "Invoice after Service" = true
                                                                then
                                                                  ERROR(Text000);
                                                                if "Invoice after Service" and Prepaid then
                                                                  ERROR(
                                                                    Text001,
                                                                    FIELDCAPTION("Invoice after Service"),
                                                                    FIELDCAPTION(Prepaid));
                                                              END;

                                                   CaptionML=ENU=Invoice after Service }
    { 15  ;   ;Allow Unbalanced Amounts;Boolean   ;CaptionML=ENU=Allow Unbalanced Amounts }
    { 16  ;   ;Contract Group Code ;Code10        ;TableRelation="Contract Group";
                                                   CaptionML=ENU=Contract Group Code }
    { 17  ;   ;Service Order Type  ;Code10        ;TableRelation="Service Order Type";
                                                   CaptionML=ENU=Service Order Type }
    { 18  ;   ;Automatic Credit Memos;Boolean     ;CaptionML=ENU=Automatic Credit Memos }
    { 20  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=false }
    { 21  ;   ;Price Update Period ;DateFormula   ;CaptionML=ENU=Price Update Period }
    { 22  ;   ;Price Inv. Increase Code;Code20    ;TableRelation="Standard Text";
                                                   CaptionML=ENU=Price Inv. Increase Code }
    { 23  ;   ;Serv. Contract Acc. Gr. Code;Code10;TableRelation="Service Contract Account Group".Code;
                                                   CaptionML=ENU=Serv. Contract Acc. Gr. Code }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ServHeader@1001 : Record "Service Header";
      ServContractTmplt@1000 : Record "Service Contract Template";
      ServContract@1032 : Record "Service Contract Header";
      ServMgtSetup@1034 : Record "Service Mgt. Setup";
      NoSeriesMgt@1045 : Codeunit NoSeriesManagement;
      DimMgt@1040 : Codeunit DimensionManagement;
      Text000@1002 : TextConst 'ENU=You cannot checkmark this field because you do not have permissions for the Service Order Management Area.';
      Text001@1003 : TextConst 'ENU=You cannot select both %1 and %2 check boxes.';

    [External]
    PROCEDURE AssistEdit@1(OldServContractTmplt@1000 : Record "Service Contract Template") : Boolean;
    BEGIN
      with ServContractTmplt do begin
        ServContractTmplt := Rec;
        ServMgtSetup.GET;
        ServMgtSetup.TESTFIELD("Contract Template Nos.");
        if NoSeriesMgt.SelectSeries(ServMgtSetup."Contract Template Nos.",OldServContractTmplt."No. Series","No. Series") then begin
          NoSeriesMgt.SetSeries("No.");
          Rec := ServContractTmplt;
          exit(true);
        end;
      end;
    END;

    BEGIN
    END.
  }
}

