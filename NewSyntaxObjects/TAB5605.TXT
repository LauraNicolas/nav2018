OBJECT Table 5605 FA Journal Setup
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               DeprBook.LOCKTABLE;
               DeprBook.GET("Depreciation Book Code");
             END;

    CaptionML=ENU=FA Journal Setup;
  }
  FIELDS
  {
    { 1   ;   ;Depreciation Book Code;Code10      ;TableRelation="Depreciation Book";
                                                   CaptionML=ENU=Depreciation Book Code;
                                                   NotBlank=true }
    { 2   ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnValidate=VAR
                                                                UserMgt@1000 : Codeunit "User Management";
                                                              BEGIN
                                                                UserMgt.ValidateUserID("User ID");
                                                              END;

                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit "User Management";
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=User ID }
    { 3   ;   ;FA Jnl. Template Name;Code10       ;TableRelation="FA Journal Template";
                                                   OnValidate=BEGIN
                                                                "FA Jnl. Batch Name" := '';
                                                              END;

                                                   CaptionML=ENU=FA Jnl. Template Name;
                                                   Editable=true }
    { 4   ;   ;FA Jnl. Batch Name  ;Code10        ;TableRelation="FA Journal Batch".Name WHERE ("Journal Template Name"=FIELD("FA Jnl. Template Name"));
                                                   CaptionML=ENU=FA Jnl. Batch Name }
    { 5   ;   ;Gen. Jnl. Template Name;Code10     ;TableRelation="Gen. Journal Template";
                                                   OnValidate=BEGIN
                                                                "Gen. Jnl. Batch Name" := '';
                                                              END;

                                                   CaptionML=ENU=Gen. Jnl. Template Name }
    { 6   ;   ;Gen. Jnl. Batch Name;Code10        ;TableRelation="Gen. Journal Batch".Name WHERE ("Journal Template Name"=FIELD("Gen. Jnl. Template Name"));
                                                   CaptionML=ENU=Gen. Jnl. Batch Name }
    { 7   ;   ;Insurance Jnl. Template Name;Code10;TableRelation="Insurance Journal Template";
                                                   OnValidate=BEGIN
                                                                "Insurance Jnl. Batch Name" := '';
                                                              END;

                                                   CaptionML=ENU=Insurance Jnl. Template Name }
    { 8   ;   ;Insurance Jnl. Batch Name;Code10   ;TableRelation="Insurance Journal Batch".Name WHERE ("Journal Template Name"=FIELD("Insurance Jnl. Template Name"));
                                                   CaptionML=ENU=Insurance Jnl. Batch Name }
  }
  KEYS
  {
    {    ;"Depreciation Book Code","User ID"      ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You must specify %1.';
      DeprBook@1001 : Record "Depreciation Book";

    [External]
    PROCEDURE GenJnlName@1(VAR DeprBook@1000 : Record "Depreciation Book";VAR GenJnlLine@1001 : Record "Gen. Journal Line";VAR NextLineNo@1002 : Integer);
    VAR
      FAJnlSetup@1003 : Record "FA Journal Setup";
      GenJnlTemplate@1004 : Record "Gen. Journal Template";
      GenJnlBatch@1005 : Record "Gen. Journal Batch";
      FAGetJnl@1006 : Codeunit "FA Get Journal";
      TemplateName@1007 : Code[10];
      BatchName@1008 : Code[10];
    BEGIN
      if not FAJnlSetup.GET(DeprBook.Code,USERID) then
        FAJnlSetup.GET(DeprBook.Code,'');
      FAJnlSetup.TESTFIELD("Gen. Jnl. Template Name");
      FAJnlSetup.TESTFIELD("Gen. Jnl. Batch Name");
      TemplateName := FAJnlSetup."Gen. Jnl. Template Name";
      BatchName := FAJnlSetup."Gen. Jnl. Batch Name";
      GenJnlTemplate.GET(TemplateName);
      GenJnlBatch.GET(TemplateName,BatchName);
      FAGetJnl.SetGenJnlRange(GenJnlLine,TemplateName,BatchName);
      NextLineNo := GenJnlLine."Line No.";
    END;

    [External]
    PROCEDURE FAJnlName@2(VAR DeprBook@1000 : Record "Depreciation Book";VAR FAJnlLine@1001 : Record "FA Journal Line";VAR NextLineNo@1002 : Integer);
    VAR
      FAJnlSetup@1003 : Record "FA Journal Setup";
      FAJnlTemplate@1004 : Record "FA Journal Template";
      FAJnlBatch@1005 : Record "FA Journal Batch";
      FAGetJnl@1006 : Codeunit "FA Get Journal";
      TemplateName@1007 : Code[10];
      BatchName@1008 : Code[10];
    BEGIN
      if not FAJnlSetup.GET(DeprBook.Code,USERID) then
        FAJnlSetup.GET(DeprBook.Code,'');
      FAJnlSetup.TESTFIELD("FA Jnl. Template Name");
      FAJnlSetup.TESTFIELD("FA Jnl. Batch Name");
      TemplateName := FAJnlSetup."FA Jnl. Template Name";
      BatchName := FAJnlSetup."FA Jnl. Batch Name";
      FAJnlTemplate.GET(TemplateName);
      FAJnlBatch.GET(TemplateName,BatchName);
      FAGetJnl.SetFAJnlRange(FAJnlLine,TemplateName,BatchName);
      NextLineNo := FAJnlLine."Line No.";
    END;

    [External]
    PROCEDURE InsuranceJnlName@3(VAR DeprBook@1000 : Record "Depreciation Book";VAR InsuranceJnlLine@1001 : Record "Insurance Journal Line";VAR NextLineNo@1002 : Integer);
    VAR
      FAJnlSetup@1003 : Record "FA Journal Setup";
      InsuranceJnlTempl@1005 : Record "Insurance Journal Template";
      InsuranceJnlBatch@1006 : Record "Insurance Journal Batch";
      FAGetJnl@1004 : Codeunit "FA Get Journal";
      TemplateName@1007 : Code[10];
      BatchName@1008 : Code[10];
    BEGIN
      if not FAJnlSetup.GET(DeprBook.Code,USERID) then
        FAJnlSetup.GET(DeprBook.Code,'');
      FAJnlSetup.TESTFIELD("Insurance Jnl. Template Name");
      FAJnlSetup.TESTFIELD("Insurance Jnl. Batch Name");
      TemplateName := FAJnlSetup."Insurance Jnl. Template Name";
      BatchName := FAJnlSetup."Insurance Jnl. Batch Name";
      InsuranceJnlTempl.GET(TemplateName);
      InsuranceJnlBatch.GET(TemplateName,BatchName);
      FAGetJnl.SetInsuranceJnlRange(InsuranceJnlLine,TemplateName,BatchName);
      NextLineNo := InsuranceJnlLine."Line No.";
    END;

    [External]
    PROCEDURE SetGenJnlTrailCodes@6(VAR GenJnlLine@1000 : Record "Gen. Journal Line");
    VAR
      GenJnlTemplate@1001 : Record "Gen. Journal Template";
      GenJnlBatch@1002 : Record "Gen. Journal Batch";
    BEGIN
      with GenJnlLine do begin
        GenJnlTemplate.GET("Journal Template Name");
        GenJnlBatch.GET("Journal Template Name","Journal Batch Name");
        "Source Code" := GenJnlTemplate."Source Code";
        "Reason Code" := GenJnlBatch."Reason Code";
        GenJnlBatch.TESTFIELD("Bal. Account Type","Bal. Account Type"::"G/L Account");
        GenJnlBatch.TESTFIELD("Bal. Account No.",'');
      end;
    END;

    [External]
    PROCEDURE GetFAJnlDocumentNo@4(VAR FAJnlLine@1000 : Record "FA Journal Line";PostingDate@1001 : Date;CreateError@1002 : Boolean) : Code[20];
    VAR
      FAJnlBatch@1003 : Record "FA Journal Batch";
      NoSeriesMgt@1004 : Codeunit NoSeriesManagement;
      DocumentNo@1005 : Code[20];
    BEGIN
      with FAJnlLine do begin
        FAJnlBatch.GET("Journal Template Name","Journal Batch Name");
        if (FAJnlBatch."No. Series" <> '') and not FIND('=><') then
          DocumentNo := NoSeriesMgt.GetNextNo(FAJnlBatch."No. Series",PostingDate,false);
        if (DocumentNo = '') and CreateError then
          ERROR(Text000,FIELDCAPTION("Document No."));
      end;
      exit(DocumentNo);
    END;

    [External]
    PROCEDURE GetGenJnlDocumentNo@8(VAR GenJnlLine@1000 : Record "Gen. Journal Line";PostingDate@1001 : Date;CreateError@1002 : Boolean) : Code[20];
    VAR
      GenJnlBatch@1003 : Record "Gen. Journal Batch";
      NoSeriesMgt@1004 : Codeunit NoSeriesManagement;
      DocumentNo@1005 : Code[20];
    BEGIN
      with GenJnlLine do begin
        GenJnlBatch.GET("Journal Template Name","Journal Batch Name");
        if (GenJnlBatch."No. Series" <> '') and not FIND('=><') then
          DocumentNo := NoSeriesMgt.GetNextNo(GenJnlBatch."No. Series",PostingDate,false);
        if (DocumentNo = '') and CreateError then
          ERROR(Text000,FIELDCAPTION("Document No."));
      end;
      exit(DocumentNo);
    END;

    [External]
    PROCEDURE GetInsuranceJnlDocumentNo@11(VAR InsuranceJnlLine@1000 : Record "Insurance Journal Line";PostingDate@1001 : Date) : Code[20];
    VAR
      InsuranceJnlBatch@1002 : Record "Insurance Journal Batch";
      NoSeriesMgt@1003 : Codeunit NoSeriesManagement;
      DocumentNo@1004 : Code[20];
    BEGIN
      with InsuranceJnlLine do begin
        InsuranceJnlBatch.GET("Journal Template Name","Journal Batch Name");
        if (InsuranceJnlBatch."No. Series" <> '') and not FIND('=><') then
          DocumentNo := NoSeriesMgt.GetNextNo(InsuranceJnlBatch."No. Series",PostingDate,false);
        if DocumentNo = '' then
          ERROR(Text000,FIELDCAPTION("Document No."));
      end;
      exit(DocumentNo);
    END;

    [External]
    PROCEDURE GetFANoSeries@5(VAR FAJnlLine@1000 : Record "FA Journal Line") : Code[10];
    VAR
      FAJnlBatch@1001 : Record "FA Journal Batch";
    BEGIN
      FAJnlBatch.GET(FAJnlLine."Journal Template Name",FAJnlLine."Journal Batch Name");
      if FAJnlBatch."No. Series" <> FAJnlBatch."Posting No. Series" then
        exit(FAJnlBatch."Posting No. Series");
      exit('');
    END;

    [External]
    PROCEDURE GetGenNoSeries@7(VAR GenJnlLine@1000 : Record "Gen. Journal Line") : Code[10];
    VAR
      GenJnlBatch@1001 : Record "Gen. Journal Batch";
    BEGIN
      GenJnlBatch.GET(GenJnlLine."Journal Template Name",GenJnlLine."Journal Batch Name");
      if GenJnlBatch."No. Series" <> GenJnlBatch."Posting No. Series" then
        exit(GenJnlBatch."Posting No. Series");
      exit('');
    END;

    [External]
    PROCEDURE GetInsuranceNoSeries@9(VAR InsuranceJnlLine@1000 : Record "Insurance Journal Line") : Code[10];
    VAR
      InsuranceJnlBatch@1001 : Record "Insurance Journal Batch";
    BEGIN
      InsuranceJnlBatch.GET(InsuranceJnlLine."Journal Template Name",InsuranceJnlLine."Journal Batch Name");
      if InsuranceJnlBatch."No. Series" <> InsuranceJnlBatch."Posting No. Series" then
        exit(InsuranceJnlBatch."Posting No. Series");
      exit('');
    END;

    [External]
    PROCEDURE SetFAJnlTrailCodes@10(VAR FAJnlLine@1000 : Record "FA Journal Line");
    VAR
      FAJnlTemplate@1001 : Record "FA Journal Template";
      FAJnlBatch@1002 : Record "FA Journal Batch";
    BEGIN
      with FAJnlLine do begin
        FAJnlTemplate.GET("Journal Template Name");
        FAJnlBatch.GET("Journal Template Name","Journal Batch Name");
        "Source Code" := FAJnlTemplate."Source Code";
        "Reason Code" := FAJnlBatch."Reason Code";
      end;
    END;

    [External]
    PROCEDURE SetInsuranceJnlTrailCodes@12(VAR InsuranceJnlLine@1000 : Record "Insurance Journal Line");
    VAR
      InsuranceJnlTempl@1001 : Record "Insurance Journal Template";
      InsuranceJnlBatch@1002 : Record "Insurance Journal Batch";
    BEGIN
      with InsuranceJnlLine do begin
        InsuranceJnlTempl.GET("Journal Template Name");
        InsuranceJnlBatch.GET("Journal Template Name","Journal Batch Name");
        "Source Code" := InsuranceJnlTempl."Source Code";
        "Reason Code" := InsuranceJnlBatch."Reason Code";
      end;
    END;

    [External]
    PROCEDURE IncFAJnlBatchName@13(VAR FAJnlBatch@1000 : Record "FA Journal Batch");
    VAR
      FAJnlSetup@1001 : Record "FA Journal Setup";
    BEGIN
      if FAJnlSetup.FIND('-') then
        repeat
          if (FAJnlSetup."FA Jnl. Template Name" = FAJnlBatch."Journal Template Name") and
             (FAJnlSetup."FA Jnl. Batch Name" = FAJnlBatch.Name)
          then begin
            FAJnlSetup."FA Jnl. Batch Name" := INCSTR(FAJnlSetup."FA Jnl. Batch Name");
            FAJnlSetup.MODIFY;
          end;
        until FAJnlSetup.NEXT = 0;
    END;

    [External]
    PROCEDURE IncGenJnlBatchName@15(VAR GenJnlBatch@1000 : Record "Gen. Journal Batch");
    VAR
      FAJnlSetup@1001 : Record "FA Journal Setup";
    BEGIN
      if FAJnlSetup.FIND('-') then
        repeat
          if (FAJnlSetup."Gen. Jnl. Template Name" = GenJnlBatch."Journal Template Name") and
             (FAJnlSetup."Gen. Jnl. Batch Name" = GenJnlBatch.Name)
          then begin
            FAJnlSetup."Gen. Jnl. Batch Name" := INCSTR(FAJnlSetup."Gen. Jnl. Batch Name");
            FAJnlSetup.MODIFY;
          end;
        until FAJnlSetup.NEXT = 0;
    END;

    [External]
    PROCEDURE IncInsuranceJnlBatchName@14(VAR InsuranceJnlBatch@1000 : Record "Insurance Journal Batch");
    VAR
      FAJnlSetup@1001 : Record "FA Journal Setup";
    BEGIN
      if FAJnlSetup.FIND('-') then
        repeat
          if (FAJnlSetup."Insurance Jnl. Template Name" = InsuranceJnlBatch."Journal Template Name") and
             (FAJnlSetup."Insurance Jnl. Batch Name" = InsuranceJnlBatch.Name)
          then begin
            FAJnlSetup."Insurance Jnl. Batch Name" := INCSTR(FAJnlSetup."Insurance Jnl. Batch Name");
            FAJnlSetup.MODIFY;
          end;
        until FAJnlSetup.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

