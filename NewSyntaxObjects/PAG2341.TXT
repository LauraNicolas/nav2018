OBJECT Page 2341 BC O365 Sales Quote
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Estimate;
    DeleteAllowed=false;
    SourceTable="Sales Header";
    DataCaptionExpr='';
    SourceTableView=WHERE("Document Type"=CONST(Quote));
    PageType=Document;
    RefreshOnActivate=true;
    OnOpenPage=VAR
                 O365SalesInitialSetup@1001 : Record "O365 Sales Initial Setup";
                 O365DocumentSendMgt@1000 : Codeunit "O365 Document Send Mgt";
                 CalendarEventMangement@1002 : Codeunit "Calendar Event Mangement";
               BEGIN
                 IsUsingVAT := O365SalesInitialSetup.IsUsingVAT;
                 O365DocumentSendMgt.ShowEstimateFailedNotificationOnOpenPage(Rec);

                 CalendarEventMangement.CreateCalendarEventForCodeunit(TODAY,SyncBusinessInfoTxt,CODEUNIT::"Graph Sync. - Business Profile");
               END;

    OnNewRecord=BEGIN
                  CustomerName := '';
                  CustomerEmail := '';
                  WorkDescription := '';
                  SetDefaultPaymentServices;
                END;

    OnInsertRecord=BEGIN
                     "Document Type" := "Document Type"::Quote;
                   END;

    OnDeleteRecord=VAR
                     CustInvoiceDisc@1000 : Record "Cust. Invoice Disc.";
                   BEGIN
                     ForceExit := true;

                     if CustInvoiceDisc.GET("Invoice Disc. Code","Currency Code",0) then
                       CustInvoiceDisc.DELETE;
                   END;

    OnQueryClosePage=BEGIN
                       exit(O365SalesInvoiceMgmt.OnQueryCloseForSalesHeader(Rec,ForceExit,CustomerName));
                     END;

    OnAfterGetCurrRecord=VAR
                           TaxArea@1003 : Record "Tax Area";
                           Currency@1000 : Record Currency;
                           GLSetup@1001 : Record "General Ledger Setup";
                           CurrencySymbol@1002 : Text[10];
                         BEGIN
                           O365SalesInvoiceMgmt.UpdateCustomerFields(Rec,CustomerName,CustomerEmail);
                           IsCompanyContact := O365SalesInvoiceMgmt.IsCustomerCompanyContact("Sell-to Customer No.");
                           WorkDescription := GetWorkDescription;
                           CurrPageEditable := CurrPage.EDITABLE;
                           O365SalesInvoiceMgmt.UpdateNoOfAttachmentsLabel(O365SalesAttachmentMgt.GetNoOfAttachments(Rec),NoOfAttachmentsValueTxt);
                           SetDefaultPaymentServices;
                           if "Currency Code" = '' then begin
                             GLSetup.GET;
                             CurrencySymbol := GLSetup.GetCurrencySymbol;
                           end else begin
                             if Currency.GET("Currency Code") then;
                             CurrencySymbol := Currency.GetCurrencySymbol;
                           end;
                           CurrencyFormat := STRSUBSTNO('%1<precision, 2:2><standard format, 0>',CurrencySymbol);

                           if ("Sell-to Customer No." = '') and ("Quote Valid Until Date" < WORKDATE) then
                             "Quote Valid Until Date" := WORKDATE + 30;

                           O365SalesInvoiceMgmt.CalcInvoiceDiscountAmount(Rec,SubTotalAmount,DiscountTxt,InvoiceDiscountAmount,InvDiscAmountVisible);
                           if "Sell-to Customer No." <> xRec."Sell-to Customer No." then
                             O365SalesInvoiceMgmt.CustomerChanged;

                           TaxAreaDescription := '';
                           if "Tax Area Code" <> '' then
                             if TaxArea.GET("Tax Area Code") then
                               TaxAreaDescription := TaxArea.Description;
                         END;

    ActionList=ACTIONS
    {
      { 22      ;    ;ActionContainer;
                      Name=Invoice;
                      CaptionML=ENU=Invoice;
                      ActionContainerType=ActionItems }
      { 11      ;1   ;Action    ;
                      Name=EmailQuote;
                      CaptionML=ENU=Send;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Promoted=true;
                      Enabled="Sell-to Customer Name" <> '';
                      PromotedIsBig=true;
                      Image=Invoicing-MDL-Send;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SETRECFILTER;

                                 if not O365SendResendInvoice.SendSalesInvoiceOrQuoteFromBC(Rec) then
                                   exit;

                                 FIND;
                                 CurrPage.UPDATE;
                                 ForceExit := true;
                                 CurrPage.CLOSE;
                               END;

                      Gesture=LeftSwipe }
      { 23      ;1   ;Action    ;
                      Name=Post;
                      CaptionML=ENU=Send final invoice;
                      ToolTipML=ENU=Finalize and send the invoice.;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Promoted=true;
                      Visible=false;
                      Enabled="Sell-to Customer Name" <> '';
                      PromotedIsBig=true;
                      Image=PostSendTo;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 ForceExit := true;
                                 COMMIT;
                                 if not O365SendResendInvoice.SendInvoiceFromQuote(Rec,false) then
                                   ForceExit := false;
                               END;
                                }
      { 28      ;1   ;Action    ;
                      Name=MakeToInvoice;
                      CaptionML=ENU=Make invoice;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Promoted=true;
                      Enabled="Sell-to Customer Name" <> '';
                      Image=Invoicing-MDL-Invoice;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 if not O365SendResendInvoice.MakeInvoiceFromQuote(Rec,true) then
                                   exit;

                                 ForceExit := true;

                                 SETRECFILTER;
                                 PAGE.RUNMODAL(PAGE::"BC O365 Sales Invoice",Rec);
                                 CurrPage.CLOSE;
                               END;
                                }
      { 3       ;1   ;Action    ;
                      Name=ViewPdf;
                      CaptionML=ENU=Preview;
                      ToolTipML=ENU=View the preview of the estimate before sending.;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Promoted=true;
                      Enabled="Sell-to Customer Name" <> '';
                      Image=Invoicing-MDL-PreviewDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReportSelections@1001 : Record "Report Selections";
                                 DocumentPath@1000 : Text[250];
                               BEGIN
                                 SETRECFILTER;
                                 LOCKTABLE;
                                 FIND;
                                 ReportSelections.GetPdfReport(DocumentPath,ReportSelections.Usage::"S.Quote",Rec,"Sell-to Customer No.");
                                 DOWNLOAD(DocumentPath,'','','',DocumentPath);
                                 FIND;
                               END;
                                }
      { 24      ;1   ;Action    ;
                      Name=SaveForLater;
                      CaptionML=ENU=Save for later;
                      ToolTipML=ENU=Close the estimate and save it for later.;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Promoted=true;
                      Visible=false;
                      Enabled="Sell-to Customer Name" <> '';
                      Image=Invoicing-Save;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ForceExit := true;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 30      ;1   ;Action    ;
                      Name=DeleteAction;
                      CaptionML=ENU=Discard;
                      ToolTipML=ENU=Discards the estimate;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Promoted=true;
                      Enabled=CustomerName <> '';
                      Image=Invoicing-MDL-Delete;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CustInvoiceDisc@1000 : Record "Cust. Invoice Disc.";
                               BEGIN
                                 if not CONFIRM(DeleteQst) then
                                   exit;

                                 ForceExit := true;

                                 if CustInvoiceDisc.GET("Invoice Disc. Code","Currency Code",0) then
                                   CustInvoiceDisc.DELETE;
                                 DELETE(true);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 5   ;1   ;Group     ;
                Name=Sell to;
                CaptionML=ENU=Sell to;
                GroupType=Group }

    { 9   ;2   ;Field     ;
                Name=Sell-to Customer Name;
                CaptionML=ENU=Customer Name;
                ToolTipML=ENU=Specifies the customer's name.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                NotBlank=true;
                SourceExpr="Sell-to Customer Name";
                Importance=Promoted;
                LookupPageID="BC O365 Contact Lookup";
                OnValidate=BEGIN
                             O365SalesInvoiceMgmt.ValidateCustomerName(Rec,CustomerName,CustomerEmail);
                             CurrPage.UPDATE(true);
                           END;

                ImplicitType=Text50;
                ShowMandatory=TRUE;
                QuickEntry=FALSE }

    { 18  ;2   ;Field     ;
                Name=CustomerEmail;
                ExtendedDatatype=E-Mail;
                CaptionML=ENU=Email Address;
                ToolTipML=ENU=Specifies the customer's email address.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=CustomerEmail;
                Editable=CurrPageEditable AND (CustomerName <> '');
                OnValidate=BEGIN
                             O365SalesInvoiceMgmt.ValidateCustomerEmail(Rec,CustomerEmail);
                           END;

                ImplicitType=Text80 }

    { 29  ;2   ;Field     ;
                Name=Quote Accepted;
                CaptionML=ENU=Customer accepted;
                ToolTipML=ENU=Specifies whether the customer has accepted the quote or not.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Quote Accepted";
                Editable=CurrPageEditable AND (CustomerName <> '');
                ImplicitType=Boolean }

    { 10  ;2   ;Group     ;
                Name=Group10;
                Visible=CustomerName <> '';
                GroupType=Group }

    { 7   ;3   ;Field     ;
                Name=ViewContactCard;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=ViewContactDetailsLbl;
                Editable=FALSE;
                OnDrillDown=VAR
                              Customer@1000 : Record Customer;
                            BEGIN
                              if Customer.GET("Sell-to Customer No.") then
                                PAGE.RUNMODAL(PAGE::"BC O365 Sales Customer Card",Customer);
                            END;

                ImplicitType=TextConst;
                ShowCaption=false }

    { 58  ;2   ;Group     ;
                Name=Group58;
                GroupType=Group }

    { 57  ;3   ;Field     ;
                Name=Sell-to Address;
                CaptionML=ENU=Address;
                ToolTipML=ENU=Specifies the address where the customer is located.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Sell-to Address";
                Editable=CustomerName <> '';
                ImplicitType=Text50 }

    { 56  ;3   ;Field     ;
                Name=Sell-to Address 2;
                CaptionML=ENU=Address 2;
                ToolTipML=ENU=Specifies additional address information.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Sell-to Address 2";
                Editable=CustomerName <> '';
                ImplicitType=Text50 }

    { 55  ;3   ;Field     ;
                Name=Sell-to Post Code;
                Lookup=false;
                CaptionML=ENU=Post Code;
                ToolTipML=ENU=Specifies the postal code.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Sell-to Post Code";
                Editable=CustomerName <> '';
                ImplicitType=Code20 }

    { 54  ;3   ;Field     ;
                Name=Sell-to City;
                Lookup=false;
                CaptionML=ENU=City;
                ToolTipML=ENU=Specifies the address city.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Sell-to City";
                Editable=CustomerName <> '';
                ImplicitType=Text30 }

    { 53  ;3   ;Field     ;
                Name=Sell-to County;
                Lookup=false;
                CaptionML=ENU=County;
                ToolTipML=ENU=Specifies the address county.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Sell-to County";
                Editable=CustomerName <> '';
                ImplicitType=Text30 }

    { 52  ;3   ;Field     ;
                Name=Sell-to Country/Region Code;
                CaptionML=ENU=Country/Region Code;
                ToolTipML=ENU=Specifies the address country/region.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Sell-to Country/Region Code";
                Editable=CustomerName <> '';
                OnLookup=VAR
                           O365CountryRegion@1000 : Record "O365 Country/Region";
                         BEGIN
                           if PAGE.RUNMODAL(PAGE::"O365 Country/Region List",O365CountryRegion) <> ACTION::LookupOK then
                             exit;

                           "Sell-to Country/Region Code" := O365CountryRegion.Code;
                         END;

                ImplicitType=Code10 }

    { 2   ;1   ;Group     ;
                Name=Quote Details;
                CaptionML=ENU=Quote Details;
                GroupType=Group }

    { 26  ;2   ;Field     ;
                Name=Quote Valid Until Date;
                CaptionML=ENU=Valid until;
                ToolTipML=ENU=Specifies how long the quote is valid.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Quote Valid Until Date";
                Editable=CustomerName <> '';
                ImplicitType=Date }

    { 4   ;2   ;Field     ;
                Name=Quote Sent to Customer;
                CaptionML=ENU=Sent;
                ToolTipML=ENU=Specifies date and time of when the quote was sent to the customer.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Quote Sent to Customer";
                ImplicitType=DateTime }

    { 6   ;2   ;Field     ;
                Name=Quote Accepted Date;
                CaptionML=ENU=Accepted on;
                ToolTipML=ENU=Specifies when the client accepted the quote.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Quote Accepted Date";
                ImplicitType=Date }

    { 35  ;2   ;Field     ;
                Name=Tax Liable;
                CaptionML=ENU=Customer is tax liable;
                ToolTipML=ENU=Specifies if the sales invoice contains sales tax.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Tax Liable";
                Visible=NOT IsUsingVAT;
                Editable=CustomerName <> '';
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;

                ImplicitType=Boolean }

    { 34  ;2   ;Field     ;
                Name=TaxAreaDescription;
                CaptionML=ENU=Customer tax rate;
                ToolTipML=ENU=Specifies the customer's tax area.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                NotBlank=true;
                SourceExpr=TaxAreaDescription;
                Visible=NOT IsUsingVAT;
                Enabled=CustomerName <> '';
                Editable=FALSE;
                OnAssistEdit=VAR
                               TaxArea@1000 : Record "Tax Area";
                             BEGIN
                               if PAGE.RUNMODAL(PAGE::"O365 Tax Area List",TaxArea) = ACTION::LookupOK then begin
                                 VALIDATE("Tax Area Code",TaxArea.Code);
                                 TaxAreaDescription := TaxArea.Description;
                                 CurrPage.UPDATE;
                               end;
                             END;

                ImplicitType=Text50;
                QuickEntry=FALSE }

    { 27  ;2   ;Field     ;
                Name=VAT Registration No.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="VAT Registration No.";
                Visible=IsUsingVAT;
                Editable=(IsUsingVAT AND IsCompanyContact);
                ImplicitType=Text20 }

    { 44  ;1   ;Part      ;
                Name=Lines;
                CaptionML=ENU=Line Items;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SubPageLink="Document Type"=FIELD("Document Type"),
                            "Document No."=FIELD("No.");
                PagePartID="BC O365 Sales Inv. Line Subp.";
                Enabled=CustomerName <> '';
                Editable=CustomerName <> '';
                PartType=Page }

    { 33  ;1   ;Group     ;
                Name=Totals;
                CaptionML=ENU=Totals;
                Visible=NOT InvDiscAmountVisible;
                GroupType=Group }

    { 32  ;2   ;Group     ;
                Name=Group32;
                GroupType=Group }

    { 31  ;3   ;Field     ;
                Name=Amount;
                Lookup=false;
                DrillDown=false;
                CaptionML=ENU=Net Total;
                ToolTipML=ENU=Specifies the total amount on the sales invoice excluding VAT.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Amount;
                AutoFormatType=10;
                AutoFormatExpr=CurrencyFormat;
                ImplicitType=Decimal }

    { 25  ;3   ;Field     ;
                Name=AmountInclVAT;
                Lookup=false;
                DrillDown=false;
                CaptionML=ENU=Total Including VAT;
                ToolTipML=ENU=Specifies the total amount on the sales invoice including VAT.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Amount Including VAT";
                AutoFormatType=10;
                AutoFormatExpr=CurrencyFormat;
                Importance=Promoted;
                Style=Strong;
                StyleExpr=TRUE;
                ImplicitType=Decimal }

    { 21  ;3   ;Field     ;
                Name=DiscountLink;
                DrillDown=true;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=DiscountTxt;
                Enabled=CustomerName <> '';
                Editable=FALSE;
                OnDrillDown=BEGIN
                              if PAGE.RUNMODAL(PAGE::"O365 Sales Invoice Discount",Rec) = ACTION::LookupOK then
                                CurrPage.UPDATE;
                            END;

                ImplicitType=Text;
                ShowCaption=false }

    { 20  ;1   ;Group     ;
                Name=Group20;
                CaptionML=ENU=Totals;
                Visible=InvDiscAmountVisible;
                GroupType=Group }

    { 19  ;2   ;Group     ;
                Name=Group19;
                GroupType=Group }

    { 17  ;3   ;Field     ;
                Name=SubTotalAmount;
                CaptionML=ENU=Subtotal;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=SubTotalAmount;
                AutoFormatType=10;
                AutoFormatExpr=CurrencyFormat;
                Importance=Promoted;
                Editable=FALSE;
                ImplicitType=Decimal }

    { 16  ;3   ;Field     ;
                Name=InvoiceDiscount;
                CaptionML=ENU=Invoice Discount;
                ToolTipML=ENU=Specifies the invoice discount amount. To edit the invoice discount, click on the amount.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=-InvoiceDiscountAmount;
                AutoFormatType=10;
                AutoFormatExpr=CurrencyFormat;
                CaptionClass=GetInvDiscountCaption;
                Importance=Promoted;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              if PAGE.RUNMODAL(PAGE::"O365 Sales Invoice Discount",Rec) = ACTION::LookupOK then
                                CurrPage.UPDATE;
                            END;
                             }

    { 15  ;3   ;Field     ;
                Name=Amount2;
                Lookup=false;
                DrillDown=false;
                CaptionML=ENU=Net Total;
                ToolTipML=ENU=Specifies the total amount on the sales invoice excluding VAT.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Amount;
                AutoFormatType=10;
                AutoFormatExpr=CurrencyFormat;
                ImplicitType=Decimal }

    { 14  ;3   ;Field     ;
                Name=AmountInclVAT2;
                Lookup=false;
                DrillDown=false;
                CaptionML=ENU=Total Including VAT;
                ToolTipML=ENU=Specifies the total amount on the sales invoice including VAT.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Amount Including VAT";
                AutoFormatType=10;
                AutoFormatExpr=CurrencyFormat;
                Importance=Promoted;
                Style=Strong;
                StyleExpr=TRUE;
                ImplicitType=Decimal }

    { 12  ;1   ;Group     ;
                Name=Note for customer;
                CaptionML=ENU=Note for customer;
                GroupType=Group }

    { 8   ;2   ;Field     ;
                Name=WorkDescription;
                CaptionML=ENU=Note for customer;
                ToolTipML=ENU=Specifies the products or service being offered;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=WorkDescription;
                Editable=CurrPageEditable AND (CustomerName <> '');
                MultiLine=true;
                OnValidate=BEGIN
                             SetWorkDescription(WorkDescription);
                           END;

                ImplicitType=Text;
                ShowCaption=false }

    { 13  ;1   ;Field     ;
                Name=NoOfAttachmentsValueTxt;
                DrillDown=true;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=NoOfAttachmentsValueTxt;
                Enabled=CustomerName <> '';
                Editable=FALSE;
                OnDrillDown=BEGIN
                              O365SalesInvoiceMgmt.UpdateNoOfAttachmentsLabel(O365SalesAttachmentMgt.EditAttachments(Rec),NoOfAttachmentsValueTxt);
                              CurrPage.UPDATE(false);
                            END;

                ImplicitType=Text;
                ShowCaption=false }

  }
  CODE
  {
    VAR
      O365SalesAttachmentMgt@1006 : Codeunit "O365 Sales Attachment Mgt";
      O365SendResendInvoice@1001 : Codeunit "O365 Send + Resend Invoice";
      O365SalesInvoiceMgmt@1005 : Codeunit "O365 Sales Invoice Mgmt";
      CustomerName@1000 : Text[50];
      CustomerEmail@1004 : Text[80];
      WorkDescription@1002 : Text;
      CurrPageEditable@1003 : Boolean;
      IsUsingVAT@1010 : Boolean;
      ForceExit@1012 : Boolean;
      InvDiscAmountVisible@1022 : Boolean;
      IsCompanyContact@1015 : Boolean;
      InvoiceDiscountAmount@1037 : Decimal;
      SubTotalAmount@1020 : Decimal;
      DiscountTxt@1019 : Text;
      NoOfAttachmentsValueTxt@1011 : Text;
      CurrencyFormat@1013 : Text;
      DeleteQst@1009 : TextConst 'ENU=Are you sure?';
      ViewContactDetailsLbl@1007 : TextConst 'ENU=View contact details';
      InvoicDiscountLbl@1008 : TextConst 'ENU=Invoice Discount';
      TaxAreaDescription@1014 : Text[50];
      SyncBusinessInfoTxt@1016 : TextConst 'ENU=Delta sync Business Information';

    PROCEDURE SuppressExitPrompt@5();
    BEGIN
      ForceExit := true;
    END;

    LOCAL PROCEDURE GetInvDiscountCaption@8() : Text;
    BEGIN
      if "Invoice Discount Value" = 0 then
        exit(InvoicDiscountLbl);
      exit(STRSUBSTNO('%1 (%2%)',InvoicDiscountLbl,ROUND("Invoice Discount Value",0.1)));
    END;

    BEGIN
    END.
  }
}

