OBJECT Table 959 Time Sheet Chart Setup
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Time Sheet Chart Setup;
  }
  FIELDS
  {
    { 1   ;   ;User ID             ;Text132       ;CaptionML=ENU=User ID }
    { 2   ;   ;Starting Date       ;Date          ;CaptionML=ENU=Starting Date }
    { 3   ;   ;Show by             ;Option        ;CaptionML=ENU=Show by;
                                                   OptionCaptionML=ENU=Status,Type,Posted;
                                                   OptionString=Status,Type,Posted }
    { 4   ;   ;Measure Type        ;Option        ;CaptionML=ENU=Measure Type;
                                                   OptionCaptionML=ENU=Open,Submitted,Rejected,Approved,Scheduled,Posted,Not Posted,Resource,Job,Service,Absence,Assembly Order;
                                                   OptionString=Open,Submitted,Rejected,Approved,Scheduled,Posted,"Not Posted",Resource,Job,Service,Absence,"Assembly Order" }
  }
  KEYS
  {
    {    ;"User ID"                               ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1000 : TextConst '@@@=Period: (date)..(date) | show by (Status or Posted) | updated (time).;ENU=Period: %1..%2 | Show by: %3 | Updated: %4.';

    [External]
    PROCEDURE GetCurrentSelectionText@1() : Text[250];
    BEGIN
      exit(STRSUBSTNO(Text001,"Starting Date",GetEndingDate,"Show by",TIME));
    END;

    [External]
    PROCEDURE SetStartingDate@2(StartingDate@1000 : Date);
    BEGIN
      "Starting Date" := StartingDate;
      MODIFY;
    END;

    [External]
    PROCEDURE GetEndingDate@4() : Date;
    BEGIN
      exit(CALCDATE('<1W>',"Starting Date") - 1);
    END;

    [External]
    PROCEDURE FindPeriod@3(Which@1000 : 'Previous,Next');
    BEGIN
      case Which of
        Which::Previous:
          "Starting Date" := CALCDATE('<-1W>',"Starting Date");
        Which::Next:
          "Starting Date" := CALCDATE('<+1W>',"Starting Date");
      end;
      MODIFY;
    END;

    [External]
    PROCEDURE SetShowBy@5(ShowBy@1000 : Option);
    BEGIN
      "Show by" := ShowBy;
      MODIFY;
    END;

    [External]
    PROCEDURE MeasureIndex2MeasureType@6(MeasureIndex@1000 : Integer) : Integer;
    BEGIN
      case "Show by" of
        "Show by"::Status:
          exit(MeasureIndex);
        "Show by"::Posted:
          case MeasureIndex of
            0:
              exit("Measure Type"::Posted);
            1:
              exit("Measure Type"::"Not Posted");
            2:
              exit("Measure Type"::Scheduled);
          end;
        "Show by"::Type:
          begin
            if MeasureIndex = 5 then
              exit("Measure Type"::Scheduled);
            exit(MeasureIndex + 7);
          end;
      end;
    END;

    BEGIN
    END.
  }
}

