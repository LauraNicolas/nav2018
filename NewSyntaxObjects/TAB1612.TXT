OBJECT Table 1612 Office Admin. Credentials
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Service Password"=rimd,
                TableData "Office Admin. Credentials"=r;
    OnInsert=BEGIN
               if Endpoint = '' then
                 VALIDATE(Endpoint,DefaultEndpoint);
             END;

    OnModify=BEGIN
               if Endpoint = '' then
                 VALIDATE(Endpoint,DefaultEndpoint);
             END;

    CaptionML=ENU=Office Admin. Credentials;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Email               ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=ENU=Email;
                                                   NotBlank=true }
    { 3   ;   ;Password            ;Text250       ;ExtendedDatatype=Masked;
                                                   CaptionML=ENU=Password;
                                                   NotBlank=true }
    { 4   ;   ;Endpoint            ;Text250       ;CaptionML=ENU=Endpoint }
  }
  KEYS
  {
    {    ;"Primary Key"                           ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE DefaultEndpoint@1() : Text[250];
    BEGIN
      exit('https://ps.outlook.com/powershell-liveid');
    END;

    PROCEDURE SavePassword@2(PasswordText@1000 : Text);
    VAR
      ServicePassword@1001 : Record "Service Password";
      PasswordKeyGUID@1002 : GUID;
    BEGIN
      PasswordText := DELCHR(PasswordText,'=',' ');
      if Password <> '' then
        EVALUATE(PasswordKeyGUID,Password);
      if ISNULLGUID(PasswordKeyGUID) or not ServicePassword.GET(PasswordKeyGUID) then begin
        ServicePassword.SavePassword(PasswordText);
        ServicePassword.INSERT(true);
        Password := ServicePassword.Key;
        MODIFY;
      end else begin
        ServicePassword.SavePassword(PasswordText);
        ServicePassword.MODIFY;
      end;
    END;

    PROCEDURE GetPassword@3() : Text;
    VAR
      ServicePassword@1001 : Record "Service Password";
      PasswordKeyGUID@1000 : GUID;
    BEGIN
      if Password <> '' then
        EVALUATE(PasswordKeyGUID,Password);
      if not ISNULLGUID(PasswordKeyGUID) then
        if ServicePassword.GET(PasswordKeyGUID) then
          exit(ServicePassword.GetPassword);
    END;

    BEGIN
    END.
  }
}

