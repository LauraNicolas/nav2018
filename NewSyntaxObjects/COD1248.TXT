OBJECT Codeunit 1248 Process Bank Acc. Rec Lines
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    TableNo="Bank Acc. Reconciliation Line";
    Permissions=TableData "Data Exch."=rimd;
    OnRun=VAR
            DataExch@1001 : Record "Data Exch.";
            ProcessDataExch@1002 : Codeunit "Process Data Exch.";
            RecRef@1000 : RecordRef;
          BEGIN
            DataExch.GET("Data Exch. Entry No.");
            RecRef.GETTABLE(Rec);
            ProcessDataExch.ProcessAllLinesColumnMapping(DataExch,RecRef);
          END;

  }
  CODE
  {
    VAR
      ProgressWindowMsg@1000 : TextConst 'ENU=Please wait while the operation is being completed.';

    [Internal]
    PROCEDURE ImportBankStatement@6(BankAccRecon@1004 : Record "Bank Acc. Reconciliation";DataExch@1003 : Record "Data Exch.") : Boolean;
    VAR
      BankAcc@1000 : Record "Bank Account";
      DataExchDef@1001 : Record "Data Exch. Def";
      DataExchMapping@1002 : Record "Data Exch. Mapping";
      DataExchLineDef@1005 : Record "Data Exch. Line Def";
      TempBankAccReconLine@1006 : TEMPORARY Record "Bank Acc. Reconciliation Line";
      ProgressWindow@1008 : Dialog;
    BEGIN
      BankAcc.GET(BankAccRecon."Bank Account No.");
      BankAcc.GetDataExchDef(DataExchDef);

      DataExch."Related Record" := BankAcc.RECORDID;
      DataExch."Data Exch. Def Code" := DataExchDef.Code;

      if not DataExch.ImportToDataExch(DataExchDef)then
        exit(false);

      ProgressWindow.OPEN(ProgressWindowMsg);

      CreateBankAccRecLineTemplate(TempBankAccReconLine,BankAccRecon,DataExch);
      DataExchLineDef.SETRANGE("Data Exch. Def Code",DataExchDef.Code);
      DataExchLineDef.FINDFIRST;

      DataExchMapping.GET(DataExchDef.Code,DataExchLineDef.Code,DATABASE::"Bank Acc. Reconciliation Line");

      if DataExchMapping."Pre-Mapping Codeunit" <> 0 then
        CODEUNIT.RUN(DataExchMapping."Pre-Mapping Codeunit",TempBankAccReconLine);

      DataExchMapping.TESTFIELD("Mapping Codeunit");
      CODEUNIT.RUN(DataExchMapping."Mapping Codeunit",TempBankAccReconLine);

      if DataExchMapping."Post-Mapping Codeunit" <> 0 then
        CODEUNIT.RUN(DataExchMapping."Post-Mapping Codeunit",TempBankAccReconLine);

      InsertNonReconciledNonImportedLines(TempBankAccReconLine,GetStatementLineNoOffset(BankAccRecon));

      ProgressWindow.CLOSE;
      exit(true);
    END;

    PROCEDURE CreateBankAccRecLineTemplate@9(VAR BankAccReconLine@1000 : Record "Bank Acc. Reconciliation Line";BankAccRecon@1002 : Record "Bank Acc. Reconciliation";DataExch@1001 : Record "Data Exch.");
    BEGIN
      BankAccReconLine.INIT;
      BankAccReconLine."Statement Type" := BankAccRecon."Statement Type";
      BankAccReconLine."Statement No." := BankAccRecon."Statement No.";
      BankAccReconLine."Bank Account No." := BankAccRecon."Bank Account No.";
      BankAccReconLine."Data Exch. Entry No." := DataExch."Entry No.";
    END;

    LOCAL PROCEDURE InsertNonReconciledNonImportedLines@1(VAR TempBankAccReconLine@1000 : TEMPORARY Record "Bank Acc. Reconciliation Line";StatementLineNoOffset@1002 : Integer);
    VAR
      BankAccReconciliationLine@1001 : Record "Bank Acc. Reconciliation Line";
    BEGIN
      if TempBankAccReconLine.FINDSET then
        repeat
          if TempBankAccReconLine.CanImport then begin
            BankAccReconciliationLine := TempBankAccReconLine;
            BankAccReconciliationLine."Statement Line No." += StatementLineNoOffset;
            BankAccReconciliationLine.INSERT;
          end;
        until TempBankAccReconLine.NEXT = 0;
    END;

    LOCAL PROCEDURE GetStatementLineNoOffset@3(BankAccRecon@1000 : Record "Bank Acc. Reconciliation") : Integer;
    VAR
      BankAccReconLine@1001 : Record "Bank Acc. Reconciliation Line";
    BEGIN
      BankAccReconLine.SETRANGE("Statement Type",BankAccRecon."Statement Type");
      BankAccReconLine.SETRANGE("Statement No.",BankAccRecon."Statement No.");
      BankAccReconLine.SETRANGE("Bank Account No.",BankAccRecon."Bank Account No.");
      if BankAccReconLine.FINDLAST then
        exit(BankAccReconLine."Statement Line No.");
      exit(0)
    END;

    BEGIN
    END.
  }
}

