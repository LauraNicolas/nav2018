OBJECT Table 5810 Rounding Residual Buffer
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Rounding Residual Buffer;
  }
  FIELDS
  {
    { 1   ;   ;Item Ledger Entry No.;Integer      ;CaptionML=ENU=Item Ledger Entry No. }
    { 2   ;   ;Adjusted Cost       ;Decimal       ;CaptionML=ENU=Adjusted Cost }
    { 3   ;   ;Adjusted Cost (ACY) ;Decimal       ;CaptionML=ENU=Adjusted Cost (ACY) }
    { 4   ;   ;Completely Invoiced ;Boolean       ;CaptionML=ENU=Completely Invoiced }
    { 5   ;   ;No. of Hits         ;Integer       ;CaptionML=ENU=No. of Hits }
  }
  KEYS
  {
    {    ;"Item Ledger Entry No."                 ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE AddAdjustedCost@1(NewInboundEntryNo@1000 : Integer;NewAdjustedCost@1001 : Decimal;NewAdjustedCostACY@1002 : Decimal;NewCompletelyInvoiced@1003 : Boolean);
    BEGIN
      if not HasNewCost(NewAdjustedCost,NewAdjustedCostACY) and NewCompletelyInvoiced then begin
        Retrieve(NewInboundEntryNo);
        exit;
      end;

      if Retrieve(NewInboundEntryNo) then begin
        "Adjusted Cost" := "Adjusted Cost" + NewAdjustedCost;
        "Adjusted Cost (ACY)" := "Adjusted Cost (ACY)" + NewAdjustedCostACY;
        if not NewCompletelyInvoiced then
          "Completely Invoiced" := false;
        MODIFY;
      end else begin
        INIT;
        "Adjusted Cost" := NewAdjustedCost;
        "Adjusted Cost (ACY)" := NewAdjustedCostACY;
        "Completely Invoiced" := NewCompletelyInvoiced;
        INSERT;
      end;
    END;

    [External]
    PROCEDURE UpdRoundingCheck@2(NewInboundEntryNo@1000 : Integer;NewAdjustedCost@1001 : Decimal;NewAdjustedCostACY@1002 : Decimal;RdngPrecision@1004 : Decimal;RndngPrecisionACY@1005 : Decimal);
    BEGIN
      if not HasNewCost(NewAdjustedCost,NewAdjustedCostACY) then begin
        Retrieve(NewInboundEntryNo);
        exit;
      end;

      if Retrieve(NewInboundEntryNo) then begin
        if ((RdngPrecision >= NewAdjustedCost) or
            (RndngPrecisionACY >= NewAdjustedCostACY)) and
           (("Adjusted Cost" * NewAdjustedCost <= 0) and
            ("Adjusted Cost (ACY)" * NewAdjustedCostACY <= 0))
        then
          "No. of Hits" := "No. of Hits" + 1
        else
          "No. of Hits" := 0;

        "Adjusted Cost" := NewAdjustedCost;
        "Adjusted Cost (ACY)" := NewAdjustedCostACY;
        MODIFY;
      end else begin
        INIT;
        "Adjusted Cost" := NewAdjustedCost;
        "Adjusted Cost (ACY)" := NewAdjustedCostACY;
        INSERT;
      end;
    END;

    LOCAL PROCEDURE Retrieve@72(NewInboundEntryNo@1000 : Integer) : Boolean;
    BEGIN
      RESET;
      "Item Ledger Entry No." := NewInboundEntryNo;
      if not FIND then begin
        INIT;
        exit(false);
      end;
      exit(true);
    END;

    LOCAL PROCEDURE HasNewCost@54(NewCost@1000 : Decimal;NewCostACY@1001 : Decimal) : Boolean;
    BEGIN
      exit((NewCost <> 0) or (NewCostACY <> 0));
    END;

    BEGIN
    END.
  }
}

