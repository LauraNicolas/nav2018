OBJECT Page 189 Incoming Document
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Incoming Document;
    SourceTable="Incoming Document";
    PageType=Document;
    PromotedActionCategoriesML=ENU=New,Process,Report,Release,Status,Incoming Document,OCR,Approve,Request Approval;
    OnInit=BEGIN
             IsDataExchTypeEditable := true;
             EnableReceiveFromOCR := WaitingToReceiveFromOCR;
           END;

    OnOpenPage=VAR
                 FileManagement@1000 : Codeunit "File Management";
               BEGIN
                 if FileManagement.CanRunDotNetOnClient then begin
                   HasCamera := CameraProvider.IsAvailable;
                   if HasCamera then
                     CameraProvider := CameraProvider.Create;
                 end;

                 UpdateOCRSetupVisibility;
               END;

    OnAfterGetRecord=BEGIN
                       URL := GetURL;
                       ShowErrors;
                       EnableReceiveFromOCR := WaitingToReceiveFromOCR;
                       CurrPage.EDITABLE(not Processed);
                     END;

    OnNewRecord=BEGIN
                  URL := '';
                END;

    OnInsertRecord=BEGIN
                     AttachEnabled := true;
                   END;

    OnModifyRecord=VAR
                     IncomingDocumentAttachment@1000 : Record "Incoming Document Attachment";
                   BEGIN
                     OCRDataCorrectionEnabled := GetGeneratedFromOCRAttachment(IncomingDocumentAttachment);
                     RecordHasAttachment := HasAttachment;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           IsDataExchTypeEditable := not (Status in [Status::Created,Status::Posted]);
                           ShowErrors;
                           SetCalculatedFields;
                           RecordHasAttachment := HasAttachment;
                           SetControlVisibility;
                           AttachEnabled := "Entry No." <> 0;
                         END;

    ActionList=ACTIONS
    {
      { 52      ;    ;ActionContainer;
                      Name=New;
                      CaptionML=ENU=New;
                      ActionContainerType=NewDocumentItems }
      { 46      ;    ;ActionContainer;
                      Name=Related Information;
                      CaptionML=ENU=Related Information;
                      ActionContainerType=RelatedInformation }
      { 57      ;1   ;ActionGroup;
                      Name=ActionGroup57;
                      CaptionML=ENU=Setup }
      { 44      ;2   ;Action    ;
                      Name=Setup;
                      CaptionML=ENU=Setup;
                      ToolTipML=ENU=Define the general journal type to use when creating journal lines. You can also specify whether it requires approval to create documents and journal lines.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Incoming Documents Setup";
                      Image=Setup }
      { 22      ;2   ;Action    ;
                      Name=DataExchangeTypes;
                      CaptionML=ENU=Data Exchange Types;
                      ToolTipML=ENU=View the data exchange types that are available to convert electronic documents to documents in Dynamics 365.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Data Exchange Types";
                      Promoted=true;
                      Image=Entries;
                      PromotedCategory=Category6 }
      { 73      ;2   ;Action    ;
                      Name=ActivityLog;
                      CaptionML=ENU=Activity Log;
                      ToolTipML=ENU=View the status and any errors if the document was sent as an electronic document or OCR file through the document exchange service.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Log;
                      OnAction=VAR
                                 ActivityLog@1002 : Record "Activity Log";
                               BEGIN
                                 ActivityLog.ShowEntries(RECORDID);
                               END;
                                }
      { 69      ;2   ;Action    ;
                      Name=OCRSetup;
                      CaptionML=ENU=OCR Setup;
                      ToolTipML=ENU=Open the OCR Service Setup window, for example to change credentials or enable the service.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=ShowOCRSetup;
                      PromotedIsBig=true;
                      Image=ServiceSetup;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 PAGE.RUNMODAL(PAGE::"OCR Service Setup");
                                 CurrPage.UPDATE;
                                 if CURRENTCLIENTTYPE = CLIENTTYPE::Web then
                                   if OCRIsEnabled then begin
                                     OnCloseIncomingDocumentFromAction(Rec);
                                     CurrPage.CLOSE;
                                   end;
                               END;
                                }
      { 91      ;2   ;Action    ;
                      Name=ApprovalEntries;
                      AccessByPermission=TableData "Approval Entry"=R;
                      CaptionML=ENU=Approvals;
                      ToolTipML=ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                      ApplicationArea=#Suite;
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.OpenApprovalEntriesPage(RECORDID);
                               END;
                                }
      { 43      ;    ;ActionContainer;
                      Name=Process;
                      CaptionML=ENU=Process;
                      ActionContainerType=ActionItems }
      { 121     ;1   ;Action    ;
                      Name=CreateDocument;
                      CaptionML=ENU=Create Document;
                      ToolTipML=ENU=Create a document, such as a purchase invoice, automatically by converting the electronic document that is attached to the incoming document record.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=AutomaticCreationActionsAreEnabled;
                      PromotedIsBig=true;
                      Image=CreateDocument;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 "Created Doc. Error Msg. Type" := "Created Doc. Error Msg. Type"::Warning;
                                 MODIFY;
                                 CreateDocumentWithDataExchange;
                               END;
                                }
      { 31      ;1   ;Action    ;
                      Name=CreateGenJnlLine;
                      CaptionML=ENU=Create Journal Line;
                      ToolTipML=ENU=Create a journal line automatically by converting the electronic document that is attached to the incoming document record.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=AutomaticCreationActionsAreEnabled;
                      PromotedIsBig=true;
                      Image=TransferToGeneralJournal;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 CreateGeneralJournalLineWithDataExchange;
                               END;
                                }
      { 285     ;1   ;Action    ;
                      Name=CreateManually;
                      CaptionML=ENU=Create Manually;
                      ToolTipML=ENU=Create a document, such as a purchase invoice, manually from information in the file that is attached to the incoming document record.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=CreateCreditMemo;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 if not AskUserPermission then
                                   exit;

                                 CreateManually;
                               END;
                                }
      { 21      ;1   ;Action    ;
                      Name=AttachFile;
                      CaptionML=ENU=Attach File;
                      ToolTipML=ENU=Attach a file to the incoming document record.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Image=Attach;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 ImportAttachment(Rec);
                                 CurrPage.UPDATE(true);
                               END;
                                }
      { 85      ;1   ;Action    ;
                      Name=ReplaceMainAttachment;
                      CaptionML=ENU=Replace Main Attachment;
                      ToolTipML=ENU=Attach another file to be used as the main file attachment on the incoming document record.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=ReplaceMainAttachmentEnabled;
                      Image=Interaction;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 ReplaceOrInsertMainAttachment;
                                 CLEAR("Data Exchange Type");
                               END;
                                }
      { 30      ;1   ;Action    ;
                      Name=AttachFromCamera;
                      CaptionML=ENU=Attach Image from Camera;
                      ToolTipML=ENU=Add a picture from your device camera to the document.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=HasCamera;
                      Enabled=AttachEnabled;
                      PromotedIsBig=true;
                      Image=Camera;
                      PromotedOnly=true;
                      OnAction=VAR
                                 CameraOptions@1000 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraOptions";
                               BEGIN
                                 if not HasCamera then
                                   exit;
                                 CameraOptions := CameraOptions.CameraOptions;
                                 CameraOptions.Quality := 100; // 100%
                                 CameraProvider.RequestPictureAsync(CameraOptions);
                               END;
                                }
      { 64      ;1   ;Action    ;
                      Name=TextToAccountMapping;
                      CaptionML=ENU=Map Text to Account;
                      ToolTipML=ENU=Create a mapping of text on incoming documents to identical text on specific debit, credit, and balancing accounts in the general ledger or on bank accounts so that the resulting document or journal lines are prefilled with the specified information.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Text-to-Account Mapping Wksh.";
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=MapAccounts;
                      PromotedCategory=Process;
                      PromotedOnly=true }
      { 45      ;1   ;ActionGroup;
                      Name=ActionGroup45;
                      CaptionML=ENU=Release }
      { 12      ;2   ;Action    ;
                      Name=Release;
                      CaptionML=ENU=Release;
                      ToolTipML=ENU=Release the incoming document to indicate that it has been approved by the incoming document approver. Note that this is not related to approval workflows.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=RecordHasAttachment;
                      PromotedIsBig=true;
                      Image=Approve;
                      PromotedCategory=Category4;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ReleaseIncomingDocument@1000 : Codeunit "Release Incoming Document";
                               BEGIN
                                 ReleaseIncomingDocument.PerformManualRelease(Rec);
                               END;
                                }
      { 82      ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=ENU=Reopen;
                      ToolTipML=ENU=Reopen the incoming document record after it has been approved by the incoming document approver. Note that this is not related to approval workflows.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=RecordHasAttachment;
                      PromotedIsBig=true;
                      Image=ReOpen;
                      PromotedCategory=Category4;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ReleaseIncomingDocument@1000 : Codeunit "Release Incoming Document";
                               BEGIN
                                 ReleaseIncomingDocument.PerformManualReopen(Rec);
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=ENU=Reject;
                      ToolTipML=ENU=Reject to approve the incoming document. Note that this is not related to approval workflows.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=RecordHasAttachment;
                      PromotedIsBig=true;
                      Image=Reject;
                      PromotedCategory=Category4;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ReleaseIncomingDocument@1000 : Codeunit "Release Incoming Document";
                               BEGIN
                                 ReleaseIncomingDocument.PerformManualReject(Rec);
                               END;
                                }
      { 92      ;1   ;ActionGroup;
                      Name=Status;
                      CaptionML=ENU=Status }
      { 88      ;2   ;Action    ;
                      Name=SetToProcessed;
                      CaptionML=ENU=Set To Processed;
                      ToolTipML=ENU=Set the incoming document to processed. It will then be moved to the Processed Incoming Documents window.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=NOT Processed;
                      PromotedIsBig=true;
                      Image=Archive;
                      PromotedCategory=Category5;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 VALIDATE(Processed,true);
                                 MODIFY(true);
                               END;
                                }
      { 89      ;2   ;Action    ;
                      Name=SetToUnprocessed;
                      CaptionML=ENU=Set To Unprocessed;
                      ToolTipML=ENU=Set the incoming document to unprocessed. This allows you to edit information or perform actions for the incoming document.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=Processed;
                      PromotedIsBig=true;
                      Image=ReOpen;
                      PromotedCategory=Category5;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 VALIDATE(Processed,false);
                                 MODIFY(true);
                               END;
                                }
      { 74      ;1   ;ActionGroup;
                      Name=Approval;
                      CaptionML=ENU=Approval }
      { 75      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=ENU=Approve;
                      ToolTipML=ENU=Approve the requested changes.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=true;
                      Image=Approve;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 TestReadyForApproval;
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 76      ;2   ;Action    ;
                      Name=RejectApproval;
                      CaptionML=ENU=Reject;
                      ToolTipML=ENU=Reject to approve the incoming document. Note that this is not related to approval workflows.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=true;
                      Image=Reject;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 77      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=ENU=Delegate;
                      ToolTipML=ENU=Delegate the approval to a substitute approver.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 78      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=ENU=Comments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 81      ;1   ;ActionGroup;
                      Name=Request Approval;
                      CaptionML=ENU=Request Approval;
                      Image=SendApprovalRequest }
      { 80      ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=ENU=Send A&pproval Request;
                      ToolTipML=ENU=Request approval of the incoming document. You can send an approval request as part of a workflow if this has been set up in your organization.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      Enabled=NOT OpenApprovalEntriesExist;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 TestReadyForApproval;
                                 if ApprovalsMgmt.CheckIncomingDocApprovalsWorkflowEnabled(Rec) then
                                   ApprovalsMgmt.OnSendIncomingDocForApproval(Rec);
                               END;
                                }
      { 79      ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=ENU=Cancel Approval Re&quest;
                      ToolTipML=ENU=Cancel requesting approval of the incoming document.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      Enabled=CanCancelApprovalForRecord;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.OnCancelIncomingDocApprovalRequest(Rec);
                               END;
                                }
      { 66      ;1   ;ActionGroup;
                      Name=Incoming Document;
                      CaptionML=ENU=Incoming Document }
      { 67      ;2   ;Action    ;
                      Name=OpenDocument;
                      CaptionML=ENU=Open Record;
                      ToolTipML=ENU=Open the document, journal line, or entry that the incoming document is linked to.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=RecordLinkExists;
                      PromotedIsBig=true;
                      Image=ViewDetails;
                      PromotedCategory=Category6;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 ShowNAVRecord;
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=RemoveReferencedRecord;
                      CaptionML=ENU=Remove Reference to Record;
                      ToolTipML=ENU=Remove the link that exists from the incoming document to a document, journal line, or entry.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=RecordLinkExists;
                      PromotedIsBig=true;
                      Image=ClearLog;
                      PromotedCategory=Category6;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 RemoveReferencedRecords;
                               END;
                                }
      { 68      ;2   ;Action    ;
                      Name=Navigate;
                      CaptionML=ENU=Navigate;
                      ToolTipML=ENU=Find all entries and documents that exist for the document number and posting date on the selected entry or document.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Navigate;
                      OnAction=VAR
                                 NavigatePage@1000 : Page Navigate;
                               BEGIN
                                 if not Posted then
                                   ERROR(NoPostedDocumentsErr);
                                 NavigatePage.SetDoc("Posting Date","Document No.");
                                 NavigatePage.RUN;
                               END;
                                }
      { 51      ;2   ;ActionGroup;
                      Name=Record;
                      CaptionML=ENU=Record;
                      Visible=FALSE;
                      Enabled=FALSE;
                      Image=Document }
      { 65      ;3   ;Action    ;
                      Name=Journal;
                      CaptionML=ENU=Journal Line;
                      ToolTipML=ENU=Open the record that the incoming document is linked to.;
                      ApplicationArea=#Advanced;
                      Image=Journal;
                      OnAction=VAR
                                 GenJournalBatch@1001 : Record "Gen. Journal Batch";
                                 GenJnlManagement@1002 : Codeunit GenJnlManagement;
                               BEGIN
                                 if not AskUserPermission then
                                   exit;

                                 CreateGenJnlLine;
                                 IncomingDocumentsSetup.Fetch;
                                 GenJournalBatch.GET(IncomingDocumentsSetup."General Journal Template Name",IncomingDocumentsSetup."General Journal Batch Name");
                                 GenJnlManagement.TemplateSelectionFromBatch(GenJournalBatch);
                               END;
                                }
      { 49      ;3   ;Action    ;
                      Name=PurchaseInvoice;
                      CaptionML=ENU=Purchase Invoice;
                      ToolTipML=ENU=Open the record that the incoming document is linked to.;
                      ApplicationArea=#Advanced;
                      Image=Purchase;
                      OnAction=BEGIN
                                 if not AskUserPermission then
                                   exit;

                                 CreatePurchInvoice;
                               END;
                                }
      { 50      ;3   ;Action    ;
                      Name=PurchaseCreditMemo;
                      CaptionML=ENU=Purchase Credit Memo;
                      ToolTipML=ENU=Open the record that the incoming document is linked to.;
                      ApplicationArea=#Advanced;
                      Image=CreditMemo;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 if not AskUserPermission then
                                   exit;

                                 CreatePurchCreditMemo;
                               END;
                                }
      { 47      ;3   ;Action    ;
                      Name=SalesInvoice;
                      CaptionML=ENU=Sales Invoice;
                      ToolTipML=ENU=Open the record that the incoming document is linked to.;
                      ApplicationArea=#Advanced;
                      Image=Sales;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 if not AskUserPermission then
                                   exit;

                                 CreateSalesInvoice;
                               END;
                                }
      { 48      ;3   ;Action    ;
                      Name=SalesCreditMemo;
                      CaptionML=ENU=Sales Credit Memo;
                      ToolTipML=ENU=Open the record that the incoming document is linked to.;
                      ApplicationArea=#Advanced;
                      Image=CreditMemo;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 if not AskUserPermission then
                                   exit;

                                 CreateSalesCreditMemo;
                               END;
                                }
      { 59      ;1   ;ActionGroup;
                      Name=OCR;
                      CaptionML=ENU=OCR }
      { 42      ;2   ;Action    ;
                      Name=SendToJobQueue;
                      CaptionML=ENU=Send to Job Queue;
                      ToolTipML=ENU=Send the attached PDF or image file to the OCR service by the job queue according to the schedule, provided that no errors exist.;
                      ApplicationArea=#Basic,#Suite;
                      Visible=OCRServiceIsEnabled;
                      Enabled=RecordHasAttachment;
                      Image=Translation;
                      OnAction=BEGIN
                                 SendToJobQueue(true);
                               END;
                                }
      { 56      ;2   ;Action    ;
                      Name=RemoveFromJobQueue;
                      CaptionML=ENU=Remove from Job Queue;
                      ToolTipML=ENU=Remove the scheduled processing of this record from the job queue.;
                      ApplicationArea=#Basic,#Suite;
                      Visible=OCRServiceIsEnabled;
                      Enabled=RecordHasAttachment;
                      Image=Translation;
                      OnAction=BEGIN
                                 RemoveFromJobQueue(true);
                               END;
                                }
      { 54      ;2   ;Action    ;
                      Name=SendToOcr;
                      CaptionML=ENU=Send to OCR Service;
                      ToolTipML=ENU=Send the attached PDF or image file to the OCR service immediately.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=OCRServiceIsEnabled;
                      Enabled=CanBeSentToOCR;
                      PromotedIsBig=true;
                      Image=Translations;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 SendToOCR(true);
                               END;
                                }
      { 55      ;2   ;Action    ;
                      Name=ReceiveFromOCR;
                      CaptionML=ENU=Receive from OCR Service;
                      ToolTipML=ENU=Get any electronic documents that are ready to receive from the OCR service.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=OCRServiceIsEnabled;
                      Enabled=EnableReceiveFromOCR;
                      PromotedIsBig=true;
                      Image=Translations;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 RetrieveFromOCR(true);
                               END;
                                }
      { 35      ;2   ;Action    ;
                      Name=CorrectOCRData;
                      CaptionML=ENU=Correct OCR Data;
                      ToolTipML=ENU=Open a window where you can teach the OCR service how to interpret data on PDF and image files so that future documents created by the OCR service are more correct.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "OCR Data Correction";
                      RunPageOnRec=true;
                      Promoted=true;
                      Visible=OCRServiceIsEnabled;
                      Enabled=OCRDataCorrectionEnabled;
                      PromotedIsBig=true;
                      Image=EditAttachment;
                      PromotedCategory=Category7 }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General;
                GroupType=Group }

    { 3   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the description of the incoming document. You must enter the description manually.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Importance=Promoted;
                ImplicitType=Text50 }

    { 53  ;2   ;Field     ;
                Name=URL;
                ExtendedDatatype=URL;
                CaptionML=ENU=Link to Document;
                ToolTipML=ENU=Specifies a link to the attached file.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=URL;
                Importance=Additional;
                OnValidate=BEGIN
                             SetURL(URL);
                             CurrPage.UPDATE;
                           END;

                ImplicitType=Text }

    { 90  ;2   ;Field     ;
                Name=MainAttachment;
                CaptionML=ENU=Main Attachment;
                ToolTipML=ENU=Specifies the main attachment. Only this attachment is processed by the OCR and document exchange services.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AttachmentFileName;
                Enabled=RecordHasAttachment;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              MainAttachmentDrillDown;
                              CurrPage.UPDATE;
                            END;

                ImplicitType=Text }

    { 115 ;2   ;Field     ;
                Name=Data Exchange Type;
                ToolTipML=ENU=Specifies the data exchange type that is used to process the incoming document when it is an electronic document.;
                ApplicationArea=#Advanced;
                SourceExpr="Data Exchange Type";
                Importance=Additional;
                Editable=IsDataExchTypeEditable;
                OnValidate=BEGIN
                             if not DefaultAttachmentIsXML then
                               ERROR(InvalidTypeErr);
                           END;

                ImplicitType=Code20 }

    { 58  ;2   ;Field     ;
                Name=Record;
                CaptionML=ENU=Record;
                ToolTipML=ENU=Specifies the record, document, journal line, or ledger entry, that is linked to the incoming document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=RecordLinkTxt;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ShowNAVRecord;
                              CurrPage.UPDATE;
                            END;

                ImplicitType=Text }

    { 17  ;2   ;Field     ;
                Name=Document Type;
                ToolTipML=ENU=Specifies the type of document or journal that the incoming document can be connected to.;
                ApplicationArea=#Advanced;
                SourceExpr="Document Type";
                Importance=Promoted;
                Visible=FALSE;
                ImplicitType=Option }

    { 19  ;2   ;Field     ;
                Name=Document No.;
                ToolTipML=ENU=Specifies the number of the related document or journal line that is created for the incoming document.;
                ApplicationArea=#Advanced;
                SourceExpr="Document No.";
                Importance=Promoted;
                Visible=FALSE;
                ImplicitType=Code20 }

    { 16  ;2   ;Field     ;
                Name=Status;
                ToolTipML=ENU=Specifies the status of the incoming document record.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Status;
                Importance=Promoted;
                ImplicitType=Option }

    { 87  ;2   ;Field     ;
                Name=OCR Status;
                ToolTipML=ENU=Specifies the status of the incoming document record when it takes part in the OCR process.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="OCR Status";
                OnDrillDown=VAR
                              OCRServiceSetup@1000 : Record "OCR Service Setup";
                              OCRServiceMgt@1001 : Codeunit "OCR Service Mgt.";
                            BEGIN
                              if not OCRServiceSetup.ISEMPTY then
                                HYPERLINK(OCRServiceMgt.GetStatusHyperLink(Rec));
                            END;

                ImplicitType=Option }

    { 84  ;2   ;Field     ;
                Name=Job Queue Status;
                ToolTipML=ENU=Specifies the status of the job queue entry that is processing the incoming document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Job Queue Status";
                ImplicitType=Option }

    { 71  ;2   ;Group     ;
                Name=Group71;
                GroupType=Group }

    { 29  ;3   ;Field     ;
                Name=OCR Service Doc. Template Code;
                ToolTipML=ENU=Specifies the code of the document template that you want the OCR service provider to use when they convert the incoming-document file to an electronic document. Chose the field to pick a supported document template from the OCR Service Setup window.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="OCR Service Doc. Template Code";
                Importance=Additional;
                ImplicitType=Code20 }

    { 41  ;3   ;Field     ;
                Name=OCR Service Doc. Template Name;
                ToolTipML=ENU=Specifies the name of the document template that you want the OCR service provider to use when they convert the incoming-document file to an electronic document. Chose the field to pick a supported document template from the OCR Service Setup window.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="OCR Service Doc. Template Name";
                Importance=Additional;
                ImplicitType=Text50 }

    { 40  ;3   ;Field     ;
                Name=OCRResultFileName;
                CaptionML=ENU=OCR Result;
                ToolTipML=ENU=Specifies what process stage the attached PDF or image file is in relation to the OCR service.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=OCRResultFileName;
                Importance=Additional;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              OCRResultDrillDown;
                              CurrPage.UPDATE;
                            END;

                ImplicitType=Text }

    { 72  ;2   ;Group     ;
                Name=Group72;
                GroupType=Group }

    { 4   ;3   ;Field     ;
                Name=Created Date-Time;
                ToolTipML=ENU=Specifies when the incoming document line was created.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Created Date-Time";
                Importance=Additional;
                ImplicitType=DateTime }

    { 6   ;3   ;Field     ;
                Name=Created By User Name;
                ToolTipML=ENU=Specifies the name of the user who created the incoming document line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Created By User Name";
                Importance=Additional;
                ImplicitType=Code50 }

    { 7   ;3   ;Field     ;
                Name=Released;
                ToolTipML=ENU=Specifies if the incoming document has been approved.;
                ApplicationArea=#Advanced;
                SourceExpr=Released;
                Visible=FALSE;
                ImplicitType=Boolean }

    { 8   ;3   ;Field     ;
                Name=Released Date-Time;
                ToolTipML=ENU=Specifies when the incoming document was approved.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Released Date-Time";
                Importance=Additional;
                ImplicitType=DateTime }

    { 10  ;3   ;Field     ;
                Name=Released By User Name;
                ToolTipML=ENU=Specifies the name of the user who approved the incoming document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Released By User Name";
                Importance=Additional;
                ImplicitType=Code50 }

    { 11  ;3   ;Field     ;
                Name=Last Date-Time Modified;
                ToolTipML=ENU=Specifies when the incoming document line was last modified.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Last Date-Time Modified";
                Importance=Additional;
                ImplicitType=DateTime }

    { 13  ;3   ;Field     ;
                Name=Last Modified By User Name;
                ToolTipML=ENU=Specifies the name of the user who last modified the incoming document line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Last Modified By User Name";
                Importance=Additional;
                ImplicitType=Code50 }

    { 14  ;3   ;Field     ;
                Name=Posted;
                ToolTipML=ENU=Specifies if the document or journal line that was created for this incoming document has been posted.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Posted;
                ImplicitType=Boolean }

    { 15  ;3   ;Field     ;
                Name=Posted Date-Time;
                ToolTipML=ENU=Specifies when the related document or journal line was posted.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posted Date-Time";
                Importance=Additional;
                ImplicitType=DateTime }

    { 18  ;3   ;Field     ;
                Name=Posting Date;
                ToolTipML=ENU=Specifies when the document or journal line that relates to the incoming document was posted.;
                ApplicationArea=#Advanced;
                SourceExpr="Posting Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 37  ;1   ;Part      ;
                Name=SupportingAttachments;
                CaptionML=ENU=Supporting Attachments;
                ApplicationArea=#All;
                PagePartID="Incoming Document Attachments";
                Visible=AdditionalAttachmentsPresent;
                PartType=Page;
                ShowFilter=false }

    { 70  ;1   ;Group     ;
                Name=FinancialInformation;
                CaptionML=ENU=Financial Information;
                GroupType=Group }

    { 23  ;2   ;Field     ;
                Name=Vendor Name;
                ToolTipML=ENU=Specifies the name of the vendor on the incoming document. The field may be filled automatically.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Name";
                Importance=Promoted;
                Editable=FALSE;
                ImplicitType=Text50 }

    { 24  ;2   ;Field     ;
                Name=Vendor VAT Registration No.;
                ToolTipML=ENU=Specifies the VAT registration number of the vendor, if the document contains that number. The field may be filled automatically.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor VAT Registration No.";
                Editable=FALSE;
                ImplicitType=Text30 }

    { 25  ;2   ;Field     ;
                Name=Vendor IBAN;
                ToolTipML=ENU=Specifies the IBAN of the vendor on the incoming document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor IBAN";
                Editable=FALSE;
                ImplicitType=Code50 }

    { 27  ;2   ;Field     ;
                Name=Vendor Bank Branch No.;
                ToolTipML=ENU=Specifies the bank branch number of the vendor on the incoming document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Bank Branch No.";
                Editable=FALSE;
                ImplicitType=Text20 }

    { 28  ;2   ;Field     ;
                Name=Vendor Bank Account No.;
                ToolTipML=ENU=Specifies the bank account number of the vendor on the incoming document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Bank Account No.";
                Editable=FALSE;
                ImplicitType=Text30 }

    { 86  ;2   ;Field     ;
                Name=Vendor Phone No.;
                ToolTipML=ENU=Specifies the phone number of the vendor on the incoming document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Phone No.";
                Editable=FALSE;
                ImplicitType=Text30 }

    { 60  ;2   ;Field     ;
                Name=Vendor Invoice No.;
                ToolTipML=ENU=Specifies the invoice number, if the document contains that number. The field may be filled automatically.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Invoice No.";
                Editable=FALSE;
                ImplicitType=Code20 }

    { 33  ;2   ;Field     ;
                Name=Order No.;
                CaptionML=ENU=Vendor Order No.;
                ToolTipML=ENU=Specifies the order number, if the document contains that number. The field may be filled automatically.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Order No.";
                Editable=FALSE;
                ImplicitType=Code20 }

    { 26  ;2   ;Field     ;
                Name=Document Date;
                ToolTipML=ENU=Specifies the date that is printed on the incoming document. This is the date when the vendor created the invoice, for example. The field may be filled automatically.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Importance=Promoted;
                Editable=FALSE;
                ImplicitType=Date }

    { 32  ;2   ;Field     ;
                Name=Due Date;
                ToolTipML=ENU=Specifies the date when the vendor document must be paid. The field may be filled automatically.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                Editable=FALSE;
                ImplicitType=Date }

    { 61  ;2   ;Field     ;
                Name=Currency Code;
                ToolTipML=ENU=Specifies the currency code, if the document contains that code. The field may be filled automatically.;
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Editable=FALSE;
                ImplicitType=Code10 }

    { 62  ;2   ;Field     ;
                Name=Amount Excl. VAT;
                ToolTipML=ENU=Specifies the amount excluding VAT for the whole document. The field may be filled automatically.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount Excl. VAT";
                Editable=FALSE;
                ImplicitType=Decimal }

    { 63  ;2   ;Field     ;
                Name=Amount Incl. VAT;
                ToolTipML=ENU=Specifies the amount including VAT for the whole document. The field may be filled automatically.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount Incl. VAT";
                Editable=FALSE;
                ImplicitType=Decimal }

    { 34  ;2   ;Field     ;
                Name=VAT Amount;
                ToolTipML=ENU=Specifies the total VAT on the purchase document represented by the incoming document record.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Amount";
                Editable=FALSE;
                ImplicitType=Decimal }

    { 20  ;1   ;Part      ;
                Name=ErrorMessagesPart;
                CaptionML=ENU=Errors and Warnings;
                ApplicationArea=#Basic,#Suite;
                PagePartID="Error Messages Part";
                PartType=Page;
                ShowFilter=false }

    { 36  ;0   ;Container ;
                Name=Container36;
                ContainerType=FactBoxArea }

    { 83  ;1   ;Part      ;
                Name=WorkflowStatus;
                ApplicationArea=#All;
                PagePartID="Workflow Status FactBox";
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=false }

    { 38  ;1   ;Part      ;
                Name=Part38;
                PartType=System;
                SystemPartID=RecordLinks }

    { 39  ;1   ;Part      ;
                Name=Part39;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      IncomingDocumentsSetup@1000 : Record "Incoming Documents Setup";
      AutomaticProcessingQst@1004 : TextConst '@@@=%1 is Data Exchange Type;ENU=The Data Exchange Type field is filled on at least one of the selected Incoming Documents.\\Are you sure you want to create documents manually?';
      CameraProvider@1005 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraProvider" WITHEVENTS RUNONCLIENT;
      HasCamera@1001 : Boolean;
      URL@1003 : Text;
      AttachmentFileName@1008 : Text;
      RecordLinkTxt@1007 : Text;
      OCRResultFileName@1009 : Text;
      IsDataExchTypeEditable@1002 : Boolean;
      OCRDataCorrectionEnabled@1006 : Boolean;
      AdditionalAttachmentsPresent@1010 : Boolean;
      InvalidTypeErr@1013 : TextConst 'ENU=The default attachment is not an XML document.';
      OpenApprovalEntriesExistForCurrUser@1012 : Boolean;
      OpenApprovalEntriesExist@1015 : Boolean;
      ShowWorkflowStatus@1014 : Boolean;
      EnableReceiveFromOCR@1011 : Boolean;
      CanCancelApprovalForRecord@1016 : Boolean;
      OCRServiceIsEnabled@1017 : Boolean;
      ShowOCRSetup@1018 : Boolean;
      AutomaticCreationActionsAreEnabled@1019 : Boolean;
      RecordHasAttachment@1020 : Boolean;
      RecordLinkExists@1021 : Boolean;
      NoPostedDocumentsErr@1022 : TextConst 'ENU=There are no posted documents.';
      CanBeSentToOCR@1023 : Boolean;
      AttachEnabled@1026 : Boolean;
      ReplaceMainAttachmentEnabled@1024 : Boolean;

    LOCAL PROCEDURE AskUserPermission@1() : Boolean;
    BEGIN
      if "Data Exchange Type" = '' then
        exit(true);

      if Status <> Status::New then
        exit(true);

      exit(CONFIRM(AutomaticProcessingQst));
    END;

    LOCAL PROCEDURE ShowErrors@2();
    VAR
      ErrorMessage@1001 : Record "Error Message";
      TempErrorMessage@1000 : TEMPORARY Record "Error Message";
    BEGIN
      ErrorMessage.SETRANGE("Context Record ID",RECORDID);
      ErrorMessage.CopyToTemp(TempErrorMessage);
      CurrPage.ErrorMessagesPart.PAGE.SetRecords(TempErrorMessage);
      CurrPage.ErrorMessagesPart.PAGE.UPDATE;
    END;

    LOCAL PROCEDURE SetCalculatedFields@6();
    VAR
      IncomingDocumentAttachment@1000 : Record "Incoming Document Attachment";
    BEGIN
      OCRDataCorrectionEnabled := GetGeneratedFromOCRAttachment(IncomingDocumentAttachment);
      AttachmentFileName := GetMainAttachmentFileName;
      RecordLinkTxt := GetRecordLinkText;
      OCRResultFileName := GetOCRResutlFileName;
      AdditionalAttachmentsPresent := GetAdditionalAttachments(IncomingDocumentAttachment);
      if AdditionalAttachmentsPresent then
        CurrPage.SupportingAttachments.PAGE.LoadDataIntoPart(Rec);
    END;

    LOCAL PROCEDURE SetControlVisibility@9();
    VAR
      ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
      RelatedRecord@1002 : Variant;
    BEGIN
      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
      UpdateOCRSetupVisibility;
      AutomaticCreationActionsAreEnabled := "Data Exchange Type" <> '';
      RecordLinkExists := GetNAVRecord(RelatedRecord);
      CanBeSentToOCR := VerifyCanBeSentToOCR;
      ReplaceMainAttachmentEnabled := CanReplaceMainAttachment;
    END;

    [Integration(TRUE,TRUE)]
    [External]
    LOCAL PROCEDURE OnCloseIncomingDocumentFromAction@3(VAR IncomingDocument@1000 : Record "Incoming Document");
    BEGIN
    END;

    LOCAL PROCEDURE VerifyCanBeSentToOCR@4() : Boolean;
    BEGIN
      if not RecordHasAttachment then
        exit(false);

      exit(not ("OCR Status" in
                ["OCR Status"::Sent,"OCR Status"::Success,"OCR Status"::"Awaiting Verification"]));
    END;

    LOCAL PROCEDURE UpdateOCRSetupVisibility@5();
    BEGIN
      OCRServiceIsEnabled := OCRIsEnabled;
      ShowOCRSetup := not OCRServiceIsEnabled;
    END;

    EVENT CameraProvider@1005::PictureAvailable@11(PictureName@1001 : Text;PictureFilePath@1000 : Text);
    BEGIN
      AddAttachmentFromServerFile(PictureName,PictureFilePath);
    END;

    BEGIN
    END.
  }
}

