OBJECT Codeunit 5847 Get Average Cost Calc Overview
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    TableNo="Average Cost Calc. Overview";
    OnRun=BEGIN
            AvgCostAdjmtEntryPoint.SETRANGE("Item No.","Item No.");
            AvgCostAdjmtEntryPoint.SETFILTER("Location Code",GETFILTER("Location Code"));
            AvgCostAdjmtEntryPoint.SETFILTER("Variant Code",GETFILTER("Variant Code"));
            AvgCostAdjmtEntryPoint.SETFILTER("Valuation Date",GETFILTER("Valuation Date"));

            RESET;
            DELETEALL;
            if AvgCostAdjmtEntryPoint.FIND('-') then
              repeat
                INIT;
                Type := Type::"Closing Entry";
                "Entry No." := "Entry No." + 1;
                "Item No." := AvgCostAdjmtEntryPoint."Item No.";
                "Variant Code" := AvgCostAdjmtEntryPoint."Variant Code";
                "Location Code" := AvgCostAdjmtEntryPoint."Location Code";
                "Valuation Date" := AvgCostAdjmtEntryPoint."Valuation Date";
                "Attached to Valuation Date" := "Valuation Date";
                "Attached to Entry No." := "Entry No.";
                "Cost is Adjusted" := AvgCostAdjmtEntryPoint."Cost Is Adjusted";
                if EntriesExist(Rec) then
                  INSERT
                else
                  AvgCostAdjmtEntryPoint.DELETE;
              until AvgCostAdjmtEntryPoint.NEXT = 0;
          END;

  }
  CODE
  {
    VAR
      AvgCostAdjmtEntryPoint@1005 : Record "Avg. Cost Adjmt. Entry Point";
      ValueEntry@1000 : Record "Value Entry";
      Item@1001 : Record Item;
      CalendarPeriod@1003 : Record Date;
      AttachedToEntryNo@1004 : Integer;

    [Internal]
    PROCEDURE Calculate@2(VAR AvgCostCalcOverview@1000 : Record "Average Cost Calc. Overview");
    VAR
      AvgCostCalcOverview2@1003 : Record "Average Cost Calc. Overview";
      FirstEntryNo@1002 : Integer;
    BEGIN
      with ValueEntry do begin
        AvgCostCalcOverview2 := AvgCostCalcOverview;
        AvgCostCalcOverview.FIND;
        AvgCostCalcOverview.TESTFIELD("Item No.");
        AvgCostCalcOverview.TESTFIELD(Type,AvgCostCalcOverview.Type::"Closing Entry");

        AttachedToEntryNo := AvgCostCalcOverview."Entry No.";

        Item.GET("Item No.");
        if Item."Costing Method" = Item."Costing Method"::Average then begin
          CalendarPeriod."Period Start" := AvgCostCalcOverview."Valuation Date";
          AvgCostAdjmtEntryPoint."Valuation Date" := AvgCostCalcOverview."Valuation Date";
          AvgCostAdjmtEntryPoint.GetValuationPeriod(CalendarPeriod);
          AvgCostCalcOverview.SETRANGE("Valuation Date",CalendarPeriod."Period Start",CalendarPeriod."Period End");
        end else
          AvgCostCalcOverview.SETRANGE("Valuation Date",AvgCostCalcOverview2."Valuation Date");

        if not (Item."Costing Method" = Item."Costing Method"::Average) or
           not AvgCostAdjmtEntryPoint.IsAvgCostCalcTypeItem(AvgCostCalcOverview."Valuation Date")
        then begin
          AvgCostCalcOverview.SETRANGE("Variant Code",AvgCostCalcOverview."Variant Code");
          AvgCostCalcOverview.SETRANGE("Location Code",AvgCostCalcOverview."Location Code");
        end;
        AvgCostCalcOverview.SETRANGE(Level,1,2);
        AvgCostCalcOverview.DELETEALL;
        AvgCostCalcOverview.RESET;
        AvgCostCalcOverview.FIND('+');

        if EntriesExist(AvgCostCalcOverview2) then
          repeat
            InsertAvgCostCalcOvervwFromILE(AvgCostCalcOverview,ValueEntry,AvgCostCalcOverview2."Valuation Date");
            if FirstEntryNo = 0 then
              FirstEntryNo := AvgCostCalcOverview."Entry No.";
          until NEXT = 0;

        if AvgCostCalcOverview.GET(FirstEntryNo) then;
      end;
    END;

    LOCAL PROCEDURE InsertAvgCostCalcOvervwFromILE@9(VAR AvgCostCalcOverview@1000 : Record "Average Cost Calc. Overview";ValueEntry@1004 : Record "Value Entry";ValuationDate@1005 : Date);
    VAR
      CopyOfAvgCostCalcOverview@1003 : Record "Average Cost Calc. Overview";
      ItemLedgEntry@1001 : Record "Item Ledger Entry";
      ItemApplnEntry@1006 : Record "Item Application Entry";
      ModifyLine@1002 : Boolean;
    BEGIN
      with AvgCostCalcOverview do begin
        CopyOfAvgCostCalcOverview.COPY(AvgCostCalcOverview);

        SETCURRENTKEY("Item Ledger Entry No.");
        SETRANGE("Item Ledger Entry No.",ValueEntry."Item Ledger Entry No.");
        SETRANGE("Attached to Entry No.",AttachedToEntryNo);
        SETRANGE("Attached to Valuation Date",ValuationDate);
        if ValueEntry."Partial Revaluation" then
          SETRANGE(Type,Type::Revaluation);
        ModifyLine := FIND('-');
        if not ModifyLine then begin
          ItemLedgEntry.GET(ValueEntry."Item Ledger Entry No.");
          INIT;
          "Item No." := ItemLedgEntry."Item No.";
          "Location Code" := ItemLedgEntry."Location Code";
          "Variant Code" := ItemLedgEntry."Variant Code";
          "Posting Date" := ItemLedgEntry."Posting Date";
          "Item Ledger Entry No." := ItemLedgEntry."Entry No.";
          "Entry Type" := ItemLedgEntry."Entry Type";
          "Document Type" := ItemLedgEntry."Document Type";
          "Document No." := ItemLedgEntry."Document No.";
          "Document Line No." := ItemLedgEntry."Document Line No.";
          Description := ItemLedgEntry.Description;
          "Entry No." := CopyOfAvgCostCalcOverview."Entry No." + 1;
          case true of
            ValueEntry."Partial Revaluation":
              Type := Type::Revaluation;
            ItemLedgEntry.Positive:
              if ItemApplnEntry.IsAppliedFromIncrease(ItemLedgEntry."Entry No.") then
                Type := Type::"Applied Increase"
              else
                Type := Type::Increase;
            ItemLedgEntry."Applies-to Entry" <> 0:
              Type := Type::"Applied Decrease";
            else
              Type := Type::Decrease;
          end;
          "Attached to Entry No." := AttachedToEntryNo;
          "Attached to Valuation Date" := ValuationDate;
          "Valuation Date" := ValueEntry."Valuation Date";
          Quantity := 0;
          Level := 1;
        end;

        Quantity := Quantity + ValueEntry."Item Ledger Entry Quantity";
        "Cost Amount (Actual)" := "Cost Amount (Actual)" + ValueEntry."Cost Amount (Actual)";
        "Cost Amount (Expected)" := "Cost Amount (Expected)" + ValueEntry."Cost Amount (Expected)";

        if ModifyLine then
          MODIFY
        else begin
          INSERT;
          CopyOfAvgCostCalcOverview := AvgCostCalcOverview;
        end;
        COPY(CopyOfAvgCostCalcOverview);
      end;
    END;

    [Internal]
    PROCEDURE EntriesExist@1(VAR AvgCostCalcOverview@1000 : Record "Average Cost Calc. Overview") : Boolean;
    BEGIN
      with ValueEntry do begin
        Item.GET(AvgCostCalcOverview."Item No.");
        RESET;
        SETCURRENTKEY("Item No.","Valuation Date","Location Code","Variant Code");
        SETRANGE("Item No.",AvgCostCalcOverview."Item No.");

        if Item."Costing Method" = Item."Costing Method"::Average then begin
          CalendarPeriod."Period Start" := AvgCostCalcOverview."Valuation Date";
          AvgCostAdjmtEntryPoint."Valuation Date" := AvgCostCalcOverview."Valuation Date";
          AvgCostAdjmtEntryPoint.GetValuationPeriod(CalendarPeriod);
          SETRANGE("Valuation Date",CalendarPeriod."Period Start",CalendarPeriod."Period End");
        end else
          SETRANGE("Valuation Date",AvgCostCalcOverview."Valuation Date");

        if not AvgCostAdjmtEntryPoint.IsAvgCostCalcTypeItem(AvgCostCalcOverview."Valuation Date") or
           not (Item."Costing Method" = Item."Costing Method"::Average)
        then begin
          SETRANGE("Location Code",AvgCostCalcOverview."Location Code");
          SETRANGE("Variant Code",AvgCostCalcOverview."Variant Code");
        end;
        exit(FIND('-'));
      end;
    END;

    BEGIN
    END.
  }
}

