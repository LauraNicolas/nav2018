OBJECT Table 8614 Config. Package Record
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnDelete=VAR
               ConfigPackageData@1000 : Record "Config. Package Data";
               ConfigPackageManagement@1001 : Codeunit "Config. Package Management";
             BEGIN
               ConfigPackageData.SETRANGE("Package Code","Package Code");
               ConfigPackageData.SETRANGE("Table ID","Table ID");
               ConfigPackageData.SETRANGE("No.","No.");
               ConfigPackageData.DELETEALL;

               ConfigPackageManagement.CleanRecordError(Rec);
             END;

    CaptionML=ENU=Config. Package Record;
  }
  FIELDS
  {
    { 1   ;   ;Package Code        ;Code20        ;TableRelation="Config. Package";
                                                   CaptionML=ENU=Package Code;
                                                   NotBlank=true }
    { 2   ;   ;Table ID            ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE ("Object Type"=CONST(Table));
                                                   CaptionML=ENU=Table ID;
                                                   NotBlank=true;
                                                   Editable=true }
    { 3   ;   ;No.                 ;Integer       ;CaptionML=ENU=No. }
    { 4   ;   ;Invalid             ;Boolean       ;CaptionML=ENU=Invalid }
    { 10  ;   ;Parent Record No.   ;Integer       ;CaptionML=ENU=Parent Record No. }
  }
  KEYS
  {
    {    ;"Package Code","Table ID","No."         ;Clustered=true }
    {    ;"Package Code","Table ID",Invalid        }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [Internal]
    PROCEDURE FitsProcessingFilter@2(RuleNo@1000 : Integer) : Boolean;
    VAR
      ConfigPackageData@1001 : Record "Config. Package Data";
      ConfigPackageFilter@1003 : Record "Config. Package Filter";
      ConfigValidateMgt@1005 : Codeunit "Config. Validate Management";
      RecRefTemp@1002 : RecordRef;
      FieldRef@1004 : FieldRef;
    BEGIN
      ConfigPackageData.RESET;
      ConfigPackageData.SETRANGE("Package Code","Package Code");
      ConfigPackageData.SETRANGE("Table ID","Table ID");
      ConfigPackageData.SETRANGE("No.","No.");
      if FindProcessingRuleFilters(ConfigPackageFilter,RuleNo) then begin
        RecRefTemp.OPEN("Table ID",true);
        repeat
          ConfigPackageData.SETRANGE("Field ID",ConfigPackageFilter."Field ID");
          if ConfigPackageData.FINDFIRST then begin
            FieldRef := RecRefTemp.FIELD(ConfigPackageData."Field ID");
            ConfigValidateMgt.EvaluateTextToFieldRef(ConfigPackageData.Value,FieldRef,false);
            FieldRef.SETFILTER(ConfigPackageFilter."Field Filter");
          end else
            exit(false);
        until ConfigPackageFilter.NEXT = 0;
        RecRefTemp.INSERT;
        if RecRefTemp.ISEMPTY then
          exit(false);
      end;
      exit(true);
    END;

    LOCAL PROCEDURE FindProcessingRuleFilters@1(VAR ConfigPackageFilter@1000 : Record "Config. Package Filter";RuleNo@1001 : Integer) : Boolean;
    BEGIN
      ConfigPackageFilter.RESET;
      ConfigPackageFilter.SETRANGE("Package Code","Package Code");
      ConfigPackageFilter.SETRANGE("Table ID","Table ID");
      ConfigPackageFilter.SETRANGE("Processing Rule No.",RuleNo);
      exit(ConfigPackageFilter.FINDSET);
    END;

    BEGIN
    END.
  }
}

