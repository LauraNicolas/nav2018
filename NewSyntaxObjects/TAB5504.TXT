OBJECT Table 5504 Tax Area Buffer
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRename=BEGIN
               ERROR(CannotChangeIDErr);
             END;

    CaptionML=ENU=Tax Area Buffer;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=ENU=Code;
                                                   NotBlank=true }
    { 2   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 10  ;   ;Last Modified Date Time;DateTime   ;CaptionML=ENU=Last Modified Date Time;
                                                   Editable=false }
    { 8000;   ;Id                  ;GUID          ;CaptionML=ENU=Id }
    { 9600;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=[ENU="@@@={Locked};ENU=Sales Tax,VAT"];
                                                   OptionString="Sales Tax",VAT }
  }
  KEYS
  {
    {    ;Id                                      ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CannotChangeIDErr@1001 : TextConst '@@@={Locked};ENU=The id cannot be changed.';
      RecordMustBeTemporaryErr@1000 : TextConst 'ENU=Tax Group Entity must be used as a temporary record.';

    PROCEDURE PropagateInsert@1();
    BEGIN
      PropagateUpdate(true);
    END;

    PROCEDURE PropagateModify@2();
    BEGIN
      PropagateUpdate(false);
    END;

    LOCAL PROCEDURE PropagateUpdate@4(Insert@1000 : Boolean);
    VAR
      GeneralLedgerSetup@1001 : Record "General Ledger Setup";
      VATBusinessPostingGroup@1002 : Record "VAT Business Posting Group";
      TaxArea@1003 : Record "Tax Area";
    BEGIN
      if not ISTEMPORARY then
        ERROR(RecordMustBeTemporaryErr);

      if GeneralLedgerSetup.UseVat then begin
        if Insert then begin
          VATBusinessPostingGroup.TRANSFERFIELDS(Rec,true);
          VATBusinessPostingGroup.INSERT(true)
        end else begin
          if xRec.Code <> Code then begin
            VATBusinessPostingGroup.GET(xRec.Code);
            VATBusinessPostingGroup.RENAME(Code)
          end;

          VATBusinessPostingGroup.TRANSFERFIELDS(Rec,true);
          VATBusinessPostingGroup.MODIFY(true);
        end;

        UpdateFromVATBusinessPostingGroup(VATBusinessPostingGroup);
      end else begin
        if Insert then begin
          TaxArea.TRANSFERFIELDS(Rec,true);
          TaxArea.INSERT(true)
        end else begin
          if xRec.Code <> Code then begin
            TaxArea.GET(xRec.Code);
            TaxArea.RENAME(Code);
          end;

          TaxArea.TRANSFERFIELDS(Rec,true);
          TaxArea.MODIFY(true);
        end;

        UpdateFromTaxArea(TaxArea);
      end;
    END;

    PROCEDURE PropagateDelete@3();
    VAR
      GeneralLedgerSetup@1002 : Record "General Ledger Setup";
      VATBusinessPostingGroup@1000 : Record "VAT Business Posting Group";
      TaxArea@1001 : Record "Tax Area";
    BEGIN
      if GeneralLedgerSetup.UseVat then begin
        VATBusinessPostingGroup.GET(Code);
        VATBusinessPostingGroup.DELETE(true);
      end else begin
        TaxArea.GET(Code);
        TaxArea.DELETE(true);
      end;
    END;

    PROCEDURE LoadRecords@7() : Boolean;
    VAR
      GeneralLedgerSetup@1000 : Record "General Ledger Setup";
    BEGIN
      if not ISTEMPORARY then
        ERROR(RecordMustBeTemporaryErr);

      if GeneralLedgerSetup.UseVat then
        LoadFromVATBusinessPostingGroup
      else
        LoadFromTaxArea;

      exit(FINDFIRST);
    END;

    LOCAL PROCEDURE LoadFromTaxArea@18();
    VAR
      TaxArea@1000 : Record "Tax Area";
    BEGIN
      if not TaxArea.FINDSET then
        exit;

      repeat
        UpdateFromTaxArea(TaxArea);
        INSERT;
      until TaxArea.NEXT = 0;
    END;

    LOCAL PROCEDURE LoadFromVATBusinessPostingGroup@19();
    VAR
      VATBusinessPostingGroup@1000 : Record "VAT Business Posting Group";
    BEGIN
      if not VATBusinessPostingGroup.FINDSET then
        exit;

      repeat
        UpdateFromVATBusinessPostingGroup(VATBusinessPostingGroup);
        INSERT;
      until VATBusinessPostingGroup.NEXT = 0;
    END;

    LOCAL PROCEDURE UpdateFromVATBusinessPostingGroup@5(VAR VATBusinessPostingGroup@1000 : Record "VAT Business Posting Group");
    BEGIN
      TRANSFERFIELDS(VATBusinessPostingGroup,true);
      Type := Type::VAT;
    END;

    LOCAL PROCEDURE UpdateFromTaxArea@6(VAR TaxArea@1000 : Record "Tax Area");
    BEGIN
      TRANSFERFIELDS(TaxArea,true);
      Type := Type::"Sales Tax";
    END;

    PROCEDURE GetTaxAreaDisplayName@8(TaxAreaId@1003 : GUID) : Text;
    VAR
      GeneralLedgerSetup@1000 : Record "General Ledger Setup";
      VATBusinessPostingGroup@1001 : Record "VAT Business Posting Group";
      TaxArea@1002 : Record "Tax Area";
    BEGIN
      if GeneralLedgerSetup.UseVat then begin
        VATBusinessPostingGroup.SETRANGE(Id,TaxAreaId);
        if VATBusinessPostingGroup.FINDFIRST then
          exit(VATBusinessPostingGroup.Description);
      end else begin
        TaxArea.SETRANGE(Id,TaxAreaId);
        if TaxArea.FINDFIRST then
          exit(TaxArea.Description);
      end;

      exit('');
    END;

    BEGIN
    END.
  }
}

