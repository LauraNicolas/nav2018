OBJECT Table 1170 User Task
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    DataCaptionFields=Title;
    OnInsert=BEGIN
               VALIDATE("Created DateTime",CURRENTDATETIME);
               "Created By" := USERSECURITYID
             END;

    OnDelete=BEGIN
               if ("Percent Complete" > 0) and ("Percent Complete" < 100) then
                 if not CONFIRM(ConfirmDeleteQst) then
                   ERROR('');

               if "Parent ID" > 0 then
                 if CONFIRM(ConfirmDeleteAllOccurrencesQst) then begin
                   SETRANGE("Parent ID","Parent ID");
                   DELETEALL;
                   RESET;
                 end
             END;

    CaptionML=ENU=User Task;
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Integer       ;AutoIncrement=true;
                                                   CaptionML=ENU=ID;
                                                   Editable=false }
    { 2   ;   ;Title               ;Text250       ;CaptionML=ENU=Subject }
    { 3   ;   ;Created By          ;GUID          ;TableRelation=User."User Security ID" WHERE ("License Type"=CONST("Full User"));
                                                   CaptionML=ENU=Created By;
                                                   Editable=false }
    { 4   ;   ;Created DateTime    ;DateTime      ;CaptionML=ENU=Created Date;
                                                   Editable=false }
    { 5   ;   ;Assigned To         ;GUID          ;TableRelation=User."User Security ID" WHERE ("License Type"=CONST("Full User"));
                                                   CaptionML=ENU=Assigned To }
    { 7   ;   ;Completed By        ;GUID          ;TableRelation=User."User Security ID" WHERE ("License Type"=CONST("Full User"));
                                                   OnValidate=BEGIN
                                                                if not ISNULLGUID("Completed By") then begin
                                                                  "Percent Complete" := 100;
                                                                  if "Completed DateTime" = 0DT then
                                                                    "Completed DateTime" := CURRENTDATETIME;
                                                                  if "Start DateTime" = 0DT then
                                                                    "Start DateTime" := CURRENTDATETIME;
                                                                end else begin
                                                                  "Completed DateTime" := 0DT;
                                                                  "Percent Complete" := 0;
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Completed By }
    { 8   ;   ;Completed DateTime  ;DateTime      ;OnValidate=BEGIN
                                                                if "Completed DateTime" <> 0DT then begin
                                                                  "Percent Complete" := 100;
                                                                  if ISNULLGUID("Completed By") then
                                                                    "Completed By" := USERSECURITYID;
                                                                  if "Start DateTime" = 0DT then
                                                                    "Start DateTime" := CURRENTDATETIME;
                                                                end else begin
                                                                  CLEAR("Completed By");
                                                                  "Percent Complete" := 0;
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Completed Date }
    { 9   ;   ;Due DateTime        ;DateTime      ;CaptionML=ENU=Due Date }
    { 10  ;   ;Percent Complete    ;Integer       ;OnValidate=BEGIN
                                                                if "Percent Complete" = 100 then begin
                                                                  "Completed By" := USERSECURITYID;
                                                                  "Completed DateTime" := CURRENTDATETIME;
                                                                end else begin
                                                                  CLEAR("Completed By");
                                                                  CLEAR("Completed DateTime");
                                                                end;

                                                                if "Percent Complete" = 0 then
                                                                  "Start DateTime" := 0DT
                                                                else
                                                                  if "Start DateTime" = 0DT then
                                                                    "Start DateTime" := CURRENTDATETIME;
                                                              END;

                                                   CaptionML=ENU=% Complete;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 11  ;   ;Start DateTime      ;DateTime      ;CaptionML=ENU=Start Date }
    { 12  ;   ;Priority            ;Option        ;CaptionML=ENU=Priority;
                                                   OptionCaptionML=ENU=,Low,Normal,High;
                                                   OptionString=,Low,Normal,High }
    { 13  ;   ;Description         ;BLOB          ;CaptionML=ENU=Description;
                                                   SubType=Memo }
    { 14  ;   ;Created By User Name;Code50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(User."User Name" WHERE ("User Security ID"=FIELD("Created By"),
                                                                                              "License Type"=CONST("Full User")));
                                                   CaptionML=ENU=User Created By;
                                                   Editable=false }
    { 15  ;   ;Assigned To User Name;Code50       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(User."User Name" WHERE ("User Security ID"=FIELD("Assigned To"),
                                                                                              "License Type"=CONST("Full User")));
                                                   CaptionML=ENU=User Assigned To;
                                                   Editable=false }
    { 16  ;   ;Completed By User Name;Code50      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(User."User Name" WHERE ("User Security ID"=FIELD("Completed By"),
                                                                                              "License Type"=CONST("Full User")));
                                                   CaptionML=ENU=User Completed By;
                                                   Editable=false }
    { 17  ;   ;Object Type         ;Option        ;CaptionML=ENU=Link Task To;
                                                   OptionCaptionML=ENU=,,,Report,,,,,Page;
                                                   OptionString=,,,Report,,,,,Page }
    { 18  ;   ;Object ID           ;Integer       ;TableRelation=AllObj."Object ID" WHERE ("Object Type"=FIELD("Object Type"));
                                                   CaptionML=ENU=Object ID }
    { 19  ;   ;Parent ID           ;Integer       ;CaptionML=ENU=Parent ID }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ConfirmDeleteQst@1000 : TextConst 'ENU=This task is started but not complete, delete anyway?';
      ConfirmDeleteAllOccurrencesQst@1001 : TextConst 'ENU=Delete all occurrences of this task?';

    PROCEDURE CreateRecurrence@3(RecurringStartDate@1000 : Date;Recurrence@1001 : DateFormula;Occurrences@1002 : Integer);
    VAR
      UserTaskTemp@1005 : Record "User Task";
      Count@1004 : Integer;
      TempDueDate@1003 : Date;
    BEGIN
      VALIDATE("Parent ID",ID);
      VALIDATE("Due DateTime",CREATEDATETIME(RecurringStartDate,000000T));
      MODIFY(true);

      TempDueDate := RecurringStartDate;
      while Count < Occurrences - 1 do begin
        CLEAR(UserTaskTemp);
        UserTaskTemp.VALIDATE(Title,Title);
        UserTaskTemp.SetDescription(GetDescription);
        UserTaskTemp.VALIDATE("Created By",USERSECURITYID);
        UserTaskTemp.VALIDATE("Created DateTime",CURRENTDATETIME);
        UserTaskTemp.VALIDATE("Assigned To","Assigned To");
        UserTaskTemp.VALIDATE(Priority,Priority);
        UserTaskTemp.VALIDATE("Object Type","Object Type");
        UserTaskTemp.VALIDATE("Object ID","Object ID");
        UserTaskTemp.VALIDATE("Parent ID",ID);
        TempDueDate := CALCDATE(Recurrence,TempDueDate);
        UserTaskTemp.VALIDATE("Due DateTime",CREATEDATETIME(TempDueDate,000000T));
        UserTaskTemp.INSERT(true);
        Count := Count + 1;
      end
    END;

    PROCEDURE SetCompleted@2();
    BEGIN
      "Percent Complete" := 100;
      "Completed By" := USERSECURITYID;
      "Completed DateTime" := CURRENTDATETIME;

      if "Start DateTime" = 0DT then
        "Start DateTime" := CURRENTDATETIME;
    END;

    [External]
    PROCEDURE SetStyle@1() : Text;
    BEGIN
      if "Percent Complete" <> 100 then begin
        if ("Due DateTime" <> 0DT) and ("Due DateTime" <= CURRENTDATETIME) then
          exit('Unfavorable')
      end;
      exit('');
    END;

    PROCEDURE GetDescription@4() : Text;
    VAR
      TypeHelper@1000 : Codeunit "Type Helper";
      DescriptionFieldRef@1002 : FieldRef;
      UserTaskRecRef@1003 : RecordRef;
      StreamText@1001 : Text;
    BEGIN
      UserTaskRecRef.GETTABLE(Rec);
      DescriptionFieldRef := UserTaskRecRef.FIELD(FIELDNO(Description));
      StreamText := TypeHelper.ReadTextBlobWithTextEncoding(DescriptionFieldRef,TEXTENCODING::Windows);
      exit(StreamText);
    END;

    PROCEDURE SetDescription@5(StreamText@1000 : Text);
    VAR
      TypeHelper@1002 : Codeunit "Type Helper";
      DescriptionFieldRef@1003 : FieldRef;
      UserTaskRecRef@1004 : RecordRef;
    BEGIN
      CLEAR(Description);
      UserTaskRecRef.GETTABLE(Rec);
      DescriptionFieldRef := UserTaskRecRef.FIELD(FIELDNO(Description));
      if TypeHelper.WriteBlob(DescriptionFieldRef,StreamText) then begin
        Description := DescriptionFieldRef.VALUE;
        if MODIFY(true) then;
      end;
    END;

    PROCEDURE IsCompleted@6() : Boolean;
    BEGIN
      exit("Percent Complete" = 100);
    END;

    BEGIN
    END.
  }
}

