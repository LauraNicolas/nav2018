OBJECT Table 5847 Average Cost Calc. Overview
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Average Cost Calc. Overview;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No. }
    { 2   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Closing Entry,Increase,Applied Increase,Applied Decrease,Decrease,Revaluation;
                                                   OptionString="Closing Entry",Increase,"Applied Increase","Applied Decrease",Decrease,Revaluation }
    { 3   ;   ;Valuation Date      ;Date          ;CaptionML=ENU=Valuation Date }
    { 4   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=ENU=Item No. }
    { 5   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=ENU=Location Code }
    { 6   ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE ("Item No."=FIELD("Item No."));
                                                   CaptionML=ENU=Variant Code }
    { 7   ;   ;Cost is Adjusted    ;Boolean       ;CaptionML=ENU=Cost is Adjusted }
    { 11  ;   ;Attached to Entry No.;Integer      ;TableRelation="Item Ledger Entry";
                                                   CaptionML=ENU=Attached to Entry No. }
    { 12  ;   ;Attached to Valuation Date;Date    ;CaptionML=ENU=Attached to Valuation Date }
    { 13  ;   ;Level               ;Integer       ;CaptionML=ENU=Level }
    { 21  ;   ;Item Ledger Entry No.;Integer      ;TableRelation="Item Ledger Entry";
                                                   CaptionML=ENU=Item Ledger Entry No. }
    { 22  ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 23  ;   ;Entry Type          ;Option        ;CaptionML=ENU=Entry Type;
                                                   OptionCaptionML=ENU=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output, ,Assembly Consumption,Assembly Output;
                                                   OptionString=Purchase,Sale,"Positive Adjmt.","Negative Adjmt.",Transfer,Consumption,Output," ","Assembly Consumption","Assembly Output" }
    { 24  ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Sales Shipment,Sales Invoice,Sales Return Receipt,Sales Credit Memo,Purchase Receipt,Purchase Invoice,Purchase Return Shipment,Purchase Credit Memo,Transfer Shipment,Transfer Receipt,Service Shipment,Service Invoice,Service Credit Memo";
                                                   OptionString=" ","Sales Shipment","Sales Invoice","Sales Return Receipt","Sales Credit Memo","Purchase Receipt","Purchase Invoice","Purchase Return Shipment","Purchase Credit Memo","Transfer Shipment","Transfer Receipt","Service Shipment","Service Invoice","Service Credit Memo" }
    { 25  ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 26  ;   ;Document Line No.   ;Integer       ;CaptionML=ENU=Document Line No. }
    { 27  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 31  ;   ;Quantity            ;Decimal       ;CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5 }
    { 32  ;   ;Applied Quantity    ;Integer       ;CaptionML=ENU=Applied Quantity }
    { 33  ;   ;Cost Amount (Expected);Decimal     ;CaptionML=ENU=Cost Amount (Expected) }
    { 34  ;   ;Cost Amount (Actual);Decimal       ;CaptionML=ENU=Cost Amount (Actual) }
  }
  KEYS
  {
    {    ;"Entry No."                             ;Clustered=true }
    {    ;"Attached to Valuation Date","Attached to Entry No.",Type }
    {    ;"Item Ledger Entry No."                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ValueEntry@1003 : Record "Value Entry";

    [Internal]
    PROCEDURE CalculateAverageCost@5801() AverageCost : Decimal;
    BEGIN
      AverageCost := 0;
      if Type = Type::"Closing Entry" then begin
        SetItemFilters;
        ValueEntry.SumCostsTillValuationDate(ValueEntry);
        if ValueEntry."Item Ledger Entry Quantity" = 0 then
          exit(AverageCost);
        AverageCost :=
          (ValueEntry."Cost Amount (Actual)" + ValueEntry."Cost Amount (Expected)") /
          ValueEntry."Item Ledger Entry Quantity";
        exit(ROUND(AverageCost));
      end;
      if Quantity = 0 then
        exit(AverageCost);
      AverageCost := ("Cost Amount (Actual)" + "Cost Amount (Expected)") / Quantity;
      exit(ROUND(AverageCost));
    END;

    [Internal]
    PROCEDURE CalculateRemainingQty@1() : Decimal;
    BEGIN
      if Type <> Type::"Closing Entry" then
        exit(0);
      SetItemFilters;
      ValueEntry.SumCostsTillValuationDate(ValueEntry);
      exit(ValueEntry."Item Ledger Entry Quantity");
    END;

    [Internal]
    PROCEDURE CalculateCostAmt@4(Actual@1000 : Boolean) : Decimal;
    BEGIN
      if Type <> Type::"Closing Entry" then
        exit(0);
      SetItemFilters;
      ValueEntry.SumCostsTillValuationDate(ValueEntry);
      if Actual then
        exit(ValueEntry."Cost Amount (Actual)");
      exit(ValueEntry."Cost Amount (Expected)");
    END;

    [External]
    PROCEDURE SetItemFilters@8();
    BEGIN
      ValueEntry."Item No." := "Item No.";
      ValueEntry."Valuation Date" := "Valuation Date";
      ValueEntry."Location Code" := "Location Code";
      ValueEntry."Variant Code" := "Variant Code";
    END;

    BEGIN
    END.
  }
}

