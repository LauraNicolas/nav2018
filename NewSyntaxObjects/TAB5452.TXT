OBJECT Table 5452 Graph Integration Rec. Archive
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Graph Integration Rec. Archive;
  }
  FIELDS
  {
    { 2   ;   ;Graph ID            ;Text250       ;CaptionML=ENU=Graph ID }
    { 3   ;   ;Integration ID      ;GUID          ;TableRelation="Integration Record"."Integration ID";
                                                   CaptionML=ENU=Integration ID }
    { 4   ;   ;Last Synch. Modified On;DateTime   ;CaptionML=ENU=Last Synch. Modified On }
    { 5   ;   ;Last Synch. Graph Modified On;DateTime;
                                                   CaptionML=ENU=Last Synch. Graph Modified On }
    { 6   ;   ;Table ID            ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Integration Record"."Table ID" WHERE ("Integration ID"=FIELD("Integration ID")));
                                                   CaptionML=ENU=Table ID }
    { 7   ;   ;ChangeKey           ;Text250       ;CaptionML=ENU=ChangeKey }
    { 194 ;   ;Webhook Notification;BLOB          ;CaptionML=ENU=Webhook Notification }
  }
  KEYS
  {
    {    ;"Graph ID","Integration ID"             ;Clustered=true }
    {    ;"Integration ID"                         }
    {    ;"Last Synch. Modified On","Integration ID" }
    {    ;"Last Synch. Graph Modified On","Graph ID" }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE FindRecordIDFromID@3(SourceGraphID@1001 : Text[250];DestinationTableID@1004 : Integer;VAR DestinationRecordId@1002 : RecordID) : Boolean;
    VAR
      GraphIntegrationRecArchive@1003 : Record "Graph Integration Rec. Archive";
      IntegrationRecordArchive@1005 : Record "Integration Record Archive";
    BEGIN
      if FindRowFromGraphID(SourceGraphID,DestinationTableID,GraphIntegrationRecArchive) then
        if IntegrationRecordArchive.FindByIntegrationId(GraphIntegrationRecArchive."Integration ID") then begin
          DestinationRecordId := IntegrationRecordArchive."Record ID";
          exit(true);
        end;

      exit(false);
    END;

    [External]
    PROCEDURE FindIDFromRecordID@2(SourceRecordID@1001 : RecordID;VAR DestinationGraphID@1002 : Text[250]) : Boolean;
    VAR
      GraphIntegrationRecArchive@1004 : Record "Graph Integration Rec. Archive";
    BEGIN
      if not FindRowFromRecordID(SourceRecordID,GraphIntegrationRecArchive) then
        exit(false);

      DestinationGraphID := GraphIntegrationRecArchive."Graph ID";
      exit(true);
    END;

    LOCAL PROCEDURE FindRowFromRecordID@10(SourceRecordID@1000 : RecordID;VAR GraphIntegrationRecArchive@1001 : Record "Graph Integration Rec. Archive") : Boolean;
    VAR
      IntegrationRecordArchive@1002 : Record "Integration Record Archive";
    BEGIN
      if not IntegrationRecordArchive.FindByRecordId(SourceRecordID) then
        exit(false);
      exit(FindRowFromIntegrationID(IntegrationRecordArchive."Integration ID",GraphIntegrationRecArchive));
    END;

    LOCAL PROCEDURE FindRowFromGraphID@11(GraphID@1001 : Text[250];DestinationTableID@1003 : Integer;VAR GraphIntegrationRecArchive@1000 : Record "Graph Integration Rec. Archive") : Boolean;
    BEGIN
      GraphIntegrationRecArchive.SETRANGE("Graph ID",GraphID);
      GraphIntegrationRecArchive.SETFILTER("Table ID",FORMAT(DestinationTableID));
      exit(GraphIntegrationRecArchive.FINDFIRST);
    END;

    LOCAL PROCEDURE FindRowFromIntegrationID@22(IntegrationID@1001 : GUID;VAR GraphIntegrationRecArchive@1000 : Record "Graph Integration Rec. Archive") : Boolean;
    BEGIN
      GraphIntegrationRecArchive.SETCURRENTKEY("Integration ID");
      GraphIntegrationRecArchive.SETFILTER("Integration ID",IntegrationID);
      exit(GraphIntegrationRecArchive.FINDFIRST);
    END;

    BEGIN
    END.
  }
}

