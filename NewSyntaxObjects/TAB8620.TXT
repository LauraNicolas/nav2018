OBJECT Table 8620 Config. Tmpl. Selection Rules
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Config. Tmpl. Selection Rules;
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE ("Object Type"=CONST(Table));
                                                   CaptionML=ENU=Table ID }
    { 2   ;   ;Template Code       ;Code10        ;TableRelation="Config. Template Header".Code WHERE ("Table ID"=FIELD("Table ID"));
                                                   CaptionML=ENU=Template Code;
                                                   NotBlank=true }
    { 5   ;   ;Selection Criteria  ;BLOB          ;CaptionML=ENU=Selection Criteria }
    { 6   ;   ;Description         ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Config. Template Header".Description WHERE (Code=FIELD("Template Code"),
                                                                                                                   "Table ID"=FIELD("Table ID")));
                                                   CaptionML=ENU=Description;
                                                   Editable=false }
    { 10  ;   ;Order               ;Integer       ;CaptionML=ENU=Order }
    { 11  ;   ;Page ID             ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE ("Object Type"=CONST(Page),
                                                                                                      "Object Subtype"=CONST('API'));
                                                   OnValidate=VAR
                                                                PageMetadata@1000 : Record "Page Metadata";
                                                              BEGIN
                                                                PageMetadata.GET("Page ID");
                                                                VALIDATE("Table ID",PageMetadata.SourceTable);
                                                              END;

                                                   CaptionML=ENU=Page ID }
  }
  KEYS
  {
    {    ;"Table ID","Template Code"              ;Clustered=true }
    {    ;Order                                    }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DefineFiltersTxt@1001 : TextConst 'ENU=Specify criteria for when the template will be applied.';

    [Internal]
    PROCEDURE SetSelectionCriteria@4();
    VAR
      ConfigTmplSelectionRules@1004 : Record "Config. Tmpl. Selection Rules";
      RequestPageParametersHelper@1000 : Codeunit "Request Page Parameters Helper";
      CurrentFilters@1002 : Text;
      NewFilters@1003 : Text;
    BEGIN
      TESTFIELD("Table ID");
      TESTFIELD("Template Code");

      CurrentFilters := GetExistingFilters;

      if not RequestPageParametersHelper.ShowRequestPageAndGetFilters(NewFilters,CurrentFilters,'',"Table ID",DefineFiltersTxt) then begin
        if not ConfigTmplSelectionRules.GET("Table ID","Template Code") then
          INSERT(true);
        exit;
      end;

      SaveTextFilter(NewFilters);

      if not ConfigTmplSelectionRules.GET("Table ID","Template Code") then
        INSERT(true)
      else
        MODIFY(true);
    END;

    LOCAL PROCEDURE GetExistingFilters@12() Filters : Text;
    VAR
      FiltersInStream@1000 : InStream;
    BEGIN
      CALCFIELDS("Selection Criteria");
      if not "Selection Criteria".HASVALUE then
        exit;

      "Selection Criteria".CREATEINSTREAM(FiltersInStream);
      FiltersInStream.READ(Filters);
    END;

    [Internal]
    PROCEDURE GetFiltersAsTextDisplay@5() : Text;
    VAR
      TempBlob@1002 : TEMPORARY Record TempBlob;
      RequestPageParametersHelper@1001 : Codeunit "Request Page Parameters Helper";
      FiltersRecordRef@1000 : RecordRef;
    BEGIN
      FiltersRecordRef.OPEN("Table ID");
      CALCFIELDS("Selection Criteria");
      TempBlob.Blob := "Selection Criteria";

      if RequestPageParametersHelper.ConvertParametersToFilters(FiltersRecordRef,TempBlob) then
        exit(FiltersRecordRef.GETFILTERS);

      exit('');
    END;

    LOCAL PROCEDURE SaveTextFilter@15(NewFilters@1000 : Text);
    VAR
      FiltersOutStream@1001 : OutStream;
    BEGIN
      CLEAR("Selection Criteria");
      "Selection Criteria".CREATEOUTSTREAM(FiltersOutStream);
      FiltersOutStream.WRITETEXT(NewFilters);
    END;

    [Internal]
    PROCEDURE FindTemplateBasedOnRecordFields@1(RecordVariant@1001 : Variant;VAR ConfigTemplateHeader@1000 : Record "Config. Template Header") : Boolean;
    VAR
      ConfigTmplSelectionRules@1006 : Record "Config. Tmpl. Selection Rules";
      TempBlob@1007 : TEMPORARY Record TempBlob;
      DataTypeManagement@1002 : Codeunit "Data Type Management";
      RequestPageParametersHelper@1004 : Codeunit "Request Page Parameters Helper";
      RecRef@1003 : RecordRef;
      SearchRecRef@1008 : RecordRef;
      SearchRecRefVariant@1005 : Variant;
    BEGIN
      if not DataTypeManagement.GetRecordRef(RecordVariant,RecRef) then
        exit(false);

      ConfigTmplSelectionRules.SETCURRENTKEY(Order);
      ConfigTmplSelectionRules.ASCENDING(true);
      ConfigTmplSelectionRules.SETRANGE("Table ID",RecRef.NUMBER);
      ConfigTmplSelectionRules.SETAUTOCALCFIELDS("Selection Criteria");
      if not ConfigTmplSelectionRules.FINDSET(false) then
        exit(false);

      // Insert RecRef on a temporary table
      SearchRecRef.OPEN(RecRef.NUMBER,true);
      SearchRecRefVariant := SearchRecRef;
      RecRef.SETTABLE(SearchRecRefVariant);
      DataTypeManagement.GetRecordRef(SearchRecRefVariant,SearchRecRef);
      SearchRecRef.INSERT;

      repeat
        TempBlob.Blob := ConfigTmplSelectionRules."Selection Criteria";
        if not TempBlob.Blob.HASVALUE then
          exit(ConfigTemplateHeader.GET(ConfigTmplSelectionRules."Template Code"));

        if RequestPageParametersHelper.ConvertParametersToFilters(SearchRecRef,TempBlob) then
          if SearchRecRef.FIND then
            exit(ConfigTemplateHeader.GET(ConfigTmplSelectionRules."Template Code"));

      until ConfigTmplSelectionRules.NEXT = 0;

      exit(false);
    END;

    BEGIN
    END.
  }
}

