OBJECT Codeunit 7315 Whse. Internal Pick Release
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1005 : TextConst 'ENU=There is nothing to release for %1 %2.';
      Text001@1000 : TextConst 'ENU=You cannot reopen the whse. internal pick because warehouse worksheet lines exist that must first be handled or deleted.';
      Text002@1002 : TextConst 'ENU=You cannot reopen the whse. internal pick because warehouse activity lines exist that must first be handled or deleted.';

    [External]
    PROCEDURE Release@1(VAR WhsePickHeader@1000 : Record "Whse. Internal Pick Header");
    VAR
      Location@1004 : Record Location;
      WhsePickRqst@1003 : Record "Whse. Pick Request";
      WhsePickLine@1001 : Record "Whse. Internal Pick Line";
    BEGIN
      with WhsePickHeader do begin
        if Status = Status::Released then
          exit;

        WhsePickLine.SETRANGE("No.","No.");
        WhsePickLine.SETFILTER(Quantity,'<>0');
        if not WhsePickLine.FIND('-') then
          ERROR(Text000,TABLECAPTION,"No.");

        if "Location Code" <> '' then begin
          Location.GET("Location Code");
          Location.TESTFIELD("Require Pick");
        end else
          CheckPickRequired("Location Code");

        repeat
          WhsePickLine.TESTFIELD("Item No.");
          WhsePickLine.TESTFIELD("Unit of Measure Code");
          if Location."Directed Put-away and Pick" then
            WhsePickLine.TESTFIELD("To Zone Code");
          if Location."Bin Mandatory" then
            WhsePickLine.TESTFIELD("To Bin Code");
        until WhsePickLine.NEXT = 0;

        Status := Status::Released;
        MODIFY;

        CreateWhsePickRqst(WhsePickHeader);

        WhsePickRqst.SETRANGE("Document Type",WhsePickRqst."Document Type"::"Internal Pick");
        WhsePickRqst.SETRANGE("Document No.","No.");
        WhsePickRqst.SETRANGE(Status,Status::Open);
        if not WhsePickRqst.ISEMPTY then
          WhsePickRqst.DELETEALL(true);

        COMMIT;
      end;
    END;

    [External]
    PROCEDURE Reopen@2(WhsePickHeader@1000 : Record "Whse. Internal Pick Header");
    VAR
      WhsePickRqst@1001 : Record "Whse. Pick Request";
      PickWkshLine@1002 : Record "Whse. Worksheet Line";
      WhseActivLine@1003 : Record "Warehouse Activity Line";
    BEGIN
      with WhsePickHeader do begin
        if Status = Status::Open then
          exit;

        PickWkshLine.SETCURRENTKEY("Whse. Document Type","Whse. Document No.");
        PickWkshLine.SETRANGE("Whse. Document Type",PickWkshLine."Whse. Document Type"::"Internal Pick");
        PickWkshLine.SETRANGE("Whse. Document No.","No.");
        if not PickWkshLine.ISEMPTY then
          ERROR(Text001);

        WhseActivLine.SETCURRENTKEY("Whse. Document No.","Whse. Document Type","Activity Type");
        WhseActivLine.SETRANGE("Whse. Document No.","No.");
        WhseActivLine.SETRANGE("Whse. Document Type",WhseActivLine."Whse. Document Type"::"Internal Pick");
        WhseActivLine.SETRANGE("Activity Type",WhseActivLine."Activity Type"::Pick);
        if not WhseActivLine.ISEMPTY then
          ERROR(Text002);

        WhsePickRqst.SETRANGE("Document Type",WhsePickRqst."Document Type"::"Internal Pick");
        WhsePickRqst.SETRANGE("Document No.","No.");
        WhsePickRqst.SETRANGE(Status,Status::Released);
        if not WhsePickRqst.ISEMPTY then
          WhsePickRqst.MODIFYALL(Status,WhsePickRqst.Status::Open);

        Status := Status::Open;
        MODIFY;
      end;
    END;

    LOCAL PROCEDURE CreateWhsePickRqst@3(VAR WhsePickHeader@1000 : Record "Whse. Internal Pick Header");
    VAR
      WhsePickRqst@1001 : Record "Whse. Pick Request";
      Location@1002 : Record Location;
    BEGIN
      with WhsePickHeader do
        if Location.RequirePicking("Location Code") then begin
          WhsePickRqst."Document Type" := WhsePickRqst."Document Type"::"Internal Pick";
          WhsePickRqst."Document No." := "No.";
          WhsePickRqst.Status := Status;
          WhsePickRqst."Location Code" := "Location Code";
          WhsePickRqst."Zone Code" := "To Zone Code";
          WhsePickRqst."Bin Code" := "To Bin Code";
          "Document Status" := GetDocumentStatus(0);
          WhsePickRqst."Completely Picked" :=
            "Document Status" = "Document Status"::"Completely Picked";
          if not WhsePickRqst.INSERT then
            WhsePickRqst.MODIFY;
        end;
    END;

    BEGIN
    END.
  }
}

