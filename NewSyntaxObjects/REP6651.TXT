OBJECT Report 6651 Delete Invd Sales Ret. Orders
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Delete Invd Sales Ret. Orders;
    ProcessingOnly=true;
  }
  DATASET
  {
    { 6640;    ;DataItem;Sales Header        ;
               DataItemTable="Sales Header";
               DataItemTableView=SORTING("Document Type","No.") WHERE("Document Type"=CONST("Return Order"));
               ReqFilterHeadingML=ENU=Sales Return Order;
               OnPreDataItem=BEGIN
                               Window.OPEN(Text000);
                             END;

               OnAfterGetRecord=VAR
                                  ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                                  PostSalesDelete@1001 : Codeunit "PostSales-Delete";
                                BEGIN
                                  Window.UPDATE(1,"No.");

                                  AllLinesDeleted := true;
                                  ItemChargeAssgntSales.RESET;
                                  ItemChargeAssgntSales.SETRANGE("Document Type","Document Type");
                                  ItemChargeAssgntSales.SETRANGE("Document No.","No.");
                                  SalesOrderLine.RESET;
                                  SalesOrderLine.SETRANGE("Document Type","Document Type");
                                  SalesOrderLine.SETRANGE("Document No.","No.");
                                  SalesOrderLine.SETFILTER("Quantity Invoiced",'<>0');
                                  if SalesOrderLine.FIND('-') then begin
                                    SalesOrderLine.SETRANGE("Quantity Invoiced");
                                    SalesOrderLine.SETFILTER("Outstanding Quantity",'<>0');
                                    if not SalesOrderLine.FIND('-') then begin
                                      SalesOrderLine.SETRANGE("Outstanding Quantity");
                                      SalesOrderLine.SETFILTER("Return Qty. Rcd. Not Invd.",'<>0');
                                      if not SalesOrderLine.FIND('-') then begin
                                        SalesOrderLine.LOCKTABLE;
                                        if not SalesOrderLine.FIND('-') then begin
                                          SalesOrderLine.SETRANGE("Return Qty. Rcd. Not Invd.");
                                          if SalesOrderLine.FIND('-') then
                                            repeat
                                              SalesOrderLine.CALCFIELDS("Qty. Assigned");
                                              if ((SalesOrderLine."Qty. Assigned" = SalesOrderLine."Quantity Invoiced") and
                                                  (SalesOrderLine."Qty. Assigned" <> 0)) or
                                                 (SalesOrderLine.Type <> SalesOrderLine.Type::"Charge (Item)")
                                              then begin
                                                if SalesOrderLine.Type = SalesOrderLine.Type::"Charge (Item)" then begin
                                                  ItemChargeAssgntSales.SETRANGE("Document Line No.",SalesOrderLine."Line No.");
                                                  ItemChargeAssgntSales.DELETEALL;
                                                end;
                                                if SalesOrderLine.HASLINKS then
                                                  SalesOrderLine.DELETELINKS;
                                                SalesOrderLine.DELETE;
                                              end else
                                                AllLinesDeleted := false;

                                            until SalesOrderLine.NEXT = 0;

                                          if AllLinesDeleted then begin
                                            PostSalesDelete.DeleteHeader(
                                              "Sales Header",SalesShptHeader,SalesInvHeader,SalesCrMemoHeader,ReturnRcptHeader,
                                              PrepmtSalesInvHeader,PrepmtSalesCrMemoHeader);
                                            ReserveSalesLine.DeleteInvoiceSpecFromHeader("Sales Header");

                                            SalesCommentLine.SETRANGE("Document Type","Document Type");
                                            SalesCommentLine.SETRANGE("No.","No.");
                                            SalesCommentLine.DELETEALL;

                                            WhseRequest.SETRANGE("Source Type",DATABASE::"Sales Line");
                                            WhseRequest.SETRANGE("Source Subtype","Document Type");
                                            WhseRequest.SETRANGE("Source No.","No.");
                                            if not WhseRequest.ISEMPTY then
                                              WhseRequest.DELETEALL(true);

                                            ApprovalsMgmt.DeleteApprovalEntries(RECORDID);

                                            DELETE;
                                          end;
                                          COMMIT;
                                        end;
                                      end;
                                    end;
                                  end;
                                END;

               ReqFilterFields="No.","Sell-to Customer No.","Bill-to Customer No." }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Processing sales return orders #1##########';
      SalesOrderLine@1001 : Record "Sales Line";
      SalesShptHeader@1011 : Record "Sales Shipment Header";
      SalesInvHeader@1010 : Record "Sales Invoice Header";
      SalesCrMemoHeader@1009 : Record "Sales Cr.Memo Header";
      ReturnRcptHeader@1005 : Record "Return Receipt Header";
      PrepmtSalesInvHeader@1015 : Record "Sales Invoice Header";
      PrepmtSalesCrMemoHeader@1014 : Record "Sales Cr.Memo Header";
      SalesCommentLine@1002 : Record "Sales Comment Line";
      ItemChargeAssgntSales@1007 : Record "Item Charge Assignment (Sales)";
      WhseRequest@1008 : Record "Warehouse Request";
      ReserveSalesLine@1013 : Codeunit "Sales Line-Reserve";
      Window@1004 : Dialog;
      AllLinesDeleted@1006 : Boolean;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

