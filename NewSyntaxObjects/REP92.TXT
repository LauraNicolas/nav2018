OBJECT Report 92 Import Consolidation from File
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Import Consolidation from File;
    ProcessingOnly=true;
    OnPreReport=VAR
                  BusUnit2@1006 : Record "Business Unit";
                  GLSetup@1007 : Record "General Ledger Setup";
                  FileManagement@1000 : Codeunit "File Management";
                BEGIN
                  if not WebClientEnabled then begin
                    if FileName = '' then
                      ERROR(Text000);
                    ServerFileName := FileManagement.UploadFileSilent(FileName);
                  end else
                    ServerFileName := FileManagement.UploadFile(SelectFileToImportTxt,FileName);

                  if GLDocNo = '' then
                    ERROR(Text015);

                  if FileFormat = FileFormat::"Version 4.00 or Later (.xml)" then begin
                    Consolidate.ImportFromXML(ServerFileName);
                    Consolidate.GetGlobals(
                      ProductVersion,FormatVersion,BusUnit."Company Name",
                      SubsidCurrencyCode,AdditionalCurrencyCode,ParentCurrencyCode,
                      CheckSum,ConsolidStartDate,ConsolidEndDate);
                    CalculatedCheckSum := Consolidate.CalcCheckSum;
                    if CheckSum <> CalculatedCheckSum then
                      ERROR(Text036,CheckSum,CalculatedCheckSum);
                    TransferPerDay := true;
                  end else begin
                    CLEAR(GLEntryFile);
                    GLEntryFile.TEXTMODE := true;
                    GLEntryFile.OPEN(ServerFileName);
                    GLEntryFile.READ(TextLine);
                    if COPYSTR(TextLine,1,4) = '<01>' then begin
                      BusUnit."Company Name" := DELCHR(COPYSTR(TextLine,5,30),'>');
                      EVALUATE(ConsolidStartDate,COPYSTR(TextLine,36,9));
                      EVALUATE(ConsolidEndDate,COPYSTR(TextLine,46,9));
                      EVALUATE(TransferPerDay,COPYSTR(TextLine,56,3));
                    end;
                  end;

                  if (BusUnit."Company Name" = '') or (ConsolidStartDate = 0D) or (ConsolidEndDate = 0D) then
                    ERROR(Text001);

                  if not
                     CONFIRM(
                       Text023,
                       false,ConsolidStartDate,ConsolidEndDate)
                  then
                    CurrReport.QUIT;

                  BusUnit.SETCURRENTKEY("Company Name");
                  BusUnit.SETRANGE("Company Name",BusUnit."Company Name");
                  BusUnit.FIND('-');
                  if BusUnit.NEXT <> 0 then
                    ERROR(
                      Text005 +
                      Text006,
                      BusUnit.FIELDCAPTION("Company Name"),BusUnit."Company Name");
                  BusUnit.TESTFIELD(Consolidate,true);

                  BusUnit2."File Format" := FileFormat;
                  if BusUnit."File Format" <> FileFormat then
                    if not CONFIRM(
                         Text037 + Text038,false,
                         BusUnit.FIELDCAPTION("File Format"),BusUnit2."File Format",BusUnit.TABLECAPTION,BusUnit."File Format")
                    then
                      CurrReport.QUIT;

                  if FileFormat = FileFormat::"Version 4.00 or Later (.xml)" then begin
                    if SubsidCurrencyCode = '' then
                      SubsidCurrencyCode := BusUnit."Currency Code";
                    GLSetup.GET;
                    if (SubsidCurrencyCode <> BusUnit."Currency Code") and
                       (SubsidCurrencyCode <> GLSetup."LCY Code") and
                       not ((BusUnit."Currency Code" = '') and (GLSetup."LCY Code" = ''))
                    then
                      ERROR(
                        Text002,
                        BusUnit.FIELDCAPTION("Currency Code"),SubsidCurrencyCode,
                        BusUnit.TABLECAPTION,BusUnit."Currency Code");
                  end else begin
                    SubsidCurrencyCode := BusUnit."Currency Code";
                    Window.OPEN(
                      '#1###############################\\' +
                      Text024 +
                      Text025 +
                      Text026);
                    Window.UPDATE(1,Text027);
                    Window.UPDATE(2,BusUnit.Code);
                    Window.UPDATE(3,'');
                  end;
                END;

    OnPostReport=BEGIN
                   if FileFormat = FileFormat::"Version 3.70 or Earlier (.txt)" then
                     Consolidate.SetGlobals(
                       '','',BusUnit."Company Name",
                       SubsidCurrencyCode,AdditionalCurrencyCode,ParentCurrencyCode,
                       0,ConsolidStartDate,ConsolidEndDate);
                   Consolidate.UpdateGLEntryDimSetID;
                   Consolidate.SetDocNo(GLDocNo);
                   Consolidate.RUN(BusUnit);
                 END;

  }
  DATASET
  {
    { 6710;    ;DataItem;G/L Account         ;
               DataItemTable="G/L Account";
               DataItemTableView=SORTING("No.") WHERE("Account Type"=CONST(Posting));
               OnPreDataItem=BEGIN
                               if FileFormat = FileFormat::"Version 4.00 or Later (.xml)" then
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  "Consol. Debit Acc." := "No.";
                                  "Consol. Credit Acc." := "No.";
                                  "Consol. Translation Method" := "Consol. Translation Method"::"Average Rate (Manual)";
                                  Consolidate.InsertGLAccount("G/L Account");
                                END;

               OnPostDataItem=VAR
                                TempGLEntry@1001 : TEMPORARY Record "G/L Entry";
                                TempDimBuf@1000 : TEMPORARY Record "Dimension Buffer";
                              BEGIN
                                if FileFormat = FileFormat::"Version 4.00 or Later (.xml)" then
                                  CurrReport.BREAK;

                                // Import G/L entries
                                while GLEntryFile.POS <> GLEntryFile.LEN do begin
                                  GLEntryFile.READ(TextLine);
                                  case COPYSTR(TextLine,1,4) of
                                    '<02>':
                                      begin
                                        TempGLEntry.INIT;
                                        EVALUATE(TempGLEntry."G/L Account No.",COPYSTR(TextLine,5,20));
                                        EVALUATE(TempGLEntry."Posting Date",COPYSTR(TextLine,26,9));
                                        EVALUATE(TempGLEntry.Amount,COPYSTR(TextLine,36,22));
                                        if TempGLEntry.Amount > 0 then
                                          TempGLEntry."Debit Amount" := TempGLEntry.Amount
                                        else
                                          TempGLEntry."Credit Amount" := -TempGLEntry.Amount;
                                        TempGLEntry."Entry No." := Consolidate.InsertGLEntry(TempGLEntry);
                                      end;
                                    '<03>':
                                      begin
                                        TempDimBuf.INIT;
                                        TempDimBuf."Table ID" := DATABASE::"G/L Entry";
                                        TempDimBuf."Entry No." := TempGLEntry."Entry No.";
                                        TempDimBuf."Dimension Code" := COPYSTR(TextLine,5,20);
                                        TempDimBuf."Dimension Value Code" := COPYSTR(TextLine,26,20);
                                        Consolidate.InsertEntryDim(TempDimBuf,TempDimBuf."Entry No.");
                                      end;
                                  end;
                                end;

                                Consolidate.SelectAllImportedDimensions;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnInit=VAR
               FileManagement@1000 : Codeunit "File Management";
             BEGIN
               WebClientEnabled := FileManagement.IsWebClient;
             END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 3   ;2   ;Field     ;
                  Name=File Format;
                  CaptionML=ENU=File Format;
                  ToolTipML=ENU=Specifies the format of the file that you want to use for consolidation.;
                  OptionCaptionML=ENU=Version 4.00 or Later (.xml),Version 3.70 or Earlier (.txt);
                  ApplicationArea=#Suite;
                  SourceExpr=FileFormat }

      { 2   ;2   ;Field     ;
                  Name=FileNameControl;
                  CaptionML=ENU=File Name;
                  ToolTipML=ENU=Specifies the name of the file that you want to use for consolidation.;
                  ApplicationArea=#Suite;
                  SourceExpr=FileName;
                  Visible=NOT WebClientEnabled;
                  OnAssistEdit=VAR
                                 FileManagement@1000 : Codeunit "File Management";
                               BEGIN
                                 if FileFormat = FileFormat::"Version 4.00 or Later (.xml)" then
                                   FileName := FileManagement.OpenFileDialog(Text034,FileName,FileManagement.GetToFilterText('','.xml'))
                                 else
                                   FileName := FileManagement.OpenFileDialog(Text031,FileName,FileManagement.GetToFilterText('','.txt'));
                               END;
                                }

      { 1   ;2   ;Field     ;
                  Name=Document No.;
                  CaptionML=ENU=Document No.;
                  ToolTipML=ENU=Specifies the document number to be used on all new ledger entries created from the consolidation.;
                  ApplicationArea=#Suite;
                  SourceExpr=GLDocNo }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Enter the file name.';
      Text001@1001 : TextConst 'ENU=The file to be imported has an unknown format.';
      Text002@1067 : TextConst 'ENU=The %1 in the file to be imported (%2) does not match the %1 in the %3 (%4).';
      Text005@1003 : TextConst 'ENU=The business unit %1 %2 is not unique.\\';
      Text006@1004 : TextConst 'ENU=Delete %1 in the extra records.';
      Text015@1007 : TextConst 'ENU=Enter a document number.';
      Text023@1014 : TextConst 'ENU=Do you want to consolidate in the period from %1 to %2?';
      Text024@1015 : TextConst 'ENU=Business Unit Code   #2##########\';
      Text025@1016 : TextConst 'ENU=G/L Account No.      #3##########\';
      Text026@1017 : TextConst 'ENU=Date                 #4######';
      Text027@1018 : TextConst 'ENU=Reading File...';
      Text031@1022 : TextConst 'ENU=Import from Text File';
      BusUnit@1025 : Record "Business Unit";
      Consolidate@1064 : Codeunit Consolidate;
      Window@1036 : Dialog;
      GLEntryFile@1037 : File;
      FileName@1038 : Text;
      FileFormat@1060 : '"Version 4.00 or Later (.xml)","Version 3.70 or Earlier (.txt)"';
      TextLine@1039 : Text[250];
      GLDocNo@1040 : Code[20];
      ConsolidStartDate@1041 : Date;
      ConsolidEndDate@1042 : Date;
      TransferPerDay@1043 : Boolean;
      CheckSum@1065 : Decimal;
      CalculatedCheckSum@1073 : Decimal;
      Text034@1061 : TextConst 'ENU=Import from XML File';
      ParentCurrencyCode@1072 : Code[10];
      SubsidCurrencyCode@1071 : Code[10];
      AdditionalCurrencyCode@1070 : Code[10];
      ProductVersion@1068 : Code[10];
      FormatVersion@1069 : Code[10];
      Text036@1074 : TextConst 'ENU=Imported checksum (%1) does not equal the calculated checksum (%2). The file may be corrupt.';
      Text037@1005 : TextConst 'ENU=The entered %1, %2, does not equal the %1 on this %3, %4.';
      Text038@1002 : TextConst 'ENU=\Do you want to continue?';
      ServerFileName@1006 : Text;
      WebClientEnabled@1008 : Boolean INDATASET;
      SelectFileToImportTxt@1009 : TextConst 'ENU=Select the file to import.';

    [External]
    PROCEDURE InitializeRequest@3(NewFileFormat@1002 : Option;NewFileName@1000 : Text;NewGLDocNo@1001 : Code[20]);
    BEGIN
      FileFormat := NewFileFormat;
      FileName := NewFileName;
      GLDocNo := NewGLDocNo;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

