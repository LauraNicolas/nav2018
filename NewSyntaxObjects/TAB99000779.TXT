OBJECT Table 99000779 Production BOM Version
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    DataCaptionFields="Production BOM No.","Version Code",Description;
    OnInsert=BEGIN
               ProdBOMHeader.GET("Production BOM No.");
               if "Version Code" = '' then begin
                 ProdBOMHeader.TESTFIELD("Version Nos.");
                 NoSeriesMgt.InitSeries(ProdBOMHeader."Version Nos.",xRec."No. Series",0D,"Version Code","No. Series");
               end;
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
             END;

    OnDelete=VAR
               ProdBOMLine@1000 : Record "Production BOM Line";
             BEGIN
               ProdBOMLine.SETRANGE("Production BOM No.","Production BOM No.");
               ProdBOMLine.SETRANGE("Version Code","Version Code");
               ProdBOMLine.DELETEALL(true);
             END;

    OnRename=BEGIN
               if Status = Status::Certified then
                 ERROR(Text001,TABLECAPTION,FIELDCAPTION(Status),FORMAT(Status));
             END;

    CaptionML=ENU=Production BOM Version;
    LookupPageID="Prod. BOM Version List";
    DrillDownPageID="Prod. BOM Version List";
  }
  FIELDS
  {
    { 1   ;   ;Production BOM No.  ;Code20        ;TableRelation="Production BOM Header";
                                                   CaptionML=ENU=Production BOM No.;
                                                   NotBlank=true }
    { 2   ;   ;Version Code        ;Code20        ;CaptionML=ENU=Version Code }
    { 3   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 10  ;   ;Starting Date       ;Date          ;CaptionML=ENU=Starting Date }
    { 21  ;   ;Unit of Measure Code;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=VAR
                                                                Item@1000 : Record Item;
                                                                ItemUnitOfMeasure@1001 : Record "Item Unit of Measure";
                                                              BEGIN
                                                                if (Status = Status::Certified) and ("Unit of Measure Code" <> xRec."Unit of Measure Code") then
                                                                  FIELDERROR(Status);
                                                                Item.SETRANGE("Production BOM No.","Production BOM No.");
                                                                if Item.FINDSET then
                                                                  repeat
                                                                    ItemUnitOfMeasure.GET(Item."No.","Unit of Measure Code");
                                                                  until Item.NEXT = 0;
                                                              END;

                                                   CaptionML=ENU=Unit of Measure Code }
    { 22  ;   ;Last Date Modified  ;Date          ;CaptionML=ENU=Last Date Modified;
                                                   Editable=false }
    { 45  ;   ;Status              ;Option        ;OnValidate=VAR
                                                                ProdBOMHeader@1000 : Record "Production BOM Header";
                                                                PlanningAssignment@1001 : Record "Planning Assignment";
                                                                ProdBOMCheck@1002 : Codeunit "Production BOM-Check";
                                                              BEGIN
                                                                if (Status <> xRec.Status) and (Status = Status::Certified) then begin
                                                                  ProdBOMCheck.ProdBOMLineCheck("Production BOM No.","Version Code");
                                                                  TESTFIELD("Unit of Measure Code");
                                                                  ProdBOMHeader.GET("Production BOM No.");
                                                                  ProdBOMHeader."Low-Level Code" := 0;
                                                                  ProdBOMCheck.Code(ProdBOMHeader,"Version Code");
                                                                  PlanningAssignment.NewBOM("Production BOM No.");
                                                                end;
                                                                MODIFY(true);
                                                                COMMIT;
                                                              END;

                                                   CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=New,Certified,Under Development,Closed;
                                                   OptionString=New,Certified,"Under Development",Closed }
    { 50  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"Production BOM No.","Version Code"     ;Clustered=true }
    {    ;"Production BOM No.","Starting Date"     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ProdBOMHeader@1000 : Record "Production BOM Header";
      ProdBOMVersion@1001 : Record "Production BOM Version";
      NoSeriesMgt@1002 : Codeunit NoSeriesManagement;
      Text001@1003 : TextConst 'ENU=You cannot rename the %1 when %2 is %3.';

    [External]
    PROCEDURE AssistEdit@2(OldProdBOMVersion@1000 : Record "Production BOM Version") : Boolean;
    BEGIN
      with ProdBOMVersion do begin
        ProdBOMVersion := Rec;
        ProdBOMHeader.GET("Production BOM No.");
        ProdBOMHeader.TESTFIELD("Version Nos.");
        if NoSeriesMgt.SelectSeries(ProdBOMHeader."Version Nos.",OldProdBOMVersion."No. Series","No. Series") then begin
          NoSeriesMgt.SetSeries("Version Code");
          Rec := ProdBOMVersion;
          exit(true);
        end;
      end;
    END;

    [External]
    PROCEDURE Caption@1() : Text[100];
    VAR
      ProdBOMHeader@1000 : Record "Production BOM Header";
    BEGIN
      if GETFILTERS = '' then
        exit('');

      if not ProdBOMHeader.GET("Production BOM No.") then
        exit('');

      exit(
        STRSUBSTNO('%1 %2 %3',
          "Production BOM No.",ProdBOMHeader.Description,"Version Code"));
    END;

    BEGIN
    END.
  }
}

