OBJECT Codeunit 1705 Exp. Mapping Det Pos. Pay
{
  OBJECT-PROPERTIES
  {
    Date=20161025D;
    Time=120000T;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    TableNo="Data Exch.";
    OnRun=VAR
            PositivePayDetail@1010 : Record "Positive Pay Detail";
            DataExch@1009 : Record "Data Exch.";
            PositivePayExportMgt@1001 : Codeunit "Positive Pay Export Mgt";
            RecordRef@1004 : RecordRef;
            Window@1000 : Dialog;
            LineNo@1002 : Integer;
          BEGIN
            if NoDataExchLineDef("Data Exch. Def Code") then
              exit;

            Window.OPEN(ProgressMsg);

            // Range through the line types, Look at details...
            LineNo := 1;

            PositivePayDetail.SETRANGE("Data Exch. Entry No.","Entry No.");
            if PositivePayDetail.FINDSET then
              repeat
                Window.UPDATE(1,LineNo);
                if HandlePositivePayDetails(PositivePayDetail) then begin
                  DataExch.SETRANGE("Entry No.","Entry No.");
                  if DataExch.FINDFIRST then begin
                    RecordRef.GETTABLE(PositivePayDetail);
                    PositivePayExportMgt.InsertDataExchLineForFlatFile(
                      DataExch,
                      LineNo,
                      RecordRef);
                    LineNo := LineNo + 1;
                  end;
                end;
              until  PositivePayDetail.NEXT = 0;
            Window.CLOSE;
          END;

  }
  CODE
  {
    VAR
      ProgressMsg@1000 : TextConst 'ENU=Processing line no. #1######.';

    LOCAL PROCEDURE HandlePositivePayDetails@1(PositivePayDetail@1000 : Record "Positive Pay Detail") : Boolean;
    VAR
      CheckLedgEntry@1001 : Record "Check Ledger Entry";
    BEGIN
      if PositivePayDetail.Payee = '' then begin
        CheckLedgEntry.SETRANGE("Positive Pay Exported",false);
        CheckLedgEntry.SETRANGE("Data Exch. Voided Entry No.",PositivePayDetail."Data Exch. Entry No.");
        CheckLedgEntry.SETRANGE("Check No.",PositivePayDetail."Check Number");
        if CheckLedgEntry.FINDLAST then
          exit(CheckLedgEntry."Entry Status" <> CheckLedgEntry."Entry Status"::"Test Print");
      end;

      exit(true);
    END;

    LOCAL PROCEDURE NoDataExchLineDef@2(DataExchDefCode@1001 : Code[20]) : Boolean;
    VAR
      DataExchLineDef@1000 : Record "Data Exch. Line Def";
    BEGIN
      with DataExchLineDef do begin
        INIT;
        SETRANGE("Data Exch. Def Code",DataExchDefCode);
        SETRANGE("Line Type","Line Type"::Detail);
        exit(ISEMPTY);
      end;
    END;

    BEGIN
    END.
  }
}

