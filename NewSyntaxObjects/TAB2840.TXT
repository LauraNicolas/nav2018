OBJECT Table 2840 Native - Gen. Settings Buffer
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Native - Gen. Settings Buffer;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Currency Symbol     ;Text10        ;CaptionML=ENU=Currency Symbol }
    { 3   ;   ;Paypal Email Address;Text250       ;CaptionML=ENU=Paypal Email Address }
    { 4   ;   ;Country/Region Code ;Code10        ;CaptionML=ENU=Country/Region Code }
    { 5   ;   ;Language Locale ID  ;Integer       ;CaptionML=ENU=Language Locale ID }
    { 50  ;   ;Default Tax ID      ;GUID          ;CaptionML=ENU=Default Tax ID;
                                                   Editable=false }
    { 51  ;   ;Defauilt Tax Description;Text50    ;CaptionML=ENU=Defauilt Tax Description;
                                                   Editable=false }
    { 52  ;   ;Default Payment Terms ID;GUID      ;CaptionML=ENU=Default Payment Terms ID;
                                                   Editable=false }
    { 53  ;   ;Def. Pmt. Term Description;Text50  ;CaptionML=ENU=Def. Pmt. Term Description;
                                                   Editable=false }
    { 54  ;   ;Default Payment Method ID;GUID     ;CaptionML=ENU=Default Payment Method ID;
                                                   Editable=false }
    { 55  ;   ;Def. Pmt. Method Description;Text50;CaptionML=ENU=Def. Pmt. Method Description;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"Primary Key"                           ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      RecordMustBeTemporaryErr@1000 : TextConst 'ENU=General Settings Buffer must be used as a temporary record.';

    PROCEDURE LoadRecord@2();
    VAR
      CompanyInformation@1001 : Record "Company Information";
      O365SalesInitialSetup@1003 : Record "O365 Sales Initial Setup";
      GeneralLedgerSetup@1004 : Record "General Ledger Setup";
      PaymentMethod@1005 : Record "Payment Method";
      PaymentTerms@1006 : Record "Payment Terms";
      TempNativeAPITaxSetup@1007 : TEMPORARY Record "Native - API Tax Setup";
      UserPersonalization@1008 : Record "User Personalization";
      PaypalAccountProxy@1002 : Codeunit "Paypal Account Proxy";
    BEGIN
      if not ISTEMPORARY then
        ERROR(RecordMustBeTemporaryErr);

      DELETEALL;
      CLEAR(Rec);

      CompanyInformation.GET;
      "Country/Region Code" := CompanyInformation."Country/Region Code";

      GeneralLedgerSetup.GET;
      "Currency Symbol" := GeneralLedgerSetup."Local Currency Symbol";

      PaypalAccountProxy.GetPaypalAccount("Paypal Email Address");

      O365SalesInitialSetup.GET;
      if PaymentTerms.GET(O365SalesInitialSetup."Default Payment Terms Code") then begin
        "Default Payment Terms ID" := PaymentTerms.Id;
        "Def. Pmt. Term Description" := PaymentTerms.Description;
      end;

      if PaymentMethod.GET(O365SalesInitialSetup."Default Payment Method Code") then begin
        "Default Payment Method ID" := PaymentMethod.Id;
        "Def. Pmt. Method Description" := PaymentMethod.Description;
      end;

      TempNativeAPITaxSetup.LoadSetupRecords;
      TempNativeAPITaxSetup.SETRANGE(Default,true);
      if TempNativeAPITaxSetup.FINDFIRST then begin
        "Default Tax ID" := TempNativeAPITaxSetup.Id;
        "Defauilt Tax Description" := TempNativeAPITaxSetup.Description;
      end;

      UserPersonalization.GET(USERSECURITYID);
      "Language Locale ID" := UserPersonalization."Language ID";

      INSERT(true);
    END;

    PROCEDURE SaveRecord@1();
    VAR
      PaypalAccountProxy@1000 : Codeunit "Paypal Account Proxy";
    BEGIN
      if xRec."Currency Symbol" <> "Currency Symbol" then
        UpdateCurrencySymbol;

      if xRec."Paypal Email Address" <> "Paypal Email Address" then
        PaypalAccountProxy.SetPaypalAccount("Paypal Email Address",true);

      if xRec."Country/Region Code" <> "Country/Region Code" then
        UpdateCountryRegionCode;

      if xRec."Language Locale ID" <> "Language Locale ID" then
        UpdateLanguageId;
    END;

    LOCAL PROCEDURE UpdateCurrencySymbol@3();
    VAR
      GeneralLedgerSetup@1000 : Record "General Ledger Setup";
    BEGIN
      GeneralLedgerSetup.GET;
      if "Currency Symbol" <> GeneralLedgerSetup."Local Currency Symbol" then begin
        GeneralLedgerSetup.VALIDATE("Local Currency Symbol","Currency Symbol");
        GeneralLedgerSetup.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateCountryRegionCode@6();
    VAR
      CompanyInformation@1000 : Record "Company Information";
    BEGIN
      CompanyInformation.GET;
      if CompanyInformation."Country/Region Code" <> "Country/Region Code" then begin
        CompanyInformation.VALIDATE("Country/Region Code","Country/Region Code");
        CompanyInformation.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateLanguageId@9();
    VAR
      UserPersonalization@1000 : Record "User Personalization";
    BEGIN
      UserPersonalization.GET(USERSECURITYID);
      if "Language Locale ID" <> UserPersonalization."Language ID" then begin
        UserPersonalization.VALIDATE("Language ID","Language Locale ID");
        UserPersonalization.MODIFY(true);
      end;
    END;

    BEGIN
    END.
  }
}

