OBJECT Codeunit 1265 Bank Data Conv. Serv. Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Bank Data Conv. Service Setup"=r;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      MissingCredentialsQst@1000 : TextConst 'ENU=The %1 is missing the user name or password. Do you want to open the %1 page?';
      MissingCredentialsErr@1001 : TextConst 'ENU=The user name and password must be filled in %1 page.';
      ResultPathTxt@1002 : TextConst '@@@={Locked};ENU="/amc:%1/return/syslog[syslogtype[text()=""error""]]"';
      FinstaPathTxt@1003 : TextConst '@@@={Locked};ENU=/amc:%1/return/finsta/transactions';
      HeaderErrPathTxt@1005 : TextConst '@@@={Locked};ENU="/amc:%1/return/header/result[text()=""error""]"';
      ConvErrPathTxt@1004 : TextConst '@@@={Locked};ENU="/amc:%1/return/pack/convertlog[syslogtype[text()=""error""]]"';
      DataPathTxt@1006 : TextConst '@@@={Locked};ENU=/amc:%1/return/pack/data/text()';

    [External]
    PROCEDURE InitDefaultURLs@11(VAR BankDataConvServiceSetup@1000 : Record "Bank Data Conv. Service Setup");
    BEGIN
      BankDataConvServiceSetup."Sign-up URL" := 'https://amcbanking.com/store/amc-banking/microsoft-dynamics-nav/version-2015-2016/';
      BankDataConvServiceSetup."Service URL" := 'https://nav.amcbanking.com/nav02';
      BankDataConvServiceSetup."Support URL" := 'http://www.amcbanking.dk/nav/support';
    END;

    [External]
    PROCEDURE SetURLsToDefault@2(VAR BankDataConvServiceSetup@1000 : Record "Bank Data Conv. Service Setup");
    BEGIN
      InitDefaultURLs(BankDataConvServiceSetup);
      BankDataConvServiceSetup.MODIFY;
    END;

    [External]
    PROCEDURE GetNamespace@1() : Text;
    BEGIN
      exit('http://nav02.soap.xml.link.amc.dk/');
    END;

    [External]
    PROCEDURE GetSupportURL@3(XmlNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode") : Text;
    VAR
      BankDataConvServiceSetup@1003 : Record "Bank Data Conv. Service Setup";
      XMLDOMMgt@1002 : Codeunit "XML DOM Management";
      SupportURL@1001 : Text;
    BEGIN
      SupportURL := XMLDOMMgt.FindNodeText(XmlNode,'url');
      if SupportURL <> '' then
        exit(SupportURL);

      BankDataConvServiceSetup.GET;
      exit(BankDataConvServiceSetup."Support URL");
    END;

    [External]
    PROCEDURE CheckCredentials@4();
    VAR
      BankDataConvServiceSetup@1000 : Record "Bank Data Conv. Service Setup";
      CompanyInformationMgt@1001 : Codeunit "Company Information Mgt.";
    BEGIN
      if not BankDataConvServiceSetup.GET or (not BankDataConvServiceSetup.HasPassword) or (not BankDataConvServiceSetup.HasUserName)
      then begin
        if CompanyInformationMgt.IsDemoCompany then begin
          BankDataConvServiceSetup.DELETEALL(true);
          BankDataConvServiceSetup.INIT;
          BankDataConvServiceSetup.INSERT(true);
        end else
          if CONFIRM(STRSUBSTNO(MissingCredentialsQst,BankDataConvServiceSetup.TABLECAPTION),true) then begin
            COMMIT;
            PAGE.RUNMODAL(PAGE::"Bank Data Conv. Service Setup",BankDataConvServiceSetup);
          end;

        if not BankDataConvServiceSetup.GET or not BankDataConvServiceSetup.HasPassword then
          ERROR(MissingCredentialsErr,BankDataConvServiceSetup.TABLECAPTION);
      end;
    END;

    [External]
    PROCEDURE GetErrorXPath@5(ResponseNode@1000 : Text) : Text;
    BEGIN
      exit(STRSUBSTNO(ResultPathTxt,ResponseNode));
    END;

    [External]
    PROCEDURE GetFinstaXPath@7(ResponseNode@1000 : Text) : Text;
    BEGIN
      exit(STRSUBSTNO(FinstaPathTxt,ResponseNode));
    END;

    [External]
    PROCEDURE GetHeaderErrXPath@8(ResponseNode@1000 : Text) : Text;
    BEGIN
      exit(STRSUBSTNO(HeaderErrPathTxt,ResponseNode));
    END;

    [External]
    PROCEDURE GetConvErrXPath@9(ResponseNode@1000 : Text) : Text;
    BEGIN
      exit(STRSUBSTNO(ConvErrPathTxt,ResponseNode));
    END;

    [External]
    PROCEDURE GetDataXPath@6(ResponseNode@1000 : Text) : Text;
    BEGIN
      exit(STRSUBSTNO(DataPathTxt,ResponseNode));
    END;

    [EventSubscriber(Table,1400,OnRegisterServiceConnection)]
    [External]
    PROCEDURE HandleBankDataConvRegisterServiceConnection@10(VAR ServiceConnection@1000 : Record "Service Connection");
    VAR
      BankDataConvServiceSetup@1001 : Record "Bank Data Conv. Service Setup";
      RecRef@1002 : RecordRef;
    BEGIN
      if not BankDataConvServiceSetup.GET then
        BankDataConvServiceSetup.INSERT(true);
      RecRef.GETTABLE(BankDataConvServiceSetup);

      ServiceConnection.Status := ServiceConnection.Status::Enabled;
      with BankDataConvServiceSetup do begin
        if "Service URL" = '' then
          ServiceConnection.Status := ServiceConnection.Status::Disabled;

        ServiceConnection.InsertServiceConnection(
          ServiceConnection,RecRef.RECORDID,TABLENAME,"Service URL",PAGE::"Bank Data Conv. Service Setup");
      end;
    END;

    BEGIN
    END.
  }
}

