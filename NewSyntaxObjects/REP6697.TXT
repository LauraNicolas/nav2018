OBJECT Report 6697 Create Ret.-Related Documents
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create Ret.-Related Documents;
    ProcessingOnly=true;
    OnPreReport=BEGIN
                  TempRetRelDoc.DELETEALL;

                  if CreateSO then begin
                    SOSalesHeader."Document Type" := SOSalesHeader."Document Type"::Order;
                    CLEAR(CopyDocMgt);
                    CopyDocMgt.SetProperties(true,false,false,true,true,false,false);
                    CopyDocMgt.CopySalesDoc(DocType::"Return Order",SROSalesHeader."No.",SOSalesHeader);
                    TempRetRelDoc."Entry No." := 3;
                    TempRetRelDoc."Document Type" := TempRetRelDoc."Document Type"::"Sales Order";
                    TempRetRelDoc."No." := SOSalesHeader."No.";
                    TempRetRelDoc.INSERT;
                  end;

                  if CreatePRO then begin
                    PROPurchHeader."Document Type" := PROPurchHeader."Document Type"::"Return Order";
                    CLEAR(CopyDocMgt);
                    CopyDocMgt.SetProperties(true,false,false,false,true,false,false);
                    CopyDocMgt.CopyFromSalesToPurchDoc(VendorNo,SROSalesHeader,PROPurchHeader);
                    TempRetRelDoc."Entry No." := 1;
                    TempRetRelDoc."Document Type" := TempRetRelDoc."Document Type"::"Purchase Return Order";
                    TempRetRelDoc."No." := PROPurchHeader."No.";
                    TempRetRelDoc.INSERT;
                  end;

                  if CreatePO then begin
                    POPurchHeader."Document Type" := POPurchHeader."Document Type"::Order;
                    CLEAR(CopyDocMgt);
                    CopyDocMgt.SetProperties(true,false,false,false,true,false,false);
                    CopyDocMgt.CopyFromSalesToPurchDoc(VendorNo,SROSalesHeader,POPurchHeader);
                    TempRetRelDoc."Entry No." := 2;
                    TempRetRelDoc."Document Type" := TempRetRelDoc."Document Type"::"Purchase Order";
                    TempRetRelDoc."No." := POPurchHeader."No.";
                    TempRetRelDoc.INSERT;
                  end;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnOpenPage=BEGIN
                   CreatePRO := true;
                   CreatePO := true;
                   CreateSO := true;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Group     ;
                  Name=Return to Vendor;
                  CaptionML=ENU=Return to Vendor }

      { 5   ;3   ;Field     ;
                  Name=VendorNo;
                  Lookup=true;
                  CaptionML=ENU=Vendor No.;
                  ToolTipML=ENU=Specifies the vendor. Enter the vendor number or select the vendor from the Vendor List. To create vendor-related documents, you must specify the vendor number.;
                  ApplicationArea=#SalesReturnOrder;
                  SourceExpr=VendorNo;
                  OnValidate=BEGIN
                               if VendorNo <> '' then
                                 Vend.GET(VendorNo);
                             END;

                  OnLookup=BEGIN
                             if PAGE.RUNMODAL(0,Vend) = ACTION::LookupOK then
                               VendorNo := Vend."No.";
                           END;
                            }

      { 3   ;3   ;Field     ;
                  Name=CreatePurchRetOrder;
                  CaptionML=ENU=Create Purch. Ret. Order;
                  ToolTipML=ENU=Specifies if an item needs to be ordered from the vendor.;
                  ApplicationArea=#PurchReturnOrder;
                  SourceExpr=CreatePRO }

      { 4   ;3   ;Field     ;
                  Name=CreatePurchaseOrder;
                  CaptionML=ENU=Create Purchase Order;
                  ToolTipML=ENU=Specifies if an item needs to be ordered from the vendor.;
                  ApplicationArea=#PurchReturnOrder;
                  SourceExpr=CreatePO }

      { 8   ;2   ;Group     ;
                  Name=Replacement;
                  CaptionML=ENU=Replacement }

      { 10  ;3   ;Field     ;
                  Name=CreateSalesOrder;
                  CaptionML=ENU=Create Sales Order;
                  ToolTipML=ENU=Specifies if a replacement sales order needs to be created.;
                  ApplicationArea=#SalesReturnOrder;
                  SourceExpr=CreateSO }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Vend@1004 : Record Vendor;
      PROPurchHeader@1006 : Record "Purchase Header";
      POPurchHeader@1007 : Record "Purchase Header";
      SROSalesHeader@1009 : Record "Sales Header";
      SOSalesHeader@1008 : Record "Sales Header";
      TempRetRelDoc@1011 : TEMPORARY Record "Returns-Related Document";
      CopyDocMgt@1005 : Codeunit "Copy Document Mgt.";
      VendorNo@1000 : Code[20];
      DocType@1010 : 'Quote,"Blanket Order",Order,Invoice,"Return Order","Credit Memo","Posted Shipment","Posted Invoice","Posted Return Receipt","Posted Credit Memo"';
      CreatePRO@1001 : Boolean;
      CreatePO@1002 : Boolean;
      CreateSO@1003 : Boolean;

    PROCEDURE SetSalesHeader@1(NewSROSalesHeader@1000 : Record "Sales Header");
    BEGIN
      SROSalesHeader := NewSROSalesHeader;
    END;

    PROCEDURE ShowDocuments@2();
    BEGIN
      if TempRetRelDoc.FINDFIRST then
        PAGE.RUN(PAGE::"Returns-Related Documents",TempRetRelDoc);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

