OBJECT Page 1156 Company Detail
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Company Details;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    LinksAllowed=false;
    PageType=List;
    ShowFilter=false;
    OnOpenPage=BEGIN
                 CalculatePurchCues;
                 CalculateSalesCues;
                 CalculateUserTasksCues;

                 // Set up context for power bi part pages.
                 CurrPage.PowerBIPartOne.PAGE.SetContext(PowerBiPartOneIdTxt);
                 CurrPage.PowerBIPartTwo.PAGE.SetContext(PowerBiPartTwoIdTxt);
               END;

    ActionList=ACTIONS
    {
      { 21      ;    ;ActionContainer;
                      Name=ActionContainer21;
                      ActionContainerType=Reports }
      { 32      ;1   ;ActionGroup;
                      Name=Report;
                      CaptionML=ENU=Report }
      { 34      ;2   ;ActionGroup;
                      Name=Excel Reports;
                      CaptionML=ENU=Excel Reports;
                      Image=Excel }
      { 31      ;3   ;Action    ;
                      Name=ExcelTemplatesBalanceSheet;
                      CaptionML=ENU=Balance Sheet;
                      ToolTipML=ENU=Open a spreadsheet that shows assets, liabilities, and equity.;
                      ApplicationArea=#All;
                      RunObject=Codeunit "Run Template Balance Sheet";
                      Promoted=true;
                      Image=Excel;
                      PromotedCategory=Report }
      { 30      ;3   ;Action    ;
                      Name=ExcelTemplateIncomeStmt;
                      CaptionML=ENU=Income Statement;
                      ToolTipML=ENU=Open a spreadsheet that shows the company income and expenses.;
                      ApplicationArea=#All;
                      RunObject=Codeunit "Run Template Income Stmt.";
                      Promoted=true;
                      Image=Excel;
                      PromotedCategory=Report }
      { 29      ;3   ;Action    ;
                      Name=ExcelTemplateCashFlowStmt;
                      CaptionML=ENU=Cash Flow Statement;
                      ToolTipML=ENU=Open a spreadsheet that shows how changes in balance sheet accounts and income affect the company's cash holdings.;
                      ApplicationArea=#All;
                      RunObject=Codeunit "Run Template CashFlow Stmt.";
                      Promoted=true;
                      Image=Excel;
                      PromotedCategory=Report }
      { 28      ;3   ;Action    ;
                      Name=ExcelTemplateRetainedEarn;
                      CaptionML=ENU=Retained Earnings Statement;
                      ToolTipML=ENU=Open a spreadsheet that shows changes in retained earnings based on net income from the other financial statements.;
                      ApplicationArea=#All;
                      RunObject=Codeunit "Run Template Retained Earn.";
                      Promoted=true;
                      Image=Excel;
                      PromotedCategory=Report }
      { 27      ;3   ;Action    ;
                      Name=ExcelTemplateTrialBalance;
                      CaptionML=ENU=Trial Balance;
                      ToolTipML=ENU=Open a spreadsheet that shows a summary trial balance by account.;
                      ApplicationArea=#All;
                      RunObject=Codeunit "Run Template Trial Balance";
                      Promoted=true;
                      Image=Excel;
                      PromotedCategory=Report }
      { 33      ;3   ;Action    ;
                      Name=ExcelTemplateAgedAccPay;
                      CaptionML=ENU=Aged Accounts Payable;
                      ToolTipML=ENU=Open a spreadsheet that shows a list of aged remaining balances for each vendor by period.;
                      ApplicationArea=#All;
                      RunObject=Codeunit "Run Template Aged Acc. Pay.";
                      Promoted=true;
                      Image=Excel;
                      PromotedCategory=Report }
      { 35      ;3   ;Action    ;
                      Name=ExcelTemplateAgedAccRec;
                      CaptionML=ENU=Aged Accounts Receivable;
                      ToolTipML=ENU=Open a spreadsheet that shows when customer payments are due or overdue by period.;
                      ApplicationArea=#All;
                      RunObject=Codeunit "Run Template Aged Acc. Rec.";
                      Promoted=true;
                      Image=Excel;
                      PromotedCategory=Report }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Cash;
                CaptionML=ENU=Cash;
                GroupType=Group }

    { 12  ;2   ;Part      ;
                Name=Part12;
                ApplicationArea=#All;
                PagePartID="Cash Account Balances";
                PartType=Page }

    { 9   ;2   ;Part      ;
                Name=Part9;
                ApplicationArea=#All;
                PagePartID="Client Detail Cash Flow Chart";
                PartType=Page }

    { 43  ;1   ;Group     ;
                Name=User Tasks;
                GroupType=Group }

    { 42  ;2   ;Group     ;
                Name=Group42;
                GroupType=Group }

    { 41  ;3   ;Group     ;
                Name=Group41;
                GroupType=CueGroup }

    { 40  ;4   ;Field     ;
                Name=<PendingTasks>;
                CaptionML=ENU=Pending Tasks;
                ToolTipML=ENU=Specifies the number of pending tasks that are assigned to you.;
                ApplicationArea=#All;
                SourceExpr=PendingTasks;
                OnDrillDown=BEGIN
                              SelectedUserTaskFilterTile := PendingUserTasksFilterTxt;
                              TotalUserTasks := CalculatePendingUserTasks;
                              CurrPage.UserTasksCtrl.PAGE.SetFilterForPendingTasks;
                            END;
                             }

    { 39  ;4   ;Field     ;
                Name=<Due Today>;
                CaptionML=ENU=Due Today;
                ToolTipML=ENU=Specifies the number of pending tasks that are assigned to you and are due today or are overdue.;
                ApplicationArea=#All;
                SourceExpr=UserTasksDueToday;
                OnDrillDown=BEGIN
                              SelectedUserTaskFilterTile := UserTasksDueTodayFilterTxt;
                              TotalUserTasks := CalculateUserTasksDueToday;
                              CurrPage.UserTasksCtrl.PAGE.SetFilterForTasksDueToday;
                            END;
                             }

    { 38  ;4   ;Field     ;
                Name=<Due This Week>;
                CaptionML=ENU=Due This Week;
                ToolTipML=ENU=Specifies the number of pending tasks that are assigned to you and are due this week.;
                ApplicationArea=#All;
                SourceExpr=UserTasksDueThisWeek;
                OnDrillDown=BEGIN
                              SelectedUserTaskFilterTile := UserTasksDueThisWeekFilterTxt;
                              TotalUserTasks := CalculateUserTasksDueThisWeek;
                              CurrPage.UserTasksCtrl.PAGE.SetFilterForTasksDueThisWeek;
                            END;
                             }

    { 37  ;3   ;Field     ;
                Name=<SelectedUserTaskFilterTile>;
                CaptionML=ENU=Showing;
                ApplicationArea=#All;
                SourceExpr=SelectedUserTaskFilterTile;
                Importance=Promoted;
                ShowCaption=false }

    { 36  ;3   ;Part      ;
                Name=UserTasksCtrl;
                CaptionML=ENU=My Tasks;
                ApplicationArea=#All;
                PagePartID="User Task List Part";
                PartType=Page }

    { 44  ;3   ;Field     ;
                Name=<TotalUserTasks>;
                CaptionML=ENU=Total;
                ToolTipML=ENU=Specifies the total number of user tasks.;
                ApplicationArea=#All;
                SourceExpr=TotalUserTasks;
                Importance=Promoted }

    { 26  ;1   ;Group     ;
                Name=Power BI;
                GroupType=Group }

    { 24  ;2   ;Part      ;
                Name=PowerBIPartOne;
                ApplicationArea=#All;
                PagePartID="Power BI Report Spinner Part";
                PartType=Page }

    { 25  ;2   ;Part      ;
                Name=PowerBIPartTwo;
                ApplicationArea=#All;
                PagePartID="Power BI Report Spinner Part";
                PartType=Page }

    { 3   ;1   ;Group     ;
                Name=Purchase;
                GroupType=Group }

    { 7   ;2   ;Group     ;
                Name=Group7;
                GroupType=Group }

    { 14  ;3   ;Group     ;
                Name=Group14;
                GroupType=CueGroup }

    { 15  ;4   ;Field     ;
                Name=OverDuePurchInvoiceAmt;
                CaptionML=ENU=Overdue Purch. Invoice Amount;
                ToolTipML=ENU=Specifies the sum of your overdue payments to vendors.;
                ApplicationArea=#All;
                SourceExpr=OverDuePurchInvoiceAmt;
                AutoFormatExpr=GetAmountFormat;
                Image=Cash;
                OnDrillDown=BEGIN
                              SelectedPurchFilterTile := OverduePurchInvoiceAmtFilterTxt;
                              TotalPurch := OverDuePurchInvoiceAmt;
                              CurrPage.PurchaseDocumentsCtrl.PAGE.SetFilterForOverduePurInvoiceAmount;
                            END;
                             }

    { 5   ;4   ;Field     ;
                Name=<PurchDocsDueToday>;
                CaptionML=ENU=Purchase Documents Due Today;
                ToolTipML=ENU=Specifies the number of purchase invoices that are due for payment today.;
                ApplicationArea=#All;
                DecimalPlaces=0:0;
                SourceExpr=PurchDocsDueToday;
                Image=Document;
                OnDrillDown=BEGIN
                              SelectedPurchFilterTile := PurchDocsDueTodayFilterTxt;
                              TotalPurch := PurchDocsDueToday;
                              CurrPage.PurchaseDocumentsCtrl.PAGE.SetFilterForPurchDocsDueToday;
                            END;
                             }

    { 4   ;4   ;Field     ;
                Name=PurchInvoicesDueNextWeek;
                CaptionML=ENU=Purch. Invoices Due Next Week;
                ToolTipML=ENU=Specifies the number of payments to vendors that are due next week.;
                ApplicationArea=#All;
                DecimalPlaces=0:0;
                SourceExpr=PurchInvoicesDueNextWeek;
                Image=Document;
                OnDrillDown=BEGIN
                              SelectedPurchFilterTile := PurchInvoicesDueNextWeekFilterTxt;
                              TotalPurch := PurchInvoicesDueNextWeek;
                              CurrPage.PurchaseDocumentsCtrl.PAGE.SetFilterForPurchInvoicesDueNextWeek;
                            END;
                             }

    { 8   ;3   ;Field     ;
                Name=SelectedPurchFilterTile;
                CaptionML=ENU=Showing;
                ToolTipML=ENU="Specifies that the part is visible. ";
                ApplicationArea=#All;
                SourceExpr=SelectedPurchFilterTile;
                Importance=Promoted;
                ShowCaption=false }

    { 6   ;3   ;Part      ;
                Name=PurchaseDocumentsCtrl;
                CaptionML=ENU=Purchase Documents;
                ApplicationArea=#All;
                PagePartID="Purchase Documents";
                PartType=Page }

    { 10  ;3   ;Field     ;
                Name=<TotalPurch>;
                CaptionML=ENU=Total;
                ToolTipML=ENU=Specifies selected purchase KPI information.;
                ApplicationArea=#All;
                DecimalPlaces=0:0;
                SourceExpr=TotalPurch;
                Importance=Promoted }

    { 20  ;1   ;Group     ;
                Name=Sales;
                GroupType=Group }

    { 19  ;2   ;Group     ;
                Name=Group19;
                GroupType=Group }

    { 18  ;3   ;Group     ;
                Name=Group18;
                GroupType=CueGroup }

    { 16  ;4   ;Field     ;
                Name=<OverDueSalesInvoiceAmt>;
                CaptionML=ENU=Overdue Sales Invoice Amount;
                ToolTipML=ENU=Specifies the sum of overdue payments from customers.;
                ApplicationArea=#All;
                SourceExpr=OverDueSalesInvoiceAmt;
                Image=Cash;
                OnDrillDown=BEGIN
                              SelectedSalesFilterTile := OverdueSalesInvoiceAmtFilterTxt;
                              TotalSales := OverDueSalesInvoiceAmt;
                              CurrPage.SalesDocumentsCtrl.PAGE.SetFilterForOverdueSalesInvoiceAmount;
                            END;

                ShowCaption=false }

    { 22  ;4   ;Field     ;
                Name=<SalesDocsDueToday>;
                CaptionML=ENU=Sales Documents Due Today;
                ToolTipML=ENU=Specifies sales documents due today.;
                ApplicationArea=#All;
                DecimalPlaces=0:0;
                SourceExpr=SalesDocsDueToday;
                Image=Document;
                OnDrillDown=BEGIN
                              SelectedSalesFilterTile := SalesDocsDueTodayFilterTxt;
                              TotalSales := SalesDocsDueToday;
                              CurrPage.SalesDocumentsCtrl.PAGE.SetFilterForSalesDocsDueToday;
                            END;
                             }

    { 23  ;4   ;Field     ;
                Name=<SalesDocsDueNextWeek>;
                CaptionML=ENU=Sales Documents Due Next Week;
                ToolTipML=ENU=Specifies sales documents due next week.;
                ApplicationArea=#All;
                DecimalPlaces=0:0;
                SourceExpr=SalesDocsDueNextWeek;
                Image=Document;
                OnDrillDown=BEGIN
                              SelectedSalesFilterTile := SalesDocsDueNextWeekFilterTxt;
                              TotalSales := SalesDocsDueNextWeek;
                              CurrPage.SalesDocumentsCtrl.PAGE.SetFilterForSalesDocsDueNextWeek;
                            END;
                             }

    { 17  ;3   ;Field     ;
                Name=<SelectedSalesFilterTile>;
                CaptionML=ENU=Showing;
                ToolTipML=ENU="Specifies that the part is visible. ";
                ApplicationArea=#All;
                SourceExpr=SelectedSalesFilterTile;
                Importance=Promoted;
                ShowCaption=false }

    { 13  ;3   ;Part      ;
                Name=SalesDocumentsCtrl;
                CaptionML=ENU=Sales Documents;
                ApplicationArea=#All;
                PagePartID="Sales Documents";
                PartType=Page }

    { 11  ;3   ;Field     ;
                Name=<TotalSales>;
                CaptionML=ENU=Total;
                ToolTipML=ENU=Specifies selected sales KPI information.;
                ApplicationArea=#All;
                DecimalPlaces=0:0;
                SourceExpr=TotalSales;
                Importance=Promoted;
                Style=Strong;
                StyleExpr=TRUE;
                ShowCaption=true }

  }
  CODE
  {
    VAR
      ActivitiesMgt@1003 : Codeunit "Activities Mgt.";
      OverDuePurchInvoiceAmt@1000 : Decimal;
      PurchDocsDueToday@1001 : Decimal;
      PurchInvoicesDueNextWeek@1002 : Decimal;
      SelectedPurchFilterTile@1004 : Text[250];
      OverduePurchInvoiceAmtFilterTxt@1006 : TextConst 'ENU=Overdue Purch. Invoice Amount';
      PurchDocsDueTodayFilterTxt@1007 : TextConst 'ENU=Purchase Documents Due Today';
      PurchInvoicesDueNextWeekFilterTxt@1008 : TextConst 'ENU=Purch. Invoices Due Next Week';
      TotalPurch@1010 : Decimal;
      OverDueSalesInvoiceAmt@1011 : Decimal;
      TotalSales@1012 : Decimal;
      SelectedSalesFilterTile@1013 : Text[250];
      OverdueSalesInvoiceAmtFilterTxt@1015 : TextConst 'ENU=Overdue Sales Invoice Amount';
      SalesDocsDueToday@1005 : Decimal;
      SalesDocsDueNextWeek@1009 : Decimal;
      SalesDocsDueTodayFilterTxt@1014 : TextConst 'ENU=Sales Documents Due Today';
      SalesDocsDueNextWeekFilterTxt@1016 : TextConst 'ENU=Sales Documents Due Next Week';
      PowerBiPartOneIdTxt@1017 : TextConst '@@@={Locked};ENU=1156PowerBiPartOne';
      PowerBiPartTwoIdTxt@1018 : TextConst '@@@={Locked};ENU=1156PowerBiPartTwo';
      PendingTasks@1019 : Integer;
      UserTasksDueToday@1020 : Integer;
      UserTasksDueThisWeek@1021 : Integer;
      SelectedUserTaskFilterTile@1022 : Text[250];
      PendingUserTasksFilterTxt@1023 : TextConst 'ENU=Pending Tasks';
      UserTasksDueTodayFilterTxt@1024 : TextConst 'ENU=Due Today';
      UserTasksDueThisWeekFilterTxt@1025 : TextConst 'ENU=Due This Week';
      TotalUserTasks@1026 : Integer;

    LOCAL PROCEDURE CalculatePurchCues@1();
    VAR
      FinanceCue@1000 : Record "Finance Cue";
    BEGIN
      // Calculate overdue purchase invoice amount
      OverDuePurchInvoiceAmt := ActivitiesMgt.CalcOverduePurchaseInvoiceAmount(false);

      // Set overdue purchase invoice amount as default selected KPI
      SelectedPurchFilterTile := OverduePurchInvoiceAmtFilterTxt;
      TotalPurch := OverDuePurchInvoiceAmt;

      // Calculate purchase documents due today
      FinanceCue.SETFILTER("Due Date Filter",'<=%1',WORKDATE);
      FinanceCue.CALCFIELDS("Purchase Documents Due Today");
      PurchDocsDueToday := FinanceCue."Purchase Documents Due Today";
      CLEAR(FinanceCue);

      // Calculate purchase invoices due next week
      FinanceCue.SETFILTER("Due Next Week Filter",'%1..%2',CALCDATE('<1D>',WORKDATE),CALCDATE('<1W>',WORKDATE));
      FinanceCue.CALCFIELDS("Purch. Invoices Due Next Week");
      PurchInvoicesDueNextWeek := FinanceCue."Purch. Invoices Due Next Week";
      CLEAR(FinanceCue);
    END;

    LOCAL PROCEDURE GetAmountFormat@2() : Text;
    BEGIN
      exit('<Precision,0:0><Standard Format,0>');
    END;

    LOCAL PROCEDURE CalculateSalesCues@4();
    VAR
      FinanceCue@1000 : Record "Finance Cue";
    BEGIN
      // Calculate overdue sales invoice amount
      OverDueSalesInvoiceAmt := ActivitiesMgt.CalcOverdueSalesInvoiceAmount(false);
      // Set total sales to overdue sales invoice amount as default selected KPI
      SelectedSalesFilterTile := OverdueSalesInvoiceAmtFilterTxt;
      TotalSales := OverDueSalesInvoiceAmt;

      // Calculate sales documents due today
      FinanceCue.SETFILTER("Overdue Date Filter",'<=%1',WORKDATE);
      FinanceCue.CALCFIELDS("Overdue Sales Documents");
      SalesDocsDueToday := FinanceCue."Overdue Sales Documents";
      CLEAR(FinanceCue);

      // Calculate sales documents due next week
      FinanceCue.SETFILTER("Overdue Date Filter",'%1..%2',CALCDATE('<1D>',WORKDATE),CALCDATE('<1W>',WORKDATE));
      FinanceCue.CALCFIELDS("Overdue Sales Documents");
      SalesDocsDueNextWeek := FinanceCue."Overdue Sales Documents";
      CLEAR(FinanceCue);
    END;

    LOCAL PROCEDURE CalculateUserTasksCues@16();
    BEGIN
      // Set user tasks cue to display pending tasks
      SelectedUserTaskFilterTile := PendingUserTasksFilterTxt;

      // Calculate pending tasks
      PendingTasks := CalculatePendingUserTasks;
      TotalUserTasks := PendingTasks;

      // Calculate tasks due today
      UserTasksDueToday := CalculateUserTasksDueToday;

      // Calculate tasks due this week
      UserTasksDueThisWeek := CalculateUserTasksDueThisWeek;
    END;

    LOCAL PROCEDURE CalculatePendingUserTasks@13() : Integer;
    VAR
      FinanceCue@1000 : Record "Finance Cue";
      Count@1001 : Integer;
    BEGIN
      FinanceCue.SETFILTER("User ID Filter",USERID);
      FinanceCue.CALCFIELDS("Pending Tasks");
      Count := FinanceCue."Pending Tasks";
      CLEAR(FinanceCue);
      exit(Count);
    END;

    LOCAL PROCEDURE CalculateUserTasksDueToday@24() : Integer;
    VAR
      UserTask@1000 : Record "User Task";
      Count@1001 : Integer;
    BEGIN
      UserTask.SETFILTER("Assigned To User Name",USERID);
      UserTask.SETFILTER("Percent Complete",'<>100');
      UserTask.SETFILTER("Due DateTime",'<=%1',CURRENTDATETIME);
      Count := UserTask.COUNT;
      CLEAR(UserTask);
      exit(Count);
    END;

    LOCAL PROCEDURE CalculateUserTasksDueThisWeek@30() : Integer;
    VAR
      UserTask@1000 : Record "User Task";
      Count@1001 : Integer;
    BEGIN
      UserTask.SETFILTER("Assigned To User Name",USERID);
      UserTask.SETFILTER("Percent Complete",'<>100');
      UserTask.SETFILTER("Due DateTime",'<=%1',CREATEDATETIME(CALCDATE('<CW>'),000000T));
      Count := UserTask.COUNT;
      CLEAR(UserTask);
      exit(Count);
    END;

    BEGIN
    END.
  }
}

