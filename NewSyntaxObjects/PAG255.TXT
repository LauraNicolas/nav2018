OBJECT Page 255 Cash Receipt Journal
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Cash Receipt Journal;
    SaveValues=true;
    SourceTable="Gen. Journal Line";
    DataCaptionExpr=DataCaption;
    DelayedInsert=true;
    PageType=Worksheet;
    AutoSplitKey=true;
    PromotedActionCategoriesML=ENU=New,Process,Report,Approve,Page;
    OnInit=BEGIN
             TotalBalanceVisible := true;
             BalanceVisible := true;
             AmountVisible := true;
           END;

    OnOpenPage=VAR
                 ServerConfigSettingHandler@1001 : Codeunit "Server Config. Setting Handler";
                 JnlSelected@1000 : Boolean;
               BEGIN
                 IsSaasExcelAddinEnabled := ServerConfigSettingHandler.GetIsSaasExcelAddinEnabled;
                 if CURRENTCLIENTTYPE = CLIENTTYPE::ODataV4 then
                   exit;

                 BalAccName := '';
                 if IsOpenedFromBatch then begin
                   CurrentJnlBatchName := "Journal Batch Name";
                   GenJnlManagement.OpenJnl(CurrentJnlBatchName,Rec);
                   SetControlAppearanceFromBatch;
                   exit;
                 end;
                 GenJnlManagement.TemplateSelection(PAGE::"Cash Receipt Journal",3,false,Rec,JnlSelected);
                 if not JnlSelected then
                   ERROR('');
                 GenJnlManagement.OpenJnl(CurrentJnlBatchName,Rec);
                 SetControlAppearanceFromBatch;

                 ShowAmounts;
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  UpdateBalance;
                  EnableApplyEntriesAction;
                  SetUpNewLine(xRec,Balance,BelowxRec);
                  CLEAR(ShortcutDimCode);
                END;

    OnAfterGetCurrRecord=VAR
                           GenJournalBatch@1000 : Record "Gen. Journal Batch";
                         BEGIN
                           GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                           UpdateBalance;
                           EnableApplyEntriesAction;
                           SetControlAppearance;
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);

                           if GenJournalBatch.GET("Journal Template Name","Journal Batch Name") then
                             ShowWorkflowStatusOnBatch := CurrPage.WorkflowStatusBatch.PAGE.SetFilterOnWorkflowRecord(GenJournalBatch.RECORDID);
                           ShowWorkflowStatusOnLine := CurrPage.WorkflowStatusLine.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 59      ;1   ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 60      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      Image=Dimensions;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowDimensions;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Name=IncomingDoc;
                      AccessByPermission=TableData "Incoming Document"=R;
                      CaptionML=ENU=Incoming Document;
                      ToolTipML=ENU=View or create an incoming document record that is linked to the entry or document.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Image=Document;
                      PromotedCategory=Process;
                      Scope=Repeater;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record "Incoming Document";
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No.",RECORDID));
                               END;
                                }
      { 37      ;1   ;ActionGroup;
                      Name=A&ccount;
                      CaptionML=ENU=A&ccount;
                      Image=ChartOfAccounts }
      { 38      ;2   ;Action    ;
                      Name=Card;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Card;
                      ToolTipML=ENU=View or change detailed information about the record on the document or journal line.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit "Gen. Jnl.-Show Card";
                      Image=EditLines }
      { 39      ;2   ;Action    ;
                      Name=Ledger E&ntries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Ledger E&ntries;
                      ToolTipML=ENU=View the history of transactions that have been posted for the selected record.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit "Gen. Jnl.-Show Entries";
                      Promoted=false;
                      Image=GLRegisters;
                      PromotedCategory=Process }
      { 28      ;1   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData "Approval Entry"=R;
                      CaptionML=ENU=Approvals;
                      ToolTipML=ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                      ApplicationArea=#Suite;
                      Image=Approvals;
                      OnAction=VAR
                                 GenJournalLine@1001 : Record "Gen. Journal Line";
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 GetCurrentlySelectedLines(GenJournalLine);
                                 ApprovalsMgmt.ShowJournalApprovalEntries(GenJournalLine);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 40      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 9       ;2   ;Action    ;
                      Name=Renumber Document Numbers;
                      CaptionML=ENU=Renumber Document Numbers;
                      ToolTipML=ENU=Resort the numbers in the Document No. column to avoid posting errors because the document numbers are not in sequence. Entry applications and line groupings are preserved.;
                      ApplicationArea=#Basic,#Suite;
                      Image=EditLines;
                      OnAction=BEGIN
                                 RenumberDocumentNo
                               END;
                                }
      { 83      ;2   ;Action    ;
                      Name=Apply Entries;
                      ShortCutKey=Shift+F11;
                      Ellipsis=true;
                      CaptionML=ENU=Apply Entries;
                      ToolTipML=ENU=Apply the payment amount on a journal line to a sales or purchase document that was already posted for a customer or vendor. This updates the amount on the posted document, and the document can either be partially paid, or closed as paid or refunded.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit "Gen. Jnl.-Apply";
                      Promoted=true;
                      Enabled=ApplyEntriesActionEnabled;
                      Image=ApplyEntries;
                      PromotedCategory=Process }
      { 84      ;2   ;Action    ;
                      Name=Insert Conv. LCY Rndg. Lines;
                      CaptionML=ENU=Insert Conv. LCY Rndg. Lines;
                      ToolTipML=ENU=Insert a rounding correction line in the journal. This rounding correction line will balance in LCY when amounts in the foreign currency also balance. You can then post the journal.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit "Adjust Gen. Journal Balance";
                      Image=InsertCurrency }
      { 41      ;1   ;ActionGroup;
                      Name=P&osting;
                      CaptionML=ENU=P&osting;
                      Image=Post }
      { 42      ;2   ;Action    ;
                      Name=Reconcile;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Reconcile;
                      ToolTipML=ENU=View the balances on bank accounts that are marked for reconciliation, usually liquid accounts.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Image=Reconcile;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 GLReconcile.SetGenJnlLine(Rec);
                                 GLReconcile.RUN;
                               END;
                                }
      { 43      ;2   ;Action    ;
                      Name=Test Report;
                      Ellipsis=true;
                      CaptionML=ENU=Test Report;
                      ToolTipML=ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                      ApplicationArea=#Basic,#Suite;
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintGenJnlLine(Rec);
                               END;
                                }
      { 44      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=ENU=P&ost;
                      ToolTipML=ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",Rec);
                                 CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 CurrPage.UPDATE(false);
                               END;
                                }
      { 17      ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=ENU=Preview Posting;
                      ToolTipML=ENU=Review the different types of entries that will be created when you post the document or journal.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 GenJnlPost@1001 : Codeunit "Gen. Jnl.-Post";
                               BEGIN
                                 GenJnlPost.Preview(Rec);
                               END;
                                }
      { 45      ;2   ;Action    ;
                      Name=Post and &Print;
                      ShortCutKey=Shift+F9;
                      CaptionML=ENU=Post and &Print;
                      ToolTipML=ENU=Finalize and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post+Print",Rec);
                                 CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 CurrPage.UPDATE(false);
                               END;
                                }
      { 26      ;1   ;ActionGroup;
                      Name=Request Approval;
                      CaptionML=ENU=Request Approval }
      { 52      ;2   ;ActionGroup;
                      Name=SendApprovalRequest;
                      CaptionML=ENU=Send Approval Request;
                      Image=SendApprovalRequest }
      { 50      ;3   ;Action    ;
                      Name=SendApprovalRequestJournalBatch;
                      CaptionML=ENU=Journal Batch;
                      ToolTipML=ENU=Send all journal lines for approval, also those that you may not see because of filters.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NOT OpenApprovalEntriesOnBatchOrAnyJnlLineExist AND CanRequestFlowApprovalForBatchAndAllLines;
                      Image=SendApprovalRequest;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.TrySendJournalBatchApprovalRequest(Rec);
                                 SetControlAppearanceFromBatch;
                                 SetControlAppearance;
                               END;
                                }
      { 48      ;3   ;Action    ;
                      Name=SendApprovalRequestJournalLine;
                      CaptionML=ENU=Selected Journal Lines;
                      ToolTipML=ENU=Send selected journal lines for approval.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NOT OpenApprovalEntriesOnBatchOrCurrJnlLineExist AND CanRequestFlowApprovalForBatchAndCurrentLine;
                      Image=SendApprovalRequest;
                      OnAction=VAR
                                 GenJournalLine@1001 : Record "Gen. Journal Line";
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 GetCurrentlySelectedLines(GenJournalLine);
                                 ApprovalsMgmt.TrySendJournalLineApprovalRequests(GenJournalLine);
                               END;
                                }
      { 23      ;2   ;ActionGroup;
                      Name=CancelApprovalRequest;
                      CaptionML=ENU=Cancel Approval Request;
                      Image=Cancel }
      { 21      ;3   ;Action    ;
                      Name=CancelApprovalRequestJournalBatch;
                      CaptionML=ENU=Journal Batch;
                      ToolTipML=ENU=Cancel sending all journal lines for approval, also those that you may not see because of filters.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=CanCancelApprovalForJnlBatch OR CanCancelFlowApprovalForBatch;
                      Image=CancelApprovalRequest;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.TryCancelJournalBatchApprovalRequest(Rec);
                                 SetControlAppearanceFromBatch;
                                 SetControlAppearance;
                               END;
                                }
      { 96      ;3   ;Action    ;
                      Name=CancelApprovalRequestJournalLine;
                      CaptionML=ENU=Selected Journal Lines;
                      ToolTipML=ENU=Cancel sending selected journal lines for approval.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=CanCancelApprovalForJnlLine OR CanCancelFlowApprovalForLine;
                      Image=CancelApprovalRequest;
                      OnAction=VAR
                                 GenJournalLine@1001 : Record "Gen. Journal Line";
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 GetCurrentlySelectedLines(GenJournalLine);
                                 ApprovalsMgmt.TryCancelJournalLineApprovalRequests(GenJournalLine);
                               END;
                                }
      { 97      ;2   ;Action    ;
                      Name=CreateFlow;
                      CaptionML=ENU=Create a Flow;
                      ToolTipML=ENU=Create a new Flow from a list of relevant Flow templates.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Flow;
                      OnAction=VAR
                                 FlowServiceManagement@1000 : Codeunit "Flow Service Management";
                                 FlowTemplateSelector@1001 : Page "Flow Template Selector";
                               BEGIN
                                 // Opens page 6400 where the user can use filtered templates to create new flows.
                                 FlowTemplateSelector.SetSearchText(FlowServiceManagement.GetJournalTemplateFilter);
                                 FlowTemplateSelector.RUN;
                               END;
                                }
      { 98      ;2   ;Action    ;
                      Name=SeeFlows;
                      CaptionML=ENU=See my Flows;
                      ToolTipML=ENU=View and configure Flows that you created.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Flow Selector";
                      Image=Flow }
      { 46      ;1   ;ActionGroup;
                      Name=Approval;
                      CaptionML=ENU=Approval }
      { 36      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=ENU=Approve;
                      ToolTipML=ENU=Approve the requested changes.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=true;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.ApproveGenJournalLineRequest(Rec);
                               END;
                                }
      { 34      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=ENU=Reject;
                      ToolTipML=ENU=Reject the approval request.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=true;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.RejectGenJournalLineRequest(Rec);
                               END;
                                }
      { 32      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=ENU=Delegate;
                      ToolTipML=ENU=Delegate the approval to a substitute approver.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.DelegateGenJournalLineRequest(Rec);
                               END;
                                }
      { 30      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=ENU=Comments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 GenJournalBatch@1001 : Record "Gen. Journal Batch";
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 if OpenApprovalEntriesOnJnlLineExist then
                                   ApprovalsMgmt.GetApprovalComment(Rec)
                                 else
                                   if OpenApprovalEntriesOnJnlBatchExist then
                                     if GenJournalBatch.GET("Journal Template Name","Journal Batch Name") then
                                       ApprovalsMgmt.GetApprovalComment(GenJournalBatch);
                               END;
                                }
      { 58      ;1   ;ActionGroup;
                      Name=Page;
                      CaptionML=ENU=Page }
      { 56      ;2   ;Action    ;
                      Name=EditInExcel;
                      CaptionML=ENU=Edit in Excel;
                      ToolTipML=ENU=Send the data in the journal to an Excel file for analysis or editing.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=IsSaasExcelAddinEnabled;
                      PromotedIsBig=true;
                      Image=Excel;
                      PromotedCategory=Category5;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ODataUtility@1000 : Codeunit ODataUtility;
                               BEGIN
                                 ODataUtility.EditJournalWorksheetInExcel(CurrPage.CAPTION,CurrPage.OBJECTID(false),"Journal Batch Name","Journal Template Name");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 33  ;1   ;Field     ;
                Name=CurrentJnlBatchName;
                Lookup=true;
                CaptionML=ENU=Batch Name;
                ToolTipML=ENU=Specifies the name of the journal batch.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CurrentJnlBatchName;
                OnValidate=BEGIN
                             GenJnlManagement.CheckName(CurrentJnlBatchName,Rec);
                             CurrentJnlBatchNameOnAfterVali;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           GenJnlManagement.LookupName(CurrentJnlBatchName,Rec);
                           CurrPage.UPDATE(false);
                         END;

                ImplicitType=Code10 }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Posting Date;
                ToolTipML=ENU=Specifies the posting date for the entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                ImplicitType=Date }

    { 61  ;2   ;Field     ;
                Name=Document Date;
                ToolTipML=ENU=Specifies the date on the document that provides the basis for the entry on the journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 4   ;2   ;Field     ;
                Name=Document Type;
                ToolTipML=ENU=Specifies the type of document that the entry on the journal line is.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type";
                ImplicitType=Option }

    { 6   ;2   ;Field     ;
                Name=Document No.;
                ToolTipML=ENU=Specifies a document number for the journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                ImplicitType=Code20 }

    { 7   ;2   ;Field     ;
                Name=Incoming Document Entry No.;
                ToolTipML=ENU=Specifies the number of the incoming document that this general journal line is created for.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Incoming Document Entry No.";
                Visible=FALSE;
                OnAssistEdit=BEGIN
                               if "Incoming Document Entry No." > 0 then
                                 HYPERLINK(GetIncomingDocumentURL);
                             END;

                ImplicitType=Integer }

    { 35  ;2   ;Field     ;
                Name=External Document No.;
                ToolTipML=ENU=Specifies a document number that refers to the customer's or vendor's numbering system.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="External Document No.";
                Visible=FALSE;
                ImplicitType=Code35 }

    { 8   ;2   ;Field     ;
                Name=Account Type;
                ToolTipML=ENU=Specifies the type of account that the entry on the journal line will be posted to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account Type";
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                             EnableApplyEntriesAction;
                           END;

                ImplicitType=Option }

    { 10  ;2   ;Field     ;
                Name=Account No.;
                ToolTipML=ENU=Specifies the account number that the entry on the journal line will be posted to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account No.";
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;

                ImplicitType=Code20 }

    { 12  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 51  ;2   ;Field     ;
                Name=Salespers./Purch. Code;
                ToolTipML=ENU=Specifies the salesperson or purchaser who is linked to the journal line.;
                ApplicationArea=#Suite;
                SourceExpr="Salespers./Purch. Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 85  ;2   ;Field     ;
                Name=Campaign No.;
                ToolTipML=ENU=Specifies the number of the campaign the journal line is linked to.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Campaign No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 53  ;2   ;Field     ;
                Name=Currency Code;
                AssistEdit=true;
                ToolTipML=ENU=Specifies the code of the currency for the amounts on the journal line.;
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Visible=FALSE;
                OnAssistEdit=BEGIN
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               if ChangeExchangeRate.RUNMODAL = ACTION::OK then
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);

                               CLEAR(ChangeExchangeRate);
                             END;

                ImplicitType=Code10 }

    { 63  ;2   ;Field     ;
                Name=Gen. Posting Type;
                ToolTipML=ENU=Specifies the general posting type that will be used when you post the entry on this journal line.;
                ApplicationArea=#Advanced;
                SourceExpr="Gen. Posting Type";
                Visible=FALSE;
                ImplicitType=Option }

    { 65  ;2   ;Field     ;
                Name=Gen. Bus. Posting Group;
                ToolTipML=ENU=Specifies the vendor's or customer's trade type to link transactions made for this business partner with the appropriate general ledger account according to the general posting setup.;
                ApplicationArea=#Advanced;
                SourceExpr="Gen. Bus. Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 67  ;2   ;Field     ;
                Name=Gen. Prod. Posting Group;
                ToolTipML=ENU=Specifies the item's product type to link transactions made for this item with the appropriate general ledger account according to the general posting setup.;
                ApplicationArea=#Advanced;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 75  ;2   ;Field     ;
                Name=VAT Bus. Posting Group;
                ToolTipML=ENU=Specifies the VAT business posting group code that will be used when you post the entry on the journal line.;
                ApplicationArea=#Advanced;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 77  ;2   ;Field     ;
                Name=VAT Prod. Posting Group;
                ToolTipML=ENU=Specifies the VAT product posting group. Links business transactions made for the item, resource, or G/L account with the general ledger, to account for VAT amounts resulting from trade with that record.;
                ApplicationArea=#Advanced;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 14  ;2   ;Field     ;
                Name=Amount;
                ToolTipML=ENU=Specifies the total amount (including VAT) that the journal line consists of.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Amount;
                Visible=AmountVisible;
                ImplicitType=Decimal }

    { 64  ;2   ;Field     ;
                Name=Amount (LCY);
                ToolTipML=ENU=Specifies the total amount in local currency (including VAT) that the journal line consists of.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount (LCY)";
                Visible=AmountVisible;
                ImplicitType=Decimal }

    { 1000;2   ;Field     ;
                Name=Debit Amount;
                ToolTipML=ENU=Specifies the total amount (including VAT) that the journal line consists of, if it is a debit amount.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Debit Amount";
                Visible=DebitCreditVisible;
                ImplicitType=Decimal }

    { 1001;2   ;Field     ;
                Name=Credit Amount;
                ToolTipML=ENU=Specifies the total amount (including VAT) that the journal line consists of, if it is a credit amount.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Credit Amount";
                Visible=DebitCreditVisible;
                ImplicitType=Decimal }

    { 87  ;2   ;Field     ;
                Name=VAT Amount;
                ToolTipML=ENU=Specifies the amount of VAT included in the total amount.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Amount";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 89  ;2   ;Field     ;
                Name=VAT Difference;
                ToolTipML=ENU=Specifies the difference between the calculate VAT amount and the VAT amount that you have entered manually.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Difference";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 93  ;2   ;Field     ;
                Name=Bal. VAT Amount;
                ToolTipML=ENU=Specifies the amount of Bal. VAT included in the total amount.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. VAT Amount";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 91  ;2   ;Field     ;
                Name=Bal. VAT Difference;
                ToolTipML=ENU=Specifies the difference between the calculate VAT amount and the VAT amount that you have entered manually.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. VAT Difference";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 55  ;2   ;Field     ;
                Name=Bal. Account Type;
                ToolTipML=ENU=Specifies the code for the balancing account type that should be used in this journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Account Type";
                OnValidate=BEGIN
                             EnableApplyEntriesAction;
                           END;

                ImplicitType=Option }

    { 16  ;2   ;Field     ;
                Name=Bal. Account No.;
                ToolTipML=ENU=Specifies the number of the general ledger, customer, vendor, or bank account to which a balancing entry for the journal line will posted (for example, a cash account for cash purchases).;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Account No.";
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;

                ImplicitType=Code20 }

    { 69  ;2   ;Field     ;
                Name=Bal. Gen. Posting Type;
                ToolTipML=ENU=Specifies the general posting type that will be used when you post the entry on the journal line.;
                ApplicationArea=#Advanced;
                SourceExpr="Bal. Gen. Posting Type";
                Visible=FALSE;
                ImplicitType=Option }

    { 71  ;2   ;Field     ;
                Name=Bal. Gen. Bus. Posting Group;
                ToolTipML=ENU=Specifies the code of the general business posting group that will be used when you post the entry on the journal line.;
                ApplicationArea=#Advanced;
                SourceExpr="Bal. Gen. Bus. Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 73  ;2   ;Field     ;
                Name=Bal. Gen. Prod. Posting Group;
                ToolTipML=ENU=Specifies the code of the general product posting group that will be used when you post the entry on the journal line.;
                ApplicationArea=#Advanced;
                SourceExpr="Bal. Gen. Prod. Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 79  ;2   ;Field     ;
                Name=Bal. VAT Bus. Posting Group;
                ToolTipML=ENU=Specifies the code of the VAT business posting group that will be used when you post the entry on the journal line.;
                ApplicationArea=#Advanced;
                SourceExpr="Bal. VAT Bus. Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 81  ;2   ;Field     ;
                Name=Bal. VAT Prod. Posting Group;
                ToolTipML=ENU=Specifies the code of the VAT product posting group that will be used when you post the entry on the journal line.;
                ApplicationArea=#Advanced;
                SourceExpr="Bal. VAT Prod. Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 47  ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 49  ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 300 ;2   ;Field     ;
                Name=ShortcutDimCode[3];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(3),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                Name=ShortcutDimCode[4];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(4),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                Name=ShortcutDimCode[5];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(5),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                Name=ShortcutDimCode[6];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(6),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                Name=ShortcutDimCode[7];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(7),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                Name=ShortcutDimCode[8];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(8),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 3   ;2   ;Field     ;
                Name=Applied (Yes/No);
                CaptionML=ENU=Applied (Yes/No);
                ToolTipML=ENU=Specifies if the payment has been applied.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=IsApplied;
                ImplicitType=Boolean }

    { 18  ;2   ;Field     ;
                Name=Applies-to Doc. Type;
                ToolTipML=ENU=Specifies the type of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Doc. Type";
                ImplicitType=Option }

    { 20  ;2   ;Field     ;
                Name=Applies-to Doc. No.;
                ToolTipML=ENU=Specifies the number of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Doc. No.";
                ImplicitType=Code20 }

    { 22  ;2   ;Field     ;
                Name=Applies-to ID;
                ToolTipML=ENU=Specifies the ID of entries that will be applied to when you choose the Apply Entries action.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to ID";
                Visible=FALSE;
                ImplicitType=Code50 }

    { 57  ;2   ;Field     ;
                Name=Reason Code;
                ToolTipML=ENU=Specifies the reason code that has been entered on the journal lines.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Reason Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 62  ;2   ;Field     ;
                Name=Correction;
                ToolTipML=ENU=Specifies the entry as a corrective entry. You can use the field if you need to post a corrective entry to an account.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Correction;
                ImplicitType=Boolean }

    { 5   ;2   ;Field     ;
                Name=Comment;
                ToolTipML=ENU=Specifies a comment related to registering a payment.;
                ApplicationArea=#Advanced;
                SourceExpr=Comment;
                Visible=FALSE;
                ImplicitType=Text250 }

    { 11  ;2   ;Field     ;
                Name=Direct Debit Mandate ID;
                ToolTipML=ENU=Specifies the identification of the direct-debit mandate that is being used on the journal lines to process a direct debit collection.;
                ApplicationArea=#Advanced;
                SourceExpr="Direct Debit Mandate ID";
                Visible=FALSE;
                ImplicitType=Code35 }

    { 24  ;1   ;Group     ;
                Name=Group24 }

    { 1903561801;2;Group  ;
                Name=Group1903561801;
                GroupType=FixedLayout }

    { 1903866901;3;Group  ;
                Name=Account Name;
                CaptionML=ENU=Account Name }

    { 29  ;4   ;Field     ;
                Name=AccName;
                ToolTipML=ENU=Specifies the name of the account.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AccName;
                Editable=FALSE;
                ImplicitType=Text50;
                ShowCaption=false }

    { 1902759701;3;Group  ;
                Name=Bal. Account Name;
                CaptionML=ENU=Bal. Account Name }

    { 31  ;4   ;Field     ;
                Name=BalAccName;
                CaptionML=ENU=Bal. Account Name;
                ToolTipML=ENU=Specifies the name of the balancing account that has been entered on the journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BalAccName;
                Editable=FALSE;
                ImplicitType=Text50 }

    { 1900545401;3;Group  ;
                Name=Group1900545401;
                CaptionML=ENU=Balance }

    { 25  ;4   ;Field     ;
                Name=Balance;
                CaptionML=ENU=Balance;
                ToolTipML=ENU=Specifies the balance that has accumulated in the cash receipt journal on the line where the cursor is.;
                ApplicationArea=#All;
                SourceExpr=Balance + "Balance (LCY)" - xRec."Balance (LCY)";
                AutoFormatType=1;
                Visible=BalanceVisible;
                Editable=FALSE }

    { 1900295801;3;Group  ;
                Name=Total Balance;
                CaptionML=ENU=Total Balance }

    { 27  ;4   ;Field     ;
                Name=TotalBalance;
                CaptionML=ENU=Total Balance;
                ToolTipML=ENU=Specifies the total balance in the cash receipt journal.;
                ApplicationArea=#All;
                SourceExpr=TotalBalance + "Balance (LCY)" - xRec."Balance (LCY)";
                AutoFormatType=1;
                Visible=TotalBalanceVisible;
                Editable=FALSE }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 15  ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                ApplicationArea=#Basic,#Suite;
                PagePartID="Incoming Doc. Attach. FactBox";
                PartType=Page;
                ShowFilter=false }

    { 1900919607;1;Part   ;
                Name=Part1900919607;
                ApplicationArea=#Advanced;
                SubPageLink="Dimension Set ID"=FIELD("Dimension Set ID");
                PagePartID="Dimension Set Entries FactBox";
                Visible=FALSE;
                PartType=Page }

    { 54  ;1   ;Part      ;
                Name=WorkflowStatusBatch;
                CaptionML=ENU=Batch Workflows;
                ApplicationArea=#Suite;
                PagePartID="Workflow Status FactBox";
                Visible=ShowWorkflowStatusOnBatch;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=false }

    { 19  ;1   ;Part      ;
                Name=WorkflowStatusLine;
                CaptionML=ENU=Line Workflows;
                ApplicationArea=#Suite;
                PagePartID="Workflow Status FactBox";
                Visible=ShowWorkflowStatusOnLine;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=false }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      GenJnlManagement@1002 : Codeunit GenJnlManagement;
      ReportPrint@1003 : Codeunit "Test Report-Print";
      ChangeExchangeRate@1001 : Page "Change Exchange Rate";
      GLReconcile@1000 : Page Reconciliation;
      CurrentJnlBatchName@1004 : Code[10];
      AccName@1005 : Text[50];
      BalAccName@1006 : Text[50];
      Balance@1007 : Decimal;
      TotalBalance@1008 : Decimal;
      ShowBalance@1009 : Boolean;
      ShowTotalBalance@1010 : Boolean;
      ShortcutDimCode@1011 : ARRAY [8] OF Code[20];
      ApplyEntriesActionEnabled@1021 : Boolean;
      BalanceVisible@19073040 : Boolean INDATASET;
      TotalBalanceVisible@19063333 : Boolean INDATASET;
      OpenApprovalEntriesExistForCurrUser@1012 : Boolean;
      OpenApprovalEntriesExistForCurrUserBatch@1099 : Boolean;
      OpenApprovalEntriesOnJnlBatchExist@1017 : Boolean;
      OpenApprovalEntriesOnJnlLineExist@1016 : Boolean;
      OpenApprovalEntriesOnBatchOrCurrJnlLineExist@1015 : Boolean;
      OpenApprovalEntriesOnBatchOrAnyJnlLineExist@1014 : Boolean;
      ShowWorkflowStatusOnBatch@1013 : Boolean;
      ShowWorkflowStatusOnLine@1018 : Boolean;
      CanCancelApprovalForJnlBatch@1019 : Boolean;
      CanCancelApprovalForJnlLine@1020 : Boolean;
      IsSaasExcelAddinEnabled@1022 : Boolean;
      CanRequestFlowApprovalForBatch@1023 : Boolean;
      CanRequestFlowApprovalForBatchAndAllLines@1024 : Boolean;
      CanRequestFlowApprovalForBatchAndCurrentLine@1025 : Boolean;
      CanCancelFlowApprovalForBatch@1026 : Boolean;
      CanCancelFlowApprovalForLine@1027 : Boolean;
      AmountVisible@1028 : Boolean;
      DebitCreditVisible@1029 : Boolean;

    LOCAL PROCEDURE UpdateBalance@1();
    BEGIN
      GenJnlManagement.CalcBalance(
        Rec,xRec,Balance,TotalBalance,ShowBalance,ShowTotalBalance);
      BalanceVisible := ShowBalance;
      TotalBalanceVisible := ShowTotalBalance;
    END;

    LOCAL PROCEDURE EnableApplyEntriesAction@4();
    BEGIN
      ApplyEntriesActionEnabled :=
        ("Account Type" in ["Account Type"::Customer,"Account Type"::Vendor]) or
        ("Bal. Account Type" in ["Bal. Account Type"::Customer,"Bal. Account Type"::Vendor]);
    END;

    LOCAL PROCEDURE CurrentJnlBatchNameOnAfterVali@19002411();
    BEGIN
      CurrPage.SAVERECORD;
      GenJnlManagement.SetName(CurrentJnlBatchName,Rec);
      SetControlAppearanceFromBatch;
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE GetCurrentlySelectedLines@3(VAR GenJournalLine@1000 : Record "Gen. Journal Line") : Boolean;
    BEGIN
      CurrPage.SETSELECTIONFILTER(GenJournalLine);
      exit(GenJournalLine.FINDSET);
    END;

    LOCAL PROCEDURE SetControlAppearanceFromBatch@76();
    VAR
      GenJournalBatch@1000 : Record "Gen. Journal Batch";
      ApprovalsMgmt@1002 : Codeunit "Approvals Mgmt.";
      WorkflowWebhookManagement@1001 : Codeunit "Workflow Webhook Management";
      CanRequestFlowApprovalForAllLines@1003 : Boolean;
    BEGIN
      if ("Journal Template Name" <> '') and ("Journal Batch Name" <> '') then
        GenJournalBatch.GET("Journal Template Name","Journal Batch Name")
      else
        if not GenJournalBatch.GET(GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName) then
          exit;

      CheckOpenApprovalEntries(GenJournalBatch.RECORDID);

      CanCancelApprovalForJnlBatch := ApprovalsMgmt.CanCancelApprovalForRecord(GenJournalBatch.RECORDID);

      WorkflowWebhookManagement.GetCanRequestAndCanCancelJournalBatch(
        GenJournalBatch,CanRequestFlowApprovalForBatch,CanCancelFlowApprovalForBatch,CanRequestFlowApprovalForAllLines);
      CanRequestFlowApprovalForBatchAndAllLines := CanRequestFlowApprovalForBatch and CanRequestFlowApprovalForAllLines;
    END;

    LOCAL PROCEDURE CheckOpenApprovalEntries@5(BatchRecordId@1000 : RecordID);
    VAR
      ApprovalsMgmt@1001 : Codeunit "Approvals Mgmt.";
    BEGIN
      OpenApprovalEntriesExistForCurrUserBatch := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(BatchRecordId);

      OpenApprovalEntriesOnJnlBatchExist := ApprovalsMgmt.HasOpenApprovalEntries(BatchRecordId);

      OpenApprovalEntriesOnBatchOrAnyJnlLineExist :=
        OpenApprovalEntriesOnJnlBatchExist or
        ApprovalsMgmt.HasAnyOpenJournalLineApprovalEntries("Journal Template Name","Journal Batch Name");
    END;

    LOCAL PROCEDURE SetControlAppearance@2();
    VAR
      ApprovalsMgmt@1002 : Codeunit "Approvals Mgmt.";
      WorkflowWebhookManagement@1000 : Codeunit "Workflow Webhook Management";
      CanRequestFlowApprovalForLine@1001 : Boolean;
    BEGIN
      OpenApprovalEntriesExistForCurrUser :=
        OpenApprovalEntriesExistForCurrUserBatch or ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);

      OpenApprovalEntriesOnJnlLineExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      OpenApprovalEntriesOnBatchOrCurrJnlLineExist := OpenApprovalEntriesOnJnlBatchExist or OpenApprovalEntriesOnJnlLineExist;

      CanCancelApprovalForJnlLine := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);

      WorkflowWebhookManagement.GetCanRequestAndCanCancel(RECORDID,CanRequestFlowApprovalForLine,CanCancelFlowApprovalForLine);
      CanRequestFlowApprovalForBatchAndCurrentLine := CanRequestFlowApprovalForBatch and CanRequestFlowApprovalForLine;
    END;

    LOCAL PROCEDURE ShowAmounts@8();
    VAR
      GLSetup@1000 : Record "General Ledger Setup";
    BEGIN
      GLSetup.GET;
      AmountVisible := not (GLSetup."Show Amounts" = GLSetup."Show Amounts"::"Debit/Credit Only");
      DebitCreditVisible := not (GLSetup."Show Amounts" = GLSetup."Show Amounts"::"Amount Only");
    END;

    BEGIN
    END.
  }
}

