OBJECT Table 254 VAT Entry
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=VAT Entry;
    LookupPageID="VAT Entries";
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No.;
                                                   Editable=false }
    { 2   ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=ENU=Gen. Bus. Posting Group;
                                                   Editable=false }
    { 3   ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=ENU=Gen. Prod. Posting Group;
                                                   Editable=false }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date;
                                                   Editable=false }
    { 5   ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No.;
                                                   Editable=false }
    { 6   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=" ",Payment,Invoice,"Credit Memo","Finance Charge Memo",Reminder,Refund;
                                                   Editable=false }
    { 7   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                if Type = Type::Settlement then
                                                                  ERROR(Text000,FIELDCAPTION(Type),Type);
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Purchase,Sale,Settlement";
                                                   OptionString=" ",Purchase,Sale,Settlement;
                                                   Editable=false }
    { 8   ;   ;Base                ;Decimal       ;CaptionML=ENU=Base;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 9   ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 10  ;   ;VAT Calculation Type;Option        ;CaptionML=ENU=VAT Calculation Type;
                                                   OptionCaptionML=ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   OptionString="Normal VAT","Reverse Charge VAT","Full VAT","Sales Tax";
                                                   Editable=false }
    { 12  ;   ;Bill-to/Pay-to No.  ;Code20        ;TableRelation=IF (Type=CONST(Purchase)) Vendor
                                                                 ELSE IF (Type=CONST(Sale)) Customer;
                                                   OnValidate=BEGIN
                                                                VALIDATE(Type);
                                                                if "Bill-to/Pay-to No." = '' then begin
                                                                  "Country/Region Code" := '';
                                                                  "VAT Registration No." := '';
                                                                end else
                                                                  case Type of
                                                                    Type::Purchase:
                                                                      begin
                                                                        Vend.GET("Bill-to/Pay-to No.");
                                                                        "Country/Region Code" := Vend."Country/Region Code";
                                                                        "VAT Registration No." := Vend."VAT Registration No.";
                                                                      end;
                                                                    Type::Sale:
                                                                      begin
                                                                        Cust.GET("Bill-to/Pay-to No.");
                                                                        "Country/Region Code" := Cust."Country/Region Code";
                                                                        "VAT Registration No." := Cust."VAT Registration No.";
                                                                      end;
                                                                  end;
                                                              END;

                                                   CaptionML=ENU=Bill-to/Pay-to No. }
    { 13  ;   ;EU 3-Party Trade    ;Boolean       ;OnValidate=BEGIN
                                                                VALIDATE(Type);
                                                              END;

                                                   CaptionML=ENU=EU 3-Party Trade }
    { 14  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit "User Management";
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=false;
                                                   CaptionML=ENU=User ID;
                                                   Editable=false }
    { 15  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code;
                                                   Editable=false }
    { 16  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code;
                                                   Editable=false }
    { 17  ;   ;Closed by Entry No. ;Integer       ;TableRelation="VAT Entry";
                                                   CaptionML=ENU=Closed by Entry No.;
                                                   Editable=false }
    { 18  ;   ;Closed              ;Boolean       ;CaptionML=ENU=Closed;
                                                   Editable=false }
    { 19  ;   ;Country/Region Code ;Code10        ;TableRelation="Country/Region";
                                                   OnValidate=BEGIN
                                                                VALIDATE(Type);
                                                                VALIDATE("VAT Registration No.");
                                                              END;

                                                   CaptionML=ENU=Country/Region Code }
    { 20  ;   ;Internal Ref. No.   ;Text30        ;CaptionML=ENU=Internal Ref. No.;
                                                   Editable=false }
    { 21  ;   ;Transaction No.     ;Integer       ;CaptionML=ENU=Transaction No.;
                                                   Editable=false }
    { 22  ;   ;Unrealized Amount   ;Decimal       ;CaptionML=ENU=Unrealized Amount;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 23  ;   ;Unrealized Base     ;Decimal       ;CaptionML=ENU=Unrealized Base;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 24  ;   ;Remaining Unrealized Amount;Decimal;CaptionML=ENU=Remaining Unrealized Amount;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 25  ;   ;Remaining Unrealized Base;Decimal  ;CaptionML=ENU=Remaining Unrealized Base;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 26  ;   ;External Document No.;Code35       ;CaptionML=ENU=External Document No.;
                                                   Editable=false }
    { 28  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=false }
    { 29  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=ENU=Tax Area Code;
                                                   Editable=false }
    { 30  ;   ;Tax Liable          ;Boolean       ;CaptionML=ENU=Tax Liable;
                                                   Editable=false }
    { 31  ;   ;Tax Group Code      ;Code20        ;TableRelation="Tax Group";
                                                   CaptionML=ENU=Tax Group Code;
                                                   Editable=false }
    { 32  ;   ;Use Tax             ;Boolean       ;CaptionML=ENU=Use Tax;
                                                   Editable=false }
    { 33  ;   ;Tax Jurisdiction Code;Code10       ;TableRelation="Tax Jurisdiction";
                                                   CaptionML=ENU=Tax Jurisdiction Code;
                                                   Editable=false }
    { 34  ;   ;Tax Group Used      ;Code20        ;TableRelation="Tax Group";
                                                   CaptionML=ENU=Tax Group Used;
                                                   Editable=false }
    { 35  ;   ;Tax Type            ;Option        ;CaptionML=ENU=Tax Type;
                                                   OptionCaptionML=ENU=Sales Tax,Excise Tax;
                                                   OptionString="Sales Tax","Excise Tax";
                                                   Editable=false }
    { 36  ;   ;Tax on Tax          ;Boolean       ;CaptionML=ENU=Tax on Tax;
                                                   Editable=false }
    { 37  ;   ;Sales Tax Connection No.;Integer   ;CaptionML=ENU=Sales Tax Connection No.;
                                                   Editable=false }
    { 38  ;   ;Unrealized VAT Entry No.;Integer   ;TableRelation="VAT Entry";
                                                   CaptionML=ENU=Unrealized VAT Entry No.;
                                                   Editable=false }
    { 39  ;   ;VAT Bus. Posting Group;Code20      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=VAT Bus. Posting Group;
                                                   Editable=false }
    { 40  ;   ;VAT Prod. Posting Group;Code20     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Prod. Posting Group;
                                                   Editable=false }
    { 43  ;   ;Additional-Currency Amount;Decimal ;AccessByPermission=TableData Currency=R;
                                                   CaptionML=ENU=Additional-Currency Amount;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 44  ;   ;Additional-Currency Base;Decimal   ;AccessByPermission=TableData Currency=R;
                                                   CaptionML=ENU=Additional-Currency Base;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 45  ;   ;Add.-Currency Unrealized Amt.;Decimal;
                                                   CaptionML=ENU=Add.-Currency Unrealized Amt.;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 46  ;   ;Add.-Currency Unrealized Base;Decimal;
                                                   CaptionML=ENU=Add.-Currency Unrealized Base;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 48  ;   ;VAT Base Discount % ;Decimal       ;CaptionML=ENU=VAT Base Discount %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=false }
    { 49  ;   ;Add.-Curr. Rem. Unreal. Amount;Decimal;
                                                   CaptionML=ENU=Add.-Curr. Rem. Unreal. Amount;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 50  ;   ;Add.-Curr. Rem. Unreal. Base;Decimal;
                                                   CaptionML=ENU=Add.-Curr. Rem. Unreal. Base;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 51  ;   ;VAT Difference      ;Decimal       ;CaptionML=ENU=VAT Difference;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 52  ;   ;Add.-Curr. VAT Difference;Decimal  ;AccessByPermission=TableData Currency=R;
                                                   CaptionML=ENU=Add.-Curr. VAT Difference;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 53  ;   ;Ship-to/Order Address Code;Code10  ;TableRelation=IF (Type=CONST(Purchase)) "Order Address".Code WHERE ("Vendor No."=FIELD("Bill-to/Pay-to No."))
                                                                 ELSE IF (Type=CONST(Sale)) "Ship-to Address".Code WHERE ("Customer No."=FIELD("Bill-to/Pay-to No."));
                                                   CaptionML=ENU=Ship-to/Order Address Code }
    { 54  ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date;
                                                   Editable=false }
    { 55  ;   ;VAT Registration No.;Text20        ;OnValidate=VAR
                                                                VATRegNoFormat@1000 : Record "VAT Registration No. Format";
                                                              BEGIN
                                                                VATRegNoFormat.Test("VAT Registration No.","Country/Region Code",'',0);
                                                              END;

                                                   CaptionML=ENU=VAT Registration No. }
    { 56  ;   ;Reversed            ;Boolean       ;CaptionML=ENU=Reversed }
    { 57  ;   ;Reversed by Entry No.;Integer      ;TableRelation="VAT Entry";
                                                   CaptionML=ENU=Reversed by Entry No.;
                                                   BlankZero=true }
    { 58  ;   ;Reversed Entry No.  ;Integer       ;TableRelation="VAT Entry";
                                                   CaptionML=ENU=Reversed Entry No.;
                                                   BlankZero=true }
    { 59  ;   ;EU Service          ;Boolean       ;CaptionML=ENU=EU Service;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"Entry No."                             ;Clustered=true }
    {    ;Type,Closed,"VAT Bus. Posting Group","VAT Prod. Posting Group","Posting Date";
                                                   SumIndexFields=Base,Amount,"Additional-Currency Base","Additional-Currency Amount","Remaining Unrealized Amount","Remaining Unrealized Base","Add.-Curr. Rem. Unreal. Amount","Add.-Curr. Rem. Unreal. Base" }
    {    ;Type,Closed,"Tax Jurisdiction Code","Use Tax","Posting Date";
                                                   SumIndexFields=Base,Amount,"Unrealized Amount","Unrealized Base","Remaining Unrealized Amount" }
    {    ;Type,"Country/Region Code","VAT Registration No.","VAT Bus. Posting Group","VAT Prod. Posting Group","Posting Date";
                                                   SumIndexFields=Base,"Additional-Currency Base" }
    {    ;"Document No.","Posting Date"            }
    {    ;"Transaction No."                        }
    {    ;"Tax Jurisdiction Code","Tax Group Used","Tax Type","Use Tax","Posting Date" }
    {    ;Type,"Bill-to/Pay-to No.","Transaction No.";
                                                   MaintainSQLIndex=false }
    {    ;"Document Date"                          }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;"Entry No.","Posting Date","Document Type","Document No.","Posting Date" }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot change the contents of this field when %1 is %2.';
      Cust@1001 : Record Customer;
      Vend@1002 : Record Vendor;
      GLSetup@1003 : Record "General Ledger Setup";
      GLSetupRead@1004 : Boolean;

    LOCAL PROCEDURE GetCurrencyCode@1() : Code[10];
    BEGIN
      if not GLSetupRead then begin
        GLSetup.GET;
        GLSetupRead := true;
      end;
      exit(GLSetup."Additional Reporting Currency");
    END;

    [External]
    PROCEDURE GetUnrealizedVATPart@2(SettledAmount@1003 : Decimal;Paid@1005 : Decimal;Full@1001 : Decimal;TotalUnrealVATAmountFirst@1006 : Decimal;TotalUnrealVATAmountLast@1007 : Decimal) : Decimal;
    VAR
      UnrealizedVATType@1000 : '" ",Percentage,First,Last,"First (Fully Paid)","Last (Fully Paid)"';
    BEGIN
      if (Type <> 0) and
         (Amount = 0) and
         (Base = 0)
      then begin
        UnrealizedVATType := GetUnrealizedVATType;
        if (UnrealizedVATType = UnrealizedVATType::" ") or
           (("Remaining Unrealized Amount" = 0) and
            ("Remaining Unrealized Base" = 0))
        then
          exit(0);

        if ABS(Paid) = ABS(Full) then
          exit(1);

        case UnrealizedVATType of
          UnrealizedVATType::Percentage:
            begin
              if ABS(Full) = ABS(Paid) - ABS(SettledAmount) then
                exit(1);
              exit(ABS(SettledAmount) / (ABS(Full) - (ABS(Paid) - ABS(SettledAmount))));
            end;
          UnrealizedVATType::First:
            begin
              if "VAT Calculation Type" = "VAT Calculation Type"::"Reverse Charge VAT" then
                exit(1);
              if ABS(Paid) < ABS(TotalUnrealVATAmountFirst) then
                exit(ABS(SettledAmount) / ABS(TotalUnrealVATAmountFirst));
              exit(1);
            end;
          UnrealizedVATType::"First (Fully Paid)":
            begin
              if "VAT Calculation Type" = "VAT Calculation Type"::"Reverse Charge VAT" then
                exit(1);
              if ABS(Paid) < ABS(TotalUnrealVATAmountFirst) then
                exit(0);
              exit(1);
            end;
          UnrealizedVATType::"Last (Fully Paid)":
            exit(0);
          UnrealizedVATType::Last:
            begin
              if "VAT Calculation Type" = "VAT Calculation Type"::"Reverse Charge VAT" then
                exit(0);
              if ABS(Paid) > ABS(Full) - ABS(TotalUnrealVATAmountLast) then
                exit((ABS(Paid) - (ABS(Full) - ABS(TotalUnrealVATAmountLast))) / ABS(TotalUnrealVATAmountLast));
              exit(0);
            end;
        end;
      end else
        exit(0);
    END;

    LOCAL PROCEDURE GetUnrealizedVATType@3() UnrealizedVATType : Integer;
    VAR
      VATPostingSetup@1001 : Record "VAT Posting Setup";
      TaxJurisdiction@1000 : Record "Tax Jurisdiction";
    BEGIN
      if "VAT Calculation Type" = "VAT Calculation Type"::"Sales Tax" then begin
        TaxJurisdiction.GET("Tax Jurisdiction Code");
        UnrealizedVATType := TaxJurisdiction."Unrealized VAT Type";
      end else begin
        VATPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group");
        UnrealizedVATType := VATPostingSetup."Unrealized VAT Type";
      end;
    END;

    [External]
    PROCEDURE CopyFromGenJnlLine@5(GenJnlLine@1000 : Record "Gen. Journal Line");
    BEGIN
      CopyPostingGroupsFromGenJnlLine(GenJnlLine);
      "Posting Date" := GenJnlLine."Posting Date";
      "Document Date" := GenJnlLine."Document Date";
      "Document No." := GenJnlLine."Document No.";
      "External Document No." := GenJnlLine."External Document No.";
      "Document Type" := GenJnlLine."Document Type";
      Type := GenJnlLine."Gen. Posting Type";
      "VAT Calculation Type" := GenJnlLine."VAT Calculation Type";
      "Source Code" := GenJnlLine."Source Code";
      "Reason Code" := GenJnlLine."Reason Code";
      "Ship-to/Order Address Code" := GenJnlLine."Ship-to/Order Address Code";
      "EU 3-Party Trade" := GenJnlLine."EU 3-Party Trade";
      "User ID" := USERID;
      "No. Series" := GenJnlLine."Posting No. Series";
      "VAT Base Discount %" := GenJnlLine."VAT Base Discount %";
      "Bill-to/Pay-to No." := GenJnlLine."Bill-to/Pay-to No.";
      "Country/Region Code" := GenJnlLine."Country/Region Code";
      "VAT Registration No." := GenJnlLine."VAT Registration No.";

      OnAfterCopyFromGenJnlLine(Rec,GenJnlLine);
    END;

    LOCAL PROCEDURE CopyPostingGroupsFromGenJnlLine@4(GenJnlLine@1000 : Record "Gen. Journal Line");
    BEGIN
      "Gen. Bus. Posting Group" := GenJnlLine."Gen. Bus. Posting Group";
      "Gen. Prod. Posting Group" := GenJnlLine."Gen. Prod. Posting Group";
      "VAT Bus. Posting Group" := GenJnlLine."VAT Bus. Posting Group";
      "VAT Prod. Posting Group" := GenJnlLine."VAT Prod. Posting Group";
      "Tax Area Code" := GenJnlLine."Tax Area Code";
      "Tax Liable" := GenJnlLine."Tax Liable";
      "Tax Group Code" := GenJnlLine."Tax Group Code";
      "Use Tax" := GenJnlLine."Use Tax";
    END;

    [External]
    PROCEDURE CopyAmountsFromVATEntry@6(VATEntry@1000 : Record "VAT Entry";WithOppositeSign@1001 : Boolean);
    VAR
      Sign@1002 : Decimal;
    BEGIN
      if WithOppositeSign then
        Sign := -1
      else
        Sign := 1;
      Base := Sign * VATEntry.Base;
      Amount := Sign * VATEntry.Amount;
      "Unrealized Amount" := Sign * VATEntry."Unrealized Amount";
      "Unrealized Base" := Sign * VATEntry."Unrealized Base";
      "Remaining Unrealized Amount" := Sign * VATEntry."Remaining Unrealized Amount";
      "Remaining Unrealized Base" := Sign * VATEntry."Remaining Unrealized Base";
      "Additional-Currency Amount" := Sign * VATEntry."Additional-Currency Amount";
      "Additional-Currency Base" := Sign * VATEntry."Additional-Currency Base";
      "Add.-Currency Unrealized Amt." := Sign * VATEntry."Add.-Currency Unrealized Amt.";
      "Add.-Currency Unrealized Base" := Sign * VATEntry."Add.-Currency Unrealized Base";
      "Add.-Curr. Rem. Unreal. Amount" := Sign * VATEntry."Add.-Curr. Rem. Unreal. Amount";
      "Add.-Curr. Rem. Unreal. Base" := Sign * VATEntry."Add.-Curr. Rem. Unreal. Base";
      "VAT Difference" := Sign * VATEntry."VAT Difference";
      "Add.-Curr. VAT Difference" := Sign * VATEntry."Add.-Curr. VAT Difference";
    END;

    [External]
    PROCEDURE SetUnrealAmountsToZero@7();
    BEGIN
      "Unrealized Amount" := 0;
      "Unrealized Base" := 0;
      "Remaining Unrealized Amount" := 0;
      "Remaining Unrealized Base" := 0;
      "Add.-Currency Unrealized Amt." := 0;
      "Add.-Currency Unrealized Base" := 0;
      "Add.-Curr. Rem. Unreal. Amount" := 0;
      "Add.-Curr. Rem. Unreal. Base" := 0;
    END;

    [Integration]
    [External]
    PROCEDURE OnAfterCopyFromGenJnlLine@8(VAR VATEntry@1000 : Record "VAT Entry";GenJournalLine@1001 : Record "Gen. Journal Line");
    BEGIN
    END;

    BEGIN
    END.
  }
}

