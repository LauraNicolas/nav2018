OBJECT Page 2200 Sales Invoice Document API
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Sales Invoice Document API;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    SourceTable="O365 Sales Invoice Document";
    SourceTableTemporary=true;
    OnFindRecord=VAR
                   SalesHeader@1001 : Record "Sales Header";
                   SalesInvoiceHeader@1002 : Record "Sales Invoice Header";
                 BEGIN
                   EVALUATE(InvoiceId,GETFILTER(InvoiceId));
                   if ISNULLGUID(InvoiceId) then
                     exit(false);

                   SalesInvoiceHeader.SETRANGE(Id,InvoiceId);
                   if SalesInvoiceHeader.FINDFIRST then begin
                     GetDocumentFromPostedInvoice(SalesInvoiceHeader);
                     exit(true);
                   end;

                   SalesHeader.SETRANGE(Id,InvoiceId);
                   SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Invoice);
                   if SalesHeader.FINDFIRST then begin
                     GetDocumentFromDraftInvoice(SalesHeader);
                     exit(true);
                   end;

                   exit(false);
                 END;

  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Field     ;
                Name=InvoiceId;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=InvoiceId;
                ImplicitType=GUID }

    { 5   ;1   ;Field     ;
                Name=Base64;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Base64;
                ImplicitType=BLOB }

    { 3   ;1   ;Field     ;
                Name=Binary;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Binary;
                ImplicitType=BLOB }

  }
  CODE
  {

    LOCAL PROCEDURE GetDocumentFromPostedInvoice@1(SalesInvoiceHeader@1000 : Record "Sales Invoice Header");
    VAR
      ReportSelections@1001 : Record "Report Selections";
      Convert@1004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Convert";
      FileObj@1009 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.File";
      OutStr@1003 : OutStream;
      DocumentPath@1002 : Text[250];
    BEGIN
      SalesInvoiceHeader.SETRECFILTER;
      ReportSelections.GetPdfReport(
        DocumentPath,ReportSelections.Usage::"S.Invoice",SalesInvoiceHeader,SalesInvoiceHeader."Sell-to Customer No.");

      Base64.CREATEOUTSTREAM(OutStr);
      OutStr.WRITETEXT(Convert.ToBase64String(FileObj.ReadAllBytes(DocumentPath)));

      Binary.IMPORT(DocumentPath);

      if FILE.ERASE(DocumentPath) then;
    END;

    LOCAL PROCEDURE GetDocumentFromDraftInvoice@2(SalesHeader@1000 : Record "Sales Header");
    VAR
      ReportSelections@1001 : Record "Report Selections";
      Convert@1004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Convert";
      FileObj@1003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.File";
      OutStr@1005 : OutStream;
      DocumentPath@1002 : Text[250];
    BEGIN
      SalesHeader.SETRECFILTER;
      ReportSelections.GetPdfReport(
        DocumentPath,ReportSelections.Usage::"S.Invoice Draft",SalesHeader,SalesHeader."Sell-to Customer No.");

      Base64.CREATEOUTSTREAM(OutStr);
      OutStr.WRITETEXT(Convert.ToBase64String(FileObj.ReadAllBytes(DocumentPath)));

      Binary.IMPORT(DocumentPath);

      if FILE.ERASE(DocumentPath) then;
    END;

    BEGIN
    END.
  }
}

