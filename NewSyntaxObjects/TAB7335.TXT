OBJECT Table 7335 Bin Template
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Description;
    OnInsert=BEGIN
               GetLocation("Location Code");
               if Location."Directed Put-away and Pick" then
                 TESTFIELD("Zone Code")
               else
                 TESTFIELD("Zone Code",'');
             END;

    OnModify=BEGIN
               GetLocation("Location Code");
               if Location."Directed Put-away and Pick" then
                 TESTFIELD("Zone Code")
               else
                 TESTFIELD("Zone Code",'');
             END;

    CaptionML=ENU=Bin Template;
    LookupPageID="Bin Templates";
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=ENU=Code;
                                                   NotBlank=true }
    { 2   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 4   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE ("Bin Mandatory"=CONST(true));
                                                   CaptionML=ENU=Location Code;
                                                   NotBlank=true }
    { 5   ;   ;Bin Description     ;Text50        ;CaptionML=ENU=Bin Description }
    { 6   ;   ;Zone Code           ;Code10        ;TableRelation=Zone.Code WHERE ("Location Code"=FIELD("Location Code"));
                                                   OnValidate=BEGIN
                                                                SetUpNewLine;
                                                              END;

                                                   CaptionML=ENU=Zone Code }
    { 10  ;   ;Bin Type Code       ;Code10        ;TableRelation="Bin Type";
                                                   CaptionML=ENU=Bin Type Code }
    { 11  ;   ;Warehouse Class Code;Code10        ;TableRelation="Warehouse Class";
                                                   CaptionML=ENU=Warehouse Class Code }
    { 12  ;   ;Block Movement      ;Option        ;CaptionML=ENU=Block Movement;
                                                   OptionCaptionML=ENU=" ,Inbound,Outbound,All";
                                                   OptionString=" ",Inbound,Outbound,All }
    { 20  ;   ;Special Equipment Code;Code10      ;TableRelation="Special Equipment";
                                                   CaptionML=ENU=Special Equipment Code }
    { 21  ;   ;Bin Ranking         ;Integer       ;CaptionML=ENU=Bin Ranking }
    { 22  ;   ;Maximum Cubage      ;Decimal       ;CaptionML=ENU=Maximum Cubage;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=true }
    { 23  ;   ;Maximum Weight      ;Decimal       ;CaptionML=ENU=Maximum Weight;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=true }
    { 24  ;   ;Dedicated           ;Boolean       ;CaptionML=ENU=Dedicated }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Location@1009 : Record Location;
      Zone@1000 : Record Zone;

    [External]
    PROCEDURE SetUpNewLine@8();
    BEGIN
      GetLocation("Location Code");
      if Location."Directed Put-away and Pick" then begin
        GetZone("Location Code","Zone Code");
        "Bin Type Code" := Zone."Bin Type Code";
        "Warehouse Class Code" := Zone."Warehouse Class Code";
        "Special Equipment Code" := Zone."Special Equipment Code";
        "Bin Ranking" := Zone."Zone Ranking";
      end;
    END;

    LOCAL PROCEDURE GetZone@1(LocationCode@1000 : Code[10];ZoneCode@1001 : Code[10]);
    BEGIN
      TESTFIELD("Location Code");
      if Location."Directed Put-away and Pick" then
        TESTFIELD("Zone Code")
      else
        TESTFIELD("Zone Code",'');
      if (Zone."Location Code" <> LocationCode) or
         (Zone.Code <> ZoneCode)
      then
        Zone.GET("Location Code","Zone Code");
    END;

    LOCAL PROCEDURE GetLocation@10(LocationCode@1000 : Code[10]);
    BEGIN
      if Location.Code <> LocationCode then
        Location.GET(LocationCode);
    END;

    BEGIN
    END.
  }
}

