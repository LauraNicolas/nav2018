OBJECT Table 5628 Insurance
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Ins. Coverage Ledger Entry"=r;
    DataCaptionFields="No.",Description;
    OnInsert=BEGIN
               if "No." = '' then begin
                 FASetup.GET;
                 FASetup.TESTFIELD("Insurance Nos.");
                 NoSeriesMgt.InitSeries(FASetup."Insurance Nos.",xRec."No. Series",0D,"No.","No. Series");
               end;

               DimMgt.UpdateDefaultDim(
                 DATABASE::Insurance,"No.",
                 "Global Dimension 1 Code","Global Dimension 2 Code");
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
             END;

    OnDelete=BEGIN
               FAMoveEntries.MoveInsuranceEntries(Rec);
               CommentLine.SETRANGE("Table Name",CommentLine."Table Name"::Insurance);
               CommentLine.SETRANGE("No.","No.");
               CommentLine.DELETEALL;

               DimMgt.DeleteDefaultDim(DATABASE::Insurance,"No.");
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;
             END;

    CaptionML=ENU=Insurance;
    LookupPageID="Insurance List";
    DrillDownPageID="Insurance List";
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                if "No." <> xRec."No." then begin
                                                                  FASetup.GET;
                                                                  NoSeriesMgt.TestManual(FASetup."Insurance Nos.");
                                                                  "No. Series" := '';
                                                                end;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 2   ;   ;Effective Date      ;Date          ;CaptionML=ENU=Effective Date }
    { 3   ;   ;Expiration Date     ;Date          ;CaptionML=ENU=Expiration Date }
    { 4   ;   ;Policy No.          ;Text30        ;CaptionML=ENU=Policy No. }
    { 6   ;   ;Annual Premium      ;Decimal       ;CaptionML=ENU=Annual Premium;
                                                   MinValue=0;
                                                   BlankZero=true;
                                                   AutoFormatType=1 }
    { 7   ;   ;Policy Coverage     ;Decimal       ;CaptionML=ENU=Policy Coverage;
                                                   MinValue=0;
                                                   BlankZero=true;
                                                   AutoFormatType=1 }
    { 10  ;   ;Total Value Insured ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Ins. Coverage Ledger Entry".Amount WHERE ("Insurance No."=FIELD("No."),
                                                                                                              "Disposed FA"=CONST(false),
                                                                                                              "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Total Value Insured;
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 11  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE ("Table Name"=CONST(Insurance),
                                                                                           "No."=FIELD("No.")));
                                                   CaptionML=ENU=Comment;
                                                   Editable=false }
    { 12  ;   ;Insurance Type      ;Code10        ;TableRelation="Insurance Type";
                                                   CaptionML=ENU=Insurance Type }
    { 13  ;   ;Last Date Modified  ;Date          ;CaptionML=ENU=Last Date Modified;
                                                   Editable=false }
    { 14  ;   ;Insurance Vendor No.;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Insurance Vendor No. }
    { 15  ;   ;FA Class Code       ;Code10        ;TableRelation="FA Class";
                                                   CaptionML=ENU=FA Class Code }
    { 16  ;   ;FA Subclass Code    ;Code10        ;TableRelation="FA Subclass";
                                                   CaptionML=ENU=FA Subclass Code }
    { 17  ;   ;FA Location Code    ;Code10        ;TableRelation="FA Location";
                                                   CaptionML=ENU=FA Location Code }
    { 18  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 19  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 20  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE ("Use As In-Transit"=CONST(false));
                                                   CaptionML=ENU=Location Code }
    { 32  ;   ;Blocked             ;Boolean       ;CaptionML=ENU=Blocked }
    { 33  ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                if ("Search Description" = UPPERCASE(xRec.Description)) or ("Search Description" = '') then
                                                                  "Search Description" := Description;
                                                              END;

                                                   CaptionML=ENU=Description }
    { 34  ;   ;Search Description  ;Code50        ;CaptionML=ENU=Search Description }
    { 35  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 36  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
    {    ;"Search Description"                     }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;"No.",Description,"Policy No."           }
  }
  CODE
  {
    VAR
      CommentLine@1000 : Record "Comment Line";
      FASetup@1001 : Record "FA Setup";
      Insurance@1002 : Record Insurance;
      NoSeriesMgt@1003 : Codeunit NoSeriesManagement;
      FAMoveEntries@1004 : Codeunit "FA MoveEntries";
      DimMgt@1005 : Codeunit DimensionManagement;

    [External]
    PROCEDURE AssistEdit@2(OldInsurance@1000 : Record Insurance) : Boolean;
    BEGIN
      with Insurance do begin
        Insurance := Rec;
        FASetup.GET;
        FASetup.TESTFIELD("Insurance Nos.");
        if NoSeriesMgt.SelectSeries(FASetup."Insurance Nos.",OldInsurance."No. Series","No. Series") then begin
          NoSeriesMgt.SetSeries("No.");
          Rec := Insurance;
          exit(true);
        end;
      end;
    END;

    LOCAL PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::Insurance,"No.",FieldNumber,ShortcutDimCode);
      MODIFY(true);
    END;

    BEGIN
    END.
  }
}

