OBJECT Report 90 Import Consolidation from DB
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Consolidation Report;
    ProcessingOnly=true;
    OnPreReport=BEGIN
                  DimSelectionBuf.CompareDimText(
                    3,REPORT::"Import Consolidation from DB",'',ColumnDim,Text020);
                END;

    OnPostReport=BEGIN
                   COMMIT;
                   REPORT.RUN(REPORT::"Consolidated Trial Balance");
                 END;

  }
  DATASET
  {
    { 9370;    ;DataItem;Business Unit       ;
               DataItemTable="Business Unit";
               DataItemTableView=SORTING(Code) WHERE(Consolidate=CONST(true));
               OnPreDataItem=BEGIN
                               CheckConsolidDates(ConsolidStartDate,ConsolidEndDate);

                               if GLDocNo = '' then
                                 ERROR(Text000);

                               Window.OPEN(
                                 Text001 +
                                 Text002 +
                                 Text003 +
                                 Text004);
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1,Code);
                                  Window.UPDATE(2,'');

                                  CLEAR(BusUnitConsolidate);
                                  BusUnitConsolidate.SetDocNo(GLDocNo);

                                  TESTFIELD("Company Name");
                                  "G/L Entry".CHANGECOMPANY("Company Name");
                                  "Dimension Set Entry".CHANGECOMPANY("Company Name");
                                  "G/L Account".CHANGECOMPANY("Company Name");
                                  "Currency Exchange Rate".CHANGECOMPANY("Company Name");
                                  Dim.CHANGECOMPANY("Company Name");
                                  DimVal.CHANGECOMPANY("Company Name");

                                  SelectedDim.SETRANGE("User ID",USERID);
                                  SelectedDim.SETRANGE("Object Type",3);
                                  SelectedDim.SETRANGE("Object ID",REPORT::"Import Consolidation from DB");
                                  BusUnitConsolidate.SetSelectedDim(SelectedDim);

                                  TempDim.RESET;
                                  TempDim.DELETEALL;
                                  if Dim.FIND('-') then begin
                                    repeat
                                      TempDim.INIT;
                                      TempDim := Dim;
                                      TempDim.INSERT;
                                    until Dim.NEXT = 0;
                                  end;
                                  TempDim.RESET;
                                  TempDimVal.RESET;
                                  TempDimVal.DELETEALL;
                                  if DimVal.FIND('-') then begin
                                    repeat
                                      TempDimVal.INIT;
                                      TempDimVal := DimVal;
                                      TempDimVal.INSERT;
                                    until DimVal.NEXT = 0;
                                  end;

                                  AdditionalCurrencyCode := '';
                                  SubsidCurrencyCode := '';
                                END;

               ReqFilterFields=Code }

    { 6710;1   ;DataItem;G/L Account         ;
               DataItemTable="G/L Account";
               DataItemTableView=SORTING("No.") WHERE("Account Type"=CONST(Posting));
               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(2,"No.");
                                  Window.UPDATE(3,'');

                                  BusUnitConsolidate.InsertGLAccount("G/L Account");
                                END;
                                 }

    { 7069;2   ;DataItem;G/L Entry           ;
               DataItemTable="G/L Entry";
               DataItemTableView=SORTING("G/L Account No.","Posting Date");
               OnPreDataItem=BEGIN
                               SETRANGE("Posting Date",ConsolidStartDate,ConsolidEndDate);

                               if GETRANGEMIN("Posting Date") = NORMALDATE(GETRANGEMIN("Posting Date")) then
                                 CheckClosingPostings("G/L Account"."No.",GETRANGEMIN("Posting Date"),GETRANGEMAX("Posting Date"));
                             END;

               OnAfterGetRecord=BEGIN
                                  GLEntryNo := BusUnitConsolidate.InsertGLEntry("G/L Entry");
                                END;

               DataItemLink="G/L Account No."=FIELD("No.") }

    { 4925;3   ;DataItem;Dimension Set Entry ;
               DataItemTable="Dimension Set Entry";
               DataItemTableView=SORTING("Dimension Set ID","Dimension Code");
               OnPreDataItem=VAR
                               BusUnitDim@1002 : Record Dimension;
                               DimMgt@1000 : Codeunit DimensionManagement;
                               ColumnDimFilter@1001 : Text;
                             BEGIN
                               if ColumnDim <> '' then begin
                                 ColumnDimFilter := CONVERTSTR(ColumnDim,';','|');
                                 BusUnitDim.CHANGECOMPANY("Business Unit"."Company Name");
                                 SETFILTER("Dimension Code",DimMgt.GetConsolidatedDimFilterByDimFilter(BusUnitDim,ColumnDimFilter));
                               end;
                             END;

               OnAfterGetRecord=VAR
                                  TempDimBuf@1000 : TEMPORARY Record "Dimension Buffer";
                                BEGIN
                                  TempDimBuf.INIT;
                                  TempDimBuf."Table ID" := DATABASE::"G/L Entry";
                                  TempDimBuf."Entry No." := GLEntryNo;
                                  if TempDim.GET("Dimension Code") and
                                     (TempDim."Consolidation Code" <> '')
                                  then
                                    TempDimBuf."Dimension Code" := TempDim."Consolidation Code"
                                  else
                                    TempDimBuf."Dimension Code" := "Dimension Code";
                                  if TempDimVal.GET("Dimension Code","Dimension Value Code") and
                                     (TempDimVal."Consolidation Code" <> '')
                                  then
                                    TempDimBuf."Dimension Value Code" := TempDimVal."Consolidation Code"
                                  else
                                    TempDimBuf."Dimension Value Code" := "Dimension Value Code";
                                  BusUnitConsolidate.InsertEntryDim(TempDimBuf,TempDimBuf."Entry No.");
                                END;

               DataItemLink="Dimension Set ID"=FIELD("Dimension Set ID") }

    { 8685;1   ;DataItem;Currency Exchange Rate;
               DataItemTable="Currency Exchange Rate";
               DataItemTableView=SORTING("Currency Code","Starting Date");
               OnPreDataItem=VAR
                               SubsidGLSetup@1000 : Record "General Ledger Setup";
                             BEGIN
                               if "Business Unit"."Currency Code" = '' then
                                 CurrReport.BREAK;

                               SubsidGLSetup.CHANGECOMPANY("Business Unit"."Company Name");
                               SubsidGLSetup.GET;
                               AdditionalCurrencyCode := SubsidGLSetup."Additional Reporting Currency";
                               if SubsidGLSetup."LCY Code" <> '' then
                                 SubsidCurrencyCode := SubsidGLSetup."LCY Code"
                               else
                                 SubsidCurrencyCode := "Business Unit"."Currency Code";

                               if (ParentCurrencyCode = '') and (AdditionalCurrencyCode = '') then
                                 CurrReport.BREAK;

                               SETFILTER("Currency Code",'%1|%2',ParentCurrencyCode,AdditionalCurrencyCode);
                               SETRANGE("Starting Date",0D,ConsolidEndDate);
                             END;

               OnAfterGetRecord=BEGIN
                                  BusUnitConsolidate.InsertExchRate("Currency Exchange Rate");
                                END;
                                 }

    { 4528;1   ;DataItem;DoTheConsolidation  ;
               DataItemTable=Integer;
               DataItemTableView=SORTING(Number) WHERE(Number=CONST(1));
               OnAfterGetRecord=BEGIN
                                  BusUnitConsolidate.SetGlobals(
                                    '','',"Business Unit"."Company Name",
                                    SubsidCurrencyCode,AdditionalCurrencyCode,ParentCurrencyCode,
                                    0,ConsolidStartDate,ConsolidEndDate);
                                  BusUnitConsolidate.UpdateGLEntryDimSetID;
                                  BusUnitConsolidate.RUN("Business Unit");
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnOpenPage=BEGIN
                   if ConsolidStartDate = 0D then
                     ConsolidStartDate := WORKDATE;
                   if ConsolidEndDate = 0D then
                     ConsolidEndDate := WORKDATE;

                   if ParentCurrencyCode = '' then begin
                     GLSetup.GET;
                     ParentCurrencyCode := GLSetup."LCY Code";
                   end;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 21  ;2   ;Group     ;
                  Name=Consolidation Period;
                  CaptionML=ENU=Consolidation Period }

      { 1   ;3   ;Field     ;
                  Name=StartingDate;
                  CaptionML=ENU=Starting Date;
                  ToolTipML=ENU=Specifies the starting date.;
                  ApplicationArea=#Suite;
                  ClosingDates=true;
                  SourceExpr=ConsolidStartDate }

      { 2   ;3   ;Field     ;
                  Name=EndingDate;
                  CaptionML=ENU=Ending Date;
                  ToolTipML=ENU=Specifies the ending date.;
                  ApplicationArea=#Suite;
                  ClosingDates=true;
                  SourceExpr=ConsolidEndDate }

      { 4   ;2   ;Group     ;
                  Name=Copy Field Contents;
                  CaptionML=ENU=Copy Field Contents }

      { 7   ;3   ;Field     ;
                  Name=Copy Dimensions;
                  CaptionML=ENU=Copy Dimensions;
                  ToolTipML=ENU=Specifies if you want the entries to be classified by dimensions when they are transferred.;
                  ApplicationArea=#Suite;
                  SourceExpr=ColumnDim;
                  Editable=FALSE;
                  OnAssistEdit=BEGIN
                                 DimSelectionBuf.SetDimSelectionMultiple(3,REPORT::"Import Consolidation from DB",ColumnDim);
                               END;
                                }

      { 6   ;2   ;Field     ;
                  Name=DocumentNo;
                  CaptionML=ENU=Document No.;
                  ToolTipML=ENU=Specifies the G/L document number.;
                  ApplicationArea=#Suite;
                  SourceExpr=GLDocNo }

      { 3   ;2   ;Field     ;
                  Name=Parent Currency Code;
                  CaptionML=ENU=Parent Currency Code;
                  ToolTipML=ENU=Specifies the parent currency code.;
                  ApplicationArea=#Suite;
                  SourceExpr=ParentCurrencyCode }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Enter a document number.';
      Text001@1001 : TextConst 'ENU=Importing Subsidiary Data...\\';
      Text002@1002 : TextConst 'ENU=Business Unit Code   #1##########\';
      Text003@1003 : TextConst 'ENU=G/L Account No.      #2##########\';
      Text004@1004 : TextConst 'ENU=Date                 #3######';
      Text006@1005 : TextConst 'ENU=Enter the starting date for the consolidation period.';
      Text007@1006 : TextConst 'ENU=Enter the ending date for the consolidation period.';
      Text020@1018 : TextConst 'ENU=Copy Dimensions';
      Text022@1020 : TextConst 'ENU=A %1 with %2 on a closing date (%3) was found while consolidating nonclosing entries (%4 %5).';
      Text023@1021 : TextConst 'ENU=Do you want to consolidate in the period from %1 to %2?';
      Text024@1022 : TextConst 'ENU=There is no %1 to consolidate.';
      Text025@1023 : TextConst 'ENU=The consolidation period %1 .. %2 is not within the fiscal year of one or more of the subsidiaries.\';
      Text026@1024 : TextConst 'ENU=Do you want to proceed with the consolidation?';
      Text028@1025 : TextConst 'ENU=You must create a new fiscal year in the consolidated company.';
      Text029@1026 : TextConst 'ENU=The consolidation period %1 .. %2 is not within the fiscal year %3 .. %4 of the consolidated company %5.\';
      Text030@1027 : TextConst 'ENU=When using closing dates, the starting and ending dates must be the same.';
      Text031@1028 : TextConst 'ENU=The %1 %2 of %3 %4, is not the %1 of the fiscal year of company %5.';
      SelectedDim@1034 : Record "Selected Dimension";
      Dim@1036 : Record Dimension;
      DimVal@1037 : Record "Dimension Value";
      TempDim@1038 : TEMPORARY Record Dimension;
      TempDimVal@1039 : TEMPORARY Record "Dimension Value";
      GLSetup@1043 : Record "General Ledger Setup";
      DimSelectionBuf@1047 : Record "Dimension Selection Buffer";
      BusUnitConsolidate@1073 : Codeunit Consolidate;
      Window@1050 : Dialog;
      ConsolidStartDate@1051 : Date;
      ConsolidEndDate@1052 : Date;
      GLDocNo@1055 : Code[20];
      ColumnDim@1068 : Text[250];
      ParentCurrencyCode@1072 : Code[10];
      SubsidCurrencyCode@1035 : Code[10];
      AdditionalCurrencyCode@1040 : Code[10];
      Text032@1007 : TextConst 'ENU=The %1 is later than the %2 in company %3.';
      GLEntryNo@1008 : Integer;

    LOCAL PROCEDURE CheckClosingPostings@5(GLAccNo@1000 : Code[20];StartDate@1001 : Date;EndDate@1002 : Date);
    VAR
      GLEntry@1003 : Record "G/L Entry";
      AccountingPeriod@1004 : Record "Accounting Period";
    BEGIN
      AccountingPeriod.CHANGECOMPANY("Business Unit"."Company Name");
      AccountingPeriod.SETCURRENTKEY("New Fiscal Year","Date Locked");
      AccountingPeriod.SETRANGE("New Fiscal Year",true);
      AccountingPeriod.SETRANGE("Date Locked",true);
      AccountingPeriod.SETRANGE("Starting Date",StartDate + 1,EndDate);
      if AccountingPeriod.FIND('-') then begin
        GLEntry.CHANGECOMPANY("Business Unit"."Company Name");
        GLEntry.SETRANGE("G/L Account No.",GLAccNo);
        repeat
          GLEntry.SETRANGE("Posting Date",CLOSINGDATE(AccountingPeriod."Starting Date" - 1));
          if not GLEntry.ISEMPTY then
            ERROR(
              Text022,
              GLEntry.TABLECAPTION,
              GLEntry.FIELDCAPTION("Posting Date"),
              GLEntry.GETFILTER("Posting Date"),
              GLEntry.FIELDCAPTION("G/L Account No."),
              GLAccNo);
        until AccountingPeriod.NEXT = 0;
      end;
    END;

    LOCAL PROCEDURE CheckConsolidDates@9(StartDate@1000 : Date;EndDate@1001 : Date);
    VAR
      BusUnit@1002 : Record "Business Unit";
      ConsolPeriodInclInFiscalYears@1003 : Boolean;
    BEGIN
      if StartDate = 0D then
        ERROR(Text006);
      if EndDate = 0D then
        ERROR(Text007);

      if not
         CONFIRM(
           Text023,
           false,StartDate,EndDate)
      then
        CurrReport.BREAK;

      CheckClosingDates(StartDate,EndDate);

      BusUnit.COPYFILTERS("Business Unit");
      BusUnit.SETRANGE(Consolidate,true);
      if not BusUnit.FIND('-') then
        ERROR(Text024,BusUnit.TABLECAPTION);

      ConsolPeriodInclInFiscalYears := true;
      repeat
        if (StartDate = NORMALDATE(StartDate)) or (EndDate = NORMALDATE(EndDate)) then
          if (BusUnit."Starting Date" <> 0D) or (BusUnit."Ending Date" <> 0D) then begin
            CheckBusUnitsDatesToFiscalYear(BusUnit);
            ConsolPeriodInclInFiscalYears :=
              ConsolPeriodInclInFiscalYears and CheckDatesToBusUnitDates(StartDate,EndDate,BusUnit);
          end;
      until BusUnit.NEXT = 0;

      if not ConsolPeriodInclInFiscalYears then
        if not CONFIRM(
             Text025 +
             Text026,
             false,StartDate,EndDate)
        then
          CurrReport.BREAK;

      CheckDatesToFiscalYear(StartDate,EndDate);
    END;

    LOCAL PROCEDURE CheckDatesToFiscalYear@17(StartDate@1000 : Date;EndDate@1001 : Date);
    VAR
      AccountingPeriod@1002 : Record "Accounting Period";
      FiscalYearStartDate@1003 : Date;
      FiscalYearEndDate@1004 : Date;
      ConsolPeriodInclInFiscalYear@1005 : Boolean;
    BEGIN
      ConsolPeriodInclInFiscalYear := true;

      AccountingPeriod.RESET;
      AccountingPeriod.SETRANGE(Closed,false);
      AccountingPeriod.SETRANGE("New Fiscal Year",true);
      AccountingPeriod.FIND('-');

      FiscalYearStartDate := AccountingPeriod."Starting Date";
      if AccountingPeriod.FIND('>') then
        FiscalYearEndDate := CALCDATE('<-1D>',AccountingPeriod."Starting Date")
      else
        ERROR(Text028);

      ConsolPeriodInclInFiscalYear := (StartDate >= FiscalYearStartDate) and (EndDate <= FiscalYearEndDate);

      if not ConsolPeriodInclInFiscalYear then
        if not CONFIRM(
             Text029 +
             Text026,
             false,StartDate,EndDate,FiscalYearStartDate,FiscalYearEndDate,COMPANYNAME)
        then
          CurrReport.BREAK;
    END;

    LOCAL PROCEDURE CheckDatesToBusUnitDates@13(StartDate@1000 : Date;EndDate@1001 : Date;BusUnit@1002 : Record "Business Unit") : Boolean;
    VAR
      ConsolPeriodInclInFiscalYear@1003 : Boolean;
    BEGIN
      ConsolPeriodInclInFiscalYear := (StartDate >= BusUnit."Starting Date") and (EndDate <= BusUnit."Ending Date");
      exit(ConsolPeriodInclInFiscalYear);
    END;

    LOCAL PROCEDURE CheckClosingDates@20(StartDate@1000 : Date;EndDate@1001 : Date);
    BEGIN
      if (StartDate = CLOSINGDATE(StartDate)) or
         (EndDate = CLOSINGDATE(EndDate))
      then begin
        if StartDate <> EndDate then
          ERROR(Text030);
      end;
    END;

    LOCAL PROCEDURE CheckBusUnitsDatesToFiscalYear@8(VAR BusUnit@1000 : Record "Business Unit");
    VAR
      AccountingPeriod@1001 : Record "Accounting Period";
    BEGIN
      with BusUnit do
        if ("Starting Date" <> 0D) or ("Ending Date" <> 0D) then begin
          TESTFIELD("Starting Date");
          TESTFIELD("Ending Date");
          if "Starting Date" > "Ending Date" then
            ERROR(
              Text032,FIELDCAPTION("Starting Date"),
              FIELDCAPTION("Ending Date"),"Company Name");

          AccountingPeriod.RESET;
          AccountingPeriod.CHANGECOMPANY("Company Name");
          if not AccountingPeriod.GET("Starting Date") then
            ERROR(
              Text031,
              FIELDCAPTION("Starting Date"),"Starting Date",TABLECAPTION,Code,"Company Name");

          if not AccountingPeriod."New Fiscal Year" then
            ERROR(
              Text031,
              FIELDCAPTION("Starting Date"),"Starting Date",TABLECAPTION,Code,"Company Name")
            ;

          if not AccountingPeriod.GET("Ending Date" + 1) then
            ERROR(
              Text031,
              FIELDCAPTION("Ending Date"),"Ending Date",TABLECAPTION,Code,"Company Name");

          if not AccountingPeriod."New Fiscal Year" then
            ERROR(
              Text031,
              FIELDCAPTION("Ending Date"),"Ending Date",TABLECAPTION,Code,"Company Name")
            ;
        end;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

