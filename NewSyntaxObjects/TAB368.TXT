OBJECT Table 368 Dimension Selection Buffer
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Dimension Selection Buffer;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Text30        ;CaptionML=ENU=Code }
    { 2   ;   ;Description         ;Text30        ;CaptionML=ENU=Description }
    { 3   ;   ;Selected            ;Boolean       ;OnValidate=BEGIN
                                                                "New Dimension Value Code" := '';
                                                                "Dimension Value Filter" := '';
                                                                Level := Level::" ";
                                                              END;

                                                   CaptionML=ENU=Selected }
    { 4   ;   ;New Dimension Value Code;Code20    ;TableRelation=IF (Code=CONST('G/L Account')) "G/L Account"."No."
                                                                 ELSE IF (Code=CONST('Business Unit')) "Business Unit".Code
                                                                 ELSE "Dimension Value".Code WHERE ("Dimension Code"=FIELD(Code));
                                                   OnValidate=BEGIN
                                                                Selected := true;
                                                              END;

                                                   CaptionML=ENU=New Dimension Value Code }
    { 5   ;   ;Dimension Value Filter;Code250     ;TableRelation=IF ("Filter Lookup Table No."=CONST(15)) "G/L Account"."No."
                                                                 ELSE IF ("Filter Lookup Table No."=CONST(220)) "Business Unit".Code
                                                                 ELSE IF ("Filter Lookup Table No."=CONST(841)) "Cash Flow Account"."No."
                                                                 ELSE IF ("Filter Lookup Table No."=CONST(840)) "Cash Flow Forecast"."No."
                                                                 ELSE "Dimension Value".Code WHERE ("Dimension Code"=FIELD(Code));
                                                   OnValidate=BEGIN
                                                                if (Level = Level::" ") and ("Dimension Value Filter" = '') then
                                                                  Selected := false
                                                                else
                                                                  Selected := true;
                                                              END;

                                                   ValidateTableRelation=false;
                                                   CaptionML=ENU=Dimension Value Filter }
    { 6   ;   ;Level               ;Option        ;OnValidate=BEGIN
                                                                if (Level = Level::" ") and ("Dimension Value Filter" = '') then
                                                                  Selected := false
                                                                else
                                                                  Selected := true;
                                                              END;

                                                   CaptionML=ENU=Level;
                                                   OptionCaptionML=ENU=" ,Level 1,Level 2,Level 3,Level 4";
                                                   OptionString=" ","Level 1","Level 2","Level 3","Level 4" }
    { 7   ;   ;Filter Lookup Table No.;Integer    ;InitValue=349;
                                                   CaptionML=ENU=Filter Lookup Table No.;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=true }
    {    ;Level,Code                               }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Another user has modified the selected dimensions for the %1 field after you retrieved it from the database.\';
      Text002@1002 : TextConst 'ENU="Enter your changes again in the Dimension Selection window by clicking the AssistButton on the %1 field. "';

    [External]
    PROCEDURE SetDimSelectionMultiple@4(ObjectType@1000 : Integer;ObjectID@1001 : Integer;VAR SelectedDimText@1002 : Text[250]);
    VAR
      SelectedDim@1006 : Record "Selected Dimension";
      Dim@1003 : Record Dimension;
      TempDimSelectionBuf@1004 : TEMPORARY Record "Dimension Selection Buffer";
      DimSelectionMultiple@1005 : Page "Dimension Selection-Multiple";
    BEGIN
      CLEAR(DimSelectionMultiple);
      if Dim.FIND('-') then
        repeat
          DimSelectionMultiple.InsertDimSelBuf(
            SelectedDim.GET(USERID,ObjectType,ObjectID,'',Dim.Code),
            Dim.Code,Dim.GetMLName(GLOBALLANGUAGE));
        until Dim.NEXT = 0;

      if DimSelectionMultiple.RUNMODAL = ACTION::OK then begin
        DimSelectionMultiple.GetDimSelBuf(TempDimSelectionBuf);
        SetDimSelection(ObjectType,ObjectID,'',SelectedDimText,TempDimSelectionBuf);
      end;
    END;

    [External]
    PROCEDURE SetDimSelectionChange@1(ObjectType@1000 : Integer;ObjectID@1001 : Integer;VAR SelectedDimText@1002 : Text[250]);
    VAR
      SelectedDim@1006 : Record "Selected Dimension";
      Dim@1003 : Record Dimension;
      TempDimSelectionBuf@1004 : TEMPORARY Record "Dimension Selection Buffer";
      DimSelectionChange@1005 : Page "Dimension Selection-Change";
    BEGIN
      CLEAR(DimSelectionChange);
      if Dim.FIND('-') then
        repeat
          DimSelectionChange.InsertDimSelBuf(
            SelectedDim.GET(USERID,ObjectType,ObjectID,'',Dim.Code),
            Dim.Code,Dim.GetMLName(GLOBALLANGUAGE),
            SelectedDim."New Dimension Value Code",
            SelectedDim."Dimension Value Filter");
        until Dim.NEXT = 0;

      if DimSelectionChange.RUNMODAL = ACTION::OK then begin
        DimSelectionChange.GetDimSelBuf(TempDimSelectionBuf);
        SetDimSelection(ObjectType,ObjectID,'',SelectedDimText,TempDimSelectionBuf);
      end;
    END;

    [External]
    PROCEDURE CompareDimText@2(ObjectType@1000 : Integer;ObjectID@1001 : Integer;AnalysisViewCode@1002 : Code[10];SelectedDimText@1003 : Text[250];DimTextFieldName@1004 : Text[100]);
    VAR
      SelectedDim@1005 : Record "Selected Dimension";
      SelectedDimTextFromDb@1006 : Text[250];
    BEGIN
      SelectedDimTextFromDb := '';
      SelectedDim.SETCURRENTKEY(
        "User ID","Object Type","Object ID","Analysis View Code",Level,"Dimension Code");
      SetDefaultRangeOnSelectedDimTable(SelectedDim,ObjectType,ObjectID,AnalysisViewCode);
      if SelectedDim.FIND('-') then
        repeat
          AddDimCodeToText(SelectedDim."Dimension Code",SelectedDimTextFromDb);
        until SelectedDim.NEXT = 0;
      if SelectedDimTextFromDb <> SelectedDimText then
        ERROR(
          Text000 +
          Text002,
          DimTextFieldName);
    END;

    LOCAL PROCEDURE AddDimCodeToText@3(DimCode@1000 : Code[20];VAR Text@1001 : Text[250]);
    BEGIN
      if Text = '' then
        Text := DimCode
      else
        if (STRLEN(Text) + STRLEN(DimCode)) <= (MAXSTRLEN(Text) - 4) then
          Text := STRSUBSTNO('%1;%2',Text,DimCode)
        else
          if COPYSTR(Text,STRLEN(Text) - 2,3) <> '...' then
            Text := STRSUBSTNO('%1;...',Text)
    END;

    [External]
    PROCEDURE SetDimSelection@5(ObjectType@1000 : Integer;ObjectID@1001 : Integer;AnalysisViewCode@1002 : Code[10];VAR SelectedDimText@1003 : Text[250];VAR DimSelectionBuf@1004 : Record "Dimension Selection Buffer");
    VAR
      SelectedDim@1005 : Record "Selected Dimension";
    BEGIN
      SetDefaultRangeOnSelectedDimTable(SelectedDim,ObjectType,ObjectID,AnalysisViewCode);
      SelectedDim.DELETEALL;
      SelectedDimText := '';
      DimSelectionBuf.SETCURRENTKEY(Level,Code);
      DimSelectionBuf.SETRANGE(Selected,true);
      if DimSelectionBuf.FIND('-') then begin
        repeat
          SelectedDim."User ID" := USERID;
          SelectedDim."Object Type" := ObjectType;
          SelectedDim."Object ID" := ObjectID;
          SelectedDim."Analysis View Code" := AnalysisViewCode;
          SelectedDim."Dimension Code" := DimSelectionBuf.Code;
          SelectedDim."New Dimension Value Code" := DimSelectionBuf."New Dimension Value Code";
          SelectedDim."Dimension Value Filter" := DimSelectionBuf."Dimension Value Filter";
          SelectedDim.Level := DimSelectionBuf.Level;
          SelectedDim.INSERT;
        until DimSelectionBuf.NEXT = 0;
        SelectedDimText := GetDimSelectionText(ObjectType,ObjectID,AnalysisViewCode);
      end;
    END;

    [External]
    PROCEDURE SetDimSelectionLevelGLAcc@40(ObjectType@1000 : Integer;ObjectID@1001 : Integer;AnalysisViewCode@1002 : Code[10];VAR SelectedDimText@1003 : Text[250]);
    VAR
      GLAcc@1007 : Record "G/L Account";
    BEGIN
      SetDimSelectionLevel(ObjectType,ObjectID,AnalysisViewCode,SelectedDimText,GLAcc.TABLECAPTION);
    END;

    [External]
    PROCEDURE SetDimSelectionLevelGLAccAutoSet@9(ObjectType@1000 : Integer;ObjectID@1001 : Integer;AnalysisViewCode@1002 : Code[10];VAR SelectedDimText@1003 : Text[250]);
    VAR
      GLAcc@1007 : Record "G/L Account";
      SelectedDim@1009 : Record "Selected Dimension";
      AnalysisView@1008 : Record "Analysis View";
      Dim@1006 : Record Dimension;
      TempDimSelectionBuf@1005 : TEMPORARY Record "Dimension Selection Buffer";
      DimSelectionLevel@1004 : Page "Dimension Selection-Level";
      SelectedDimLevel@1011 : Option;
      GetSelectedDim@1010 : Boolean;
    BEGIN
      CLEAR(DimSelectionLevel);
      if AnalysisView.GET(AnalysisViewCode) then begin
        if Dim.GET(AnalysisView."Dimension 1 Code") then begin
          GetSelectedDim := SelectedDim.GET(USERID,ObjectType,ObjectID,AnalysisViewCode,Dim.Code);
          if SelectedDim.Level <> SelectedDim.Level::" " then
            SelectedDimLevel := SelectedDim.Level
          else begin
            SelectedDimLevel := SelectedDim.Level::"Level 2";
            GetSelectedDim := true;
          end;
          DimSelectionLevel.InsertDimSelBuf(
            GetSelectedDim,
            Dim.Code,Dim.GetMLName(GLOBALLANGUAGE),
            SelectedDim."Dimension Value Filter",SelectedDimLevel);
        end;

        AddDimensions(Dim,SelectedDim,AnalysisView,ObjectType,ObjectID,AnalysisViewCode);

        GetSelectedDim := SelectedDim.GET(USERID,ObjectType,ObjectID,AnalysisViewCode,GLAcc.TABLECAPTION);
        if SelectedDim.Level <> SelectedDim.Level::" " then
          SelectedDimLevel := SelectedDim.Level
        else
          SelectedDimLevel := SelectedDim.Level::"Level 1";

        DimSelectionLevel.InsertDimSelBuf(
          true,
          GLAcc.TABLECAPTION,GLAcc.TABLECAPTION,
          SelectedDim."Dimension Value Filter",SelectedDimLevel);
      end;

      DimSelectionLevel.GetDimSelBuf(TempDimSelectionBuf);
      SetDimSelection(ObjectType,ObjectID,AnalysisViewCode,SelectedDimText,TempDimSelectionBuf);
    END;

    [External]
    PROCEDURE SetDimSelectionLevelCFAcc@7(ObjectType@1000 : Integer;ObjectID@1001 : Integer;AnalysisViewCode@1002 : Code[10];VAR SelectedDimText@1003 : Text[250]);
    VAR
      CFAcc@1007 : Record "Cash Flow Account";
    BEGIN
      SetDimSelectionLevel(ObjectType,ObjectID,AnalysisViewCode,SelectedDimText,CFAcc.TABLECAPTION);
    END;

    LOCAL PROCEDURE AddDimensions@19(Dim@1000 : Record Dimension;SelectedDim@1003 : Record "Selected Dimension";AnalysisView@1001 : Record "Analysis View";ObjectType@1006 : Integer;ObjectID@1005 : Integer;AnalysisViewCode@1004 : Code[10]);
    VAR
      DimSelectionLevel@1002 : Page "Dimension Selection-Level";
    BEGIN
      if Dim.GET(AnalysisView."Dimension 2 Code") then
        DimSelectionLevel.InsertDimSelBuf(
          SelectedDim.GET(USERID,ObjectType,ObjectID,AnalysisViewCode,Dim.Code),
          Dim.Code,Dim.GetMLName(GLOBALLANGUAGE),
          SelectedDim."Dimension Value Filter",SelectedDim.Level);

      if Dim.GET(AnalysisView."Dimension 3 Code") then
        DimSelectionLevel.InsertDimSelBuf(
          SelectedDim.GET(USERID,ObjectType,ObjectID,AnalysisViewCode,Dim.Code),
          Dim.Code,Dim.GetMLName(GLOBALLANGUAGE),
          SelectedDim."Dimension Value Filter",SelectedDim.Level);

      if Dim.GET(AnalysisView."Dimension 4 Code") then
        DimSelectionLevel.InsertDimSelBuf(
          SelectedDim.GET(USERID,ObjectType,ObjectID,AnalysisViewCode,Dim.Code),
          Dim.Code,Dim.GetMLName(GLOBALLANGUAGE),
          SelectedDim."Dimension Value Filter",SelectedDim.Level);
    END;

    LOCAL PROCEDURE SetDimSelectionLevel@8(ObjectType@1003 : Integer;ObjectID@1002 : Integer;AnalysisViewCode@1001 : Code[10];VAR SelectedDimText@1000 : Text[250];AccTableCaption@1009 : Text[30]);
    VAR
      SelectedDim@1007 : Record "Selected Dimension";
      AnalysisView@1004 : Record "Analysis View";
      Dim@1005 : Record Dimension;
      TempDimSelectionBuf@1006 : TEMPORARY Record "Dimension Selection Buffer";
      DimSelectionLevel@1008 : Page "Dimension Selection-Level";
    BEGIN
      CLEAR(DimSelectionLevel);
      if AnalysisView.GET(AnalysisViewCode) then begin
        if Dim.GET(AnalysisView."Dimension 1 Code") then
          DimSelectionLevel.InsertDimSelBuf(
            SelectedDim.GET(USERID,ObjectType,ObjectID,AnalysisViewCode,Dim.Code),
            Dim.Code,Dim.GetMLName(GLOBALLANGUAGE),
            SelectedDim."Dimension Value Filter",SelectedDim.Level);

        AddDimensions(Dim,SelectedDim,AnalysisView,ObjectType,ObjectID,AnalysisViewCode);

        DimSelectionLevel.InsertDimSelBuf(
          SelectedDim.GET(USERID,ObjectType,ObjectID,AnalysisViewCode,AccTableCaption),
          AccTableCaption,AccTableCaption,
          SelectedDim."Dimension Value Filter",SelectedDim.Level);
      end;

      if DimSelectionLevel.RUNMODAL = ACTION::OK then begin
        DimSelectionLevel.GetDimSelBuf(TempDimSelectionBuf);
        SetDimSelection(ObjectType,ObjectID,AnalysisViewCode,SelectedDimText,TempDimSelectionBuf);
      end;
    END;

    [External]
    PROCEDURE GetDimSelectionText@6(ObjectType@1000 : Integer;ObjectID@1001 : Integer;AnalysisViewCode@1002 : Code[10]) : Text[250];
    VAR
      SelectedDim@1003 : Record "Selected Dimension";
      SelectedDimText@1004 : Text[250];
    BEGIN
      SetDefaultRangeOnSelectedDimTable(SelectedDim,ObjectType,ObjectID,AnalysisViewCode);
      SelectedDim.SETCURRENTKEY("User ID","Object Type","Object ID","Analysis View Code",Level,"Dimension Code");
      with SelectedDim do begin
        if FIND('-') then
          repeat
            AddDimCodeToText("Dimension Code",SelectedDimText);
          until NEXT = 0;
      end;
      exit(SelectedDimText);
    END;

    LOCAL PROCEDURE SetDefaultRangeOnSelectedDimTable@10(VAR SelectedDim@1003 : Record "Selected Dimension";ObjectType@1002 : Integer;ObjectID@1001 : Integer;AnalysisViewCode@1000 : Code[10]);
    BEGIN
      SelectedDim.SETRANGE("User ID",USERID);
      SelectedDim.SETRANGE("Object Type",ObjectType);
      SelectedDim.SETRANGE("Object ID",ObjectID);
      SelectedDim.SETRANGE("Analysis View Code",AnalysisViewCode);
    END;

    BEGIN
    END.
  }
}

