OBJECT Page 802 Online Map Address Selector
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Online Map Address Selector;
    PageType=StandardDialog;
    OnOpenPage=BEGIN
                 OnlineMapSetup.GET;
                 Distance := OnlineMapSetup."Distance In";
                 Route := OnlineMapSetup.Route;
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1020000;1;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 1020006;2;Field     ;
                Name=LookupSelection;
                CaptionML=ENU=Table Selection;
                OptionCaptionML=ENU=" ,Bank,Contact,Customer,Employee,Job,Location,Resource,Vendor,Ship-to Address,Order Address";
                ApplicationArea=#Basic,#Suite;
                SourceExpr=LookupSelection;
                OnValidate=BEGIN
                             LookupSelectionOnAfterValidate;
                           END;
                            }

    { 1020001;2;Field     ;
                Name=LookupCode;
                CaptionML=ENU=Lookup Code;
                ToolTipML=ENU=Specifies a list of contact, customer, or location codes to choose from.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=LookupCode;
                OnValidate=BEGIN
                             SelectedRecPosition := LoadLocationLookup(SelectedTableNo,LookupCode,false);
                           END;

                OnLookup=BEGIN
                           SelectedRecPosition := LoadLocationLookup(SelectedTableNo,LookupCode,true);
                         END;
                          }

    { 1   ;2   ;Field     ;
                Name=Distance;
                CaptionML=ENU=Distance In;
                ToolTipML=ENU=Specifies if distances on the online map are shown in miles or kilometers.;
                OptionCaptionML=ENU=Miles,Kilometers;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Distance }

    { 3   ;2   ;Field     ;
                Name=Route;
                CaptionML=ENU=Route;
                OptionCaptionML=ENU=Quickest,Shortest;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Route }

  }
  CODE
  {
    VAR
      OnlineMapSetup@1002 : Record "Online Map Setup";
      SelectedRecPosition@1004 : Text[1000];
      LookupCode@1020001 : Code[20];
      LookupSelection@1020003 : '" ",Bank,Contact,Customer,Employee,Job,Location,Resource,Vendor,"Ship-to Address","Order Address"';
      Text001@1020007 : TextConst 'ENU=The selection that was chosen is not valid.';
      Text003@1020004 : TextConst 'ENU=The value %1 from Table ID %2 could not be found.';
      Distance@1000 : 'Miles,Kilometers';
      Route@1001 : 'Quickest,Shortest';
      SelectedTableNo@1007 : Integer;
      Text004@1009 : TextConst 'ENU=Table No. %1 is not set up.';

    [External]
    PROCEDURE GetTableNo@1020001() : Integer;
    BEGIN
      exit(SelectedTableNo);
    END;

    [External]
    PROCEDURE GetRecPosition@1020002() : Text[1000];
    BEGIN
      exit(SelectedRecPosition);
    END;

    [External]
    PROCEDURE SetTableNo@1020000();
    BEGIN
      case LookupSelection of
        LookupSelection::" ":
          SelectedTableNo := 0;
        LookupSelection::Bank:
          SelectedTableNo := DATABASE::"Bank Account";
        LookupSelection::Contact:
          SelectedTableNo := DATABASE::Contact;
        LookupSelection::Customer:
          SelectedTableNo := DATABASE::Customer;
        LookupSelection::Employee:
          SelectedTableNo := DATABASE::Employee;
        LookupSelection::Job:
          SelectedTableNo := DATABASE::Job;
        LookupSelection::Location:
          SelectedTableNo := DATABASE::Location;
        LookupSelection::Resource:
          SelectedTableNo := DATABASE::Resource;
        LookupSelection::Vendor:
          SelectedTableNo := DATABASE::Vendor;
        LookupSelection::"Ship-to Address":
          SelectedTableNo := DATABASE::"Ship-to Address";
        LookupSelection::"Order Address":
          SelectedTableNo := DATABASE::"Order Address";
        else
          ERROR(Text001);
      end;
    END;

    LOCAL PROCEDURE LoadLocationLookup@1020012(LoadTableNo@1020011 : Integer;VAR LookupCode@1020013 : Code[20];Lookup@1020014 : Boolean) : Text[1000];
    BEGIN
      case LoadTableNo of
        DATABASE::"Bank Account":
          exit(LoadBankAccount(LookupCode,Lookup));
        DATABASE::Contact:
          exit(LoadContact(LookupCode,Lookup));
        DATABASE::Customer:
          exit(LoadCustomer(LookupCode,Lookup));
        DATABASE::Employee:
          exit(LoadEmployee(LookupCode,Lookup));
        DATABASE::Job:
          exit(LoadJob(LookupCode,Lookup));
        DATABASE::Location:
          exit(LoadLocation(LookupCode,Lookup));
        DATABASE::Resource:
          exit(LoadResource(LookupCode,Lookup));
        DATABASE::Vendor:
          exit(LoadVendor(LookupCode,Lookup));
        DATABASE::"Ship-to Address":
          exit(LoadShipTo(LookupCode,Lookup));
        DATABASE::"Order Address":
          exit(LoadOrderAddress(LookupCode,Lookup));
        else
          ERROR(STRSUBSTNO(Text004,FORMAT(LoadTableNo)));
      end;
    END;

    LOCAL PROCEDURE LoadBankAccount@1020011(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      BankAccount@1020002 : Record "Bank Account";
      Response@1020003 : Boolean;
    BEGIN
      if LookUp then
        Response := PAGE.RUNMODAL(PAGE::"Bank Account List",BankAccount) = ACTION::LookupOK
      else
        Response := BankAccount.GET(LookUpCode);

      if Response then begin
        LookUpCode := BankAccount."No.";
        exit(BankAccount.GETPOSITION);
      end;
      ERROR(Text003,LookUpCode,DATABASE::"Bank Account");
    END;

    LOCAL PROCEDURE LoadContact@1020010(VAR LookUpCode@1020000 : Code[20];LookUp@1020001 : Boolean) : Text[1000];
    VAR
      Contact@1020002 : Record Contact;
      Response@1020003 : Boolean;
    BEGIN
      if LookUp then
        Response := PAGE.RUNMODAL(PAGE::"Contact List",Contact) = ACTION::LookupOK
      else
        Response := Contact.GET(LookUpCode);

      if Response then begin
        LookUpCode := Contact."No.";
        exit(Contact.GETPOSITION);
      end;
      ERROR(Text003,LookUpCode,DATABASE::Contact);
    END;

    LOCAL PROCEDURE LoadCustomer@1020009(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Customer@1020002 : Record Customer;
      Response@1020003 : Boolean;
    BEGIN
      if LookUp then
        Response := PAGE.RUNMODAL(PAGE::"Customer List",Customer) = ACTION::LookupOK
      else
        Response := Customer.GET(LookUpCode);

      if Response then begin
        LookUpCode := Customer."No.";
        exit(Customer.GETPOSITION);
      end;
      ERROR(Text003,LookUpCode,DATABASE::Customer);
    END;

    LOCAL PROCEDURE LoadEmployee@1020004(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Employee@1020002 : Record Employee;
      Response@1020003 : Boolean;
    BEGIN
      if LookUp then
        Response := PAGE.RUNMODAL(PAGE::"Employee List",Employee) = ACTION::LookupOK
      else
        Response := Employee.GET(LookUpCode);

      if Response then begin
        LookUpCode := Employee."No.";
        exit(Employee.GETPOSITION);
      end;
      ERROR(Text003,LookUpCode,DATABASE::Employee);
    END;

    LOCAL PROCEDURE LoadJob@1020006(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Job@1020002 : Record Job;
      Response@1020003 : Boolean;
    BEGIN
      if LookUp then
        Response := PAGE.RUNMODAL(PAGE::"Job List",Job) = ACTION::LookupOK
      else
        Response := Job.GET(LookUpCode);

      if Response then begin
        LookUpCode := Job."No.";
        exit(Job.GETPOSITION);
      end;
      ERROR(Text003,LookUpCode,DATABASE::Job);
    END;

    LOCAL PROCEDURE LoadLocation@1020007(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Location@1020002 : Record Location;
      Response@1020003 : Boolean;
    BEGIN
      if LookUp then
        Response := PAGE.RUNMODAL(PAGE::"Location List",Location) = ACTION::LookupOK
      else
        Response := Location.GET(LookUpCode);

      if Response then begin
        LookUpCode := Location.Code;
        exit(Location.GETPOSITION);
      end;
      ERROR(Text003,LookUpCode,DATABASE::Location);
    END;

    LOCAL PROCEDURE LoadResource@1020008(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Resource@1020002 : Record Resource;
      Response@1020003 : Boolean;
    BEGIN
      if LookUp then
        Response := PAGE.RUNMODAL(PAGE::"Resource List",Resource) = ACTION::LookupOK
      else
        Response := Resource.GET(LookUpCode);

      if Response then begin
        LookUpCode := Resource."No.";
        exit(Resource.GETPOSITION);
      end;
      ERROR(Text003,LookUpCode,DATABASE::Resource);
    END;

    LOCAL PROCEDURE LoadVendor@1020015(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      Vendor@1020002 : Record Vendor;
      Response@1020003 : Boolean;
    BEGIN
      if LookUp then
        Response := PAGE.RUNMODAL(PAGE::"Vendor List",Vendor) = ACTION::LookupOK
      else
        Response := Vendor.GET(LookUpCode);

      if Response then begin
        LookUpCode := Vendor."No.";
        exit(Vendor.GETPOSITION);
      end;
      ERROR(Text003,LookUpCode,DATABASE::Vendor);
    END;

    LOCAL PROCEDURE LoadShipTo@2(VAR LookUpCode@1020001 : Code[20];LookUp@1020000 : Boolean) : Text[1000];
    VAR
      ShipToAddress@1020002 : Record "Ship-to Address";
      Response@1020003 : Boolean;
    BEGIN
      if LookUp then
        Response := PAGE.RUNMODAL(PAGE::"Ship-to Address List",ShipToAddress) = ACTION::LookupOK
      else
        Response := ShipToAddress.GET(LookUpCode);

      if Response then begin
        LookUpCode := ShipToAddress.Code;
        exit(ShipToAddress.GETPOSITION);
      end;
      ERROR(Text003,LookUpCode,DATABASE::"Ship-to Address");
    END;

    LOCAL PROCEDURE LoadOrderAddress@4(VAR LookupCode@1000 : Code[20];LookUp@1001 : Boolean) : Text[1000];
    VAR
      OrderAddress@1003 : Record "Order Address";
      Response@1002 : Boolean;
    BEGIN
      if LookUp then
        Response := PAGE.RUNMODAL(PAGE::"Order Address List",OrderAddress) = ACTION::LookupOK
      else
        Response := OrderAddress.GET(LookupCode);

      if Response then begin
        LookupCode := OrderAddress.Code;
        exit(OrderAddress.GETPOSITION);
      end;
      ERROR(Text003,LookupCode,DATABASE::"Order Address");
    END;

    [External]
    PROCEDURE Getdefaults@1(VAR ActualDistance@1001 : 'Miles,Kilometers';VAR ActualRoute@1000 : 'Quickest,Shortest');
    BEGIN
      ActualDistance := Distance;
      ActualRoute := Route;
    END;

    LOCAL PROCEDURE LookupSelectionOnAfterValidate@19004184();
    BEGIN
      SetTableNo;
    END;

    BEGIN
    END.
  }
}

