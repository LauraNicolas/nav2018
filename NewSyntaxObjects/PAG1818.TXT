OBJECT Page 1818 Cash Flow Forecast Wizard
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Set Up Cash Flow Forecast;
    PageType=NavigatePage;
    OnInit=BEGIN
             LoadTopBanners;
           END;

    OnOpenPage=BEGIN
                 Step := Step::Start;
                 EnableControls(false);
                 UpdateFrequency := UpdateFrequency::Daily;
                 TaxablePeriod := TaxablePeriod::Quarterly;
                 LiquidFundsGLAccountFilter := GetLiquidFundsGLAccountFilter;
                 CortanaInteligenceEnabled := true;
               END;

    OnQueryClosePage=VAR
                       AssistedSetup@1000 : Record "Assisted Setup";
                     BEGIN
                       if CloseAction = ACTION::OK then
                         if AssistedSetup.GetStatus(PAGE::"Cash Flow Forecast Wizard") = AssistedSetup.Status::"Not Completed" then
                           if not CONFIRM(SetupNotCompletedQst,false) then
                             ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 2       ;    ;ActionContainer;
                      Name=ActionContainer2;
                      ActionContainerType=ActionItems }
      { 3       ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=BackActionEnabled;
                      InFooterBar=true;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(true);
                               END;
                                }
      { 4       ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NextActionEnabled;
                      InFooterBar=true;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextStep(false);
                               END;
                                }
      { 5       ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FinishActionEnabled;
                      InFooterBar=true;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 6   ;1   ;Group     ;
                Name=Group6;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 7   ;2   ;Field     ;
                Name=MediaResourcesStandard;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 8   ;1   ;Group     ;
                Name=Group8;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 9   ;2   ;Field     ;
                Name=MediaResourcesDone;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 10  ;1   ;Group     ;
                Name=Group10;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 11  ;2   ;Group     ;
                Name=Welcome to the setup of Cash Flow Forecasting;
                CaptionML=ENU=Welcome to the setup of Cash Flow Forecasting;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 12  ;3   ;Group     ;
                Name=Group12;
                Visible=FirstStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=The Cash Flow Forecast can help you manage your cash flow. In this guide, you will specify the general ledger accounts that you want to include in the forecast, and how often you want to update the forecast. If you do not want to set this up right now, close this page. }

    { 13  ;1   ;Group     ;
                Name=Group13;
                Visible=CreationStepVisible;
                GroupType=Group }

    { 14  ;2   ;Group     ;
                Name=Set up accounts and forecast frequency, and turn on or off predictions;
                CaptionML=ENU=Set up accounts and forecast frequency, and turn on or off predictions;
                Visible=CreationStepVisible;
                GroupType=Group }

    { 22  ;3   ;Group     ;
                Name=Group22;
                GroupType=Group;
                InstructionalTextML=ENU=Specify the accounts that you want to base the forecast on. We have suggested your cash accounts, but you can change that. }

    { 21  ;4   ;Field     ;
                Name=LiquidFundsGLAccountFilter;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=LiquidFundsGLAccountFilter;
                OnLookup=VAR
                           GLAccount@1002 : Record "G/L Account";
                           GLAccountList@1001 : Page "G/L Account List";
                           OldText@1000 : Text;
                         BEGIN
                           OldText := Text;
                           GLAccount.SETRANGE("Account Category",GLAccount."Account Category"::" ",GLAccount."Account Category"::Assets);
                           GLAccountList.SETTABLEVIEW(GLAccount);
                           GLAccountList.LOOKUPMODE(true);
                           if not (GLAccountList.RUNMODAL = ACTION::LookupOK) then
                             exit(false);

                           Text := OldText + GLAccountList.GetSelectionFilter;
                           exit(true);
                         END;

                ShowCaption=false }

    { 15  ;3   ;Group     ;
                Name=Group15;
                GroupType=Group;
                InstructionalTextML=ENU=How often would you like us to update your cash flow forecast? }

    { 16  ;4   ;Field     ;
                Name=UpdateFrequency;
                OptionCaptionML=ENU=Never,Daily,Weekly;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=UpdateFrequency;
                ShowCaption=false }

    { 36  ;2   ;Group     ;
                Name=Cortana Intelligence;
                CaptionML=ENU=Cortana Intelligence;
                GroupType=Group }

    { 32  ;3   ;Group     ;
                Name=CortanaIntelligenceForecastsDescription;
                CaptionML=ENU=Cortana Intelligence forecasts can help you anticipate and proactively address upcoming cash flow needs. If you are using Dynamics 365 for Finance and Operations, Business edition, Azure Machine Learning credentials are set automatically.;
                GroupType=Group }

    { 33  ;4   ;Field     ;
                Name=<CortanaInteligenceEnabled>;
                CaptionML=ENU=Enable Cortana Intelligence;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CortanaInteligenceEnabled;
                ShowCaption=true }

    { 38  ;1   ;Group     ;
                Name=Group38;
                Visible=CortanaStepVisible;
                GroupType=Group }

    { 37  ;2   ;Group     ;
                Name=If you have your own Machine Learning service, enter the API URL and API key for the service and use that instead.;
                CaptionML=ENU=If you have your own Machine Learning service, enter the API URL and API key for the service and use that instead.;
                GroupType=Group }

    { 34  ;3   ;Field     ;
                Name=APIURL;
                CaptionML=ENU=API URL;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=APIURL;
                Visible=CortanaInteligenceEnabled;
                Editable=CortanaInteligenceEnabled }

    { 35  ;3   ;Field     ;
                Name=APIKEY;
                CaptionML=ENU=API Key;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=APIKEY;
                Visible=CortanaInteligenceEnabled;
                Editable=CortanaInteligenceEnabled }

    { 26  ;1   ;Group     ;
                Name=Group26;
                Visible=TaxStepVisible;
                GroupType=Group }

    { 27  ;2   ;Group     ;
                Name=Group27;
                CaptionML=ENU=Welcome to the setup of Cash Flow Forecasting;
                Visible=TaxStepVisible;
                GroupType=Group }

    { 31  ;3   ;Group     ;
                Name=Group31;
                GroupType=Group;
                InstructionalTextML=ENU=How often must your company pay taxes? }

    { 30  ;4   ;Field     ;
                Name=TaxablePeriod;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TaxablePeriod;
                ShowCaption=false }

    { 29  ;3   ;Group     ;
                Name=Group29;
                GroupType=Group;
                InstructionalTextML=ENU=What is the payment window for paying your taxes? For example, if your payment window is 20 days, specify 20D. }

    { 28  ;4   ;Field     ;
                Name=TaxPaymentWindow;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TaxPaymentWindow;
                ShowCaption=false }

    { 25  ;3   ;Group     ;
                Name=Group25;
                GroupType=Group;
                InstructionalTextML=ENU=Which type of account do you pay your taxes to? }

    { 24  ;4   ;Field     ;
                Name=DummyCashFlowSetup."Tax Bal. Account Type";
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DummyCashFlowSetup."Tax Bal. Account Type";
                OnValidate=BEGIN
                             DummyCashFlowSetup.EmptyTaxBalAccountIfTypeChanged(CurrentTaxBalAccountType);
                             CurrentTaxBalAccountType := DummyCashFlowSetup."Tax Bal. Account Type";
                             TaxAccountValidType := DummyCashFlowSetup.HasValidTaxAccountInfo;
                             CurrPage.UPDATE;
                           END;

                ShowCaption=false }

    { 23  ;3   ;Group     ;
                Name=Group23;
                Visible=TaxAccountValidType;
                GroupType=Group;
                InstructionalTextML=ENU=What is the number of the account that you pay your taxes to? }

    { 20  ;4   ;Field     ;
                Name=DummyCashFlowSetup."Tax Bal. Account No.";
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DummyCashFlowSetup."Tax Bal. Account No.";
                OnLookup=VAR
                           Vendor@1000 : Record Vendor;
                           GLAccount@1003 : Record "G/L Account";
                           Result@1002 : Boolean;
                         BEGIN
                           case DummyCashFlowSetup."Tax Bal. Account Type" of
                             DummyCashFlowSetup."Tax Bal. Account Type"::Vendor:
                               begin
                                 if Vendor.GET(Text) then;
                                 Result := PAGE.RUNMODAL(PAGE::"Vendor List",Vendor) = ACTION::LookupOK;
                                 Text := Vendor."No.";
                               end;
                             DummyCashFlowSetup."Tax Bal. Account Type"::"G/L Account":
                               begin
                                 if GLAccount.GET(Text) then;
                                 Result := PAGE.RUNMODAL(PAGE::"G/L Account List",GLAccount) = ACTION::LookupOK;
                                 Text := GLAccount."No.";
                               end;
                           end;

                           exit(Result);
                         END;

                ShowCaption=false }

    { 17  ;1   ;Group     ;
                Name=Group17;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 18  ;2   ;Group     ;
                Name=That's it!;
                CaptionML=ENU=That's it!;
                GroupType=Group }

    { 19  ;3   ;Group     ;
                Name=Group19;
                GroupType=Group;
                InstructionalTextML=ENU=When you choose Finish, cash flow forecasting is set up for you. The forecast is shown in a chart on your Home page. If it does not show a forecast yet, you might have to refresh the page. }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1000 : Record "Media Repository";
      MediaRepositoryDone@1001 : Record "Media Repository";
      MediaResourcesStandard@1025 : Record "Media Resources";
      MediaResourcesDone@1024 : Record "Media Resources";
      DummyCashFlowSetup@1019 : Record "Cash Flow Setup";
      Step@1002 : 'Start,Creation,Cortana,Tax,Finish';
      TopBannerVisible@1003 : Boolean;
      FirstStepVisible@1004 : Boolean;
      CreationStepVisible@1005 : Boolean;
      TaxStepVisible@1016 : Boolean;
      FinalStepVisible@1006 : Boolean;
      FinishActionEnabled@1007 : Boolean;
      BackActionEnabled@1008 : Boolean;
      NextActionEnabled@1009 : Boolean;
      UpdateFrequency@1010 : 'Never,Daily,Weekly';
      ExistingSetupWillBeDeletedQst@1011 : TextConst 'ENU=The existing cash flow forecast setup will be deleted. Are you sure you want to continue?';
      LiquidFundsGLAccountFilter@1012 : Code[250];
      SetupNotCompletedQst@1013 : TextConst 'ENU=Setup of cash flow forecast has not been completed.\\Are you sure that you want to exit?';
      TaxPaymentWindow@1014 : DateFormula;
      TaxablePeriod@1015 : 'Monthly,Quarterly,"Accounting Period",Yearly';
      TaxAccountValidType@1018 : Boolean;
      CurrentTaxBalAccountType@1017 : Option;
      CortanaInteligenceEnabled@1020 : Boolean;
      APIURL@1021 : Text[250];
      APIKEY@1022 : Text[250];
      CortanaStepVisible@1023 : Boolean;

    LOCAL PROCEDURE EnableControls@1(Backwards@1001 : Boolean);
    VAR
      CashFlowForecast@1000 : Record "Cash Flow Forecast";
    BEGIN
      if (Step = Step::Creation) and not Backwards then
        if not CashFlowForecast.ISEMPTY then
          if not CONFIRM(ExistingSetupWillBeDeletedQst) then
            CurrPage.CLOSE;

      ResetControls;

      case Step of
        Step::Start:
          ShowStartStep;
        Step::Creation:
          ShowCreationStep;
        Step::Cortana:
          ShowCortanaStep;
        Step::Tax:
          ShowTaxStep;
        Step::Finish:
          ShowFinalStep;
      end;
    END;

    LOCAL PROCEDURE FinishAction@2();
    VAR
      AssistedSetup@1001 : Record "Assisted Setup";
      CashFlowSetup@1002 : Record "Cash Flow Setup";
      CashFlowManagement@1000 : Codeunit "Cash Flow Management";
    BEGIN
      CashFlowManagement.SetupCashFlow(LiquidFundsGLAccountFilter);

      CashFlowSetup.UpdateTaxPaymentInfo(TaxablePeriod,TaxPaymentWindow,
        DummyCashFlowSetup."Tax Bal. Account Type",DummyCashFlowSetup."Tax Bal. Account No.");

      CashFlowSetup.GET;
      CashFlowSetup.VALIDATE("Cortana Intelligence Enabled",CortanaInteligenceEnabled);
      CashFlowSetup.VALIDATE("API URL",APIURL);
      CashFlowSetup.SaveUserDefinedAPIKey(APIKEY);
      CashFlowSetup.VALIDATE("Automatic Update Frequency",UpdateFrequency);
      CashFlowSetup.MODIFY;

      CashFlowManagement.UpdateCashFlowForecast(CortanaInteligenceEnabled);
      AssistedSetup.SetStatus(PAGE::"Cash Flow Forecast Wizard",AssistedSetup.Status::Completed);
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@3(Backwards@1000 : Boolean);
    BEGIN
      if Backwards then
        // Skip Cortana setup page if it is SaaS or Cortana is disabled
        if (Step = Step::Tax) and (not CortanaInteligenceEnabled or OnSaaS) then
          Step := Step - 2
        else
          Step := Step - 1
      else
        // Skip Cortana setup page if it is SaaS or Cortana is disabled
        if (Step = Step::Creation) and (not CortanaInteligenceEnabled or OnSaaS) then
          Step := Step + 2
        else
          Step := Step + 1;

      EnableControls(Backwards);
    END;

    LOCAL PROCEDURE ShowStartStep@4();
    BEGIN
      FirstStepVisible := true;

      FinishActionEnabled := false;
      BackActionEnabled := false;
    END;

    LOCAL PROCEDURE ShowCreationStep@5();
    BEGIN
      CreationStepVisible := true;
      CortanaStepVisible := false;
      FinishActionEnabled := false;
    END;

    LOCAL PROCEDURE ShowTaxStep@13();
    BEGIN
      TaxStepVisible := true;

      FinishActionEnabled := false;
    END;

    LOCAL PROCEDURE ShowFinalStep@6();
    BEGIN
      FinalStepVisible := true;
      NextActionEnabled := false;
    END;

    LOCAL PROCEDURE ShowCortanaStep@17();
    BEGIN
      CortanaStepVisible := true;

      FinishActionEnabled := false;
    END;

    LOCAL PROCEDURE ResetControls@7();
    BEGIN
      FinishActionEnabled := true;
      BackActionEnabled := true;
      NextActionEnabled := true;

      TaxStepVisible := false;
      FirstStepVisible := false;
      CreationStepVisible := false;
      FinalStepVisible := false;
      CortanaStepVisible := false;
    END;

    LOCAL PROCEDURE LoadTopBanners@8();
    BEGIN
      if MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE)) and
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE))
      then
        if MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") and
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        then
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE GetLiquidFundsGLAccountFilter@9() : Code[250];
    VAR
      CashFlowAccount@1000 : Record "Cash Flow Account";
      CashFlowManagement@1001 : Codeunit "Cash Flow Management";
    BEGIN
      if CashFlowAccount.GET(FORMAT(CashFlowAccount."Source Type"::"Liquid Funds",20)) then
        if CashFlowAccount."G/L Account Filter" <> '' then
          exit(CashFlowAccount."G/L Account Filter");

      exit(COPYSTR(CashFlowManagement.GetCashAccountFilter,1,250));
    END;

    LOCAL PROCEDURE OnSaaS@12() : Boolean;
    VAR
      PermissionManager@1000 : Codeunit "Permission Manager";
    BEGIN
      exit(PermissionManager.SoftwareAsAService)
    END;

    BEGIN
    END.
  }
}

