OBJECT Report 952 Suggest Job Jnl. Lines
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Suggest Job Jnl. Lines;
    ProcessingOnly=true;
    OnPostReport=VAR
                   NoSeriesMgt@1002 : Codeunit NoSeriesManagement;
                   TimeSheetMgt@1003 : Codeunit "Time Sheet Management";
                   NextDocNo@1001 : Code[20];
                   LineNo@1000 : Integer;
                   QtyToPost@1004 : Decimal;
                 BEGIN
                   DateFilter := TimeSheetMgt.GetDateFilter(StartingDate,EndingDate);
                   FillTimeSheetLineBuffer;

                   if TempTimeSheetLine.FINDSET then begin
                     JobJnlLine.LOCKTABLE;
                     JobJnlTemplate.GET(JobJnlLine."Journal Template Name");
                     JobJnlBatch.GET(JobJnlLine."Journal Template Name",JobJnlLine."Journal Batch Name");
                     if JobJnlBatch."No. Series" = '' then
                       NextDocNo := ''
                     else
                       NextDocNo := NoSeriesMgt.GetNextNo(JobJnlBatch."No. Series",TempTimeSheetLine."Time Sheet Starting Date",false);

                     JobJnlLine.SETRANGE("Journal Template Name",JobJnlLine."Journal Template Name");
                     JobJnlLine.SETRANGE("Journal Batch Name",JobJnlLine."Journal Batch Name");
                     if JobJnlLine.FINDLAST then;
                     LineNo := JobJnlLine."Line No.";

                     repeat
                       TimeSheetHeader.GET(TempTimeSheetLine."Time Sheet No.");
                       TimeSheetDetail.SETRANGE("Time Sheet No.",TempTimeSheetLine."Time Sheet No.");
                       TimeSheetDetail.SETRANGE("Time Sheet Line No.",TempTimeSheetLine."Line No.");
                       if DateFilter <> '' then
                         TimeSheetDetail.SETFILTER(Date,DateFilter);
                       TimeSheetDetail.SETFILTER(Quantity,'<>0');
                       TimeSheetDetail.SETRANGE(Posted,false);
                       if TimeSheetDetail.FINDSET then
                         repeat
                           QtyToPost := TimeSheetDetail.GetMaxQtyToPost;
                           if QtyToPost <> 0 then begin
                             JobJnlLine.INIT;
                             LineNo := LineNo + 10000;
                             JobJnlLine."Line No." := LineNo;
                             JobJnlLine."Time Sheet No." := TimeSheetDetail."Time Sheet No.";
                             JobJnlLine."Time Sheet Line No." := TimeSheetDetail."Time Sheet Line No.";
                             JobJnlLine."Time Sheet Date" := TimeSheetDetail.Date;
                             JobJnlLine.VALIDATE("Job No.",TimeSheetDetail."Job No.");
                             JobJnlLine."Source Code" := JobJnlTemplate."Source Code";
                             if TimeSheetDetail."Job Task No." <> '' then
                               JobJnlLine.VALIDATE("Job Task No.",TimeSheetDetail."Job Task No.");
                             JobJnlLine.VALIDATE(Type,JobJnlLine.Type::Resource);
                             JobJnlLine.VALIDATE("No.",TimeSheetHeader."Resource No.");
                             if TempTimeSheetLine."Work Type Code" <> '' then
                               JobJnlLine.VALIDATE("Work Type Code",TempTimeSheetLine."Work Type Code");
                             JobJnlLine.VALIDATE("Posting Date",TimeSheetDetail.Date);
                             JobJnlLine."Document No." := NextDocNo;
                             NextDocNo := INCSTR(NextDocNo);
                             JobJnlLine."Posting No. Series" := JobJnlBatch."Posting No. Series";
                             JobJnlLine.Description := TempTimeSheetLine.Description;
                             JobJnlLine.VALIDATE(Quantity,QtyToPost);
                             JobJnlLine.VALIDATE(Chargeable,TempTimeSheetLine.Chargeable);
                             JobJnlLine."Reason Code" := JobJnlBatch."Reason Code";
                             JobJnlLine.INSERT;
                           end;
                         until TimeSheetDetail.NEXT = 0;
                     until TempTimeSheetLine.NEXT = 0;
                   end;
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 2   ;2   ;Field     ;
                  Name=StartingDate;
                  CaptionML=ENU=Starting Date;
                  ToolTipML=ENU=Specifies the date from which the report or batch job processes information.;
                  ApplicationArea=#Jobs;
                  SourceExpr=StartingDate }

      { 1   ;2   ;Field     ;
                  Name=EndingDate;
                  CaptionML=ENU=Ending Date;
                  ToolTipML=ENU=Specifies the date to which the report or batch job processes information.;
                  ApplicationArea=#Jobs;
                  SourceExpr=EndingDate }

      { 3   ;2   ;Field     ;
                  Name=ResourceNoFilter;
                  CaptionML=ENU=Resource No. Filter;
                  ToolTipML=ENU=Specifies the resource number that the batch job will suggest job lines for.;
                  ApplicationArea=#Jobs;
                  SourceExpr=ResourceNoFilter;
                  TableRelation=Resource }

      { 4   ;2   ;Field     ;
                  Name=JobNoFilter;
                  CaptionML=ENU=Job No. Filter;
                  ToolTipML=ENU=Specifies a filter for the job numbers that will be included in the report.;
                  ApplicationArea=#Jobs;
                  SourceExpr=JobNoFilter;
                  TableRelation=Job }

      { 5   ;2   ;Field     ;
                  Name=JobTaskNoFilter;
                  CaptionML=ENU=Job Task No. Filter;
                  ToolTipML=ENU=Specifies a filter for the job task numbers that will be included in the report.;
                  ApplicationArea=#Jobs;
                  SourceExpr=JobTaskNoFilter;
                  OnLookup=VAR
                             JobTask@1000 : Record "Job Task";
                           BEGIN
                             JobTask.FILTERGROUP(2);
                             if JobNoFilter <> '' then
                               JobTask.SETFILTER("Job No.",JobNoFilter);
                             JobTask.FILTERGROUP(0);
                             if PAGE.RUNMODAL(PAGE::"Job Task List",JobTask) = ACTION::LookupOK then
                               JobTask.TESTFIELD("Job Task Type",JobTask."Job Task Type"::Posting);
                             JobTaskNoFilter := JobTask."Job Task No.";
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      JobJnlLine@1012 : Record "Job Journal Line";
      JobJnlBatch@1011 : Record "Job Journal Batch";
      JobJnlTemplate@1010 : Record "Job Journal Template";
      TimeSheetHeader@1009 : Record "Time Sheet Header";
      TimeSheetLine@1008 : Record "Time Sheet Line";
      TempTimeSheetLine@1007 : TEMPORARY Record "Time Sheet Line";
      TimeSheetDetail@1006 : Record "Time Sheet Detail";
      ResourceNoFilter@1005 : Code[1024];
      JobNoFilter@1013 : Code[1024];
      JobTaskNoFilter@1015 : Code[1024];
      StartingDate@1001 : Date;
      EndingDate@1000 : Date;
      DateFilter@1002 : Text[30];

    [External]
    PROCEDURE SetJobJnlLine@1(NewJobJnlLine@1000 : Record "Job Journal Line");
    BEGIN
      JobJnlLine := NewJobJnlLine;
    END;

    [External]
    PROCEDURE InitParameters@2(NewJobJnlLine@1000 : Record "Job Journal Line";NewResourceNoFilter@1003 : Code[1024];NewJobNoFilter@1005 : Code[1024];NewJobTaskNoFilter@1004 : Code[1024];NewStartingDate@1001 : Date;NewEndingDate@1002 : Date);
    BEGIN
      JobJnlLine := NewJobJnlLine;
      ResourceNoFilter := NewResourceNoFilter;
      JobNoFilter := NewJobNoFilter;
      JobTaskNoFilter := NewJobTaskNoFilter;
      StartingDate := NewStartingDate;
      EndingDate := NewEndingDate;
    END;

    LOCAL PROCEDURE FillTimeSheetLineBuffer@3();
    BEGIN
      if ResourceNoFilter <> '' then
        TimeSheetHeader.SETFILTER("Resource No.",ResourceNoFilter);
      if DateFilter <> '' then begin
        TimeSheetHeader.SETFILTER("Starting Date",DateFilter);
        TimeSheetHeader.SETFILTER("Starting Date",'..%1',TimeSheetHeader.GETRANGEMAX("Starting Date"));
        TimeSheetHeader.SETFILTER("Ending Date",DateFilter);
        TimeSheetHeader.SETFILTER("Ending Date",'%1..',TimeSheetHeader.GETRANGEMIN("Ending Date"));
      end;

      if TimeSheetHeader.FINDSET then
        repeat
          TimeSheetLine.SETRANGE("Time Sheet No.",TimeSheetHeader."No.");
          TimeSheetLine.SETRANGE(Type,TimeSheetLine.Type::Job);
          TimeSheetLine.SETRANGE(Status,TimeSheetLine.Status::Approved);
          if JobNoFilter <> '' then
            TimeSheetLine.SETFILTER("Job No.",JobNoFilter);
          if JobTaskNoFilter <> '' then
            TimeSheetLine.SETFILTER("Job Task No.",JobTaskNoFilter);
          TimeSheetLine.SETRANGE(Posted,false);
          if TimeSheetLine.FINDSET then
            repeat
              TempTimeSheetLine := TimeSheetLine;
              TempTimeSheetLine.INSERT;
            until TimeSheetLine.NEXT = 0;
        until TimeSheetHeader.NEXT = 0;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

