OBJECT Codeunit 9701 Cue Setup
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Cue Setup"=r;
    SingleInstance=true;
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [External]
    PROCEDURE GetCustomizedCueStyle@2(TableId@1001 : Integer;FieldId@1002 : Integer;CueValue@1004 : Decimal) : Text;
    VAR
      CueSetup@1000 : Record "Cue Setup";
      Style@1005 : Option;
    BEGIN
      Style := GetCustomizedCueStyleOption(TableId,FieldId,CueValue);
      exit(CueSetup.ConvertStyleToStyleText(Style));
    END;

    [External]
    PROCEDURE OpenCustomizePageForCurrentUser@1(TableId@1000 : Integer);
    VAR
      TempCueSetupRecord@1003 : TEMPORARY Record "Cue Setup";
    BEGIN
      // Set TableNo in filter group 4, which is invisible and unchangeable for the user.
      // The user should only be able to set personal styles/thresholds, and only for the given table.
      TempCueSetupRecord.FILTERGROUP(4);
      TempCueSetupRecord.SETRANGE("Table ID",TableId);
      PAGE.RUNMODAL(PAGE::"Cue Setup End User",TempCueSetupRecord);
    END;

    [External]
    PROCEDURE PopulateTempCueSetupRecords@3(VAR TempCueSetupPageSourceRec@1002 : TEMPORARY Record "Cue Setup");
    VAR
      CueSetup@1001 : Record "Cue Setup";
      Field@1000 : Record Field;
    BEGIN
      // Populate temporary records with appropriate records from the real table.
      CueSetup.COPYFILTERS(TempCueSetupPageSourceRec);
      CueSetup.SETFILTER("User Name",'%1|%2',USERID,'');

      // Insert user specific records and company wide records.
      CueSetup.ASCENDING := false;
      if CueSetup.FINDSET then begin
        repeat
          TempCueSetupPageSourceRec.TRANSFERFIELDS(CueSetup);

          if TempCueSetupPageSourceRec."User Name" = '' then
            TempCueSetupPageSourceRec.Personalized := false
          else
            TempCueSetupPageSourceRec.Personalized := true;

          TempCueSetupPageSourceRec."User Name" := USERID;
          if TempCueSetupPageSourceRec.INSERT then;
        until CueSetup.NEXT = 0;
      end;

      // Insert default records
      // Look up in the Fields virtual table
      // Filter on Table No=Table No and Type=Decimal|Integer. This should give us approximately the
      // fields that are "valid" for a cue control.
      Field.SETFILTER(TableNo,TempCueSetupPageSourceRec.GETFILTER("Table ID"));
      Field.SETFILTER(Type,'%1|%2',Field.Type::Decimal,Field.Type::Integer);
      if Field.FINDSET then begin
        repeat
          if not TempCueSetupPageSourceRec.GET(USERID,Field.TableNo,Field."No.") then begin
            TempCueSetupPageSourceRec.INIT;
            TempCueSetupPageSourceRec."User Name" := USERID;
            TempCueSetupPageSourceRec."Table ID" := Field.TableNo;
            TempCueSetupPageSourceRec."Field No." := Field."No.";
            TempCueSetupPageSourceRec.Personalized := false;
            TempCueSetupPageSourceRec.INSERT;
          end;
        until Field.NEXT = 0;

        // Clear last filter
        TempCueSetupPageSourceRec.SETRANGE("Field No.");
      end;
    END;

    [External]
    PROCEDURE CopyTempCueSetupRecordsToTable@6(VAR TempCueSetupPageSourceRec@1000 : TEMPORARY Record "Cue Setup");
    VAR
      CueSetup@1001 : Record "Cue Setup";
    BEGIN
      if TempCueSetupPageSourceRec.FINDSET then begin
        repeat
          if TempCueSetupPageSourceRec.Personalized then begin
            CueSetup.TRANSFERFIELDS(TempCueSetupPageSourceRec);
            if CueSetup.FIND then begin
              CueSetup.TRANSFERFIELDS(TempCueSetupPageSourceRec);
              // Personalized field contains tempororaty property we never save it in the database.
              CueSetup.Personalized := false;
              CueSetup.MODIFY
            end else begin
              // Personalized field contains tempororaty property we never save it in the database.
              CueSetup.Personalized := false;
              CueSetup.INSERT;
            end;
          end else begin
            CueSetup.TRANSFERFIELDS(TempCueSetupPageSourceRec);
            if CueSetup.DELETE then;
          end;
        until TempCueSetupPageSourceRec.NEXT = 0;
      end;
    END;

    [External]
    PROCEDURE ValidatePersonalizedField@10(VAR TempCueSetupPageSourceRec@1000 : TEMPORARY Record "Cue Setup");
    VAR
      CueSetup@1001 : Record "Cue Setup";
    BEGIN
      if TempCueSetupPageSourceRec.Personalized = false then
        if CueSetup.GET('',TempCueSetupPageSourceRec."Table ID",TempCueSetupPageSourceRec."Field No.") then begin
          // Revert back to company default if present.
          TempCueSetupPageSourceRec."Low Range Style" := CueSetup."Low Range Style";
          TempCueSetupPageSourceRec."Threshold 1" := CueSetup."Threshold 1";
          TempCueSetupPageSourceRec."Middle Range Style" := CueSetup."Middle Range Style";
          TempCueSetupPageSourceRec."Threshold 2" := CueSetup."Threshold 2";
          TempCueSetupPageSourceRec."High Range Style" := CueSetup."High Range Style";
        end else begin
          // Revert to "no values".
          TempCueSetupPageSourceRec."Low Range Style" := TempCueSetupPageSourceRec."Low Range Style"::None;
          TempCueSetupPageSourceRec."Threshold 1" := 0;
          TempCueSetupPageSourceRec."Middle Range Style" := TempCueSetupPageSourceRec."Middle Range Style"::None;
          TempCueSetupPageSourceRec."Threshold 2" := 0;
          TempCueSetupPageSourceRec."High Range Style" := TempCueSetupPageSourceRec."High Range Style"::None;
        end;
    END;

    LOCAL PROCEDURE GetCustomizedCueStyleOption@5(TableId@1003 : Integer;FieldNo@1001 : Integer;CueValue@1000 : Decimal) : Integer;
    VAR
      CueSetup@1002 : Record "Cue Setup";
    BEGIN
      if FindCueSetup(CueSetup,TableId,FieldNo) then
        exit(CueSetup.GetStyleForValue(CueValue));

      exit(CueSetup."Low Range Style"::None);
    END;

    LOCAL PROCEDURE FindCueSetup@4(VAR CueSetup@1000 : Record "Cue Setup";TableId@1001 : Integer;FieldNo@1002 : Integer) : Boolean;
    BEGIN
      CueSetup.SETRANGE("Table ID",TableId);
      CueSetup.SETRANGE("Field No.",FieldNo);

      // First see if we have a record for the current user
      CueSetup.SETRANGE("User Name",USERID);
      if not CueSetup.FINDFIRST then begin
        // We didn't, so see if we have a record for all users
        CueSetup.SETRANGE("User Name",'');
        if not CueSetup.FINDFIRST then
          exit(false)
      end;

      exit(true);
    END;

    BEGIN
    END.
  }
}

