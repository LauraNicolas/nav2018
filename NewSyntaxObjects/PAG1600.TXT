OBJECT Page 1600 Outlook Mail Engine
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Outlook Mail Engine;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    SourceTable="Office Add-in Context";
    DelayedInsert=false;
    PageType=Card;
    SourceTableTemporary=true;
    OnOpenPage=VAR
                 OfficeHost@1000 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Hosts.OfficeHost" RUNONCLIENT;
               BEGIN
                 if OfficeHost.IsAvailable then begin
                   OfficeHost := OfficeHost.Create;
                   OfficeMgt.InitializeHost(OfficeHost,OfficeHost.HostType);
                 end;

                 GetDetailsFromFilters;
                 if Email = 'donotreply@contoso.com' then
                   PAGE.RUN(PAGE::"Office Welcome Dlg")
                 else
                   OfficeMgt.InitializeContext(Rec);

                 CurrPage.CLOSE;
                 OfficeMgt.CloseEnginePage;
               END;

    ActionList=ACTIONS
    {
      { 3       ;    ;ActionContainer;
                      Name=ActionContainer3;
                      ActionContainerType=ActionItems }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=Content;
                ContainerType=ContentArea }

    { 7   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Email;
                ExtendedDatatype=E-Mail;
                ToolTipML=ENU=Specifies the email address of the Outlook contact.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Email;
                ImplicitType=Text80 }

    { 5   ;2   ;Field     ;
                Name=Name;
                ToolTipML=ENU=Specifies the display name of the Outlook contact.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name;
                ImplicitType=Text250 }

    { 6   ;2   ;Field     ;
                Name=Document Type;
                ToolTipML=ENU=Specifies the type that the involved document belongs to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type";
                ImplicitType=Text20 }

    { 8   ;2   ;Field     ;
                Name=Document No.;
                ToolTipML=ENU=Specifies the number of the involved document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                ImplicitType=Code250 }

  }
  CODE
  {
    VAR
      OfficeMgt@1004 : Codeunit "Office Management";

    LOCAL PROCEDURE GetDetailsFromFilters@1001();
    VAR
      RecRef@1001 : RecordRef;
      i@1000 : Integer;
    BEGIN
      RecRef.GETTABLE(Rec);
      for i := 1 to RecRef.FIELDCOUNT do
        ParseFilter(RecRef.FIELDINDEX(i));
      RecRef.SETTABLE(Rec);
    END;

    LOCAL PROCEDURE ParseFilter@1014(FieldRef@1003 : FieldRef);
    VAR
      FilterPrefixRegEx@1002 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.RegularExpressions.Regex";
      SingleQuoteRegEx@1001 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.RegularExpressions.Regex";
      Filter@1000 : Text;
      OptionValue@1004 : Integer;
    BEGIN
      FilterPrefixRegEx := FilterPrefixRegEx.Regex('^@\*([^\\]+)\*$');
      SingleQuoteRegEx := SingleQuoteRegEx.Regex('^''([^\\]+)''$');

      Filter := FieldRef.GETFILTER;
      Filter := FilterPrefixRegEx.Replace(Filter,'$1');
      Filter := SingleQuoteRegEx.Replace(Filter,'$1');
      if Filter <> '' then begin
        if FORMAT(FieldRef.TYPE) = 'Option' then
          while true do begin
            OptionValue += 1;
            if UPPERCASE(Filter) = UPPERCASE(SELECTSTR(OptionValue,FieldRef.OPTIONCAPTION)) then begin
              FieldRef.VALUE := OptionValue - 1;
              exit;
            end;
          end
        else
          FieldRef.VALUE(Filter);
      end;
    END;

    BEGIN
    END.
  }
}

