OBJECT Table 710 Activity Log
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Activity Log;
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Integer       ;AutoIncrement=true;
                                                   CaptionML=ENU=ID }
    { 2   ;   ;Record ID           ;RecordID      ;CaptionML=ENU=Record ID }
    { 3   ;   ;Activity Date       ;DateTime      ;CaptionML=ENU=Activity Date }
    { 4   ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit "User Management";
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=false;
                                                   CaptionML=ENU=User ID }
    { 5   ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Success,Failed;
                                                   OptionString=Success,Failed }
    { 6   ;   ;Context             ;Text30        ;CaptionML=ENU=Context }
    { 10  ;   ;Description         ;Text250       ;CaptionML=ENU=Description }
    { 20  ;   ;Activity Message    ;Text250       ;CaptionML=ENU=Activity Message }
    { 21  ;   ;Detailed Info       ;BLOB          ;CaptionML=ENU=Detailed Info }
    { 22  ;   ;Table No Filter     ;Integer       ;CaptionML=ENU=Table No Filter }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=true }
    {    ;"Activity Date"                          }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DataTypeNotValidErr@1000 : TextConst 'ENU=The specified variant type is not valid.';
      NoDetailsMsg@1001 : TextConst 'ENU=The log does not contain any more details.';

    [External]
    PROCEDURE LogActivity@1(RelatedVariant@1000 : Variant;NewStatus@1001 : Option;NewContext@1004 : Text[30];ActivityDescription@1002 : Text;ActivityMessage@1003 : Text);
    VAR
      UserCode@1007 : Code[50];
    BEGIN
      UserCode := '';
      LogActivityImplementation(RelatedVariant,NewStatus,NewContext,ActivityDescription,ActivityMessage,UserCode);
    END;

    [External]
    PROCEDURE ShowEntries@2(RecordVariant@1000 : Variant);
    VAR
      DataTypeManagement@1001 : Codeunit "Data Type Management";
      RecRef@1002 : RecordRef;
    BEGIN
      if not DataTypeManagement.GetRecordRef(RecordVariant,RecRef) then
        ERROR(DataTypeNotValidErr);

      SETRANGE("Record ID",RecRef.RECORDID);

      COMMIT;
      PAGE.RUNMODAL(PAGE::"Activity Log",Rec);
    END;

    [External]
    PROCEDURE SetDetailedInfoFromStream@3(InputStream@1000 : InStream);
    VAR
      InfoOutStream@1002 : OutStream;
    BEGIN
      "Detailed Info".CREATEOUTSTREAM(InfoOutStream);
      COPYSTREAM(InfoOutStream,InputStream);
      MODIFY;
    END;

    [External]
    PROCEDURE SetDetailedInfoFromText@5(Details@1000 : Text);
    VAR
      OutputStream@1001 : OutStream;
    BEGIN
      "Detailed Info".CREATEOUTSTREAM(OutputStream);
      OutputStream.WRITETEXT(Details);
      MODIFY;
    END;

    [Internal]
    PROCEDURE Export@4(DefaultFileName@1003 : Text;ShowFileDialog@1002 : Boolean) : Text;
    VAR
      TempBlob@1001 : Record TempBlob;
      FileMgt@1000 : Codeunit "File Management";
    BEGIN
      CALCFIELDS("Detailed Info");
      if not "Detailed Info".HASVALUE then begin
        MESSAGE(NoDetailsMsg);
        exit;
      end;

      if DefaultFileName = '' then
        DefaultFileName := 'Log.txt';

      TempBlob.Blob := "Detailed Info";

      exit(FileMgt.BLOBExport(TempBlob,DefaultFileName,ShowFileDialog));
    END;

    LOCAL PROCEDURE LogActivityImplementation@6(RelatedVariant@1000 : Variant;NewStatus@1001 : Option;NewContext@1004 : Text[30];ActivityDescription@1002 : Text;ActivityMessage@1003 : Text;UserCode@1007 : Code[50]);
    VAR
      DataTypeManagement@1005 : Codeunit "Data Type Management";
      RecRef@1006 : RecordRef;
    BEGIN
      CLEAR(Rec);

      if not DataTypeManagement.GetRecordRef(RelatedVariant,RecRef) then
        ERROR(DataTypeNotValidErr);

      "Record ID" := RecRef.RECORDID;
      "Activity Date" := CURRENTDATETIME;
      "User ID" := UserCode;
      if "User ID" = '' then
        "User ID" := USERID;
      Status := NewStatus;
      Context := NewContext;
      Description := COPYSTR(ActivityDescription,1,MAXSTRLEN(Description));
      "Activity Message" := COPYSTR(ActivityMessage,1,MAXSTRLEN("Activity Message"));
      "Table No Filter" := RecRef.NUMBER;

      INSERT(true);

      if STRLEN(ActivityMessage) > MAXSTRLEN("Activity Message") then
        SetDetailedInfoFromText(ActivityMessage);
    END;

    [External]
    PROCEDURE LogActivityForUser@8(RelatedVariant@1000 : Variant;NewStatus@1001 : Option;NewContext@1004 : Text[30];ActivityDescription@1002 : Text;ActivityMessage@1003 : Text;UserCode@1007 : Code[50]);
    BEGIN
      LogActivityImplementation(RelatedVariant,NewStatus,NewContext,ActivityDescription,ActivityMessage,UserCode);
    END;

    BEGIN
    END.
  }
}

