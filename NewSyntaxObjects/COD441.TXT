OBJECT Codeunit 441 Prepayment Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [External]
    PROCEDURE SetSalesPrepaymentPct@1000000000(VAR SalesLine@1000000000 : Record "Sales Line";Date@1000000002 : Date);
    VAR
      Cust@1000 : Record Customer;
      SalesPrepaymentPct@1000000001 : Record "Sales Prepayment %";
    BEGIN
      with SalesPrepaymentPct do begin
        if (SalesLine.Type <> SalesLine.Type::Item) or (SalesLine."No." = '') or
           (SalesLine."Document Type" <> SalesLine."Document Type"::Order)
        then
          exit;
        SETFILTER("Starting Date",'..%1',Date);
        SETFILTER("Ending Date",'%1|>=%2',0D,Date);
        SETRANGE("Item No.",SalesLine."No.");
        for "Sales Type" := "Sales Type"::Customer to "Sales Type"::"All Customers" do begin
          SETRANGE("Sales Type","Sales Type");
          case "Sales Type" of
            "Sales Type"::Customer:
              begin
                SETRANGE("Sales Code",SalesLine."Bill-to Customer No.");
                if ApplySalesPrepaymentPct(SalesLine,SalesPrepaymentPct) then
                  exit;
              end;
            "Sales Type"::"Customer Price Group":
              begin
                Cust.GET(SalesLine."Bill-to Customer No.");
                if Cust."Customer Price Group" <> '' then
                  SETRANGE("Sales Code",Cust."Customer Price Group");
                if ApplySalesPrepaymentPct(SalesLine,SalesPrepaymentPct) then
                  exit;
              end;
            "Sales Type"::"All Customers":
              begin
                SETRANGE("Sales Code");
                if ApplySalesPrepaymentPct(SalesLine,SalesPrepaymentPct) then
                  exit;
              end;
          end;
        end;
      end;
    END;

    LOCAL PROCEDURE ApplySalesPrepaymentPct@3(VAR SalesLine@1000 : Record "Sales Line";VAR SalesPrepaymentPct@1001 : Record "Sales Prepayment %") : Boolean;
    BEGIN
      with SalesPrepaymentPct do
        if FINDLAST then begin
          SalesLine."Prepayment %" := "Prepayment %";
          exit(true);
        end;
    END;

    [External]
    PROCEDURE SetPurchPrepaymentPct@1(VAR PurchLine@1000000000 : Record "Purchase Line";Date@1000000002 : Date);
    VAR
      PurchPrepaymentPct@1000000001 : Record "Purchase Prepayment %";
    BEGIN
      with PurchPrepaymentPct do begin
        if (PurchLine.Type <> PurchLine.Type::Item) or (PurchLine."No." = '') or
           (PurchLine."Document Type" <> PurchLine."Document Type"::Order )
        then
          exit;
        SETFILTER("Starting Date",'..%1',Date);
        SETFILTER("Ending Date",'%1|>=%2',0D,Date);
        SETRANGE("Item No.",PurchLine."No.");
        SETRANGE("Vendor No.",PurchLine."Pay-to Vendor No.");
        if ApplyPurchPrepaymentPct(PurchLine,PurchPrepaymentPct) then
          exit;

        // All Vendors
        SETRANGE("Vendor No.",'');
        if ApplyPurchPrepaymentPct(PurchLine,PurchPrepaymentPct) then
          exit;
      end;
    END;

    LOCAL PROCEDURE ApplyPurchPrepaymentPct@2(VAR PurchLine@1000 : Record "Purchase Line";VAR PurchPrepaymentPct@1001 : Record "Purchase Prepayment %") : Boolean;
    BEGIN
      with PurchPrepaymentPct do
        if FINDLAST then begin
          PurchLine."Prepayment %" := "Prepayment %";
          exit(true);
        end;
    END;

    [External]
    PROCEDURE TestSalesPrepayment@37(SalesHeader@1000 : Record "Sales Header") : Boolean;
    VAR
      SalesLine@1001 : Record "Sales Line";
    BEGIN
      SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");
      SalesLine.SETRANGE("Document No.",SalesHeader."No.");
      SalesLine.SETFILTER("Prepmt. Line Amount",'<>%1',0);
      if SalesLine.FINDSET then
        repeat
          if SalesLine."Prepmt. Amt. Inv." <> SalesLine."Prepmt. Line Amount" then
            exit(true);
        until SalesLine.NEXT = 0;
    END;

    [External]
    PROCEDURE TestPurchasePrepayment@36(PurchaseHeader@1000 : Record "Purchase Header") : Boolean;
    VAR
      PurchaseLine@1001 : Record "Purchase Line";
    BEGIN
      PurchaseLine.SETRANGE("Document Type",PurchaseHeader."Document Type");
      PurchaseLine.SETRANGE("Document No.",PurchaseHeader."No.");
      PurchaseLine.SETFILTER("Prepmt. Line Amount",'<>%1',0);
      if PurchaseLine.FINDSET then
        repeat
          if PurchaseLine."Prepmt. Amt. Inv." <> PurchaseLine."Prepmt. Line Amount" then
            exit(true);
        until PurchaseLine.NEXT = 0;
    END;

    [External]
    PROCEDURE TestSalesPayment@30(SalesHeader@1000 : Record "Sales Header") : Boolean;
    VAR
      SalesSetup@1002 : Record "Sales & Receivables Setup";
      CustLedgerEntry@1004 : Record "Cust. Ledger Entry";
      SalesInvHeader@1005 : Record "Sales Invoice Header";
    BEGIN
      SalesSetup.GET;
      if not SalesSetup."Check Prepmt. when Posting" then
        exit(false);

      SalesInvHeader.SETCURRENTKEY("Prepayment Order No.","Prepayment Invoice");
      SalesInvHeader.SETRANGE("Prepayment Order No.",SalesHeader."No.");
      SalesInvHeader.SETRANGE("Prepayment Invoice",true);
      if SalesInvHeader.FINDSET then
        repeat
          CustLedgerEntry.SETCURRENTKEY("Document No.");
          CustLedgerEntry.SETRANGE("Document Type",CustLedgerEntry."Document Type"::Invoice);
          CustLedgerEntry.SETRANGE("Document No.",SalesInvHeader."No.");
          CustLedgerEntry.SETFILTER("Remaining Amt. (LCY)",'<>%1',0);
          if not CustLedgerEntry.ISEMPTY then
            exit(true);
        until SalesInvHeader.NEXT = 0;

      exit(false);
    END;

    [External]
    PROCEDURE TestPurchasePayment@35(PurchaseHeader@1004 : Record "Purchase Header") : Boolean;
    VAR
      PurchasesPayablesSetup@1003 : Record "Purchases & Payables Setup";
      VendLedgerEntry@1002 : Record "Vendor Ledger Entry";
      PurchInvHeader@1001 : Record "Purch. Inv. Header";
    BEGIN
      PurchasesPayablesSetup.GET;
      if not PurchasesPayablesSetup."Check Prepmt. when Posting" then
        exit(false);

      PurchInvHeader.SETCURRENTKEY("Prepayment Order No.","Prepayment Invoice");
      PurchInvHeader.SETRANGE("Prepayment Order No.",PurchaseHeader."No.");
      PurchInvHeader.SETRANGE("Prepayment Invoice",true);
      if PurchInvHeader.FINDSET then
        repeat
          VendLedgerEntry.SETCURRENTKEY("Document No.");
          VendLedgerEntry.SETRANGE("Document Type",VendLedgerEntry."Document Type"::Invoice);
          VendLedgerEntry.SETRANGE("Document No.",PurchInvHeader."No.");
          VendLedgerEntry.SETFILTER("Remaining Amt. (LCY)",'<>%1',0);
          if not VendLedgerEntry.ISEMPTY then
            exit(true);
        until PurchInvHeader.NEXT = 0;

      exit(false);
    END;

    BEGIN
    END.
  }
}

