OBJECT Table 98 General Ledger Setup
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=General Ledger Setup;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Allow Posting From  ;Date          ;CaptionML=ENU=Allow Posting From }
    { 3   ;   ;Allow Posting To    ;Date          ;CaptionML=ENU=Allow Posting To }
    { 4   ;   ;Register Time       ;Boolean       ;CaptionML=ENU=Register Time }
    { 28  ;   ;Pmt. Disc. Excl. VAT;Boolean       ;OnValidate=BEGIN
                                                                if "Pmt. Disc. Excl. VAT" then
                                                                  TESTFIELD("Adjust for Payment Disc.",false)
                                                                else
                                                                  TESTFIELD("VAT Tolerance %",0);
                                                              END;

                                                   CaptionML=ENU=Pmt. Disc. Excl. VAT }
    { 41  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 42  ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE ("Dimension Code"=FIELD("Global Dimension 1 Code"));
                                                   CaptionML=ENU=Global Dimension 1 Filter;
                                                   CaptionClass='1,3,1' }
    { 43  ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE ("Dimension Code"=FIELD("Global Dimension 2 Code"));
                                                   CaptionML=ENU=Global Dimension 2 Filter;
                                                   CaptionClass='1,3,2' }
    { 44  ;   ;Cust. Balances Due  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE ("Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                      "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                      "Initial Entry Due Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Cust. Balances Due;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 45  ;   ;Vendor Balances Due ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE ("Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                        "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                        "Initial Entry Due Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Vendor Balances Due;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 48  ;   ;Unrealized VAT      ;Boolean       ;OnValidate=BEGIN
                                                                if not "Unrealized VAT" then begin
                                                                  VATPostingSetup.SETFILTER(
                                                                    "Unrealized VAT Type",'>=%1',VATPostingSetup."Unrealized VAT Type"::Percentage);
                                                                  if VATPostingSetup.FINDFIRST then
                                                                    ERROR(
                                                                      Text000,VATPostingSetup.TABLECAPTION,
                                                                      VATPostingSetup."VAT Bus. Posting Group",VATPostingSetup."VAT Prod. Posting Group",
                                                                      VATPostingSetup.FIELDCAPTION("Unrealized VAT Type"),VATPostingSetup."Unrealized VAT Type");
                                                                  TaxJurisdiction.SETFILTER(
                                                                    "Unrealized VAT Type",'>=%1',TaxJurisdiction."Unrealized VAT Type"::Percentage);
                                                                  if TaxJurisdiction.FINDFIRST then
                                                                    ERROR(
                                                                      Text001,TaxJurisdiction.TABLECAPTION,
                                                                      TaxJurisdiction.Code,TaxJurisdiction.FIELDCAPTION("Unrealized VAT Type"),
                                                                      TaxJurisdiction."Unrealized VAT Type");
                                                                end;
                                                                if "Unrealized VAT" then
                                                                  "Prepayment Unrealized VAT" := true
                                                                else
                                                                  "Prepayment Unrealized VAT" := false;
                                                              END;

                                                   CaptionML=ENU=Unrealized VAT }
    { 49  ;   ;Adjust for Payment Disc.;Boolean   ;OnValidate=BEGIN
                                                                if "Adjust for Payment Disc." then begin
                                                                  TESTFIELD("Pmt. Disc. Excl. VAT",false);
                                                                  TESTFIELD("VAT Tolerance %",0);
                                                                end else begin
                                                                  VATPostingSetup.SETRANGE("Adjust for Payment Discount",true);
                                                                  if VATPostingSetup.FINDFIRST then
                                                                    ERROR(
                                                                      Text002,VATPostingSetup.TABLECAPTION,
                                                                      VATPostingSetup."VAT Bus. Posting Group",VATPostingSetup."VAT Prod. Posting Group",
                                                                      VATPostingSetup.FIELDCAPTION("Adjust for Payment Discount"));
                                                                  TaxJurisdiction.SETRANGE("Adjust for Payment Discount",true);
                                                                  if TaxJurisdiction.FINDFIRST then
                                                                    ERROR(
                                                                      Text003,TaxJurisdiction.TABLECAPTION,
                                                                      TaxJurisdiction.Code,TaxJurisdiction.FIELDCAPTION("Adjust for Payment Discount"));
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Adjust for Payment Disc. }
    { 56  ;   ;Mark Cr. Memos as Corrections;Boolean;
                                                   CaptionML=ENU=Mark Cr. Memos as Corrections }
    { 57  ;   ;Local Address Format;Option        ;CaptionML=ENU=Local Address Format;
                                                   OptionCaptionML=ENU=Post Code+City,City+Post Code,City+County+Post Code,Blank Line+Post Code+City;
                                                   OptionString="Post Code+City","City+Post Code","City+County+Post Code","Blank Line+Post Code+City" }
    { 58  ;   ;Inv. Rounding Precision (LCY);Decimal;
                                                   OnValidate=BEGIN
                                                                if "Amount Rounding Precision" <> 0 then
                                                                  if "Inv. Rounding Precision (LCY)" <> ROUND("Inv. Rounding Precision (LCY)","Amount Rounding Precision") then
                                                                    ERROR(
                                                                      Text004,
                                                                      FIELDCAPTION("Inv. Rounding Precision (LCY)"),"Amount Rounding Precision");
                                                              END;

                                                   CaptionML=ENU=Inv. Rounding Precision (LCY);
                                                   AutoFormatType=1 }
    { 59  ;   ;Inv. Rounding Type (LCY);Option    ;CaptionML=ENU=Inv. Rounding Type (LCY);
                                                   OptionCaptionML=ENU=Nearest,Up,Down;
                                                   OptionString=Nearest,Up,Down }
    { 60  ;   ;Local Cont. Addr. Format;Option    ;InitValue="After Company Name";
                                                   CaptionML=ENU=Local Cont. Addr. Format;
                                                   OptionCaptionML=ENU=First,After Company Name,Last;
                                                   OptionString=First,"After Company Name",Last }
    { 63  ;   ;Bank Account Nos.   ;Code20        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData "Bank Account"=R;
                                                   CaptionML=ENU=Bank Account Nos. }
    { 65  ;   ;Summarize G/L Entries;Boolean      ;CaptionML=ENU=Summarize G/L Entries }
    { 66  ;   ;Amount Decimal Places;Text5        ;InitValue=2:2;
                                                   OnValidate=BEGIN
                                                                CheckDecimalPlacesFormat("Amount Decimal Places");
                                                              END;

                                                   CaptionML=ENU=Amount Decimal Places }
    { 67  ;   ;Unit-Amount Decimal Places;Text5   ;InitValue=2:5;
                                                   OnValidate=BEGIN
                                                                CheckDecimalPlacesFormat("Unit-Amount Decimal Places");
                                                              END;

                                                   CaptionML=ENU=Unit-Amount Decimal Places }
    { 68  ;   ;Additional Reporting Currency;Code10;
                                                   TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                if ("Additional Reporting Currency" <> xRec."Additional Reporting Currency") and
                                                                   ("Additional Reporting Currency" <> '')
                                                                then begin
                                                                  AdjAddReportingCurr.SetAddCurr("Additional Reporting Currency");
                                                                  AdjAddReportingCurr.RUNMODAL;
                                                                  if not AdjAddReportingCurr.IsExecuted then
                                                                    "Additional Reporting Currency" := xRec."Additional Reporting Currency";
                                                                end;
                                                                if ("Additional Reporting Currency" <> xRec."Additional Reporting Currency") and
                                                                   AdjAddReportingCurr.IsExecuted
                                                                then
                                                                  DeleteIntrastatJnl;
                                                                if ("Additional Reporting Currency" <> xRec."Additional Reporting Currency") and
                                                                   ("Additional Reporting Currency" <> '') and
                                                                   AdjAddReportingCurr.IsExecuted
                                                                then
                                                                  DeleteAnalysisView;
                                                              END;

                                                   CaptionML=ENU=Additional Reporting Currency }
    { 69  ;   ;VAT Tolerance %     ;Decimal       ;OnValidate=BEGIN
                                                                if "VAT Tolerance %" <> 0 then begin
                                                                  TESTFIELD("Adjust for Payment Disc.",false);
                                                                  TESTFIELD("Pmt. Disc. Excl. VAT",true);
                                                                end;
                                                              END;

                                                   CaptionML=ENU=VAT Tolerance %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 70  ;   ;EMU Currency        ;Boolean       ;CaptionML=ENU=EMU Currency }
    { 71  ;   ;LCY Code            ;Code10        ;OnValidate=VAR
                                                                Currency@1000 : Record Currency;
                                                              BEGIN
                                                                if "Local Currency Symbol" = '' then
                                                                  "Local Currency Symbol" := Currency.ResolveCurrencySymbol("LCY Code");

                                                                if "Local Currency Description" = '' then
                                                                  "Local Currency Description" := COPYSTR(Currency.ResolveCurrencyDescription("LCY Code"),1,MAXSTRLEN("Local Currency Description"));
                                                              END;

                                                   CaptionML=ENU=LCY Code }
    { 72  ;   ;VAT Exchange Rate Adjustment;Option;CaptionML=ENU=VAT Exchange Rate Adjustment;
                                                   OptionCaptionML=ENU=No Adjustment,Adjust Amount,Adjust Additional-Currency Amount;
                                                   OptionString="No Adjustment","Adjust Amount","Adjust Additional-Currency Amount" }
    { 73  ;   ;Amount Rounding Precision;Decimal  ;InitValue=0,01;
                                                   OnValidate=BEGIN
                                                                if "Amount Rounding Precision" <> 0 then
                                                                  "Inv. Rounding Precision (LCY)" := ROUND("Inv. Rounding Precision (LCY)","Amount Rounding Precision");
                                                                RoundingErrorCheck(FIELDCAPTION("Amount Rounding Precision"));
                                                                if HideDialog then
                                                                  MESSAGE(Text021);
                                                              END;

                                                   CaptionML=ENU=Amount Rounding Precision;
                                                   DecimalPlaces=0:5 }
    { 74  ;   ;Unit-Amount Rounding Precision;Decimal;
                                                   InitValue=0,00001;
                                                   OnValidate=BEGIN
                                                                if HideDialog then
                                                                  MESSAGE(Text022);
                                                              END;

                                                   CaptionML=ENU=Unit-Amount Rounding Precision;
                                                   DecimalPlaces=0:9 }
    { 75  ;   ;Appln. Rounding Precision;Decimal  ;CaptionML=ENU=Appln. Rounding Precision;
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 79  ;   ;Global Dimension 1 Code;Code20     ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                "Shortcut Dimension 1 Code" := "Global Dimension 1 Code";
                                                              END;

                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   Editable=false }
    { 80  ;   ;Global Dimension 2 Code;Code20     ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                "Shortcut Dimension 2 Code" := "Global Dimension 2 Code";
                                                              END;

                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   Editable=false }
    { 81  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation=Dimension;
                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   Editable=false }
    { 82  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation=Dimension;
                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   Editable=false }
    { 83  ;   ;Shortcut Dimension 3 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                UpdateDimValueGlobalDimNo(xRec."Shortcut Dimension 3 Code","Shortcut Dimension 3 Code",3);
                                                              END;

                                                   AccessByPermission=TableData "Dimension Combination"=R;
                                                   CaptionML=ENU=Shortcut Dimension 3 Code }
    { 84  ;   ;Shortcut Dimension 4 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                UpdateDimValueGlobalDimNo(xRec."Shortcut Dimension 4 Code","Shortcut Dimension 4 Code",4);
                                                              END;

                                                   AccessByPermission=TableData "Dimension Combination"=R;
                                                   CaptionML=ENU=Shortcut Dimension 4 Code }
    { 85  ;   ;Shortcut Dimension 5 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                UpdateDimValueGlobalDimNo(xRec."Shortcut Dimension 5 Code","Shortcut Dimension 5 Code",5);
                                                              END;

                                                   AccessByPermission=TableData "Dimension Combination"=R;
                                                   CaptionML=ENU=Shortcut Dimension 5 Code }
    { 86  ;   ;Shortcut Dimension 6 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                UpdateDimValueGlobalDimNo(xRec."Shortcut Dimension 6 Code","Shortcut Dimension 6 Code",6);
                                                              END;

                                                   AccessByPermission=TableData "Dimension Combination"=R;
                                                   CaptionML=ENU=Shortcut Dimension 6 Code }
    { 87  ;   ;Shortcut Dimension 7 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                UpdateDimValueGlobalDimNo(xRec."Shortcut Dimension 7 Code","Shortcut Dimension 7 Code",7);
                                                              END;

                                                   AccessByPermission=TableData "Dimension Combination"=R;
                                                   CaptionML=ENU=Shortcut Dimension 7 Code }
    { 88  ;   ;Shortcut Dimension 8 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                UpdateDimValueGlobalDimNo(xRec."Shortcut Dimension 8 Code","Shortcut Dimension 8 Code",8);
                                                              END;

                                                   AccessByPermission=TableData "Dimension Combination"=R;
                                                   CaptionML=ENU=Shortcut Dimension 8 Code }
    { 89  ;   ;Max. VAT Difference Allowed;Decimal;OnValidate=BEGIN
                                                                if "Max. VAT Difference Allowed" <> ROUND("Max. VAT Difference Allowed") then
                                                                  ERROR(
                                                                    Text004,
                                                                    FIELDCAPTION("Max. VAT Difference Allowed"),"Amount Rounding Precision");

                                                                "Max. VAT Difference Allowed" := ABS("Max. VAT Difference Allowed");
                                                              END;

                                                   CaptionML=ENU=Max. VAT Difference Allowed;
                                                   AutoFormatType=1 }
    { 90  ;   ;VAT Rounding Type   ;Option        ;CaptionML=ENU=VAT Rounding Type;
                                                   OptionCaptionML=ENU=Nearest,Up,Down;
                                                   OptionString=Nearest,Up,Down }
    { 92  ;   ;Pmt. Disc. Tolerance Posting;Option;CaptionML=ENU=Pmt. Disc. Tolerance Posting;
                                                   OptionCaptionML=ENU=Payment Tolerance Accounts,Payment Discount Accounts;
                                                   OptionString="Payment Tolerance Accounts","Payment Discount Accounts" }
    { 93  ;   ;Payment Discount Grace Period;DateFormula;
                                                   CaptionML=ENU=Payment Discount Grace Period }
    { 94  ;   ;Payment Tolerance % ;Decimal       ;CaptionML=ENU=Payment Tolerance %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=false }
    { 95  ;   ;Max. Payment Tolerance Amount;Decimal;
                                                   CaptionML=ENU=Max. Payment Tolerance Amount;
                                                   MinValue=0;
                                                   Editable=false }
    { 96  ;   ;Adapt Main Menu to Permissions;Boolean;
                                                   InitValue=true;
                                                   CaptionML=ENU=Adapt Main Menu to Permissions }
    { 97  ;   ;Allow G/L Acc. Deletion Before;Date;CaptionML=ENU=Allow G/L Acc. Deletion Before }
    { 98  ;   ;Check G/L Account Usage;Boolean    ;CaptionML=ENU=Check G/L Account Usage }
    { 99  ;   ;Payment Tolerance Posting;Option   ;CaptionML=ENU=Payment Tolerance Posting;
                                                   OptionCaptionML=ENU=Payment Tolerance Accounts,Payment Discount Accounts;
                                                   OptionString="Payment Tolerance Accounts","Payment Discount Accounts" }
    { 100 ;   ;Pmt. Disc. Tolerance Warning;Boolean;
                                                   CaptionML=ENU=Pmt. Disc. Tolerance Warning }
    { 101 ;   ;Payment Tolerance Warning;Boolean  ;CaptionML=ENU=Payment Tolerance Warning }
    { 102 ;   ;Last IC Transaction No.;Integer    ;CaptionML=ENU=Last IC Transaction No. }
    { 103 ;   ;Bill-to/Sell-to VAT Calc.;Option   ;CaptionML=ENU=Bill-to/Sell-to VAT Calc.;
                                                   OptionCaptionML=ENU=Bill-to/Pay-to No.,Sell-to/Buy-from No.;
                                                   OptionString="Bill-to/Pay-to No.","Sell-to/Buy-from No." }
    { 110 ;   ;Acc. Sched. for Balance Sheet;Code10;
                                                   TableRelation="Acc. Schedule Name";
                                                   CaptionML=ENU=Acc. Sched. for Balance Sheet }
    { 111 ;   ;Acc. Sched. for Income Stmt.;Code10;TableRelation="Acc. Schedule Name";
                                                   CaptionML=ENU=Acc. Sched. for Income Stmt. }
    { 112 ;   ;Acc. Sched. for Cash Flow Stmt;Code10;
                                                   TableRelation="Acc. Schedule Name";
                                                   CaptionML=ENU=Acc. Sched. for Cash Flow Stmt }
    { 113 ;   ;Acc. Sched. for Retained Earn.;Code10;
                                                   TableRelation="Acc. Schedule Name";
                                                   CaptionML=ENU=Acc. Sched. for Retained Earn. }
    { 150 ;   ;Print VAT specification in LCY;Boolean;
                                                   CaptionML=ENU=Print VAT specification in LCY }
    { 151 ;   ;Prepayment Unrealized VAT;Boolean  ;OnValidate=BEGIN
                                                                if "Unrealized VAT" and xRec."Prepayment Unrealized VAT" then
                                                                  ERROR(DependentFieldActivatedErr,FIELDCAPTION("Prepayment Unrealized VAT"),FIELDCAPTION("Unrealized VAT"));

                                                                if not "Prepayment Unrealized VAT" then begin
                                                                  VATPostingSetup.SETFILTER(
                                                                    "Unrealized VAT Type",'>=%1',VATPostingSetup."Unrealized VAT Type"::Percentage);
                                                                  if VATPostingSetup.FINDFIRST then
                                                                    ERROR(
                                                                      Text000,VATPostingSetup.TABLECAPTION,
                                                                      VATPostingSetup."VAT Bus. Posting Group",VATPostingSetup."VAT Prod. Posting Group",
                                                                      VATPostingSetup.FIELDCAPTION("Unrealized VAT Type"),VATPostingSetup."Unrealized VAT Type");
                                                                  TaxJurisdiction.SETFILTER(
                                                                    "Unrealized VAT Type",'>=%1',TaxJurisdiction."Unrealized VAT Type"::Percentage);
                                                                  if TaxJurisdiction.FINDFIRST then
                                                                    ERROR(
                                                                      Text001,TaxJurisdiction.TABLECAPTION,
                                                                      TaxJurisdiction.Code,TaxJurisdiction.FIELDCAPTION("Unrealized VAT Type"),
                                                                      TaxJurisdiction."Unrealized VAT Type");
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Prepayment Unrealized VAT }
    { 152 ;   ;Use Legacy G/L Entry Locking;Boolean;
                                                   OnValidate=VAR
                                                                InventorySetup@1000 : Record "Inventory Setup";
                                                              BEGIN
                                                                if not "Use Legacy G/L Entry Locking" then begin
                                                                  if InventorySetup.GET then
                                                                    if InventorySetup."Automatic Cost Posting" then
                                                                      ERROR(Text025,
                                                                        FIELDCAPTION("Use Legacy G/L Entry Locking"),
                                                                        "Use Legacy G/L Entry Locking",
                                                                        InventorySetup.FIELDCAPTION("Automatic Cost Posting"),
                                                                        InventorySetup.TABLECAPTION,
                                                                        InventorySetup."Automatic Cost Posting");
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Use Legacy G/L Entry Locking }
    { 160 ;   ;Payroll Trans. Import Format;Code20;TableRelation="Data Exch. Def" WHERE (Type=CONST("Payroll Import"));
                                                   CaptionML=ENU=Payroll Trans. Import Format }
    { 161 ;   ;VAT Reg. No. Validation URL;Text250;OnValidate=BEGIN
                                                                ERROR(ObsoleteErr);
                                                              END;

                                                   CaptionML=ENU=VAT Reg. No. Validation URL }
    { 162 ;   ;Local Currency Symbol;Text10       ;CaptionML=ENU=Local Currency Symbol }
    { 163 ;   ;Local Currency Description;Text60  ;CaptionML=ENU=Local Currency Description }
    { 164 ;   ;Show Amounts        ;Option        ;CaptionML=ENU=Show Amounts;
                                                   OptionCaptionML=ENU=Amount Only,Debit/Credit Only,All Amounts;
                                                   OptionString="Amount Only","Debit/Credit Only","All Amounts" }
  }
  KEYS
  {
    {    ;"Primary Key"                           ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 %2 %3 have %4 to %5.';
      Text001@1001 : TextConst 'ENU=%1 %2 have %3 to %4.';
      Text002@1002 : TextConst 'ENU=%1 %2 %3 use %4.';
      Text003@1003 : TextConst 'ENU=%1 %2 use %3.';
      Text004@1004 : TextConst 'ENU=%1 must be rounded to the nearest %2.';
      Text016@1013 : TextConst 'ENU="Enter one number or two numbers separated by a colon. "';
      Text017@1014 : TextConst 'ENU=The online Help for this field describes how you can fill in the field.';
      Text018@1015 : TextConst 'ENU=You cannot change the contents of the %1 field because there are posted ledger entries.';
      Text021@1018 : TextConst 'ENU=You must close the program and start again in order to activate the amount-rounding feature.';
      Text022@1019 : TextConst 'ENU=You must close the program and start again in order to activate the unit-amount rounding feature.';
      Text023@1020 : TextConst 'ENU=%1\You cannot use the same dimension twice in the same setup.';
      Dim@1021 : Record Dimension;
      GLEntry@1022 : Record "G/L Entry";
      ItemLedgerEntry@1023 : Record "Item Ledger Entry";
      JobLedgEntry@1024 : Record "Job Ledger Entry";
      ResLedgEntry@1025 : Record "Res. Ledger Entry";
      FALedgerEntry@1026 : Record "FA Ledger Entry";
      MaintenanceLedgerEntry@1027 : Record "Maintenance Ledger Entry";
      InsCoverageLedgerEntry@1028 : Record "Ins. Coverage Ledger Entry";
      VATPostingSetup@1029 : Record "VAT Posting Setup";
      TaxJurisdiction@1030 : Record "Tax Jurisdiction";
      AnalysisView@1032 : Record "Analysis View";
      AnalysisViewEntry@1033 : Record "Analysis View Entry";
      AnalysisViewBudgetEntry@1034 : Record "Analysis View Budget Entry";
      AdjAddReportingCurr@1005 : Report "Adjust Add. Reporting Currency";
      ErrorMessage@1036 : Boolean;
      DependentFieldActivatedErr@1009 : TextConst 'ENU=You cannot change %1 because %2 is selected.';
      Text025@1016 : TextConst 'ENU=The field %1 should not be set to %2 if field %3 in %4 table is set to %5 because deadlocks can occur.';
      ObsoleteErr@1617 : TextConst 'ENU=This field is obsolete, it has been replaced by Table 248 VAT Reg. No. Srv Config.';

    [External]
    PROCEDURE CheckDecimalPlacesFormat@1(VAR DecimalPlaces@1000 : Text[5]);
    VAR
      OK@1001 : Boolean;
      ColonPlace@1002 : Integer;
      DecimalPlacesPart1@1003 : Integer;
      DecimalPlacesPart2@1004 : Integer;
      Check@1005 : Text[5];
    BEGIN
      OK := true;
      ColonPlace := STRPOS(DecimalPlaces,':');

      if ColonPlace = 0 then begin
        if not EVALUATE(DecimalPlacesPart1,DecimalPlaces) then
          OK := false;
        if (DecimalPlacesPart1 < 0) or (DecimalPlacesPart1 > 9) then
          OK := false;
      end else begin
        Check := COPYSTR(DecimalPlaces,1,ColonPlace - 1);
        if Check = '' then
          OK := false;
        if not EVALUATE(DecimalPlacesPart1,Check) then
          OK := false;
        Check := COPYSTR(DecimalPlaces,ColonPlace + 1,STRLEN(DecimalPlaces));
        if Check = '' then
          OK := false;
        if not EVALUATE(DecimalPlacesPart2,Check) then
          OK := false;
        if DecimalPlacesPart1 > DecimalPlacesPart2 then
          OK := false;
        if (DecimalPlacesPart1 < 0) or (DecimalPlacesPart1 > 9) then
          OK := false;
        if (DecimalPlacesPart2 < 0) or (DecimalPlacesPart2 > 9) then
          OK := false;
      end;

      if not OK then
        ERROR(
          Text016 +
          Text017);

      if ColonPlace = 0 then
        DecimalPlaces := FORMAT(DecimalPlacesPart1)
      else
        DecimalPlaces := STRSUBSTNO('%1:%2',DecimalPlacesPart1,DecimalPlacesPart2);
    END;

    [External]
    PROCEDURE GetCurrencyCode@6(CurrencyCode@1000 : Code[10]) : Code[10];
    BEGIN
      case CurrencyCode of
        '':
          exit("LCY Code");
        "LCY Code":
          exit('');
        else
          exit(CurrencyCode);
      end;
    END;

    [External]
    PROCEDURE GetCurrencySymbol@8() : Text[10];
    BEGIN
      if "Local Currency Symbol" <> '' then
        exit("Local Currency Symbol");

      exit("LCY Code");
    END;

    LOCAL PROCEDURE RoundingErrorCheck@2(NameOfField@1000 : Text[100]);
    BEGIN
      ErrorMessage := false;
      if GLEntry.FINDFIRST then
        ErrorMessage := true;
      if ItemLedgerEntry.FINDFIRST then
        ErrorMessage := true;
      if JobLedgEntry.FINDFIRST then
        ErrorMessage := true;
      if ResLedgEntry.FINDFIRST then
        ErrorMessage := true;
      if FALedgerEntry.FINDFIRST then
        ErrorMessage := true;
      if MaintenanceLedgerEntry.FINDFIRST then
        ErrorMessage := true;
      if InsCoverageLedgerEntry.FINDFIRST then
        ErrorMessage := true;
      if ErrorMessage then
        ERROR(
          Text018,
          NameOfField);
    END;

    LOCAL PROCEDURE DeleteIntrastatJnl@3();
    VAR
      IntrastatJnlBatch@1000 : Record "Intrastat Jnl. Batch";
      IntrastatJnlLine@1001 : Record "Intrastat Jnl. Line";
    BEGIN
      IntrastatJnlBatch.SETRANGE(Reported,false);
      IntrastatJnlBatch.SETRANGE("Amounts in Add. Currency",true);
      if IntrastatJnlBatch.FIND('-') then
        repeat
          IntrastatJnlLine.SETRANGE("Journal Template Name",IntrastatJnlBatch."Journal Template Name");
          IntrastatJnlLine.SETRANGE("Journal Batch Name",IntrastatJnlBatch.Name);
          IntrastatJnlLine.DELETEALL;
        until IntrastatJnlBatch.NEXT = 0;
    END;

    LOCAL PROCEDURE DeleteAnalysisView@33();
    BEGIN
      if AnalysisView.FIND('-') then
        repeat
          if AnalysisView.Blocked = false then begin
            AnalysisViewEntry.SETRANGE("Analysis View Code",AnalysisView.Code);
            AnalysisViewEntry.DELETEALL;
            AnalysisViewBudgetEntry.SETRANGE("Analysis View Code",AnalysisView.Code);
            AnalysisViewBudgetEntry.DELETEALL;
            AnalysisView."Last Entry No." := 0;
            AnalysisView."Last Budget Entry No." := 0;
            AnalysisView."Last Date Updated" := 0D;
            AnalysisView.MODIFY;
          end else begin
            AnalysisView."Refresh When Unblocked" := true;
            AnalysisView.MODIFY;
          end;
        until AnalysisView.NEXT = 0;
    END;

    [External]
    PROCEDURE IsPostingAllowed@22(PostingDate@1000 : Date) : Boolean;
    BEGIN
      exit(PostingDate >= "Allow Posting From");
    END;

    [External]
    PROCEDURE OptimGLEntLockForMultiuserEnv@4() : Boolean;
    VAR
      InventorySetup@1000 : Record "Inventory Setup";
    BEGIN
      if "Use Legacy G/L Entry Locking" then
        exit(false);

      if InventorySetup.GET then
        if InventorySetup."Automatic Cost Posting" then
          exit(false);

      exit(true);
    END;

    [External]
    PROCEDURE FirstAllowedPostingDate@78() AllowedPostingDate : Date;
    VAR
      InvtPeriod@1000 : Record "Inventory Period";
    BEGIN
      AllowedPostingDate := "Allow Posting From";
      if not InvtPeriod.IsValidDate(AllowedPostingDate) then
        AllowedPostingDate := CALCDATE('<+1D>',AllowedPostingDate);
    END;

    [External]
    PROCEDURE UpdateDimValueGlobalDimNo@7(xDimCode@1001 : Code[20];DimCode@1002 : Code[20];ShortcutDimNo@1003 : Integer);
    VAR
      DimensionValue@1000 : Record "Dimension Value";
    BEGIN
      if Dim.CheckIfDimUsed(DimCode,ShortcutDimNo,'','',0) then
        ERROR(Text023,Dim.GetCheckDimErr);
      if xDimCode <> '' then begin
        DimensionValue.SETRANGE("Dimension Code",xDimCode);
        DimensionValue.MODIFYALL("Global Dimension No.",0);
      end;
      if DimCode <> '' then begin
        DimensionValue.SETRANGE("Dimension Code",DimCode);
        DimensionValue.MODIFYALL("Global Dimension No.",ShortcutDimNo);
      end;
      MODIFY;
    END;

    LOCAL PROCEDURE HideDialog@5() : Boolean;
    BEGIN
      exit((CurrFieldNo = 0) or not GUIALLOWED);
    END;

    PROCEDURE UseVat@9() : Boolean;
    VAR
      GeneralLedgerSetupRecordRef@1000 : RecordRef;
      UseVATFieldRef@1001 : FieldRef;
      UseVATFieldNo@1002 : Integer;
    BEGIN
      GeneralLedgerSetupRecordRef.OPEN(DATABASE::"General Ledger Setup",false);

      UseVATFieldNo := 10001;

      if not GeneralLedgerSetupRecordRef.FIELDEXIST(UseVATFieldNo) then
        exit(true);

      if not GeneralLedgerSetupRecordRef.FINDFIRST then
        exit(false);

      UseVATFieldRef := GeneralLedgerSetupRecordRef.FIELD(UseVATFieldNo);
      exit(UseVATFieldRef.VALUE);
    END;

    BEGIN
    END.
  }
}

