OBJECT Page 2861 Native - Payment Terms
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=[@@@={Locked};
               ENU=nativePaymentTerms];
    SourceTable="Payment Terms";
    DelayedInsert=true;
    PageType=List;
    OnOpenPage=VAR
                 O365PaymentTermsList@1000 : Page "O365 Payment Terms List";
               BEGIN
                 SETFILTER(Code,'<>%1',O365PaymentTermsList.ExcludedPaymentTermCode);
               END;

    OnAfterGetRecord=VAR
                       O365SalesInitialSetup@1000 : Record "O365 Sales Initial Setup";
                     BEGIN
                       Default := O365SalesInitialSetup.IsDefaultPaymentTerms(Rec);
                     END;

    OnInsertRecord=VAR
                     PaymentTerms@1000 : Record "Payment Terms";
                     O365SalesInitialSetup@1004 : Record "O365 Sales Initial Setup";
                     GraphMgtGeneralTools@1001 : Codeunit "Graph Mgt - General Tools";
                     RecRef@1002 : RecordRef;
                   BEGIN
                     PaymentTerms.SETRANGE(Code,Code);
                     if not PaymentTerms.ISEMPTY then
                       INSERT;

                     INSERT(true);

                     RecRef.GETTABLE(Rec);
                     GraphMgtGeneralTools.ProcessNewRecordFromAPI(RecRef,TempFieldSet,CURRENTDATETIME);
                     RecRef.SETTABLE(Rec);

                     MODIFY(true);

                     if IsDefaultSet then begin
                       O365SalesInitialSetup.UpdateDefaultPaymentTerms(Code);
                       FIND;
                     end;

                     exit(false);
                   END;

    OnModifyRecord=VAR
                     PaymentTerms@1000 : Record "Payment Terms";
                     O365SalesInitialSetup@1002 : Record "O365 Sales Initial Setup";
                     GraphMgtGeneralTools@1001 : Codeunit "Graph Mgt - General Tools";
                   BEGIN
                     if xRec.Id <> Id then
                       GraphMgtGeneralTools.ErrorIdImmutable;
                     PaymentTerms.SETRANGE(Id,Id);
                     PaymentTerms.FINDFIRST;

                     if Code = PaymentTerms.Code then
                       MODIFY(true)
                     else begin
                       PaymentTerms.TRANSFERFIELDS(Rec,false);
                       PaymentTerms.RENAME(Code);
                       TRANSFERFIELDS(PaymentTerms,true);
                     end;

                     if IsDefaultSet then begin
                       O365SalesInitialSetup.UpdateDefaultPaymentTerms(Code);
                       FIND;
                     end;
                   END;

    ODataKeyFields=Id;
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 10  ;2   ;Field     ;
                Name=id;
                CaptionML=[@@@={Locked};
                           ENU=Id];
                ApplicationArea=#All;
                SourceExpr=Id;
                ImplicitType=GUID }

    { 3   ;2   ;Field     ;
                Name=code;
                CaptionML=[@@@={Locked};
                           ENU=Code];
                ApplicationArea=#All;
                SourceExpr=Code;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO(Code));
                           END;

                ImplicitType=Code10 }

    { 7   ;2   ;Field     ;
                Name=displayName;
                CaptionML=[@@@={Locked};
                           ENU=DisplayName];
                ApplicationArea=#All;
                SourceExpr=Description;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO(Description));
                           END;

                ImplicitType=Text50 }

    { 4   ;2   ;Field     ;
                Name=dueDateCalculation;
                CaptionML=[@@@={Locked};
                           ENU=DueDateCalculation];
                ApplicationArea=#All;
                SourceExpr="Due Date Calculation";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Due Date Calculation"));
                           END;

                ImplicitType=DateFormula }

    { 5   ;2   ;Field     ;
                Name=discountDateCalculation;
                CaptionML=[@@@={Locked};
                           ENU=DiscountDateCalculation];
                ApplicationArea=#All;
                SourceExpr="Discount Date Calculation";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Discount Date Calculation"));
                           END;

                ImplicitType=DateFormula }

    { 6   ;2   ;Field     ;
                Name=discountPercent;
                CaptionML=[@@@={Locked};
                           ENU=DiscountPercent];
                ApplicationArea=#All;
                SourceExpr="Discount %";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Discount %"));
                           END;

                ImplicitType=Decimal }

    { 8   ;2   ;Field     ;
                Name=calculateDiscountOnCreditMemos;
                CaptionML=[@@@={Locked};
                           ENU=CalcPmtDiscOnCreditMemos];
                ApplicationArea=#All;
                SourceExpr="Calc. Pmt. Disc. on Cr. Memos";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Calc. Pmt. Disc. on Cr. Memos"));
                           END;

                ImplicitType=Boolean }

    { 9   ;2   ;Field     ;
                Name=lastModifiedDateTime;
                CaptionML=[@@@={Locked};
                           ENU=LastModifiedDateTime];
                ApplicationArea=#All;
                SourceExpr="Last Modified Date Time";
                ImplicitType=DateTime }

    { 11  ;2   ;Field     ;
                Name=default;
                CaptionML=ENU=default;
                ToolTipML=ENU=Specifies that the payment terms are the default.;
                ApplicationArea=#All;
                SourceExpr=Default;
                OnValidate=BEGIN
                             if Default = false then
                               ERROR(CannotSetDefaultToFalseErr);

                             IsDefaultSet := true;
                           END;

                ImplicitType=Boolean }

  }
  CODE
  {
    VAR
      TempFieldSet@1000 : TEMPORARY Record Field;
      Default@1001 : Boolean;
      CannotSetDefaultToFalseErr@1002 : TextConst 'ENU=It is not possible to set the default to false. Select a different Payment Term as a default.';
      IsDefaultSet@1003 : Boolean;

    LOCAL PROCEDURE RegisterFieldSet@11(FieldNo@1000 : Integer);
    BEGIN
      if TempFieldSet.GET(DATABASE::"Payment Terms",FieldNo) then
        exit;

      TempFieldSet.INIT;
      TempFieldSet.TableNo := DATABASE::"Payment Terms";
      TempFieldSet.VALIDATE("No.",FieldNo);
      TempFieldSet.INSERT(true);
    END;

    BEGIN
    END.
  }
}

