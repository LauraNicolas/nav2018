OBJECT Page 5129 Update Opportunity
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Update Opportunity;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable="Opportunity Entry";
    DataCaptionExpr=Caption;
    PageType=Card;
    OnInit=BEGIN
             CancelOldTaskEnable := true;
             SalesQuoteEnable := true;
             OptionSixEnable := true;
             OptionFiveEnable := true;
             OptionFourEnable := true;
             OptionThreeEnable := true;
             OptionTwoEnable := true;
             OptionOneEnable := true;
             SalesCycleStageEditable := true;
           END;

    OnOpenPage=BEGIN
                 IsOnMobile := CURRENTCLIENTTYPE = CLIENTTYPE::Phone;
                 CreateStageList;
                 UpdateEditable;
                 if Opp.GET("Opportunity No.") then
                   if Opp."Sales Document No." <> '' then
                     SalesQuoteEnable := true
                   else
                     SalesQuoteEnable := false;

                 UpdateCntrls;
                 UpdateEstimatedValues;
               END;

    OnQueryClosePage=BEGIN
                       if CloseAction in [ACTION::OK,ACTION::LookupOK] then
                         FinishPage;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 10      ;1   ;Action    ;
                      Name=Finish;
                      CaptionML=ENU=&Finish;
                      ToolTipML=ENU=Finish updating the opportunity.;
                      ApplicationArea=#RelationshipMgmt;
                      Promoted=true;
                      Visible=IsOnMobile;
                      InFooterBar=true;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishPage;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 31      ;1   ;Action    ;
                      Name=SalesQuote;
                      CaptionML=ENU=&Sales Quote;
                      ToolTipML=ENU=Create a sales quote based on the opportunity.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      Enabled=SalesQuoteEnable;
                      InFooterBar=true;
                      Image=Quote;
                      OnAction=VAR
                                 SalesHeader@1001 : Record "Sales Header";
                               BEGIN
                                 if Opp.GET("Opportunity No.") then begin
                                   Opp.ShowQuote;
                                   if SalesHeader.GET(SalesHeader."Document Type"::Quote,Opp."Sales Document No.") then begin
                                     "Estimated Value (LCY)" := GetSalesDocValue(SalesHeader);
                                     CurrPage.UPDATE;
                                   end;
                                 end;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Field     ;
                Name=Action type;
                ToolTipML=ENU=Specifies options that you can take when you reenter an opportunity to update it in the Update Opportunity window. Certain options are not available, depending on what stage you are in for your opportunity. For example, if you are in stage 1, you cannot select the Previous option.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Action Type";
                ValuesAllowed=[First;Next;Previous;Skip;Jump;Update];
                OnValidate=BEGIN
                             if "Action Type" = "Action Type"::Update then
                               UpdateActionTypeOnValidate;
                             if "Action Type" = "Action Type"::Jump then
                               JumpActionTypeOnValidate;
                             if "Action Type" = "Action Type"::Skip then
                               SkipActionTypeOnValidate;
                             if "Action Type" = "Action Type"::Previous then
                               PreviousActionTypeOnValidate;
                             if "Action Type" = "Action Type"::Next then
                               NextActionTypeOnValidate;
                             if "Action Type" = "Action Type"::First then
                               FirstActionTypeOnValidate;

                             WizardActionTypeValidate2;
                             UpdateCntrls;
                           END;

                ImplicitType=Option }

    { 5   ;1   ;Field     ;
                Name=Sales Cycle Stage;
                ToolTipML=ENU=Specifies the sales cycle stage currently of the opportunity.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Sales Cycle Stage";
                CaptionClass=FORMAT("Sales Cycle Stage Description");
                Editable=SalesCycleStageEditable;
                OnValidate=BEGIN
                             WizardSalesCycleStageValidate2;
                             SalesCycleStageOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           LookupSalesCycleStage;
                           ValidateSalesCycleStage;
                         END;

                ImplicitType=Integer }

    { 2   ;1   ;Field     ;
                Name=Date of Change;
                ToolTipML=ENU=Specifies the date this opportunity entry was last changed.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Date of Change";
                ImplicitType=Date }

    { 24  ;1   ;Field     ;
                Name=Estimated Value (LCY);
                CaptionML=ENU=Estimated sales value (LCY);
                ToolTipML=ENU=Specifies the estimated value of the opportunity entry.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Estimated Value (LCY)";
                ImplicitType=Decimal }

    { 27  ;1   ;Field     ;
                Name=Chances of Success %;
                CaptionML=ENU=Chances of Success (%);
                ToolTipML=ENU=Specifies the chances of success of the opportunity entry.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Chances of Success %";
                ImplicitType=Decimal }

    { 22  ;1   ;Field     ;
                Name=Estimated Close Date;
                CaptionML=ENU=Estimated Closing Date;
                ToolTipML=ENU=Specifies the estimated date when the opportunity entry will be closed.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Estimated Close Date";
                ImplicitType=Date }

    { 30  ;1   ;Field     ;
                Name=Cancel Old To Do;
                CaptionML=ENU=Cancel Existing Open Tasks;
                ToolTipML=ENU=Specifies a task is to be cancelled from the opportunity.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Cancel Old To Do";
                Enabled=CancelOldTaskEnable;
                ImplicitType=Boolean }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=untitled';
      Cont@1007 : Record Contact;
      SalesCycleStage@1008 : Record "Sales Cycle Stage";
      Opp@1023 : Record Opportunity;
      SalesCycleStageEditable@19046319 : Boolean INDATASET;
      OptionOneEnable@19038483 : Boolean INDATASET;
      OptionTwoEnable@19021894 : Boolean INDATASET;
      OptionThreeEnable@19072745 : Boolean INDATASET;
      OptionFiveEnable@19023658 : Boolean INDATASET;
      OptionFourEnable@19026445 : Boolean INDATASET;
      OptionSixEnable@19042740 : Boolean INDATASET;
      SalesQuoteEnable@19040029 : Boolean INDATASET;
      CancelOldTaskEnable@19073952 : Boolean INDATASET;
      Text666@19003950 : TextConst 'ENU=%1 is not a valid selection.';
      IsOnMobile@1001 : Boolean;

    LOCAL PROCEDURE Caption@1() : Text[260];
    VAR
      CaptionStr@1000 : Text[260];
    BEGIN
      if Cont.GET("Contact Company No.") then
        CaptionStr := COPYSTR(Cont."No." + ' ' + Cont.Name,1,MAXSTRLEN(CaptionStr));
      if Cont.GET("Contact No.") then
        CaptionStr := COPYSTR(CaptionStr + ' ' + Cont."No." + ' ' + Cont.Name,1,MAXSTRLEN(CaptionStr));
      if CaptionStr = '' then
        CaptionStr := Text000;

      exit(CaptionStr);
    END;

    LOCAL PROCEDURE UpdateEditable@3();
    BEGIN
      OptionOneEnable := NoOfSalesCyclesFirst > 0;
      OptionTwoEnable := NoOfSalesCyclesNext > 0;
      OptionThreeEnable := NoOfSalesCyclesPrev > 0;
      OptionFourEnable := NoOfSalesCyclesSkip > 1;
      OptionFiveEnable := NoOfSalesCyclesUpdate > 0;
      OptionSixEnable := NoOfSalesCyclesJump > 1;
    END;

    LOCAL PROCEDURE UpdateCntrls@4();
    VAR
      Task@1000 : Record "To-do";
    BEGIN
      case "Action Type" of
        "Action Type"::First:
          begin
            SalesCycleStageEditable := false;
            CancelOldTaskEnable := false;
          end;
        "Action Type"::Next:
          begin
            SalesCycleStageEditable := false;
            CancelOldTaskEnable := true;
          end;
        "Action Type"::Previous:
          begin
            SalesCycleStageEditable := false;
            CancelOldTaskEnable := true;
          end;
        "Action Type"::Skip:
          begin
            SalesCycleStageEditable := true;
            CancelOldTaskEnable := true;
          end;
        "Action Type"::Update:
          begin
            SalesCycleStageEditable := false;
            CancelOldTaskEnable := false;
          end;
        "Action Type"::Jump:
          begin
            SalesCycleStageEditable := true;
            CancelOldTaskEnable := true;
          end;
      end;
      Task.RESET;
      Task.SETCURRENTKEY("Opportunity No.");
      Task.SETRANGE("Opportunity No.","Opportunity No.");
      if Task.FINDFIRST then
        CancelOldTaskEnable := true;
      MODIFY;
    END;

    LOCAL PROCEDURE SalesCycleStageOnAfterValidate@19013183();
    BEGIN
      if SalesCycleStage.GET("Sales Cycle Code","Sales Cycle Stage") then
        "Sales Cycle Stage Description" := SalesCycleStage.Description;
    END;

    LOCAL PROCEDURE FirstActionTypeOnValidate@19058659();
    BEGIN
      if not OptionOneEnable then
        ERROR(Text666,"Action Type");
    END;

    LOCAL PROCEDURE NextActionTypeOnValidate@19014484();
    BEGIN
      if not OptionTwoEnable then
        ERROR(Text666,"Action Type");
    END;

    LOCAL PROCEDURE PreviousActionTypeOnValidate@19062437();
    BEGIN
      if not OptionThreeEnable then
        ERROR(Text666,"Action Type");
    END;

    LOCAL PROCEDURE SkipActionTypeOnValidate@19009201();
    BEGIN
      if not OptionFourEnable then
        ERROR(Text666,"Action Type");
    END;

    LOCAL PROCEDURE JumpActionTypeOnValidate@19068273();
    BEGIN
      if not OptionSixEnable then
        ERROR(Text666,"Action Type");
    END;

    LOCAL PROCEDURE UpdateActionTypeOnValidate@19068895();
    BEGIN
      if not OptionFiveEnable then
        ERROR(Text666,"Action Type");
    END;

    LOCAL PROCEDURE FinishPage@5();
    BEGIN
      CheckStatus2;
      FinishWizard2;
    END;

    LOCAL PROCEDURE UpdateEstimatedValues@2();
    VAR
      SalesCycleStage@1000 : Record "Sales Cycle Stage";
      SalesHeader@1001 : Record "Sales Header";
    BEGIN
      if SalesCycleStage.GET("Sales Cycle Code","Sales Cycle Stage") then begin
        "Estimated Close Date" := CALCDATE(SalesCycleStage."Date Formula","Date of Change");
        "Chances of Success %" := SalesCycleStage."Chances of Success %";
      end;
      if SalesHeader.GET(SalesHeader."Document Type"::Quote,Opp."Sales Document No.") then
        "Estimated Value (LCY)" := GetSalesDocValue(SalesHeader);

      MODIFY;
    END;

    BEGIN
    END.
  }
}

