OBJECT Table 5223 Detailed Employee Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Detailed Employee Ledger Entry"=m;
    OnInsert=BEGIN
               SetLedgerEntryAmount;
             END;

    CaptionML=ENU=Detailed Employee Ledger Entry;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No. }
    { 2   ;   ;Employee Ledger Entry No.;Integer  ;TableRelation="Employee Ledger Entry";
                                                   CaptionML=ENU=Employee Ledger Entry No. }
    { 3   ;   ;Entry Type          ;Option        ;CaptionML=ENU=Entry Type;
                                                   OptionCaptionML=ENU=,Initial Entry,Application;
                                                   OptionString=,"Initial Entry",Application }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=" ",Payment,Invoice,"Credit Memo","Finance Charge Memo",Reminder,Refund }
    { 6   ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 7   ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 8   ;   ;Amount (LCY)        ;Decimal       ;CaptionML=ENU=Amount (LCY);
                                                   AutoFormatType=1 }
    { 9   ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   CaptionML=ENU=Employee No. }
    { 10  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code }
    { 11  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit "User Management";
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=false;
                                                   CaptionML=ENU=User ID }
    { 12  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code }
    { 13  ;   ;Transaction No.     ;Integer       ;CaptionML=ENU=Transaction No. }
    { 14  ;   ;Journal Batch Name  ;Code10        ;TestTableRelation=false;
                                                   CaptionML=ENU=Journal Batch Name }
    { 15  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code }
    { 16  ;   ;Debit Amount        ;Decimal       ;CaptionML=ENU=Debit Amount;
                                                   BlankZero=true;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 17  ;   ;Credit Amount       ;Decimal       ;CaptionML=ENU=Credit Amount;
                                                   BlankZero=true;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 18  ;   ;Debit Amount (LCY)  ;Decimal       ;CaptionML=ENU=Debit Amount (LCY);
                                                   BlankZero=true;
                                                   AutoFormatType=1 }
    { 19  ;   ;Credit Amount (LCY) ;Decimal       ;CaptionML=ENU=Credit Amount (LCY);
                                                   BlankZero=true;
                                                   AutoFormatType=1 }
    { 21  ;   ;Initial Entry Global Dim. 1;Code20 ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   CaptionML=ENU=Initial Entry Global Dim. 1 }
    { 22  ;   ;Initial Entry Global Dim. 2;Code20 ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   CaptionML=ENU=Initial Entry Global Dim. 2 }
    { 35  ;   ;Initial Document Type;Option       ;CaptionML=ENU=Initial Document Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=" ",Payment,Invoice,"Credit Memo","Finance Charge Memo",Reminder,Refund }
    { 36  ;   ;Applied Empl. Ledger Entry No.;Integer;
                                                   CaptionML=ENU=Applied Empl. Ledger Entry No. }
    { 37  ;   ;Unapplied           ;Boolean       ;CaptionML=ENU=Unapplied }
    { 38  ;   ;Unapplied by Entry No.;Integer     ;TableRelation="Detailed Vendor Ledg. Entry";
                                                   CaptionML=ENU=Unapplied by Entry No. }
    { 42  ;   ;Application No.     ;Integer       ;CaptionML=ENU=Application No.;
                                                   Editable=false }
    { 43  ;   ;Ledger Entry Amount ;Boolean       ;CaptionML=ENU=Ledger Entry Amount;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"Entry No."                             ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE UpdateDebitCredit@47(Correction@1000 : Boolean);
    BEGIN
      if ((Amount > 0) or ("Amount (LCY)" > 0)) and not Correction or
         ((Amount < 0) or ("Amount (LCY)" < 0)) and Correction
      then begin
        "Debit Amount" := Amount;
        "Credit Amount" := 0;
        "Debit Amount (LCY)" := "Amount (LCY)";
        "Credit Amount (LCY)" := 0;
      end else begin
        "Debit Amount" := 0;
        "Credit Amount" := -Amount;
        "Debit Amount (LCY)" := 0;
        "Credit Amount (LCY)" := -"Amount (LCY)";
      end;
    END;

    [External]
    PROCEDURE SetZeroTransNo@3(TransactionNo@1000 : Integer);
    VAR
      DtldEmplLedgEntry@1001 : Record "Detailed Employee Ledger Entry";
      ApplicationNo@1002 : Integer;
    BEGIN
      DtldEmplLedgEntry.SETCURRENTKEY("Transaction No.");
      DtldEmplLedgEntry.SETRANGE("Transaction No.",TransactionNo);
      if DtldEmplLedgEntry.FINDSET(true) then begin
        ApplicationNo := DtldEmplLedgEntry."Entry No.";
        repeat
          DtldEmplLedgEntry."Transaction No." := 0;
          DtldEmplLedgEntry."Application No." := ApplicationNo;
          DtldEmplLedgEntry.MODIFY;
        until DtldEmplLedgEntry.NEXT = 0;
      end;
    END;

    LOCAL PROCEDURE SetLedgerEntryAmount@1();
    BEGIN
      "Ledger Entry Amount" := not ("Entry Type" = "Entry Type"::Application);
    END;

    BEGIN
    END.
  }
}

