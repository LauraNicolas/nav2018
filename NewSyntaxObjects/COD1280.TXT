OBJECT Codeunit 1280 Map Currency Exchange Rate
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    TableNo="Data Exch.";
    OnRun=VAR
            CurrencyExchangeRate@1000 : Record "Currency Exchange Rate";
          BEGIN
            MapCurrencyExchangeRates(Rec,CurrencyExchangeRate);
          END;

  }
  CODE
  {
    VAR
      FieldNotMappedErr@1000 : TextConst '@@@=%1 - Field Caption;ENU=Mandatory field %1 is not mapped. Map the field by choosing Field Mapping in the Currency Exchange Rate Sync. Setup window.';

    [Internal]
    PROCEDURE MapCurrencyExchangeRates@10(DataExch@1001 : Record "Data Exch.";VAR CurrencyExchangeRate@1003 : Record "Currency Exchange Rate");
    VAR
      DataExchField@1002 : Record "Data Exch. Field";
      CurrentLineNo@1000 : Integer;
    BEGIN
      CheckMandatoryFieldsMapped(DataExch);
      DataExchField.SETAUTOCALCFIELDS("Data Exch. Def Code");

      DataExchField.SETRANGE("Data Exch. No.",DataExch."Entry No.");
      if DataExchField.ISEMPTY then
        exit;

      COMMIT;

      CurrentLineNo := -1;
      if DataExchField.FINDSET then
        repeat
          if CurrentLineNo <> DataExchField."Line No." then begin
            CurrentLineNo := DataExchField."Line No.";
            if UpdateCurrencyExchangeRate(CurrencyExchangeRate,DataExchField) then;
          end;
        until DataExchField.NEXT = 0;
    END;

    LOCAL PROCEDURE UpdateCurrencyExchangeRate@25(VAR CurrencyExchangeRate@1002 : Record "Currency Exchange Rate";DefinitionDataExchField@1000 : Record "Data Exch. Field") : Boolean;
    VAR
      RecordRef@1007 : RecordRef;
    BEGIN
      CLEAR(CurrencyExchangeRate);

      RecordRef.GETTABLE(CurrencyExchangeRate);
      if not SetFields(RecordRef,DefinitionDataExchField) then
        exit(false);
      RecordRef.SETTABLE(CurrencyExchangeRate);

      COMMIT;
      exit(true);
    END;

    LOCAL PROCEDURE SetFields@8(VAR RecordRef@1000 : RecordRef;DefinitionDataExchField@1003 : Record "Data Exch. Field") : Boolean;
    VAR
      CurrencyExchangeRate@1001 : Record "Currency Exchange Rate";
    BEGIN
      if not AssignValue(RecordRef,CurrencyExchangeRate.FIELDNO("Starting Date"),DefinitionDataExchField,TODAY) then
        exit(false);
      if not AssignValue(RecordRef,CurrencyExchangeRate.FIELDNO("Currency Code"),DefinitionDataExchField,'') then
        exit(false);
      if not AssignValue(RecordRef,CurrencyExchangeRate.FIELDNO("Relational Currency Code"),DefinitionDataExchField,'') then
        exit(false);
      if not AssignValue(RecordRef,CurrencyExchangeRate.FIELDNO("Exchange Rate Amount"),DefinitionDataExchField,1) then
        exit(false);
      if not AssignValue(RecordRef,CurrencyExchangeRate.FIELDNO("Relational Exch. Rate Amount"),DefinitionDataExchField,0) then
        exit(false);

      RecordRef.SETTABLE(CurrencyExchangeRate);
      if not AssignValue(
           RecordRef,CurrencyExchangeRate.FIELDNO("Adjustment Exch. Rate Amount"),DefinitionDataExchField,
           CurrencyExchangeRate."Exchange Rate Amount")
      then
        exit(false);
      if not AssignValue(
           RecordRef,CurrencyExchangeRate.FIELDNO("Relational Adjmt Exch Rate Amt"),DefinitionDataExchField,
           CurrencyExchangeRate."Relational Exch. Rate Amount")
      then
        exit(false);
      if not AssignValue(
           RecordRef,CurrencyExchangeRate.FIELDNO("Fix Exchange Rate Amount"),DefinitionDataExchField,
           CurrencyExchangeRate."Fix Exchange Rate Amount"::Currency)
      then
        exit(false);

      if not RecordRef.INSERT(true) then
        exit(RecordRef.MODIFY(true));
      exit(true);
    END;

    [TryFunction]
    LOCAL PROCEDURE AssignValue@1(VAR RecordRef@1000 : RecordRef;FieldNo@1001 : Integer;DefinitionDataExchField@1002 : Record "Data Exch. Field";DefaultValue@1007 : Variant);
    VAR
      DataExchField@1005 : Record "Data Exch. Field";
      DataExchFieldMapping@1008 : Record "Data Exch. Field Mapping";
      TempFieldIdsToNegate@1004 : TEMPORARY Record Integer;
      ProcessDataExch@1003 : Codeunit "Process Data Exch.";
      FieldRef@1006 : FieldRef;
    BEGIN
      if GetFieldValue(DefinitionDataExchField,FieldNo,DataExchField) and
         DataExchFieldMapping.GET(
           DataExchField."Data Exch. Def Code",
           DataExchField."Data Exch. Line Def Code",
           RecordRef.NUMBER,
           DataExchField."Column No.",
           FieldNo)
      then begin
        ProcessDataExch.SetField(RecordRef,DataExchFieldMapping,DataExchField,TempFieldIdsToNegate);
        ProcessDataExch.NegateAmounts(RecordRef,TempFieldIdsToNegate);
      end else begin
        FieldRef := RecordRef.FIELD(FieldNo);
        FieldRef.VALIDATE(DefaultValue);
      end;
    END;

    LOCAL PROCEDURE GetFieldValue@6(DefinitionDataExchField@1000 : Record "Data Exch. Field";FieldNo@1002 : Integer;VAR DataExchField@1005 : Record "Data Exch. Field") : Boolean;
    VAR
      DataExchFieldMapping@1003 : Record "Data Exch. Field Mapping";
      ColumnNo@1001 : Integer;
    BEGIN
      if not GetColumnNo(FieldNo,DefinitionDataExchField,ColumnNo) then
        exit;

      DataExchField.SETRANGE("Data Exch. No.",DefinitionDataExchField."Data Exch. No.");
      DataExchField.SETRANGE("Data Exch. Line Def Code",DefinitionDataExchField."Data Exch. Line Def Code");
      DataExchField.SETRANGE("Line No.",DefinitionDataExchField."Line No.");
      DataExchField.SETRANGE("Column No.",ColumnNo);
      DataExchField.SETAUTOCALCFIELDS("Data Exch. Def Code");

      if DataExchField.FINDFIRST then
        exit(true);

      DataExchFieldMapping.SETRANGE("Data Exch. Def Code",DefinitionDataExchField."Data Exch. Def Code");
      DataExchFieldMapping.SETRANGE("Data Exch. Line Def Code",DefinitionDataExchField."Data Exch. Line Def Code");
      DataExchFieldMapping.SETRANGE("Column No.",ColumnNo);
      DataExchFieldMapping.SETRANGE("Use Default Value",true);
      DataExchFieldMapping.SETFILTER("Default Value",'<>%1','');

      if DataExchFieldMapping.FINDFIRST then begin
        DataExchField.COPY(DefinitionDataExchField);
        DataExchField."Column No." := ColumnNo;
        DataExchField.Value := DataExchFieldMapping."Default Value";
        exit(true);
      end;

      exit(false);
    END;

    LOCAL PROCEDURE GetColumnNo@2(FieldNo@1000 : Integer;DataExchField@1002 : Record "Data Exch. Field";VAR ColumnNo@1001 : Integer) : Boolean;
    VAR
      DataExchFieldMapping@1003 : Record "Data Exch. Field Mapping";
    BEGIN
      DataExchField.CALCFIELDS("Data Exch. Def Code");
      DataExchFieldMapping.SETRANGE("Data Exch. Line Def Code",DataExchField."Data Exch. Line Def Code");
      DataExchFieldMapping.SETRANGE("Data Exch. Def Code",DataExchField."Data Exch. Def Code");
      DataExchFieldMapping.SETRANGE("Table ID",DATABASE::"Currency Exchange Rate");
      DataExchFieldMapping.SETRANGE("Field ID",FieldNo);

      if not DataExchFieldMapping.FINDFIRST then
        exit(false);

      ColumnNo := DataExchFieldMapping."Column No.";
      exit(true);
    END;

    LOCAL PROCEDURE CheckMandatoryFieldsMapped@3(DataExch@1000 : Record "Data Exch.");
    VAR
      DataExchFieldMapping@1001 : Record "Data Exch. Field Mapping";
      TempField@1002 : TEMPORARY Record Field;
    BEGIN
      GetMandatoryFields(TempField);
      TempField.FINDSET;

      repeat
        DataExchFieldMapping.SETRANGE("Data Exch. Def Code",DataExch."Data Exch. Def Code");
        DataExchFieldMapping.SETRANGE("Field ID",TempField."No.");
        if DataExchFieldMapping.ISEMPTY then
          ERROR(FieldNotMappedErr,TempField.FieldName);
      until TempField.NEXT = 0;
    END;

    [Internal]
    PROCEDURE GetSuggestedFields@9(VAR TempField@1000 : TEMPORARY Record Field);
    BEGIN
      GetMandatoryFields(TempField);
      GetCommonlyUsedFields(TempField);
    END;

    [Internal]
    PROCEDURE GetMandatoryFields@4(VAR TempField@1000 : TEMPORARY Record Field);
    VAR
      CurrencyExchangeRate@1002 : Record "Currency Exchange Rate";
    BEGIN
      InsertMandatoryField(TempField,CurrencyExchangeRate.FIELDNO("Currency Code"),DATABASE::"Currency Exchange Rate");
      InsertMandatoryField(TempField,CurrencyExchangeRate.FIELDNO("Relational Exch. Rate Amount"),DATABASE::"Currency Exchange Rate");
    END;

    LOCAL PROCEDURE GetCommonlyUsedFields@11(VAR TempField@1000 : TEMPORARY Record Field);
    VAR
      CurrencyExchangeRate@1002 : Record "Currency Exchange Rate";
    BEGIN
      InsertMandatoryField(TempField,CurrencyExchangeRate.FIELDNO("Starting Date"),DATABASE::"Currency Exchange Rate");
      InsertMandatoryField(TempField,CurrencyExchangeRate.FIELDNO("Exchange Rate Amount"),DATABASE::"Currency Exchange Rate");
    END;

    LOCAL PROCEDURE InsertMandatoryField@5(VAR TempField@1002 : TEMPORARY Record Field;FieldID@1000 : Integer;TableID@1001 : Integer);
    VAR
      Field@1003 : Record Field;
    BEGIN
      Field.GET(TableID,FieldID);
      TempField.COPY(Field);
      TempField.INSERT;
    END;

    [EventSubscriber(Table,1400,OnRegisterServiceConnection)]
    [Internal]
    PROCEDURE HandleCurrencyExchangeRateRegisterServiceConnection@7(VAR ServiceConnection@1005 : Record "Service Connection");
    VAR
      CurrExchRateUpdateSetup@1001 : Record "Curr. Exch. Rate Update Setup";
      RecRef@1002 : RecordRef;
      InStream@1004 : InStream;
      ServiceURL@1000 : Text;
    BEGIN
      if CurrExchRateUpdateSetup.ISEMPTY then
        CODEUNIT.RUN(CODEUNIT::"Set Up Curr Exch Rate Service");

      if CurrExchRateUpdateSetup.FINDSET then
        repeat
          RecRef.GETTABLE(CurrExchRateUpdateSetup);
          ServiceConnection.Status := ServiceConnection.Status::Disabled;
          if CurrExchRateUpdateSetup.Enabled then
            ServiceConnection.Status := ServiceConnection.Status::Enabled;
          CurrExchRateUpdateSetup.CALCFIELDS("Web Service URL");
          if CurrExchRateUpdateSetup."Web Service URL".HASVALUE then begin
            CurrExchRateUpdateSetup."Web Service URL".CREATEINSTREAM(InStream);
            InStream.READ(ServiceURL);
          end;

          with CurrExchRateUpdateSetup do
            ServiceConnection.InsertServiceConnection(
              ServiceConnection,RecRef.RECORDID,Description,ServiceURL,PAGE::"Curr. Exch. Rate Service Card");
        until CurrExchRateUpdateSetup.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

