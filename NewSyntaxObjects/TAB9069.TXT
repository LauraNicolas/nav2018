OBJECT Table 9069 O365 Sales Cue
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=O365 Sales Cue;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Overdue Sales Documents;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("Cust. Ledger Entry" WHERE ("Document Type"=FILTER(Invoice|"Credit Memo"),
                                                                                                 "Due Date"=FIELD("Overdue Date Filter"),
                                                                                                 Open=CONST(true)));
                                                   CaptionML=ENU=Overdue Sales Documents }
    { 3   ;   ;Customers - Blocked ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count(Customer WHERE (Blocked=FILTER(<>" ")));
                                                   CaptionML=ENU=Customers - Blocked }
    { 4   ;   ;CM Date Filter      ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=CM Date Filter }
    { 5   ;   ;YTD Date Filter     ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=YTD Date Filter }
    { 6   ;   ;Due Date Filter     ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Due Date Filter }
    { 7   ;   ;Overdue Date Filter ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Overdue Date Filter }
    { 8   ;   ;User ID Filter      ;Code50        ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=User ID Filter }
    { 9   ;   ;Non-Applied Payments;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Bank Acc. Reconciliation" WHERE ("Statement Type"=CONST("Payment Application")));
                                                   CaptionML=ENU=Non-Applied Payments }
    { 10  ;   ;Invoiced YTD        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE ("Posting Date"=FIELD("YTD Date Filter"),
                                                                                                                      "Entry Type"=CONST("Initial Entry"),
                                                                                                                      "Document Type"=FILTER(>Payment)));
                                                   CaptionML=ENU=Invoiced YTD }
    { 11  ;   ;Invoiced CM         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE ("Posting Date"=FIELD("CM Date Filter"),
                                                                                                                      "Entry Type"=CONST("Initial Entry"),
                                                                                                                      "Document Type"=FILTER(>Payment)));
                                                   CaptionML=ENU=Invoiced CM }
    { 12  ;   ;Sales Invoices Outstanding;Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)");
                                                   CaptionML=ENU=Sales Invoices Outstanding }
    { 13  ;   ;Sales Invoices Overdue;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE ("Initial Entry Due Date"=FIELD("Overdue Date Filter")));
                                                   CaptionML=ENU=Sales Invoices Overdue }
    { 14  ;   ;No. of Quotes       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE ("Document Type"=CONST(Quote)));
                                                   CaptionML=ENU=No. of Quotes }
    { 15  ;   ;No. of Draft Invoices;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE ("Document Type"=CONST(Invoice)));
                                                   CaptionML=ENU=No. of Draft Invoices }
  }
  KEYS
  {
    {    ;"Primary Key"                           ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NoOutstandingMsg@1001 : TextConst 'ENU=There are no outstanding invoices.';
      NoOverdueMsg@1000 : TextConst 'ENU=There are no overdue invoices.';

    [Internal]
    PROCEDURE OnOpenActivitiesPage@1(VAR CurrencyFormatTxt@1004 : Text);
    VAR
      AccountingPeriod@1003 : Record "Accounting Period";
      GLSetup@1002 : Record "General Ledger Setup";
      O365SalesStatistics@1001 : Codeunit "O365 Sales Statistics";
      RoleCenterNotificationMgt@1000 : Codeunit "Role Center Notification Mgt.";
    BEGIN
      RESET;
      if not GET then begin
        INIT;
        INSERT;
      end;

      if GUIALLOWED then
        RunWizardIfNoCustomers;

      O365SalesStatistics.GetCurrentAccountingPeriod(AccountingPeriod);

      SETFILTER("Due Date Filter",'..%1',WORKDATE);
      SETFILTER("Overdue Date Filter",'<%1',WORKDATE);
      SETFILTER("YTD Date Filter",'%1..%2',AccountingPeriod."Starting Date",WORKDATE);
      SETFILTER("CM Date Filter",'%1..%2',CALCDATE('<CM+1D-1M>',WORKDATE),WORKDATE);

      GLSetup.GET;

      CurrencyFormatTxt := STRSUBSTNO('%1<precision, 0:0><standard format, 0>',GLSetup.GetCurrencySymbol);

      if GUIALLOWED then
        RoleCenterNotificationMgt.ShowNotifications;
    END;

    LOCAL PROCEDURE RunWizardIfNoCustomers@2();
    VAR
      Item@1001 : Record Item;
      O365SalesInitialSetup@1002 : Codeunit "O365 Sales Initial Setup";
      O365FirstInvoiceWizard@1000 : Page "O365 First Invoice Wizard";
    BEGIN
      if not Item.ISEMPTY then
        exit;
      COMMIT;
      O365FirstInvoiceWizard.RUNMODAL;
      if O365FirstInvoiceWizard.HasCompleted then
        O365SalesInitialSetup.NotifySetupComplete(O365FirstInvoiceWizard.GetInvoiceNo);
    END;

    [Internal]
    PROCEDURE ShowInvoices@3(OnlyOverdue@1000 : Boolean);
    VAR
      CustLedgerEntry@1001 : Record "Cust. Ledger Entry";
      Customer@1003 : Record Customer;
      O365SalesStatistics@1002 : Codeunit "O365 Sales Statistics";
    BEGIN
      CustLedgerEntry.SETRANGE(Open,true);
      if OnlyOverdue then
        CustLedgerEntry.SETFILTER("Due Date",'<%1',WORKDATE);

      if O365SalesStatistics.GetCustomersFromCustLedgerEntries(CustLedgerEntry,Customer) then
        PAGE.RUN(PAGE::"O365 Outstanding Customer List",Customer)
      else // no customers
        if OnlyOverdue then
          MESSAGE(NoOverdueMsg)
        else
          MESSAGE(NoOutstandingMsg);
    END;

    [Internal]
    PROCEDURE ShowMonthlySalesOverview@4();
    VAR
      TempNameValueBuffer@1002 : TEMPORARY Record "Name/Value Buffer";
      Month@1000 : Integer;
    BEGIN
      Month := DATE2DMY(WORKDATE,2);
      TempNameValueBuffer.INIT;
      TempNameValueBuffer.ID := Month;
      TempNameValueBuffer.INSERT;

      PAGE.RUN(PAGE::"O365 Sales Month Summary",TempNameValueBuffer);
    END;

    [Internal]
    PROCEDURE ShowYearlySalesOverview@5();
    VAR
      O365SalesStatistics@1000 : Codeunit "O365 Sales Statistics";
    BEGIN
      if O365SalesStatistics.GetRelativeMonthToFY <> 1 then
        PAGE.RUN(PAGE::"O365 Sales Year Summary")
      else
        ShowMonthlySalesOverview; // the current month is the first month in the FY
    END;

    PROCEDURE ShowQuotes@6();
    BEGIN
      ShowUnpostedDocuments(true);
    END;

    PROCEDURE ShowDraftInvoices@7();
    BEGIN
      ShowUnpostedDocuments(false);
    END;

    PROCEDURE ShowUnpostedDocuments@11(FilterToQuotes@1001 : Boolean);
    VAR
      O365SalesDocument@1000 : Record "O365 Sales Document";
    BEGIN
      O365SalesDocument.SETRANGE(Posted,false);
      if FilterToQuotes then
        O365SalesDocument.SETRANGE("Document Type",O365SalesDocument."Document Type"::Quote)
      else
        O365SalesDocument.SETRANGE("Document Type",O365SalesDocument."Document Type"::Invoice);
      PAGE.RUN(PAGE::"O365 Customer Sales Documents",O365SalesDocument);
    END;

    BEGIN
    END.
  }
}

