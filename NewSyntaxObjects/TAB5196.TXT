OBJECT Table 5196 To-do Interaction Language
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               RemoveAttachment(false);
             END;

    CaptionML=ENU=Task Interaction Language;
    LookupPageID="Task Interaction Languages";
  }
  FIELDS
  {
    { 1   ;   ;To-do No.           ;Code20        ;TableRelation="To-do";
                                                   CaptionML=ENU=Task No. }
    { 2   ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=ENU=Language Code }
    { 3   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 4   ;   ;Attachment No.      ;Integer       ;TableRelation=Attachment;
                                                   CaptionML=ENU=Attachment No. }
  }
  KEYS
  {
    {    ;"To-do No.","Language Code"             ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1002 : TextConst 'ENU=You have canceled the create process.';
      Text001@1001 : TextConst 'ENU=Replace existing attachment?';
      Text002@1000 : TextConst 'ENU=You have canceled the import process.';
      Text003@1003 : TextConst 'ENU=You cannot create attachments here.';

    [Internal]
    PROCEDURE CreateAttachment@1(PageNotEditable@1004 : Boolean) : Boolean;
    VAR
      Attachment@1000 : Record Attachment;
      WordManagement@1002 : Codeunit WordManagement;
      NewAttachNo@1003 : Integer;
    BEGIN
      if PageNotEditable then
        ERROR(Text003);
      if "Attachment No." <> 0 then begin
        if Attachment.GET("Attachment No.") then
          Attachment.TESTFIELD("Read Only",false);
        if not CONFIRM(Text001,false) then
          exit;
      end;

      NewAttachNo := WordManagement.CreateWordAttachment("To-do No." + ' ' + Description,"Language Code");
      if NewAttachNo <> 0 then begin
        if "Attachment No." <> 0 then
          RemoveAttachment(false);
        "Attachment No." := NewAttachNo;
        MODIFY;
        exit(true);
      end;
      ERROR(Text000);
    END;

    [Internal]
    PROCEDURE OpenAttachment@2(PageNotEditable@1001 : Boolean);
    VAR
      Attachment@1000 : Record Attachment;
    BEGIN
      if "Attachment No." = 0 then
        exit;
      Attachment.GET("Attachment No.");
      if PageNotEditable then
        Attachment."Read Only" := true;
      Attachment.OpenAttachment("To-do No." + ' ' + Description,false,"Language Code");
    END;

    [Internal]
    PROCEDURE CopyFromAttachment@3();
    VAR
      TaskInteractionLanguage@1000 : Record "To-do Interaction Language";
      Attachment@1001 : Record Attachment;
      AttachmentManagement@1002 : Codeunit AttachmentManagement;
      NewAttachNo@1003 : Integer;
    BEGIN
      if Attachment.GET("Attachment No.") then
        Attachment.TESTFIELD("Read Only",false);

      if "Attachment No." <> 0 then begin
        if not CONFIRM(Text001,false) then
          exit;
        RemoveAttachment(false);
        "Attachment No." := 0;
        MODIFY;
        COMMIT;
      end;

      TaskInteractionLanguage.SETFILTER("Attachment No.",'<>%1',0);
      if PAGE.RUNMODAL(0,TaskInteractionLanguage) = ACTION::LookupOK then begin
        NewAttachNo := AttachmentManagement.InsertAttachment(TaskInteractionLanguage."Attachment No.");
        if NewAttachNo <> 0 then begin
          "Attachment No." := NewAttachNo;
          MODIFY;
        end;
      end;
    END;

    [Internal]
    PROCEDURE ImportAttachment@5();
    VAR
      Attachment@1000 : Record Attachment;
      TempAttachment@1001 : TEMPORARY Record Attachment;
      MarketingSetup@1003 : Record "Marketing Setup";
      AttachmentManagement@1002 : Codeunit AttachmentManagement;
      FileName@1004 : Text;
    BEGIN
      if "Attachment No." <> 0 then begin
        if Attachment.GET("Attachment No.") then
          Attachment.TESTFIELD("Read Only",false);
        if not CONFIRM(Text001,false) then
          exit;
      end;

      CLEAR(TempAttachment);
      if TempAttachment.ImportAttachmentFromClientFile('',true,false) then begin
        if "Attachment No." = 0 then
          Attachment.GET(AttachmentManagement.InsertAttachment(0))
        else
          Attachment.GET("Attachment No.");
        TempAttachment."No." := Attachment."No.";
        TempAttachment."Storage Pointer" := Attachment."Storage Pointer";
        TempAttachment.WizSaveAttachment;
        MarketingSetup.GET;
        if MarketingSetup."Attachment Storage Type" = MarketingSetup."Attachment Storage Type"::"Disk File" then
          if TempAttachment."No." <> 0 then begin
            FileName := TempAttachment.ConstDiskFileName;
            if FileName <> '' then
              Attachment.ExportAttachmentToServerFile(FileName);
          end;

        Attachment."Storage Type" := TempAttachment."Storage Type";
        Attachment."Storage Pointer" := TempAttachment."Storage Pointer";
        Attachment."Attachment File" := TempAttachment."Attachment File";
        Attachment."File Extension" := TempAttachment."File Extension";
        Attachment.MODIFY;
        "Attachment No." := Attachment."No.";
        MODIFY;
      end else
        ERROR(Text002);
    END;

    [Internal]
    PROCEDURE ExportAttachment@6();
    VAR
      Attachment@1000 : Record Attachment;
      FileName@1001 : Text[1024];
    BEGIN
      if Attachment.GET("Attachment No.") then
        Attachment.ExportAttachmentToClientFile(FileName);
    END;

    [Internal]
    PROCEDURE RemoveAttachment@7(Prompt@1000 : Boolean) : Boolean;
    VAR
      Attachment@1001 : Record Attachment;
    BEGIN
      if Attachment.GET("Attachment No.") then
        if Attachment.RemoveAttachment(Prompt) then begin
          "Attachment No." := 0;
          MODIFY;
          exit(true);
        end;
    END;

    BEGIN
    END.
  }
}

