OBJECT Page 157 Item Availability by Periods
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Item Availability by Periods;
    SaveValues=true;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    LinksAllowed=false;
    SourceTable=Item;
    PageType=ListPlus;
    RefreshOnActivate=true;
    OnAfterGetRecord=BEGIN
                       SETRANGE("Drop Shipment Filter",false);
                       UpdateSubForm;
                     END;

    OnQueryClosePage=BEGIN
                       if CloseAction = ACTION::LookupOK then
                         LookupOKOnPush;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 20      ;1   ;ActionGroup;
                      Name=&Item;
                      CaptionML=ENU=&Item;
                      Image=Item }
      { 21      ;2   ;ActionGroup;
                      Name=&Item Availability by;
                      CaptionML=ENU=&Item Availability by;
                      Image=ItemAvailability }
      { 2       ;3   ;Action    ;
                      Name=Event;
                      CaptionML=ENU=Event;
                      ToolTipML=ENU=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItem(Rec,ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 23      ;3   ;Action    ;
                      Name=Variant;
                      CaptionML=ENU=Variant;
                      ToolTipML=ENU=View or edit the item's variants. Instead of setting up each color of an item as a separate item, you can set up the various colors as variants of the item.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Item Availability by Variant";
                      RunPageLink="No."=FIELD("No."),
                                  "Global Dimension 1 Filter"=FIELD("Global Dimension 1 Filter"),
                                  "Global Dimension 2 Filter"=FIELD("Global Dimension 2 Filter"),
                                  "Location Filter"=FIELD("Location Filter"),
                                  "Drop Shipment Filter"=FIELD("Drop Shipment Filter"),
                                  "Variant Filter"=FIELD("Variant Filter");
                      Image=ItemVariant }
      { 24      ;3   ;Action    ;
                      Name=Location;
                      CaptionML=ENU=Location;
                      ToolTipML=ENU=View the actual and projected quantity of the item per location.;
                      ApplicationArea=#Location;
                      RunObject=Page "Item Availability by Location";
                      RunPageLink="No."=FIELD("No."),
                                  "Global Dimension 1 Filter"=FIELD("Global Dimension 1 Filter"),
                                  "Global Dimension 2 Filter"=FIELD("Global Dimension 2 Filter"),
                                  "Location Filter"=FIELD("Location Filter"),
                                  "Drop Shipment Filter"=FIELD("Drop Shipment Filter"),
                                  "Variant Filter"=FIELD("Variant Filter");
                      Image=Warehouse }
      { 3       ;3   ;Action    ;
                      Name=BOM Level;
                      CaptionML=ENU=BOM Level;
                      ToolTipML=ENU=View availability figures for items on bills of materials that show how many units of a parent item you can make based on the availability of child items.;
                      ApplicationArea=#Advanced;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItem(Rec,ItemAvailFormsMgt.ByBOM);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Options;
                CaptionML=ENU=Options }

    { 6   ;2   ;Field     ;
                Name=PeriodType;
                CaptionML=ENU=View by;
                ToolTipML=ENU=Specifies by which period amounts are displayed.;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Period;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             if PeriodType = PeriodType::Period then
                               PeriodPeriodTypeOnValidate;
                             if PeriodType = PeriodType::Year then
                               YearPeriodTypeOnValidate;
                             if PeriodType = PeriodType::Quarter then
                               QuarterPeriodTypeOnValidate;
                             if PeriodType = PeriodType::Month then
                               MonthPeriodTypeOnValidate;
                             if PeriodType = PeriodType::Week then
                               WeekPeriodTypeOnValidate;
                             if PeriodType = PeriodType::Day then
                               DayPeriodTypeOnValidate;
                           END;

                ImplicitType=Option }

    { 14  ;2   ;Field     ;
                Name=AmountType;
                CaptionML=ENU=View as;
                ToolTipML=ENU=Specifies how amounts are displayed. Net Change: The net change in the balance for the selected period. Balance at Date: The balance as of the last day in the selected period.;
                OptionCaptionML=ENU=Net Change,Balance at Date;
                ApplicationArea=#Advanced;
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             if AmountType = AmountType::"Balance at Date" then
                               BalanceatDateAmountTypeOnValid;
                             if AmountType = AmountType::"Net Change" then
                               NetChangeAmountTypeOnValidate;
                           END;

                ImplicitType=Option }

    { 5   ;1   ;Part      ;
                Name=ItemAvailLines;
                ApplicationArea=#Basic,#Suite;
                PagePartID="Item Availability Lines" }

  }
  CODE
  {
    VAR
      ItemAvailFormsMgt@1003 : Codeunit "Item Availability Forms Mgt";
      PeriodType@1000 : 'Day,Week,Month,Quarter,Year,Period';
      AmountType@1001 : '"Net Change","Balance at Date"';
      LastDate@1002 : Date;

    LOCAL PROCEDURE UpdateSubForm@1();
    BEGIN
      CurrPage.ItemAvailLines.PAGE.Set(Rec,PeriodType,AmountType);
    END;

    [External]
    PROCEDURE GetLastDate@2() : Date;
    BEGIN
      exit(LastDate);
    END;

    LOCAL PROCEDURE DayPeriodTypeOnPush@19008851();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnPush@19046063();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnPush@19047374();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnPush@19018850();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnPush@19051042();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE PeriodPeriodTypeOnPush@19032639();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnPush@19049003();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnPush@19074855();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    VAR
      Date@1001 : Record Date;
    BEGIN
      CurrPage.ItemAvailLines.PAGE.GETRECORD(Date);
      LastDate := Date."Period Start";
    END;

    LOCAL PROCEDURE DayPeriodTypeOnValidate@19012979();
    BEGIN
      DayPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnValidate@19058475();
    BEGIN
      WeekPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnValidate@19021027();
    BEGIN
      MonthPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnValidate@19015346();
    BEGIN
      QuarterPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnValidate@19064743();
    BEGIN
      YearPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE PeriodPeriodTypeOnValidate@19066307();
    BEGIN
      PeriodPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnValidate@19062218();
    BEGIN
      NetChangeAmountTypeOnPush;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnValid@19007073();
    BEGIN
      BalanceatDateAmountTypeOnPush;
    END;

    BEGIN
    END.
  }
}

