OBJECT Page 6053 Service Contract Quote
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Contract Quote;
    SourceTable="Service Contract Header";
    SourceTableView=WHERE("Contract Type"=FILTER(Quote));
    PageType=Document;
    RefreshOnActivate=true;
    OnInit=BEGIN
             InvoiceAfterServiceEnable := true;
             PrepaidEnable := true;
           END;

    OnOpenPage=BEGIN
                 if UserMgt.GetServiceFilter <> '' then begin
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetServiceFilter);
                   FILTERGROUP(0);
                 end;
               END;

    OnAfterGetRecord=BEGIN
                       UpdateShiptoCode;
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetServiceFilter;
                END;

    OnAfterGetCurrRecord=BEGIN
                           CALCFIELDS("Calcd. Annual Amount");
                           ActivateFields;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 6       ;1   ;ActionGroup;
                      Name=&Quote;
                      CaptionML=ENU=&Quote;
                      Image=Quote }
      { 70      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 71      ;2   ;Action    ;
                      Name=Co&mments;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Service;
                      RunObject=Page "Service Comment Sheet";
                      RunPageLink="Table Name"=CONST("Service Contract"),
                                  "Table Subtype"=FIELD("Contract Type"),
                                  "No."=FIELD("Contract No."),
                                  "Table Line No."=CONST(0);
                      Image=ViewComments }
      { 81      ;2   ;Action    ;
                      Name=Service Dis&counts;
                      CaptionML=ENU=Service Dis&counts;
                      ApplicationArea=#Service;
                      RunObject=Page "Contract/Service Discounts";
                      RunPageLink="Contract Type"=FIELD("Contract Type"),
                                  "Contract No."=FIELD("Contract No.");
                      Image=Discount }
      { 72      ;2   ;Action    ;
                      Name=Service &Hours;
                      CaptionML=ENU=Service &Hours;
                      ApplicationArea=#Service;
                      RunObject=Page "Service Hours";
                      RunPageLink="Service Contract No."=FIELD("Contract No."),
                                  "Service Contract Type"=FILTER(Quote);
                      Image=ServiceHours }
      { 98      ;2   ;Action    ;
                      Name=&Filed Contract Quotes;
                      CaptionML=ENU=&Filed Contract Quotes;
                      ToolTipML=ENU=View filed contract quotes.;
                      ApplicationArea=#Service;
                      RunObject=Page "Filed Service Contract List";
                      RunPageView=SORTING("Contract Type Relation","Contract No. Relation","File Date","File Time")
                                  ORDER(Descending);
                      RunPageLink="Contract Type Relation"=FIELD("Contract Type"),
                                  "Contract No. Relation"=FIELD("Contract No.");
                      Image=Quote }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 101     ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 103     ;2   ;Action    ;
                      Name=&Select Contract Quote Lines;
                      CaptionML=ENU=&Select Contract Quote Lines;
                      ApplicationArea=#Service;
                      Image=CalculateLines;
                      OnAction=BEGIN
                                 CheckRequiredFields;
                                 GetServItemLine;
                               END;
                                }
      { 36      ;2   ;Action    ;
                      Name=Copy &Document...;
                      CaptionML=ENU=Copy &Document...;
                      ApplicationArea=#Service;
                      Promoted=true;
                      Image=CopyDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CheckRequiredFields;
                                 CLEAR(CopyServDoc);
                                 CopyServDoc.SetServContractHeader(Rec);
                                 CopyServDoc.RUNMODAL;
                               END;
                                }
      { 122     ;2   ;Action    ;
                      Name=&File Contract Quote;
                      CaptionML=ENU=&File Contract Quote;
                      ToolTipML=ENU=Record and archive a copy of the contract quote. Service contract quotes are automatically filed when you convert contract quotes to service contracts or cancel service contracts.;
                      ApplicationArea=#Service;
                      Promoted=true;
                      Image=FileContract;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 if CONFIRM(Text001) then
                                   FiledServContract.FileContract(Rec);
                               END;
                                }
      { 77      ;2   ;Action    ;
                      Name=Update &Discount % on All Lines;
                      CaptionML=ENU=Update &Discount % on All Lines;
                      ApplicationArea=#Service;
                      Image=Refresh;
                      OnAction=BEGIN
                                 ServContractLine.RESET;
                                 ServContractLine.SETRANGE("Contract Type","Contract Type");
                                 ServContractLine.SETRANGE("Contract No.","Contract No.");
                                 REPORT.RUNMODAL(REPORT::"Upd. Disc.% on Contract",true,true,ServContractLine);
                               END;
                                }
      { 15      ;2   ;Action    ;
                      Name=Update with Contract &Template;
                      CaptionML=ENU=Update with Contract &Template;
                      ApplicationArea=#Service;
                      Image=Refresh;
                      OnAction=BEGIN
                                 if not CONFIRM(Text002,true) then
                                   exit;
                                 CurrPage.UPDATE(true);
                                 CLEAR(ServContrQuoteTmplUpd);
                                 ServContrQuoteTmplUpd.RUN(Rec);
                                 CurrPage.UPDATE(true);
                               END;
                                }
      { 11      ;2   ;Action    ;
                      Name=Loc&k;
                      CaptionML=ENU=Loc&k;
                      ApplicationArea=#Service;
                      Promoted=true;
                      Image=Lock;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 LockOpenServContract.LockServContract(Rec);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 20      ;2   ;Action    ;
                      Name=&Open;
                      ShortCutKey=Return;
                      CaptionML=ENU=&Open;
                      ApplicationArea=#Service;
                      Image=Edit;
                      OnAction=BEGIN
                                 LockOpenServContract.OpenServContract(Rec);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 86      ;1   ;Action    ;
                      Name=&Make Contract;
                      CaptionML=ENU=&Make Contract;
                      ToolTipML=ENU=Prepare to create a service contract.;
                      ApplicationArea=#Service;
                      Promoted=true;
                      Image=MakeAgreement;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SignServContractDoc@1001 : Codeunit SignServContractDoc;
                               BEGIN
                                 CurrPage.UPDATE(true);
                                 SignServContractDoc.SignContractQuote(Rec);
                               END;
                                }
      { 141     ;1   ;Action    ;
                      Name=&Print;
                      Ellipsis=true;
                      CaptionML=ENU=&Print;
                      ToolTipML=ENU=Prepare to print the document. A report request window for the document opens where you can specify what to include on the print-out.;
                      ApplicationArea=#Service;
                      Promoted=true;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DocPrint@1001 : Codeunit "Document-Print";
                               BEGIN
                                 DocPrint.PrintServiceContract(Rec);
                               END;
                                }
      { 1900000006;0 ;ActionContainer;
                      Name=ActionContainer1900000006;
                      ActionContainerType=Reports }
      { 1905622906;1 ;Action    ;
                      Name=Service Quote Details;
                      CaptionML=ENU=Service Quote Details;
                      ApplicationArea=#Service;
                      RunObject=Report "Service Contract Quote-Detail";
                      Promoted=true;
                      Image=Report;
                      PromotedCategory=Report }
      { 1905017306;1 ;Action    ;
                      Name=Contract Quotes to be Signed;
                      CaptionML=ENU=Contract Quotes to be Signed;
                      ApplicationArea=#Service;
                      RunObject=Report "Contract Quotes to Be Signed";
                      Promoted=true;
                      Image=Report;
                      PromotedCategory=Report }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                Name=Contract No.;
                ToolTipML=ENU=Specifies the number of the service contract or service contract quote.;
                ApplicationArea=#Service;
                SourceExpr="Contract No.";
                Importance=Promoted;
                OnAssistEdit=BEGIN
                               if AssistEdit(xRec) then
                                 CurrPage.UPDATE;
                             END;

                ImplicitType=Code20 }

    { 24  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the service contract.;
                ApplicationArea=#Service;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 49  ;2   ;Field     ;
                Name=Customer No.;
                ToolTipML=ENU=Specifies the number of the customer who owns the service items in the service contract/contract quote.;
                ApplicationArea=#Service;
                SourceExpr="Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             CustomerNoOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 21  ;2   ;Field     ;
                Name=Contact No.;
                ToolTipML=ENU=Specifies the number of the contact who will receive the service delivery.;
                ApplicationArea=#Service;
                SourceExpr="Contact No.";
                ImplicitType=Code20 }

    { 40  ;2   ;Field     ;
                Name=Name;
                DrillDown=false;
                ToolTipML=ENU=Specifies the name of the customer in the service contract.;
                ApplicationArea=#Service;
                SourceExpr=Name;
                ImplicitType=Text50 }

    { 10  ;2   ;Field     ;
                Name=Address;
                DrillDown=false;
                ToolTipML=ENU=Specifies the customer's address.;
                ApplicationArea=#Service;
                SourceExpr=Address;
                ImplicitType=Text50 }

    { 19  ;2   ;Field     ;
                Name=Address 2;
                DrillDown=false;
                ToolTipML=ENU=Specifies additional address information.;
                ApplicationArea=#Service;
                SourceExpr="Address 2";
                ImplicitType=Text50 }

    { 26  ;2   ;Field     ;
                Name=Post Code;
                DrillDown=false;
                ToolTipML=ENU=Specifies the postal code of the address.;
                ApplicationArea=#Service;
                SourceExpr="Post Code";
                ImplicitType=Code20 }

    { 111 ;2   ;Field     ;
                Name=City;
                DrillDown=false;
                ToolTipML=ENU=Specifies the name of the city in where the customer is located.;
                ApplicationArea=#Service;
                SourceExpr=City;
                ImplicitType=Text30 }

    { 42  ;2   ;Field     ;
                Name=Contact Name;
                ToolTipML=ENU=Specifies the name of the person you regularly contact when you do business with the customer in this service contract.;
                ApplicationArea=#Service;
                SourceExpr="Contact Name";
                ImplicitType=Text50 }

    { 82  ;2   ;Field     ;
                Name=Phone No.;
                ToolTipML=ENU=Specifies the customer phone number.;
                ApplicationArea=#Service;
                SourceExpr="Phone No.";
                ImplicitType=Text30 }

    { 124 ;2   ;Field     ;
                Name=E-Mail;
                ExtendedDatatype=E-Mail;
                ToolTipML=ENU=Specifies the customer's email address.;
                ApplicationArea=#Service;
                SourceExpr="E-Mail";
                ImplicitType=Text80 }

    { 108 ;2   ;Field     ;
                Name=Contract Group Code;
                ToolTipML=ENU=Specifies the contract group code assigned to the service contract.;
                ApplicationArea=#Service;
                SourceExpr="Contract Group Code";
                ImplicitType=Code10 }

    { 93  ;2   ;Field     ;
                Name=Salesperson Code;
                ToolTipML=ENU=Specifies the code of the salesperson assigned to this service contract.;
                ApplicationArea=#Service;
                SourceExpr="Salesperson Code";
                ImplicitType=Code20 }

    { 125 ;2   ;Field     ;
                Name=Quote Type;
                ToolTipML=ENU=Specifies the type of the service contract quote.;
                ApplicationArea=#Service;
                SourceExpr="Quote Type";
                ImplicitType=Option }

    { 4   ;2   ;Field     ;
                Name=Starting Date;
                ToolTipML=ENU=Specifies the starting date of the service contract.;
                ApplicationArea=#Service;
                SourceExpr="Starting Date";
                Importance=Promoted;
                OnValidate=BEGIN
                             StartingDateOnAfterValidate;
                           END;

                ImplicitType=Date }

    { 28  ;2   ;Field     ;
                Name=Status;
                ToolTipML=ENU=Specifies the status of the service contract or contract quote.;
                OptionCaptionML=ENU=" ,,Canceled";
                ApplicationArea=#Service;
                SourceExpr=Status;
                Importance=Promoted;
                Editable=TRUE;
                OnValidate=BEGIN
                             StatusOnAfterValidate;
                           END;

                ImplicitType=Option }

    { 63  ;2   ;Field     ;
                Name=Responsibility Center;
                ToolTipML=ENU=Specifies the code of the responsibility center associated either with the customer in the service contract or with your company.;
                ApplicationArea=#Service;
                SourceExpr="Responsibility Center";
                ImplicitType=Code10 }

    { 38  ;2   ;Field     ;
                Name=Change Status;
                ToolTipML=ENU=Specifies if a service contract or contract quote is locked or open for changes.;
                ApplicationArea=#Service;
                SourceExpr="Change Status";
                ImplicitType=Option }

    { 18  ;1   ;Part      ;
                Name=ServContractLines;
                ApplicationArea=#Service;
                SubPageLink="Contract No."=FIELD("Contract No.");
                PagePartID="Service Contract Quote Subform";
                PartType=Page }

    { 1905885101;1;Group  ;
                Name=Invoicing;
                CaptionML=ENU=Invoicing }

    { 106 ;2   ;Field     ;
                Name=Bill-to Customer No.;
                ToolTipML=ENU=Specifies the number of the customer that you send or sent the invoice or credit memo to.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             BilltoCustomerNoOnAfterValidat;
                           END;

                ImplicitType=Code20 }

    { 109 ;2   ;Field     ;
                Name=Bill-to Contact No.;
                ToolTipML=ENU=Specifies the number of the contact person at the customer's billing address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Contact No.";
                ImplicitType=Code20 }

    { 84  ;2   ;Field     ;
                Name=Bill-to Name;
                DrillDown=false;
                ToolTipML=ENU=Specifies the name of the customer that you send or sent the invoice or credit memo to.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Name";
                ImplicitType=Text50 }

    { 80  ;2   ;Field     ;
                Name=Bill-to Address;
                DrillDown=false;
                ToolTipML=ENU=Specifies the address of the customer to whom you will send the invoice.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Address";
                ImplicitType=Text50 }

    { 79  ;2   ;Field     ;
                Name=Bill-to Address 2;
                DrillDown=false;
                ToolTipML=ENU=Specifies an additional line of the address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Address 2";
                ImplicitType=Text50 }

    { 107 ;2   ;Field     ;
                Name=Bill-to Post Code;
                DrillDown=false;
                ToolTipML=ENU=Specifies the postal code of the customer's billing address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Post Code";
                ImplicitType=Code20 }

    { 87  ;2   ;Field     ;
                Name=Bill-to City;
                DrillDown=false;
                ToolTipML=ENU=Specifies the city of the address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to City";
                ImplicitType=Text30 }

    { 105 ;2   ;Field     ;
                Name=Bill-to Contact;
                ToolTipML=ENU=Specifies the name of the contact person at the customer's billing address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Contact";
                ImplicitType=Text50 }

    { 104 ;2   ;Field     ;
                Name=Your Reference;
                ToolTipML=ENU=Specifies the customer's reference number.;
                ApplicationArea=#Service;
                SourceExpr="Your Reference";
                ImplicitType=Text35 }

    { 66  ;2   ;Field     ;
                Name=Serv. Contract Acc. Gr. Code;
                ToolTipML=ENU=Specifies the code associated with the service contract account group.;
                ApplicationArea=#Service;
                SourceExpr="Serv. Contract Acc. Gr. Code";
                ImplicitType=Code10 }

    { 51  ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                ImplicitType=Code20 }

    { 9   ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name=Payment Terms Code;
                ToolTipML=ENU=Specifies the payment terms code for the customer in the contract.;
                ApplicationArea=#Service;
                SourceExpr="Payment Terms Code";
                Importance=Promoted;
                ImplicitType=Code10 }

    { 52  ;2   ;Field     ;
                Name=Currency Code;
                ToolTipML=ENU=Specifies the currency used to calculate the amounts in the documents related to this contract.;
                ApplicationArea=#Service;
                SourceExpr="Currency Code";
                Importance=Promoted;
                ImplicitType=Code10 }

    { 1906801201;1;Group  ;
                Name=Shipping;
                CaptionML=ENU=Shipping }

    { 22  ;2   ;Field     ;
                Name=Ship-to Code;
                ToolTipML=ENU=Specifies a code for an alternate shipment address if you want to ship to another address than the one that has been entered automatically. This field is also used in case of drop shipment.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             ShiptoCodeOnAfterValidate;
                           END;

                ImplicitType=Code10 }

    { 127 ;2   ;Field     ;
                Name=Ship-to Name;
                DrillDown=false;
                ToolTipML=ENU=Specifies the customer name.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Name";
                ImplicitType=Text50 }

    { 129 ;2   ;Field     ;
                Name=Ship-to Address;
                DrillDown=false;
                ToolTipML=ENU=Specifies the address that the items are shipped to.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Address";
                ImplicitType=Text50 }

    { 131 ;2   ;Field     ;
                Name=Ship-to Address 2;
                DrillDown=false;
                ToolTipML=ENU=Specifies an additional part of the ship-to address, in case it is a long address.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Address 2";
                ImplicitType=Text50 }

    { 152 ;2   ;Field     ;
                Name=Ship-to Post Code;
                DrillDown=false;
                ToolTipML=ENU=Specifies the postal code of the address.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Post Code";
                Importance=Promoted;
                ImplicitType=Code20 }

    { 112 ;2   ;Field     ;
                Name=Ship-to City;
                DrillDown=false;
                ToolTipML=ENU=Specifies the city of the address that the items are shipped to.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to City";
                ImplicitType=Text30 }

    { 1902138501;1;Group  ;
                Name=Service;
                CaptionML=ENU=Service }

    { 159 ;2   ;Field     ;
                Name=Service Zone Code;
                ToolTipML=ENU=Specifies the code of the service zone of the customer ship-to address.;
                ApplicationArea=#Service;
                SourceExpr="Service Zone Code";
                Importance=Promoted;
                ImplicitType=Code10 }

    { 144 ;2   ;Field     ;
                Name=Service Period;
                ToolTipML=ENU=Specifies a default service period for the items in the contract.;
                ApplicationArea=#Service;
                SourceExpr="Service Period";
                Importance=Promoted;
                OnValidate=BEGIN
                             ServicePeriodOnAfterValidate;
                           END;

                ImplicitType=DateFormula }

    { 143 ;2   ;Field     ;
                Name=First Service Date;
                ToolTipML=ENU=Specifies the date of the first expected service for the service items in the contract.;
                ApplicationArea=#Service;
                SourceExpr="First Service Date";
                Importance=Promoted;
                ImplicitType=Date }

    { 142 ;2   ;Field     ;
                Name=Response Time (Hours);
                ToolTipML=ENU=Specifies the response time for the service contract.;
                ApplicationArea=#Service;
                SourceExpr="Response Time (Hours)";
                OnValidate=BEGIN
                             ResponseTimeHoursOnAfterValida;
                           END;

                ImplicitType=Decimal }

    { 139 ;2   ;Field     ;
                Name=Service Order Type;
                ToolTipML=ENU=Specifies the service order type assigned to service orders linked to this contract.;
                ApplicationArea=#Service;
                SourceExpr="Service Order Type";
                ImplicitType=Code10 }

    { 1905361901;1;Group  ;
                Name=Invoice Details;
                CaptionML=ENU=Invoice Details }

    { 90  ;2   ;Field     ;
                Name=Annual Amount;
                ToolTipML=ENU=Specifies the amount that will be invoiced annually for the service contract or contract quote.;
                ApplicationArea=#Service;
                SourceExpr="Annual Amount";
                OnValidate=BEGIN
                             AnnualAmountOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 154 ;2   ;Field     ;
                Name=Allow Unbalanced Amounts;
                ToolTipML=ENU=Specifies if the contents of the Calcd. Annual Amount field are copied into the Annual Amount field in the service contract or contract quote.;
                ApplicationArea=#Service;
                SourceExpr="Allow Unbalanced Amounts";
                OnValidate=BEGIN
                             AllowUnbalancedAmountsOnAfterV;
                           END;

                ImplicitType=Boolean }

    { 32  ;2   ;Field     ;
                Name=Calcd. Annual Amount;
                ToolTipML=ENU=Specifies the sum of the Line Amount field values on all contract lines associated with the service contract or contract quote.;
                ApplicationArea=#Service;
                SourceExpr="Calcd. Annual Amount";
                ImplicitType=Decimal }

    { 95  ;2   ;Field     ;
                Name=Invoice Period;
                ToolTipML=ENU=Specifies the invoice period for the service contract.;
                ApplicationArea=#Service;
                SourceExpr="Invoice Period";
                Importance=Promoted;
                ImplicitType=Option }

    { 12  ;2   ;Field     ;
                Name=Next Invoice Date;
                ToolTipML=ENU=Specifies the date of the next invoice for this service contract.;
                ApplicationArea=#Service;
                SourceExpr="Next Invoice Date";
                Importance=Promoted;
                ImplicitType=Date }

    { 99  ;2   ;Field     ;
                Name=Amount per Period;
                ToolTipML=ENU=Specifies the amount that will be invoiced for each invoice period for the service contract.;
                ApplicationArea=#Service;
                SourceExpr="Amount per Period";
                ImplicitType=Decimal }

    { 147 ;2   ;Field     ;
                Name=Next Invoice Period;
                CaptionML=ENU=Next Invoice Period;
                ToolTipML=ENU=Specifies the next invoice period for the filed service contract quote: the first date of the period and the ending date.;
                ApplicationArea=#Service;
                SourceExpr=NextInvoicePeriod;
                ImplicitType=Text250 }

    { 59  ;2   ;Field     ;
                Name=Prepaid;
                ToolTipML=ENU=Specifies that this service contract is prepaid.;
                ApplicationArea=#Service;
                SourceExpr=Prepaid;
                Enabled=PrepaidEnable;
                OnValidate=BEGIN
                             PrepaidOnAfterValidate;
                           END;

                ImplicitType=Boolean }

    { 138 ;2   ;Field     ;
                Name=Automatic Credit Memos;
                ToolTipML=ENU=Specifies that a credit memo is created when you remove a contract line.;
                ApplicationArea=#Service;
                SourceExpr="Automatic Credit Memos";
                ImplicitType=Boolean }

    { 133 ;2   ;Field     ;
                Name=Invoice after Service;
                ToolTipML=ENU=Specifies that you can only invoice the contract if you have posted a service order since last time you invoiced the contract.;
                ApplicationArea=#Service;
                SourceExpr="Invoice after Service";
                Enabled=InvoiceAfterServiceEnable;
                OnValidate=BEGIN
                             InvoiceafterServiceOnAfterVali;
                           END;

                ImplicitType=Boolean }

    { 145 ;2   ;Field     ;
                Name=Combine Invoices;
                ToolTipML=ENU=Specifies you want to combine invoices for this service contract with invoices for other service contracts with the same bill-to customer.;
                ApplicationArea=#Service;
                SourceExpr="Combine Invoices";
                ImplicitType=Boolean }

    { 92  ;2   ;Field     ;
                Name=Contract Lines on Invoice;
                ToolTipML=ENU=Specifies that you want the lines for this contract to appear as text on the invoice.;
                ApplicationArea=#Service;
                SourceExpr="Contract Lines on Invoice";
                ImplicitType=Boolean }

    { 1904390801;1;Group  ;
                Name=Price Update;
                CaptionML=ENU=Price Update }

    { 53  ;2   ;Field     ;
                Name=Price Update Period;
                ToolTipML=ENU=Specifies the price update period for this service contract.;
                ApplicationArea=#Service;
                SourceExpr="Price Update Period";
                Importance=Promoted;
                ImplicitType=DateFormula }

    { 57  ;2   ;Field     ;
                Name=Next Price Update Date;
                ToolTipML=ENU=Specifies the next date you want contract prices to be updated.;
                ApplicationArea=#Service;
                SourceExpr="Next Price Update Date";
                Importance=Promoted;
                ImplicitType=Date }

    { 61  ;2   ;Field     ;
                Name=Price Inv. Increase Code;
                ToolTipML=ENU=Specifies the standard text code printed on service invoices, informing the customer which prices have been updated since the last invoice.;
                ApplicationArea=#Service;
                SourceExpr="Price Inv. Increase Code";
                ImplicitType=Code20 }

    { 1901902601;1;Group  ;
                Name=Details;
                CaptionML=ENU=Details }

    { 30  ;2   ;Field     ;
                Name=Expiration Date;
                ToolTipML=ENU=Specifies the date when the service contract expires.;
                ApplicationArea=#Service;
                SourceExpr="Expiration Date";
                OnValidate=BEGIN
                             ExpirationDateOnAfterValidate;
                           END;

                ImplicitType=Date }

    { 34  ;2   ;Field     ;
                Name=Max. Labor Unit Price;
                ToolTipML=ENU=Specifies the maximum unit price that can be set for a resource on all service orders and lines for the service contract.;
                ApplicationArea=#Service;
                SourceExpr="Max. Labor Unit Price";
                ImplicitType=Decimal }

    { 47  ;2   ;Field     ;
                Name=Accept Before;
                ToolTipML=ENU=Specifies the date before which the customer must accept this contract quote.;
                ApplicationArea=#Service;
                SourceExpr="Accept Before";
                ImplicitType=Date }

    { 46  ;2   ;Field     ;
                Name=Probability;
                ToolTipML=ENU=Specifies the probability of the customer approving the service contract quote.;
                ApplicationArea=#Service;
                SourceExpr=Probability;
                ImplicitType=Decimal }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst '@@@=Contract No. must not be blank in Service Contract Header SC00004;ENU=%1 must not be blank in %2 %3';
      Text001@1001 : TextConst 'ENU=Do you want to file the contract quote?';
      Text002@1002 : TextConst 'ENU=Do you want to update the contract quote using a contract template?';
      FiledServContract@1004 : Record "Filed Service Contract Header";
      ServContractLine@1005 : Record "Service Contract Line";
      CopyServDoc@1012 : Report "Copy Service Document";
      UserMgt@1007 : Codeunit "User Setup Management";
      ServContrQuoteTmplUpd@1008 : Codeunit "ServContractQuote-Tmpl. Upd.";
      Text003@1003 : TextConst '@@@=Status must not be blank in Signed SC00001;ENU=%1 must not be %2 in %3 %4';
      LockOpenServContract@1010 : Codeunit "Lock-OpenServContract";
      PrepaidEnable@19025160 : Boolean INDATASET;
      InvoiceAfterServiceEnable@19024761 : Boolean INDATASET;

    LOCAL PROCEDURE ActivateFields@2();
    BEGIN
      PrepaidEnable := (not "Invoice after Service" or Prepaid);
      InvoiceAfterServiceEnable := (not Prepaid or "Invoice after Service");
    END;

    LOCAL PROCEDURE CheckRequiredFields@1();
    BEGIN
      if "Contract No." = '' then
        ERROR(Text000,FIELDCAPTION("Contract No."),TABLECAPTION,"Contract No.");
      if "Customer No." = '' then
        ERROR(Text000,FIELDCAPTION("Customer No."),TABLECAPTION,"Contract No.");
      if FORMAT("Service Period") = '' then
        ERROR(Text000,FIELDCAPTION("Service Period"),TABLECAPTION,"Contract No.");
      if "First Service Date" = 0D then
        ERROR(Text000,FIELDCAPTION("First Service Date"),TABLECAPTION,"Contract No.");
      if Status = Status::Canceled then
        ERROR(Text003,FIELDCAPTION(Status),FORMAT(Status),TABLECAPTION,"Contract No.");
      if "Change Status" = "Change Status"::Locked then
        ERROR(Text003,FIELDCAPTION("Change Status"),FORMAT("Change Status"),TABLECAPTION,"Contract No.");
    END;

    LOCAL PROCEDURE GetServItemLine@5();
    VAR
      ContractLineSelection@1005 : Page "Contract Line Selection";
    BEGIN
      CLEAR(ContractLineSelection);
      ContractLineSelection.SetSelection("Customer No.","Ship-to Code","Contract Type","Contract No.");
      ContractLineSelection.RUNMODAL;
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE StatusOnAfterValidate@19072689();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CustomerNoOnAfterValidate@19016267();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE StartingDateOnAfterValidate@19020273();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE BilltoCustomerNoOnAfterValidat@19044114();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShiptoCodeOnAfterValidate@19065015();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ResponseTimeHoursOnAfterValida@19023139();
    BEGIN
      CurrPage.UPDATE(true);
    END;

    LOCAL PROCEDURE AnnualAmountOnAfterValidate@19051853();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE InvoiceafterServiceOnAfterVali@19065496();
    BEGIN
      ActivateFields;
    END;

    LOCAL PROCEDURE AllowUnbalancedAmountsOnAfterV@19018309();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PrepaidOnAfterValidate@19004759();
    BEGIN
      ActivateFields;
    END;

    LOCAL PROCEDURE ExpirationDateOnAfterValidate@19018149();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ServicePeriodOnAfterValidate@19066190();
    BEGIN
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

