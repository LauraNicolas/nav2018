OBJECT Page 7374 Bin Contents
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Bin Contents;
    SaveValues=true;
    InsertAllowed=false;
    SourceTable="Bin Content";
    DataCaptionExpr=DataCaption;
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 ItemDescription := '';
                 GetWhseLocation(LocationCode,ZoneCode);
               END;

    OnAfterGetCurrRecord=BEGIN
                           GetItemDescr("Item No.","Variant Code",ItemDescription);
                           DataCaption := STRSUBSTNO('%1 ',"Bin Code");
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 55      ;1   ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 57      ;2   ;Action    ;
                      Name=Warehouse Entries;
                      CaptionML=ENU=Warehouse Entries;
                      ToolTipML=ENU=View completed warehouse activities related to the document.;
                      ApplicationArea=#Warehouse;
                      RunObject=Page "Warehouse Entries";
                      RunPageView=SORTING("Item No.","Bin Code","Location Code","Variant Code");
                      RunPageLink="Item No."=FIELD("Item No."),
                                  "Location Code"=FIELD("Location Code"),
                                  "Bin Code"=FIELD("Bin Code"),
                                  "Variant Code"=FIELD("Variant Code");
                      Image=BinLedger }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 4   ;1   ;Group     ;
                Name=Options;
                CaptionML=ENU=Options }

    { 20  ;2   ;Field     ;
                Name=LocationCode;
                CaptionML=ENU=Location Filter;
                ToolTipML=ENU=Specifies the locations that bin contents are shown for.;
                ApplicationArea=#Warehouse;
                SourceExpr=LocationCode;
                OnValidate=BEGIN
                             ZoneCode := '';
                             if LocationCode <> '' then begin
                               if WMSMgt.LocationIsAllowed(LocationCode) then begin
                                 Location.GET(LocationCode);
                                 Location.TESTFIELD("Bin Mandatory",true);
                               end else
                                 ERROR(Text000,USERID);
                             end;
                             DefFilter;
                             LocationCodeOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           Location.RESET;
                           Location.SETRANGE("Bin Mandatory",true);
                           if LocationCode <> '' then
                             Location.Code := LocationCode;
                           if PAGE.RUNMODAL(PAGE::"Locations with Warehouse List",Location) = ACTION::LookupOK then begin
                             Location.TESTFIELD("Bin Mandatory",true);
                             LocationCode := Location.Code;
                             DefFilter;
                           end;
                           CurrPage.UPDATE(true);
                         END;

                ImplicitType=Code10 }

    { 45  ;2   ;Field     ;
                Name=ZoneCode;
                CaptionML=ENU=Zone Filter;
                ToolTipML=ENU=Specifies the filter that allows you to see an overview of the documents with a certain value in the Service Zone Code field.;
                ApplicationArea=#Warehouse;
                SourceExpr=ZoneCode;
                OnValidate=BEGIN
                             DefFilter;
                             ZoneCodeOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           Zone.RESET;
                           if ZoneCode <> '' then
                             Zone.Code := ZoneCode;
                           if LocationCode <> '' then
                             Zone.SETRANGE("Location Code",LocationCode);
                           if PAGE.RUNMODAL(0,Zone) = ACTION::LookupOK then begin
                             ZoneCode := Zone.Code;
                             LocationCode := Zone."Location Code";
                             DefFilter;
                           end;
                           CurrPage.UPDATE(true);
                         END;

                ImplicitType=Code10 }

    { 37  ;1   ;Group     ;
                Name=Group37;
                GroupType=Repeater }

    { 50  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the location code of the bin.;
                ApplicationArea=#Warehouse;
                SourceExpr="Location Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 3   ;2   ;Field     ;
                Name=Zone Code;
                ToolTipML=ENU=Specifies the zone code of the bin.;
                ApplicationArea=#Warehouse;
                SourceExpr="Zone Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 1   ;2   ;Field     ;
                Name=Bin Code;
                ToolTipML=ENU=Specifies the bin where the items are picked or put away.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                OnValidate=BEGIN
                             CheckQty;
                           END;

                ImplicitType=Code20 }

    { 5   ;2   ;Field     ;
                Name=Item No.;
                ToolTipML=ENU=Specifies the number of the item that will be stored in the bin.;
                ApplicationArea=#Warehouse;
                SourceExpr="Item No.";
                OnValidate=BEGIN
                             CheckQty;
                           END;

                ImplicitType=Code20 }

    { 23  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             CheckQty;
                           END;

                ImplicitType=Code10 }

    { 39  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Warehouse;
                SourceExpr="Unit of Measure Code";
                ImplicitType=Code10 }

    { 28  ;2   ;Field     ;
                Name=Qty. per Unit of Measure;
                ToolTipML=ENU=Specifies the number of base units of measure that are in the unit of measure specified for the item in the bin.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. per Unit of Measure";
                Visible=FALSE;
                OnValidate=BEGIN
                             CheckQty;
                           END;

                ImplicitType=Decimal }

    { 59  ;2   ;Field     ;
                Name=Default;
                ToolTipML=ENU=Specifies if the bin is the default bin for the associated item.;
                ApplicationArea=#Warehouse;
                SourceExpr=Default;
                ImplicitType=Boolean }

    { 30  ;2   ;Field     ;
                Name=Dedicated;
                ToolTipML=ENU=Specifies if the bin is used as a dedicated bin, which means that its bin content is available only to certain resources.;
                ApplicationArea=#Warehouse;
                SourceExpr=Dedicated;
                ImplicitType=Boolean }

    { 9   ;2   ;Field     ;
                Name=Warehouse Class Code;
                ToolTipML=ENU=Specifies the warehouse class code. Only items with the same warehouse class can be stored in this bin.;
                ApplicationArea=#Warehouse;
                SourceExpr="Warehouse Class Code";
                ImplicitType=Code10 }

    { 7   ;2   ;Field     ;
                Name=Bin Type Code;
                ToolTipML=ENU=Specifies the code of the bin type that was selected for this bin.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Type Code";
                ImplicitType=Code10 }

    { 17  ;2   ;Field     ;
                Name=Bin Ranking;
                ToolTipML=ENU=Specifies the bin ranking.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Ranking";
                ImplicitType=Integer }

    { 11  ;2   ;Field     ;
                Name=Block Movement;
                ToolTipML=ENU=Specifies how the movement of a particular item, or bin content, into or out of this bin, is blocked.;
                ApplicationArea=#Warehouse;
                SourceExpr="Block Movement";
                ImplicitType=Option }

    { 13  ;2   ;Field     ;
                Name=Min. Qty.;
                ToolTipML=ENU=Specifies the minimum number of units of the item that you want to have in the bin at all times.;
                ApplicationArea=#Warehouse;
                SourceExpr="Min. Qty.";
                ImplicitType=Decimal }

    { 15  ;2   ;Field     ;
                Name=Max. Qty.;
                ToolTipML=ENU=Specifies the maximum number of units of the item that you want to have in the bin.;
                ApplicationArea=#Warehouse;
                SourceExpr="Max. Qty.";
                ImplicitType=Decimal }

    { 19  ;2   ;Field     ;
                Name=Quantity;
                CaptionML=ENU=Quantity;
                ToolTipML=ENU=Specifies the quantity of the item in the bin that corresponds to the line.;
                ApplicationArea=#Warehouse;
                DecimalPlaces=0:5;
                SourceExpr=CalcQtyUOM;
                ImplicitType=Decimal }

    { 61  ;2   ;Field     ;
                Name=Quantity (Base);
                ToolTipML=ENU=Specifies how many units of the item, in the base unit of measure, are stored in the bin.;
                ApplicationArea=#Warehouse;
                SourceExpr="Quantity (Base)";
                ImplicitType=Decimal }

    { 63  ;2   ;Field     ;
                Name=Pick Quantity (Base);
                ToolTipML=ENU=Specifies how many units of the item, in the base unit of measure, will be picked from the bin.;
                ApplicationArea=#Warehouse;
                SourceExpr="Pick Quantity (Base)";
                ImplicitType=Decimal }

    { 6   ;2   ;Field     ;
                Name=ATO Components Pick Qty (Base);
                ToolTipML=ENU=Specifies how many assemble-to-order units are picked for assembly.;
                ApplicationArea=#Warehouse;
                SourceExpr="ATO Components Pick Qty (Base)";
                ImplicitType=Decimal }

    { 65  ;2   ;Field     ;
                Name=Negative Adjmt. Qty. (Base);
                ToolTipML=ENU=Specifies how many item units, in the base unit of measure, will be posted on journal lines as negative quantities.;
                ApplicationArea=#Warehouse;
                SourceExpr="Negative Adjmt. Qty. (Base)";
                ImplicitType=Decimal }

    { 67  ;2   ;Field     ;
                Name=Put-away Quantity (Base);
                ToolTipML=ENU=Specifies how many units of the item, in the base unit of measure, will be put away in the bin.;
                ApplicationArea=#Warehouse;
                SourceExpr="Put-away Quantity (Base)";
                ImplicitType=Decimal }

    { 69  ;2   ;Field     ;
                Name=Positive Adjmt. Qty. (Base);
                ToolTipML=ENU=Specifies how many item units, in the base unit of measure, will be posted on journal lines as positive quantities.;
                ApplicationArea=#Warehouse;
                SourceExpr="Positive Adjmt. Qty. (Base)";
                ImplicitType=Decimal }

    { 47  ;2   ;Field     ;
                Name=Available Qty. to Take;
                CaptionML=ENU=Available Qty. to Take;
                ToolTipML=ENU=Specifies the quantity of the item that is available in the bin.;
                ApplicationArea=#Warehouse;
                DecimalPlaces=0:5;
                SourceExpr=CalcQtyAvailToTakeUOM;
                Editable=FALSE;
                ImplicitType=Decimal }

    { 43  ;2   ;Field     ;
                Name=Fixed;
                ToolTipML=ENU=Specifies that the item (bin content) has been associated with this bin, and that the bin should normally contain the item.;
                ApplicationArea=#Warehouse;
                SourceExpr=Fixed;
                ImplicitType=Boolean }

    { 56  ;2   ;Field     ;
                Name=Cross-Dock Bin;
                ToolTipML=ENU=Specifies if the bin content is in a cross-dock bin.;
                ApplicationArea=#Warehouse;
                SourceExpr="Cross-Dock Bin";
                ImplicitType=Boolean }

    { 49  ;1   ;Group     ;
                Name=Group49 }

    { 1903651201;2;Group  ;
                Name=Group1903651201;
                GroupType=FixedLayout }

    { 1900206101;3;Group  ;
                Name=Item Description;
                CaptionML=ENU=Item Description }

    { 54  ;4   ;Field     ;
                Name=ItemDescription;
                ApplicationArea=#Warehouse;
                SourceExpr=ItemDescription;
                Editable=FALSE;
                ImplicitType=Text50;
                ShowCaption=false }

    { 1900205901;3;Group  ;
                Name=Qty. on Adjustment Bin;
                CaptionML=ENU=Qty. on Adjustment Bin }

    { 52  ;4   ;Field     ;
                Name=CalcQtyonAdjmtBin;
                CaptionML=ENU=Qty. on Adjustment Bin;
                ToolTipML=ENU=Specifies the adjusted quantity in a bin, when the quantity recorded in the system is inaccurate because of a physical gain or loss of an item.;
                ApplicationArea=#Warehouse;
                DecimalPlaces=0:5;
                SourceExpr=CalcQtyonAdjmtBin;
                Editable=FALSE;
                OnDrillDown=VAR
                              WhseEntry@1001 : Record "Warehouse Entry";
                            BEGIN
                              LocationGet("Location Code");
                              WhseEntry.SETCURRENTKEY(
                                "Item No.","Bin Code","Location Code","Variant Code","Unit of Measure Code");
                              WhseEntry.SETRANGE("Item No.","Item No.");
                              WhseEntry.SETRANGE("Bin Code",AdjmtLocation."Adjustment Bin Code");
                              WhseEntry.SETRANGE("Location Code","Location Code");
                              WhseEntry.SETRANGE("Variant Code","Variant Code");
                              WhseEntry.SETRANGE("Unit of Measure Code","Unit of Measure Code");

                              PAGE.RUNMODAL(PAGE::"Warehouse Entries",WhseEntry);
                            END;

                ImplicitType=Decimal }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 2   ;1   ;Part      ;
                Name=Part2;
                ApplicationArea=#ItemTracking;
                SubPageLink="Item No."=FIELD("Item No."),
                            "Variant Code"=FIELD("Variant Code"),
                            "Location Code"=FIELD("Location Code");
                PagePartID="Lot Numbers by Bin FactBox";
                Visible=false;
                PartType=Page }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Location@1001 : Record Location;
      AdjmtLocation@1006 : Record Location;
      Zone@1002 : Record Zone;
      WMSMgt@1003 : Codeunit "WMS Management";
      LocationCode@1009 : Code[10];
      ZoneCode@1010 : Code[10];
      DataCaption@1012 : Text[80];
      ItemDescription@1000 : Text[50];
      Text000@1004 : TextConst 'ENU=Location code is not allowed for user %1.';
      LocFilter@1005 : Text[250];

    LOCAL PROCEDURE DefFilter@1();
    BEGIN
      FILTERGROUP := 2;
      if LocationCode <> '' then
        SETRANGE("Location Code",LocationCode)
      else begin
        CLEAR(LocFilter);
        CLEAR(Location);
        Location.SETRANGE("Bin Mandatory",true);
        if Location.FIND('-') then
          repeat
            if WMSMgt.LocationIsAllowed(Location.Code) then
              LocFilter := LocFilter + Location.Code + '|';
          until Location.NEXT = 0;
        if STRLEN(LocFilter) <> 0 then
          LocFilter := COPYSTR(LocFilter,1,(STRLEN(LocFilter) - 1));
        SETFILTER("Location Code",LocFilter);
      end;
      if ZoneCode <> '' then
        SETRANGE("Zone Code",ZoneCode)
      else
        SETRANGE("Zone Code");
      FILTERGROUP := 0;
    END;

    LOCAL PROCEDURE CheckQty@2();
    BEGIN
      TESTFIELD(Quantity,0);
      TESTFIELD("Pick Qty.",0);
      TESTFIELD("Put-away Qty.",0);
      TESTFIELD("Pos. Adjmt. Qty.",0);
      TESTFIELD("Neg. Adjmt. Qty.",0);
    END;

    LOCAL PROCEDURE LocationGet@4(LocationCode@1000 : Code[10]);
    BEGIN
      if AdjmtLocation.Code <> LocationCode then
        AdjmtLocation.GET(LocationCode);
    END;

    LOCAL PROCEDURE LocationCodeOnAfterValidate@19034787();
    BEGIN
      CurrPage.UPDATE(true);
    END;

    LOCAL PROCEDURE ZoneCodeOnAfterValidate@19054042();
    BEGIN
      CurrPage.UPDATE(true);
    END;

    BEGIN
    END.
  }
}

