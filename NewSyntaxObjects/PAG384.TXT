OBJECT Page 384 Bank Account Statement Lines
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Lines;
    LinksAllowed=false;
    SourceTable="Bank Account Statement Line";
    DelayedInsert=true;
    PageType=ListPart;
    AutoSplitKey=true;
    OnInit=BEGIN
             BalanceEnable := true;
             TotalBalanceEnable := true;
             TotalDiffEnable := true;
           END;

    OnAfterGetCurrRecord=BEGIN
                           CalcBalance("Statement Line No.");
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Transaction Date;
                ToolTipML=ENU=Specifies the posting date of the bank account or check ledger entry that the transaction on this line has been applied to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Transaction Date";
                ImplicitType=Date }

    { 22  ;2   ;Field     ;
                Name=Value Date;
                ToolTipML=ENU=Specifies the value date of the transaction on this line.;
                ApplicationArea=#Advanced;
                SourceExpr="Value Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 24  ;2   ;Field     ;
                Name=Document No.;
                ToolTipML=ENU=Specifies the document number of this line.;
                ApplicationArea=#Advanced;
                SourceExpr="Document No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 21  ;2   ;Field     ;
                Name=Check No.;
                ToolTipML=ENU=Specifies the check number for the transaction on this line.;
                ApplicationArea=#Advanced;
                SourceExpr="Check No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the type of ledger entry, or a difference that has been reconciled with the transaction on the bank's statement on this line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Type;
                ImplicitType=Option }

    { 6   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description for the transaction on this line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 8   ;2   ;Field     ;
                Name=Statement Amount;
                ToolTipML=ENU=Specifies the amount of the transaction on the bank's statement on this line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Statement Amount";
                ImplicitType=Decimal }

    { 10  ;2   ;Field     ;
                Name=Applied Amount;
                ToolTipML=ENU=Specifies the amount on the bank account or check ledger entry that the transaction on this line has been applied to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applied Amount";
                ImplicitType=Decimal }

    { 12  ;2   ;Field     ;
                Name=Difference;
                ToolTipML=ENU=Specifies the difference between the amount in the Statement Amount field and Applied Amount field on this line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Difference;
                ImplicitType=Decimal }

    { 14  ;2   ;Field     ;
                Name=Applied Entries;
                ToolTipML=ENU=Specifies whether the transaction on this line has been applied to one or more ledger entries.;
                ApplicationArea=#Advanced;
                SourceExpr="Applied Entries";
                Visible=FALSE;
                ImplicitType=Integer }

    { 16  ;1   ;Group     ;
                Name=Group16 }

    { 26  ;2   ;Field     ;
                Name=Balance;
                CaptionML=ENU=Balance;
                ToolTipML=ENU=Specifies a balance, consisting of the Balance Last Statement field, plus the balance that has accumulated in the Statement Amount field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Balance + "Statement Amount";
                AutoFormatType=1;
                AutoFormatExpr=GetCurrencyCode;
                Enabled=BalanceEnable;
                Editable=FALSE }

    { 17  ;2   ;Field     ;
                Name=TotalBalance;
                CaptionML=ENU=Total Balance;
                ToolTipML=ENU=Specifies the accumulated balance of the Bank Account Statement, which consists of the Balance Last Statement field, plus the balance in the Statement Amount field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalBalance + "Statement Amount";
                AutoFormatType=1;
                AutoFormatExpr=GetCurrencyCode;
                Enabled=TotalBalanceEnable;
                Editable=FALSE }

    { 19  ;2   ;Field     ;
                Name=TotalDiff;
                CaptionML=ENU=Total Difference;
                ToolTipML=ENU=Specifies the total amount of the Difference field for all the lines on the bank reconciliation.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalDiff + Difference;
                AutoFormatType=1;
                AutoFormatExpr=GetCurrencyCode;
                Enabled=TotalDiffEnable;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      TotalDiff@1000 : Decimal;
      TotalBalance@1001 : Decimal;
      Balance@1002 : Decimal;
      TotalDiffEnable@19038859 : Boolean INDATASET;
      TotalBalanceEnable@19047480 : Boolean INDATASET;
      BalanceEnable@19079599 : Boolean INDATASET;

    LOCAL PROCEDURE CalcBalance@3(BankAccStmtLineNo@1000 : Integer);
    VAR
      BankAccStmt@1001 : Record "Bank Account Statement";
      TempBankAccStmtLine@1002 : Record "Bank Account Statement Line";
    BEGIN
      if BankAccStmt.GET("Bank Account No.","Statement No.") then;

      TempBankAccStmtLine.COPY(Rec);

      TotalDiff := -Difference;
      if TempBankAccStmtLine.CALCSUMS(Difference) then begin
        TotalDiff := TotalDiff + TempBankAccStmtLine.Difference;
        TotalDiffEnable := true;
      end else
        TotalDiffEnable := false;

      TotalBalance := BankAccStmt."Balance Last Statement" - "Statement Amount";
      if TempBankAccStmtLine.CALCSUMS("Statement Amount") then begin
        TotalBalance := TotalBalance + TempBankAccStmtLine."Statement Amount";
        TotalBalanceEnable := true;
      end else
        TotalBalanceEnable := false;

      Balance := BankAccStmt."Balance Last Statement" - "Statement Amount";
      TempBankAccStmtLine.SETRANGE("Statement Line No.",0,BankAccStmtLineNo);
      if TempBankAccStmtLine.CALCSUMS("Statement Amount") then begin
        Balance := Balance + TempBankAccStmtLine."Statement Amount";
        BalanceEnable := true;
      end else
        BalanceEnable := false;
    END;

    BEGIN
    END.
  }
}

