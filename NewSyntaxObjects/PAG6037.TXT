OBJECT Page 6037 Service Shipment Lines Subform
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Lines;
    SaveValues=true;
    LinksAllowed=false;
    SourceTable="Service Shipment Line";
    PageType=ListPart;
    OnAfterGetRecord=BEGIN
                       StyleIsStrong := IsFirstDocLine;
                       DocumentNoHideValue := not IsFirstDocLine;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Document No.;
                Lookup=false;
                ToolTipML=ENU=Specifies the number of this shipment.;
                ApplicationArea=#Service;
                SourceExpr="Document No.";
                HideValue=DocumentNoHideValue;
                Style=Strong;
                StyleExpr=StyleIsStrong;
                ImplicitType=Code20 }

    { 50  ;2   ;Field     ;
                Name=Bill-to Customer No.;
                ToolTipML=ENU=Specifies the number of the customer that you send or sent the invoice or credit memo to.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Customer No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Customer No.;
                ToolTipML=ENU=Specifies the number of the customer who owns the items on the service order.;
                ApplicationArea=#Service;
                SourceExpr="Customer No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the type of this shipment line.;
                ApplicationArea=#Service;
                SourceExpr=Type;
                ImplicitType=Option }

    { 8   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the item, general ledger account, resource code, or cost on the line.;
                ApplicationArea=#Service;
                SourceExpr="No.";
                ImplicitType=Code20 }

    { 10  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 42  ;2   ;Field     ;
                Name=Nonstock;
                ToolTipML=ENU=Specifies that the item on the shipment line is a nonstock item.;
                ApplicationArea=#Service;
                SourceExpr=Nonstock;
                Visible=FALSE;
                ImplicitType=Boolean }

    { 12  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the description of an item, resource, cost, or a standard text on the service line.;
                ApplicationArea=#Service;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 44  ;2   ;Field     ;
                Name=Return Reason Code;
                ToolTipML=ENU=Specifies the code explaining why the item was returned.;
                ApplicationArea=#Service;
                SourceExpr="Return Reason Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 29  ;2   ;Field     ;
                Name=Currency Code;
                Lookup=false;
                DrillDown=false;
                ToolTipML=ENU=Specifies the currency code for various amounts on the shipment.;
                ApplicationArea=#Service;
                SourceExpr="Currency Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 48  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the location, such as warehouse or distribution center, from which the items should be taken and where they should be registered.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 54  ;2   ;Field     ;
                Name=Bin Code;
                ToolTipML=ENU=Specifies the bin where the items are picked or put away.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 14  ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 16  ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 58  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Service;
                SourceExpr="Unit of Measure Code";
                ImplicitType=Code10 }

    { 60  ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the number of item units, resource hours, general ledger account payments, or cost that have been shipped to the customer.;
                ApplicationArea=#Service;
                SourceExpr=Quantity;
                ImplicitType=Decimal }

    { 64  ;2   ;Field     ;
                Name=Unit of Measure;
                ToolTipML=ENU=Specifies the name of the unit of measure for the item, resource, or cost on the service line.;
                ApplicationArea=#Service;
                SourceExpr="Unit of Measure";
                Visible=FALSE;
                ImplicitType=Text10 }

    { 66  ;2   ;Field     ;
                Name=Unit Cost (LCY);
                ToolTipML=ENU=Specifies the cost per unit of item, resource, or cost on this shipment line.;
                ApplicationArea=#Service;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 68  ;2   ;Field     ;
                Name=Line Discount %;
                ToolTipML=ENU=Specifies the discount percentage that is granted for the item on the line.;
                ApplicationArea=#Service;
                BlankZero=true;
                SourceExpr="Line Discount %";
                ImplicitType=Decimal }

    { 70  ;2   ;Field     ;
                Name=Allow Invoice Disc.;
                ToolTipML=ENU=Specifies if the invoice line is included when the invoice discount is calculated.;
                ApplicationArea=#Service;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE;
                ImplicitType=Boolean }

  }
  CODE
  {
    VAR
      TempServShptLine@1002 : TEMPORARY Record "Service Shipment Line";
      StyleIsStrong@1000 : Boolean INDATASET;
      DocumentNoHideValue@1001 : Boolean INDATASET;

    LOCAL PROCEDURE IsFirstDocLine@2() : Boolean;
    VAR
      ServShptLine@1000 : Record "Service Shipment Line";
    BEGIN
      TempServShptLine.RESET;
      TempServShptLine.COPYFILTERS(Rec);
      TempServShptLine.SETRANGE("Document No.","Document No.");
      if not TempServShptLine.FINDFIRST then begin
        ServShptLine.COPYFILTERS(Rec);
        ServShptLine.SETRANGE("Document No.","Document No.");
        if not ServShptLine.FINDFIRST then
          exit(false);
        TempServShptLine := ServShptLine;
        TempServShptLine.INSERT;
      end;
      if "Line No." = TempServShptLine."Line No." then
        exit(true);
    END;

    BEGIN
    END.
  }
}

