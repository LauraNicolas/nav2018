OBJECT Page 1816 Job Creation Wizard
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create New Job;
    SourceTable=Job;
    DelayedInsert=true;
    PageType=NavigatePage;
    OnInit=BEGIN
             LoadTopBanners;
           END;

    OnOpenPage=BEGIN
                 INIT;

                 Step := Step::Start;
                 EnableControls;
               END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      Name=ActionContainer10;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=BackActionEnabled;
                      InFooterBar=true;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(true);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NextActionEnabled;
                      InFooterBar=true;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextStep(false);
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FinishActionEnabled;
                      InFooterBar=true;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Name=Group96;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                Name=MediaResourcesStandard;
                ApplicationArea=#Jobs;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 98  ;1   ;Group     ;
                Name=Group98;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                Name=MediaResourcesDone;
                ApplicationArea=#Jobs;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 25  ;1   ;Group     ;
                Name=Group25;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 24  ;2   ;Group     ;
                Name=Welcome to Create New Job;
                CaptionML=ENU=Welcome to Create New Job;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 23  ;3   ;Group     ;
                Name=Group23;
                Visible=FirstStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Do you want to create a new job from an existing job? }

    { 21  ;4   ;Field     ;
                Name=YesCheckbox;
                CaptionML=ENU=Yes;
                ApplicationArea=#Jobs;
                SourceExpr=FromExistingJobYes;
                OnValidate=BEGIN
                             if FromExistingJobYes then
                               FromExistingJobNo := false;
                           END;

                ImplicitType=Boolean }

    { 22  ;4   ;Field     ;
                Name=NoCheckbox;
                CaptionML=ENU=No;
                ApplicationArea=#Jobs;
                SourceExpr=FromExistingJobNo;
                OnValidate=BEGIN
                             if FromExistingJobNo then
                               FromExistingJobYes := false;
                           END;

                ImplicitType=Boolean }

    { 19  ;1   ;Group     ;
                Name=Group19;
                Visible=CreationStepVisible;
                GroupType=Group }

    { 20  ;2   ;Group     ;
                Name=Group20;
                CaptionML=ENU=Welcome to Create New Job;
                Visible=CreationStepVisible;
                GroupType=Group }

    { 18  ;3   ;Group     ;
                Name=Group18;
                Visible=CreationStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Fill in the following fields for the new job. }

    { 16  ;4   ;Field     ;
                Name=No.;
                CaptionML=ENU=No.;
                ApplicationArea=#Jobs;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               if AssistEdit(xRec) then
                                 CurrPage.UPDATE;
                             END;

                ImplicitType=Code20 }

    { 26  ;4   ;Field     ;
                Name=Description;
                CaptionML=ENU=Description;
                ApplicationArea=#Jobs;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 27  ;4   ;Field     ;
                Name=Bill-to Customer No.;
                CaptionML=ENU=Bill-to Customer No.;
                ApplicationArea=#Jobs;
                SourceExpr="Bill-to Customer No.";
                TableRelation=Customer;
                ImplicitType=Code20 }

    { 9   ;3   ;Group     ;
                Name=Group9;
                GroupType=Group;
                InstructionalTextML=ENU=To select the tasks to copy from an existing job, choose Next. }

    { 8   ;1   ;Group     ;
                Name=Group8;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 12  ;2   ;Group     ;
                Name=That's it!;
                CaptionML=ENU=That's it!;
                GroupType=Group }

    { 4   ;3   ;Group     ;
                Name=Group4;
                GroupType=Group;
                InstructionalTextML=ENU=To view your new job, choose Finish. }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1040 : Record "Media Repository";
      MediaRepositoryDone@1041 : Record "Media Repository";
      MediaResourcesStandard@1002 : Record "Media Resources";
      MediaResourcesDone@1001 : Record "Media Resources";
      Step@1012 : 'Start,Creation,Finish';
      TopBannerVisible@1042 : Boolean;
      FirstStepVisible@1000 : Boolean;
      CreationStepVisible@1010 : Boolean;
      FinalStepVisible@1015 : Boolean;
      FinishActionEnabled@1009 : Boolean;
      BackActionEnabled@1013 : Boolean;
      NextActionEnabled@1014 : Boolean;
      FromExistingJobYes@1022 : Boolean;
      FromExistingJobNo@1021 : Boolean;
      SelectYesNoMsg@1025 : TextConst 'ENU=To continue, specify if you want to create the new job based on an existing job.';
      SelectJobNumberMsg@1026 : TextConst 'ENU=To continue, specify the job number that you want to copy.';
      SelectCustomerNumberMsg@1027 : TextConst 'ENU=To continue, specify the customer of the new job.';

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      if Step = Step::Creation then
        if (not FromExistingJobNo) and (not FromExistingJobYes) then begin
          MESSAGE(SelectYesNoMsg);
          Step := Step - 1;
          exit;
        end;

      if Step = Step::Finish then begin
        if "No." = '' then begin
          MESSAGE(SelectJobNumberMsg);
          Step := Step - 1;
          exit;
        end;

        if "Bill-to Customer No." = '' then begin
          MESSAGE(SelectCustomerNumberMsg);
          Step := Step - 1;
          exit;
        end;
      end;

      ResetControls;

      case Step of
        Step::Start:
          ShowStartStep;
        Step::Creation:
          ShowCreationStep;
        Step::Finish:
          ShowFinalStep;
      end;
    END;

    LOCAL PROCEDURE FinishAction@12();
    BEGIN
      PAGE.RUN(PAGE::"Job Card",Rec);
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@41(Backwards@1000 : Boolean);
    BEGIN
      if Backwards then
        Step := Step - 1
      else
        Step := Step + 1;

      EnableControls;
    END;

    LOCAL PROCEDURE ShowStartStep@24();
    BEGIN
      FirstStepVisible := true;
      FinishActionEnabled := false;
      BackActionEnabled := false;
      FromExistingJobYes := true;
      FromExistingJobNo := false;
    END;

    LOCAL PROCEDURE ShowCreationStep@33();
    BEGIN
      CreationStepVisible := true;
      FinishActionEnabled := false;

      // If user clicked "Back", the Job will already exist, so don't try to create it again.
      if "No." = '' then begin
        INSERT(true);
        COMMIT;
      end;

      if FromExistingJobNo then
        FinishAction;
    END;

    LOCAL PROCEDURE ShowFinalStep@34();
    VAR
      CopyJobTasks@1000 : Page "Copy Job Tasks";
    BEGIN
      FinalStepVisible := true;
      BackActionEnabled := false;
      NextActionEnabled := false;

      CopyJobTasks.SetToJob(Rec);
      CopyJobTasks.RUN;
    END;

    LOCAL PROCEDURE ResetControls@1();
    BEGIN
      FinishActionEnabled := true;
      BackActionEnabled := true;
      NextActionEnabled := true;

      FirstStepVisible := false;
      CreationStepVisible := false;
      FinalStepVisible := false;
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      if MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE)) and
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE))
      then
        if MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") and
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        then
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    BEGIN
    END.
  }
}

