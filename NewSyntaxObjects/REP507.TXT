OBJECT Report 507 XBRL Copy Setup
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=XBRL Copy Setup;
    ProcessingOnly=true;
    OnPreReport=BEGIN
                  if FromTaxonomyName = '' then
                    ERROR(Text002);
                  if ToTaxonomyName = '' then
                    ERROR(Text003);
                  if FromTaxonomyName = ToTaxonomyName then
                    ERROR(Text004);
                END;

  }
  DATASET
  {
    { 6023;    ;DataItem;FromXBRLLine        ;
               DataItemTable="XBRL Taxonomy Line";
               DataItemTableView=SORTING("XBRL Taxonomy Name","Line No.");
               OnPreDataItem=BEGIN
                               SETRANGE("XBRL Taxonomy Name",FromTaxonomyName);
                               ToXBRLLine.SETCURRENTKEY(Name);
                               ToXBRLLine.SETRANGE("XBRL Taxonomy Name",ToTaxonomyName);
                               NoOfRecords := COUNT;
                               Window.OPEN(Text001);
                               T0 := TIME;
                               T1 := T0;
                             END;

               OnAfterGetRecord=BEGIN
                                  Progress := Progress + 1;
                                  T1 := TIME;
                                  if T1 > T0 + 250 then begin
                                    Window.UPDATE(1,ROUND(Progress * 10000 / NoOfRecords,1));
                                    T0 := TIME;
                                    T1 := T0;
                                  end;

                                  ToXBRLLine.SETRANGE(Name,Name);
                                  if ToXBRLLine.FINDFIRST then begin
                                    ToXBRLLine.Description := Description;
                                    ToXBRLLine."Constant Amount" := "Constant Amount";
                                    ToXBRLLine."Source Type" := "Source Type";
                                    ToXBRLLine.MODIFY;

                                    FromXBRLCommentLine.SETRANGE("XBRL Taxonomy Name","XBRL Taxonomy Name");
                                    FromXBRLCommentLine.SETRANGE("XBRL Taxonomy Line No.","Line No.");
                                    FromXBRLCommentLine.SETRANGE("Comment Type",FromXBRLCommentLine."Comment Type"::Notes);
                                    if FromXBRLCommentLine.FIND('-') then
                                      repeat
                                        ToXBRLCommentLine := FromXBRLCommentLine;
                                        ToXBRLCommentLine."XBRL Taxonomy Name" := ToXBRLLine."XBRL Taxonomy Name";
                                        ToXBRLCommentLine."XBRL Taxonomy Line No." := ToXBRLLine."Line No.";
                                        if ToXBRLCommentLine.INSERT then;
                                      until FromXBRLCommentLine.NEXT = 0;

                                    FromXBRLGLMapLine.SETRANGE("XBRL Taxonomy Name","XBRL Taxonomy Name");
                                    FromXBRLGLMapLine.SETRANGE("XBRL Taxonomy Line No.","Line No.");
                                    if FromXBRLGLMapLine.FIND('-') then
                                      repeat
                                        ToXBRLGLMapLine := FromXBRLGLMapLine;
                                        ToXBRLGLMapLine."XBRL Taxonomy Name" := ToXBRLLine."XBRL Taxonomy Name";
                                        ToXBRLGLMapLine."XBRL Taxonomy Line No." := ToXBRLLine."Line No.";
                                        if ToXBRLGLMapLine.INSERT then;
                                      until FromXBRLGLMapLine.NEXT = 0;
                                  end else
                                    CurrReport.SKIP;
                                END;

               OnPostDataItem=BEGIN
                                Window.CLOSE;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=From Taxonomy Name;
                  CaptionML=ENU=From Taxonomy Name;
                  ToolTipML=ENU=Specifies the taxonomy from which you want to copy the setup.;
                  ApplicationArea=#XBRL;
                  SourceExpr=FromTaxonomyName;
                  OnValidate=BEGIN
                               ValidateTaxonomy(FromTaxonomyName);
                             END;

                  OnLookup=BEGIN
                             exit(LookupTaxonomy(Text));
                           END;
                            }

      { 3   ;2   ;Field     ;
                  Name=To Taxonomy Name;
                  CaptionML=ENU=To Taxonomy Name;
                  ToolTipML=ENU=Specifies the taxonomy to which you want to copy the setup.;
                  ApplicationArea=#XBRL;
                  SourceExpr=ToTaxonomyName;
                  OnValidate=BEGIN
                               ValidateTaxonomy(ToTaxonomyName);
                             END;

                  OnLookup=BEGIN
                             exit(LookupTaxonomy(Text));
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ToXBRLLine@1000 : Record "XBRL Taxonomy Line";
      FromXBRLCommentLine@1001 : Record "XBRL Comment Line";
      ToXBRLCommentLine@1002 : Record "XBRL Comment Line";
      FromXBRLGLMapLine@1003 : Record "XBRL G/L Map Line";
      ToXBRLGLMapLine@1004 : Record "XBRL G/L Map Line";
      Window@1009 : Dialog;
      FromTaxonomyName@1005 : Code[20];
      ToTaxonomyName@1006 : Code[20];
      NoOfRecords@1007 : Integer;
      Progress@1008 : Integer;
      Text001@1010 : TextConst 'ENU=Copying Setup @1@@@@@@@@';
      T0@1011 : Time;
      T1@1012 : Time;
      Text002@1013 : TextConst 'ENU=You must enter a From Taxonomy Name.';
      Text003@1014 : TextConst 'ENU=You must enter a To Taxonomy Name.';
      Text004@1015 : TextConst 'ENU=To and From Taxonomy Names must be different.';

    LOCAL PROCEDURE LookupTaxonomy@5(VAR Text@1000 : Text[1024]) : Boolean;
    VAR
      XBRLTaxonomy@1001 : Record "XBRL Taxonomy";
      XBRLTaxonomies@1002 : Page "XBRL Taxonomies";
    BEGIN
      XBRLTaxonomy.Name := COPYSTR(Text,1,MAXSTRLEN(XBRLTaxonomy.Name));
      if XBRLTaxonomy.FIND('=<>') then;
      XBRLTaxonomies.SETRECORD(XBRLTaxonomy);
      XBRLTaxonomies.LOOKUPMODE := true;
      if XBRLTaxonomies.RUNMODAL = ACTION::LookupOK then begin
        XBRLTaxonomies.GETRECORD(XBRLTaxonomy);
        Text := XBRLTaxonomy.Name;
        exit(true);
      end;
      exit(false);
    END;

    LOCAL PROCEDURE ValidateTaxonomy@6(TaxonomyName@1000 : Code[20]);
    VAR
      XBRLTaxonomy@1001 : Record "XBRL Taxonomy";
    BEGIN
      XBRLTaxonomy.GET(TaxonomyName);
    END;

    PROCEDURE SetCopyTo@1(NewToTaxonomyName@1000 : Code[20]);
    BEGIN
      ToTaxonomyName := NewToTaxonomyName;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

