OBJECT Page 2140 O365 Sync with Microsoft Apps
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Sync with Microsoft Apps;
    OnInit=BEGIN
             UsernameVisible := CURRENTCLIENTTYPE <> CLIENTTYPE::Phone;
           END;

    OnOpenPage=VAR
                 MarketingSetup@1000 : Record "Marketing Setup";
               BEGIN
                 if MarketingSetup.GET then
                   EnableSync := MarketingSetup."Sync with Microsoft Graph";
                 SetUserName;
               END;

  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=Microsoft Sync;
                CaptionML=ENU=Microsoft Sync;
                ContainerType=ContentArea }

    { 7   ;1   ;Group     ;
                Name=Group7;
                GroupType=Group }

    { 2   ;2   ;Field     ;
                Name=EnableSync;
                CaptionML=ENU=Enable Synchronization;
                ToolTipML=ENU=Specifies whether Microsoft synchronization is enabled.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=EnableSync;
                OnValidate=VAR
                             MarketingSetup@1004 : Record "Marketing Setup";
                             CompanyInformation@1003 : Record "Company Information";
                             AzureADUserManagement@1002 : Codeunit "Azure AD User Management";
                             WebhookManagement@1005 : Codeunit "Webhook Management";
                             GraphSyncRunner@1001 : Codeunit "Graph Sync. Runner";
                             TenantDetail@1000 : DotNet "'Microsoft.Azure.ActiveDirectory.GraphClient, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Azure.ActiveDirectory.GraphClient.TenantDetail";
                           BEGIN
                             with MarketingSetup do begin
                               if not GET then
                                 INSERT(true);
                               VALIDATE("Sync with Microsoft Graph",EnableSync);
                               MODIFY(true);
                             end;

                             SetUserName;

                             if not EnableSync then
                               exit;

                             if not WebhookManagement.IsCurrentClientTypeAllowed then
                               exit;

                             if not WebhookManagement.IsSyncAllowed then
                               exit;

                             if not GraphSyncRunner.IsGraphSyncEnabled then
                               exit;

                             CompanyInformation.GET;
                             if CompanyInformation."Sync with O365 Bus. profile" then
                               TASKSCHEDULER.CREATETASK(CODEUNIT::"Business Profile Sync. Runner",0,true,COMPANYNAME,0DT)
                             else
                               if AzureADUserManagement.GetTenantDetail(TenantDetail) then begin
                                 CompanyInformation.LOCKTABLE;
                                 CompanyInformation.Name := COPYSTR(TenantDetail.DisplayName,1,MAXSTRLEN(CompanyInformation.Name));
                                 CompanyInformation.Address := COPYSTR(TenantDetail.Street,1,MAXSTRLEN(CompanyInformation.Address));
                                 CompanyInformation.City := COPYSTR(TenantDetail.City,1,MAXSTRLEN(CompanyInformation.City));
                                 CompanyInformation."Post Code" := COPYSTR(TenantDetail.PostalCode,1,MAXSTRLEN(CompanyInformation."Post Code"));
                                 CompanyInformation.County := COPYSTR(TenantDetail.State,1,MAXSTRLEN(CompanyInformation.County));
                                 CompanyInformation."Country/Region Code" :=
                                   COPYSTR(TenantDetail.CountryLetterCode,1,MAXSTRLEN(CompanyInformation."Country/Region Code"));
                                 CompanyInformation.MODIFY(false);
                               end;
                           END;
                            }

    { 6   ;2   ;Field     ;
                Name=SyncUser;
                CaptionML=ENU=User;
                ToolTipML=ENU=Specifies the user who owns the synchronization jobs.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=UserName;
                Visible=UsernameVisible;
                Editable=FALSE;
                OnAssistEdit=VAR
                               SelectedUser@1001 : Record User;
                               MarketingSetup@1000 : Record "Marketing Setup";
                             BEGIN
                               if not EnableSync then
                                 exit;

                               SelectedUser.SETFILTER("License Type",'<> %1',SelectedUser."License Type"::"External User");
                               if not (PAGE.RUNMODAL(PAGE::Users,SelectedUser) = ACTION::LookupOK) then
                                 exit;

                               MarketingSetup.GET;
                               if MarketingSetup.TrySetWebhookSubscriptionUser(SelectedUser."User Security ID") then begin
                                 MarketingSetup.MODIFY(true);
                                 UserName := SelectedUser."User Name";
                               end
                             END;
                              }

  }
  CODE
  {
    VAR
      EnableSync@1000 : Boolean;
      UserName@1003 : Text;
      UsernameVisible@1001 : Boolean;

    LOCAL PROCEDURE SetUserName@15();
    VAR
      MarketingSetup@1002 : Record "Marketing Setup";
      User@1001 : Record User;
    BEGIN
      if EnableSync then begin
        if User.GET(MarketingSetup.GetWebhookSubscriptionUser) then
          UserName := User."User Name";
      end else
        UserName := '';
    END;

    BEGIN
    END.
  }
}

