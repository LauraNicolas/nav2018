OBJECT Page 5114 Contact Profile Answers
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Contact Profile Answers;
    SaveValues=true;
    InsertAllowed=false;
    DeleteAllowed=false;
    SourceTable="Profile Questionnaire Line";
    DataCaptionExpr=CaptionStr;
    PageType=List;
    AutoSplitKey=true;
    OnOpenPage=BEGIN
                 if ContactProfileAnswerCode = '' then
                   CurrentQuestionsChecklistCode :=
                     ProfileManagement.ProfileQuestionnaireAllowed(Cont,CurrentQuestionsChecklistCode)
                 else
                   CurrentQuestionsChecklistCode := ContactProfileAnswerCode;

                 ProfileManagement.SetName(CurrentQuestionsChecklistCode,Rec,ContactProfileAnswerLine);

                 if (Cont."Company No." <> '') and (Cont."No." <> Cont."Company No.") then begin
                   CaptionStr := COPYSTR(Cont."Company No." + ' ' + Cont."Company Name",1,MAXSTRLEN(CaptionStr));
                   CaptionStr := COPYSTR(CaptionStr + ' ' + Cont."No." + ' ' + Cont.Name,1,MAXSTRLEN(CaptionStr));
                 end else
                   CaptionStr := COPYSTR(Cont."No." + ' ' + Cont.Name,1,MAXSTRLEN(CaptionStr));
               END;

    OnFindRecord=BEGIN
                   ProfileQuestionnaireLine2.COPY(Rec);

                   if not ProfileQuestionnaireLine2.FIND(Which) then
                     exit(false);

                   ProfileQuestLineQuestion := ProfileQuestionnaireLine2;
                   if ProfileQuestionnaireLine2.Type = Type::Answer then
                     ProfileQuestLineQuestion.GET(ProfileQuestionnaireLine2."Profile Questionnaire Code",ProfileQuestLineQuestion.FindQuestionLine);

                   OK := true;
                   if ProfileQuestLineQuestion."Auto Contact Classification" then begin
                     OK := false;
                     repeat
                       if Which = '+' then
                         GoNext := ProfileQuestionnaireLine2.NEXT(-1) <> 0
                       else
                         GoNext := ProfileQuestionnaireLine2.NEXT(1) <> 0;
                       if GoNext then begin
                         ProfileQuestLineQuestion := ProfileQuestionnaireLine2;
                         if ProfileQuestionnaireLine2.Type = Type::Answer then
                           ProfileQuestLineQuestion.GET(
                             ProfileQuestionnaireLine2."Profile Questionnaire Code",ProfileQuestLineQuestion.FindQuestionLine);
                         OK := not ProfileQuestLineQuestion."Auto Contact Classification";
                       end;
                     until (not GoNext) or OK;
                   end;

                   if not OK then
                     exit(false);

                   Rec := ProfileQuestionnaireLine2;
                   exit(true);
                 END;

    OnNextRecord=VAR
                   ActualSteps@1000 : Integer;
                   Step@1001 : Integer;
                   NoOneFound@1002 : Boolean;
                 BEGIN
                   ProfileQuestionnaireLine2.COPY(Rec);

                   if Steps > 0 then
                     Step := 1
                   else
                     Step := -1;

                   repeat
                     if ProfileQuestionnaireLine2.NEXT(Step) <> 0 then begin
                       if ProfileQuestionnaireLine2.Type = Type::Answer then
                         ProfileQuestLineQuestion.GET(
                           ProfileQuestionnaireLine2."Profile Questionnaire Code",ProfileQuestionnaireLine2.FindQuestionLine);
                       if ((not ProfileQuestLineQuestion."Auto Contact Classification") and
                           (ProfileQuestionnaireLine2.Type = Type::Answer)) or
                          ((ProfileQuestionnaireLine2.Type = Type::Question) and (not ProfileQuestionnaireLine2."Auto Contact Classification"))
                       then begin
                         ActualSteps := ActualSteps + Step;
                         if Steps <> 0 then
                           Rec := ProfileQuestionnaireLine2;
                       end;
                     end else
                       NoOneFound := true
                   until (ActualSteps = Steps) or NoOneFound;

                   exit(ActualSteps);
                 END;

    OnAfterGetRecord=BEGIN
                       Set := ContProfileAnswer.GET(Cont."No.","Profile Questionnaire Code","Line No.");

                       StyleIsStrong := Type = Type::Question;
                       if Type <> Type::Question then
                         DescriptionIndent := 1
                       else
                         DescriptionIndent := 0;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 11  ;1   ;Field     ;
                Name=CurrentQuestionsChecklistCode;
                CaptionML=ENU=Profile Questionnaire Code;
                ToolTipML=ENU=Specifies the profile questionnaire.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=CurrentQuestionsChecklistCode;
                OnValidate=BEGIN
                             ProfileManagement.CheckName(CurrentQuestionsChecklistCode,Cont);
                             CurrentQuestionsChecklistCodeO;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           ProfileManagement.LookupName(CurrentQuestionsChecklistCode,Rec,Cont);
                           CurrPage.UPDATE(false);
                         END;

                ImplicitType=Code20 }

    { 1   ;1   ;Group     ;
                Name=Group1;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies whether the entry is a question or an answer.;
                ApplicationArea=#All;
                SourceExpr=Type;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=StyleIsStrong;
                ImplicitType=Option }

    { 4   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the profile question or answer.;
                ApplicationArea=#All;
                SourceExpr=Description;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=StyleIsStrong;
                ImplicitType=Text50 }

    { 9   ;2   ;Field     ;
                Name=No. of Contacts;
                ToolTipML=ENU=Specifies the number of contacts that have given this answer.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="No. of Contacts";
                Visible=FALSE;
                ImplicitType=Integer }

    { 15  ;2   ;Field     ;
                Name=Set;
                CaptionML=ENU=Set;
                ToolTipML=ENU=Specifies the answer to the question.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Set;
                OnValidate=BEGIN
                             UpdateProfileAnswer;
                           END;

                ImplicitType=Boolean }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Cont@1000 : Record Contact;
      ContProfileAnswer@1001 : Record "Contact Profile Answer";
      ProfileQuestionnaireLine2@1008 : Record "Profile Questionnaire Line";
      ProfileQuestLineQuestion@1009 : Record "Profile Questionnaire Line";
      ProfileManagement@1002 : Codeunit ProfileManagement;
      CurrentQuestionsChecklistCode@1003 : Code[20];
      ContactProfileAnswerCode@1006 : Code[20];
      ContactProfileAnswerLine@1007 : Integer;
      Set@1004 : Boolean;
      GoNext@1010 : Boolean;
      OK@1011 : Boolean;
      CaptionStr@1005 : Text[260];
      RunFormCode@1012 : Boolean;
      StyleIsStrong@1013 : Boolean INDATASET;
      DescriptionIndent@19057867 : Integer INDATASET;

    [External]
    PROCEDURE SetParameters@1(VAR SetCont@1000 : Record Contact;SetProfileQuestionnaireCode@1001 : Code[20];SetContProfileAnswerCode@1003 : Code[20];SetContProfileAnswerLine@1002 : Integer);
    BEGIN
      Cont := SetCont;
      CurrentQuestionsChecklistCode := SetProfileQuestionnaireCode;
      ContactProfileAnswerCode := SetContProfileAnswerCode;
      ContactProfileAnswerLine := SetContProfileAnswerLine;
    END;

    [External]
    PROCEDURE UpdateProfileAnswer@2();
    BEGIN
      if not RunFormCode and Set then
        TESTFIELD(Type,Type::Answer);

      if Set then begin
        ContProfileAnswer.INIT;
        ContProfileAnswer."Contact No." := Cont."No.";
        ContProfileAnswer."Contact Company No." := Cont."Company No.";
        ContProfileAnswer.VALIDATE("Profile Questionnaire Code",CurrentQuestionsChecklistCode);
        ContProfileAnswer.VALIDATE("Line No.","Line No.");
        ContProfileAnswer."Last Date Updated" := TODAY;
        ContProfileAnswer.INSERT(true);
      end else
        if ContProfileAnswer.GET(Cont."No.",CurrentQuestionsChecklistCode,"Line No.") then
          ContProfileAnswer.DELETE(true);
    END;

    [External]
    PROCEDURE SetRunFromForm@24(VAR ProfileQuestionnaireLine@1002 : Record "Profile Questionnaire Line";ContactFrom@1000 : Record Contact;CurrQuestionsChecklistCodeFrom@1001 : Code[20]);
    BEGIN
      Set := true;
      RunFormCode := true;
      Cont := ContactFrom;
      CurrentQuestionsChecklistCode := CurrQuestionsChecklistCodeFrom;
      Rec := ProfileQuestionnaireLine;
    END;

    LOCAL PROCEDURE CurrentQuestionsChecklistCodeO@19076168();
    BEGIN
      CurrPage.SAVERECORD;
      ProfileManagement.SetName(CurrentQuestionsChecklistCode,Rec,0);
      CurrPage.UPDATE(false);
    END;

    BEGIN
    END.
  }
}

