OBJECT Table 5940 Service Item
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    DataCaptionFields="No.",Description;
    OnInsert=BEGIN
               ServMgtSetup.GET ;
               if "No." = '' then begin
                 ServMgtSetup.TESTFIELD("Service Item Nos.");
                 NoSeriesMgt.InitSeries(ServMgtSetup."Service Item Nos.",xRec."No. Series",0D,"No.","No. Series");
               end;
               "Response Time (Hours)" := ServMgtSetup."Default Response Time (Hours)";

               ServLogMgt.ServItemCreated(Rec);
             END;

    OnDelete=VAR
               ResultDescription@1000 : Text;
             BEGIN
               MoveEntries.MoveServiceItemLedgerEntries(Rec);

               ResultDescription := CheckIfCanBeDeleted;
               if ResultDescription <> '' then
                 ERROR(ResultDescription);

               DeleteServItemComponents;

               ServCommentLine.RESET;
               ServCommentLine.SETRANGE("Table Name",ServCommentLine."Table Name"::"Service Item");
               ServCommentLine.SETRANGE("Table Subtype",0);
               ServCommentLine.SETRANGE("No.","No.");
               ServCommentLine.DELETEALL;

               ResSkillMgt.DeleteServItemResSkills("No.");
               ServLogMgt.ServItemDeleted("No.");

               DimMgt.DeleteDefaultDim(DATABASE::"Service Item","No.");
             END;

    OnRename=BEGIN
               if "No." <> xRec."No." then begin
                 ServLogMgt.ServItemNoChange(Rec,xRec);
                 ServContractLine.RESET;
                 ServContractLine.SETCURRENTKEY("Service Item No.","Contract Status");
                 ServContractLine.SETRANGE("Service Item No.",xRec."No.");
                 ServContractLine.SETRANGE("Contract Type",ServContractLine."Contract Type"::Contract);
                 if ServContractLine.FIND('-') then
                   repeat
                     ContractChangeLog.LogContractChange(
                       ServContractLine."Contract No.",1,
                       ServContractLine.FIELDCAPTION("Service Item No."),3,
                       xRec."No.","No.","No.",0);
                   until ServContractLine.NEXT = 0;
               end;
             END;

    CaptionML=ENU=Service Item;
    LookupPageID="Service Item List";
    DrillDownPageID="Service Item List";
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Description;
                                                   OnValidate=BEGIN
                                                                if "No." <> xRec."No." then begin
                                                                  ServMgtSetup.GET;
                                                                  NoSeriesMgt.TestManual(ServMgtSetup."Service Item Nos.");
                                                                  "No. Series" := '';
                                                                end;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 2   ;   ;Serial No.          ;Code20        ;OnValidate=BEGIN
                                                                if "Serial No." <> xRec."Serial No." then
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Serial No."));

                                                                if "Serial No." <> '' then begin
                                                                  ServItem.RESET;
                                                                  ServItem.SETCURRENTKEY("Item No.","Serial No.");
                                                                  ServItem.SETRANGE("Item No.","Item No.");
                                                                  ServItem.SETRANGE("Serial No.","Serial No.");
                                                                  ServItem.SETFILTER("No.",'<>%1',"No.");
                                                                  if ServItem.FINDFIRST then begin
                                                                    if "Item No." <> '' then
                                                                      ERROR(
                                                                        Text003,
                                                                        FIELDCAPTION("Serial No."),"Serial No.",TABLECAPTION,ServItem."No.");
                                                                    MESSAGE(
                                                                      Text003,
                                                                      FIELDCAPTION("Serial No."),"Serial No.",TABLECAPTION,ServItem."No.")
                                                                  end;
                                                                end;

                                                                if "Serial No." <> xRec."Serial No." then
                                                                  ServLogMgt.ServItemSerialNoChange(Rec,xRec);
                                                              END;

                                                   CaptionML=ENU=Serial No. }
    { 3   ;   ;Service Item Group Code;Code10     ;TableRelation="Service Item Group";
                                                   OnValidate=BEGIN
                                                                if xRec."Service Item Group Code" = "Service Item Group Code" then begin
                                                                  if not CancelResSkillAssignment then
                                                                    ResSkillMgt.RevalidateRelation(
                                                                      ResSkill.Type::"Service Item",
                                                                      "No.",
                                                                      ResSkill.Type::"Service Item Group",
                                                                      "Service Item Group Code")
                                                                end else begin
                                                                  if not CancelResSkillAssignment then begin
                                                                    if CancelResSkillChanges then
                                                                      ResSkillMgt.SkipValidationDialogs;

                                                                    if not ResSkillMgt.ChangeRelationWithGroup(
                                                                         ResSkill.Type::"Service Item",
                                                                         "No.",
                                                                         ResSkill.Type::"Service Item Group",
                                                                         "Service Item Group Code",
                                                                         xRec."Service Item Group Code")
                                                                    then
                                                                      ERROR('');

                                                                    if CancelResSkillChanges then begin
                                                                      ResSkillMgt.DropGlobals;
                                                                      CancelResSkillChanges := false;
                                                                    end else
                                                                      CancelResSkillChanges := true;
                                                                  end;

                                                                  if "Service Item Group Code" <> '' then begin
                                                                    ServItemGr.GET("Service Item Group Code");
                                                                    "Default Contract Discount %" := ServItemGr."Default Contract Discount %";
                                                                    if "Service Price Group Code" = '' then
                                                                      "Service Price Group Code" := ServItemGr."Default Serv. Price Group Code";
                                                                    if (xRec."Service Item Group Code" <> "Service Item Group Code") and
                                                                       (ServItemGr."Default Response Time (Hours)" <> 0)
                                                                    then
                                                                      "Response Time (Hours)" := ServItemGr."Default Response Time (Hours)";
                                                                  end;
                                                                end;
                                                                MODIFY;
                                                              END;

                                                   CaptionML=ENU=Service Item Group Code }
    { 4   ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                if ("Search Description" = UPPERCASE(xRec.Description)) or ("Search Description" = '') then
                                                                  "Search Description" := Description;
                                                              END;

                                                   CaptionML=ENU=Description }
    { 5   ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 6   ;   ;Status              ;Option        ;OnValidate=BEGIN
                                                                if Status <> xRec.Status then begin
                                                                  if (Status = Status::Installed) and ("Installation Date" = 0D) then
                                                                    "Installation Date" := WORKDATE;
                                                                  ServLogMgt.ServItemStatusChange(Rec,xRec);
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=" ,Own Service Item,Installed,Temporarily Installed,Defective";
                                                   OptionString=" ","Own Service Item",Installed,"Temporarily Installed",Defective }
    { 7   ;   ;Priority            ;Option        ;CaptionML=ENU=Priority;
                                                   OptionCaptionML=ENU=Low,Medium,High;
                                                   OptionString=Low,Medium,High }
    { 8   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   OnValidate=BEGIN
                                                                if "Customer No." <> xRec."Customer No." then begin
                                                                  if CheckifActiveServContLineExist then
                                                                    ERROR(
                                                                      Text004,
                                                                      FIELDCAPTION("Customer No."),"Customer No.",TABLECAPTION,"No.");
                                                                  ServItemLinesExistErr(FIELDCAPTION("Customer No."));
                                                                  if ServLedgEntryExist then
                                                                    if not CONFIRM(
                                                                         Text017,
                                                                         false,TABLECAPTION,FIELDCAPTION("Customer No."))
                                                                    then begin
                                                                      "Customer No." := xRec."Customer No.";
                                                                      exit;
                                                                    end;
                                                                  "Ship-to Code" := '';
                                                                  if ("Customer No." <> '') and
                                                                     (xRec."Customer No." = '')
                                                                  then
                                                                    Status := Status::Installed;
                                                                  ServLogMgt.ServItemCustChange(Rec,xRec);
                                                                  ServLogMgt.ServItemShipToCodeChange(Rec,xRec);
                                                                end;
                                                              END;

                                                   ValidateTableRelation=true;
                                                   CaptionML=ENU=Customer No. }
    { 9   ;   ;Ship-to Code        ;Code10        ;TableRelation="Ship-to Address".Code WHERE ("Customer No."=FIELD("Customer No."));
                                                   OnValidate=BEGIN
                                                                if "Ship-to Code" <> xRec."Ship-to Code" then begin
                                                                  if CheckifActiveServContLineExist then
                                                                    ERROR(
                                                                      Text004,
                                                                      FIELDCAPTION("Ship-to Code"),"Ship-to Code",TABLECAPTION,"No.");
                                                                  ServItemLinesExistErr(FIELDCAPTION("Ship-to Code"));
                                                                  if ServLedgEntryExist then
                                                                    if not CONFIRM(
                                                                         Text017,
                                                                         false,TABLECAPTION,FIELDCAPTION("Customer No."))
                                                                    then begin
                                                                      "Ship-to Code" := xRec."Ship-to Code";
                                                                      exit;
                                                                    end;
                                                                  ServLogMgt.ServItemShipToCodeChange(Rec,xRec);
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Ship-to Code }
    { 10  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                if "Item No." <> xRec."Item No." then begin
                                                                  if "Item No." <> '' then begin
                                                                    CALCFIELDS("Service Item Components");
                                                                    if "Service Item Components" then
                                                                      if not CONFIRM(
                                                                           Text005 +
                                                                           Text006,false,
                                                                           FIELDCAPTION("Item No."),FIELDCAPTION("Service Item Components"))
                                                                      then begin
                                                                        "Item No." := xRec."Item No.";
                                                                        exit;
                                                                      end;
                                                                  end;
                                                                  if not CancelResSkillAssignment then begin
                                                                    if CancelResSkillChanges then
                                                                      ResSkillMgt.SkipValidationDialogs;
                                                                    if not ResSkillMgt.ChangeRelationWithItem(
                                                                         ResSkill.Type::"Service Item",
                                                                         "No.",
                                                                         ResSkill.Type::Item,
                                                                         "Item No.",
                                                                         xRec."Item No.",
                                                                         xRec."Service Item Group Code")
                                                                    then
                                                                      ERROR('');
                                                                    if CancelResSkillChanges then begin
                                                                      ResSkillMgt.DropGlobals;
                                                                      CancelResSkillChanges := false;
                                                                    end else
                                                                      CancelResSkillChanges := true;
                                                                  end;
                                                                  if "Item No." <> '' then begin
                                                                    Item.GET("Item No.");
                                                                    VALIDATE("Service Item Group Code",Item."Service Item Group");
                                                                    VALIDATE("Serial No.");
                                                                    VALIDATE("Sales Unit Cost",Item."Unit Cost");
                                                                    VALIDATE("Sales Unit Price",Item."Unit Price");
                                                                    "Variant Code" := '';
                                                                    "Unit of Measure Code" := Item."Base Unit of Measure";
                                                                    if Description = '' then
                                                                      VALIDATE(Description,Item.Description);
                                                                    if "Service Item Components" then begin
                                                                      DeleteServItemComponents;
                                                                      CALCFIELDS("Service Item Components");
                                                                    end;
                                                                  end else begin
                                                                    "Serial No." := '';
                                                                    VALIDATE("Sales Unit Price",0);
                                                                    VALIDATE("Sales Unit Cost",0);
                                                                    "Variant Code" := '';
                                                                    "Service Item Group Code" := '';
                                                                    "Unit of Measure Code" := '';
                                                                  end;
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Item No."));
                                                                end else
                                                                  if not CancelResSkillAssignment then
                                                                    ResSkillMgt.RevalidateRelation(
                                                                      ResSkill.Type::"Service Item",
                                                                      "No.",
                                                                      ResSkill.Type::Item,
                                                                      "Item No.");

                                                                ServLogMgt.ServItemItemNoChange(Rec,xRec);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=ENU=Item No. }
    { 11  ;   ;Unit of Measure Code;Code10        ;TableRelation=IF ("Item No."=FILTER(<>'')) "Item Unit of Measure".Code WHERE ("Item No."=FIELD("Item No."))
                                                                 ELSE "Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure Code }
    { 12  ;   ;Location of Service Item;Text30    ;CaptionML=ENU=Location of Service Item }
    { 13  ;   ;Sales Unit Price    ;Decimal       ;OnValidate=BEGIN
                                                                ServMgtSetup.GET;
                                                                Currency.InitRoundingPrecision;
                                                                if (ServMgtSetup."Contract Value Calc. Method" =
                                                                    ServMgtSetup."Contract Value Calc. Method"::"Based on Unit Price") and
                                                                   ("Sales Unit Price" <> xRec."Sales Unit Price")
                                                                then
                                                                  "Default Contract Value" :=
                                                                    ROUND("Sales Unit Price" * ServMgtSetup."Contract Value %" / 100,
                                                                      Currency."Unit-Amount Rounding Precision");
                                                              END;

                                                   CaptionML=ENU=Sales Unit Price;
                                                   BlankZero=true;
                                                   AutoFormatType=2 }
    { 14  ;   ;Sales Unit Cost     ;Decimal       ;OnValidate=BEGIN
                                                                ServMgtSetup.GET;
                                                                Currency.InitRoundingPrecision;
                                                                "Default Contract Cost" :=
                                                                  ROUND("Sales Unit Cost" * ServMgtSetup."Contract Value %" / 100,
                                                                    Currency."Unit-Amount Rounding Precision");
                                                                if (ServMgtSetup."Contract Value Calc. Method" =
                                                                    ServMgtSetup."Contract Value Calc. Method"::"Based on Unit Cost") and
                                                                   ("Sales Unit Cost" <> xRec."Sales Unit Cost")
                                                                then
                                                                  "Default Contract Value" := "Default Contract Cost";
                                                              END;

                                                   CaptionML=ENU=Sales Unit Cost;
                                                   BlankZero=true;
                                                   AutoFormatType=2 }
    { 15  ;   ;Warranty Starting Date (Labor);Date;OnValidate=BEGIN
                                                                if "Warranty Starting Date (Labor)" <> xRec."Warranty Starting Date (Labor)" then
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Warranty Starting Date (Labor)"));

                                                                ServMgtSetup.GET;
                                                                ServMgtSetup.TESTFIELD("Default Warranty Duration");
                                                                if "Warranty Starting Date (Labor)" <> xRec."Warranty Starting Date (Labor)" then
                                                                  if "Warranty Starting Date (Labor)" <> 0D then
                                                                    VALIDATE("Warranty Ending Date (Labor)",CALCDATE(ServMgtSetup."Default Warranty Duration","Warranty Starting Date (Labor)"))
                                                                  else
                                                                    "Warranty Ending Date (Labor)" := 0D;

                                                                if "Warranty Starting Date (Labor)" <> 0D then
                                                                  if "Warranty Starting Date (Parts)" = 0D then
                                                                    VALIDATE("Warranty Starting Date (Parts)","Warranty Starting Date (Labor)");
                                                              END;

                                                   CaptionML=ENU=Warranty Starting Date (Labor) }
    { 16  ;   ;Warranty Ending Date (Labor);Date  ;OnValidate=BEGIN
                                                                if "Warranty Ending Date (Labor)" <> xRec."Warranty Ending Date (Labor)" then
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Warranty Ending Date (Labor)"));

                                                                if "Warranty Ending Date (Labor)" < "Warranty Starting Date (Labor)" then
                                                                  ERROR(
                                                                    Text007,
                                                                    FIELDCAPTION("Warranty Starting Date (Labor)"),FIELDCAPTION("Warranty Ending Date (Labor)"));

                                                                ServMgtSetup.GET;
                                                                if "Warranty % (Labor)" = 0 then
                                                                  "Warranty % (Labor)" := ServMgtSetup."Warranty Disc. % (Labor)";
                                                              END;

                                                   CaptionML=ENU=Warranty Ending Date (Labor) }
    { 17  ;   ;Warranty Starting Date (Parts);Date;OnValidate=VAR
                                                                ItemTrackingCode@1000 : Record "Item Tracking Code";
                                                              BEGIN
                                                                if "Warranty Starting Date (Parts)" <> xRec."Warranty Starting Date (Parts)" then
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Warranty Starting Date (Parts)"));

                                                                if "Warranty Starting Date (Parts)" <> xRec."Warranty Starting Date (Parts)" then
                                                                  if "Warranty Starting Date (Parts)" <> 0D then begin
                                                                    if Item.GET("Item No.") and (Item."Item Tracking Code" <> '') and
                                                                       ItemTrackingCode.GET(Item."Item Tracking Code") and
                                                                       (FORMAT(ItemTrackingCode."Warranty Date Formula") <> '')
                                                                    then
                                                                      VALIDATE(
                                                                        "Warranty Ending Date (Parts)",
                                                                        CALCDATE(ItemTrackingCode."Warranty Date Formula",
                                                                          "Warranty Starting Date (Parts)"))
                                                                    else begin
                                                                      ServMgtSetup.GET;
                                                                      ServMgtSetup.TESTFIELD("Default Warranty Duration");
                                                                      VALIDATE(
                                                                        "Warranty Ending Date (Parts)",
                                                                        CALCDATE(ServMgtSetup."Default Warranty Duration",
                                                                          "Warranty Starting Date (Parts)"));
                                                                    end;
                                                                  end else
                                                                    "Warranty Ending Date (Parts)" := 0D;

                                                                if "Warranty Starting Date (Parts)" <> 0D then
                                                                  if "Warranty Starting Date (Labor)" = 0D then
                                                                    VALIDATE("Warranty Starting Date (Labor)","Warranty Starting Date (Parts)");
                                                              END;

                                                   CaptionML=ENU=Warranty Starting Date (Parts) }
    { 18  ;   ;Warranty Ending Date (Parts);Date  ;OnValidate=BEGIN
                                                                if "Warranty Ending Date (Parts)" < "Warranty Starting Date (Parts)" then
                                                                  ERROR(
                                                                    Text007,
                                                                    FIELDCAPTION("Warranty Starting Date (Parts)"),FIELDCAPTION("Warranty Ending Date (Parts)"));

                                                                if "Warranty Ending Date (Parts)" <> xRec."Warranty Ending Date (Parts)" then
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Warranty Ending Date (Parts)"));

                                                                ServMgtSetup.GET;
                                                                if "Warranty % (Parts)" = 0 then
                                                                  "Warranty % (Parts)" := ServMgtSetup."Warranty Disc. % (Parts)";
                                                              END;

                                                   CaptionML=ENU=Warranty Ending Date (Parts) }
    { 19  ;   ;Warranty % (Parts)  ;Decimal       ;OnValidate=BEGIN
                                                                if "Warranty % (Parts)" <> xRec."Warranty % (Parts)" then
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Warranty % (Parts)"));
                                                              END;

                                                   CaptionML=ENU=Warranty % (Parts);
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   BlankZero=true }
    { 20  ;   ;Warranty % (Labor)  ;Decimal       ;OnValidate=BEGIN
                                                                if "Warranty % (Labor)" <> xRec."Warranty % (Labor)" then
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Warranty % (Labor)"));
                                                              END;

                                                   CaptionML=ENU=Warranty % (Labor);
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   BlankZero=true }
    { 21  ;   ;Response Time (Hours);Decimal      ;CaptionML=ENU=Response Time (Hours);
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=true }
    { 22  ;   ;Installation Date   ;Date          ;CaptionML=ENU=Installation Date }
    { 23  ;   ;Sales Date          ;Date          ;OnValidate=BEGIN
                                                                if "Sales Date" > 0D then begin
                                                                  if "Warranty Starting Date (Parts)" = 0D then
                                                                    VALIDATE("Warranty Starting Date (Parts)","Sales Date");
                                                                  if "Warranty Starting Date (Labor)" = 0D then
                                                                    VALIDATE("Warranty Starting Date (Labor)","Sales Date");
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Sales Date }
    { 24  ;   ;Last Service Date   ;Date          ;CaptionML=ENU=Last Service Date }
    { 25  ;   ;Default Contract Value;Decimal     ;CaptionML=ENU=Default Contract Value;
                                                   BlankZero=true;
                                                   AutoFormatType=2 }
    { 26  ;   ;Default Contract Discount %;Decimal;CaptionML=ENU=Default Contract Discount %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   BlankZero=true }
    { 28  ;   ;No. of Active Contracts;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("Service Contract Line" WHERE ("Service Item No."=FIELD("No."),
                                                                                                    "Contract Status"=FILTER(<>Cancelled)));
                                                   CaptionML=ENU=No. of Active Contracts }
    { 33  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Vendor No. }
    { 34  ;   ;Vendor Item No.     ;Code20        ;CaptionML=ENU=Vendor Item No. }
    { 47  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series }
    { 48  ;   ;Item Description    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item.Description WHERE ("No."=FIELD("Item No.")));
                                                   CaptionML=ENU=Item Description;
                                                   Editable=false }
    { 49  ;   ;Name                ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE ("No."=FIELD("Customer No.")));
                                                   CaptionML=ENU=Name;
                                                   Editable=false }
    { 50  ;   ;Address             ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Address WHERE ("No."=FIELD("Customer No.")));
                                                   CaptionML=ENU=Address;
                                                   Editable=false }
    { 51  ;   ;Address 2           ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer."Address 2" WHERE ("No."=FIELD("Customer No.")));
                                                   CaptionML=ENU=Address 2;
                                                   Editable=false }
    { 52  ;   ;Post Code           ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer."Post Code" WHERE ("No."=FIELD("Customer No.")));
                                                   CaptionML=ENU=Post Code;
                                                   Editable=false }
    { 53  ;   ;City                ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.City WHERE ("No."=FIELD("Customer No.")));
                                                   TableRelation="Post Code".City;
                                                   ValidateTableRelation=false;
                                                   CaptionML=ENU=City;
                                                   Editable=false }
    { 54  ;   ;Contact             ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Contact WHERE ("No."=FIELD("Customer No.")));
                                                   CaptionML=ENU=Contact;
                                                   Editable=false }
    { 55  ;   ;Phone No.           ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer."Phone No." WHERE ("No."=FIELD("Customer No.")));
                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Phone No.;
                                                   Editable=false }
    { 56  ;   ;Ship-to Name        ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address".Name WHERE ("Customer No."=FIELD("Customer No."),
                                                                                                    Code=FIELD("Ship-to Code")));
                                                   CaptionML=ENU=Ship-to Name;
                                                   Editable=false }
    { 57  ;   ;Ship-to Address     ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address".Address WHERE ("Customer No."=FIELD("Customer No."),
                                                                                                       Code=FIELD("Ship-to Code")));
                                                   CaptionML=ENU=Ship-to Address;
                                                   Editable=false }
    { 58  ;   ;Ship-to Address 2   ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address"."Address 2" WHERE ("Customer No."=FIELD("Customer No."),
                                                                                                           Code=FIELD("Ship-to Code")));
                                                   CaptionML=ENU=Ship-to Address 2;
                                                   Editable=false }
    { 59  ;   ;Ship-to Post Code   ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address"."Post Code" WHERE ("Customer No."=FIELD("Customer No."),
                                                                                                           Code=FIELD("Ship-to Code")));
                                                   CaptionML=ENU=Ship-to Post Code;
                                                   Editable=false }
    { 60  ;   ;Ship-to City        ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address".City WHERE ("Customer No."=FIELD("Customer No."),
                                                                                                    Code=FIELD("Ship-to Code")));
                                                   TableRelation="Post Code".City;
                                                   ValidateTableRelation=false;
                                                   CaptionML=ENU=Ship-to City;
                                                   Editable=false }
    { 61  ;   ;Ship-to Contact     ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address".Contact WHERE ("Customer No."=FIELD("Customer No."),
                                                                                                       Code=FIELD("Ship-to Code")));
                                                   CaptionML=ENU=Ship-to Contact;
                                                   Editable=false }
    { 62  ;   ;Ship-to Phone No.   ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address"."Phone No." WHERE ("Customer No."=FIELD("Customer No."),
                                                                                                           Code=FIELD("Ship-to Code")));
                                                   ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Ship-to Phone No.;
                                                   Editable=false }
    { 63  ;   ;Usage (Cost)        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Ledger Entry"."Cost Amount" WHERE ("Entry Type"=CONST(Usage),
                                                                                                               "Service Item No. (Serviced)"=FIELD("No."),
                                                                                                               "Service Contract No."=FIELD("Contract Filter"),
                                                                                                               "Service Order No."=FIELD("Service Order Filter"),
                                                                                                               Type=FIELD("Type Filter"),
                                                                                                               "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Usage (Cost);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 64  ;   ;Usage (Amount)      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Ledger Entry"."Amount (LCY)" WHERE ("Entry Type"=CONST(Usage),
                                                                                                                "Service Item No. (Serviced)"=FIELD("No."),
                                                                                                                "Service Contract No."=FIELD("Contract Filter"),
                                                                                                                "Service Order No."=FIELD("Service Order Filter"),
                                                                                                                Type=FIELD("Type Filter"),
                                                                                                                "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Usage (Amount);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 65  ;   ;Invoiced Amount     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service Ledger Entry"."Amount (LCY)" WHERE ("Entry Type"=CONST(Sale),
                                                                                                                 "Moved from Prepaid Acc."=CONST(true),
                                                                                                                 "Service Item No. (Serviced)"=FIELD("No."),
                                                                                                                 "Service Contract No."=FIELD("Contract Filter"),
                                                                                                                 "Service Order No."=FIELD("Service Order Filter"),
                                                                                                                 Type=FIELD("Type Filter"),
                                                                                                                 "Posting Date"=FIELD("Date Filter"),
                                                                                                                 Open=CONST(false)));
                                                   CaptionML=ENU=Invoiced Amount;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 66  ;   ;Total Quantity      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Ledger Entry".Quantity WHERE ("Entry Type"=CONST(Usage),
                                                                                                          "Service Item No. (Serviced)"=FIELD("No."),
                                                                                                          "Service Contract No."=FIELD("Contract Filter"),
                                                                                                          "Service Order No."=FIELD("Service Order Filter"),
                                                                                                          Type=FIELD("Type Filter"),
                                                                                                          "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Total Quantity;
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 67  ;   ;Total Qty. Invoiced ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service Ledger Entry"."Charged Qty." WHERE ("Entry Type"=CONST(Sale),
                                                                                                                 "Service Item No. (Serviced)"=FIELD("No."),
                                                                                                                 "Service Contract No."=FIELD("Contract Filter"),
                                                                                                                 "Service Order No."=FIELD("Service Order Filter"),
                                                                                                                 Type=FIELD("Type Filter"),
                                                                                                                 "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Total Qty. Invoiced;
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 68  ;   ;Resources Used      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service Ledger Entry"."Cost Amount" WHERE ("Service Item No. (Serviced)"=FIELD("No."),
                                                                                                                "Entry Type"=CONST(Sale),
                                                                                                                Type=CONST(Resource),
                                                                                                                "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Resources Used;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 69  ;   ;Parts Used          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service Ledger Entry"."Cost Amount" WHERE ("Service Item No. (Serviced)"=FIELD("No."),
                                                                                                                "Entry Type"=CONST(Sale),
                                                                                                                Type=CONST(Item),
                                                                                                                "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Parts Used;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 70  ;   ;Cost Used           ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service Ledger Entry"."Cost Amount" WHERE ("Service Item No. (Serviced)"=FIELD("No."),
                                                                                                                "Entry Type"=CONST(Sale),
                                                                                                                Type=CONST("Service Cost"),
                                                                                                                "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Cost Used;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 71  ;   ;Vendor Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE ("No."=FIELD("Vendor No.")));
                                                   CaptionML=ENU=Vendor Name;
                                                   Editable=false }
    { 72  ;   ;Vendor Item Name    ;Text50        ;CaptionML=ENU=Vendor Item Name }
    { 73  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Service Comment Line" WHERE ("Table Name"=CONST("Service Item"),
                                                                                                   "Table Subtype"=CONST("0"),
                                                                                                   "No."=FIELD("No.")));
                                                   CaptionML=ENU=Comment;
                                                   Editable=false }
    { 74  ;   ;Service Item Components;Boolean    ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Service Item Component" WHERE ("Parent Service Item No."=FIELD("No."),
                                                                                                     Active=CONST(true)));
                                                   CaptionML=ENU=Service Item Components;
                                                   Editable=false }
    { 75  ;   ;Preferred Resource  ;Code20        ;TableRelation=Resource."No.";
                                                   OnLookup=VAR
                                                              Resource@1001 : Record Resource;
                                                              SkilledResourceList@1000 : Page "Skilled Resource List";
                                                            BEGIN
                                                              SkilledResourceList.Initialize(ResSkill.Type::"Service Item","No.",Description);
                                                              SkilledResourceList.LOOKUPMODE(true);
                                                              if Resource.GET("Preferred Resource") then
                                                                SkilledResourceList.SETRECORD(Resource);
                                                              if SkilledResourceList.RUNMODAL = ACTION::LookupOK then begin
                                                                SkilledResourceList.GETRECORD(Resource);
                                                                "Preferred Resource" := Resource."No.";
                                                              end;
                                                            END;

                                                   CaptionML=ENU=Preferred Resource }
    { 76  ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE ("Item No."=FIELD("Item No."));
                                                   OnValidate=BEGIN
                                                                if "Variant Code" <> xRec."Variant Code" then
                                                                  MessageIfServItemLinesExist(FIELDCAPTION("Variant Code"));
                                                              END;

                                                   CaptionML=ENU=Variant Code }
    { 77  ;   ;County              ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.County WHERE ("No."=FIELD("Customer No.")));
                                                   CaptionML=ENU=County;
                                                   Editable=false }
    { 78  ;   ;Ship-to County      ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address".County WHERE ("Customer No."=FIELD("Customer No."),
                                                                                                      Code=FIELD("Ship-to Code")));
                                                   CaptionML=ENU=Ship-to County;
                                                   Editable=false }
    { 79  ;   ;Contract Cost       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service Ledger Entry"."Cost Amount" WHERE ("Entry Type"=CONST(Sale),
                                                                                                                "Service Item No. (Serviced)"=FIELD("No."),
                                                                                                                "Service Contract No."=FIELD("Contract Filter"),
                                                                                                                "Service Order No."=FIELD("Service Order Filter"),
                                                                                                                Type=CONST("Service Contract"),
                                                                                                                "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Contract Cost }
    { 81  ;   ;Country/Region Code ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer."Country/Region Code" WHERE ("No."=FIELD("Customer No.")));
                                                   CaptionML=ENU=Country/Region Code;
                                                   Editable=false }
    { 82  ;   ;Ship-to Country/Region Code;Code10 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address"."Country/Region Code" WHERE ("Customer No."=FIELD("Customer No."),
                                                                                                                     Code=FIELD("Ship-to Code")));
                                                   CaptionML=ENU=Ship-to Country/Region Code;
                                                   Editable=false }
    { 83  ;   ;Name 2              ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer."Name 2" WHERE ("No."=FIELD("Customer No.")));
                                                   CaptionML=ENU=Name 2;
                                                   Editable=false }
    { 84  ;   ;Ship-to Name 2      ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Ship-to Address"."Name 2" WHERE ("Customer No."=FIELD("Customer No."),
                                                                                                        Code=FIELD("Ship-to Code")));
                                                   CaptionML=ENU=Ship-to Name 2;
                                                   Editable=false }
    { 85  ;   ;Service Price Group Code;Code10    ;TableRelation="Service Price Group";
                                                   CaptionML=ENU=Service Price Group Code }
    { 86  ;   ;Default Contract Cost;Decimal      ;CaptionML=ENU=Default Contract Cost;
                                                   BlankZero=true;
                                                   AutoFormatType=2 }
    { 87  ;   ;Prepaid Amount      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service Ledger Entry"."Amount (LCY)" WHERE ("Entry Type"=CONST(Sale),
                                                                                                                 "Moved from Prepaid Acc."=CONST(false),
                                                                                                                 "Service Item No. (Serviced)"=FIELD("No."),
                                                                                                                 "Service Contract No."=FIELD("Contract Filter"),
                                                                                                                 "Service Order No."=FIELD("Service Order Filter"),
                                                                                                                 Type=FIELD("Type Filter"),
                                                                                                                 "Posting Date"=FIELD("Date Filter"),
                                                                                                                 Open=CONST(false)));
                                                   CaptionML=ENU=Prepaid Amount;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 88  ;   ;Search Description  ;Code50        ;CaptionML=ENU=Search Description }
    { 89  ;   ;Service Contracts   ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Service Contract Line" WHERE ("Service Item No."=FIELD("No.")));
                                                   CaptionML=ENU=Service Contracts;
                                                   Editable=false }
    { 90  ;   ;Total Qty. Consumed ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Service Ledger Entry".Quantity WHERE ("Entry Type"=CONST(Consume),
                                                                                                           "Service Item No. (Serviced)"=FIELD("No."),
                                                                                                           "Service Contract No."=FIELD("Contract Filter"),
                                                                                                           "Service Order No."=FIELD("Service Order Filter"),
                                                                                                           Type=FIELD("Type Filter"),
                                                                                                           "Posting Date"=FIELD("Date Filter")));
                                                   CaptionML=ENU=Total Qty. Consumed;
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 100 ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 101 ;   ;Type Filter         ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Type Filter;
                                                   OptionCaptionML=ENU=" ,Resource,Item,Service Cost,Service Contract,G/L Account";
                                                   OptionString=" ",Resource,Item,"Service Cost","Service Contract","G/L Account" }
    { 102 ;   ;Contract Filter     ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="Service Contract Header"."Contract No." WHERE ("Contract Type"=CONST(Contract));
                                                   CaptionML=ENU=Contract Filter }
    { 103 ;   ;Service Order Filter;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="Service Header"."No.";
                                                   CaptionML=ENU=Service Order Filter }
    { 104 ;   ;Sales/Serv. Shpt. Document No.;Code20;
                                                   TableRelation="Sales Shipment Line"."Document No.";
                                                   CaptionML=ENU=Sales/Serv. Shpt. Document No. }
    { 105 ;   ;Sales/Serv. Shpt. Line No.;Integer ;TableRelation="Sales Shipment Line"."Line No." WHERE ("Document No."=FIELD("Sales/Serv. Shpt. Document No."));
                                                   CaptionML=ENU=Sales/Serv. Shpt. Line No. }
    { 106 ;   ;Shipment Type       ;Option        ;CaptionML=ENU=Shipment Type;
                                                   OptionCaptionML=ENU=Sales,Service;
                                                   OptionString=Sales,Service }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
    {    ;"Item No.","Serial No."                  }
    {    ;"Customer No.","Ship-to Code","Item No.","Serial No." }
    {    ;"Warranty Ending Date (Parts)","Customer No.","Ship-to Code" }
    {    ;"Sales/Serv. Shpt. Document No.","Sales/Serv. Shpt. Line No." }
    {    ;"Service Item Group Code"                }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;"No.",Description,Status,"Item No.","Service Contracts" }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot delete %1 %2,because it is attached to a service order.';
      Text001@1001 : TextConst 'ENU=You cannot delete %1 %2, because it is used as %3 for %1 %4.';
      Text002@1002 : TextConst 'ENU=You cannot delete %1 %2, because it belongs to one or more contracts.';
      Text003@1003 : TextConst 'ENU=%1 %2 already exists in %3 %4.';
      Text004@1004 : TextConst 'ENU=You cannot change %1 %2 because the %3 %4 belongs to one or more contracts.';
      Text005@1005 : TextConst 'ENU=Changing the %1 will delete the existing %2 on the %2 list.\\';
      Text006@1006 : TextConst 'ENU=Do you want to change the %1?';
      Text007@1007 : TextConst 'ENU=%1 cannot be later than %2.';
      Text014@1014 : TextConst 'ENU=You have changed %1 on the service item, but it has not been changed on the associated service orders/quotes.\';
      Text015@1015 : TextConst 'ENU=You must update them manually.';
      ServMgtSetup@1016 : Record "Service Mgt. Setup";
      ServItem@1017 : Record "Service Item";
      ServItemGr@1018 : Record "Service Item Group";
      ServContract@1019 : Record "Service Contract Header";
      ServContractLine@1031 : Record "Service Contract Line";
      ServCommentLine@1020 : Record "Service Comment Line";
      Item@1021 : Record Item;
      ContractChangeLog@1022 : Record "Contract Change Log";
      ServLedgEntry@1024 : Record "Service Ledger Entry";
      ServItemLine@1025 : Record "Service Item Line";
      ServItemComponent@1026 : Record "Service Item Component";
      ResSkill@1034 : Record "Resource Skill";
      Currency@1008 : Record Currency;
      NoSeriesMgt@1027 : Codeunit NoSeriesManagement;
      ServLogMgt@1028 : Codeunit ServLogManagement;
      MoveEntries@1032 : Codeunit MoveEntries;
      ResSkillMgt@1033 : Codeunit "Resource Skill Mgt.";
      Text017@1030 : TextConst 'ENU=Service ledger entries exist for this %1\\ Do you want to change the %2?';
      DimMgt@1039 : Codeunit DimensionManagement;
      CancelResSkillChanges@1035 : Boolean;
      CancelResSkillAssignment@1036 : Boolean;
      ChgCustomerErr@1010 : TextConst '@@@="%1 - Field Caption; %2 - Service Order No.;%3 - Serice Line No.;%4 - Service Item No.;%5 - Serial No.;%6 - Customer No.;%7 - Ship to Code.";ENU=You cannot change the %1 in the service item because of the following outstanding service order line:\\ Order %2, line %3, service item number %4, serial number %5, customer %6, ship-to code %7.';

    [External]
    PROCEDURE AssistEdit@3(OldServItem@1000 : Record "Service Item") : Boolean;
    BEGIN
      with ServItem do begin
        ServItem := Rec;
        ServMgtSetup.GET;
        ServMgtSetup.TESTFIELD("Service Item Nos.");
        if NoSeriesMgt.SelectSeries(ServMgtSetup."Service Item Nos.",OldServItem."No. Series","No. Series") then begin
          NoSeriesMgt.SetSeries("No.");
          Rec := ServItem;
          exit(true);
        end;
      end;
    END;

    LOCAL PROCEDURE ServItemLinesExist@2() : Boolean;
    BEGIN
      ServItemLine.RESET;
      ServItemLine.SETCURRENTKEY("Service Item No.");
      ServItemLine.SETRANGE("Service Item No.","No.");
      exit(ServItemLine.FINDFIRST);
    END;

    LOCAL PROCEDURE MessageIfServItemLinesExist@8(ChangedFieldName@1000 : Text[100]);
    BEGIN
      if ServItemLinesExist then
        MESSAGE(
          Text014 +
          Text015,
          ChangedFieldName);
    END;

    LOCAL PROCEDURE DeleteServItemComponents@6();
    BEGIN
      ServItemComponent.RESET;
      ServItemComponent.SETRANGE("Parent Service Item No.","No.");
      ServItemComponent.DELETEALL;
    END;

    LOCAL PROCEDURE ServItemLinesExistErr@7(ChangedFieldName@1000 : Text[100]);
    BEGIN
      if ServItemLinesExist then
        ERROR(
          ChgCustomerErr,
          ChangedFieldName,
          ServItemLine."Document No.",ServItemLine."Line No.",ServItemLine."Service Item No.",
          ServItemLine."Serial No.",ServItemLine."Customer No.",ServItemLine."Ship-to Code");
    END;

    LOCAL PROCEDURE ServLedgEntryExist@1() : Boolean;
    BEGIN
      ServLedgEntry.RESET;
      ServLedgEntry.SETCURRENTKEY(
        "Service Item No. (Serviced)","Entry Type","Moved from Prepaid Acc.",
        Type,"Posting Date",Open);
      ServLedgEntry.SETRANGE("Service Item No. (Serviced)","No.");
      exit(ServLedgEntry.FINDFIRST);
    END;

    LOCAL PROCEDURE CheckifActiveServContLineExist@4() : Boolean;
    BEGIN
      ServContractLine.RESET;
      ServContractLine.SETCURRENTKEY("Service Item No.","Contract Status");
      ServContractLine.SETRANGE("Service Item No.","No.");
      ServContractLine.SETFILTER("Contract Status",'<>%1',ServContractLine."Contract Status"::Cancelled);
      exit(ServContractLine.FIND('-'));
    END;

    [External]
    PROCEDURE CheckIfCanBeDeleted@5() : Text;
    VAR
      ServiceLedgerEntry@1000 : Record "Service Ledger Entry";
    BEGIN
      if ServItemLinesExist then
        exit(
          STRSUBSTNO(
            Text000,
            TABLECAPTION,"No."));

      ServItemComponent.RESET;
      ServItemComponent.SETCURRENTKEY(Type,"No.",Active);
      ServItemComponent.SETRANGE(Type,ServItemComponent.Type::"Service Item");
      ServItemComponent.SETRANGE("No.","No.");
      if ServItemComponent.FINDFIRST then
        exit(
          STRSUBSTNO(
            Text001,
            TABLECAPTION,"No.",ServItemComponent.TABLECAPTION,ServItemComponent."Parent Service Item No."));

      ServContractLine.RESET;
      ServContractLine.SETCURRENTKEY("Service Item No.","Contract Status");
      ServContractLine.SETRANGE("Service Item No.","No.");
      ServContractLine.SETFILTER("Contract Status",'<>%1',ServContractLine."Contract Status"::Cancelled);
      if ServContractLine.FIND('-') then
        if ServContract.GET(ServContractLine."Contract Type",ServContractLine."Contract No.") then
          exit(
            STRSUBSTNO(Text002,TABLECAPTION,"No."));

      exit(MoveEntries.CheckIfServiceItemCanBeDeleted(ServiceLedgerEntry,"No."));
    END;

    [External]
    PROCEDURE OmitAssignResSkills@10(IsSetOmitted@1000 : Boolean);
    BEGIN
      CancelResSkillAssignment := IsSetOmitted;
    END;

    BEGIN
    END.
  }
}

