OBJECT Table 1877 VAT Setup Posting Groups
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=VAT Setup Posting Groups;
  }
  FIELDS
  {
    { 2   ;   ;VAT Prod. Posting Group;Code20     ;CaptionML=ENU=VAT Prod. Posting Group;
                                                   NotBlank=true }
    { 4   ;   ;VAT %               ;Decimal       ;CaptionML=ENU=VAT %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 7   ;   ;Sales VAT Account   ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Sales VAT Account }
    { 9   ;   ;Purchase VAT Account;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Purchase VAT Account }
    { 11  ;   ;Reverse Chrg. VAT Acc.;Code20      ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Reverse Chrg. VAT Acc. }
    { 18  ;   ;VAT Prod. Posting Grp Desc.;Text50 ;CaptionML=ENU=VAT Prod. Posting Grp Desc. }
    { 19  ;   ;VAT Clause Desc     ;Text250       ;CaptionML=ENU=VAT Clause Desc }
    { 22  ;   ;Selected            ;Boolean       ;FieldClass=Normal;
                                                   CaptionML=ENU=Selected }
    { 23  ;   ;Application Type    ;Option        ;CaptionML=ENU=Application Type;
                                                   OptionCaptionML=ENU=,Items,Services;
                                                   OptionString=,Items,Services }
  }
  KEYS
  {
    {    ;"VAT Prod. Posting Group"               ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      FULLNORMTok@1601 : TextConst '@@@={Locked};ENU=FULL NORM';
      FULLREDTok@1602 : TextConst '@@@={Locked};ENU=FULL RED';
      REDUCEDTok@1603 : TextConst '@@@={Locked};ENU=REDUCED';
      SERVNORMTok@1604 : TextConst '@@@={Locked};ENU=SERV NORM';
      SERVREDTok@1605 : TextConst '@@@={Locked};ENU=SERV RED';
      STANDARDTok@1606 : TextConst '@@@={Locked};ENU=STANDARD';
      ZEROTok@1607 : TextConst '@@@={Locked};ENU=ZERO';
      FULLNORMTxt@1608 : TextConst 'ENU=VAT Only Invoices 25%';
      FULLREDTxt@1609 : TextConst 'ENU=VAT Only Invoices 10%';
      REDUCEDTxt@1610 : TextConst 'ENU=Reduced VAT (10%)';
      SERVNORMTxt@1611 : TextConst 'ENU=Miscellaneous 25 VAT';
      SERVREDTxt@1612 : TextConst 'ENU=Miscellaneous 10 VAT';
      STANDARDTxt@1613 : TextConst 'ENU=Standard VAT (25%)';
      ZEROTxt@1614 : TextConst 'ENU=No VAT';
      InvalidGLAccountsTxt@1000 : TextConst '@@@=%1 is placeholder for the invalid gl account code;ENU=%1 is not valid G/L Account.';
      VATAssistedAccountsMsg@1001 : TextConst 'ENU=You have not assigned general ledger accounts for sales and purchases for all VAT amounts. You won''t be able to calculate and post VAT for the missing accounts. If you''re skipping this step on purpose, you can manually assign accounts later in the VAT Posting Setup page.';

    PROCEDURE ValidateVATRates@1() : Boolean;
    VAR
      VATSetupPostingGroups@1000 : Record "VAT Setup Posting Groups";
    BEGIN
      VATSetupPostingGroups.RESET;
      VATSetupPostingGroups.SETRANGE(Selected,true);
      exit(not VATSetupPostingGroups.ISEMPTY);
    END;

    PROCEDURE PopulateVATProdGroups@37();
    BEGIN
      DELETEALL;
      InsertProdPostingGrp(FULLNORMTok,FULLNORMTxt,100,'','',false);
      InsertProdPostingGrp(FULLREDTok,FULLREDTxt,100,'','',false);
      InsertProdPostingGrp(REDUCEDTok,REDUCEDTxt,10,'5611','5631',false);
      InsertProdPostingGrp(SERVNORMTok,SERVNORMTxt,25,'5611','5631',true);
      InsertProdPostingGrp(SERVREDTok,SERVREDTxt,10,'5611','5631',true);
      InsertProdPostingGrp(STANDARDTok,STANDARDTxt,25,'5610','5630',false);
      InsertProdPostingGrp(ZEROTok,ZEROTxt,0,'5610','5630',false);
    END;

    LOCAL PROCEDURE InsertProdPostingGrp@2(ProdGrpCode@1001 : Code[10];GrpDesc@1002 : Text[50];VatRate@1003 : Integer;SalesAccount@1004 : Code[20];PurchAccount@1005 : Code[20];IsService@1006 : Boolean);
    VAR
      GLAccount@1000 : Record "G/L Account";
    BEGIN
      INIT;
      "VAT Prod. Posting Group" := ProdGrpCode;
      "VAT Prod. Posting Grp Desc." := GrpDesc;
      "VAT %" := VatRate;
      if GLAccount.GET(SalesAccount) then
        "Sales VAT Account" := SalesAccount;
      if GLAccount.GET(PurchAccount) then
        "Purchase VAT Account" := PurchAccount;
      "Application Type" := "Application Type"::Items;
      if IsService then
        "Application Type" := "Application Type"::Services;
      Selected := true;
      INSERT;
    END;

    PROCEDURE CheckExistingItemAndServiceWithVAT@20(VATProdPostingGroupCode@1002 : Code[20];IsService@1001 : Boolean) : Boolean;
    VAR
      Item@1003 : Record Item;
      ServiceLine@1000 : Record "Service Line";
    BEGIN
      if IsService then begin
        ServiceLine.SETRANGE("VAT Prod. Posting Group",VATProdPostingGroupCode);
        exit(not ServiceLine.ISEMPTY);
      end;
      Item.SETRANGE("VAT Prod. Posting Group",VATProdPostingGroupCode);
      exit(not Item.ISEMPTY);
    END;

    PROCEDURE ValidateGLAccountsExist@3(VAR ErrorMessage@1000 : Text) : Boolean;
    VAR
      VATSetupPostingGroups@1001 : Record "VAT Setup Posting Groups";
      GLAccount@1002 : Record "G/L Account";
    BEGIN
      if ValidateVATRates = false then
        exit(false);
      VATSetupPostingGroups.SETRANGE(Selected,true);
      if not VATSetupPostingGroups.FINDSET then
        exit;

      repeat
        if
           (DELCHR(VATSetupPostingGroups."Sales VAT Account",'<>') = '') or
           (DELCHR(VATSetupPostingGroups."Purchase VAT Account",'<>') = '')
        then begin
          ErrorMessage := VATAssistedAccountsMsg;
          exit(false);
        end;

        if not GLAccount.GET(VATSetupPostingGroups."Sales VAT Account") then begin
          ErrorMessage := STRSUBSTNO(InvalidGLAccountsTxt,VATSetupPostingGroups."Sales VAT Account");
          exit(false);
        end;
        if not GLAccount.GET(VATSetupPostingGroups."Purchase VAT Account") then begin
          ErrorMessage := STRSUBSTNO(InvalidGLAccountsTxt,VATSetupPostingGroups."Purchase VAT Account");
          exit(false);
        end;
      until VATSetupPostingGroups.NEXT = 0;
      ErrorMessage := '';
      exit(true);
    END;

    BEGIN
    END.
  }
}

