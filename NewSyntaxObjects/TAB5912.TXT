OBJECT Table 5912 Service Document Log
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ServOrderLog.RESET;
               ServOrderLog.SETRANGE("Document Type","Document Type");
               ServOrderLog.SETRANGE("Document No.","Document No.");
               if ServOrderLog.FINDLAST then
                 "Entry No." := ServOrderLog."Entry No." + 1
               else
                 "Entry No." := 1;

               "Change Date" := TODAY;
               "Change Time" := TIME;
               "User ID" := USERID;
             END;

    CaptionML=ENU=Service Document Log;
    LookupPageID="Service Document Log";
    DrillDownPageID="Service Document Log";
  }
  FIELDS
  {
    { 1   ;   ;Document No.        ;Code20        ;TableRelation=IF ("Document Type"=CONST(Quote)) "Service Header"."No." WHERE ("Document Type"=CONST(Quote))
                                                                 ELSE IF ("Document Type"=CONST(Order)) "Service Header"."No." WHERE ("Document Type"=CONST(Order))
                                                                 ELSE IF ("Document Type"=CONST(Invoice)) "Service Header"."No." WHERE ("Document Type"=CONST(Invoice))
                                                                 ELSE IF ("Document Type"=CONST("Credit Memo")) "Service Header"."No." WHERE ("Document Type"=CONST("Credit Memo"))
                                                                 ELSE IF ("Document Type"=CONST(Shipment)) "Service Shipment Header"
                                                                 ELSE IF ("Document Type"=CONST("Posted Invoice")) "Service Invoice Header"
                                                                 ELSE IF ("Document Type"=CONST("Posted Credit Memo")) "Service Cr.Memo Header";
                                                   ValidateTableRelation=false;
                                                   CaptionML=ENU=Document No. }
    { 2   ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No. }
    { 3   ;   ;Event No.           ;Integer       ;CaptionML=ENU=Event No. }
    { 4   ;   ;Service Item Line No.;Integer      ;CaptionML=ENU=Service Item Line No. }
    { 5   ;   ;After               ;Text50        ;CaptionML=ENU=After }
    { 6   ;   ;Before              ;Text50        ;CaptionML=ENU=Before }
    { 7   ;   ;Change Date         ;Date          ;CaptionML=ENU=Change Date }
    { 8   ;   ;Change Time         ;Time          ;CaptionML=ENU=Change Time }
    { 9   ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit "User Management";
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=false;
                                                   CaptionML=ENU=User ID }
    { 10  ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=Quote,Order,Invoice,Credit Memo,Shipment,Posted Invoice,Posted Credit Memo;
                                                   OptionString=Quote,Order,Invoice,"Credit Memo",Shipment,"Posted Invoice","Posted Credit Memo";
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"Document Type","Document No.","Entry No.";
                                                   Clustered=true }
    {    ;"Change Date","Change Time"              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ServOrderLog@1000 : Record "Service Document Log";

    [External]
    PROCEDURE CopyServLog@3(DocType@1000 : Option;DocNo@1001 : Code[20]);
    VAR
      ServDocLog@1002 : Record "Service Document Log";
    BEGIN
      ServDocLog.RESET;
      ServDocLog.SETRANGE("Document Type",DocType);
      ServDocLog.SETRANGE("Document No.",DocNo);
      if ServDocLog.FINDSET then
        repeat
          Rec := ServDocLog;
          INSERT;
        until ServDocLog.NEXT = 0;
    END;

    LOCAL PROCEDURE FillTempServDocLog@1(VAR ServHeader@1000 : Record "Service Header";VAR TempServDocLog@1001 : TEMPORARY Record "Service Document Log");
    VAR
      ServDocLog@1002 : Record "Service Document Log";
    BEGIN
      with ServHeader do begin
        TempServDocLog.RESET;
        TempServDocLog.DELETEALL;

        if "No." <> '' then begin
          TempServDocLog.CopyServLog("Document Type","No.");
          TempServDocLog.CopyServLog(ServDocLog."Document Type"::Shipment,"No.");
          TempServDocLog.CopyServLog(ServDocLog."Document Type"::"Posted Invoice","No.");
          TempServDocLog.CopyServLog(ServDocLog."Document Type"::"Posted Credit Memo","No.");
        end;

        TempServDocLog.RESET;
        TempServDocLog.SETCURRENTKEY("Change Date","Change Time");
        TempServDocLog.ASCENDING(false);
      end;
    END;

    [External]
    PROCEDURE ShowServDocLog@2(VAR ServHeader@1000 : Record "Service Header");
    VAR
      TempServDocLog@1001 : TEMPORARY Record "Service Document Log";
    BEGIN
      FillTempServDocLog(ServHeader,TempServDocLog);
      PAGE.RUN(0,TempServDocLog);
    END;

    BEGIN
    END.
  }
}

