OBJECT Page 971 Activity Details FactBox
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Activity Details;
    SourceTable="Time Sheet Line";
    PageType=CardPart;
    OnAfterGetRecord=BEGIN
                       TimeSheetMgt.GetActivityInfo(Rec,ActivityCaption,ActivitiID,ActivitySubCaption,ActivitySubID);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 4   ;1   ;Field     ;
                Name=Comment;
                DrillDown=false;
                CaptionML=ENU=Line Comment;
                ToolTipML=ENU=Specifies that a comment about this document has been entered.;
                ApplicationArea=#Advanced;
                SourceExpr=Comment;
                ImplicitType=Boolean }

    { 3   ;1   ;Field     ;
                Name=Total Quantity;
                DrillDown=false;
                CaptionML=ENU=Line Total;
                ToolTipML=ENU=Specifies the total number of hours that have been entered on a time sheet.;
                ApplicationArea=#Jobs;
                SourceExpr="Total Quantity";
                ImplicitType=Decimal }

    { 1   ;1   ;Field     ;
                Name=ActivitiID;
                ApplicationArea=#Jobs;
                SourceExpr=ActivitiID;
                CaptionClass='3,' + ActivityCaption;
                OnLookup=BEGIN
                           LookupActivity;
                         END;

                ImplicitType=Code20 }

    { 2   ;1   ;Field     ;
                Name=ActivitySubID;
                ApplicationArea=#Jobs;
                SourceExpr=ActivitySubID;
                CaptionClass='3,' + ActivitySubCaption;
                OnLookup=BEGIN
                           LookupSubActivity;
                         END;

                ImplicitType=Code20 }

  }
  CODE
  {
    VAR
      TimeSheetMgt@1000 : Codeunit "Time Sheet Management";
      ActivityCaption@1002 : Text[30];
      ActivitySubCaption@1010 : Text;
      ActivitiID@1003 : Code[20];
      ActivitySubID@1011 : Code[20];

    [External]
    PROCEDURE SetEmptyLine@2();
    BEGIN
      ActivityCaption := '';
      ActivitiID := '';
      ActivitySubCaption := '';
      ActivitiID := '';
    END;

    LOCAL PROCEDURE LookupActivity@3();
    VAR
      Job@1000 : Record Job;
      CauseOfAbsence@1002 : Record "Cause of Absence";
      ServiceHeader@1004 : Record "Service Header";
      AssemblyHeader@1006 : Record "Assembly Header";
      JobList@1001 : Page "Job List";
      CausesOfAbsence@1003 : Page "Causes of Absence";
      ServiceOrders@1005 : Page "Service Orders";
      AssemblyOrders@1007 : Page "Assembly Orders";
    BEGIN
      case Type of
        Type::Job:
          begin
            CLEAR(JobList);
            if "Job No." <> '' then begin
              Job.GET("Job No.");
              JobList.SETRECORD(Job);
            end;
            JobList.RUNMODAL;
          end;
        Type::Absence:
          begin
            CLEAR(CausesOfAbsence);
            if "Cause of Absence Code" <> '' then begin
              CauseOfAbsence.GET("Cause of Absence Code");
              CausesOfAbsence.SETRECORD(CauseOfAbsence);
            end;
            CausesOfAbsence.RUNMODAL;
          end;
        Type::Service:
          begin
            CLEAR(ServiceOrders);
            if "Service Order No." <> '' then
              if ServiceHeader.GET(ServiceHeader."Document Type"::Order,"Service Order No.") then
                ServiceOrders.SETRECORD(ServiceHeader);
            ServiceOrders.RUNMODAL;
          end;
        Type::"Assembly Order":
          begin
            CLEAR(AssemblyOrders);
            if "Assembly Order No." <> '' then
              if AssemblyHeader.GET(AssemblyHeader."Document Type"::Order,"Assembly Order No.") then
                AssemblyOrders.SETRECORD(AssemblyHeader);
            AssemblyOrders.RUNMODAL;
          end;
      end;
    END;

    LOCAL PROCEDURE LookupSubActivity@4();
    VAR
      JobTask@1000 : Record "Job Task";
      JobTaskList@1001 : Page "Job Task List";
    BEGIN
      if Type = Type::Job then begin
        CLEAR(JobTaskList);
        if "Job Task No." <> '' then begin
          JobTask.GET("Job No.","Job Task No.");
          JobTaskList.SETRECORD(JobTask);
        end;
        JobTaskList.RUNMODAL;
      end;
    END;

    BEGIN
    END.
  }
}

