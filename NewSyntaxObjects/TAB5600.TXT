OBJECT Table 5600 Fixed Asset
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Ins. Coverage Ledger Entry"=r;
    DataCaptionFields="No.",Description;
    OnInsert=BEGIN
               if "No." = '' then begin
                 FASetup.GET;
                 FASetup.TESTFIELD("Fixed Asset Nos.");
                 NoSeriesMgt.InitSeries(FASetup."Fixed Asset Nos.",xRec."No. Series",0D,"No.","No. Series");
               end;

               "Main Asset/Component" := "Main Asset/Component"::" ";
               "Component of Main Asset" := '';

               DimMgt.UpdateDefaultDim(
                 DATABASE::"Fixed Asset","No.",
                 "Global Dimension 1 Code","Global Dimension 2 Code");
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
             END;

    OnDelete=VAR
               FADeprBook@1000 : Record "FA Depreciation Book";
             BEGIN
               LOCKTABLE;
               MainAssetComp.LOCKTABLE;
               InsCoverageLedgEntry.LOCKTABLE;
               if "Main Asset/Component" = "Main Asset/Component"::"Main Asset" then
                 ERROR(Text000);
               FAMoveEntries.MoveFAInsuranceEntries("No.");
               FADeprBook.SETRANGE("FA No.","No.");
               FADeprBook.DELETEALL(true);
               if not FADeprBook.ISEMPTY then
                 ERROR(Text001,TABLECAPTION,"No.");

               MainAssetComp.SETCURRENTKEY("FA No.");
               MainAssetComp.SETRANGE("FA No.","No.");
               MainAssetComp.DELETEALL;
               if "Main Asset/Component" = "Main Asset/Component"::Component then begin
                 MainAssetComp.RESET;
                 MainAssetComp.SETRANGE("Main Asset No.","Component of Main Asset");
                 MainAssetComp.SETRANGE("FA No.",'');
                 MainAssetComp.DELETEALL;
                 MainAssetComp.SETRANGE("FA No.");
                 if not MainAssetComp.FINDFIRST then begin
                   FA.GET("Component of Main Asset");
                   FA."Main Asset/Component" := FA."Main Asset/Component"::" ";
                   FA."Component of Main Asset" := '';
                   FA.MODIFY;
                 end;
               end;

               MaintenanceRegistration.SETRANGE("FA No.","No.");
               MaintenanceRegistration.DELETEALL;

               CommentLine.SETRANGE("Table Name",CommentLine."Table Name"::"Fixed Asset");
               CommentLine.SETRANGE("No.","No.");
               CommentLine.DELETEALL;

               DimMgt.DeleteDefaultDim(DATABASE::"Fixed Asset","No.");
             END;

    OnRename=VAR
               SalesLine@1000 : Record "Sales Line";
               PurchaseLine@1001 : Record "Purchase Line";
             BEGIN
               SalesLine.RenameNo(SalesLine.Type::"Fixed Asset",xRec."No.","No.");
               PurchaseLine.RenameNo(PurchaseLine.Type::"Fixed Asset",xRec."No.","No.");

               "Last Date Modified" := TODAY;
             END;

    CaptionML=ENU=Fixed Asset;
    LookupPageID="Fixed Asset List";
    DrillDownPageID="Fixed Asset List";
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Description;
                                                   OnValidate=BEGIN
                                                                if "No." <> xRec."No." then begin
                                                                  FASetup.GET;
                                                                  NoSeriesMgt.TestManual(FASetup."Fixed Asset Nos.");
                                                                  "No. Series" := '';
                                                                end;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 2   ;   ;Description         ;Text50        ;OnValidate=VAR
                                                                FADeprBook@1000 : Record "FA Depreciation Book";
                                                              BEGIN
                                                                if ("Search Description" = UPPERCASE(xRec.Description)) or ("Search Description" = '') then
                                                                  "Search Description" := Description;
                                                                if Description <> xRec.Description then begin
                                                                  FADeprBook.SETCURRENTKEY("FA No.");
                                                                  FADeprBook.SETRANGE("FA No.","No.");
                                                                  FADeprBook.MODIFYALL(Description,Description);
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Description }
    { 3   ;   ;Search Description  ;Code50        ;CaptionML=ENU=Search Description }
    { 4   ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 5   ;   ;FA Class Code       ;Code10        ;TableRelation="FA Class";
                                                   OnValidate=VAR
                                                                FASubclass@1000 : Record "FA Subclass";
                                                              BEGIN
                                                                if "FA Subclass Code" = '' then
                                                                  exit;

                                                                FASubclass.GET("FA Subclass Code");
                                                                if not (FASubclass."FA Class Code" in ['',"FA Class Code"]) then
                                                                  "FA Subclass Code" := '';
                                                              END;

                                                   CaptionML=ENU=FA Class Code }
    { 6   ;   ;FA Subclass Code    ;Code10        ;TableRelation="FA Subclass";
                                                   OnValidate=VAR
                                                                FASubclass@1000 : Record "FA Subclass";
                                                              BEGIN
                                                                FASubclass.GET("FA Subclass Code");
                                                                if "FA Class Code" <> '' then begin
                                                                  if FASubclass."FA Class Code" in ['',"FA Class Code"] then
                                                                    exit;

                                                                  ERROR(UnexpctedSubclassErr);
                                                                end;

                                                                VALIDATE("FA Class Code",FASubclass."FA Class Code");
                                                              END;

                                                   CaptionML=ENU=FA Subclass Code }
    { 7   ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 8   ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 9   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE ("Use As In-Transit"=CONST(false));
                                                   CaptionML=ENU=Location Code }
    { 10  ;   ;FA Location Code    ;Code10        ;TableRelation="FA Location";
                                                   CaptionML=ENU=FA Location Code }
    { 11  ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Vendor No. }
    { 12  ;   ;Main Asset/Component;Option        ;CaptionML=ENU=Main Asset/Component;
                                                   OptionCaptionML=ENU=" ,Main Asset,Component";
                                                   OptionString=" ","Main Asset",Component;
                                                   Editable=false }
    { 13  ;   ;Component of Main Asset;Code20     ;TableRelation="Fixed Asset";
                                                   CaptionML=ENU=Component of Main Asset;
                                                   Editable=false }
    { 14  ;   ;Budgeted Asset      ;Boolean       ;OnValidate=BEGIN
                                                                FAMoveEntries.ChangeBudget(Rec);
                                                              END;

                                                   CaptionML=ENU=Budgeted Asset }
    { 15  ;   ;Warranty Date       ;Date          ;CaptionML=ENU=Warranty Date }
    { 16  ;   ;Responsible Employee;Code20        ;TableRelation=Employee;
                                                   CaptionML=ENU=Responsible Employee }
    { 17  ;   ;Serial No.          ;Text30        ;CaptionML=ENU=Serial No. }
    { 18  ;   ;Last Date Modified  ;Date          ;CaptionML=ENU=Last Date Modified;
                                                   Editable=false }
    { 19  ;   ;Insured             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Ins. Coverage Ledger Entry" WHERE ("FA No."=FIELD("No."),
                                                                                                         "Disposed FA"=CONST(false)));
                                                   CaptionML=ENU=Insured;
                                                   Editable=false }
    { 20  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE ("Table Name"=CONST("Fixed Asset"),
                                                                                           "No."=FIELD("No.")));
                                                   CaptionML=ENU=Comment;
                                                   Editable=false }
    { 21  ;   ;Blocked             ;Boolean       ;CaptionML=ENU=Blocked }
    { 22  ;   ;Picture             ;BLOB          ;CaptionML=ENU=Picture;
                                                   SubType=Bitmap }
    { 23  ;   ;Maintenance Vendor No.;Code20      ;TableRelation=Vendor;
                                                   CaptionML=ENU=Maintenance Vendor No. }
    { 24  ;   ;Under Maintenance   ;Boolean       ;CaptionML=ENU=Under Maintenance }
    { 25  ;   ;Next Service Date   ;Date          ;CaptionML=ENU=Next Service Date }
    { 26  ;   ;Inactive            ;Boolean       ;CaptionML=ENU=Inactive }
    { 27  ;   ;FA Posting Date Filter;Date        ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=FA Posting Date Filter }
    { 28  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=false }
    { 29  ;   ;FA Posting Group    ;Code20        ;TableRelation="FA Posting Group";
                                                   CaptionML=ENU=FA Posting Group }
    { 30  ;   ;Acquired            ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("FA Depreciation Book" WHERE ("FA No."=FIELD("No."),
                                                                                                   "Acquisition Date"=FILTER(<>'')));
                                                   CaptionML=ENU=Acquired }
    { 140 ;   ;Image               ;Media         ;CaptionML=ENU=Image }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
    {    ;"Search Description"                     }
    {    ;"FA Class Code"                          }
    {    ;"FA Subclass Code"                       }
    {    ;"Component of Main Asset","Main Asset/Component" }
    {    ;"FA Location Code"                       }
    {    ;"Global Dimension 1 Code"                }
    {    ;"Global Dimension 2 Code"                }
    {    ;"FA Posting Group"                       }
    {    ;Description                              }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;"No.",Description,"FA Class Code"        }
    { 2   ;Brick               ;"No.",Description,"FA Class Code",Image  }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=A main asset cannot be deleted.';
      Text001@1001 : TextConst 'ENU=You cannot delete %1 %2 because it has associated depreciation books.';
      CommentLine@1002 : Record "Comment Line";
      FA@1003 : Record "Fixed Asset";
      FASetup@1004 : Record "FA Setup";
      MaintenanceRegistration@1005 : Record "Maintenance Registration";
      MainAssetComp@1007 : Record "Main Asset Component";
      InsCoverageLedgEntry@1008 : Record "Ins. Coverage Ledger Entry";
      FAMoveEntries@1009 : Codeunit "FA MoveEntries";
      NoSeriesMgt@1010 : Codeunit NoSeriesManagement;
      DimMgt@1011 : Codeunit DimensionManagement;
      UnexpctedSubclassErr@1006 : TextConst 'ENU=This fixed asset subclass belongs to a different fixed asset class.';
      RunAcquisitionWizardFromNotificationTok@1019 : TextConst '@@@={Locked};ENU=RunAcquisitionWizardFromNotification';
      DontAskAgainActionTxt@1018 : TextConst 'ENU=Don''t ask again';
      DontAskAgainFunctionTxt@1017 : TextConst '@@@={Locked};ENU=HideNotificationForCurrentUser';
      NotificationNameTxt@1016 : TextConst '@@@={Locked};ENU=Fixed Asset Acquisition Wizard';
      NotificationDescriptionTxt@1015 : TextConst '@@@={Locked};ENU=Notify when ready to acquire the fixed asset.';
      ReadyToAcquireMsg@1014 : TextConst 'ENU=You are ready to acquire the fixed asset.';
      AcquireActionTxt@1013 : TextConst 'ENU=Acquire';
      FixedAssetNoTok@1012 : TextConst '@@@={Locked};ENU=FixedAssetNo';

    [External]
    PROCEDURE AssistEdit@2(OldFA@1000 : Record "Fixed Asset") : Boolean;
    BEGIN
      with FA do begin
        FA := Rec;
        FASetup.GET;
        FASetup.TESTFIELD("Fixed Asset Nos.");
        if NoSeriesMgt.SelectSeries(FASetup."Fixed Asset Nos.",OldFA."No. Series","No. Series") then begin
          NoSeriesMgt.SetSeries("No.");
          Rec := FA;
          exit(true);
        end;
      end;
    END;

    LOCAL PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::"Fixed Asset","No.",FieldNumber,ShortcutDimCode);
      MODIFY(true);
    END;

    [External]
    PROCEDURE FieldsForAcquitionInGeneralGroupAreCompleted@30() : Boolean;
    BEGIN
      exit(("No." <> '') and (Description <> '') and ("FA Subclass Code" <> ''));
    END;

    [External]
    PROCEDURE ShowAcquireWizardNotification@3();
    VAR
      NotificationLifecycleMgt@1002 : Codeunit "Notification Lifecycle Mgt.";
      FAAcquireWizardNotification@1000 : Notification;
    BEGIN
      if IsNotificationEnabledForCurrentUser then begin
        FAAcquireWizardNotification.ID(GetNotificationID);
        FAAcquireWizardNotification.MESSAGE(ReadyToAcquireMsg);
        FAAcquireWizardNotification.SCOPE(NOTIFICATIONSCOPE::LocalScope);
        FAAcquireWizardNotification.ADDACTION(AcquireActionTxt,CODEUNIT::"Fixed Asset Acquisition Wizard",
          RunAcquisitionWizardFromNotificationTok);
        FAAcquireWizardNotification.ADDACTION(
          DontAskAgainActionTxt,CODEUNIT::"Fixed Asset Acquisition Wizard",DontAskAgainFunctionTxt);
        FAAcquireWizardNotification.SETDATA(FixedAssetNoTok,"No.");
        NotificationLifecycleMgt.SendNotification(FAAcquireWizardNotification,RECORDID);
      end
    END;

    PROCEDURE GetNotificationID@4() : GUID;
    BEGIN
      exit('3d5c2f86-cfb9-4407-97c3-9df74c7696c9');
    END;

    PROCEDURE SetNotificationDefaultState@10();
    VAR
      MyNotifications@1000 : Record "My Notifications";
    BEGIN
      MyNotifications.InsertDefault(GetNotificationID,NotificationNameTxt,NotificationDescriptionTxt,true);
    END;

    LOCAL PROCEDURE IsNotificationEnabledForCurrentUser@1() : Boolean;
    VAR
      MyNotifications@1000 : Record "My Notifications";
    BEGIN
      exit(MyNotifications.IsEnabled(GetNotificationID));
    END;

    PROCEDURE DontNotifyCurrentUserAgain@6();
    VAR
      MyNotifications@1000 : Record "My Notifications";
    BEGIN
      if not MyNotifications.Disable(GetNotificationID) then
        MyNotifications.InsertDefault(GetNotificationID,NotificationNameTxt,NotificationDescriptionTxt,false);
    END;

    PROCEDURE RecallNotificationForCurrentUser@9();
    VAR
      NotificationLifecycleMgt@1000 : Codeunit "Notification Lifecycle Mgt.";
    BEGIN
      NotificationLifecycleMgt.RecallNotificationsForRecord(RECORDID,false);
    END;

    BEGIN
    END.
  }
}

