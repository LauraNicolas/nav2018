OBJECT Table 1001 Job Task
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=VAR
               Job@1000 : Record Job;
               Cust@1001 : Record Customer;
             BEGIN
               LOCKTABLE;
               Job.GET("Job No.");
               if Job.Blocked = Job.Blocked::All then
                 Job.TestBlocked;
               Job.TESTFIELD("Bill-to Customer No.");
               Cust.GET(Job."Bill-to Customer No.");

               DimMgt.InsertJobTaskDim("Job No.","Job Task No.","Global Dimension 1 Code","Global Dimension 2 Code");

               CALCFIELDS(
                 "Schedule (Total Cost)",
                 "Usage (Total Cost)");
               Job.UpdateOverBudgetValue("Job No.",true,"Usage (Total Cost)");
               Job.UpdateOverBudgetValue("Job No.",false,"Schedule (Total Cost)");
             END;

    OnModify=VAR
               JobWIPEntry@1000 : Record "Job WIP Entry";
             BEGIN
               JobWIPEntry.SETRANGE("Job No.","Job No.");
               if not JobWIPEntry.ISEMPTY then
                 ERROR(CannotModifyAssociatedEntriesErr,TABLECAPTION);

               CALCFIELDS(
                 "Schedule (Total Cost)",
                 "Usage (Total Cost)");
               Job.UpdateOverBudgetValue("Job No.",true,"Usage (Total Cost)");
               Job.UpdateOverBudgetValue("Job No.",false,"Schedule (Total Cost)");
             END;

    OnDelete=VAR
               JobPlanningLine@1000 : Record "Job Planning Line";
               JobWIPTotal@1002 : Record "Job WIP Total";
               JobTaskDim@1001 : Record "Job Task Dimension";
             BEGIN
               if JobLedgEntriesExist then
                 ERROR(CannotDeleteAssociatedEntriesErr,TABLECAPTION);

               JobPlanningLine.SETCURRENTKEY("Job No.","Job Task No.");
               JobPlanningLine.SETRANGE("Job No.","Job No.");
               JobPlanningLine.SETRANGE("Job Task No.","Job Task No.");
               JobPlanningLine.DELETEALL(true);

               JobWIPTotal.DeleteEntriesForJobTask(Rec);

               JobTaskDim.SETRANGE("Job No.","Job No.");
               JobTaskDim.SETRANGE("Job Task No.","Job Task No.");
               if not JobTaskDim.ISEMPTY then
                 JobTaskDim.DELETEALL;

               CALCFIELDS(
                 "Schedule (Total Cost)",
                 "Usage (Total Cost)");
               Job.UpdateOverBudgetValue("Job No.",true,"Usage (Total Cost)");
               Job.UpdateOverBudgetValue("Job No.",false,"Schedule (Total Cost)");
             END;

    CaptionML=ENU=Job Task;
    LookupPageID="Job Task Lines";
    DrillDownPageID="Job Task Lines";
  }
  FIELDS
  {
    { 1   ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Job No.;
                                                   NotBlank=true;
                                                   Editable=false }
    { 2   ;   ;Job Task No.        ;Code20        ;OnValidate=VAR
                                                                Job@1000 : Record Job;
                                                                Cust@1001 : Record Customer;
                                                              BEGIN
                                                                if "Job Task No." = '' then
                                                                  exit;
                                                                Job.GET("Job No.");
                                                                Job.TESTFIELD("Bill-to Customer No.");
                                                                Cust.GET(Job."Bill-to Customer No.");
                                                                "Job Posting Group" := Job."Job Posting Group";
                                                              END;

                                                   CaptionML=ENU=Job Task No.;
                                                   NotBlank=true }
    { 3   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 4   ;   ;Job Task Type       ;Option        ;OnValidate=BEGIN
                                                                if (xRec."Job Task Type" = "Job Task Type"::Posting) and
                                                                   ("Job Task Type" <> "Job Task Type"::Posting)
                                                                then
                                                                  if JobLedgEntriesExist or JobPlanningLinesExist then
                                                                    ERROR(CannotChangeAssociatedEntriesErr,FIELDCAPTION("Job Task Type"),TABLECAPTION);

                                                                if "Job Task Type" <> "Job Task Type"::Posting then begin
                                                                  "Job Posting Group" := '';
                                                                  if "WIP-Total" = "WIP-Total"::Excluded then
                                                                    "WIP-Total" := "WIP-Total"::" ";
                                                                end;

                                                                Totaling := '';
                                                              END;

                                                   CaptionML=ENU=Job Task Type;
                                                   OptionCaptionML=ENU=Posting,Heading,Total,Begin-Total,End-Total;
                                                   OptionString=Posting,Heading,Total,"Begin-Total","End-Total" }
    { 6   ;   ;WIP-Total           ;Option        ;OnValidate=VAR
                                                                Job@1003 : Record Job;
                                                              BEGIN
                                                                case "WIP-Total" of
                                                                  "WIP-Total"::Total:
                                                                    begin
                                                                      Job.GET("Job No.");
                                                                      "WIP Method" := Job."WIP Method";
                                                                    end;
                                                                  "WIP-Total"::Excluded:
                                                                    begin
                                                                      TESTFIELD("Job Task Type","Job Task Type"::Posting);
                                                                      "WIP Method" := ''
                                                                    end;
                                                                  else
                                                                    "WIP Method" := ''
                                                                end;
                                                              END;

                                                   CaptionML=ENU=WIP-Total;
                                                   OptionCaptionML=ENU=" ,Total,Excluded";
                                                   OptionString=" ",Total,Excluded }
    { 7   ;   ;Job Posting Group   ;Code20        ;TableRelation="Job Posting Group";
                                                   OnValidate=BEGIN
                                                                if "Job Posting Group" <> '' then
                                                                  TESTFIELD("Job Task Type","Job Task Type"::Posting);
                                                              END;

                                                   CaptionML=ENU=Job Posting Group }
    { 9   ;   ;WIP Method          ;Code20        ;TableRelation="Job WIP Method".Code WHERE (Valid=CONST(true));
                                                   OnValidate=BEGIN
                                                                if "WIP Method" <> '' then
                                                                  TESTFIELD("WIP-Total","WIP-Total"::Total);
                                                              END;

                                                   CaptionML=ENU=WIP Method }
    { 10  ;   ;Schedule (Total Cost);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Planning Line"."Total Cost (LCY)" WHERE ("Job No."=FIELD("Job No."),
                                                                                                                 "Job Task No."=FIELD("Job Task No."),
                                                                                                                 "Job Task No."=FIELD(FILTER(Totaling)),
                                                                                                                 "Schedule Line"=CONST(true),
                                                                                                                 "Planning Date"=FIELD("Planning Date Filter")));
                                                   CaptionML=ENU=Budget (Total Cost);
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 11  ;   ;Schedule (Total Price);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Planning Line"."Line Amount (LCY)" WHERE ("Job No."=FIELD("Job No."),
                                                                                                                  "Job Task No."=FIELD("Job Task No."),
                                                                                                                  "Job Task No."=FIELD(FILTER(Totaling)),
                                                                                                                  "Schedule Line"=CONST(true),
                                                                                                                  "Planning Date"=FIELD("Planning Date Filter")));
                                                   CaptionML=ENU=Budget (Total Price);
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 12  ;   ;Usage (Total Cost)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Ledger Entry"."Total Cost (LCY)" WHERE ("Job No."=FIELD("Job No."),
                                                                                                                "Job Task No."=FIELD("Job Task No."),
                                                                                                                "Job Task No."=FIELD(FILTER(Totaling)),
                                                                                                                "Entry Type"=CONST(Usage),
                                                                                                                "Posting Date"=FIELD("Posting Date Filter")));
                                                   CaptionML=ENU=Usage (Total Cost);
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 13  ;   ;Usage (Total Price) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Ledger Entry"."Line Amount (LCY)" WHERE ("Job No."=FIELD("Job No."),
                                                                                                                 "Job Task No."=FIELD("Job Task No."),
                                                                                                                 "Job Task No."=FIELD(FILTER(Totaling)),
                                                                                                                 "Entry Type"=CONST(Usage),
                                                                                                                 "Posting Date"=FIELD("Posting Date Filter")));
                                                   CaptionML=ENU=Usage (Total Price);
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 14  ;   ;Contract (Total Cost);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Planning Line"."Total Cost (LCY)" WHERE ("Job No."=FIELD("Job No."),
                                                                                                                 "Job Task No."=FIELD("Job Task No."),
                                                                                                                 "Job Task No."=FIELD(FILTER(Totaling)),
                                                                                                                 "Contract Line"=CONST(true),
                                                                                                                 "Planning Date"=FIELD("Planning Date Filter")));
                                                   CaptionML=ENU=Billable (Total Cost);
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 15  ;   ;Contract (Total Price);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Planning Line"."Line Amount (LCY)" WHERE ("Job No."=FIELD("Job No."),
                                                                                                                  "Job Task No."=FIELD("Job Task No."),
                                                                                                                  "Job Task No."=FIELD(FILTER(Totaling)),
                                                                                                                  "Contract Line"=CONST(true),
                                                                                                                  "Planning Date"=FIELD("Planning Date Filter")));
                                                   CaptionML=ENU=Billable (Total Price);
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 16  ;   ;Contract (Invoiced Price);Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Job Ledger Entry"."Line Amount (LCY)" WHERE ("Job No."=FIELD("Job No."),
                                                                                                                  "Job Task No."=FIELD("Job Task No."),
                                                                                                                  "Job Task No."=FIELD(FILTER(Totaling)),
                                                                                                                  "Entry Type"=CONST(Sale),
                                                                                                                  "Posting Date"=FIELD("Posting Date Filter")));
                                                   CaptionML=ENU=Billable (Invoiced Price);
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 17  ;   ;Contract (Invoiced Cost);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Job Ledger Entry"."Total Cost (LCY)" WHERE ("Job No."=FIELD("Job No."),
                                                                                                                 "Job Task No."=FIELD("Job Task No."),
                                                                                                                 "Job Task No."=FIELD(FILTER(Totaling)),
                                                                                                                 "Entry Type"=CONST(Sale),
                                                                                                                 "Posting Date"=FIELD("Posting Date Filter")));
                                                   CaptionML=ENU=Billable (Invoiced Cost);
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 19  ;   ;Posting Date Filter ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Posting Date Filter }
    { 20  ;   ;Planning Date Filter;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Planning Date Filter }
    { 21  ;   ;Totaling            ;Text250       ;TableRelation="Job Task"."Job Task No." WHERE ("Job No."=FIELD("Job No."));
                                                   OnValidate=BEGIN
                                                                if Totaling <> '' then
                                                                  if not ("Job Task Type" in ["Job Task Type"::Total,"Job Task Type"::"End-Total"]) then
                                                                    FIELDERROR("Job Task Type");
                                                                VALIDATE("WIP-Total");
                                                                CALCFIELDS(
                                                                  "Schedule (Total Cost)",
                                                                  "Schedule (Total Price)",
                                                                  "Usage (Total Cost)",
                                                                  "Usage (Total Price)",
                                                                  "Contract (Total Cost)",
                                                                  "Contract (Total Price)",
                                                                  "Contract (Invoiced Price)",
                                                                  "Contract (Invoiced Cost)");
                                                              END;

                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Totaling }
    { 22  ;   ;New Page            ;Boolean       ;CaptionML=ENU=New Page }
    { 23  ;   ;No. of Blank Lines  ;Integer       ;CaptionML=ENU=No. of Blank Lines;
                                                   MinValue=0;
                                                   BlankZero=true }
    { 24  ;   ;Indentation         ;Integer       ;CaptionML=ENU=Indentation;
                                                   MinValue=0 }
    { 34  ;   ;Recognized Sales Amount;Decimal    ;CaptionML=ENU=Recognized Sales Amount;
                                                   BlankZero=true;
                                                   Editable=false }
    { 37  ;   ;Recognized Costs Amount;Decimal    ;CaptionML=ENU=Recognized Costs Amount;
                                                   BlankZero=true;
                                                   Editable=false }
    { 56  ;   ;Recognized Sales G/L Amount;Decimal;CaptionML=ENU=Recognized Sales G/L Amount;
                                                   BlankZero=true;
                                                   Editable=false }
    { 57  ;   ;Recognized Costs G/L Amount;Decimal;CaptionML=ENU=Recognized Costs G/L Amount;
                                                   BlankZero=true;
                                                   Editable=false }
    { 60  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 61  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 62  ;   ;Outstanding Orders  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Amt. Ex. VAT (LCY)" WHERE ("Document Type"=CONST(Order),
                                                                                                                           "Job No."=FIELD("Job No."),
                                                                                                                           "Job Task No."=FIELD("Job Task No."),
                                                                                                                           "Job Task No."=FIELD(FILTER(Totaling))));
                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=Outstanding Orders }
    { 63  ;   ;Amt. Rcd. Not Invoiced;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."A. Rcd. Not Inv. Ex. VAT (LCY)" WHERE ("Document Type"=CONST(Order),
                                                                                                                           "Job No."=FIELD("Job No."),
                                                                                                                           "Job Task No."=FIELD("Job Task No."),
                                                                                                                           "Job Task No."=FIELD(FILTER(Totaling))));
                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=Amt. Rcd. Not Invoiced }
    { 64  ;   ;Remaining (Total Cost);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Planning Line"."Remaining Total Cost (LCY)" WHERE ("Job No."=FIELD("Job No."),
                                                                                                                           "Job Task No."=FIELD("Job Task No."),
                                                                                                                           "Job Task No."=FIELD(FILTER(Totaling)),
                                                                                                                           "Schedule Line"=CONST(true),
                                                                                                                           "Planning Date"=FIELD("Planning Date Filter")));
                                                   CaptionML=ENU=Remaining (Total Cost);
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 65  ;   ;Remaining (Total Price);Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Job Planning Line"."Remaining Line Amount (LCY)" WHERE ("Job No."=FIELD("Job No."),
                                                                                                                            "Job Task No."=FIELD("Job Task No."),
                                                                                                                            "Job Task No."=FIELD(FILTER(Totaling)),
                                                                                                                            "Schedule Line"=CONST(true),
                                                                                                                            "Planning Date"=FIELD("Planning Date Filter")));
                                                   CaptionML=ENU=Remaining (Total Price);
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 66  ;   ;Start Date          ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Min("Job Planning Line"."Planning Date" WHERE ("Job No."=FIELD("Job No."),
                                                                                                              "Job Task No."=FIELD("Job Task No.")));
                                                   CaptionML=ENU=Start Date;
                                                   Editable=false }
    { 67  ;   ;End Date            ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Max("Job Planning Line"."Planning Date" WHERE ("Job No."=FIELD("Job No."),
                                                                                                              "Job Task No."=FIELD("Job Task No.")));
                                                   CaptionML=ENU=End Date;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"Job No.","Job Task No."                ;SumIndexFields="Recognized Sales Amount","Recognized Costs Amount","Recognized Sales G/L Amount","Recognized Costs G/L Amount";
                                                   Clustered=true }
    {    ;"Job Task No."                           }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;"Job Task No.",Description,"Job Task Type" }
  }
  CODE
  {
    VAR
      CannotDeleteAssociatedEntriesErr@1000 : TextConst '@@@="%1=The job task table name.";ENU=You cannot delete %1 because one or more entries are associated.';
      CannotChangeAssociatedEntriesErr@1002 : TextConst '@@@="%1 = The field name you are trying to change; %2 = The job task table name.";ENU=You cannot change %1 because one or more entries are associated with this %2.';
      Job@1003 : Record Job;
      DimMgt@1001 : Codeunit DimensionManagement;
      CannotModifyAssociatedEntriesErr@1005 : TextConst '@@@="%1=The job task table name.";ENU=The %1 cannot be modified because the job has associated job WIP entries.';

    [External]
    PROCEDURE CalcEACTotalCost@6() : Decimal;
    BEGIN
      if "Job No." <> Job."No." then
        if not Job.GET("Job No.") then
          exit(0);

      if Job."Apply Usage Link" then
        exit("Usage (Total Cost)" + "Remaining (Total Cost)");

      exit(0);
    END;

    [External]
    PROCEDURE CalcEACTotalPrice@7() : Decimal;
    BEGIN
      if "Job No." <> Job."No." then
        if not Job.GET("Job No.") then
          exit(0);

      if Job."Apply Usage Link" then
        exit("Usage (Total Price)" + "Remaining (Total Price)");

      exit(0);
    END;

    LOCAL PROCEDURE JobLedgEntriesExist@2() : Boolean;
    VAR
      JobLedgEntry@1001 : Record "Job Ledger Entry";
    BEGIN
      JobLedgEntry.SETCURRENTKEY("Job No.","Job Task No.");
      JobLedgEntry.SETRANGE("Job No.","Job No.");
      JobLedgEntry.SETRANGE("Job Task No.","Job Task No.");
      exit(JobLedgEntry.FINDFIRST)
    END;

    LOCAL PROCEDURE JobPlanningLinesExist@5() : Boolean;
    VAR
      JobPlanningLine@1000 : Record "Job Planning Line";
    BEGIN
      JobPlanningLine.SETCURRENTKEY("Job No.","Job Task No.");
      JobPlanningLine.SETRANGE("Job No.","Job No.");
      JobPlanningLine.SETRANGE("Job Task No.","Job Task No.");
      exit(JobPlanningLine.FINDFIRST)
    END;

    [External]
    PROCEDURE Caption@3() : Text[250];
    VAR
      Job@1000 : Record Job;
    BEGIN
      if not Job.GET("Job No.") then
        exit('');
      exit(STRSUBSTNO('%1 %2 %3 %4',
          Job."No.",
          Job.Description,
          "Job Task No.",
          Description));
    END;

    [External]
    PROCEDURE InitWIPFields@13();
    VAR
      JobWIPTotal@1000 : Record "Job WIP Total";
    BEGIN
      JobWIPTotal.SETRANGE("Job No.","Job No.");
      JobWIPTotal.SETRANGE("Job Task No.","Job Task No.");
      JobWIPTotal.SETRANGE("Posted to G/L",false);
      JobWIPTotal.DELETEALL(true);

      "Recognized Sales Amount" := 0;
      "Recognized Costs Amount" := 0;

      MODIFY;
    END;

    [External]
    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;ShortcutDimCode@1001 : Code[20]);
    VAR
      JobTask2@1002 : Record "Job Task";
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      if JobTask2.GET("Job No.","Job Task No.") then begin
        DimMgt.SaveJobTaskDim("Job No.","Job Task No.",FieldNumber,ShortcutDimCode);
        MODIFY;
      end else
        DimMgt.SaveJobTaskTempDim(FieldNumber,ShortcutDimCode);
    END;

    [External]
    PROCEDURE ClearTempDim@1();
    BEGIN
      DimMgt.DeleteJobTaskTempDim;
    END;

    BEGIN
    END.
  }
}

