OBJECT Report 5688 Cancel FA Ledger Entries
{
  OBJECT-PROPERTIES
  {
    Date=20161025D;
    Time=120000T;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Cancel FA Ledger Entries;
    ProcessingOnly=true;
    OnPreReport=BEGIN
                  if (EndingDate > 0D) and (StartingDate > EndingDate) then
                    ERROR(Text000);
                  if UseNewPostingDate then
                    if NewPostingDate = 0D then
                      ERROR(Text002);
                  if not UseNewPostingDate then
                    if NewPostingDate > 0D then
                      ERROR(Text003);
                  if NewPostingDate > 0D then
                    if NORMALDATE(NewPostingDate) <> NewPostingDate then
                      ERROR(Text004);

                  if EndingDate = 0D then
                    EndingDate2 := DMY2DATE(31,12,9999)
                  else
                    EndingDate2 := EndingDate;
                  DeprBook.GET(DeprBookCode);
                  if UseNewPostingDate then
                    DeprBook.TESTFIELD("Use Same FA+G/L Posting Dates",false);
                  DeprBook.IndexGLIntegration(GLIntegration);
                  FirstGenJnl := true;
                  FirstFAJnl := true;
                  Window.OPEN(Text001);
                END;

  }
  DATASET
  {
    { 3794;    ;DataItem;Fixed Asset         ;
               DataItemTable="Fixed Asset";
               DataItemTableView=SORTING("No.");
               OnPreDataItem=BEGIN
                               DepreciationCalc.SetFAFilter(FALedgEntry,'',DeprBookCode,false);
                               with FALedgEntry do begin
                                 SETRANGE("FA Posting Category","FA Posting Category"::" ");
                                 SETRANGE(
                                   "FA Posting Type",
                                   "FA Posting Type"::"Acquisition Cost","FA Posting Type"::"Salvage Value");
                                 SETRANGE("FA Posting Date",StartingDate,EndingDate2);
                               end;
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1,"No.");
                                  if Inactive or Blocked then
                                    CurrReport.SKIP;
                                  if not FADeprBook.GET("No.",DeprBookCode) then
                                    CurrReport.SKIP;
                                  FALedgEntry.SETRANGE("FA No.","No.");
                                  if FALedgEntry.FIND('+') then
                                    repeat
                                      SetJournalType(FALedgEntry);
                                      if NewPostingDate > 0D then
                                        FALedgEntry."Posting Date" := NewPostingDate;
                                      case JournalType of
                                        JournalType::SkipType:
                                          ;
                                        JournalType::GenJnlType:
                                          InsertGenJnlLine(FALedgEntry);
                                        JournalType::FAJnlType:
                                          InsertFAJnlLine(FALedgEntry);
                                      end;
                                    until FALedgEntry.NEXT(-1) = 0;
                                END;

               ReqFilterFields="No.","FA Class Code","FA Subclass Code" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnOpenPage=BEGIN
                   if DeprBookCode = '' then begin
                     FASetup.GET;
                     DeprBookCode := FASetup."Default Depr. Book";
                   end;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=CancelBook;
                  CaptionML=ENU=Cancel Book;
                  ToolTipML=ENU=Specifies the depreciation book where entries will be removed by the batch job.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=DeprBookCode;
                  TableRelation="Depreciation Book" }

      { 20  ;2   ;Field     ;
                  Name=Starting Date;
                  CaptionML=ENU=Starting Date;
                  ToolTipML=ENU=Specifies the date when you want the report to start.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=StartingDate }

      { 6   ;2   ;Field     ;
                  Name=Ending Date;
                  CaptionML=ENU=Ending Date;
                  ToolTipML=ENU=Specifies the date when you want the report to end.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=EndingDate }

      { 23  ;2   ;Field     ;
                  Name=Use New Posting Date;
                  CaptionML=ENU=Use New Posting Date;
                  ToolTipML=ENU=Specifies that a new posting date is applied to the journal entries created by the batch job. If the field is cleared, the posting date of the fixed asset ledger entries to be canceled is copied to the journal entries that the batch job creates.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=UseNewPostingDate }

      { 19  ;2   ;Field     ;
                  Name=New Posting Date;
                  CaptionML=ENU=New Posting Date;
                  ToolTipML=ENU=Specifies the posting date to be applied to the journal entries created by the batch job when the Use New Posting Date field is selected.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=NewPostingDate }

      { 16  ;2   ;Field     ;
                  Name=Document No.;
                  CaptionML=ENU=Document No.;
                  ToolTipML=ENU=Specifies, if you leave the field empty, the next available number on the resulting journal line. If a number series is not set up, enter the document number that you want assigned to the resulting journal line.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=DocumentNo }

      { 13  ;2   ;Field     ;
                  Name=Posting Description;
                  CaptionML=ENU=Posting Description;
                  ToolTipML=ENU=Specifies the posting date to be used by the batch job as a filter.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=PostingDescription }

      { 3   ;2   ;Field     ;
                  Name=Insert Bal. Account;
                  CaptionML=ENU=Insert Bal. Account;
                  ToolTipML=ENU=Specifies if you want the batch job to automatically insert fixed asset entries with balancing accounts.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=BalAccount }

      { 1904404401;2;Group  ;
                  Name=Cancel;
                  CaptionML=ENU=Cancel }

      { 8   ;3   ;Field     ;
                  Name=Acquisition Cost;
                  CaptionML=ENU=Acquisition Cost;
                  ToolTipML=ENU=Specifies if related acquisition cost entries are included in the batch job .;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CancelChoices[1] }

      { 9   ;3   ;Field     ;
                  Name=Depreciation;
                  CaptionML=ENU=Depreciation;
                  ToolTipML=ENU=Specifies if related depreciation entries are included in the batch job .;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CancelChoices[2] }

      { 10  ;3   ;Field     ;
                  Name=Write-Down;
                  CaptionML=ENU=Write-Down;
                  ToolTipML=ENU=Specifies if related write-down entries are included in the batch job .;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CancelChoices[3] }

      { 11  ;3   ;Field     ;
                  Name=Appreciation;
                  CaptionML=ENU=Appreciation;
                  ToolTipML=ENU=Specifies if related appreciation entries are included in the batch job .;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CancelChoices[4] }

      { 12  ;3   ;Field     ;
                  Name=Custom 1;
                  CaptionML=ENU=Custom 1;
                  ToolTipML=ENU=Specifies if related custom 1 entries are included in the batch job .;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CancelChoices[5] }

      { 17  ;3   ;Field     ;
                  Name=Custom 2;
                  CaptionML=ENU=Custom 2;
                  ToolTipML=ENU=Specifies if related custom 2 entries are included in the batch job .;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CancelChoices[6] }

      { 18  ;3   ;Field     ;
                  Name=Salvage Value;
                  CaptionML=ENU=Salvage Value;
                  ToolTipML=ENU=Specifies if related salvage value entries are included in the batch job .;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CancelChoices[9] }

      { 5   ;3   ;Field     ;
                  Name=Disposal;
                  CaptionML=ENU=Disposal;
                  ToolTipML=ENU=Specifies if related disposal entries are included in the batch job .;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CancelChoices[7] }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The Starting Date is later than the Ending Date.';
      Text001@1001 : TextConst 'ENU=Canceling fixed asset    #1##########';
      GenJnlLine@1002 : Record "Gen. Journal Line";
      FASetup@1003 : Record "FA Setup";
      FAJnlLine@1004 : Record "FA Journal Line";
      FADeprBook@1005 : Record "FA Depreciation Book";
      DeprBook@1006 : Record "Depreciation Book";
      FALedgEntry@1007 : Record "FA Ledger Entry";
      FAJnlSetup@1008 : Record "FA Journal Setup";
      DepreciationCalc@1009 : Codeunit "Depreciation Calculation";
      Window@1011 : Dialog;
      CancelChoices@1012 : ARRAY [9] OF Boolean;
      GLIntegration@1013 : ARRAY [9] OF Boolean;
      DocumentNo@1014 : Code[20];
      DocumentNo2@1015 : Code[20];
      DocumentNo3@1016 : Code[20];
      NoSeries2@1017 : Code[10];
      NoSeries3@1018 : Code[10];
      PostingDescription@1019 : Text[50];
      JournalType@1020 : 'SkipType,GenJnlType,FAJnlType';
      DeprBookCode@1021 : Code[10];
      BalAccount@1022 : Boolean;
      StartingDate@1023 : Date;
      EndingDate@1024 : Date;
      EndingDate2@1025 : Date;
      FirstGenJnl@1026 : Boolean;
      FirstFAJnl@1027 : Boolean;
      FAJnlNextLineNo@1028 : Integer;
      GenJnlNextLineNo@1029 : Integer;
      Text002@1032 : TextConst 'ENU=You must specify New Posting Date.';
      Text003@1031 : TextConst 'ENU=You must not specify New Posting Date.';
      Text004@1030 : TextConst 'ENU=You must not specify a closing date.';
      UseNewPostingDate@1034 : Boolean;
      NewPostingDate@1033 : Date;

    LOCAL PROCEDURE InsertGenJnlLine@2(VAR FALedgEntry@1000 : Record "FA Ledger Entry");
    VAR
      FAInsertGLAcc@1001 : Codeunit "FA Insert G/L Account";
    BEGIN
      if FirstGenJnl then begin
        GenJnlLine.LOCKTABLE;
        FAJnlSetup.GenJnlName(DeprBook,GenJnlLine,GenJnlNextLineNo);
        NoSeries2 := FAJnlSetup.GetGenNoSeries(GenJnlLine);
        if DocumentNo = '' then
          DocumentNo2 := FAJnlSetup.GetGenJnlDocumentNo(GenJnlLine,GetPostingDate(FALedgEntry."FA Posting Date"),true)
        else
          DocumentNo2 := DocumentNo;
      end;
      FirstGenJnl := false;

      with GenJnlLine do begin
        FALedgEntry.MoveToGenJnl(GenJnlLine);
        "Shortcut Dimension 1 Code" := FALedgEntry."Global Dimension 1 Code";
        "Shortcut Dimension 2 Code" := FALedgEntry."Global Dimension 2 Code";
        "Dimension Set ID" := FALedgEntry."Dimension Set ID";
        VALIDATE("Depreciation Book Code",DeprBookCode);
        VALIDATE(Amount,-Amount);
        "FA Error Entry No." := FALedgEntry."Entry No.";
        VALIDATE(Correction,DeprBook."Mark Errors as Corrections");
        "Document No." := DocumentNo2;
        "Posting No. Series" := NoSeries2;
        "Document Type" := "Document Type"::" ";
        "External Document No." := '';
        if PostingDescription <> '' then
          Description := PostingDescription;
        GenJnlNextLineNo := GenJnlNextLineNo + 10000;
        "Line No." := GenJnlNextLineNo;
        INSERT(true);
        if BalAccount then begin
          FAInsertGLAcc.GetBalAcc(GenJnlLine);
          if FINDLAST then ;
          GenJnlNextLineNo := "Line No.";
        end;
      end;
    END;

    LOCAL PROCEDURE InsertFAJnlLine@3(VAR FALedgEntry@1000 : Record "FA Ledger Entry");
    BEGIN
      if FirstFAJnl then begin
        FAJnlLine.LOCKTABLE;
        FAJnlSetup.FAJnlName(DeprBook,FAJnlLine,FAJnlNextLineNo);
        NoSeries3 := FAJnlSetup.GetFANoSeries(FAJnlLine);
        if DocumentNo = '' then
          DocumentNo3 := FAJnlSetup.GetFAJnlDocumentNo(FAJnlLine,GetPostingDate(FALedgEntry."FA Posting Date"),true)
        else
          DocumentNo3 := DocumentNo;
      end;
      FirstFAJnl := false;

      with FAJnlLine do begin
        FALedgEntry.MoveToFAJnl(FAJnlLine);
        "Shortcut Dimension 1 Code" := FALedgEntry."Global Dimension 1 Code";
        "Shortcut Dimension 2 Code" := FALedgEntry."Global Dimension 2 Code";
        "Dimension Set ID" := FALedgEntry."Dimension Set ID";
        VALIDATE("Depreciation Book Code",DeprBookCode);
        VALIDATE(Amount,-Amount);
        "FA Error Entry No." := FALedgEntry."Entry No.";
        VALIDATE(Correction,DeprBook."Mark Errors as Corrections");
        "Document No." := DocumentNo3;
        "Posting No. Series" := NoSeries3;
        "Document Type" := "Document Type"::" ";
        "External Document No." := '';
        if PostingDescription <> '' then
          Description := PostingDescription;
        FAJnlNextLineNo := FAJnlNextLineNo + 10000;
        "Line No." := FAJnlNextLineNo;
        INSERT(true);
      end;
    END;

    LOCAL PROCEDURE SetJournalType@10(VAR FALedgEntry@1000 : Record "FA Ledger Entry");
    VAR
      Index@1001 : Integer;
    BEGIN
      Index := FALedgEntry.ConvertPostingType + 1;
      if CancelChoices[Index] then begin
        if GLIntegration[Index] and not "Fixed Asset"."Budgeted Asset" then
          JournalType := JournalType::GenJnlType
        else
          JournalType := JournalType::FAJnlType
      end else
        JournalType := JournalType::SkipType;
    END;

    PROCEDURE InitializeRequest@1(DeprBookCodeFrom@1000 : Code[10];StartingDateFrom@1001 : Date;EndingDateFrom@1002 : Date;UseNewPostingDateFrom@1003 : Boolean;NewPostingDateFrom@1004 : Date;DocumentNoFrom@1005 : Code[20];PostingDescriptionFrom@1006 : Text[50];BalAccountFrom@1007 : Boolean);
    BEGIN
      DeprBookCode := DeprBookCodeFrom;
      StartingDate := StartingDateFrom;
      EndingDate := EndingDateFrom;
      UseNewPostingDate := UseNewPostingDateFrom;
      NewPostingDate := NewPostingDateFrom;
      DocumentNo := DocumentNoFrom;
      PostingDescription := PostingDescriptionFrom;
      BalAccount := BalAccountFrom;
    END;

    PROCEDURE SetCancelDepreciation@4(Choice@1000 : Boolean);
    BEGIN
      CancelChoices[2] := Choice;
    END;

    PROCEDURE SetCancelAcquisitionCost@5(Choice@1000 : Boolean);
    BEGIN
      CancelChoices[1] := Choice;
    END;

    LOCAL PROCEDURE GetPostingDate@6(FAPostingDate@1000 : Date) : Date;
    BEGIN
      if NewPostingDate <> 0D then
        exit(NewPostingDate);
      exit(FAPostingDate);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

