OBJECT Page 1275 Doc. Exch. Service Setup
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Document Exchange Service Setup;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable="Doc. Exch. Service Setup";
    PageType=Card;
    PromotedActionCategoriesML=ENU=New,Process,Page,Encryption;
    ShowFilter=false;
    OnOpenPage=BEGIN
                 RESET;
                 if not GET then begin
                   INIT;
                   INSERT(true);
                   SetURLsToDefault;
                 end;
                 UpdateBasedOnEnable;
               END;

    OnAfterGetRecord=BEGIN
                       EditableByNotEnabled := not Enabled;
                     END;

    OnQueryClosePage=BEGIN
                       if not Enabled then
                         if not CONFIRM(STRSUBSTNO(EnableServiceQst,CurrPage.CAPTION),true) then
                           exit(false);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateBasedOnEnable;
                           UpdateEncryptedField("Consumer Key",ConsumerKey);
                           UpdateEncryptedField("Consumer Secret",ConsumerSecret);
                           UpdateEncryptedField(Token,TokenValue);
                           UpdateEncryptedField("Token Secret",TokenSecret);
                           UpdateEncryptedField("Doc. Exch. Tenant ID",DocExchTenantID);
                         END;

    ActionList=ACTIONS
    {
      { 12      ;    ;ActionContainer;
                      Name=ActionContainer12;
                      ActionContainerType=ActionItems }
      { 11      ;1   ;Action    ;
                      Name=SetURLsToDefault;
                      CaptionML=ENU=Set URLs to Default;
                      ToolTipML=ENU=Change the service, sign-up, and sign-in URLs back to their default values. The changes occur immediately when you choose this action.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=EditableByNotEnabled;
                      Image=Restore;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetURLsToDefault;
                               END;
                                }
      { 15      ;1   ;Action    ;
                      Name=TestConnection;
                      CaptionML=ENU=Test Connection;
                      ToolTipML=ENU=Check that the settings that you added are correct and the connection to the Data Exchange Service is working.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Link;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CheckConnection;
                               END;
                                }
      { 20      ;1   ;Action    ;
                      Name=JobQueueEntry;
                      CaptionML=ENU=Job Queue Entry;
                      ToolTipML=ENU=View or edit the jobs that automatically process the incoming and outgoing electronic documents.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=Enabled;
                      Image=JobListSetup;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowJobQueueEntry;
                               END;
                                }
      { 10      ;0   ;ActionContainer;
                      Name=ActionContainer10;
                      ActionContainerType=RelatedInformation }
      { 8       ;1   ;Action    ;
                      Name=EncryptionManagement;
                      CaptionML=ENU=Encryption Management;
                      ToolTipML=ENU=Enable or disable data encryption. Data encryption helps make sure that unauthorized users cannot read business data.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Data Encryption Management";
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=EncryptionKeys;
                      PromotedCategory=Category4;
                      RunPageMode=View }
      { 23      ;1   ;Action    ;
                      Name=ActivityLog;
                      CaptionML=ENU=Activity Log;
                      ToolTipML=ENU=See the status and any errors for the electronic document or OCR file that you send through the document exchange service.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Log;
                      OnAction=VAR
                                 ActivityLog@1002 : Record "Activity Log";
                               BEGIN
                                 ActivityLog.ShowEntries(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General;
                GroupType=Group }

    { 27  ;2   ;Field     ;
                Name=User Agent;
                ToolTipML=ENU=Specifies any text that you have entered to identify your company in document exchange processes.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="User Agent";
                Editable=EditableByNotEnabled;
                ImplicitType=Text30;
                ShowMandatory=TRUE }

    { 24  ;2   ;Field     ;
                Name=DocExchTenantID;
                ExtendedDatatype=Masked;
                CaptionML=ENU=Doc. Exch. Tenant ID;
                ToolTipML=ENU=Specifies the tenant in the document exchange service that represents your company.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DocExchTenantID;
                Editable=EditableByNotEnabled;
                StyleExpr=TRUE;
                OnValidate=BEGIN
                             SavePassword("Doc. Exch. Tenant ID",DocExchTenantID);
                           END;

                ImplicitType=Text50;
                ShowMandatory=TRUE }

    { 25  ;2   ;Field     ;
                Name=Enabled;
                ToolTipML=ENU=Specifies if the service is enabled. When you enable the service, at least two job queue entries are created to process the traffic of electronic documents in and out of Microsoft Dynamics 365.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Enabled;
                OnValidate=BEGIN
                             UpdateBasedOnEnable;
                             CurrPage.UPDATE;
                           END;

                ImplicitType=Boolean }

    { 9   ;2   ;Field     ;
                Name=ShowEnableWarning;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShowEnableWarning;
                Enabled=NOT EditableByNotEnabled;
                Editable=False;
                OnDrillDown=BEGIN
                              DrilldownCode;
                            END;

                ImplicitType=Text }

    { 14  ;1   ;Group     ;
                Name=Service;
                CaptionML=ENU=Service;
                GroupType=Group }

    { 4   ;2   ;Field     ;
                Name=Sign-up URL;
                ToolTipML=ENU=Specifies the web page where you sign up for the document exchange service.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sign-up URL";
                Editable=EditableByNotEnabled;
                ImplicitType=Text250 }

    { 5   ;2   ;Field     ;
                Name=Service URL;
                ToolTipML=ENU=Specifies the URL address of the document exchange service. The service specified in the Service URL field is called when you send and receive electronic documents.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Service URL";
                Editable=EditableByNotEnabled;
                ImplicitType=Text250;
                ShowMandatory=TRUE }

    { 6   ;2   ;Field     ;
                Name=Sign-in URL;
                ToolTipML=ENU=Specifies the web page where you sign in to the document exchange service.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sign-in URL";
                Editable=EditableByNotEnabled;
                ImplicitType=Text250 }

    { 13  ;2   ;Field     ;
                Name=Log Web Requests;
                ToolTipML=ENU=Specifies if web requests occurring in connection with the service are logged. The log is located in the server Temp folder.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Log Web Requests";
                Editable=EditableByNotEnabled;
                ImplicitType=Boolean }

    { 16  ;1   ;Group     ;
                Name=Authorization;
                CaptionML=ENU=Authorization;
                GroupType=Group }

    { 7   ;2   ;Group     ;
                Name=Consumer;
                CaptionML=ENU=Consumer;
                GroupType=Group }

    { 17  ;3   ;Field     ;
                Name=ConsumerKey;
                ExtendedDatatype=Masked;
                CaptionML=ENU=Consumer Key;
                ToolTipML=ENU=Specifies the 3-legged OAuth key for the consumer key. This is provided by the document exchange service provider.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ConsumerKey;
                Editable=EditableByNotEnabled;
                OnValidate=BEGIN
                             SavePassword("Consumer Key",ConsumerKey);
                             if ConsumerKey <> '' then
                               CheckEncryption;
                           END;

                ImplicitType=Text50;
                ShowMandatory=TRUE }

    { 18  ;3   ;Field     ;
                Name=ConsumerSecret;
                ExtendedDatatype=Masked;
                CaptionML=ENU=Consumer Secret;
                ToolTipML=ENU=Specifies the secret that protects the consumer key that you enter in the Consumer Key field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ConsumerSecret;
                Editable=EditableByNotEnabled;
                OnValidate=BEGIN
                             SavePassword("Consumer Secret",ConsumerSecret);
                             if ConsumerSecret <> '' then
                               CheckEncryption;
                           END;

                ImplicitType=Text50;
                ShowMandatory=TRUE }

    { 22  ;2   ;Group     ;
                Name=Tokens;
                CaptionML=ENU=Tokens;
                GroupType=Group }

    { 19  ;3   ;Field     ;
                Name=TokenValue;
                ExtendedDatatype=Masked;
                CaptionML=ENU=Token;
                ToolTipML=ENU=Specifies a 3-legged OAuth key for Token. This is provided by the document exchange service provider.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TokenValue;
                Editable=EditableByNotEnabled;
                OnValidate=BEGIN
                             SavePassword(Token,TokenValue);
                             if TokenValue <> '' then
                               CheckEncryption;
                           END;

                ImplicitType=Text50;
                ShowMandatory=TRUE }

    { 21  ;3   ;Field     ;
                Name=TokenSecret;
                ExtendedDatatype=Masked;
                CaptionML=ENU=Token Secret;
                ToolTipML=ENU=Specifies the 3-legged OAuth key for the token that you enter in the Token field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TokenSecret;
                Editable=EditableByNotEnabled;
                OnValidate=BEGIN
                             SavePassword("Token Secret",TokenSecret);
                             if TokenSecret <> '' then
                               CheckEncryption;
                           END;

                ImplicitType=Text50;
                ShowMandatory=TRUE }

  }
  CODE
  {
    VAR
      ConsumerKey@1002 : Text[50];
      ConsumerSecret@1003 : Text[50];
      TokenValue@1004 : Text[50];
      TokenSecret@1005 : Text[50];
      DocExchTenantID@1006 : Text[50];
      EditableByNotEnabled@1001 : Boolean;
      ShowEnableWarning@1000 : Text;
      EnabledWarningTok@1008 : TextConst 'ENU=You must disable the service before you can make changes.';
      DisableEnableQst@1007 : TextConst 'ENU=Do you want to disable the document exchange service?';
      EnableServiceQst@1009 : TextConst '@@@="%1 = pagecaption (Document Exchange Service Setup)";ENU=The %1 is not enabled. Are you sure you want to exit?';
      CheckedEncryption@1010 : Boolean;
      EncryptionIsNotActivatedQst@1011 : TextConst 'ENU=Data encryption is not activated. It is recommended that you encrypt data. \Do you want to open the Data Encryption Management window?';

    LOCAL PROCEDURE UpdateBasedOnEnable@2();
    BEGIN
      EditableByNotEnabled := not Enabled;
      ShowEnableWarning := '';
      if CurrPage.EDITABLE and Enabled then
        ShowEnableWarning := EnabledWarningTok;
    END;

    LOCAL PROCEDURE DrilldownCode@1();
    BEGIN
      if CONFIRM(DisableEnableQst,true) then begin
        Enabled := false;
        UpdateBasedOnEnable;
        CurrPage.UPDATE;
      end;
    END;

    LOCAL PROCEDURE UpdateEncryptedField@3(InputGUID@1000 : GUID;VAR Text@1001 : Text[50]);
    BEGIN
      if ISNULLGUID(InputGUID) then
        Text := ''
      else
        Text := '*************';
    END;

    LOCAL PROCEDURE CheckEncryption@4();
    BEGIN
      if not CheckedEncryption and not ENCRYPTIONENABLED then begin
        CheckedEncryption := true;
        if CONFIRM(EncryptionIsNotActivatedQst) then begin
          PAGE.RUN(PAGE::"Data Encryption Management");
          CheckedEncryption := false;
        end;
      end;
    END;

    BEGIN
    END.
  }
}

