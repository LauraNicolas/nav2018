OBJECT Page 593 Change Log Setup (Table) List
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Change Log Setup (Table) List;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=true;
    SourceTable=AllObjWithCaption;
    PageType=List;
    SourceTableTemporary=true;
    OnOpenPage=BEGIN
                 FILTERGROUP(2);
                 SETRANGE("Object Type","Object Type"::Table);
                 SETRANGE("Object ID",0,2000000000);
                 FILTERGROUP(0);
               END;

    OnAfterGetRecord=BEGIN
                       GetRec;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 15  ;2   ;Field     ;
                Name=Object ID;
                CaptionML=ENU=ID;
                ToolTipML=ENU="Specifies the ID of the table. ";
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Object ID";
                Editable=FALSE;
                ImplicitType=Integer }

    { 19  ;2   ;Field     ;
                Name=Object Caption;
                CaptionML=ENU=Name;
                ToolTipML=ENU=Specifies the name of the table.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Object Caption";
                Editable=FALSE;
                ImplicitType=Text249 }

    { 6   ;2   ;Field     ;
                Name=LogInsertion;
                CaptionML=ENU=Log Insertion;
                ToolTipML=ENU=Specifies where insertions of new data are logged. Blank: No insertions in any fields are logged. Some fields: Insertions are logged for selected fields. All fields: Insertions are logged for all fields.;
                OptionCaptionML=ENU=" ,Some Fields,All Fields";
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ChangeLogSetupTable."Log Insertion";
                OnValidate=VAR
                             NewValue@1001 : Option;
                           BEGIN
                             if ChangeLogSetupTable."Table No." <> "Object ID" then
                               begin
                               NewValue := ChangeLogSetupTable."Log Insertion";
                               GetRec;
                               ChangeLogSetupTable."Log Insertion" := NewValue;
                             end;

                             if xChangeLogSetupTable.GET(ChangeLogSetupTable."Table No.") then
                               begin
                               if (xChangeLogSetupTable."Log Insertion" = xChangeLogSetupTable."Log Insertion"::"Some Fields") and
                                  (xChangeLogSetupTable."Log Insertion" <> ChangeLogSetupTable."Log Insertion")
                               then
                                 if CONFIRM(
                                      STRSUBSTNO(Text002,xChangeLogSetupTable.FIELDCAPTION("Log Insertion"),xChangeLogSetupTable."Log Insertion"),false)
                                 then
                                   ChangeLogSetupTable.DelChangeLogFields(0);
                             end;
                             ChangeLogSetupTableLogInsertio;
                           END;

                OnAssistEdit=BEGIN
                               with ChangeLogSetupTable do
                                 TESTFIELD("Log Insertion","Log Insertion"::"Some Fields");
                               AssistEdit;
                             END;
                              }

    { 8   ;2   ;Field     ;
                Name=LogModification;
                CaptionML=ENU=Log Modification;
                ToolTipML=ENU=Specifies that any modification of data is logged.;
                OptionCaptionML=ENU=" ,Some Fields,All Fields";
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ChangeLogSetupTable."Log Modification";
                OnValidate=VAR
                             NewValue@1001 : Option;
                           BEGIN
                             if ChangeLogSetupTable."Table No." <> "Object ID" then
                               begin
                               NewValue := ChangeLogSetupTable."Log Modification";
                               GetRec;
                               ChangeLogSetupTable."Log Modification" := NewValue;
                             end;

                             if xChangeLogSetupTable.GET(ChangeLogSetupTable."Table No.") then
                               begin
                               if (xChangeLogSetupTable."Log Modification" = xChangeLogSetupTable."Log Modification"::"Some Fields") and
                                  (xChangeLogSetupTable."Log Modification" <> ChangeLogSetupTable."Log Modification")
                               then
                                 if CONFIRM(
                                      STRSUBSTNO(Text002,xChangeLogSetupTable.FIELDCAPTION("Log Modification"),xChangeLogSetupTable."Log Modification"),false)
                                 then
                                   ChangeLogSetupTable.DelChangeLogFields(1);
                             end;
                             ChangeLogSetupTableLogModifica;
                           END;

                OnAssistEdit=BEGIN
                               with ChangeLogSetupTable do
                                 TESTFIELD("Log Modification","Log Modification"::"Some Fields");
                               AssistEdit;
                             END;
                              }

    { 10  ;2   ;Field     ;
                Name=LogDeletion;
                CaptionML=ENU=Log Deletion;
                ToolTipML=ENU=Specifies that any deletion of data is logged.;
                OptionCaptionML=ENU=" ,Some Fields,All Fields";
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ChangeLogSetupTable."Log Deletion";
                OnValidate=VAR
                             NewValue@1001 : Option;
                           BEGIN
                             if ChangeLogSetupTable."Table No." <> "Object ID" then
                               begin
                               NewValue := ChangeLogSetupTable."Log Deletion";
                               GetRec;
                               ChangeLogSetupTable."Log Deletion" := NewValue;
                             end;

                             if xChangeLogSetupTable.GET(ChangeLogSetupTable."Table No.") then
                               begin
                               if (xChangeLogSetupTable."Log Deletion" = xChangeLogSetupTable."Log Deletion"::"Some Fields") and
                                  (xChangeLogSetupTable."Log Deletion" <> ChangeLogSetupTable."Log Deletion")
                               then
                                 if CONFIRM(
                                      STRSUBSTNO(Text002,xChangeLogSetupTable.FIELDCAPTION("Log Deletion"),xChangeLogSetupTable."Log Deletion"),false)
                                 then
                                   ChangeLogSetupTable.DelChangeLogFields(2);
                             end;
                             ChangeLogSetupTableLogDeletion;
                           END;

                OnAssistEdit=BEGIN
                               with ChangeLogSetupTable do
                                 TESTFIELD("Log Deletion","Log Deletion"::"Some Fields");
                               AssistEdit;
                             END;
                              }

  }
  CODE
  {
    VAR
      ChangeLogSetupTable@1000 : Record "Change Log Setup (Table)";
      xChangeLogSetupTable@1002 : Record "Change Log Setup (Table)";
      Text002@1003 : TextConst 'ENU=You have changed the %1 field to no longer be %2. Do you want to remove the field selections?';

    LOCAL PROCEDURE AssistEdit@1();
    VAR
      Field@1001 : Record Field;
      ChangeLogSetupFieldList@1002 : Page "Change Log Setup (Field) List";
    BEGIN
      Field.FILTERGROUP(2);
      Field.SETRANGE(TableNo,"Object ID");
      Field.FILTERGROUP(0);
      with ChangeLogSetupTable do
        ChangeLogSetupFieldList.SelectColumn(
          "Log Insertion" = "Log Insertion"::"Some Fields",
          "Log Modification" = "Log Modification"::"Some Fields",
          "Log Deletion" = "Log Deletion"::"Some Fields");
      ChangeLogSetupFieldList.SETTABLEVIEW(Field);
      ChangeLogSetupFieldList.RUN;
    END;

    LOCAL PROCEDURE UpdateRec@18();
    BEGIN
      with ChangeLogSetupTable do
        if ("Log Insertion" = "Log Insertion"::" ") and ("Log Modification" = "Log Modification"::" ") and
           ("Log Deletion" = "Log Deletion"::" ")
        then begin
          if DELETE then;
        end else
          if not MODIFY then
            INSERT;
    END;

    LOCAL PROCEDURE GetRec@2();
    BEGIN
      if not ChangeLogSetupTable.GET("Object ID") then begin
        ChangeLogSetupTable.INIT;
        ChangeLogSetupTable."Table No." := "Object ID";
      end;
    END;

    [External]
    PROCEDURE SetSource@4();
    VAR
      AllObjWithCaption@1001 : Record AllObjWithCaption;
    BEGIN
      DELETEALL;

      AllObjWithCaption.SETCURRENTKEY("Object Type","Object ID");
      AllObjWithCaption.SETRANGE("Object Type","Object Type"::Table);
      AllObjWithCaption.SETRANGE("Object ID",0,2000000006);

      if AllObjWithCaption.FIND('-') then
        repeat
          Rec := AllObjWithCaption;
          INSERT;
        until AllObjWithCaption.NEXT = 0;
    END;

    LOCAL PROCEDURE ChangeLogSetupTableLogInsertio@19011102();
    BEGIN
      UpdateRec;
    END;

    LOCAL PROCEDURE ChangeLogSetupTableLogModifica@19025218();
    BEGIN
      UpdateRec;
    END;

    LOCAL PROCEDURE ChangeLogSetupTableLogDeletion@19043090();
    BEGIN
      UpdateRec;
    END;

    BEGIN
    END.
  }
}

