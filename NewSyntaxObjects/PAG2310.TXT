OBJECT Page 2310 BC O365 Sales Invoice
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Draft Invoice;
    DeleteAllowed=false;
    SourceTable="Sales Header";
    DataCaptionExpr='';
    SourceTableView=WHERE("Document Type"=CONST(Invoice));
    PageType=Document;
    RefreshOnActivate=true;
    OnOpenPage=VAR
                 O365SalesInitialSetup@6115 : Record "O365 Sales Initial Setup";
                 CalendarEventMangement@1000 : Codeunit "Calendar Event Mangement";
               BEGIN
                 IsUsingVAT := O365SalesInitialSetup.IsUsingVAT;

                 CalendarEventMangement.CreateCalendarEventForCodeunit(TODAY,SyncBusinessInfoTxt,CODEUNIT::"Graph Sync. - Business Profile");
               END;

    OnNewRecord=BEGIN
                  CustomerName := '';
                  CustomerEmail := '';
                  WorkDescription := '';
                  SetDefaultPaymentServices;
                END;

    OnInsertRecord=BEGIN
                     "Document Type" := "Document Type"::Invoice;
                   END;

    OnDeleteRecord=VAR
                     CustInvoiceDisc@1000 : Record "Cust. Invoice Disc.";
                   BEGIN
                     ForceExit := true;

                     if CustInvoiceDisc.GET("Invoice Disc. Code","Currency Code",0) then
                       CustInvoiceDisc.DELETE;
                   END;

    OnQueryClosePage=BEGIN
                       exit(O365SalesInvoiceMgmt.OnQueryCloseForSalesHeader(Rec,ForceExit,CustomerName));
                     END;

    OnAfterGetCurrRecord=BEGIN
                           O365SalesInvoiceMgmt.UpdateCustomerFields(Rec,CustomerName,CustomerEmail);
                           WorkDescription := GetWorkDescription;
                           CurrPageEditable := CurrPage.EDITABLE;
                           O365SalesInvoiceMgmt.OnAfterGetSalesHeaderRecord(Rec,CurrencyFormat,TaxAreaDescription);
                           O365SalesInvoiceMgmt.UpdateNoOfAttachmentsLabel(O365SalesAttachmentMgt.GetNoOfAttachments(Rec),NoOfAttachmentsValueTxt);
                           O365SalesInvoiceMgmt.UpdateAddress(Rec,FullAddress);
                           O365SalesInvoiceMgmt.CalcInvoiceDiscountAmount(Rec,SubTotalAmount,DiscountTxt,InvoiceDiscountAmount,InvDiscAmountVisible);
                           if "Sell-to Customer No." <> xRec."Sell-to Customer No." then
                             O365SalesInvoiceMgmt.CustomerChanged;
                           IsCompanyContact := O365SalesInvoiceMgmt.IsCustomerCompanyContact("Sell-to Customer No.");
                         END;

    ActionList=ACTIONS
    {
      { 22      ;    ;ActionContainer;
                      Name=Invoice;
                      CaptionML=ENU=Invoice;
                      ActionContainerType=ActionItems }
      { 23      ;1   ;Action    ;
                      Name=Post;
                      ShortCutKey=Ctrl+Right;
                      CaptionML=ENU=Send;
                      ToolTipML=ENU=Finalize and send the invoice.;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Promoted=true;
                      Enabled=CustomerName <> '';
                      PromotedIsBig=true;
                      Image=Invoicing-MDL-Send;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=VAR
                                 O365SendResendInvoice@1001 : Codeunit "O365 Send + Resend Invoice";
                               BEGIN
                                 if O365SendResendInvoice.SendSalesInvoiceOrQuoteFromBC(Rec) then begin
                                   ForceExit := true;
                                   CurrPage.CLOSE;
                                 end;
                               END;
                                }
      { 3       ;1   ;Action    ;
                      Name=ViewPdf;
                      CaptionML=ENU=Preview;
                      ToolTipML=ENU=View the preview of the invoice before sending.;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Promoted=true;
                      Enabled=CustomerName <> '';
                      Image=Invoicing-MDL-PreviewDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReportSelections@1001 : Record "Report Selections";
                                 DocumentPath@1000 : Text[250];
                               BEGIN
                                 SETRECFILTER;
                                 LOCKTABLE;
                                 FIND;
                                 ReportSelections.GetPdfReport(DocumentPath,ReportSelections.Usage::"S.Invoice Draft",Rec,"Sell-to Customer No.");
                                 DOWNLOAD(DocumentPath,'','','',DocumentPath);
                                 FIND;
                               END;
                                }
      { 4       ;1   ;Action    ;
                      Name=DeleteAction;
                      CaptionML=ENU=Discard;
                      ToolTipML=ENU=Discards the draft invoice;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Promoted=true;
                      Image=Invoicing-MDL-Delete;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CustInvoiceDisc@1000 : Record "Cust. Invoice Disc.";
                               BEGIN
                                 if not FIND then begin
                                   CurrPage.CLOSE;
                                   exit;
                                 end;

                                 if not CONFIRM(DeleteQst) then
                                   exit;

                                 ForceExit := true;

                                 if CustInvoiceDisc.GET("Invoice Disc. Code","Currency Code",0) then
                                   CustInvoiceDisc.DELETE;
                                 DELETE(true);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 25  ;1   ;Group     ;
                Name=Sell to;
                CaptionML=ENU=Sell to;
                GroupType=Group }

    { 9   ;2   ;Field     ;
                Name=Sell-to Customer Name;
                CaptionML=ENU=Customer Name;
                ToolTipML=ENU=Specifies the customer's name.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                NotBlank=true;
                SourceExpr="Sell-to Customer Name";
                Importance=Promoted;
                LookupPageID="BC O365 Contact Lookup";
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             O365SalesInvoiceMgmt.ValidateCustomerName(Rec,CustomerName,CustomerEmail);
                             O365SalesInvoiceMgmt.UpdateAddress(Rec,FullAddress);
                             CurrPage.UPDATE(true);
                           END;

                ImplicitType=Text50;
                ShowMandatory=TRUE;
                QuickEntry=FALSE }

    { 18  ;2   ;Field     ;
                Name=CustomerEmail;
                ExtendedDatatype=E-Mail;
                CaptionML=ENU=Email Address;
                ToolTipML=ENU=Specifies the customer's email address.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=CustomerEmail;
                Editable=CurrPageEditable AND (CustomerName <> '');
                OnValidate=BEGIN
                             O365SalesInvoiceMgmt.ValidateCustomerEmail(Rec,CustomerEmail);
                           END;

                ImplicitType=Text80 }

    { 24  ;2   ;Group     ;
                Name=Group24;
                Visible=CustomerName <> '';
                GroupType=Group }

    { 16  ;3   ;Field     ;
                Name=ViewContactCard;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=ViewContactDetailsLbl;
                Editable=FALSE;
                OnDrillDown=VAR
                              Customer@1000 : Record Customer;
                            BEGIN
                              if Customer.GET("Sell-to Customer No.") then
                                PAGE.RUNMODAL(PAGE::"BC O365 Sales Customer Card",Customer);
                            END;

                ImplicitType=TextConst;
                ShowCaption=false }

    { 11  ;2   ;Group     ;
                Name=Group11;
                GroupType=Group }

    { 15  ;3   ;Field     ;
                Name=Sell-to Address;
                CaptionML=ENU=Address;
                ToolTipML=ENU=Specifies the address where the customer is located.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Sell-to Address";
                Editable=CustomerName <> '';
                OnValidate=VAR
                             Customer@1000 : Record Customer;
                           BEGIN
                             if ("Sell-to Address" <> '') and ("Sell-to Customer No." <> '') then begin
                               Customer.LOCKTABLE;
                               if Customer.WRITEPERMISSION and Customer.GET("Sell-to Customer No.") then
                                 if "Sell-to Address" <> Customer.Address then begin
                                   Customer.Address := "Sell-to Address";
                                   Customer.MODIFY(true);
                                 end;
                             end;
                           END;

                ImplicitType=Text50 }

    { 12  ;3   ;Field     ;
                Name=Sell-to Address 2;
                CaptionML=ENU=Address 2;
                ToolTipML=ENU=Specifies additional address information.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Sell-to Address 2";
                Editable=CustomerName <> '';
                OnValidate=VAR
                             Customer@1000 : Record Customer;
                           BEGIN
                             if ("Sell-to Address 2" <> '') and ("Sell-to Customer No." <> '') then begin
                               Customer.LOCKTABLE;
                               if Customer.WRITEPERMISSION and Customer.GET("Sell-to Customer No.") then
                                 if "Sell-to Address 2" <> Customer."Address 2" then begin
                                   Customer."Address 2" := "Sell-to Address 2";
                                   Customer.MODIFY(true);
                                 end;
                             end;
                           END;

                ImplicitType=Text50 }

    { 5   ;3   ;Field     ;
                Name=Sell-to Post Code;
                Lookup=false;
                CaptionML=ENU=Post Code;
                ToolTipML=ENU=Specifies the postal code.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Sell-to Post Code";
                Editable=CustomerName <> '';
                OnValidate=VAR
                             Customer@1000 : Record Customer;
                           BEGIN
                             if ("Sell-to Post Code" <> '') and ("Sell-to Customer No." <> '') then begin
                               Customer.LOCKTABLE;
                               if Customer.WRITEPERMISSION and Customer.GET("Sell-to Customer No.") then
                                 if "Sell-to Post Code" <> Customer."Post Code" then begin
                                   Customer."Post Code" := "Sell-to Post Code";
                                   Customer.MODIFY(true);
                                 end;
                             end;
                           END;

                ImplicitType=Code20 }

    { 2   ;3   ;Field     ;
                Name=Sell-to City;
                Lookup=false;
                CaptionML=ENU=City;
                ToolTipML=ENU=Specifies the address city.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Sell-to City";
                Editable=CustomerName <> '';
                OnValidate=VAR
                             Customer@1000 : Record Customer;
                           BEGIN
                             if ("Sell-to City" <> '') and ("Sell-to Customer No." <> '') then begin
                               Customer.LOCKTABLE;
                               if Customer.WRITEPERMISSION and Customer.GET("Sell-to Customer No.") then
                                 if "Sell-to City" <> Customer.City then begin
                                   Customer.City := "Sell-to City";
                                   Customer.MODIFY(true);
                                 end;
                             end;
                           END;

                ImplicitType=Text30 }

    { 8   ;3   ;Field     ;
                Name=Sell-to County;
                Lookup=false;
                CaptionML=ENU=County;
                ToolTipML=ENU=Specifies the address county.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Sell-to County";
                Editable=CustomerName <> '';
                OnValidate=VAR
                             Customer@1000 : Record Customer;
                           BEGIN
                             if ("Sell-to County" <> '') and ("Sell-to Customer No." <> '') then begin
                               Customer.LOCKTABLE;
                               if Customer.WRITEPERMISSION and Customer.GET("Sell-to Customer No.") then
                                 if "Sell-to County" <> Customer.County then begin
                                   Customer.County := "Sell-to County";
                                   Customer.MODIFY(true);
                                 end;
                             end;
                           END;

                ImplicitType=Text30 }

    { 33  ;3   ;Field     ;
                Name=Sell-to Country/Region Code;
                CaptionML=ENU=Country/Region Code;
                ToolTipML=ENU=Specifies the address country/region.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Sell-to Country/Region Code";
                Editable=CustomerName <> '';
                OnLookup=VAR
                           O365CountryRegion@1000 : Record "O365 Country/Region";
                         BEGIN
                           if PAGE.RUNMODAL(PAGE::"O365 Country/Region List",O365CountryRegion) <> ACTION::LookupOK then
                             exit;

                           "Sell-to Country/Region Code" := O365CountryRegion.Code;
                         END;

                ImplicitType=Code10 }

    { 20  ;1   ;Group     ;
                Name=Invoice Details;
                CaptionML=ENU=Invoice Details;
                GroupType=Group }

    { 26  ;2   ;Field     ;
                Name=Due Date;
                ToolTipML=ENU=Specifies when the sales invoice must be paid.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Due Date";
                Editable=CustomerName <> '';
                OnValidate=BEGIN
                             if "Due Date" < "Document Date" then
                               VALIDATE("Due Date","Document Date");
                           END;

                ImplicitType=Date }

    { 6   ;2   ;Field     ;
                Name=Document Date;
                CaptionML=ENU=Invoice Date;
                ToolTipML=ENU=Specifies when the sales invoice was created.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Document Date";
                Editable=CustomerName <> '';
                OnValidate=VAR
                             PastNotification@1000 : Notification;
                           BEGIN
                             VALIDATE("Posting Date","Document Date");

                             if "Document Date" < WORKDATE then begin
                               PastNotification.ID := CREATEGUID;
                               PastNotification.MESSAGE(DocumentDatePastMsg);
                               PastNotification.SCOPE(NOTIFICATIONSCOPE::LocalScope);
                               PastNotification.SEND;
                             end;
                           END;

                ImplicitType=Date }

    { 19  ;2   ;Field     ;
                Name=Tax Liable;
                CaptionML=ENU=Customer is tax liable;
                ToolTipML=ENU=Specifies if the sales invoice contains sales tax.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Tax Liable";
                Visible=NOT IsUsingVAT;
                Editable=CustomerName <> '';
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;

                ImplicitType=Boolean }

    { 17  ;2   ;Field     ;
                Name=TaxAreaDescription;
                CaptionML=ENU=Customer tax rate;
                ToolTipML=ENU=Specifies the customer's tax area.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                NotBlank=true;
                SourceExpr=TaxAreaDescription;
                Visible=NOT IsUsingVAT;
                Enabled=CustomerName <> '';
                Editable=FALSE;
                OnAssistEdit=VAR
                               TaxArea@1000 : Record "Tax Area";
                             BEGIN
                               if PAGE.RUNMODAL(PAGE::"O365 Tax Area List",TaxArea) = ACTION::LookupOK then begin
                                 VALIDATE("Tax Area Code",TaxArea.Code);
                                 TaxAreaDescription := TaxArea.Description;
                                 CurrPage.UPDATE;
                               end;
                             END;

                ImplicitType=Text50;
                QuickEntry=FALSE }

    { 37  ;2   ;Field     ;
                Name=VAT Registration No.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="VAT Registration No.";
                Visible=IsUsingVAT;
                Editable=(IsUsingVAT AND IsCompanyContact);
                ImplicitType=Text20 }

    { 14  ;1   ;Part      ;
                Name=Lines;
                CaptionML=ENU=Line Items;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SubPageLink="Document Type"=FIELD("Document Type"),
                            "Document No."=FIELD("No.");
                PagePartID="BC O365 Sales Inv. Line Subp.";
                Enabled=CustomerName <> '';
                Editable=CustomerName <> '';
                PartType=Page }

    { 40  ;1   ;Group     ;
                Name=Totals;
                CaptionML=ENU=Totals;
                Visible=NOT InvDiscAmountVisible;
                GroupType=Group }

    { 39  ;2   ;Group     ;
                Name=Group39;
                GroupType=Group }

    { 35  ;3   ;Field     ;
                Name=Amount;
                Lookup=false;
                DrillDown=false;
                CaptionML=ENU=Net Total;
                ToolTipML=ENU=Specifies the total amount on the sales invoice excluding VAT.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Amount;
                AutoFormatType=10;
                AutoFormatExpr=CurrencyFormat;
                ImplicitType=Decimal }

    { 34  ;3   ;Field     ;
                Name=AmountInclVAT;
                Lookup=false;
                DrillDown=false;
                CaptionML=ENU=Total Including VAT;
                ToolTipML=ENU=Specifies the total amount on the sales invoice including VAT.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Amount Including VAT";
                AutoFormatType=10;
                AutoFormatExpr=CurrencyFormat;
                Importance=Promoted;
                Style=Strong;
                StyleExpr=TRUE;
                ImplicitType=Decimal }

    { 36  ;3   ;Field     ;
                Name=DiscountLink;
                DrillDown=true;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=DiscountTxt;
                Enabled=CustomerName <> '';
                Editable=FALSE;
                OnDrillDown=BEGIN
                              if PAGE.RUNMODAL(PAGE::"O365 Sales Invoice Discount",Rec) = ACTION::LookupOK then
                                CurrPage.UPDATE;
                            END;

                ImplicitType=Text;
                ShowCaption=false }

    { 30  ;1   ;Group     ;
                Name=Group30;
                CaptionML=ENU=Totals;
                Visible=InvDiscAmountVisible;
                GroupType=Group }

    { 32  ;2   ;Group     ;
                Name=Group32;
                GroupType=Group }

    { 31  ;3   ;Field     ;
                Name=SubTotalAmount;
                CaptionML=ENU=Subtotal;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=SubTotalAmount;
                AutoFormatType=10;
                AutoFormatExpr=CurrencyFormat;
                Importance=Promoted;
                Editable=FALSE;
                ImplicitType=Decimal }

    { 29  ;3   ;Field     ;
                Name=InvoiceDiscount;
                CaptionML=ENU=Invoice Discount;
                ToolTipML=ENU=Specifies the invoice discount amount. To edit the invoice discount, click on the amount.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=-InvoiceDiscountAmount;
                AutoFormatType=10;
                AutoFormatExpr=CurrencyFormat;
                CaptionClass=GetInvDiscountCaption;
                Importance=Promoted;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              if PAGE.RUNMODAL(PAGE::"O365 Sales Invoice Discount",Rec) = ACTION::LookupOK then
                                CurrPage.UPDATE;
                            END;
                             }

    { 28  ;3   ;Field     ;
                Name=Amount2;
                Lookup=false;
                DrillDown=false;
                CaptionML=ENU=Net Total;
                ToolTipML=ENU=Specifies the total amount on the sales invoice excluding VAT.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Amount;
                AutoFormatType=10;
                AutoFormatExpr=CurrencyFormat;
                ImplicitType=Decimal }

    { 21  ;3   ;Field     ;
                Name=AmountInclVAT2;
                Lookup=false;
                DrillDown=false;
                CaptionML=ENU=Total Including VAT;
                ToolTipML=ENU=Specifies the total amount on the sales invoice including VAT.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Amount Including VAT";
                AutoFormatType=10;
                AutoFormatExpr=CurrencyFormat;
                Importance=Promoted;
                Style=Strong;
                StyleExpr=TRUE;
                ImplicitType=Decimal }

    { 7   ;1   ;Group     ;
                Name=Note for customer;
                CaptionML=ENU=Note for customer;
                GroupType=Group }

    { 27  ;2   ;Field     ;
                Name=WorkDescription;
                CaptionML=ENU=Note for customer;
                ToolTipML=ENU=Specifies the products or service being offered;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=WorkDescription;
                Editable=CurrPageEditable AND (CustomerName <> '');
                MultiLine=true;
                OnValidate=BEGIN
                             SetWorkDescription(WorkDescription);
                           END;

                ImplicitType=Text;
                ShowCaption=false }

    { 13  ;1   ;Field     ;
                Name=NoOfAttachments;
                DrillDown=true;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=NoOfAttachmentsValueTxt;
                Enabled=CustomerName <> '';
                Editable=FALSE;
                OnDrillDown=BEGIN
                              O365SalesInvoiceMgmt.UpdateNoOfAttachmentsLabel(O365SalesAttachmentMgt.EditAttachments(Rec),NoOfAttachmentsValueTxt);
                              CurrPage.UPDATE(false);
                            END;

                ImplicitType=Text;
                ShowCaption=false }

  }
  CODE
  {
    VAR
      O365SalesAttachmentMgt@1006 : Codeunit "O365 Sales Attachment Mgt";
      O365SalesInvoiceMgmt@1023 : Codeunit "O365 Sales Invoice Mgmt";
      CustomerName@1000 : Text[50];
      CustomerEmail@1004 : Text[80];
      WorkDescription@1002 : Text;
      FullAddress@1016 : Text;
      CurrPageEditable@1003 : Boolean;
      IsUsingVAT@6116 : Boolean;
      ForceExit@1012 : Boolean;
      NoOfAttachmentsValueTxt@1011 : Text;
      CurrencyFormat@1013 : Text;
      IsCompanyContact@1090 : Boolean;
      InvDiscAmountVisible@1024 : Boolean;
      InvoiceDiscountAmount@1001 : Decimal;
      SubTotalAmount@1017 : Decimal;
      DiscountTxt@1005 : Text;
      DeleteQst@1009 : TextConst 'ENU=Are you sure?';
      TaxAreaDescription@1018 : Text[50];
      SyncBusinessInfoTxt@1010 : TextConst 'ENU=Dela sync Business Information';
      DocumentDatePastMsg@1008 : TextConst 'ENU=Invoice date is in the past.';
      ViewContactDetailsLbl@1007 : TextConst 'ENU=View contact details';

    PROCEDURE SuppressExitPrompt@5();
    BEGIN
      ForceExit := true;
    END;

    LOCAL PROCEDURE GetInvDiscountCaption@8() : Text;
    BEGIN
      exit(O365SalesInvoiceMgmt.GetInvoiceDiscountCaption("Invoice Discount Amount"));
    END;

    BEGIN
    END.
  }
}

