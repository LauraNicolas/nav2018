OBJECT Codeunit 1268 Export Launcher
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    TableNo="Data Exch. Mapping";
    Permissions=TableData "Data Exch."=rimd;
    OnRun=VAR
            DataExch@1004 : Record "Data Exch.";
            DataExchDef@1006 : Record "Data Exch. Def";
          BEGIN
            if not SourceRecordIsInitialized then
              ERROR(UnknownSourceRecordErr);

            DataExchDef.GET("Data Exch. Def Code");

            CreateDataExch(DataExch,"Data Exch. Def Code","Data Exch. Line Def Code",SourceRecRef.GETVIEW);

            if DataExchDef."Data Handling Codeunit" > 0 then
              CODEUNIT.RUN(DataExchDef."Data Handling Codeunit",Rec);

            if DataExchDef."Validation Codeunit" > 0 then
              CODEUNIT.RUN(DataExchDef."Validation Codeunit",Rec);

            DataExch.ExportFromDataExch(Rec);
          END;

  }
  CODE
  {
    VAR
      SourceRecRef@1001 : RecordRef;
      SourceRecordIsInitialized@1000 : Boolean;
      UnknownSourceRecordErr@1002 : TextConst 'ENU=The source record is unknown. Exporting functionality cannot proceed without defining a source record to work on.';
      UnsupportedSourceRecordTypeErr@1003 : TextConst 'ENU=Only Record, RecordID or RecordRef are supported for initializing the source record. Exporting functionality cannot proceed without defining a source record to work on.';

    LOCAL PROCEDURE CreateDataExch@1(VAR DataExch@1000 : Record "Data Exch.";DataExchDefCode@1001 : Code[20];DataExchLineDefCode@1002 : Code[20];TableFilters@1003 : Text);
    VAR
      TableFiltersOutStream@1004 : OutStream;
    BEGIN
      DataExch.INIT;
      DataExch."Data Exch. Def Code" := DataExchDefCode;
      DataExch."Data Exch. Line Def Code" := DataExchLineDefCode;
      DataExch."Table Filters".CREATEOUTSTREAM(TableFiltersOutStream);
      TableFiltersOutStream.WRITETEXT(TableFilters);
      DataExch.INSERT;
    END;

    [External]
    PROCEDURE SetSourceRecord@2(VAR Source@1000 : Variant);
    VAR
      SourceRecordID@1002 : RecordID;
    BEGIN
      case true of
        Source.ISRECORD:
          SourceRecRef.GETTABLE(Source);
        Source.ISRECORDID:
          begin
            SourceRecordID := Source;
            SourceRecRef := SourceRecordID.GETRECORD;
          end;
        Source.ISRECORDREF:
          SourceRecRef := Source;
        else
          ERROR(UnsupportedSourceRecordTypeErr);
      end;

      SourceRecordIsInitialized := true;
    END;

    BEGIN
    END.
  }
}

