OBJECT Codeunit 1003 Job Task-Indent
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    TableNo="Job Task";
    OnRun=BEGIN
            TESTFIELD("Job No.");
            if not
               CONFIRM(
                 Text000 +
                 Text001 +
                 Text002 +
                 Text003,true)
            then
              exit;
            JT := Rec;
            Indent("Job No.");
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=This function updates the indentation of all the Job Tasks.';
      Text001@1001 : TextConst 'ENU="All Job Tasks between a Begin-Total and the matching End-Total are indented one level. "';
      Text002@1002 : TextConst 'ENU=The Totaling for each End-total is also updated.';
      Text003@1003 : TextConst 'ENU=\\Do you want to indent the Job Tasks?';
      Text004@1004 : TextConst 'ENU=Indenting the Job Tasks #1##########.';
      Text005@1005 : TextConst 'ENU=End-Total %1 is missing a matching Begin-Total.';
      JT@1006 : Record "Job Task";
      Window@1007 : Dialog;
      JTNo@1008 : ARRAY [10] OF Code[20];
      i@1009 : Integer;

    [External]
    PROCEDURE Indent@1(JobNo@1000 : Code[20]);
    BEGIN
      Window.OPEN(Text004);
      JT.SETRANGE("Job No.",JobNo);
      with JT do
        if FIND('-') then
          repeat
            Window.UPDATE(1,"Job Task No.");

            if "Job Task Type" = "Job Task Type"::"End-Total" then begin
              if i < 1 then
                ERROR(
                  Text005,
                  "Job Task No.");
              Totaling := JTNo[i] + '..' + "Job Task No.";
              i := i - 1;
            end;

            Indentation := i;
            MODIFY;

            if "Job Task Type" = "Job Task Type"::"Begin-Total" then begin
              i := i + 1;
              JTNo[i] := "Job Task No.";
            end;
          until NEXT = 0;

      Window.CLOSE;
    END;

    BEGIN
    END.
  }
}

