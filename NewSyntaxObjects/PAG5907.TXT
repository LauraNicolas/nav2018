OBJECT Page 5907 Service Item Worksheet Subform
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    LinksAllowed=false;
    SourceTable="Service Line";
    DelayedInsert=true;
    PageType=ListPart;
    AutoSplitKey=true;
    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  Type := xRec.Type;
                  CLEAR(ShortcutDimCode);
                  VALIDATE("Service Item Line No.",ServItemLineNo);
                END;

    OnInsertRecord=BEGIN
                     "Line No." := GetNextLineNo(xRec,BelowxRec);
                   END;

    OnDeleteRecord=VAR
                     ReserveServLine@1000 : Codeunit "Service Line-Reserve";
                   BEGIN
                     if (Quantity <> 0) and ItemExists("No.") then begin
                       COMMIT;
                       if not ReserveServLine.DeleteLineConfirm(Rec) then
                         exit(false);
                       ReserveServLine.DeleteLine(Rec);
                     end;
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 1903098804;2 ;Action    ;
                      Name=Insert Ext. Texts;
                      AccessByPermission=TableData "Extended Text Header"=R;
                      CaptionML=ENU=Insert &Ext. Texts;
                      ToolTipML=ENU=Insert the extended item description that is set up for the item that is being processed on the line.;
                      ApplicationArea=#Service;
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(true);
                               END;
                                }
      { 1900545204;2 ;Action    ;
                      Name=Insert Starting Fee;
                      CaptionML=ENU=Insert &Starting Fee;
                      ApplicationArea=#Service;
                      Image=InsertStartingFee;
                      OnAction=BEGIN
                                 InsertStartFee;
                               END;
                                }
      { 1902085804;2 ;Action    ;
                      Name=Insert Travel Fee;
                      CaptionML=ENU=Insert &Travel Fee;
                      ApplicationArea=#Service;
                      Image=InsertTravelFee;
                      OnAction=BEGIN
                                 InsertTravelFee;
                               END;
                                }
      { 1903984904;2 ;Action    ;
                      Name=Reserve;
                      CaptionML=ENU=Reserve;
                      ApplicationArea=#Advanced;
                      Image=Reserve;
                      OnAction=BEGIN
                                 FIND;
                                 ShowReservation;
                               END;
                                }
      { 1904320404;2 ;Action    ;
                      Name=Order Tracking;
                      CaptionML=ENU=Order Tracking;
                      ToolTipML=ENU=Tracks the connection of a supply to its corresponding demand. This can help you find the original demand that created a specific production order or purchase order.;
                      ApplicationArea=#Service;
                      Image=OrderTracking;
                      OnAction=BEGIN
                                 FIND;
                                 ShowTracking;
                               END;
                                }
      { 1901742204;2 ;Action    ;
                      Name=&Nonstock Items;
                      AccessByPermission=TableData "Nonstock Item"=R;
                      CaptionML=ENU=&Nonstock Items;
                      ApplicationArea=#Service;
                      Image=NonStockItem;
                      OnAction=BEGIN
                                 ShowNonstock;
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1901652104;2 ;ActionGroup;
                      Name=Item Availability by;
                      CaptionML=ENU=Item Availability by;
                      Image=ItemAvailability }
      { 9       ;3   ;Action    ;
                      Name=Event;
                      CaptionML=ENU=Event;
                      ToolTipML=ENU=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.;
                      ApplicationArea=#Planning;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromServLine(Rec,ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 1903099904;3 ;Action    ;
                      Name=Period;
                      CaptionML=ENU=Period;
                      ToolTipML=ENU=View the projected quantity of the item over time according to time periods, such as day, week, or month.;
                      ApplicationArea=#Planning;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromServLine(Rec,ItemAvailFormsMgt.ByPeriod);
                               END;
                                }
      { 1900546304;3 ;Action    ;
                      Name=Variant;
                      CaptionML=ENU=Variant;
                      ToolTipML=ENU=View or edit the item's variants. Instead of setting up each color of an item as a separate item, you can set up the various colors as variants of the item.;
                      ApplicationArea=#Advanced;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromServLine(Rec,ItemAvailFormsMgt.ByVariant);
                               END;
                                }
      { 1900296704;3 ;Action    ;
                      Name=Location;
                      AccessByPermission=TableData Location=R;
                      CaptionML=ENU=Location;
                      ToolTipML=ENU=View the actual and projected quantity of the item per location.;
                      ApplicationArea=#Location;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromServLine(Rec,ItemAvailFormsMgt.ByLocation);
                               END;
                                }
      { 11      ;3   ;Action    ;
                      Name=BOM Level;
                      CaptionML=ENU=BOM Level;
                      ToolTipML=ENU=View availability figures for items on bills of materials that show how many units of a parent item you can make based on the availability of child items.;
                      ApplicationArea=#Planning;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromServLine(Rec,ItemAvailFormsMgt.ByBOM);
                               END;
                                }
      { 1907981204;2 ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1900545004;2 ;Action    ;
                      Name=Select Item Substitution;
                      AccessByPermission=TableData "Item Substitution"=R;
                      CaptionML=ENU=Select Item Substitution;
                      ToolTipML=ENU=Select another item that has been set up to be traded instead of the original item if it is unavailable.;
                      ApplicationArea=#Service;
                      Image=SelectItemSubstitution;
                      OnAction=BEGIN
                                 SelectItemSubstitution;
                               END;
                                }
      { 1903098604;2 ;Action    ;
                      Name=&Fault/Resol. Codes Relationships;
                      CaptionML=ENU=&Fault/Resol. Codes Relationships;
                      ToolTipML=ENU=View or edit the relationships between fault codes, including the fault, fault area, and symptom codes, as well as resolution codes and service item groups. It displays the existing combinations of these codes for the service item group of the service item from which you accessed the window and the number of occurrences for each one.;
                      ApplicationArea=#Service;
                      Image=FaultDefault;
                      OnAction=BEGIN
                                 SelectFaultResolutionCode;
                               END;
                                }
      { 1907838004;2 ;Action    ;
                      Name=Item &Tracking Lines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      ToolTipML=ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=Order &Promising Line;
                      AccessByPermission=TableData "Order Promising Line"=R;
                      CaptionML=ENU=Order &Promising Line;
                      ApplicationArea=#Planning;
                      OnAction=BEGIN
                                 ShowOrderPromisingLine;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 8   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the type of the service line.;
                ApplicationArea=#Service;
                SourceExpr=Type;
                OnValidate=BEGIN
                             NoOnAfterValidate;
                           END;

                ImplicitType=Option }

    { 10  ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of an item, general ledger account, resource code, cost, or standard text.;
                ApplicationArea=#Service;
                SourceExpr="No.";
                OnValidate=BEGIN
                             NoOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 44  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 2   ;2   ;Field     ;
                Name=Nonstock;
                ToolTipML=ENU=Specifies that the item is a nonstock item.;
                ApplicationArea=#Service;
                SourceExpr=Nonstock;
                Visible=FALSE;
                ImplicitType=Boolean }

    { 20  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the description of an item, resource, cost, or a standard text on the line.;
                ApplicationArea=#Service;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 46  ;2   ;Field     ;
                Name=Work Type Code;
                ToolTipML=ENU=Specifies a code for the type of work performed by the resource registered on this line.;
                ApplicationArea=#Service;
                SourceExpr="Work Type Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 86  ;2   ;Field     ;
                Name=Reserve;
                ToolTipML=ENU=Specifies whether a reservation can be made for items on this line.;
                ApplicationArea=#Service;
                SourceExpr=Reserve;
                Visible=FALSE;
                ImplicitType=Option }

    { 56  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the inventory location from where the items on the line should be taken and where they should be registered.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                OnValidate=BEGIN
                             LocationCodeOnAfterValidate;
                           END;

                ImplicitType=Code10 }

    { 24  ;2   ;Field     ;
                Name=Bin Code;
                ToolTipML=ENU=Specifies the bin where the items are picked or put away.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Service;
                SourceExpr="Unit of Measure Code";
                ImplicitType=Code10 }

    { 90  ;2   ;Field     ;
                Name=Unit of Measure;
                ToolTipML=ENU=Specifies the name of the unit of measure for the item, resource or cost on the line.;
                ApplicationArea=#Service;
                SourceExpr="Unit of Measure";
                Visible=FALSE;
                ImplicitType=Text10 }

    { 36  ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the number of item units, resource hours, cost on the service line.;
                ApplicationArea=#Service;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 88  ;2   ;Field     ;
                Name=Reserved Quantity;
                ToolTipML=ENU=Specifies how many item units on this line have been reserved.;
                ApplicationArea=#Service;
                SourceExpr="Reserved Quantity";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 52  ;2   ;Field     ;
                Name=Fault Reason Code;
                ToolTipML=ENU=Specifies the code of the fault reason for this service line.;
                ApplicationArea=#Service;
                SourceExpr="Fault Reason Code";
                ImplicitType=Code10 }

    { 48  ;2   ;Field     ;
                Name=Fault Area Code;
                ToolTipML=ENU=Specifies the code of the fault area associated with this line.;
                ApplicationArea=#Service;
                SourceExpr="Fault Area Code";
                ImplicitType=Code10 }

    { 50  ;2   ;Field     ;
                Name=Symptom Code;
                ToolTipML=ENU=Specifies the code of the symptom associated with this line.;
                ApplicationArea=#Service;
                SourceExpr="Symptom Code";
                ImplicitType=Code10 }

    { 54  ;2   ;Field     ;
                Name=Fault Code;
                ToolTipML=ENU=Specifies the code of the fault associated with this line.;
                ApplicationArea=#Service;
                SourceExpr="Fault Code";
                ImplicitType=Code10 }

    { 34  ;2   ;Field     ;
                Name=Resolution Code;
                ToolTipML=ENU=Specifies the code of the resolution associated with this line.;
                ApplicationArea=#Service;
                SourceExpr="Resolution Code";
                ImplicitType=Code10 }

    { 74  ;2   ;Field     ;
                Name=Serv. Price Adjmt. Gr. Code;
                ToolTipML=ENU=Specifies the service price adjustment group code that applies to this line.;
                ApplicationArea=#Service;
                SourceExpr="Serv. Price Adjmt. Gr. Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 38  ;2   ;Field     ;
                Name=Unit Price;
                ToolTipML=ENU=Specifies the price per item unit, resource, or cost on the line.;
                ApplicationArea=#Service;
                SourceExpr="Unit Price";
                ImplicitType=Decimal }

    { 6   ;2   ;Field     ;
                Name=Line Discount %;
                ToolTipML=ENU=Specifies the discount defined for a particular group, item, or combination of the two.;
                ApplicationArea=#Service;
                SourceExpr="Line Discount %";
                ImplicitType=Decimal }

    { 12  ;2   ;Field     ;
                Name=Line Discount Amount;
                ToolTipML=ENU=Specifies the discount amount that is granted for the item on the line.;
                ApplicationArea=#Service;
                SourceExpr="Line Discount Amount";
                ImplicitType=Decimal }

    { 42  ;2   ;Field     ;
                Name=Line Discount Type;
                ToolTipML=ENU=Specifies the type of the line discount assigned to this line.;
                ApplicationArea=#Service;
                SourceExpr="Line Discount Type";
                ImplicitType=Option }

    { 40  ;2   ;Field     ;
                Name=Line Amount;
                ToolTipML=ENU=Specifies the value of products on the worksheet line.;
                ApplicationArea=#Service;
                SourceExpr="Line Amount";
                ImplicitType=Decimal }

    { 14  ;2   ;Field     ;
                Name=Exclude Warranty;
                ToolTipML=ENU=Specifies that the warranty discount is excluded on this line.;
                ApplicationArea=#Service;
                SourceExpr="Exclude Warranty";
                ImplicitType=Boolean }

    { 58  ;2   ;Field     ;
                Name=Exclude Contract Discount;
                ToolTipML=ENU=Specifies that the contract discount is excluded for the item, resource, or cost on this line.;
                ApplicationArea=#Service;
                SourceExpr="Exclude Contract Discount";
                ImplicitType=Boolean }

    { 16  ;2   ;Field     ;
                Name=Warranty;
                ToolTipML=ENU=Specifies that a warranty discount is available on this line of type Item or Resource.;
                ApplicationArea=#Service;
                SourceExpr=Warranty;
                ImplicitType=Boolean }

    { 18  ;2   ;Field     ;
                Name=Warranty Disc. %;
                ToolTipML=ENU=Specifies the percentage of the warranty discount that is valid for the items or resources on this line.;
                ApplicationArea=#Service;
                SourceExpr="Warranty Disc. %";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 22  ;2   ;Field     ;
                Name=Contract No.;
                ToolTipML=ENU=Specifies the number of the contract, if the service order originated from a service contract.;
                ApplicationArea=#Service;
                SourceExpr="Contract No.";
                ImplicitType=Code20 }

    { 62  ;2   ;Field     ;
                Name=Contract Disc. %;
                ToolTipML=ENU=Specifies the contract discount percentage that is valid for the items, resources, and costs on this line.;
                ApplicationArea=#Service;
                SourceExpr="Contract Disc. %";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 68  ;2   ;Field     ;
                Name=VAT %;
                ToolTipML=ENU=Specifies the VAT percentage used to calculate Amount Including VAT on this line.;
                ApplicationArea=#Service;
                SourceExpr="VAT %";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 70  ;2   ;Field     ;
                Name=VAT Base Amount;
                ToolTipML=ENU=Specifies the amount that serves as a base for calculating Amount Including VAT.;
                ApplicationArea=#Service;
                SourceExpr="VAT Base Amount";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 72  ;2   ;Field     ;
                Name=Amount Including VAT;
                ToolTipML=ENU=Specifies the net amount, including VAT, for this line.;
                ApplicationArea=#Service;
                SourceExpr="Amount Including VAT";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 78  ;2   ;Field     ;
                Name=Gen. Bus. Posting Group;
                ToolTipML=ENU=Specifies the vendor's or customer's trade type to link transactions made for this business partner with the appropriate general ledger account according to the general posting setup.;
                ApplicationArea=#Service;
                SourceExpr="Gen. Bus. Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 80  ;2   ;Field     ;
                Name=Gen. Prod. Posting Group;
                ToolTipML=ENU=Specifies the item's product type to link transactions made for this item with the appropriate general ledger account according to the general posting setup.;
                ApplicationArea=#Service;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 82  ;2   ;Field     ;
                Name=VAT Bus. Posting Group;
                ToolTipML=ENU=Specifies the code for the VAT business posting group of the customer.;
                ApplicationArea=#Service;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 84  ;2   ;Field     ;
                Name=VAT Prod. Posting Group;
                ToolTipML=ENU=Specifies the VAT product posting group. Links business transactions made for the item, resource, or G/L account with the general ledger, to account for VAT amounts resulting from trade with that record.;
                ApplicationArea=#Service;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 26  ;2   ;Field     ;
                Name=Posting Date;
                ToolTipML=ENU=Specifies the date when the service line should be posted.;
                ApplicationArea=#Service;
                SourceExpr="Posting Date";
                Visible=FALSE;
                OnValidate=BEGIN
                             PostingDateOnAfterValidate;
                           END;

                ImplicitType=Date }

    { 7   ;2   ;Field     ;
                Name=Planned Delivery Date;
                ToolTipML=ENU=Specifies the planned date that the shipment will be delivered at the customer's address.  If the customer requests a delivery date, the program calculates whether the items will be available for delivery on this date. If the items are available, the planned delivery date will be the same as the requested delivery date. If not, the program calculates the date that the items are available for delivery and enters this date in the Planned Delivery Date field.;
                ApplicationArea=#Service;
                SourceExpr="Planned Delivery Date";
                ImplicitType=Date }

    { 31  ;2   ;Field     ;
                Name=Needed by Date;
                ToolTipML=ENU=Specifies the date when you require the item to be available for a service order.;
                ApplicationArea=#Service;
                SourceExpr="Needed by Date";
                ImplicitType=Date }

    { 100 ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 102 ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 104 ;2   ;Field     ;
                Name=ShortcutDimCode[3];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(3),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 106 ;2   ;Field     ;
                Name=ShortcutDimCode[4];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(4),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 108 ;2   ;Field     ;
                Name=ShortcutDimCode[5];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(5),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 110 ;2   ;Field     ;
                Name=ShortcutDimCode[6];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(6),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 112 ;2   ;Field     ;
                Name=ShortcutDimCode[7];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(7),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 28  ;2   ;Field     ;
                Name=ShortcutDimCode[8];
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(8),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot open the window because %1 is %2 in the %3 table.';
      ServMgtSetup@1001 : Record "Service Mgt. Setup";
      ItemAvailFormsMgt@1002 : Codeunit "Item Availability Forms Mgt";
      ServItemLineNo@1005 : Integer;
      ShortcutDimCode@1007 : ARRAY [8] OF Code[20];

    [External]
    PROCEDURE SetValues@1(TempServItemLineNo@1000 : Integer);
    BEGIN
      ServItemLineNo := TempServItemLineNo;
      SETFILTER("Service Item Line No.",'=%1|=%2',0,ServItemLineNo);
    END;

    LOCAL PROCEDURE InsertStartFee@8();
    VAR
      ServOrderMgt@1000 : Codeunit ServOrderManagement;
    BEGIN
      CLEAR(ServOrderMgt);
      if ServOrderMgt.InsertServCost(Rec,1,true) then
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE InsertTravelFee@6();
    VAR
      ServOrderMgt@1000 : Codeunit ServOrderManagement;
    BEGIN
      CLEAR(ServOrderMgt);
      if ServOrderMgt.InsertServCost(Rec,0,true) then
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE InsertExtendedText@7(Unconditionally@1000 : Boolean);
    VAR
      TransferExtendedText@1001 : Codeunit "Transfer Extended Text";
    BEGIN
      if TransferExtendedText.ServCheckIfAnyExtText(Rec,Unconditionally) then begin
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertServExtText(Rec);
      end;
      if TransferExtendedText.MakeUpdate then
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShowReservationEntries@10();
    BEGIN
      ShowReservationEntries(true);
    END;

    LOCAL PROCEDURE SelectFaultResolutionCode@15();
    VAR
      ServItemLine@1000 : Record "Service Item Line";
      FaultResolutionRelation@1001 : Page "Fault/Resol. Cod. Relationship";
    BEGIN
      ServMgtSetup.GET;
      case ServMgtSetup."Fault Reporting Level" of
        ServMgtSetup."Fault Reporting Level"::None:
          ERROR(
            Text000,
            ServMgtSetup.FIELDCAPTION("Fault Reporting Level"),ServMgtSetup."Fault Reporting Level",ServMgtSetup.TABLECAPTION);
      end;
      ServItemLine.GET("Document Type","Document No.","Service Item Line No.");
      CLEAR(FaultResolutionRelation);
      FaultResolutionRelation.SetDocument(DATABASE::"Service Line","Document Type","Document No.","Line No.");
      FaultResolutionRelation.SetFilters("Symptom Code","Fault Code","Fault Area Code",ServItemLine."Service Item Group Code");
      FaultResolutionRelation.RUNMODAL;
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE SelectItemSubstitution@13();
    BEGIN
      ShowItemSub;
      MODIFY;
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(false);

      if (Reserve = Reserve::Always) and
         ("Outstanding Qty. (Base)" <> 0) and
         ("No." <> xRec."No.")
      then begin
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(false);
      end;
    END;

    LOCAL PROCEDURE LocationCodeOnAfterValidate@19034787();
    BEGIN
      if (Reserve = Reserve::Always) and
         ("Outstanding Qty. (Base)" <> 0) and
         ("Location Code" <> xRec."Location Code")
      then begin
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(false);
      end;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      if Type = Type::Item then
        case Reserve of
          Reserve::Always:
            begin
              CurrPage.SAVERECORD;
              AutoReserve;
              CurrPage.UPDATE(false);
            end;
          Reserve::Optional:
            if (Quantity < xRec.Quantity) and (xRec.Quantity > 0) then begin
              CurrPage.SAVERECORD;
              CurrPage.UPDATE(false);
            end;
        end;
    END;

    LOCAL PROCEDURE PostingDateOnAfterValidate@19003005();
    BEGIN
      if (Reserve = Reserve::Always) and
         ("Outstanding Qty. (Base)" <> 0) and
         ("Posting Date" <> xRec."Posting Date")
      then begin
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(false);
      end;
    END;

    BEGIN
    END.
  }
}

