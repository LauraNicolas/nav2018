OBJECT Page 9837 Permission Set by User Group
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Permission Set by User Group;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    LinksAllowed=false;
    SourceTable="Aggregate Permission Set";
    PageType=Worksheet;
    PromotedActionCategoriesML=ENU=New,Process,Report,Browse;
    OnOpenPage=VAR
                 UserGroup@1000 : Record "User Group";
               BEGIN
                 NoOfRecords := UserGroup.COUNT;
                 PermissionPagesMgt.Init(NoOfRecords,ARRAYLEN(UserGroupCodeArr));
               END;

    OnAfterGetRecord=BEGIN
                       FindUserGroups;
                       PermissionEditable := ISNULLGUID("App ID");
                     END;

    OnAfterGetCurrRecord=BEGIN
                           FindUserGroups;
                         END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      Name=PermissionActions;
                      CaptionML=ENU=Permissions;
                      ActionContainerType=RelatedInformation }
      { 6       ;1   ;Action    ;
                      Name=Permissions;
                      ShortCutKey=Shift+Ctrl+p;
                      CaptionML=ENU=Permissions;
                      ToolTipML=ENU=View or edit which feature objects that users need to access and set up the related permissions in permission sets that you can assign to the users of the database.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page Permissions;
                      RunPageLink="Role ID"=FIELD("Role ID");
                      Promoted=true;
                      Enabled=PermissionEditable;
                      PromotedIsBig=true;
                      Image=Permission;
                      PromotedCategory=Process }
      { 9       ;    ;ActionContainer;
                      Name=ActionContainer9;
                      ActionContainerType=ActionItems }
      { 7       ;1   ;Action    ;
                      Name=AllColumnsLeft;
                      CaptionML=ENU=All Columns Left;
                      ToolTipML=ENU=Jump to the left-most column.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PreviousSet;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 PermissionPagesMgt.AllColumnsLeft;
                               END;
                                }
      { 15      ;1   ;Action    ;
                      Name=ColumnLeft;
                      CaptionML=ENU=Column Left;
                      ToolTipML=ENU=Jump one column to the left.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PreviousRecord;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 PermissionPagesMgt.ColumnLeft;
                               END;
                                }
      { 16      ;1   ;Action    ;
                      Name=ColumnRight;
                      CaptionML=ENU=Column Right;
                      ToolTipML=ENU=Jump one column to the right.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=NextRecord;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 PermissionPagesMgt.ColumnRight;
                               END;
                                }
      { 25      ;1   ;Action    ;
                      Name=AllColumnsRight;
                      CaptionML=ENU=All Columns Right;
                      ToolTipML=ENU=Jump to the right-most column.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=NextSet;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 PermissionPagesMgt.AllColumnsRight;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                CaptionML=ENU=Permission Set;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=Role ID;
                ToolTipML=ENU=Specifies a profile. The profile determines the layout of the home page.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Role ID";
                Editable=FALSE;
                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Name;
                ToolTipML=ENU=Specifies the name of the record.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name;
                Editable=FALSE;
                ImplicitType=Text30 }

    { 27  ;2   ;Field     ;
                Name=App ID;
                CaptionML=ENU=Extension ID;
                ToolTipML=ENU=Specifies the unique identifier for the extension. A unique identifier will be generated if a value is not provided.;
                ApplicationArea=#Advanced;
                SourceExpr="App ID";
                Visible=False;
                ImplicitType=GUID }

    { 8   ;2   ;Field     ;
                Name=App Name;
                CaptionML=ENU=Extension Name;
                ToolTipML=ENU=Specifies the name of an extension.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="App Name";
                ImplicitType=Text250 }

    { 22  ;2   ;Field     ;
                Name=AllUsersHavePermission;
                CaptionML=ENU=All User Groups;
                ToolTipML=ENU=Specifies if the user is a member of all user groups.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AllGroupsHavePermission;
                OnValidate=BEGIN
                             if AllGroupsHavePermission then
                               if not CONFIRM(AllUserGrpGetsPermissionQst) then
                                 ERROR('');

                             SetColumnPermission(0,AllGroupsHavePermission);
                             CurrPage.UPDATE(false);
                           END;

                ImplicitType=Boolean }

    { 11  ;2   ;Field     ;
                Name=Column1;
                ToolTipML=ENU=Specifies if the user has this permission set.;
                ApplicationArea=#All;
                SourceExpr=UserGroupHasPermissionSet[1];
                CaptionClass='3,' + UserGroupCodeArr[1];
                Visible=NoOfRecords >= 1;
                OnValidate=BEGIN
                             SetColumnPermission(1,UserGroupHasPermissionSet[1]);
                           END;
                            }

    { 12  ;2   ;Field     ;
                Name=Column2;
                ToolTipML=ENU=Specifies if the user has this permission set.;
                ApplicationArea=#All;
                SourceExpr=UserGroupHasPermissionSet[2];
                CaptionClass='3,' + UserGroupCodeArr[2];
                Visible=NoOfRecords >= 2;
                OnValidate=BEGIN
                             SetColumnPermission(2,UserGroupHasPermissionSet[2]);
                           END;
                            }

    { 13  ;2   ;Field     ;
                Name=Column3;
                ToolTipML=ENU=Specifies if the user has this permission set.;
                ApplicationArea=#All;
                SourceExpr=UserGroupHasPermissionSet[3];
                CaptionClass='3,' + UserGroupCodeArr[3];
                Visible=NoOfRecords >= 3;
                OnValidate=BEGIN
                             SetColumnPermission(3,UserGroupHasPermissionSet[3]);
                           END;
                            }

    { 14  ;2   ;Field     ;
                Name=Column4;
                ToolTipML=ENU=Specifies if the user has this permission set.;
                ApplicationArea=#All;
                SourceExpr=UserGroupHasPermissionSet[4];
                CaptionClass='3,' + UserGroupCodeArr[4];
                Visible=NoOfRecords >= 4;
                OnValidate=BEGIN
                             SetColumnPermission(4,UserGroupHasPermissionSet[4]);
                           END;
                            }

    { 5   ;2   ;Field     ;
                Name=Column5;
                ToolTipML=ENU=Specifies if the user has this permission set.;
                ApplicationArea=#All;
                SourceExpr=UserGroupHasPermissionSet[5];
                CaptionClass='3,' + UserGroupCodeArr[5];
                Visible=NoOfRecords >= 5;
                OnValidate=BEGIN
                             SetColumnPermission(5,UserGroupHasPermissionSet[5]);
                           END;
                            }

    { 17  ;2   ;Field     ;
                Name=Column6;
                ToolTipML=ENU=Specifies if the user has this permission set.;
                ApplicationArea=#All;
                SourceExpr=UserGroupHasPermissionSet[6];
                CaptionClass='3,' + UserGroupCodeArr[6];
                Visible=NoOfRecords >= 6;
                OnValidate=BEGIN
                             SetColumnPermission(6,UserGroupHasPermissionSet[6]);
                           END;
                            }

    { 18  ;2   ;Field     ;
                Name=Column7;
                ToolTipML=ENU=Specifies if the user has this permission set.;
                ApplicationArea=#All;
                SourceExpr=UserGroupHasPermissionSet[7];
                CaptionClass='3,' + UserGroupCodeArr[7];
                Visible=NoOfRecords >= 7;
                OnValidate=BEGIN
                             SetColumnPermission(7,UserGroupHasPermissionSet[7]);
                           END;
                            }

    { 19  ;2   ;Field     ;
                Name=Column8;
                ToolTipML=ENU=Specifies if the user has this permission set.;
                ApplicationArea=#All;
                SourceExpr=UserGroupHasPermissionSet[8];
                CaptionClass='3,' + UserGroupCodeArr[8];
                Visible=NoOfRecords >= 8;
                OnValidate=BEGIN
                             SetColumnPermission(8,UserGroupHasPermissionSet[8]);
                           END;
                            }

    { 20  ;2   ;Field     ;
                Name=Column9;
                ToolTipML=ENU=Specifies if the user has this permission set.;
                ApplicationArea=#All;
                SourceExpr=UserGroupHasPermissionSet[9];
                CaptionClass='3,' + UserGroupCodeArr[9];
                Visible=NoOfRecords >= 9;
                OnValidate=BEGIN
                             SetColumnPermission(9,UserGroupHasPermissionSet[9]);
                           END;
                            }

    { 21  ;2   ;Field     ;
                Name=Column10;
                ToolTipML=ENU=Specifies if the user has this permission set.;
                ApplicationArea=#All;
                SourceExpr=UserGroupHasPermissionSet[10];
                CaptionClass='3,' + UserGroupCodeArr[10];
                Visible=NoOfRecords >= 10;
                OnValidate=BEGIN
                             SetColumnPermission(10,UserGroupHasPermissionSet[10]);
                           END;
                            }

    { 24  ;    ;Container ;
                Name=Container24;
                ContainerType=FactBoxArea }

    { 23  ;1   ;Part      ;
                Name=Permissions;
                CaptionML=ENU=Permissions;
                ApplicationArea=#Basic,#Suite;
                SubPageLink="Role ID"=FIELD("Role ID");
                PagePartID="Permissions FactBox";
                PartType=Page }

    { 26  ;1   ;Part      ;
                Name=Tenant Permissions;
                CaptionML=ENU=Tenant Permissions;
                ApplicationArea=#Basic,#Suite;
                SubPageLink="Role ID"=FIELD("Role ID"),
                            "App ID"=FIELD("App ID");
                PagePartID="Tenant Permissions FactBox";
                Editable=FALSE;
                PartType=Page }

  }
  CODE
  {
    VAR
      PermissionPagesMgt@1006 : Codeunit "Permission Pages Mgt.";
      UserGroupCodeArr@1000 : ARRAY [10] OF Code[20];
      UserGroupHasPermissionSet@1001 : ARRAY [10] OF Boolean;
      AllGroupsHavePermission@1004 : Boolean;
      NoOfRecords@1003 : Integer;
      PermissionEditable@1002 : Boolean;
      AllUserGrpGetsPermissionQst@1005 : TextConst 'ENU=Are you sure you want to add this permission set to all user groups?';

    LOCAL PROCEDURE FindUserGroups@5();
    VAR
      UserGroup@1000 : Record "User Group";
      i@1001 : Integer;
    BEGIN
      CLEAR(UserGroupCodeArr);
      CLEAR(UserGroupHasPermissionSet);
      AllGroupsHavePermission := true;
      if UserGroup.FINDSET then
        repeat
          i += 1;
          if PermissionPagesMgt.IsInColumnsRange(i) then begin
            UserGroupCodeArr[i - PermissionPagesMgt.GetOffset] := UserGroup.Code;
            UserGroupHasPermissionSet[i - PermissionPagesMgt.GetOffset] := UserGroupHasPermission(Rec,UserGroup);
            AllGroupsHavePermission := AllGroupsHavePermission and UserGroupHasPermissionSet[i - PermissionPagesMgt.GetOffset];
          end else
            if AllGroupsHavePermission then
              AllGroupsHavePermission := UserGroupHasPermission(Rec,UserGroup);
        until (UserGroup.NEXT = 0) or (PermissionPagesMgt.IsPastColumnRange(i) and not AllGroupsHavePermission);
    END;

    LOCAL PROCEDURE UserGroupHasPermission@14(VAR AggregatePermissionSet@1001 : Record "Aggregate Permission Set";VAR UserGroup@1000 : Record "User Group") : Boolean;
    VAR
      UserGroupPermissionSet@1002 : Record "User Group Permission Set";
    BEGIN
      UserGroupPermissionSet.SETRANGE("User Group Code",UserGroup.Code);
      UserGroupPermissionSet.SETRANGE("Role ID",AggregatePermissionSet."Role ID");
      exit(not UserGroupPermissionSet.ISEMPTY);
    END;

    LOCAL PROCEDURE SetColumnPermission@1(ColumnNo@1001 : Integer;UserHasPermission@1003 : Boolean);
    VAR
      UserGroup@1000 : Record "User Group";
    BEGIN
      if ColumnNo > 0 then begin
        SetUserGroupPermission(UserGroupCodeArr[ColumnNo],UserHasPermission);
        AllGroupsHavePermission := AllGroupsHavePermission and UserHasPermission;
      end else
        if UserGroup.FINDSET then
          repeat
            SetUserGroupPermission(UserGroup.Code,UserHasPermission);
          until UserGroup.NEXT = 0;
    END;

    LOCAL PROCEDURE SetUserGroupPermission@7(UserGroupCode@1001 : Code[20];UserGroupHasPermission@1003 : Boolean);
    VAR
      UserGroupPermissionSet@1002 : Record "User Group Permission Set";
    BEGIN
      if UserGroupPermissionSet.GET(UserGroupCode,"Role ID",Scope,"App ID") then begin
        if not UserGroupHasPermission then
          UserGroupPermissionSet.DELETE(true);
        exit;
      end;
      if not UserGroupHasPermission then
        exit;
      UserGroupPermissionSet.INIT;
      UserGroupPermissionSet."User Group Code" := UserGroupCode;
      UserGroupPermissionSet."Role ID" := "Role ID";
      UserGroupPermissionSet."App ID" := "App ID";
      UserGroupPermissionSet.Scope := Scope;
      UserGroupPermissionSet.INSERT(true);
    END;

    BEGIN
    END.
  }
}

