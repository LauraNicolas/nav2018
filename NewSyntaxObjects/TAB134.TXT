OBJECT Table 134 Posted Docs. With No Inc. Buf.
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Posted Docs. With No Inc. Buf.;
  }
  FIELDS
  {
    { 1   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 2   ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 3   ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 4   ;   ;First Posting Description;Text50   ;CaptionML=ENU=First Posting Description }
    { 5   ;   ;Incoming Document No.;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Incoming Document"."Entry No." WHERE ("Document No."=FIELD("Document No."),
                                                                                                             "Posting Date"=FIELD("Posting Date")));
                                                   CaptionML=ENU=Incoming Document No. }
    { 8   ;   ;External Document No.;Code35       ;CaptionML=ENU=External Document No. }
    { 9   ;   ;Debit Amount        ;Decimal       ;CaptionML=ENU=Debit Amount }
    { 10  ;   ;Credit Amount       ;Decimal       ;CaptionML=ENU=Credit Amount }
    { 11  ;   ;G/L Account No. Filter;Code20      ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=G/L Account No. Filter }
  }
  KEYS
  {
    {    ;"Line No."                              ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      OnlyFirst1000Msg@1000 : TextConst 'ENU=There are more than 1000 document numbers within the filter. Only the first 1000 are shown. Narrow your filter to get fewer document numbers.';
      AlreadyAssignedIncomingDocErr@1002 : TextConst 'ENU=This document no. and date already has an incoming document.';
      AlreadyIncomingDocErr@1003 : TextConst '@@@="%1=document type, %2=document no., e.g. Invoice 1234.";ENU=The specified incoming document no. has already been used for %1 %2.';

    [External]
    PROCEDURE GetDocNosWithoutIncomingDoc@1(VAR PostedDocsWithNoIncBuf@1000 : Record "Posted Docs. With No Inc. Buf.";DateFilter@1007 : Text;DocNoFilter@1006 : Code[250];GLAccFilter@1003 : Code[250];ExternalDocNoFilter@1008 : Code[250]);
    VAR
      PostedDocsWithNoIncDocQry@1001 : Query "Posted Docs. With No Inc. Doc.";
      NextNo@1002 : Integer;
      TableFilters@1004 : Text;
    BEGIN
      TableFilters := PostedDocsWithNoIncBuf.GETVIEW;
      PostedDocsWithNoIncBuf.RESET;
      PostedDocsWithNoIncBuf.DELETEALL;
      PostedDocsWithNoIncBuf.INIT;
      if DateFilter <> '' then
        PostedDocsWithNoIncDocQry.SETFILTER(PostingDate,DateFilter);

      if DocNoFilter <> '' then
        PostedDocsWithNoIncDocQry.SETFILTER(DocumentNo,DocNoFilter);

      if GLAccFilter <> '' then
        PostedDocsWithNoIncDocQry.SETFILTER(GLAccount,GLAccFilter);

      if ExternalDocNoFilter <> '' then
        PostedDocsWithNoIncDocQry.SETFILTER(ExternalDocumentNo,ExternalDocNoFilter);

      if PostedDocsWithNoIncDocQry.OPEN then
        while PostedDocsWithNoIncDocQry.READ do begin
          NextNo += 1;
          if NextNo >= 1000 then begin
            MESSAGE(OnlyFirst1000Msg);
            exit;
          end;
          PostedDocsWithNoIncBuf."Line No." := NextNo;
          PostedDocsWithNoIncBuf."Document No." := PostedDocsWithNoIncDocQry.DocumentNo;
          PostedDocsWithNoIncBuf."Posting Date" := PostedDocsWithNoIncDocQry.PostingDate;
          PostedDocsWithNoIncBuf."First Posting Description" :=
            GetFirstPostingDescription(PostedDocsWithNoIncBuf."Document No.",PostedDocsWithNoIncBuf."Posting Date",GLAccFilter);
          PostedDocsWithNoIncBuf."External Document No." := PostedDocsWithNoIncDocQry.ExternalDocumentNo;
          PostedDocsWithNoIncBuf."Debit Amount" := PostedDocsWithNoIncDocQry.DebitAmount;
          PostedDocsWithNoIncBuf."Credit Amount" := PostedDocsWithNoIncDocQry.CreditAmount;
          PostedDocsWithNoIncBuf.INSERT;
        end;
      PostedDocsWithNoIncBuf.RESET;
      PostedDocsWithNoIncBuf.SETVIEW(TableFilters);
    END;

    [External]
    PROCEDURE UpdateIncomingDocuments@2();
    VAR
      IncomingDocument@1000 : Record "Incoming Document";
      PostedDocsWithNoIncBuf@1001 : Record "Posted Docs. With No Inc. Buf.";
      IncomingDocuments@1002 : Page "Incoming Documents";
      IsPosted@1003 : Boolean;
    BEGIN
      CALCFIELDS("Incoming Document No.");
      if "Incoming Document No." > 0 then
        ERROR(AlreadyAssignedIncomingDocErr);
      PostedDocsWithNoIncBuf := Rec;
      IncomingDocument.SETRANGE(Posted,false);
      IncomingDocuments.SETTABLEVIEW(IncomingDocument);
      IncomingDocuments.LOOKUPMODE(true);
      if IncomingDocuments.RUNMODAL = ACTION::LookupOK then begin
        IncomingDocuments.GETRECORD(IncomingDocument);
        CheckIfAssignedToUnpostedDoc(IncomingDocument."Entry No.");
        CODEUNIT.RUN(CODEUNIT::"Release Incoming Document",IncomingDocument);
        IncomingDocument.SetPostedDocFields("Posting Date","Document No.");
        IncomingDocument."Document Type" := IncomingDocument.GetPostedDocType("Posting Date","Document No.",IsPosted);
      end;
      Rec := PostedDocsWithNoIncBuf;
      if FIND('=<>') then;
    END;

    LOCAL PROCEDURE GetFirstPostingDescription@3(DocumentNo@1000 : Code[20];PostingDate@1001 : Date;GLAccFilter@1003 : Text) : Text[50];
    VAR
      GLEntry@1002 : Record "G/L Entry";
    BEGIN
      if GLAccFilter <> '' then
        GLEntry.SETFILTER("G/L Account No.",GLAccFilter);
      GLEntry.SETRANGE("Document No.",DocumentNo);
      GLEntry.SETRANGE("Posting Date",PostingDate);
      GLEntry.SETFILTER(Description,'<>%1','');
      if GLEntry.FINDFIRST then
        exit(GLEntry.Description);
      exit('');
    END;

    LOCAL PROCEDURE CheckIfAssignedToUnpostedDoc@5(IncomingDocEntryNo@1000 : Integer);
    VAR
      SalesHeader@1001 : Record "Sales Header";
      PurchaseHeader@1002 : Record "Purchase Header";
      GenJournalLine@1003 : Record "Gen. Journal Line";
    BEGIN
      PurchaseHeader.SETRANGE("Incoming Document Entry No.",IncomingDocEntryNo);
      if PurchaseHeader.FINDFIRST then
        ERROR(AlreadyIncomingDocErr,PurchaseHeader."Document Type",PurchaseHeader."No.");
      SalesHeader.SETRANGE("Incoming Document Entry No.",IncomingDocEntryNo);
      if SalesHeader.FINDFIRST then
        ERROR(AlreadyIncomingDocErr,SalesHeader."Document Type",SalesHeader."No.");
      GenJournalLine.SETRANGE("Incoming Document Entry No.",IncomingDocEntryNo);
      if GenJournalLine.FINDFIRST then
        ERROR(AlreadyIncomingDocErr,GenJournalLine.FIELDCAPTION("Journal Batch Name"),GenJournalLine."Journal Batch Name");
    END;

    BEGIN
    END.
  }
}

