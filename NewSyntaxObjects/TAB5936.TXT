OBJECT Table 5936 Service Document Register
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Document Register;
    LookupPageID="Service Document Registers";
    DrillDownPageID="Service Document Registers";
  }
  FIELDS
  {
    { 1   ;   ;Source Document Type;Option        ;CaptionML=ENU=Source Document Type;
                                                   OptionCaptionML=ENU=Order,Contract;
                                                   OptionString=Order,Contract }
    { 2   ;   ;Source Document No. ;Code20        ;CaptionML=ENU=Source Document No. }
    { 3   ;   ;Destination Document Type;Option   ;CaptionML=ENU=Destination Document Type;
                                                   OptionCaptionML=ENU=Invoice,Credit Memo,Posted Invoice,Posted Credit Memo;
                                                   OptionString=Invoice,"Credit Memo","Posted Invoice","Posted Credit Memo" }
    { 4   ;   ;Destination Document No.;Code20    ;CaptionML=ENU=Destination Document No. }
  }
  KEYS
  {
    {    ;"Source Document Type","Source Document No.","Destination Document Type","Destination Document No.";
                                                   Clustered=true }
    {    ;"Destination Document Type","Destination Document No." }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE InsertServSalesDocument@2(ServDocType@1000 : 'Order,Contract';ServDocNo@1001 : Code[20];SalesDocType@1002 : 'Invoice,"Credit Memo","Posted Invoice","Posted Credit Memo"';SalesDocNo@1003 : Code[20]);
    VAR
      ServDocReg@1004 : Record "Service Document Register";
    BEGIN
      if not GET(ServDocType,ServDocNo,SalesDocType,SalesDocNo) then begin
        ServDocReg.INIT;
        ServDocReg."Source Document Type" := ServDocType;
        ServDocReg."Source Document No." := ServDocNo;
        ServDocReg."Destination Document Type" := SalesDocType;
        ServDocReg."Destination Document No." := SalesDocNo;
        if ServDocReg.INSERT then;
      end;
    END;

    [External]
    PROCEDURE PostServSalesDocument@1(SalesDocType@1000 : '"Sales Invoice","Posted Sales Invoice","Credit Memo","Posted Credit Memo"';SalesDocNo@1001 : Code[20];InvoiceNo@1002 : Code[20]);
    VAR
      ServDocReg@1003 : Record "Service Document Register";
      PostedServDocReg@1004 : Record "Service Document Register";
    BEGIN
      ServDocReg.RESET;
      ServDocReg.SETCURRENTKEY("Destination Document Type","Destination Document No.");
      ServDocReg.SETRANGE("Destination Document Type",SalesDocType);
      ServDocReg.SETRANGE("Destination Document No.",SalesDocNo);
      if ServDocReg.FIND('-') then
        repeat
          PostedServDocReg := ServDocReg;
          case PostedServDocReg."Destination Document Type" of
            PostedServDocReg."Destination Document Type"::Invoice:
              PostedServDocReg."Destination Document Type" := PostedServDocReg."Destination Document Type"::"Posted Invoice";
            PostedServDocReg."Destination Document Type"::"Credit Memo":
              PostedServDocReg."Destination Document Type" := PostedServDocReg."Destination Document Type"::"Posted Credit Memo";
          end;
          PostedServDocReg."Destination Document No." := InvoiceNo;
          PostedServDocReg.INSERT;
          ServDocReg.DELETE;
        until ServDocReg.NEXT = 0;
    END;

    [External]
    PROCEDURE ServiceDocument@3(SalesDocType@1000 : 'Quote,Order,Invoice,"Credit Memo","Blanket Order"';SalesDocNo@1001 : Code[20];VAR ServTable@1002 : Integer;VAR ServDocNo@1003 : Code[20]) : Boolean;
    VAR
      ServDocReg@1004 : Record "Service Document Register";
    BEGIN
      ServTable := 0;
      case SalesDocType of
        SalesDocType::Invoice:
          begin
            CLEAR(ServDocReg);
            ServDocReg.SETCURRENTKEY("Destination Document Type","Destination Document No.");
            ServDocReg.SETRANGE("Destination Document Type",ServDocReg."Destination Document Type"::Invoice);
            ServDocReg.SETRANGE("Destination Document No.",SalesDocNo);
            if ServDocReg.FINDFIRST then
              case ServDocReg."Source Document Type" of
                ServDocReg."Source Document Type"::Order:
                  begin
                    ServTable := DATABASE::"Service Header";
                    ServDocNo := ServDocReg."Source Document No.";
                  end;
                ServDocReg."Source Document Type"::Contract:
                  begin
                    ServTable := DATABASE::"Service Contract Header";
                    ServDocNo := ServDocReg."Source Document No.";
                  end;
              end;
          end;
        SalesDocType::"Credit Memo":
          begin
            CLEAR(ServDocReg);
            ServDocReg.SETCURRENTKEY("Destination Document Type","Destination Document No.");
            ServDocReg.SETRANGE("Destination Document Type",ServDocReg."Destination Document Type"::"Credit Memo");
            ServDocReg.SETRANGE("Destination Document No.",SalesDocNo);
            if ServDocReg.FINDFIRST then
              case ServDocReg."Source Document Type" of
                ServDocReg."Source Document Type"::Order:
                  begin
                    ServTable := DATABASE::"Service Header";
                    ServDocNo := ServDocReg."Source Document No.";
                  end;
                ServDocReg."Source Document Type"::Contract:
                  begin
                    ServTable := DATABASE::"Service Contract Header";
                    ServDocNo := ServDocReg."Source Document No.";
                  end;
              end;
          end;
      end;

      exit(ServTable <> 0)
    END;

    BEGIN
    END.
  }
}

