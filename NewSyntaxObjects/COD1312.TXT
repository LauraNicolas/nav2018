OBJECT Codeunit 1312 Vendor Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [External]
    PROCEDURE CalcAmountsOnPostedInvoices@1(VendNo@1000 : Code[20];VAR RecCount@1001 : Integer) : Decimal;
    VAR
      VendorLedgerEntry@1002 : Record "Vendor Ledger Entry";
    BEGIN
      exit(CalcAmountsOnPostedDocs(VendNo,RecCount,VendorLedgerEntry."Document Type"::Invoice));
    END;

    [External]
    PROCEDURE CalcAmountsOnPostedCrMemos@2(VendNo@1001 : Code[20];VAR RecCount@1000 : Integer) : Decimal;
    VAR
      VendorLedgerEntry@1002 : Record "Vendor Ledger Entry";
    BEGIN
      exit(CalcAmountsOnPostedDocs(VendNo,RecCount,VendorLedgerEntry."Document Type"::"Credit Memo"));
    END;

    [External]
    PROCEDURE CalcAmountsOnPostedOrders@3(VendNo@1001 : Code[20];VAR RecCount@1000 : Integer) : Decimal;
    VAR
      VendorLedgerEntry@1002 : Record "Vendor Ledger Entry";
    BEGIN
      exit(CalcAmountsOnPostedDocs(VendNo,RecCount,VendorLedgerEntry."Document Type"::" "));
    END;

    [External]
    PROCEDURE CalcAmountsOnUnpostedInvoices@4(VendNo@1001 : Code[20];VAR RecCount@1000 : Integer) : Decimal;
    VAR
      VendorLedgerEntry@1002 : Record "Vendor Ledger Entry";
    BEGIN
      exit(CalcAmountsOnUnpostedDocs(VendNo,RecCount,VendorLedgerEntry."Document Type"::Invoice));
    END;

    [External]
    PROCEDURE CalcAmountsOnUnpostedCrMemos@5(VendNo@1001 : Code[20];VAR RecCount@1000 : Integer) : Decimal;
    VAR
      VendorLedgerEntry@1002 : Record "Vendor Ledger Entry";
    BEGIN
      exit(CalcAmountsOnUnpostedDocs(VendNo,RecCount,VendorLedgerEntry."Document Type"::"Credit Memo"));
    END;

    [External]
    PROCEDURE DrillDownOnPostedInvoices@20(VendNo@1001 : Code[20]);
    VAR
      PurchInvHeader@1000 : Record "Purch. Inv. Header";
    BEGIN
      with PurchInvHeader do begin
        SETRANGE("Buy-from Vendor No.",VendNo);
        SETFILTER("Posting Date",GetCurrentYearFilter);

        PAGE.RUN(PAGE::"Posted Purchase Invoices",PurchInvHeader);
      end;
    END;

    [External]
    PROCEDURE DrillDownOnPostedCrMemo@8(VendNo@1001 : Code[20]);
    VAR
      PurchCrMemoHdr@1000 : Record "Purch. Cr. Memo Hdr.";
    BEGIN
      with PurchCrMemoHdr do begin
        SETRANGE("Buy-from Vendor No.",VendNo);
        SETFILTER("Posting Date",GetCurrentYearFilter);

        PAGE.RUN(PAGE::"Posted Purchase Credit Memos",PurchCrMemoHdr);
      end;
    END;

    [External]
    PROCEDURE DrillDownOnPostedOrders@19(VendNo@1001 : Code[20]);
    VAR
      PurchaseLine@1000 : Record "Purchase Line";
    BEGIN
      with PurchaseLine do begin
        SETRANGE("Buy-from Vendor No.",VendNo);
        SETRANGE("Document Type","Document Type"::Order);
        SETFILTER("Order Date",GetCurrentYearFilter);

        PAGE.RUN(PAGE::"Purchase Orders",PurchaseLine);
      end;
    END;

    [External]
    PROCEDURE DrillDownOnOutstandingInvoices@15(VendNo@1001 : Code[20]);
    VAR
      PurchaseHeader@1000 : Record "Purchase Header";
      PurchaseLine@1002 : Record "Purchase Line";
    BEGIN
      SetFilterForUnpostedLines(PurchaseLine,VendNo,PurchaseHeader."Document Type"::Invoice);
      PAGE.RUN(PAGE::"Purchase Invoices",PurchaseHeader);
    END;

    [External]
    PROCEDURE DrillDownOnOutstandingCrMemos@14(VendNo@1001 : Code[20]);
    VAR
      PurchaseHeader@1000 : Record "Purchase Header";
      PurchaseLine@1002 : Record "Purchase Line";
    BEGIN
      SetFilterForUnpostedLines(PurchaseLine,VendNo,PurchaseHeader."Document Type"::"Credit Memo");
      PAGE.RUN(PAGE::"Purchase Credit Memos",PurchaseHeader);
    END;

    LOCAL PROCEDURE CalcAmountsOnPostedDocs@6(VendNo@1001 : Code[20];VAR RecCount@1000 : Integer;DocType@1002 : Integer) : Decimal;
    VAR
      VendLedgEntry@1003 : Record "Vendor Ledger Entry";
    BEGIN
      with VendLedgEntry do begin
        SetFilterForPostedDocs(VendLedgEntry,VendNo,DocType);
        RecCount := COUNT;
        CALCSUMS("Purchase (LCY)");
        exit("Purchase (LCY)");
      end;
    END;

    LOCAL PROCEDURE CalcAmountsOnUnpostedDocs@7(VendNo@1001 : Code[20];VAR RecCount@1000 : Integer;DocType@1002 : Integer) : Decimal;
    VAR
      PurchaseLine@1007 : Record "Purchase Line";
      Result@1006 : Decimal;
      VAT@1005 : Decimal;
      OutstandingAmount@1004 : Decimal;
      OldDocumentNo@1003 : Code[20];
    BEGIN
      RecCount := 0;
      Result := 0;

      SetFilterForUnpostedLines(PurchaseLine,VendNo,DocType);
      with PurchaseLine do begin
        if FINDSET then
          repeat
            case "Document Type" of
              "Document Type"::Invoice:
                OutstandingAmount := "Outstanding Amount (LCY)";
              "Document Type"::"Credit Memo":
                OutstandingAmount := -"Outstanding Amount (LCY)";
            end;
            VAT := 100 + "VAT %";
            Result += OutstandingAmount * 100 / VAT;

            if OldDocumentNo <> "Document No." then begin
              OldDocumentNo := "Document No.";
              RecCount += 1;
            end;
          until NEXT = 0;
      end;
      exit(ROUND(Result));
    END;

    LOCAL PROCEDURE SetFilterForUnpostedLines@9(VAR PurchaseLine@1003 : Record "Purchase Line";VendNo@1002 : Code[20];DocumentType@1000 : Integer);
    BEGIN
      with PurchaseLine do begin
        SETRANGE("Buy-from Vendor No.",VendNo);

        if DocumentType = -1 then
          SETFILTER("Document Type",'%1|%2',"Document Type"::Invoice,"Document Type"::"Credit Memo")
        else
          SETRANGE("Document Type",DocumentType);
      end;
    END;

    LOCAL PROCEDURE SetFilterForPostedDocs@27(VAR VendLedgEntry@1002 : Record "Vendor Ledger Entry";VendNo@1001 : Code[20];DocumentType@1000 : Integer);
    BEGIN
      with VendLedgEntry do begin
        SETRANGE("Buy-from Vendor No.",VendNo);
        SETFILTER("Posting Date",GetCurrentYearFilter);
        SETRANGE("Document Type",DocumentType);
      end;
    END;

    [External]
    PROCEDURE GetCurrentYearFilter@10() : Text[30];
    VAR
      DateFilterCalc@1002 : Codeunit "DateFilter-Calc";
      CustDateFilter@1001 : Text[30];
      CustDateName@1000 : Text[30];
    BEGIN
      DateFilterCalc.CreateFiscalYearFilter(CustDateFilter,CustDateName,WORKDATE,0);
      exit(CustDateFilter);
    END;

    BEGIN
    END.
  }
}

