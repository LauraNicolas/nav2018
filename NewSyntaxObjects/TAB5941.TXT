OBJECT Table 5941 Service Item Component
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnModify=BEGIN
               if Active and (Type <> xRec.Type) then begin
                 ServItemComponent.RESET;
                 ServItemComponent.SETCURRENTKEY(Active,"Parent Service Item No.","Line No.");
                 ServItemComponent.SETRANGE(Active,false);
                 ServItemComponent.SETRANGE("Parent Service Item No.","Parent Service Item No.");
                 if ServItemComponent.FINDLAST then
                   NextNo := ServItemComponent."Line No." + 1
                 else
                   NextNo := 1;
                 ServItemComponent := xRec;
                 ServItemComponent.Active := false;
                 ServItemComponent."Line No." := NextNo;
                 ServItemComponent."From Line No." := "Line No.";
                 ServItemComponent."Last Date Modified" := TODAY;
                 ServItemComponent.INSERT;
               end;
             END;

    OnDelete=BEGIN
               if Active then begin
                 ServItemComponent.RESET;
                 ServItemComponent.SETCURRENTKEY(Active,"Parent Service Item No.","From Line No.");
                 ServItemComponent.SETRANGE(Active,false);
                 ServItemComponent.SETRANGE("Parent Service Item No.","Parent Service Item No.");
                 ServItemComponent.SETRANGE("From Line No.","Line No.");
                 if ServItemComponent.FINDFIRST then
                   if not CONFIRM(Text002,false,"No.") then
                     ERROR('');
                 ServItemComponent.DELETEALL;
               end;
             END;

    CaptionML=ENU=Service Item Component;
    LookupPageID="Service Item Component List";
    DrillDownPageID="Service Item Component List";
  }
  FIELDS
  {
    { 1   ;   ;Parent Service Item No.;Code20     ;TableRelation="Service Item";
                                                   CaptionML=ENU=Parent Service Item No. }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 4   ;   ;Active              ;Boolean       ;CaptionML=ENU=Active }
    { 5   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                if Type <> xRec.Type then
                                                                  VALIDATE("No.",'');
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Service Item,Item;
                                                   OptionString="Service Item",Item }
    { 6   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST("Service Item")) "Service Item"
                                                                 ELSE IF (Type=CONST(Item)) Item;
                                                   OnValidate=BEGIN
                                                                if "No." <> '' then begin
                                                                  if Type = Type::"Service Item" then begin
                                                                    if "No." = "Parent Service Item No." then
                                                                      ERROR(
                                                                        Text000,
                                                                        Type,"No.",TABLECAPTION,ServItem.TABLECAPTION,"Parent Service Item No.");
                                                                    ServItem.GET("No.");
                                                                    "Serial No." := ServItem."Serial No.";
                                                                    "Variant Code" := ServItem."Variant Code";
                                                                    Description := ServItem.Description;
                                                                    "Description 2" := ServItem."Description 2";
                                                                  end else begin
                                                                    Item.GET("No.");
                                                                    "Serial No." := '';
                                                                    Description := Item.Description;
                                                                    "Description 2" := Item."Description 2";
                                                                  end;
                                                                  "Date Installed" := WORKDATE;
                                                                end else begin
                                                                  "No." := '';
                                                                  "Date Installed" := 0D;
                                                                  "Serial No." := '';
                                                                  Description := '';
                                                                  "Description 2" := '';
                                                                end;

                                                                VALIDATE("Serial No.");
                                                              END;

                                                   OnLookup=BEGIN
                                                              if Type = Type::Item then begin
                                                                Item."No." := xRec."No.";
                                                                if PAGE.RUNMODAL(0,Item) = ACTION::LookupOK then
                                                                  VALIDATE("No.",Item."No.");
                                                              end else begin
                                                                ServItem.GET("Parent Service Item No.");
                                                                ServItem2.RESET;
                                                                ServItem2.SETCURRENTKEY("Customer No.","Ship-to Code");
                                                                ServItem2.SETRANGE("Customer No.",ServItem."Customer No.");
                                                                ServItem2.SETRANGE("Ship-to Code",ServItem."Ship-to Code");
                                                                ServItem2."No." := "No.";
                                                                if PAGE.RUNMODAL(0,ServItem2) = ACTION::LookupOK then
                                                                  VALIDATE("No.",ServItem2."No.");
                                                              end;
                                                            END;

                                                   CaptionML=ENU=No. }
    { 7   ;   ;Date Installed      ;Date          ;CaptionML=ENU=Date Installed }
    { 8   ;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE ("Item No."=FIELD("No."));
                                                   OnValidate=BEGIN
                                                                if Type = Type::"Service Item" then
                                                                  if "No." <> '' then begin
                                                                    ServItem.GET("No.");
                                                                    TESTFIELD("Variant Code",ServItem."Variant Code");
                                                                  end;
                                                              END;

                                                   OnLookup=BEGIN
                                                              case Type of
                                                                Type::Item:
                                                                  begin
                                                                    ItemVariant.RESET;
                                                                    ItemVariant.SETRANGE("Item No.","No.");
                                                                    if PAGE.RUNMODAL(PAGE::"Item Variants",ItemVariant) = ACTION::LookupOK then
                                                                      "Variant Code" := ItemVariant.Code;
                                                                  end;
                                                                Type::"Service Item":
                                                                  begin
                                                                    if "No." <> '' then begin
                                                                      ServItem.GET("No.");
                                                                      ItemVariant.RESET;
                                                                      ItemVariant.SETRANGE("Item No.",ServItem."Item No.");
                                                                    end else
                                                                      ItemVariant.SETRANGE("Item No.",'');
                                                                    if PAGE.RUNMODAL(PAGE::"Item Variants",ItemVariant) = ACTION::LookupOK then
                                                                      VALIDATE("Variant Code",ItemVariant.Code);
                                                                  end;
                                                              end;
                                                            END;

                                                   CaptionML=ENU=Variant Code }
    { 11  ;   ;Serial No.          ;Code20        ;OnValidate=BEGIN
                                                                if (Type = Type::"Service Item") and
                                                                   ("No." <> '')
                                                                then begin
                                                                  ServItem.GET("No.");
                                                                  if "Serial No." <> ServItem."Serial No." then
                                                                    ERROR(Text001,FIELDCAPTION("Serial No."),Type,"No.");
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Serial No. }
    { 12  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 13  ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 15  ;   ;Service Order No.   ;Code20        ;OnLookup=BEGIN
                                                              ServOrderMgt.ServHeaderLookup(1,"Service Order No.");
                                                            END;

                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Service Order No. }
    { 16  ;   ;From Line No.       ;Integer       ;CaptionML=ENU=From Line No. }
    { 17  ;   ;Last Date Modified  ;Date          ;CaptionML=ENU=Last Date Modified }
  }
  KEYS
  {
    {    ;Active,"Parent Service Item No.","Line No.";
                                                   Clustered=true }
    {    ;Active,"Parent Service Item No.","From Line No." }
    {    ;Type,"No.",Active                        }
    {    ;Active,"Parent Service Item No.",Type,"No." }
    {    ;"Parent Service Item No.","Line No."     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 %2 can not be a component in %3 for %4 %5';
      Text001@1001 : TextConst 'ENU=%1 must be the same as in %2 %3.';
      ServItemComponent@1002 : Record "Service Item Component";
      ServItem@1003 : Record "Service Item";
      ServItem2@1004 : Record "Service Item";
      Item@1005 : Record Item;
      ItemVariant@1006 : Record "Item Variant";
      ServOrderMgt@1007 : Codeunit ServOrderManagement;
      NextNo@1008 : Integer;
      Text002@1009 : TextConst 'ENU=Component %1 has replacements\Do you want to delete this Component?';

    [External]
    PROCEDURE AssistEditSerialNo@1();
    VAR
      ItemLedgEntry@1000 : Record "Item Ledger Entry";
    BEGIN
      TESTFIELD(Type,Type::Item);
      CLEAR(ItemLedgEntry);
      ItemLedgEntry.SETCURRENTKEY("Item No.",Open);
      ItemLedgEntry.SETRANGE("Item No.","No.");
      ItemLedgEntry.SETRANGE(Open,true);
      if "Variant Code" <> '' then
        ItemLedgEntry.SETRANGE("Variant Code","Variant Code");
      ItemLedgEntry.SETFILTER("Serial No.",'<>%1','');
      if PAGE.RUNMODAL(0,ItemLedgEntry) = ACTION::LookupOK then
        "Serial No." := ItemLedgEntry."Serial No.";
    END;

    PROCEDURE SplitLineNo@2(xServiceItemComponent@1000 : Record "Service Item Component";BelowxRec@1002 : Boolean) ResultLineNo : Integer;
    VAR
      ServiceItemComponent@1001 : Record "Service Item Component";
    BEGIN
      if "Line No." <> 0 then
        ResultLineNo := "Line No."
      else begin
        ServiceItemComponent.SETCURRENTKEY("Parent Service Item No.","Line No.");
        TESTFIELD("Parent Service Item No.");
        ServiceItemComponent.SETRANGE("Parent Service Item No.","Parent Service Item No.");
        if BelowxRec then begin
          if ServiceItemComponent.FINDLAST then;
          ResultLineNo := ServiceItemComponent."Line No." + 10000;
        end else
          if "Parent Service Item No." = xServiceItemComponent."Parent Service Item No." then begin
            ServiceItemComponent.SETFILTER("Line No.",'<%1',xServiceItemComponent."Line No.");
            if ServiceItemComponent.FINDLAST then;
            ResultLineNo := ROUND((xServiceItemComponent."Line No." + ServiceItemComponent."Line No.") / 2,1);
          end else begin
            if ServiceItemComponent.FINDLAST then;
            ResultLineNo := ServiceItemComponent."Line No." + 10000;
          end;
      end;
    END;

    BEGIN
    END.
  }
}

