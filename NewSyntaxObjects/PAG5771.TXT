OBJECT Page 5771 Whse. Put-away Subform
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    MultipleNewLines=true;
    InsertAllowed=false;
    LinksAllowed=false;
    SourceTable="Warehouse Activity Line";
    DelayedInsert=true;
    SourceTableView=WHERE("Activity Type"=CONST("Put-away"));
    PageType=ListPart;
    AutoSplitKey=true;
    OnInit=BEGIN
             QtyToHandleEditable := true;
             BinCodeEditable := true;
             ZoneCodeEditable := true;
           END;

    OnNewRecord=BEGIN
                  "Activity Type" := xRec."Activity Type";
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.UPDATE(false);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           EnableZoneBin;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 1901991804;2 ;Action    ;
                      Name=&Split Line;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=&Split Line;
                      ToolTipML=ENU=Enable that the items can be taken or placed in more than one bin, for example, because the quantity in the suggested bin is insufficient to pick or move or there is not enough room to put away the required quantity.;
                      ApplicationArea=#Warehouse;
                      Image=Split;
                      OnAction=VAR
                                 WhseActivLine@1001 : Record "Warehouse Activity Line";
                               BEGIN
                                 WhseActivLine.COPY(Rec);
                                 SplitLine(WhseActivLine);
                                 CurrPage.UPDATE(false);
                               END;
                                }
      { 1901313404;2 ;Action    ;
                      Name=ChangeUnitOfMeasure;
                      Ellipsis=true;
                      CaptionML=ENU=&Change Unit Of Measure;
                      ToolTipML=ENU=Specify which unit of measure you want to change during the warehouse activity, for example, because you want to ship an item in boxes although you store it in pallets.;
                      ApplicationArea=#Advanced;
                      Image=UnitConversions;
                      OnAction=BEGIN
                                 ChangeUOM;
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1902759804;2 ;Action    ;
                      Name=Source Document Line;
                      CaptionML=ENU=Source Document Line;
                      ToolTipML=ENU=View the line on the source document that the put away is for.;
                      ApplicationArea=#Advanced;
                      Image=SourceDocLine;
                      OnAction=BEGIN
                                 ShowSourceLine;
                               END;
                                }
      { 1901652504;2 ;Action    ;
                      Name=Whse. Document Line;
                      CaptionML=ENU=Whse. Document Line;
                      ToolTipML=ENU=View the line on another warehouse document that the warehouse activity is for.;
                      ApplicationArea=#Warehouse;
                      Image=Line;
                      OnAction=BEGIN
                                 ShowWhseLine;
                               END;
                                }
      { 1900545304;2 ;Action    ;
                      Name=Bin Contents List;
                      CaptionML=ENU=Bin Contents List;
                      ToolTipML=ENU=View the contents of the selected bin and the parameters that define how items are routed through the bin.;
                      ApplicationArea=#Warehouse;
                      Image=BinContent;
                      OnAction=BEGIN
                                 ShowBinContents;
                               END;
                                }
      { 1903867104;2 ;ActionGroup;
                      Name=Item Availability by;
                      CaptionML=ENU=Item Availability by;
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      Name=Event;
                      CaptionML=ENU=Event;
                      ToolTipML=ENU=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.;
                      ApplicationArea=#Advanced;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailability(ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 1901313504;3 ;Action    ;
                      Name=Period;
                      CaptionML=ENU=Period;
                      ToolTipML=ENU=View the projected quantity of the item over time according to time periods, such as day, week, or month.;
                      ApplicationArea=#Advanced;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailability(ItemAvailFormsMgt.ByPeriod);
                               END;
                                }
      { 1900295904;3 ;Action    ;
                      Name=Variant;
                      CaptionML=ENU=Variant;
                      ToolTipML=ENU=View or edit the item's variants. Instead of setting up each color of an item as a separate item, you can set up the various colors as variants of the item.;
                      ApplicationArea=#Advanced;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailability(ItemAvailFormsMgt.ByVariant);
                               END;
                                }
      { 1901742304;3 ;Action    ;
                      Name=Location;
                      AccessByPermission=TableData Location=R;
                      CaptionML=ENU=Location;
                      ToolTipML=ENU=View the actual and projected quantity of the item per location.;
                      ApplicationArea=#Advanced;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailability(ItemAvailFormsMgt.ByLocation);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 36  ;2   ;Field     ;
                Name=Action Type;
                ToolTipML=ENU=Specifies the action type for the warehouse activity line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Action Type";
                Visible=FALSE;
                ImplicitType=Option }

    { 12  ;2   ;Field     ;
                Name=Source Document;
                ToolTipML=ENU=Specifies the type of document that the line relates to, such as a sales order.;
                OptionCaptionML=ENU=,Sales Order,,,Sales Return Order,Purchase Order,,,Purchase Return Order,Inbound Transfer,,Prod. Consumption;
                ApplicationArea=#Warehouse;
                SourceExpr="Source Document";
                ImplicitType=Option }

    { 6   ;2   ;Field     ;
                Name=Source No.;
                ToolTipML=ENU=Specifies the source number of the document from which the entry originates.;
                ApplicationArea=#Warehouse;
                SourceExpr="Source No.";
                ImplicitType=Code20 }

    { 22  ;2   ;Field     ;
                Name=Item No.;
                ToolTipML=ENU=Specifies the item number of the item to be handled, such as picked or put away.;
                ApplicationArea=#Warehouse;
                SourceExpr="Item No.";
                ImplicitType=Code20 }

    { 2   ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 30  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the item on the line.;
                ApplicationArea=#Warehouse;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 14  ;2   ;Field     ;
                Name=Serial No.;
                Lookup=false;
                ToolTipML=ENU=Specifies the serial number to handle in the document.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Serial No.";
                Visible=FALSE;
                Editable=FALSE;
                OnValidate=BEGIN
                             SerialNoOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 40  ;2   ;Field     ;
                Name=Lot No.;
                Lookup=false;
                ToolTipML=ENU=Specifies the lot number to handle in the document.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Lot No.";
                Visible=FALSE;
                Editable=FALSE;
                OnValidate=BEGIN
                             LotNoOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 1106000000;2;Field  ;
                Name=Expiration Date;
                ToolTipML=ENU=Specifies the expiration date of the serial/lot numbers if you are putting items away.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Expiration Date";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Date }

    { 4   ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the code for the location where the activity occurs.;
                ApplicationArea=#Warehouse;
                SourceExpr="Location Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 42  ;2   ;Field     ;
                Name=Zone Code;
                ToolTipML=ENU=Specifies the zone code where the bin on this line is located.;
                ApplicationArea=#Warehouse;
                SourceExpr="Zone Code";
                Visible=FALSE;
                Editable=ZoneCodeEditable;
                ImplicitType=Code10 }

    { 46  ;2   ;Field     ;
                Name=Bin Code;
                ToolTipML=ENU=Specifies the bin where the items are picked or put away.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                Visible=FALSE;
                Editable=BinCodeEditable;
                OnValidate=BEGIN
                             BinCodeOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name=Shelf No.;
                ToolTipML=ENU=Specifies the shelf number of the item for informational use.;
                ApplicationArea=#Warehouse;
                SourceExpr="Shelf No.";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 34  ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the quantity of the item to be handled, such as received, put-away, or assigned.;
                ApplicationArea=#Warehouse;
                SourceExpr=Quantity;
                ImplicitType=Decimal }

    { 10  ;2   ;Field     ;
                Name=Qty. (Base);
                ToolTipML=ENU=Specifies the quantity of the item to be handled, in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. (Base)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 20  ;2   ;Field     ;
                Name=Qty. to Handle;
                ToolTipML=ENU=Specifies how many units to handle in this warehouse activity.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. to Handle";
                Editable=QtyToHandleEditable;
                OnValidate=BEGIN
                             QtytoHandleOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 18  ;2   ;Field     ;
                Name=Qty. Handled;
                ToolTipML=ENU=Specifies the number of items on the line that have been handled in this warehouse activity.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Handled";
                ImplicitType=Decimal }

    { 32  ;2   ;Field     ;
                Name=Qty. to Handle (Base);
                ToolTipML=ENU=Specifies the quantity of items to be handled in this warehouse activity.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. to Handle (Base)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 24  ;2   ;Field     ;
                Name=Qty. Handled (Base);
                ToolTipML=ENU=Specifies the number of items on the line that have been handled in this warehouse activity.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Handled (Base)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 38  ;2   ;Field     ;
                Name=Qty. Outstanding;
                ToolTipML=ENU=Specifies the number of items that have not yet been handled for this warehouse activity line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Outstanding";
                ImplicitType=Decimal }

    { 44  ;2   ;Field     ;
                Name=Qty. Outstanding (Base);
                ToolTipML=ENU=Specifies the number of items, expressed in the base unit of measure, that have not yet been handled for this warehouse activity line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Outstanding (Base)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 62  ;2   ;Field     ;
                Name=Due Date;
                ToolTipML=ENU=Specifies the date when the warehouse activity must be completed.;
                ApplicationArea=#Warehouse;
                SourceExpr="Due Date";
                ImplicitType=Date }

    { 26  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Warehouse;
                SourceExpr="Unit of Measure Code";
                ImplicitType=Code10 }

    { 28  ;2   ;Field     ;
                Name=Qty. per Unit of Measure;
                ToolTipML=ENU=Specifies the quantity per unit of measure of the item on the line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. per Unit of Measure";
                ImplicitType=Decimal }

    { 16  ;2   ;Field     ;
                Name=Destination Type;
                ToolTipML=ENU=Specifies information about the type of destination, such as customer or vendor, associated with the warehouse activity line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Destination Type";
                Visible=FALSE;
                ImplicitType=Option }

    { 56  ;2   ;Field     ;
                Name=Destination No.;
                ToolTipML=ENU=Specifies the number or code of the customer, vendor or location related to the activity line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Destination No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 48  ;2   ;Field     ;
                Name=Whse. Document Type;
                ToolTipML=ENU=Specifies the type of warehouse document from which the line originated.;
                OptionCaptionML=ENU=" ,Receipt,,Internal Put-away";
                ApplicationArea=#Warehouse;
                SourceExpr="Whse. Document Type";
                Visible=FALSE;
                ImplicitType=Option }

    { 50  ;2   ;Field     ;
                Name=Whse. Document No.;
                ToolTipML=ENU=Specifies the number of the warehouse document that is the basis for the action on the line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Whse. Document No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 52  ;2   ;Field     ;
                Name=Whse. Document Line No.;
                ToolTipML=ENU=Specifies the number of the line in the warehouse document that is the basis for the action on the line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Whse. Document Line No.";
                Visible=FALSE;
                ImplicitType=Integer }

    { 54  ;2   ;Field     ;
                Name=Special Equipment Code;
                ToolTipML=ENU=Specifies the code of the equipment required when you perform the action on the line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Special Equipment Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 58  ;2   ;Field     ;
                Name=Cross-Dock Information;
                ToolTipML=ENU=Specifies an option for specific information regarding the cross-dock activity.;
                ApplicationArea=#Warehouse;
                SourceExpr="Cross-Dock Information";
                ImplicitType=Option }

  }
  CODE
  {
    VAR
      ItemAvailFormsMgt@1001 : Codeunit "Item Availability Forms Mgt";
      WMSMgt@1000 : Codeunit "WMS Management";
      ZoneCodeEditable@19015203 : Boolean INDATASET;
      BinCodeEditable@19056442 : Boolean INDATASET;
      QtyToHandleEditable@19012452 : Boolean INDATASET;

    LOCAL PROCEDURE ShowSourceLine@1();
    BEGIN
      WMSMgt.ShowSourceDocLine(
        "Source Type","Source Subtype","Source No.","Source Line No.","Source Subline No.");
    END;

    LOCAL PROCEDURE ItemAvailability@7(AvailabilityType@1000 : 'Date,Variant,Location,Bin,Event,BOM');
    BEGIN
      ItemAvailFormsMgt.ShowItemAvailFromWhseActivLine(Rec,AvailabilityType);
    END;

    LOCAL PROCEDURE ChangeUOM@5();
    VAR
      WhseActLine@1001 : Record "Warehouse Activity Line";
      WhseChangeOUM@1000 : Report "Whse. Change Unit of Measure";
    BEGIN
      TESTFIELD("Action Type");
      TESTFIELD("Breakbulk No.",0);
      TESTFIELD("Action Type",2);
      WhseChangeOUM.DefWhseActLine(Rec);
      WhseChangeOUM.RUNMODAL;
      if WhseChangeOUM.ChangeUOMCode(WhseActLine) = true then
        ChangeUOMCode(Rec,WhseActLine);
      CLEAR(WhseChangeOUM);
      CurrPage.UPDATE(false);
    END;

    [External]
    PROCEDURE RegisterPutAwayYesNo@3();
    VAR
      WhseActivLine@1001 : Record "Warehouse Activity Line";
    BEGIN
      WhseActivLine.COPY(Rec);
      WhseActivLine.FILTERGROUP(3);
      WhseActivLine.SETRANGE(Breakbulk);
      WhseActivLine.FILTERGROUP(0);
      CODEUNIT.RUN(CODEUNIT::"Whse.-Act.-Register (Yes/No)",WhseActivLine);
      RESET;
      SETCURRENTKEY("Activity Type","No.","Sorting Sequence No.");
      FILTERGROUP(4);
      SETRANGE("Activity Type","Activity Type");
      SETRANGE("No.","No.");
      FILTERGROUP(3);
      SETRANGE(Breakbulk,false);
      FILTERGROUP(0);
      CurrPage.UPDATE(false);
    END;

    [External]
    PROCEDURE AutofillQtyToHandle@10();
    VAR
      WhseActivLine@1000 : Record "Warehouse Activity Line";
    BEGIN
      WhseActivLine.COPY(Rec);
      AutofillQtyToHandle(WhseActivLine);
    END;

    [External]
    PROCEDURE DeleteQtyToHandle@6();
    VAR
      WhseActivLine@1000 : Record "Warehouse Activity Line";
    BEGIN
      WhseActivLine.COPY(Rec);
      DeleteQtyToHandle(WhseActivLine);
    END;

    LOCAL PROCEDURE ShowBinContents@7301();
    VAR
      BinContent@1000 : Record "Bin Content";
    BEGIN
      if "Action Type" = "Action Type"::Place then
        BinContent.ShowBinContents("Location Code","Item No.","Variant Code",'')
      else
        BinContent.ShowBinContents("Location Code","Item No.","Variant Code","Bin Code");
    END;

    LOCAL PROCEDURE ShowWhseLine@2();
    BEGIN
      WMSMgt.ShowWhseDocLine(
        "Whse. Document Type","Whse. Document No.","Whse. Document Line No.");
    END;

    LOCAL PROCEDURE EnableZoneBin@4();
    BEGIN
      ZoneCodeEditable :=
        ("Action Type" = "Action Type"::Place) and ("Breakbulk No." = 0);
      BinCodeEditable :=
        ("Action Type" = "Action Type"::Place) and ("Breakbulk No." = 0);
      QtyToHandleEditable :=
        ("Action Type" = "Action Type"::Take) or ("Breakbulk No." = 0);
    END;

    LOCAL PROCEDURE SerialNoOnAfterValidate@19074494();
    VAR
      ItemTrackingMgt@1000 : Codeunit "Item Tracking Management";
      ExpDate@1106000002 : Date;
      EntriesExist@1106000000 : Boolean;
    BEGIN
      if "Serial No." <> '' then
        ExpDate := ItemTrackingMgt.ExistingExpirationDate("Item No.","Variant Code",
            "Lot No.","Serial No.",false,EntriesExist);

      if ExpDate <> 0D then
        "Expiration Date" := ExpDate;
    END;

    LOCAL PROCEDURE LotNoOnAfterValidate@19045288();
    VAR
      ItemTrackingMgt@1000 : Codeunit "Item Tracking Management";
      ExpDate@1106000000 : Date;
      EntriesExist@1106000002 : Boolean;
    BEGIN
      if "Lot No." <> '' then
        ExpDate := ItemTrackingMgt.ExistingExpirationDate("Item No.","Variant Code",
            "Lot No.","Serial No.",false,EntriesExist);

      if ExpDate <> 0D then
        "Expiration Date" := ExpDate;
    END;

    LOCAL PROCEDURE BinCodeOnAfterValidate@19073508();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE QtytoHandleOnAfterValidate@19067087();
    BEGIN
      CurrPage.UPDATE(true);
    END;

    BEGIN
    END.
  }
}

