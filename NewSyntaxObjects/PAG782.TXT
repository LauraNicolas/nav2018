OBJECT Page 782 Opportunity Chart
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Opportunities;
    PageType=CardPart;
    OnOpenPage=BEGIN
                 OppChartMgt.SetDefaultOppStatus(Opportunity);
                 OppChartMgt.SetDefaultPeriod(Period);
               END;

    ActionList=ACTIONS
    {
      { 4       ;    ;ActionContainer;
                      Name=ActionContainer4;
                      ActionContainerType=ActionItems }
      { 5       ;1   ;ActionGroup;
                      Name=Opportunity;
                      CaptionML=ENU=Opportunity;
                      Image=SelectChart }
      { 7       ;2   ;Action    ;
                      Name=NotStarted;
                      CaptionML=ENU=Not Started;
                      ToolTipML=ENU=View opportunities not started.;
                      ApplicationArea=#RelationshipMgmt;
                      OnAction=BEGIN
                                 Opportunity.Status := Opportunity.Status::"Not Started";
                                 UpdateChart(Period,Opportunity);
                               END;
                                }
      { 8       ;2   ;Action    ;
                      Name=InProgress;
                      CaptionML=ENU=In Progress;
                      ToolTipML=ENU=View opportunities in progress.;
                      ApplicationArea=#RelationshipMgmt;
                      OnAction=BEGIN
                                 Opportunity.Status := Opportunity.Status::"In Progress";
                                 UpdateChart(Period,Opportunity);
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=Won;
                      CaptionML=ENU=Won;
                      ToolTipML=ENU=View opportunities won.;
                      ApplicationArea=#RelationshipMgmt;
                      OnAction=BEGIN
                                 Opportunity.Status := Opportunity.Status::Won;
                                 UpdateChart(Period,Opportunity);
                               END;
                                }
      { 10      ;2   ;Action    ;
                      Name=Lost;
                      CaptionML=ENU=Lost;
                      ToolTipML=ENU=View opportunities lost.;
                      ApplicationArea=#RelationshipMgmt;
                      OnAction=BEGIN
                                 Opportunity.Status := Opportunity.Status::Lost;
                                 UpdateChart(Period,Opportunity);
                               END;
                                }
      { 6       ;1   ;ActionGroup;
                      Name=Period;
                      CaptionML=ENU=Period;
                      Image=Period }
      { 11      ;2   ;Action    ;
                      Name=Day;
                      CaptionML=ENU=Day;
                      ToolTipML=ENU=View the day.;
                      ApplicationArea=#RelationshipMgmt;
                      OnAction=BEGIN
                                 Period."Period Type" := Period."Period Type"::Date;
                                 SetPeriodAndUpdateChart(Period);
                               END;
                                }
      { 12      ;2   ;Action    ;
                      Name=Week;
                      CaptionML=ENU=Week;
                      ToolTipML=ENU=View the week.;
                      ApplicationArea=#RelationshipMgmt;
                      OnAction=BEGIN
                                 Period."Period Type" := Period."Period Type"::Week;
                                 SetPeriodAndUpdateChart(Period);
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Name=Month;
                      CaptionML=ENU=Month;
                      ToolTipML=ENU=View the month.;
                      ApplicationArea=#RelationshipMgmt;
                      OnAction=BEGIN
                                 Period."Period Type" := Period."Period Type"::Month;
                                 SetPeriodAndUpdateChart(Period);
                               END;
                                }
      { 14      ;2   ;Action    ;
                      Name=Quarter;
                      CaptionML=ENU=Quarter;
                      ToolTipML=ENU=View the quarter.;
                      ApplicationArea=#RelationshipMgmt;
                      OnAction=BEGIN
                                 Period."Period Type" := Period."Period Type"::Quarter;
                                 SetPeriodAndUpdateChart(Period);
                               END;
                                }
      { 15      ;2   ;Action    ;
                      Name=Year;
                      CaptionML=ENU=Year;
                      ToolTipML=ENU=View the year.;
                      ApplicationArea=#RelationshipMgmt;
                      OnAction=BEGIN
                                 Period."Period Type" := Period."Period Type"::Year;
                                 SetPeriodAndUpdateChart(Period);
                               END;
                                }
      { 16      ;1   ;Action    ;
                      Name=PrevPeriod;
                      CaptionML=ENU=Previous Period;
                      ToolTipML=ENU=Show the information based on the previous period. If you set the View by field to Day, the date filter changes to the day before.;
                      ApplicationArea=#RelationshipMgmt;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 OppChartMgt.SetPrevPeriod(Period);
                                 UpdateChart(Period,Opportunity);
                               END;
                                }
      { 17      ;1   ;Action    ;
                      Name=NextPeriod;
                      CaptionML=ENU=Next Period;
                      ToolTipML=ENU=Show the information based on the next period. If you set the View by field to Day, the date filter changes to the day before.;
                      ApplicationArea=#RelationshipMgmt;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 OppChartMgt.SetNextPeriod(Period);
                                 UpdateChart(Period,Opportunity);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=Container;
                ContainerType=ContentArea }

    { 2   ;1   ;Field     ;
                Name=StatusText;
                CaptionML=ENU=Status Text;
                ToolTipML=ENU=Specifies the status of the chart.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=StatusText;
                Enabled=FALSE;
                Style=StrongAccent;
                StyleExpr=TRUE;
                ShowCaption=false }

    { 3   ;1   ;Field     ;
                Name=BusinessChart;
                CaptionML=ENU=Business Chart;
                ToolTipML=ENU=Specifies if the chart is of type Business Chart.;
                ApplicationArea=#RelationshipMgmt;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.BusinessChart;PublicKeyToken=31bf3856ad364e35];
                ShowCaption=false }

  }
  CODE
  {
    VAR
      BusinessChartBuffer@1000 : Record "Business Chart Buffer";
      Opportunity@1003 : Record Opportunity;
      Period@1004 : Record Date;
      OppChartMgt@1002 : Codeunit "Opportunity Chart Mgt.";
      StatusText@1001 : Text;
      IsChartAddInReady@1005 : Boolean;

    LOCAL PROCEDURE SetPeriodAndUpdateChart@3(VAR Period@1000 : Record Date);
    BEGIN
      OppChartMgt.SetPeriodRange(Period);
      UpdateChart(Period,Opportunity);
    END;

    LOCAL PROCEDURE UpdateChart@8(Period@1001 : Record Date;Opportunity@1000 : Record Opportunity);
    BEGIN
      if not IsChartAddInReady then
        exit;

      OppChartMgt.UpdateData(BusinessChartBuffer,Period,Opportunity.Status);
      BusinessChartBuffer.Update(CurrPage.BusinessChart);
      UpdateStatusText(Period,Opportunity);
    END;

    LOCAL PROCEDURE UpdateStatusText@1(Period@1000 : Record Date;Opportunity@1001 : Record Opportunity);
    BEGIN
      StatusText := FORMAT(Opportunity.Status) + ' | ' + FORMAT(Period."Period Type") + ' | ';
      case Opportunity.Status of
        Opportunity.Status::"Not Started",
        Opportunity.Status::"In Progress":
          StatusText += ' .. ' + FORMAT(Period."Period End");
        Opportunity.Status::Won,
        Opportunity.Status::Lost:
          StatusText += FORMAT(Period."Period Start") + ' .. ' + FORMAT(Period."Period End")
      end;
    END;

    EVENT BusinessChart@-3::DataPointClicked@1(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
      BusinessChartBuffer.SetDrillDownIndexes(point);
      OppChartMgt.DrillDown(BusinessChartBuffer,Period,Opportunity.Status);
    END;

    EVENT BusinessChart@-3::DataPointDoubleClicked@2(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
    END;

    EVENT BusinessChart@-3::AddInReady@3();
    BEGIN
      IsChartAddInReady := true;
      UpdateChart(Period,Opportunity);
    END;

    EVENT BusinessChart@-3::Refresh@4();
    BEGIN
      if IsChartAddInReady then
        UpdateChart(Period,Opportunity);
    END;

    BEGIN
    END.
  }
}

