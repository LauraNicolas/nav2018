OBJECT Page 9401 VAT Amount Lines
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=VAT Amount Lines;
    InsertAllowed=false;
    DeleteAllowed=false;
    SourceTable="VAT Amount Line";
    PageType=List;
    OnInit=BEGIN
             InvoiceDiscountAmountEditable := true;
             VATAmountEditable := true;
           END;

    OnFindRecord=BEGIN
                   TempVATAmountLine.COPY(Rec);
                   if TempVATAmountLine.FIND(Which) then begin
                     Rec := TempVATAmountLine;
                     exit(true);
                   end;
                   exit(false);
                 END;

    OnNextRecord=VAR
                   ResultSteps@1001 : Integer;
                 BEGIN
                   TempVATAmountLine.COPY(Rec);
                   ResultSteps := TempVATAmountLine.NEXT(Steps);
                   if ResultSteps <> 0 then
                     Rec := TempVATAmountLine;
                   exit(ResultSteps);
                 END;

    OnAfterGetRecord=BEGIN
                       VATAmountEditable := AllowVATDifference and not "Includes Prepayment";
                       InvoiceDiscountAmountEditable := AllowInvDisc and not "Includes Prepayment";
                     END;

    OnModifyRecord=BEGIN
                     ModifyRec;
                     exit(false);
                   END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=VAT Identifier;
                ToolTipML=ENU=Specifies the contents of this field from the VAT Identifier field in the VAT Posting Setup table.;
                ApplicationArea=#Advanced;
                SourceExpr="VAT Identifier";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name=VAT %;
                ToolTipML=ENU=Specifies the VAT % that was used on the sales or purchase lines with this VAT Identifier.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT %";
                ImplicitType=Decimal }

    { 8   ;2   ;Field     ;
                Name=VAT Calculation Type;
                ToolTipML=ENU=Specifies how VAT will be calculated for purchases or sales of items with this particular combination of VAT business posting group and VAT product posting group.;
                ApplicationArea=#Advanced;
                SourceExpr="VAT Calculation Type";
                Visible=FALSE;
                ImplicitType=Option }

    { 10  ;2   ;Field     ;
                Name=Line Amount;
                ToolTipML=ENU=Specifies the net VAT amount that must be paid for products on the line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Line Amount";
                AutoFormatType=1;
                AutoFormatExpr=CurrencyCode;
                ImplicitType=Decimal }

    { 12  ;2   ;Field     ;
                Name=Inv. Disc. Base Amount;
                ToolTipML=ENU=Specifies the invoice discount base amount.;
                ApplicationArea=#Advanced;
                SourceExpr="Inv. Disc. Base Amount";
                AutoFormatType=1;
                AutoFormatExpr=CurrencyCode;
                Visible=FALSE;
                ImplicitType=Decimal }

    { 14  ;2   ;Field     ;
                Name=Invoice Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount for a specific VAT identifier.;
                ApplicationArea=#Advanced;
                SourceExpr="Invoice Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr=CurrencyCode;
                Visible=FALSE;
                Editable=InvoiceDiscountAmountEditable;
                OnValidate=BEGIN
                             CalcVATFields(CurrencyCode,PricesIncludingVAT,VATBaseDiscPct);
                             ModifyRec;
                           END;

                ImplicitType=Decimal }

    { 16  ;2   ;Field     ;
                Name=VAT Base;
                ToolTipML=ENU=Specifies the total net amount (amount excluding VAT) for sales or purchase lines with a specific VAT Identifier.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Base";
                AutoFormatType=1;
                AutoFormatExpr=CurrencyCode;
                ImplicitType=Decimal }

    { 20  ;2   ;Field     ;
                Name=VAT Amount;
                ToolTipML=ENU=Specifies the total of the VAT amounts on sales or purchase lines with a specific VAT Identifier.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Amount";
                AutoFormatType=1;
                AutoFormatExpr=CurrencyCode;
                Editable=VATAmountEditable;
                OnValidate=BEGIN
                             if AllowVATDifference and not AllowVATDifferenceOnThisTab then
                               ERROR(Text000,FIELDCAPTION("VAT Amount"));

                             if PricesIncludingVAT then
                               "VAT Base" := "Amount Including VAT" - "VAT Amount"
                             else
                               "Amount Including VAT" := "VAT Amount" + "VAT Base";

                             FormCheckVATDifference;
                             ModifyRec;
                           END;

                ImplicitType=Decimal }

    { 24  ;2   ;Field     ;
                Name=Calculated VAT Amount;
                ToolTipML=ENU=Specifies the calculated VAT amount and is only used for reference when the user changes the VAT Amount manually.;
                ApplicationArea=#Advanced;
                SourceExpr="Calculated VAT Amount";
                AutoFormatType=1;
                AutoFormatExpr=CurrencyCode;
                Visible=FALSE;
                ImplicitType=Decimal }

    { 26  ;2   ;Field     ;
                Name=VAT Difference;
                ToolTipML=ENU=Specifies the VAT Difference for one VAT Identifier.;
                ApplicationArea=#Advanced;
                SourceExpr="VAT Difference";
                AutoFormatType=1;
                AutoFormatExpr=CurrencyCode;
                Visible=FALSE;
                ImplicitType=Decimal }

    { 22  ;2   ;Field     ;
                Name=Amount Including VAT;
                ToolTipML=ENU=Specifies the total of the amounts, including VAT, on all the lines on the document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount Including VAT";
                AutoFormatType=1;
                AutoFormatExpr=CurrencyCode;
                OnValidate=BEGIN
                             FormCheckVATDifference;
                           END;

                ImplicitType=Decimal }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 can only be modified on the Invoicing tab.';
      TempVATAmountLine@1002 : TEMPORARY Record "VAT Amount Line";
      Currency@1003 : Record Currency;
      CurrencyCode@1004 : Code[10];
      AllowVATDifference@1005 : Boolean;
      AllowVATDifferenceOnThisTab@1006 : Boolean;
      PricesIncludingVAT@1007 : Boolean;
      AllowInvDisc@1008 : Boolean;
      VATBaseDiscPct@1009 : Decimal;
      VATAmountEditable@19075252 : Boolean INDATASET;
      InvoiceDiscountAmountEditable@19042140 : Boolean INDATASET;
      Text001@1010 : TextConst 'ENU=The total %1 for a document must not exceed the value %2 in the %3 field.';

    [External]
    PROCEDURE SetTempVATAmountLine@1(VAR NewVATAmountLine@1000 : Record "VAT Amount Line");
    BEGIN
      TempVATAmountLine.DELETEALL;
      if NewVATAmountLine.FIND('-') then
        repeat
          TempVATAmountLine.COPY(NewVATAmountLine);
          TempVATAmountLine.INSERT;
        until NewVATAmountLine.NEXT = 0;
    END;

    [External]
    PROCEDURE GetTempVATAmountLine@5(VAR NewVATAmountLine@1000 : Record "VAT Amount Line");
    BEGIN
      NewVATAmountLine.DELETEALL;
      if TempVATAmountLine.FIND('-') then
        repeat
          NewVATAmountLine.COPY(TempVATAmountLine);
          NewVATAmountLine.INSERT;
        until TempVATAmountLine.NEXT = 0;
    END;

    [External]
    PROCEDURE InitGlobals@2(NewCurrencyCode@1000 : Code[10];NewAllowVATDifference@1001 : Boolean;NewAllowVATDifferenceOnThisTab@1002 : Boolean;NewPricesIncludingVAT@1003 : Boolean;NewAllowInvDisc@1004 : Boolean;NewVATBaseDiscPct@1005 : Decimal);
    BEGIN
      CurrencyCode := NewCurrencyCode;
      AllowVATDifference := NewAllowVATDifference;
      AllowVATDifferenceOnThisTab := NewAllowVATDifferenceOnThisTab;
      PricesIncludingVAT := NewPricesIncludingVAT;
      AllowInvDisc := NewAllowInvDisc;
      VATBaseDiscPct := NewVATBaseDiscPct;
      VATAmountEditable := AllowVATDifference;
      InvoiceDiscountAmountEditable := AllowInvDisc;
      if CurrencyCode = '' then
        Currency.InitRoundingPrecision
      else
        Currency.GET(CurrencyCode);
    END;

    LOCAL PROCEDURE FormCheckVATDifference@4();
    VAR
      VATAmountLine2@1000 : Record "VAT Amount Line";
      TotalVATDifference@1001 : Decimal;
    BEGIN
      CheckVATDifference(CurrencyCode,AllowVATDifference);
      VATAmountLine2 := TempVATAmountLine;
      TotalVATDifference := ABS("VAT Difference") - ABS(xRec."VAT Difference");
      if TempVATAmountLine.FIND('-') then
        repeat
          TotalVATDifference := TotalVATDifference + ABS(TempVATAmountLine."VAT Difference");
        until TempVATAmountLine.NEXT = 0;
      TempVATAmountLine := VATAmountLine2;
      if TotalVATDifference > Currency."Max. VAT Difference Allowed" then
        ERROR(
          Text001,FIELDCAPTION("VAT Difference"),
          Currency."Max. VAT Difference Allowed",Currency.FIELDCAPTION("Max. VAT Difference Allowed"));
    END;

    LOCAL PROCEDURE ModifyRec@3();
    BEGIN
      TempVATAmountLine := Rec;
      TempVATAmountLine.Modified := true;
      TempVATAmountLine.MODIFY;
    END;

    BEGIN
    END.
  }
}

