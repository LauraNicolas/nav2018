OBJECT Codeunit 350 IntraJnlManagement
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Intrastat Jnl. Template"=imd,
                TableData "Intrastat Jnl. Batch"=imd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=INTRASTAT';
      Text001@1001 : TextConst 'ENU=Intrastat Journal';
      Text002@1002 : TextConst 'ENU=DEFAULT';
      Text003@1003 : TextConst 'ENU=Default Journal';
      OpenFromBatch@1004 : Boolean;

    [External]
    PROCEDURE TemplateSelection@1(PageID@1003 : Integer;VAR IntrastatJnlLine@1002 : Record "Intrastat Jnl. Line";VAR JnlSelected@1001 : Boolean);
    VAR
      IntraJnlTemplate@1000 : Record "Intrastat Jnl. Template";
    BEGIN
      JnlSelected := true;

      IntraJnlTemplate.RESET;
      IntraJnlTemplate.SETRANGE("Page ID",PageID);

      case IntraJnlTemplate.COUNT of
        0:
          begin
            IntraJnlTemplate.INIT;
            IntraJnlTemplate.Name := Text000;
            IntraJnlTemplate.Description := Text001;
            IntraJnlTemplate.VALIDATE("Page ID");
            IntraJnlTemplate.INSERT;
            COMMIT;
          end;
        1:
          IntraJnlTemplate.FINDFIRST;
        else
          JnlSelected := PAGE.RUNMODAL(0,IntraJnlTemplate) = ACTION::LookupOK;
      end;
      if JnlSelected then begin
        IntrastatJnlLine.FILTERGROUP(2);
        IntrastatJnlLine.SETRANGE("Journal Template Name",IntraJnlTemplate.Name);
        IntrastatJnlLine.FILTERGROUP(0);
        if OpenFromBatch then begin
          IntrastatJnlLine."Journal Template Name" := '';
          PAGE.RUN(IntraJnlTemplate."Page ID",IntrastatJnlLine);
        end;
      end;
    END;

    [External]
    PROCEDURE TemplateSelectionFromBatch@9(VAR IntrastatJnlBatch@1003 : Record "Intrastat Jnl. Batch");
    VAR
      IntrastatJnlLine@1000 : Record "Intrastat Jnl. Line";
      IntraJnlTemplate@1002 : Record "Intrastat Jnl. Template";
    BEGIN
      OpenFromBatch := true;
      IntraJnlTemplate.GET(IntrastatJnlBatch."Journal Template Name");
      IntraJnlTemplate.TESTFIELD("Page ID");
      IntrastatJnlBatch.TESTFIELD(Name);

      IntrastatJnlLine.FILTERGROUP := 2;
      IntrastatJnlLine.SETRANGE("Journal Template Name",IntraJnlTemplate.Name);
      IntrastatJnlLine.FILTERGROUP := 0;

      IntrastatJnlLine."Journal Template Name" := '';
      IntrastatJnlLine."Journal Batch Name" := IntrastatJnlBatch.Name;
      PAGE.RUN(IntraJnlTemplate."Page ID",IntrastatJnlLine);
    END;

    [External]
    PROCEDURE OpenJnl@2(VAR CurrentJnlBatchName@1000 : Code[10];VAR IntrastatJnlLine@1001 : Record "Intrastat Jnl. Line");
    BEGIN
      CheckTemplateName(IntrastatJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
      IntrastatJnlLine.FILTERGROUP(2);
      IntrastatJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      IntrastatJnlLine.FILTERGROUP(0);
    END;

    [External]
    PROCEDURE OpenJnlBatch@10(VAR IntrastatJnlBatch@1003 : Record "Intrastat Jnl. Batch");
    VAR
      IntraJnlTemplate@1001 : Record "Intrastat Jnl. Template";
      IntrastatJnlLine@1004 : Record "Intrastat Jnl. Line";
      JnlSelected@1002 : Boolean;
    BEGIN
      if IntrastatJnlBatch.GETFILTER("Journal Template Name") <> '' then
        exit;
      IntrastatJnlBatch.FILTERGROUP(2);
      if IntrastatJnlBatch.GETFILTER("Journal Template Name") <> '' then begin
        IntrastatJnlBatch.FILTERGROUP(0);
        exit;
      end;
      IntrastatJnlBatch.FILTERGROUP(0);

      if not IntrastatJnlBatch.FIND('-') then begin
        if not IntraJnlTemplate.FINDFIRST then
          TemplateSelection(0,IntrastatJnlLine,JnlSelected);
        if IntraJnlTemplate.FINDFIRST then
          CheckTemplateName(IntraJnlTemplate.Name,IntrastatJnlBatch.Name);
      end;
      IntrastatJnlBatch.FIND('-');
      JnlSelected := true;
      if IntrastatJnlBatch.GETFILTER("Journal Template Name") <> '' then
        IntraJnlTemplate.SETRANGE(Name,IntrastatJnlBatch.GETFILTER("Journal Template Name"));
      case IntraJnlTemplate.COUNT of
        1:
          IntraJnlTemplate.FINDFIRST;
        else
          JnlSelected := PAGE.RUNMODAL(0,IntraJnlTemplate) = ACTION::LookupOK;
      end;
      if not JnlSelected then
        ERROR('');

      IntrastatJnlBatch.FILTERGROUP(2);
      IntrastatJnlBatch.SETRANGE("Journal Template Name",IntraJnlTemplate.Name);
      IntrastatJnlBatch.FILTERGROUP(0);
    END;

    LOCAL PROCEDURE CheckTemplateName@3(CurrentJnlTemplateName@1000 : Code[10];VAR CurrentJnlBatchName@1001 : Code[10]);
    VAR
      IntraJnlTemplate@1002 : Record "Intrastat Jnl. Template";
      IntrastatJnlBatch@1003 : Record "Intrastat Jnl. Batch";
    BEGIN
      IntrastatJnlBatch.SETRANGE("Journal Template Name",CurrentJnlTemplateName);
      if not IntrastatJnlBatch.GET(CurrentJnlTemplateName,CurrentJnlBatchName) then begin
        if not IntrastatJnlBatch.FINDFIRST then begin
          IntraJnlTemplate.GET(CurrentJnlTemplateName);
          IntrastatJnlBatch.INIT;
          IntrastatJnlBatch."Journal Template Name" := IntraJnlTemplate.Name;
          IntrastatJnlBatch.Name := Text002;
          IntrastatJnlBatch.Description := Text003;
          IntrastatJnlBatch.INSERT;
          COMMIT;
        end;
        CurrentJnlBatchName := IntrastatJnlBatch.Name;
      end;
    END;

    [External]
    PROCEDURE CheckName@4(CurrentJnlBatchName@1000 : Code[10];VAR IntrastatJnlLine@1001 : Record "Intrastat Jnl. Line");
    VAR
      IntrastatJnlBatch@1002 : Record "Intrastat Jnl. Batch";
    BEGIN
      IntrastatJnlBatch.GET(IntrastatJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
    END;

    [External]
    PROCEDURE SetName@5(CurrentJnlBatchName@1000 : Code[10];VAR IntrastatJnlLine@1001 : Record "Intrastat Jnl. Line");
    BEGIN
      IntrastatJnlLine.FILTERGROUP(2);
      IntrastatJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      IntrastatJnlLine.FILTERGROUP(0);
      if IntrastatJnlLine.FIND('-') then;
    END;

    [External]
    PROCEDURE LookupName@7(CurrentJnlTemplateName@1000 : Code[10];CurrentJnlBatchName@1001 : Code[10];VAR EntrdJnlBatchName@1002 : Text[10]) : Boolean;
    VAR
      IntrastatJnlBatch@1003 : Record "Intrastat Jnl. Batch";
    BEGIN
      IntrastatJnlBatch."Journal Template Name" := CurrentJnlTemplateName;
      IntrastatJnlBatch.Name := CurrentJnlBatchName;
      IntrastatJnlBatch.FILTERGROUP(2);
      IntrastatJnlBatch.SETRANGE("Journal Template Name",CurrentJnlTemplateName);
      IntrastatJnlBatch.FILTERGROUP(0);
      if PAGE.RUNMODAL(0,IntrastatJnlBatch) <> ACTION::LookupOK then
        exit(false);

      EntrdJnlBatchName := IntrastatJnlBatch.Name;
      exit(true);
    END;

    [External]
    PROCEDURE CalcStatisticalValue@6(VAR IntrastatJnlLine@1000 : Record "Intrastat Jnl. Line";LastIntrastatJnlLine@1001 : Record "Intrastat Jnl. Line";VAR StatisticalValue@1002 : Decimal;VAR TotalStatisticalValue@1003 : Decimal;VAR ShowStatisticalValue@1004 : Boolean;VAR ShowTotalStatisticalValue@1005 : Boolean);
    VAR
      TempIntrastatJnlLine@1006 : Record "Intrastat Jnl. Line";
      TempIntrastatJnlLine2@1007 : Record "Intrastat Jnl. Line";
    BEGIN
      TempIntrastatJnlLine.COPYFILTERS(IntrastatJnlLine);

      if TempIntrastatJnlLine.CALCSUMS("Statistical Value") then begin
        if IntrastatJnlLine."Line No." <> 0 then // 0 = New record
          TotalStatisticalValue := TempIntrastatJnlLine."Statistical Value"
        else
          TotalStatisticalValue := TempIntrastatJnlLine."Statistical Value" + LastIntrastatJnlLine."Statistical Value";

        ShowTotalStatisticalValue := true;
      end else
        ShowTotalStatisticalValue := false;

      if IntrastatJnlLine."Line No." <> 0 then begin // 0 = New record
        TempIntrastatJnlLine.SETFILTER("Line No.",'<=%1',IntrastatJnlLine."Line No.");
        if TempIntrastatJnlLine.CALCSUMS("Statistical Value") then begin
          StatisticalValue := TempIntrastatJnlLine."Statistical Value";
          ShowStatisticalValue := true;
        end else
          ShowStatisticalValue := false;
      end else begin
        TempIntrastatJnlLine.SETFILTER("Line No.",'<=%1',LastIntrastatJnlLine."Line No.");
        if TempIntrastatJnlLine.CALCSUMS("Statistical Value") then begin
          TempIntrastatJnlLine2.COPYFILTERS(IntrastatJnlLine);
          TempIntrastatJnlLine2 := LastIntrastatJnlLine;
          if TempIntrastatJnlLine2.NEXT <> 0 then begin
            StatisticalValue := TempIntrastatJnlLine."Statistical Value";
          end else
            StatisticalValue := TempIntrastatJnlLine."Statistical Value" + LastIntrastatJnlLine."Statistical Value";

          ShowStatisticalValue := true;
        end else
          ShowStatisticalValue := false;
      end;
    END;

    BEGIN
    END.
  }
}

