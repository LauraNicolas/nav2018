OBJECT Table 99000848 Registered Absence
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckSyntax;
             END;

    OnModify=BEGIN
               CheckSyntax;
             END;

    OnRename=BEGIN
               CheckSyntax;
             END;

    CaptionML=ENU=Registered Absence;
  }
  FIELDS
  {
    { 1   ;   ;Capacity Type       ;Option        ;CaptionML=ENU=Capacity Type;
                                                   OptionCaptionML=ENU=Work Center,Machine Center;
                                                   OptionString="Work Center","Machine Center" }
    { 2   ;   ;No.                 ;Code20        ;TableRelation=IF ("Capacity Type"=CONST("Work Center")) "Work Center"
                                                                 ELSE IF ("Capacity Type"=CONST("Machine Center")) "Machine Center";
                                                   CaptionML=ENU=No. }
    { 3   ;   ;Date                ;Date          ;CaptionML=ENU=Date }
    { 4   ;   ;Starting Time       ;Time          ;OnValidate=BEGIN
                                                                if ("Ending Time" = 000000T) or
                                                                   ("Ending Time" < "Starting Time" )
                                                                then
                                                                  VALIDATE("Ending Time","Starting Time");

                                                                "Starting Date-Time" := CREATEDATETIME(Date,"Starting Time");
                                                              END;

                                                   CaptionML=ENU=Starting Time }
    { 5   ;   ;Ending Time         ;Time          ;OnValidate=BEGIN
                                                                if "Ending Time" < "Starting Time" then
                                                                  ERROR(Text002,FIELDCAPTION("Ending Time"),FIELDCAPTION("Starting Time"));

                                                                "Ending Date-Time" := CREATEDATETIME(Date,"Ending Time");
                                                              END;

                                                   CaptionML=ENU=Ending Time }
    { 6   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 7   ;   ;Capacity            ;Decimal       ;CaptionML=ENU=Capacity;
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 8   ;   ;Starting Date-Time  ;DateTime      ;OnValidate=BEGIN
                                                                "Starting Time" := DT2TIME("Starting Date-Time");
                                                                Date := DT2DATE("Starting Date-Time");
                                                                VALIDATE("Starting Time");
                                                              END;

                                                   CaptionML=ENU=Starting Date-Time }
    { 9   ;   ;Ending Date-Time    ;DateTime      ;OnValidate=BEGIN
                                                                "Ending Time" := DT2TIME("Ending Date-Time");
                                                                Date := DT2DATE("Ending Date-Time");
                                                                VALIDATE("Ending Time");
                                                              END;

                                                   CaptionML=ENU=Ending Date-Time }
  }
  KEYS
  {
    {    ;"Capacity Type","No.",Date,"Starting Time","Ending Time";
                                                   Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 must not be blank.';
      Text001@1001 : TextConst 'ENU=%1 must be higher than %2';
      Text002@1002 : TextConst 'ENU=%1 must be higher than %2.';

    LOCAL PROCEDURE CheckSyntax@7();
    BEGIN
      if Date = 0D then
        ERROR(Text000,FIELDCAPTION(Date));
      if "Starting Time" = 000000T then
        ERROR(Text000,FIELDCAPTION("Starting Time"));
      if "Ending Time" = 000000T then
        ERROR(Text000,FIELDCAPTION("Ending Time"));
      if "Starting Time" > "Ending Time" then
        ERROR(Text001,FIELDCAPTION("Ending Time"),FIELDCAPTION("Starting Time"));
    END;

    [External]
    PROCEDURE UpdateDatetime@11();
    BEGIN
      "Starting Date-Time" := CREATEDATETIME(Date,"Starting Time");
      "Ending Date-Time" := CREATEDATETIME(Date,"Ending Time");
    END;

    BEGIN
    END.
  }
}

