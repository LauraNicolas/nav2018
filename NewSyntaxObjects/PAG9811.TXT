OBJECT Page 9811 User ACS Setup
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=User ACS Setup;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=true;
    SourceTable=User;
    DataCaptionExpr="Full Name";
    PageType=Card;
    OnAfterGetRecord=BEGIN
                       NameID := IdentityManagement.GetNameIdentifier("User Security ID");
                       ACSStatus := IdentityManagement.GetACSStatus("User Security ID");
                       AuthenticationID := IdentityManagement.GetAuthenticationKey("User Security ID");
                     END;

    OnModifyRecord=BEGIN
                     IdentityManagement.SetAuthenticationKey("User Security ID",AuthenticationID);
                   END;

    ActionList=ACTIONS
    {
      { 7       ;    ;ActionContainer;
                      Name=ActionContainer7;
                      ActionContainerType=ActionItems }
      { 8       ;1   ;Action    ;
                      Name=Generate Auth Key;
                      CaptionML=ENU=Generate Auth Key;
                      ToolTipML=ENU=Generate an authentication key for Access Control Service authentication.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Setup;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Convert@1001 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Convert";
                                 UTF8Encoding@1002 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.UTF8Encoding";
                                 CreatedGuid@1003 : Text;
                               BEGIN
                                 CreatedGuid := CREATEGUID;
                                 UTF8Encoding := UTF8Encoding.UTF8Encoding;

                                 AuthenticationID := Convert.ToBase64String(UTF8Encoding.GetBytes(CreatedGuid));

                                 IdentityManagement.SetAuthenticationKey("User Security ID",AuthenticationID);

                                 CurrPage.UPDATE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=ACS;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General;
                GroupType=Group }

    { 6   ;2   ;Field     ;
                Name=User Name;
                ToolTipML=ENU=Specifies the user's name. If the user is required to present credentials when starting the client, this is the name that the user must present.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="User Name";
                Editable=FALSE;
                ImplicitType=Code50 }

    { 3   ;2   ;Field     ;
                Name=NameID;
                CaptionML=ENU=ACS Name ID;
                ToolTipML=[ENU="Specifies the name identifier provided by the ACS security token. You cannot enter a value in this field; it is populated automatically when the user logs on for the first time.."];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NameID;
                Editable=FALSE;
                ImplicitType=Text250 }

    { 4   ;2   ;Field     ;
                Name=AuthenticationID;
                CaptionML=ENU=Authentication Key;
                ToolTipML=ENU=Specifies the authentication key that is generated after you choose Generate Auth Key in the User ACS Setup dialog box. After you configure your Azure deployment and your Dynamics 365 components for ACS, send this value and the User Name value to the user, and then direct the user to provide these values when they log on to a Dynamics 365 client.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AuthenticationID;
                OnValidate=BEGIN
                             if not (AuthenticationID = '') then begin
                               if not IdentityManagement.ValidateAuthKeyStrength(AuthenticationID) then
                                 ERROR(WeakAuthKeyErr);
                             end;

                             IdentityManagement.SetAuthenticationKey("User Security ID",AuthenticationID);
                             ACSStatus := IdentityManagement.GetACSStatus("User Security ID");
                           END;

                ImplicitType=Text80 }

    { 5   ;2   ;Field     ;
                Name=ACSStatus;
                CaptionML=ENU=ACS Status;
                ToolTipML=ENU=Specifies the current authentication status of the user.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ACSStatus;
                Editable=FALSE;
                ImplicitType=Option }

  }
  CODE
  {
    VAR
      IdentityManagement@1005 : Codeunit "Identity Management";
      NameID@1000 : Text[250] INDATASET;
      AuthenticationID@1001 : Text[80] INDATASET;
      ACSStatus@1002 : 'Disabled,Pending,Registered,Unknown';
      WeakAuthKeyErr@1003 : TextConst 'ENU=The authentication key you entered is too weak. It must be at least 8 characters long and contain both upper case and lower case letters and numbers. Choose the Generate Auth Key action to generate one for you.';

    BEGIN
    END.
  }
}

