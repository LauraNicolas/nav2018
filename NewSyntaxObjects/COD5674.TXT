OBJECT Codeunit 5674 FADimensionManagement
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The combination of dimensions used in %1 %2, %3, %4 is blocked. %5';
      Text001@1001 : TextConst 'ENU=A dimension used in %1 %2, %3, %4 has caused an error. %5';
      TempSelectedDim@1003 : TEMPORARY Record "Selected Dimension";
      TempSelectedDim2@1004 : TEMPORARY Record "Selected Dimension";
      TempSelectedDim3@1005 : TEMPORARY Record "Selected Dimension";

    [External]
    PROCEDURE GetSelectedDim@2(VAR SelectedDim@1000 : Record "Selected Dimension");
    BEGIN
      CLEAR(TempSelectedDim);
      TempSelectedDim.RESET;
      TempSelectedDim.DELETEALL;
      if SelectedDim.FIND('-') then
        repeat
          TempSelectedDim."Dimension Code" := SelectedDim."Dimension Code";
          TempSelectedDim.INSERT;
        until SelectedDim.NEXT = 0;
    END;

    [External]
    PROCEDURE GetDimensions@4(VAR DimBuf@1000 : Record "Dimension Buffer");
    BEGIN
      if TempSelectedDim2.FIND('-') then
        repeat
          DimBuf."Dimension Code" := TempSelectedDim2."Dimension Code";
          DimBuf."Dimension Value Code" := TempSelectedDim2."New Dimension Value Code";
          DimBuf.INSERT;
        until TempSelectedDim2.NEXT = 0;
    END;

    [External]
    PROCEDURE CheckFAAllocDim@5(VAR FAAlloc@1000 : Record "FA Allocation";DimSetID@1002 : Integer);
    VAR
      DimMgt@1001 : Codeunit DimensionManagement;
      TableID@1003 : ARRAY [10] OF Integer;
      No@1004 : ARRAY [10] OF Code[20];
    BEGIN
      if not DimMgt.CheckDimIDComb(DimSetID) then
        ERROR(
          Text000,
          FAAlloc.TABLECAPTION,FAAlloc.Code,FAAlloc."Allocation Type",FAAlloc."Line No.",
          DimMgt.GetDimCombErr);

      TableID[1] := DimMgt.TypeToTableID1(0);
      No[1] := FAAlloc."Account No.";

      if not DimMgt.CheckDimValuePosting(TableID,No,DimSetID) then
        ERROR(
          Text001,
          FAAlloc.TABLECAPTION,FAAlloc.Code,FAAlloc."Allocation Type",FAAlloc."Line No.",
          DimMgt.GetDimValuePostingErr);
    END;

    [External]
    PROCEDURE GetFALedgEntryDimID@1(Type@1000 : Integer;DimSetID@1001 : Integer);
    VAR
      DimSetEntry@1002 : Record "Dimension Set Entry";
    BEGIN
      if Type = 0 then begin
        CLEAR(TempSelectedDim2);
        TempSelectedDim2.RESET;
        TempSelectedDim2.DELETEALL;
      end;
      if Type = 1 then begin
        CLEAR(TempSelectedDim3);
        TempSelectedDim3.RESET;
        TempSelectedDim3.DELETEALL;
      end;
      with DimSetEntry do begin
        SETRANGE("Dimension Set ID",DimSetID);
        if FIND('-') then
          repeat
            TempSelectedDim.SETRANGE("Dimension Code","Dimension Code");
            if TempSelectedDim.FINDFIRST then begin
              if Type = 0 then begin
                TempSelectedDim2."Dimension Code" := "Dimension Code";
                TempSelectedDim2."New Dimension Value Code" := "Dimension Value Code";
                TempSelectedDim2.INSERT;
              end;
              if Type = 1 then begin
                TempSelectedDim3."Dimension Code" := "Dimension Code";
                TempSelectedDim3."New Dimension Value Code" := "Dimension Value Code";
                TempSelectedDim3.INSERT;
              end;
            end;
          until NEXT = 0;
      end;
    END;

    [External]
    PROCEDURE TestEqualFALedgEntryDimID@3(DimSetID@1000 : Integer) : Boolean;
    BEGIN
      GetFALedgEntryDimID(1,DimSetID);
      if TempSelectedDim2.COUNT <> TempSelectedDim3.COUNT then
        exit(false);
      if TempSelectedDim2.FIND('-') then
        repeat
          TempSelectedDim3.SETRANGE("Dimension Code",TempSelectedDim2."Dimension Code");
          if not TempSelectedDim3.FINDFIRST then
            exit(false);
          if TempSelectedDim2."New Dimension Value Code" <> TempSelectedDim3."New Dimension Value Code" then
            exit(false);
        until TempSelectedDim2.NEXT = 0;
      exit(true);
    END;

    BEGIN
    END.
  }
}

