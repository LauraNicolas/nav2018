OBJECT Codeunit 81 Sales-Post (Yes/No)
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    TableNo="Sales Header";
    EventSubscriberInstance=Manual;
    OnRun=VAR
            SalesHeader@1000 : Record "Sales Header";
          BEGIN
            if not FIND then
              ERROR(NothingToPostErr);

            SalesHeader.COPY(Rec);
            Code(SalesHeader);
            Rec := SalesHeader;
          END;

  }
  CODE
  {
    VAR
      ShipInvoiceQst@1000 : TextConst 'ENU=&Ship,&Invoice,Ship &and Invoice';
      PostConfirmQst@1001 : TextConst '@@@="%1 = Document Type";ENU=Do you want to post the %1?';
      ReceiveInvoiceQst@1002 : TextConst 'ENU=&Receive,&Invoice,Receive &and Invoice';
      NothingToPostErr@1006 : TextConst 'ENU=There is nothing to post.';

    LOCAL PROCEDURE Code@1(VAR SalesHeader@1001 : Record "Sales Header");
    VAR
      SalesSetup@1002 : Record "Sales & Receivables Setup";
      SalesPostViaJobQueue@1000 : Codeunit "Sales Post via Job Queue";
      HideDialog@1003 : Boolean;
    BEGIN
      HideDialog := false;

      OnBeforeConfirmSalesPost(SalesHeader,HideDialog);
      if not HideDialog then
        if not ConfirmPost(SalesHeader) then
          exit;

      SalesSetup.GET;
      if SalesSetup."Post with Job Queue" then
        SalesPostViaJobQueue.EnqueueSalesDoc(SalesHeader)
      else
        CODEUNIT.RUN(CODEUNIT::"Sales-Post",SalesHeader);
    END;

    LOCAL PROCEDURE ConfirmPost@4(VAR SalesHeader@1000 : Record "Sales Header") : Boolean;
    VAR
      Selection@1001 : Integer;
    BEGIN
      with SalesHeader do begin
        case "Document Type" of
          "Document Type"::Order:
            begin
              Selection := STRMENU(ShipInvoiceQst,3);
              Ship := Selection in [1,3];
              Invoice := Selection in [2,3];
              if Selection = 0 then
                exit(false);
            end;
          "Document Type"::"Return Order":
            begin
              Selection := STRMENU(ReceiveInvoiceQst,3);
              if Selection = 0 then
                exit(false);
              Receive := Selection in [1,3];
              Invoice := Selection in [2,3];
            end
          else
            if not CONFIRM(PostConfirmQst,false,LOWERCASE(FORMAT("Document Type"))) then
              exit(false);
        end;
        "Print Posted Documents" := false;
      end;
      exit(true);
    END;

    [Internal]
    PROCEDURE Preview@2(VAR SalesHeader@1000 : Record "Sales Header");
    VAR
      SalesPostYesNo@1001 : Codeunit "Sales-Post (Yes/No)";
      GenJnlPostPreview@1002 : Codeunit "Gen. Jnl.-Post Preview";
    BEGIN
      BINDSUBSCRIPTION(SalesPostYesNo);
      GenJnlPostPreview.Preview(SalesPostYesNo,SalesHeader);
    END;

    [EventSubscriber(Codeunit,19,OnRunPreview)]
    LOCAL PROCEDURE OnRunPreview@3(VAR Result@1000 : Boolean;Subscriber@1001 : Variant;RecVar@1002 : Variant);
    VAR
      SalesHeader@1004 : Record "Sales Header";
      SalesPost@1003 : Codeunit "Sales-Post";
    BEGIN
      with SalesHeader do begin
        COPY(RecVar);
        Receive := "Document Type" = "Document Type"::"Return Order";
        Ship := "Document Type" = "Document Type"::Order;
        Invoice := true;
      end;
      SalesPost.SetPreviewMode(true);
      Result := SalesPost.RUN(SalesHeader);
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeConfirmSalesPost@5(VAR SalesHeader@1000 : Record "Sales Header";VAR HideDialog@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

