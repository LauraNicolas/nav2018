OBJECT Page 1238 Transformation Rule Card
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Transformation Rule Card;
    SourceTable="Transformation Rule";
    PageType=Card;
    OnAfterGetCurrRecord=BEGIN
                           UpdateEnabled;
                         END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General;
                GroupType=Group }

    { 3   ;2   ;Field     ;
                Name=Code;
                ToolTipML=ENU=Specifies rules for how text that was imported from an external file is transformed to a supported value that can be mapped to the specified field in Dynamics 365.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Code;
                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies rules for how text that was imported from an external file is transformed to a supported value that can be mapped to the specified field in Dynamics 365.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                ImplicitType=Text100 }

    { 5   ;2   ;Field     ;
                Name=Transformation Type;
                ToolTipML=ENU=Specifies rules for how text that was imported from an external file is transformed to a supported value that can be mapped to the specified field in Dynamics 365.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Transformation Type";
                OnValidate=BEGIN
                             UpdateEnabled
                           END;

                ImplicitType=Option }

    { 25  ;2   ;Field     ;
                Name=Next Transformation Rule;
                ToolTipML=ENU=Specifies the transformation rule that takes the result of this rule and transforms the value.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Next Transformation Rule";
                OnAssistEdit=BEGIN
                               EditNextTransformationRule;
                             END;

                ImplicitType=Code20 }

    { 19  ;2   ;Group     ;
                Name=Group19;
                Visible=FindValueVisibleExpr;
                GroupType=Group }

    { 6   ;3   ;Field     ;
                Name=Find Value;
                ToolTipML=ENU=Specifies in the Transformation Rule table the rules for how text that was imported from an external file is transformed to a supported value that can be mapped to the specified field in Microsoft Dynamics 365.;
                ApplicationArea=#Advanced;
                SourceExpr="Find Value";
                ImplicitType=Text250 }

    { 20  ;2   ;Group     ;
                Name=Group20;
                Visible=ReplaceValueVisibleExpr;
                GroupType=Group }

    { 7   ;3   ;Field     ;
                Name=Replace Value;
                ToolTipML=ENU=Specifies rules for how text that was imported from an external file is transformed to a supported value that can be mapped to the specified field in Dynamics 365.;
                ApplicationArea=#Advanced;
                SourceExpr="Replace Value";
                ImplicitType=Text250 }

    { 21  ;2   ;Group     ;
                Name=Group21;
                Visible=StartPositionVisibleExpr;
                GroupType=Group }

    { 8   ;3   ;Field     ;
                Name=Start Position;
                ToolTipML=ENU=Specifies rules for how text that was imported from an external file is transformed to a supported value that can be mapped to the specified field in Dynamics 365.;
                ApplicationArea=#Advanced;
                SourceExpr="Start Position";
                ImplicitType=Integer }

    { 12  ;3   ;Field     ;
                Name=Starting Text;
                ToolTipML=ENU=Specifies the first part of text that was imported from an external file to be transformed to a supported value by mapping to the specified field in Dynamics 365.;
                ApplicationArea=#Advanced;
                SourceExpr="Starting Text";
                ImplicitType=Text250 }

    { 22  ;2   ;Group     ;
                Name=Group22;
                Visible=LengthVisibleExpr;
                GroupType=Group }

    { 9   ;3   ;Field     ;
                Name=Length;
                ToolTipML=ENU=Specifies the length of one item unit when measured in the specified unit of measure.;
                ApplicationArea=#Advanced;
                SourceExpr=Length;
                ImplicitType=Integer }

    { 13  ;3   ;Field     ;
                Name=Ending Text;
                ToolTipML=ENU=Specifies the last part of text that was imported from an external file to be transformed to a supported value by mapping to the specified field in Dynamics 365.;
                ApplicationArea=#Advanced;
                SourceExpr="Ending Text";
                ImplicitType=Text250 }

    { 23  ;2   ;Group     ;
                Name=Group23;
                Visible=DateFormatVisibleExpr;
                GroupType=Group }

    { 10  ;3   ;Field     ;
                Name=Data Format;
                ToolTipML=ENU=Specifies in the Transformation Rule table the rules for how text that was imported from an external file is transformed to a supported value that can be mapped to the specified field in Microsoft Dynamics 365.;
                ApplicationArea=#Advanced;
                SourceExpr="Data Format";
                ImplicitType=Text100 }

    { 24  ;2   ;Group     ;
                Name=Group24;
                Visible=DataFormattingCultureVisibleExpr;
                GroupType=Group }

    { 11  ;3   ;Field     ;
                Name=Data Formatting Culture;
                ToolTipML=ENU=Specifies in the Transformation Rule table the rules for how text that was imported from an external file is transformed to a supported value that can be mapped to the specified field in Microsoft Dynamics 365.;
                ApplicationArea=#Advanced;
                SourceExpr="Data Formatting Culture";
                ImplicitType=Text10 }

    { 14  ;1   ;Group     ;
                Name=Test;
                CaptionML=ENU=Test;
                GroupType=Group }

    { 15  ;2   ;Field     ;
                Name=TestText;
                CaptionML=ENU=Test Text;
                ToolTipML=ENU=Specifies rules for how text that was imported from an external file is transformed to a supported value that can be mapped to the specified field in Dynamics 365.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TestText;
                MultiLine=true;
                ImplicitType=Text }

    { 18  ;2   ;Group     ;
                Name=Group18;
                GroupType=Group }

    { 16  ;3   ;Field     ;
                Name=ResultText;
                CaptionML=ENU=Result;
                ToolTipML=ENU=Specifies rules for how text that was imported from an external file is transformed to a supported value that can be mapped to the specified field in Dynamics 365.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ResultText;
                Editable=FALSE;
                ImplicitType=Text }

    { 17  ;3   ;Field     ;
                Name=UpdateResultLbl;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=UpdateResultLbl;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ResultText := TransformText(TestText);
                            END;

                ImplicitType=TextConst;
                ShowCaption=false }

  }
  CODE
  {
    VAR
      FindValueVisibleExpr@1000 : Boolean;
      ReplaceValueVisibleExpr@1001 : Boolean;
      StartPositionVisibleExpr@1002 : Boolean;
      LengthVisibleExpr@1003 : Boolean;
      DateFormatVisibleExpr@1004 : Boolean;
      DataFormattingCultureVisibleExpr@1005 : Boolean;
      TestText@1006 : Text;
      ResultText@1007 : Text;
      UpdateResultLbl@1008 : TextConst 'ENU=Update';

    LOCAL PROCEDURE UpdateEnabled@1();
    BEGIN
      FindValueVisibleExpr :=
        "Transformation Type" in ["Transformation Type"::Replace,"Transformation Type"::"Regular Expression - Replace",
                                  "Transformation Type"::"Regular Expression - Match"];
      ReplaceValueVisibleExpr :=
        "Transformation Type" in ["Transformation Type"::"Regular Expression - Replace","Transformation Type"::Replace];
      StartPositionVisibleExpr :=
        "Transformation Type" in ["Transformation Type"::Substring];
      LengthVisibleExpr :=
        "Transformation Type" in ["Transformation Type"::Substring];
      DateFormatVisibleExpr :=
        "Transformation Type" in ["Transformation Type"::"Date and Time Formatting","Transformation Type"::"Decimal Formatting"];
      DataFormattingCultureVisibleExpr :=
        "Transformation Type" in ["Transformation Type"::"Date and Time Formatting","Transformation Type"::"Decimal Formatting"];
    END;

    BEGIN
    END.
  }
}

