OBJECT Page 664 Sales Prepayment Percentages
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Sales Prepayment Percentages;
    SourceTable="Sales Prepayment %";
    DataCaptionExpr=Caption;
    DelayedInsert=true;
    PageType=Worksheet;
    OnInit=BEGIN
             CodeFilterCtrlEnable := true;
             SalesCodeFilterCtrlEnable := true;
             SalesCodeEditable := true;
           END;

    OnOpenPage=BEGIN
                 GetRecFilters;
                 SetRecFilters;
               END;

    OnAfterGetCurrRecord=BEGIN
                           SetEditable;
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 17  ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 18  ;2   ;Field     ;
                Name=SalesTypeFilter;
                CaptionML=ENU=Sales Type Filter;
                ToolTipML=ENU=Specifies if the sales prepayments apply to customers or price groups.;
                OptionCaptionML=ENU=Customer,Customer Price Group,All Customers,None;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesTypeFilter;
                OnValidate=BEGIN
                             SalesTypeFilterOnAfterValidate;
                           END;

                ImplicitType=Option }

    { 19  ;2   ;Field     ;
                Name=SalesCodeFilterCtrl;
                CaptionML=ENU=Sales Code Filter;
                ToolTipML=ENU=Specifies a filter for the customer or price group that the prepayment percentages apply to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesCodeFilter;
                Enabled=SalesCodeFilterCtrlEnable;
                OnValidate=BEGIN
                             SalesCodeFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           CustList@1005 : Page "Customer List";
                           CustPriceGrList@1004 : Page "Customer Price Groups";
                         BEGIN
                           if SalesTypeFilter = SalesTypeFilter::"All Customers" then
                             exit;

                           case SalesTypeFilter of
                             SalesTypeFilter::Customer:
                               begin
                                 CustList.LOOKUPMODE := true;
                                 if CustList.RUNMODAL = ACTION::LookupOK then begin
                                   Text := CustList.GetSelectionFilter;
                                   exit(true);
                                 end;
                               end;
                             SalesTypeFilter::"Customer Price Group":
                               begin
                                 CustPriceGrList.LOOKUPMODE := true;
                                 if CustPriceGrList.RUNMODAL = ACTION::LookupOK then begin
                                   Text := CustPriceGrList.GetSelectionFilter;
                                   exit(true);
                                 end;
                               end;
                           end;
                         END;

                ImplicitType=Text }

    { 24  ;2   ;Field     ;
                Name=CodeFilterCtrl;
                CaptionML=ENU=Item No. Filter;
                ToolTipML=ENU=Specifies a filter for the items that the prepayment percentages apply to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ItemNoFilter;
                Enabled=CodeFilterCtrlEnable;
                OnValidate=BEGIN
                             ItemNoFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           ItemList@1000 : Page "Item List";
                         BEGIN
                           ItemList.LOOKUPMODE := true;
                           if ItemList.RUNMODAL = ACTION::LookupOK then begin
                             Text := ItemList.GetSelectionFilter;
                             exit(true);
                           end;
                         END;

                ImplicitType=Text }

    { 20  ;2   ;Field     ;
                Name=StartingDateFilter;
                CaptionML=ENU=Starting Date Filter;
                ToolTipML=ENU=Specifies a filter for the starting date of the prepayment percentages.;
                ApplicationArea=#Prepayments;
                SourceExpr=StartingDateFilter;
                OnValidate=VAR
                             ApplicationMgt@1000 : Codeunit ApplicationManagement;
                           BEGIN
                             if ApplicationMgt.MakeDateFilter(StartingDateFilter) = 0 then;
                             StartingDateFilterOnAfterValid;
                           END;

                ImplicitType=Text30 }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Sales Type;
                ToolTipML=ENU=Specifies the sales type of the prepayment percentage.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sales Type";
                OnValidate=BEGIN
                             SalesTypeOnAfterValidate;
                           END;

                ImplicitType=Option }

    { 4   ;2   ;Field     ;
                Name=Sales Code;
                ToolTipML=ENU=Specifies the code that belongs to the sales type.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sales Code";
                Editable=SalesCodeEditable;
                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name=Item No.;
                ToolTipML=ENU=Specifies the number of the item for which the prepayment percentage is valid.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item No.";
                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name=Starting Date;
                ToolTipML=ENU=Specifies the date from which the prepayment percentage is valid.;
                ApplicationArea=#Prepayments;
                SourceExpr="Starting Date";
                ImplicitType=Date }

    { 10  ;2   ;Field     ;
                Name=Ending Date;
                ToolTipML=ENU=Specifies the date to which the prepayment percentage is valid.;
                ApplicationArea=#Prepayments;
                SourceExpr="Ending Date";
                ImplicitType=Date }

    { 12  ;2   ;Field     ;
                Name=Prepayment %;
                ToolTipML=ENU=Specifies the prepayment percentage to use to calculate the prepayment for sales.;
                ApplicationArea=#Prepayments;
                SourceExpr="Prepayment %";
                ImplicitType=Decimal }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      SalesTypeFilter@1003 : 'Customer,"Customer Price Group","All Customers",None';
      SalesCodeFilter@1002 : Text;
      ItemNoFilter@1001 : Text;
      StartingDateFilter@1000 : Text[30];
      SalesCodeEditable@19031640 : Boolean INDATASET;
      SalesCodeFilterCtrlEnable@19013164 : Boolean INDATASET;
      CodeFilterCtrlEnable@19026169 : Boolean INDATASET;

    LOCAL PROCEDURE SetEditable@3();
    BEGIN
      SalesCodeEditable := "Sales Type" <> "Sales Type"::"All Customers";
    END;

    LOCAL PROCEDURE GetRecFilters@4();
    BEGIN
      if HASFILTER then begin
        if GETFILTER("Sales Type") <> '' then
          SalesTypeFilter := "Sales Type"
        else
          SalesTypeFilter := SalesTypeFilter::None;

        SalesCodeFilter := GETFILTER("Sales Code");
        ItemNoFilter := GETFILTER("Item No.");
        EVALUATE(StartingDateFilter,GETFILTER("Starting Date"));
      end;
    END;

    [External]
    PROCEDURE SetRecFilters@5();
    BEGIN
      SalesCodeFilterCtrlEnable := true;
      CodeFilterCtrlEnable := true;

      if SalesTypeFilter <> SalesTypeFilter::None then
        SETRANGE("Sales Type",SalesTypeFilter)
      else
        SETRANGE("Sales Type");

      if SalesTypeFilter in [SalesTypeFilter::"All Customers",SalesTypeFilter::None] then begin
        SalesCodeFilterCtrlEnable := false;
        SalesCodeFilter := '';
      end;

      if SalesCodeFilter <> '' then
        SETFILTER("Sales Code",SalesCodeFilter)
      else
        SETRANGE("Sales Code");

      if ItemNoFilter <> '' then
        SETFILTER("Item No.",ItemNoFilter)
      else
        SETRANGE("Item No.");

      if StartingDateFilter <> '' then
        SETFILTER("Starting Date",StartingDateFilter)
      else
        SETRANGE("Starting Date");

      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE Caption@6() : Text;
    VAR
      Item@1005 : Record Item;
      Cust@1004 : Record Customer;
      CustPriceGr@1003 : Record "Customer Price Group";
      ItemNoCaption@1001 : Text;
      SalesCodeCaption@1000 : Text;
    BEGIN
      if ItemNoFilter <> '' then begin
        ItemNoCaption := STRSUBSTNO('%1 %2',Item.TABLECAPTION,ItemNoFilter);
        if Item.GET(COPYSTR(ItemNoFilter,1,MAXSTRLEN(Item."No."))) then
          ItemNoCaption := ItemNoCaption + ' - ' + Item.Description;
      end;

      case SalesTypeFilter of
        SalesTypeFilter::Customer:
          begin
            SalesCodeCaption := STRSUBSTNO('%1 %2',Cust.TABLECAPTION,SalesCodeFilter);
            if Cust.GET(COPYSTR(SalesCodeFilter,1,MAXSTRLEN(Cust."No."))) then
              SalesCodeCaption := SalesCodeCaption + ' - ' + Cust.Name;
          end;
        SalesTypeFilter::"Customer Price Group":
          begin
            SalesCodeCaption := STRSUBSTNO('%1 %2',CustPriceGr.TABLECAPTION,SalesCodeFilter);
            if CustPriceGr.GET(COPYSTR(SalesCodeFilter,1,MAXSTRLEN(CustPriceGr.Code))) then
              SalesCodeCaption := SalesCodeCaption + ' - ' + CustPriceGr.Description;
          end;
        SalesTypeFilter::"All Customers":
          SalesCodeCaption := FORMAT(SalesTypeFilter);
      end;

      exit(DELCHR(ItemNoCaption + ' ' + SalesCodeCaption,'<>'))
    END;

    LOCAL PROCEDURE SalesTypeOnAfterValidate@19046339();
    BEGIN
      SetEditable;
    END;

    LOCAL PROCEDURE SalesTypeFilterOnAfterValidate@19024044();
    BEGIN
      CurrPage.SAVERECORD;
      SalesCodeFilter := '';
      SetRecFilters;
    END;

    LOCAL PROCEDURE SalesCodeFilterOnAfterValidate@19067727();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE StartingDateFilterOnAfterValid@19055286();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE ItemNoFilterOnAfterValidate@19009808();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    BEGIN
    END.
  }
}

