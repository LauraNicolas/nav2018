OBJECT Page 2501 Extension Details
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Extension Details;
    InsertAllowed=false;
    DeleteAllowed=false;
    SourceTable="NAV App";
    PageType=NavigatePage;
    SourceTableTemporary=true;
    OnOpenPage=VAR
                 WinLanguagesTable@1000 : Record "Windows Language";
               BEGIN
                 NavAppTable.SETFILTER("Package ID",'%1',"Package ID");
                 if not NavAppTable.FINDFIRST then
                   CurrPage.CLOSE;

                 SetNavAppRecord;

                 IsInstalled := NavExtensionInstallationMgmt.IsInstalled("Package ID");
                 if IsInstalled then
                   CurrPage.CAPTION(UninstallationPageCaptionMsg)
                 else
                   CurrPage.CAPTION(InstallationPageCaptionMsg);

                 // Any legal info to display
                 Legal := ((STRLEN("Privacy Statement") <> 0) or (STRLEN(EULA) <> 0));

                 // Next only enabled if legal info is found
                 NextEnabled := not IsInstalled;

                 // Step1 enabled if installing
                 Step1Enabled := not IsInstalled;

                 // Auto accept if no legal info
                 Accepted := not Legal;

                 LanguageID := GLOBALLANGUAGE;
                 WinLanguagesTable.SETRANGE("Language ID",LanguageID);
                 if WinLanguagesTable.FINDFIRST then
                   LanguageName := WinLanguagesTable.Name;
               END;

    ActionList=ACTIONS
    {
      { 25      ;    ;ActionContainer;
                      Name=ActionContainer25;
                      ActionContainerType=ActionItems }
      { 24      ;1   ;Action    ;
                      Name=Back;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite;
                      Visible=BackEnabled;
                      InFooterBar=true;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 BackEnabled := false;
                                 NextEnabled := true;
                                 Step1Enabled := true;
                                 InstallEnabled := false;
                               END;
                                }
      { 22      ;1   ;Action    ;
                      Name=Next;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite;
                      Visible=NextEnabled;
                      InFooterBar=true;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 BackEnabled := true;
                                 NextEnabled := false;
                                 Step1Enabled := false;
                                 InstallEnabled := true;
                               END;
                                }
      { 23      ;1   ;Action    ;
                      Name=Install;
                      CaptionML=ENU=Install;
                      ApplicationArea=#Basic,#Suite;
                      Visible=InstallEnabled;
                      Enabled=Accepted;
                      InFooterBar=true;
                      Image=Approve;
                      OnAction=VAR
                                 Dependencies@1000 : Text;
                                 CanChange@1001 : Boolean;
                               BEGIN
                                 CanChange := NavExtensionInstallationMgmt.IsInstalled("Package ID");

                                 if CanChange then begin
                                   MESSAGE(STRSUBSTNO(AlreadyInstalledMsg,Name));
                                   exit;
                                 end;

                                 Dependencies := NavExtensionInstallationMgmt.GetDependenciesForExtensionToInstall("Package ID");
                                 CanChange := (STRLEN(Dependencies) = 0);

                                 if not CanChange then
                                   CanChange := CONFIRM(STRSUBSTNO(DependenciesFoundQst,Name,Dependencies),false);

                                 if CanChange then
                                   NavExtensionInstallationMgmt.InstallNavExtension("Package ID",LanguageID);

                                 // If successfully installed, message users to restart activity for menusuites
                                 if NavExtensionInstallationMgmt.IsInstalled("Package ID") then
                                   MESSAGE(STRSUBSTNO(RestartActivityInstallMsg,Name));

                                 CurrPage.CLOSE;
                               END;
                                }
      { 21      ;1   ;Action    ;
                      Name=Uninstall;
                      CaptionML=ENU=Uninstall;
                      ApplicationArea=#Basic,#Suite;
                      Visible=IsInstalled;
                      InFooterBar=true;
                      Image=Approve;
                      OnAction=VAR
                                 Dependents@1000 : Text;
                                 CanChange@1001 : Boolean;
                               BEGIN
                                 CanChange := NavExtensionInstallationMgmt.IsInstalled("Package ID");
                                 if not CanChange then
                                   MESSAGE(STRSUBSTNO(AlreadyUninstalledMsg,Name));

                                 Dependents := NavExtensionInstallationMgmt.GetDependentForExtensionToUninstall("Package ID");
                                 CanChange := (STRLEN(Dependents) = 0);
                                 if not CanChange then
                                   CanChange := CONFIRM(STRSUBSTNO(DependentsFoundQst,Name,Dependents),false);

                                 if CanChange then
                                   NavExtensionInstallationMgmt.UninstallNavExtension("Package ID");

                                 // If successfully uninstalled, message users to restart activity for menusuites
                                 if not NavExtensionInstallationMgmt.IsInstalled("Package ID") then
                                   MESSAGE(STRSUBSTNO(RestartActivityUninstallMsg,Name));

                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Install NAV Extension;
                CaptionML=ENU=Install Extension;
                Visible=Step1Enabled;
                Editable=FALSE;
                GroupType=Group }

    { 27  ;2   ;Group     ;
                Name=InstallGroup;
                CaptionML=ENU=Install Extension;
                Editable=FALSE;
                GroupType=Group;
                InstructionalTextML=ENU=Extensions add new capabilities that extend and enhance functionality. }

    { 5   ;3   ;Field     ;
                Name=In_Name;
                CaptionML=ENU=Name;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name;
                ImplicitType=Text250 }

    { 16  ;3   ;Field     ;
                Name=In_Des;
                CaptionML=ENU=Description;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AppDescription;
                Editable=False;
                MultiLine=true;
                ImplicitType=BigText }

    { 7   ;3   ;Field     ;
                Name=In_Ver;
                CaptionML=ENU=Version;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=VersionDisplay;
                ImplicitType=Text }

    { 6   ;3   ;Field     ;
                Name=In_Pub;
                CaptionML=ENU=Publisher;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Publisher;
                ImplicitType=Text250 }

    { 14  ;3   ;Field     ;
                Name=In_Url;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=UrlLbl;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              HYPERLINK(Url);
                            END;

                ImplicitType=TextConst;
                ShowCaption=false }

    { 20  ;3   ;Field     ;
                Name=In_Help;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=HelpLbl;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              HYPERLINK(Help);
                            END;

                ImplicitType=TextConst;
                ShowCaption=false }

    { 3   ;1   ;Group     ;
                Name=Uninstall NAV Extension;
                CaptionML=ENU=Uninstall Extension;
                Visible=IsInstalled;
                GroupType=Group }

    { 4   ;2   ;Group     ;
                Name=UninstallGroup;
                CaptionML=ENU=Uninstall Extension;
                Editable=FALSE;
                GroupType=Group;
                InstructionalTextML=ENU=Uninstall extension to remove added features. }

    { 29  ;3   ;Field     ;
                Name=Un_Name;
                CaptionML=ENU=Name;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name;
                ImplicitType=Text250 }

    { 15  ;3   ;Field     ;
                Name=Un_Des;
                CaptionML=ENU=Description;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AppDescription;
                Editable=False;
                MultiLine=true;
                ImplicitType=BigText }

    { 11  ;3   ;Field     ;
                Name=Un_Ver;
                CaptionML=ENU=Version;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=VersionDisplay;
                ImplicitType=Text }

    { 10  ;3   ;Field     ;
                Name=Un_Pub;
                CaptionML=ENU=Publisher;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Publisher;
                ImplicitType=Text250 }

    { 32  ;3   ;Field     ;
                Name=Un_Terms;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TermsLbl;
                Visible=Legal;
                Editable=False;
                OnDrillDown=VAR
                              PermissionManager@1000 : Codeunit "Permission Manager";
                            BEGIN
                              if PermissionManager.SoftwareAsAService then
                                if EULA = OnPremEULALbl then
                                  EULA := SaaSEULALbl;
                              HYPERLINK(EULA);
                            END;

                ImplicitType=TextConst;
                ShowCaption=false }

    { 33  ;3   ;Field     ;
                Name=Un_Privacy;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PrivacyLbl;
                Visible=Legal;
                Editable=False;
                OnDrillDown=VAR
                              PermissionManager@1000 : Codeunit "Permission Manager";
                            BEGIN
                              if PermissionManager.SoftwareAsAService then
                                if "Privacy Statement" = OnPremPrivacyLbl then
                                  "Privacy Statement" := SaaSPrivacyLbl;
                              HYPERLINK("Privacy Statement");
                            END;

                ImplicitType=TextConst;
                ShowCaption=false }

    { 9   ;3   ;Field     ;
                Name=Un_Url;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=UrlLbl;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              HYPERLINK(Url);
                            END;

                ImplicitType=TextConst;
                ShowCaption=false }

    { 8   ;3   ;Field     ;
                Name=Un_Help;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=HelpLbl;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              HYPERLINK(Help);
                            END;

                ImplicitType=TextConst;
                ShowCaption=false }

    { 12  ;1   ;Group     ;
                Name=Installation;
                CaptionML=ENU=Installation;
                Visible=BackEnabled;
                GroupType=Group }

    { 13  ;2   ;Group     ;
                Name=Review Extension Information before installation;
                CaptionML=ENU=Review Extension Information before installation;
                GroupType=Group }

    { 17  ;3   ;Field     ;
                Name=Name;
                CaptionML=ENU=Name;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name;
                Editable=FALSE;
                ImplicitType=Text250 }

    { 28  ;3   ;Field     ;
                Name=Publisher;
                CaptionML=ENU=Publisher;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Publisher;
                Editable=FALSE;
                ImplicitType=Text250 }

    { 31  ;3   ;Field     ;
                Name=Language;
                CaptionML=ENU=Language;
                ApplicationArea=#Advanced;
                SourceExpr=LanguageName;
                OnValidate=VAR
                             WinLanguagesTable@1000 : Record "Windows Language";
                           BEGIN
                             WinLanguagesTable.SETRANGE(Name,LanguageName);
                             WinLanguagesTable.SETRANGE("Globally Enabled",true);
                             WinLanguagesTable.SETRANGE("Localization Exist",true);
                             if WinLanguagesTable.FINDFIRST then
                               LanguageID := WinLanguagesTable."Language ID"
                             else
                               ERROR(LanguageNotFoundErr,LanguageName);
                           END;

                OnLookup=VAR
                           WinLanguagesTable@1001 : Record "Windows Language";
                         BEGIN
                           WinLanguagesTable.SETRANGE("Globally Enabled",true);
                           WinLanguagesTable.SETRANGE("Localization Exist",true);
                           if PAGE.RUNMODAL(PAGE::"Windows Languages",WinLanguagesTable) = ACTION::LookupOK then begin
                             LanguageID := WinLanguagesTable."Language ID";
                             LanguageName := WinLanguagesTable.Name;
                           end;
                         END;

                ImplicitType=Text }

    { 30  ;3   ;Group     ;
                Name=Group30;
                Visible=Legal;
                GroupType=Group }

    { 18  ;4   ;Field     ;
                Name=Terms;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TermsLbl;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              HYPERLINK(EULA);
                            END;

                ImplicitType=TextConst;
                ShowCaption=false }

    { 19  ;4   ;Field     ;
                Name=Privacy;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PrivacyLbl;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              HYPERLINK("Privacy Statement");
                            END;

                ImplicitType=TextConst;
                ShowCaption=false }

    { 26  ;4   ;Field     ;
                Name=Accepted;
                CaptionML=ENU=I accept the terms and conditions;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Accepted;
                ImplicitType=Boolean }

  }
  CODE
  {
    VAR
      NavAppTable@1018 : Record "NAV App";
      NavExtensionInstallationMgmt@1000 : Codeunit NavExtensionInstallationMgmt;
      AppDescription@1001 : BigText;
      VersionDisplay@1015 : Text;
      LanguageName@1022 : Text;
      BackEnabled@1002 : Boolean;
      NextEnabled@1003 : Boolean;
      InstallEnabled@1004 : Boolean;
      Accepted@1005 : Boolean;
      IsInstalled@1006 : Boolean;
      Legal@1007 : Boolean;
      Step1Enabled@1008 : Boolean;
      DependenciesFoundQst@1014 : TextConst '@@@="%1=name of app, %2=semicolon separated list of uninstalled dependencies";ENU=The extension %1 has a dependency on one or more extensions: %2. \ \Do you wish to install %1 and all of its dependencies?';
      DependentsFoundQst@1013 : TextConst '@@@="%1=name of app, %2=semicolon separated list of installed dependents";ENU=The extension %1 is a dependency for on or more extensions: %2. \ \Do you wish to uninstall %1 and all of its dependents?';
      AlreadyInstalledMsg@1012 : TextConst '@@@="%1=name of app";ENU=The extension %1 is already installed.';
      AlreadyUninstalledMsg@1011 : TextConst '@@@="%1=name of app";ENU=The extension %1 is not installed.';
      InstallationPageCaptionMsg@1010 : TextConst '@@@=Caption for when extension needs to be installed;ENU=Extension Installation';
      RestartActivityInstallMsg@1020 : TextConst '@@@="Indicates that users need to restart their activity to pick up new menusuite items. %1=Name of Extension";ENU=The %1 extension was successfully installed. All active users must log out and log in again to see the navigation changes.';
      RestartActivityUninstallMsg@1019 : TextConst '@@@="Indicates that users need to restart their activity to pick up new menusuite items. %1=Name of Extension";ENU=The %1 extension was successfully uninstalled. All active users must log out and log in again to see the navigation changes.';
      UninstallationPageCaptionMsg@1009 : TextConst '@@@=Caption for when extension needs to be uninstalled;ENU=Extension Uninstallation';
      LanguageNotFoundErr@1025 : TextConst '@@@="Error message to notify user that the entered language was not found. This could mean that the language doesn''t exist or that the language is not valid within the filter set for the lookup. %1=Entered value.";ENU=Language %1 does not exist, or is not enabled globally and contains a localization. Use the lookup to select a language.';
      TermsLbl@1016 : TextConst 'ENU=Terms and Conditions';
      PrivacyLbl@1017 : TextConst '@@@=Label for privacy statement link;ENU=Privacy Statement';
      UrlLbl@1026 : TextConst 'ENU=Website';
      HelpLbl@1021 : TextConst 'ENU=Help';
      LanguageID@1023 : Integer;
      SaaSEULALbl@1024 : TextConst '@@@={Locked};ENU=" https://go.microsoft.com/fwlink/?linkid=834880"';
      SaaSPrivacyLbl@1027 : TextConst '@@@={Locked};ENU="https://go.microsoft.com/fwlink/?linkid=834881"';
      OnPremEULALbl@1029 : TextConst '@@@={Locked};ENU="https://go.microsoft.com/fwlink/?LinkId=724010"';
      OnPremPrivacyLbl@1028 : TextConst '@@@={Locked};ENU="https://go.microsoft.com/fwlink/?LinkId=724009"';

    LOCAL PROCEDURE SetNavAppRecord@1();
    VAR
      DescriptionStream@1000 : InStream;
    BEGIN
      "Package ID" := NavAppTable."Package ID";
      ID := NavAppTable.ID;
      Name := NavAppTable.Name;
      Publisher := NavAppTable.Publisher;
      VersionDisplay :=
        NavExtensionInstallationMgmt.GetVersionDisplayString(
          NavAppTable."Version Major",NavAppTable."Version Minor",
          NavAppTable."Version Build",NavAppTable."Version Revision");
      NavAppTable.CALCFIELDS(Description);
      NavAppTable.Description.CREATEINSTREAM(DescriptionStream,TEXTENCODING::UTF8);
      AppDescription.READ(DescriptionStream);
      Url := NavAppTable.Url;
      Help := NavAppTable.Help;
      "Privacy Statement" := NavAppTable."Privacy Statement";
      EULA := NavAppTable.EULA;
      INSERT;
    END;

    BEGIN
    END.
  }
}

