OBJECT Table 5997 Standard Service Line
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               LOCKTABLE;
               StdServCode.GET("Standard Service Code");
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=ENU=Standard Service Line;
  }
  FIELDS
  {
    { 1   ;   ;Standard Service Code;Code10       ;TableRelation="Standard Service Code";
                                                   CaptionML=ENU=Standard Service Code;
                                                   Editable=false }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No.;
                                                   Editable=false }
    { 3   ;   ;Type                ;Option        ;OnValidate=VAR
                                                                OldType@1000 : Integer;
                                                              BEGIN
                                                                OldType := Type;
                                                                INIT;
                                                                Type := OldType;
                                                              END;

                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Item,Resource,Cost,G/L Account";
                                                   OptionString=" ",Item,Resource,Cost,"G/L Account" }
    { 4   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource
                                                                 ELSE IF (Type=CONST(Cost)) "Service Cost"
                                                                 ELSE IF (Type=CONST("G/L Account")) "G/L Account";
                                                   OnValidate=VAR
                                                                StdTxt@1000 : Record "Standard Text";
                                                                GLAcc@1001 : Record "G/L Account";
                                                                Item@1002 : Record Item;
                                                                Res@1003 : Record Resource;
                                                                ServCost@1004 : Record "Service Cost";
                                                              BEGIN
                                                                if "No." <> xRec."No." then begin
                                                                  Quantity := 0;
                                                                  "Amount Excl. VAT" := 0;
                                                                  "Unit of Measure Code" := '';
                                                                  Description := '';
                                                                  if "No." = '' then
                                                                    exit;
                                                                  StdServCode.GET("Standard Service Code");
                                                                  case Type of
                                                                    Type::" ":
                                                                      begin
                                                                        StdTxt.GET("No.");
                                                                        Description := StdTxt.Description;
                                                                      end;
                                                                    Type::Item:
                                                                      begin
                                                                        Item.GET("No.");
                                                                        Item.TESTFIELD(Blocked,false);
                                                                        Item.TESTFIELD("Inventory Posting Group");
                                                                        Item.TESTFIELD("Gen. Prod. Posting Group");
                                                                        Description := Item.Description;
                                                                        "Unit of Measure Code" := Item."Sales Unit of Measure";
                                                                        "Variant Code" := '';
                                                                      end;
                                                                    Type::Resource:
                                                                      begin
                                                                        Res.GET("No.");
                                                                        Res.TESTFIELD(Blocked,false);
                                                                        Res.TESTFIELD("Gen. Prod. Posting Group");
                                                                        Description := Res.Name;
                                                                        "Unit of Measure Code" := Res."Base Unit of Measure";
                                                                      end;
                                                                    Type::Cost:
                                                                      begin
                                                                        ServCost.GET("No.");
                                                                        GLAcc.GET(ServCost."Account No.");
                                                                        GLAcc.TESTFIELD("Gen. Prod. Posting Group");
                                                                        Description := ServCost.Description;
                                                                        Quantity := ServCost."Default Quantity";
                                                                        "Unit of Measure Code" := ServCost."Unit of Measure Code";
                                                                      end;
                                                                    Type::"G/L Account":
                                                                      begin
                                                                        GLAcc.GET("No.");
                                                                        GLAcc.CheckGLAcc;
                                                                        GLAcc.TESTFIELD("Direct Posting",true);
                                                                        Description := GLAcc.Name;
                                                                      end;
                                                                  end;
                                                                end;

                                                                CreateDim(DimMgt.TypeToTableID5(Type),"No.");
                                                              END;

                                                   CaptionML=ENU=No. }
    { 5   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 6   ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Type);
                                                                TESTFIELD("No.");
                                                                if Quantity < 0 then
                                                                  FIELDERROR(Quantity,Text002);
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=true }
    { 7   ;   ;Amount Excl. VAT    ;Decimal       ;OnValidate=BEGIN
                                                                if Type <> Type::"G/L Account" then
                                                                  FIELDERROR(Type,STRSUBSTNO(Text001,Type));
                                                              END;

                                                   CaptionML=ENU=Amount Excl. VAT;
                                                   BlankZero=true;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrency }
    { 8   ;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE ("Item No."=FIELD("No."))
                                                                 ELSE "Unit of Measure";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Type);
                                                              END;

                                                   CaptionML=ENU=Unit of Measure Code }
    { 9   ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 10  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 11  ;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE ("Item No."=FIELD("No."));
                                                   OnValidate=VAR
                                                                Item@1000 : Record Item;
                                                                ItemVariant@1001 : Record "Item Variant";
                                                              BEGIN
                                                                if "Variant Code" = '' then begin
                                                                  if Type = Type::Item then begin
                                                                    Item.GET("No.");
                                                                    Description := Item.Description;
                                                                  end;
                                                                  exit;
                                                                end;

                                                                TESTFIELD(Type,Type::Item);
                                                                ItemVariant.GET("No.","Variant Code");
                                                                Description := ItemVariant.Description;
                                                              END;

                                                   CaptionML=ENU=Variant Code }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnValidate=BEGIN
                                                                DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"Standard Service Code","Line No."      ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      StdServCode@1001 : Record "Standard Service Code";
      DimMgt@1002 : Codeunit DimensionManagement;
      Text000@1003 : TextConst 'ENU=You cannot rename a %1.';
      Text001@1004 : TextConst 'ENU=must not be %1';
      Text002@1005 : TextConst 'ENU=must be positive';

    [External]
    PROCEDURE EmptyLine@5() : Boolean;
    BEGIN
      exit(("No." = '') and (Quantity = 0))
    END;

    [External]
    PROCEDURE InsertLine@1() : Boolean;
    BEGIN
      exit((Type = Type::" ") or not EmptyLine);
    END;

    LOCAL PROCEDURE GetCurrency@2() : Code[10];
    BEGIN
      if StdServCode.GET("Standard Service Code") then
        exit(StdServCode."Currency Code");
      exit('');
    END;

    [External]
    PROCEDURE ShowDimensions@25();
    BEGIN
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1 %2 %3',TABLECAPTION,"No.","Line No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      MODIFY;
    END;

    [External]
    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    [External]
    PROCEDURE LookupShortcutDimCode@28(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    [External]
    PROCEDURE ShowShortcutDimCode@27(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    LOCAL PROCEDURE CreateDim@26(Type1@1000 : Integer;No1@1001 : Code[20]);
    VAR
      SourceCodeSetup@1006 : Record "Source Code Setup";
      TableID@1007 : ARRAY [10] OF Integer;
      No@1008 : ARRAY [10] OF Code[20];
    BEGIN
      SourceCodeSetup.GET;

      TableID[1] := Type1;
      No[1] := No1;
      OnAfterCreateDimTableIDs(Rec,CurrFieldNo,TableID,No);

      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      "Dimension Set ID" :=
        DimMgt.GetRecDefaultDimID(
          Rec,CurrFieldNo,TableID,No,SourceCodeSetup."Service Management",
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCreateDimTableIDs@138(VAR StandardServiceLine@1000 : Record "Standard Service Line";FieldNo@1001 : Integer;TableID@1003 : ARRAY [10] OF Integer;No@1002 : ARRAY [10] OF Code[20]);
    BEGIN
    END;

    BEGIN
    END.
  }
}

