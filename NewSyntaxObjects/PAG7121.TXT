OBJECT Page 7121 Purchase Analysis Lines
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Purchase Analysis Lines;
    MultipleNewLines=true;
    SourceTable="Analysis Line";
    DelayedInsert=true;
    PageType=Worksheet;
    AutoSplitKey=true;
    OnOpenPage=VAR
                 GLSetup@1001 : Record "General Ledger Setup";
                 AnalysisLineTemplate@1000 : Record "Analysis Line Template";
               BEGIN
                 AnalysisReportMgt.OpenAnalysisLines(CurrentAnalysisLineTempl,Rec);

                 GLSetup.GET;

                 if AnalysisLineTemplate.GET(GETRANGEMAX("Analysis Area"),CurrentAnalysisLineTempl) then
                   if AnalysisLineTemplate."Item Analysis View Code" <> '' then
                     ItemAnalysisView.GET(GETRANGEMAX("Analysis Area"),AnalysisLineTemplate."Item Analysis View Code")
                   else begin
                     CLEAR(ItemAnalysisView);
                     ItemAnalysisView."Dimension 1 Code" := GLSetup."Global Dimension 1 Code";
                     ItemAnalysisView."Dimension 2 Code" := GLSetup."Global Dimension 2 Code";
                   end;
               END;

    OnAfterGetRecord=BEGIN
                       DescriptionIndent := 0;
                       DescriptionOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 27      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 28      ;2   ;Action    ;
                      Name=Insert &Items;
                      Ellipsis=true;
                      CaptionML=ENU=Insert &Items;
                      ToolTipML=ENU=Insert one or more items that you want to include in the sales analysis report.;
                      ApplicationArea=#PurchaseAnalysis;
                      Image=Item;
                      OnAction=BEGIN
                                 InsertLine(0);
                               END;
                                }
      { 30      ;2   ;Action    ;
                      Name=Insert &Vendors;
                      Ellipsis=true;
                      CaptionML=ENU=Insert &Vendors;
                      ToolTipML=ENU=Insert one or more vendors that you want to include in the sales analysis report.;
                      ApplicationArea=#PurchaseAnalysis;
                      Image=Vendor;
                      OnAction=BEGIN
                                 InsertLine(2);
                               END;
                                }
      { 36      ;2   ;Separator ;
                      Name=Separator36 }
      { 31      ;2   ;Action    ;
                      Name=Insert Ite&m Groups;
                      Ellipsis=true;
                      CaptionML=ENU=Insert Ite&m Groups;
                      ToolTipML=ENU=Insert one or more item groups that you want to include in the sales analysis report.;
                      ApplicationArea=#PurchaseAnalysis;
                      Image=ItemGroup;
                      OnAction=BEGIN
                                 InsertLine(3);
                               END;
                                }
      { 33      ;2   ;Action    ;
                      Name=Insert &Sales/Purchase Persons;
                      Ellipsis=true;
                      CaptionML=ENU=Insert &Sales/Purchase Persons;
                      ToolTipML=ENU=Insert one or more sales people of purchasers that you want to include in the sales analysis report.;
                      ApplicationArea=#PurchaseAnalysis;
                      Image=SalesPurchaseTeam;
                      OnAction=BEGIN
                                 InsertLine(5);
                               END;
                                }
      { 48      ;2   ;Separator ;
                      Name=Separator48 }
      { 49      ;2   ;Action    ;
                      Name=Renumber Lines;
                      CaptionML=ENU=Renumber Lines;
                      ToolTipML=ENU=Renumber lines in the analysis report sequentially from a number that you specify.;
                      ApplicationArea=#PurchaseAnalysis;
                      Image=Refresh;
                      OnAction=VAR
                                 AnalysisLine@1000 : Record "Analysis Line";
                                 RenAnalysisLines@1001 : Report "Renumber Analysis Lines";
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(AnalysisLine);
                                 RenAnalysisLines.Init(AnalysisLine);
                                 RenAnalysisLines.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 25  ;1   ;Field     ;
                Name=CurrentAnalysisLineTempl;
                Lookup=true;
                CaptionML=ENU=Name;
                ToolTipML=ENU=Specifies the name of the record.;
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr=CurrentAnalysisLineTempl;
                OnValidate=BEGIN
                             AnalysisReportMgt.CheckAnalysisLineTemplName(CurrentAnalysisLineTempl,Rec);
                             CurrentAnalysisLineTemplOnAfte;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           AnalysisReportMgt.LookupAnalysisLineTemplName(CurrentAnalysisLineTempl,Rec);
                           CurrPage.UPDATE(false);
                         END;

                ImplicitType=Code10 }

    { 1   ;1   ;Group     ;
                Name=Group1;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Row Ref. No.;
                ToolTipML=ENU=Specifies a row reference number for the analysis line.;
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr="Row Ref. No.";
                StyleExpr='Strong';
                OnValidate=BEGIN
                             RowRefNoOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description for the analysis line.;
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr=Description;
                StyleExpr='Strong';
                ImplicitType=Text80 }

    { 6   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the type of totaling for the analysis line. The type determines which items within the totaling range that you specify in the Range field will be totaled.;
                OptionCaptionML=ENU=Item,Item Group,,,Vendor,Sales/Purchase person,Formula;
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr=Type;
                ImplicitType=Option }

    { 8   ;2   ;Field     ;
                Name=Range;
                ToolTipML=ENU=Specifies the number or formula of the type to use to calculate the total for this line.;
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr=Range;
                OnLookup=BEGIN
                           exit(LookupTotalingRange(Text));
                         END;

                ImplicitType=Text250 }

    { 42  ;2   ;Field     ;
                Name=Dimension 1 Totaling;
                ToolTipML=ENU=Specifies which dimension value amounts will be totaled on this line.;
                ApplicationArea=#Dimensions;
                SourceExpr="Dimension 1 Totaling";
                OnLookup=BEGIN
                           exit(LookupDimTotalingRange(Text,ItemAnalysisView."Dimension 1 Code"));
                         END;

                ImplicitType=Text80 }

    { 44  ;2   ;Field     ;
                Name=Dimension 2 Totaling;
                ToolTipML=ENU=Specifies which dimension value amounts will be totaled on this line. If the type on the line is Formula, this field must be blank. Also, if you do not want the amounts on the line to be filtered by dimensions, this field must be blank.;
                ApplicationArea=#Dimensions;
                SourceExpr="Dimension 2 Totaling";
                OnLookup=BEGIN
                           exit(LookupDimTotalingRange(Text,ItemAnalysisView."Dimension 2 Code"));
                         END;

                ImplicitType=Text80 }

    { 46  ;2   ;Field     ;
                Name=Dimension 3 Totaling;
                ToolTipML=ENU=Specifies which dimension value amounts will be totaled on this line. If the type on the line is Formula, this field must be blank. Also, if you do not want the amounts on the line to be filtered by dimensions, this field must be blank.;
                ApplicationArea=#Dimensions;
                SourceExpr="Dimension 3 Totaling";
                OnLookup=BEGIN
                           exit(LookupDimTotalingRange(Text,ItemAnalysisView."Dimension 3 Code"));
                         END;

                ImplicitType=Text80 }

    { 10  ;2   ;Field     ;
                Name=New Page;
                ToolTipML=ENU=Specifies if you want a page break after the current line when you print the analysis report.;
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr="New Page";
                ImplicitType=Boolean }

    { 12  ;2   ;Field     ;
                Name=Show;
                ToolTipML=ENU=Specifies whether you want the analysis line to be included when you print the report.;
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr=Show;
                ImplicitType=Option }

    { 14  ;2   ;Field     ;
                Name=Bold;
                ToolTipML=ENU=Specifies if you want the amounts in this line to be printed in bold.;
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr=Bold;
                ImplicitType=Boolean }

    { 29  ;2   ;Field     ;
                Name=Indentation;
                ToolTipML=ENU=Specifies the indentation of the line.;
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr=Indentation;
                Visible=FALSE;
                ImplicitType=Integer }

    { 16  ;2   ;Field     ;
                Name=Italic;
                ToolTipML=ENU=Specifies if you want the amounts in this line to be printed in italics.;
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr=Italic;
                ImplicitType=Boolean }

    { 18  ;2   ;Field     ;
                Name=Underline;
                ToolTipML=ENU=Specifies if you want the amounts in this line to be underlined when printed.;
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr=Underline;
                ImplicitType=Boolean }

    { 20  ;2   ;Field     ;
                Name=Show Opposite Sign;
                ToolTipML=ENU=Specifies if you want sales and negative adjustments to be shown as positive amounts and purchases and positive adjustments to be shown as negative amounts.;
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr="Show Opposite Sign";
                ImplicitType=Boolean }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ItemAnalysisView@1000 : Record "Item Analysis View";
      AnalysisReportMgt@1001 : Codeunit "Analysis Report Management";
      CurrentAnalysisLineTempl@1002 : Code[10];
      DescriptionIndent@19057867 : Integer INDATASET;

    LOCAL PROCEDURE InsertLine@1(Type@1001 : 'Item,Customer,Vendor,ItemGroup,CustGroup,SalespersonGroup');
    VAR
      AnalysisLine@1003 : Record "Analysis Line";
      InsertAnalysisLine@1002 : Codeunit "Insert Analysis Line";
    BEGIN
      CurrPage.UPDATE(true);
      AnalysisLine.COPY(Rec);
      if "Line No." = 0 then begin
        AnalysisLine := xRec;
        if AnalysisLine.NEXT = 0 then
          AnalysisLine."Line No." := xRec."Line No." + 10000;
      end;
      case Type of
        Type::Item:
          InsertAnalysisLine.InsertItems(AnalysisLine);
        Type::Customer:
          InsertAnalysisLine.InsertCust(AnalysisLine);
        Type::Vendor:
          InsertAnalysisLine.InsertVend(AnalysisLine);
        Type::ItemGroup:
          InsertAnalysisLine.InsertItemGrDim(AnalysisLine);
        Type::CustGroup:
          InsertAnalysisLine.InsertCustGrDim(AnalysisLine);
        Type::SalespersonGroup:
          InsertAnalysisLine.InsertSalespersonPurchaser(AnalysisLine);
      end;
    END;

    [External]
    PROCEDURE SetCurrentAnalysisLineTempl@2(AnalysisLineTemlName@1000 : Code[10]);
    BEGIN
      CurrentAnalysisLineTempl := AnalysisLineTemlName;
    END;

    LOCAL PROCEDURE RowRefNoOnAfterValidate@19011265();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CurrentAnalysisLineTemplOnAfte@19019881();
    VAR
      ItemSchedName@1001 : Record "Analysis Line Template";
    BEGIN
      CurrPage.SAVERECORD;
      AnalysisReportMgt.SetAnalysisLineTemplName(CurrentAnalysisLineTempl,Rec);
      if ItemSchedName.GET(GETRANGEMAX("Analysis Area"),CurrentAnalysisLineTempl) then
        CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      DescriptionIndent := Indentation;
    END;

    BEGIN
    END.
  }
}

