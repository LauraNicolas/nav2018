OBJECT Codeunit 365 Format Address
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GLSetup@1000 : Record "General Ledger Setup";
      i@1001 : Integer;

    [External]
    PROCEDURE FormatAddr@1(VAR AddrArray@1000 : ARRAY [8] OF Text[90];Name@1001 : Text[90];Name2@1002 : Text[90];Contact@1003 : Text[90];Addr@1004 : Text[50];Addr2@1005 : Text[50];City@1006 : Text[50];PostCode@1007 : Code[20];County@1008 : Text[50];CountryCode@1009 : Code[10]);
    VAR
      Country@1010 : Record "Country/Region";
      InsertText@1011 : Integer;
      Index@1012 : Integer;
      NameLineNo@1013 : Integer;
      Name2LineNo@1014 : Integer;
      AddrLineNo@1015 : Integer;
      Addr2LineNo@1016 : Integer;
      ContLineNo@1017 : Integer;
      PostCodeCityLineNo@1018 : Integer;
      CountyLineNo@1019 : Integer;
      CountryLineNo@1020 : Integer;
    BEGIN
      CLEAR(AddrArray);

      if CountryCode = '' then begin
        GLSetup.GET;
        CLEAR(Country);
        Country."Address Format" := GLSetup."Local Address Format";
        Country."Contact Address Format" := GLSetup."Local Cont. Addr. Format";
      end else
        if not Country.GET(CountryCode) then begin
          Country.INIT;
          Country.Name := CountryCode;
        end;

      case Country."Contact Address Format" of
        Country."Contact Address Format"::First:
          begin
            NameLineNo := 2;
            Name2LineNo := 3;
            ContLineNo := 1;
            AddrLineNo := 4;
            Addr2LineNo := 5;
            PostCodeCityLineNo := 6;
            CountyLineNo := 7;
            CountryLineNo := 8;
          end;
        Country."Contact Address Format"::"After Company Name":
          begin
            NameLineNo := 1;
            Name2LineNo := 2;
            ContLineNo := 3;
            AddrLineNo := 4;
            Addr2LineNo := 5;
            PostCodeCityLineNo := 6;
            CountyLineNo := 7;
            CountryLineNo := 8;
          end;
        Country."Contact Address Format"::Last:
          begin
            NameLineNo := 1;
            Name2LineNo := 2;
            ContLineNo := 8;
            AddrLineNo := 3;
            Addr2LineNo := 4;
            PostCodeCityLineNo := 5;
            CountyLineNo := 6;
            CountryLineNo := 7;
          end;
      end;

      AddrArray[NameLineNo] := Name;
      AddrArray[Name2LineNo] := Name2;
      AddrArray[AddrLineNo] := Addr;
      AddrArray[Addr2LineNo] := Addr2;

      case Country."Address Format" of
        Country."Address Format"::"Post Code+City",
        Country."Address Format"::"City+County+Post Code",
        Country."Address Format"::"City+Post Code":
          begin
            AddrArray[ContLineNo] := Contact;
            GeneratePostCodeCity(AddrArray[PostCodeCityLineNo],AddrArray[CountyLineNo],City,PostCode,County,Country);
            AddrArray[CountryLineNo] := Country.Name;
            COMPRESSARRAY(AddrArray);
          end;
        Country."Address Format"::"Blank Line+Post Code+City":
          begin
            if ContLineNo < PostCodeCityLineNo then
              AddrArray[ContLineNo] := Contact;
            COMPRESSARRAY(AddrArray);

            Index := 1;
            InsertText := 1;
            repeat
              if AddrArray[Index] = '' then begin
                case InsertText of
                  2:
                    GeneratePostCodeCity(AddrArray[Index],AddrArray[Index + 1],City,PostCode,County,Country);
                  3:
                    AddrArray[Index] := Country.Name;
                  4:
                    if ContLineNo > PostCodeCityLineNo then
                      AddrArray[Index] := Contact;
                end;
                InsertText := InsertText + 1;
              end;
              Index := Index + 1;
            until Index = 9;
          end;
      end;
    END;

    [External]
    PROCEDURE FormatPostCodeCity@30(VAR PostCodeCityText@1000 : Text[90];VAR CountyText@1001 : Text[50];City@1002 : Text[50];PostCode@1003 : Code[20];County@1004 : Text[50];CountryCode@1005 : Code[10]);
    VAR
      Country@1006 : Record "Country/Region";
    BEGIN
      CLEAR(PostCodeCityText);
      CLEAR(CountyText);

      if CountryCode = '' then begin
        GLSetup.GET;
        CLEAR(Country);
        Country."Address Format" := GLSetup."Local Address Format";
        Country."Contact Address Format" := GLSetup."Local Cont. Addr. Format";
      end else
        Country.GET(CountryCode);

      GeneratePostCodeCity(PostCodeCityText,CountyText,City,PostCode,County,Country);
    END;

    LOCAL PROCEDURE GeneratePostCodeCity@31(VAR PostCodeCityText@1000 : Text[90];VAR CountyText@1001 : Text[50];City@1002 : Text[50];PostCode@1003 : Code[20];County@1004 : Text[50];Country@1005 : Record "Country/Region");
    VAR
      DummyString@1007 : Text;
      OverMaxStrLen@1006 : Integer;
    BEGIN
      DummyString := '';
      OverMaxStrLen := MAXSTRLEN(PostCodeCityText);
      if OverMaxStrLen < MAXSTRLEN(DummyString) then
        OverMaxStrLen += 1;

      case Country."Address Format" of
        Country."Address Format"::"Post Code+City":
          begin
            if PostCode <> '' then
              PostCodeCityText := DELSTR(PostCode + ' ' + City,OverMaxStrLen)
            else
              PostCodeCityText := City;
            CountyText := County;
          end;
        Country."Address Format"::"City+County+Post Code":
          begin
            if (County <> '') and (PostCode <> '') then
              PostCodeCityText :=
                DELSTR(City,MAXSTRLEN(PostCodeCityText) - STRLEN(PostCode) - STRLEN(County) - 3) +
                ', ' + County + ' ' + PostCode
            else
              if PostCode = '' then begin
                PostCodeCityText := City;
                CountyText := County;
              end else
                if (County = '') and (PostCode <> '') then
                  PostCodeCityText := DELSTR(City,MAXSTRLEN(PostCodeCityText) - STRLEN(PostCode) - 1) + ', ' + PostCode;
          end;
        Country."Address Format"::"City+Post Code":
          begin
            if PostCode <> '' then
              PostCodeCityText := DELSTR(City,MAXSTRLEN(PostCodeCityText) - STRLEN(PostCode) - 1) + ', ' + PostCode
            else
              PostCodeCityText := City;
            CountyText := County;
          end;
        Country."Address Format"::"Blank Line+Post Code+City":
          begin
            if PostCode <> '' then
              PostCodeCityText := DELSTR(PostCode + ' ' + City,OverMaxStrLen)
            else
              PostCodeCityText := City;
            CountyText := County;
          end;
      end;
    END;

    [External]
    PROCEDURE GetCompanyAddr@66(RespCenterCode@1000 : Code[10];VAR ResponsibilityCenter@1001 : Record "Responsibility Center";VAR CompanyInfo@1002 : Record "Company Information";VAR CompanyAddr@1003 : ARRAY [8] OF Text[50]);
    BEGIN
      if ResponsibilityCenter.GET(RespCenterCode) then begin
        RespCenter(CompanyAddr,ResponsibilityCenter);
        CompanyInfo."Phone No." := ResponsibilityCenter."Phone No.";
        CompanyInfo."Fax No." := ResponsibilityCenter."Fax No.";
      end else
        Company(CompanyAddr,CompanyInfo);
    END;

    [External]
    PROCEDURE Company@2(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR CompanyInfo@1001 : Record "Company Information");
    BEGIN
      with CompanyInfo do
        FormatAddr(
          AddrArray,Name,"Name 2",'',Address,"Address 2",
          City,"Post Code",County,'');
    END;

    [External]
    PROCEDURE Customer@3(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR Cust@1001 : Record Customer);
    BEGIN
      with Cust do
        FormatAddr(
          AddrArray,Name,"Name 2",Contact,Address,"Address 2",
          City,"Post Code",County,"Country/Region Code");
    END;

    [External]
    PROCEDURE Vendor@4(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR Vend@1001 : Record Vendor);
    BEGIN
      with Vend do
        FormatAddr(
          AddrArray,Name,"Name 2",Contact,Address,"Address 2",
          City,"Post Code",County,"Country/Region Code");
    END;

    [External]
    PROCEDURE BankAcc@5(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR BankAcc@1001 : Record "Bank Account");
    BEGIN
      with BankAcc do
        FormatAddr(
          AddrArray,Name,"Name 2",Contact,Address,"Address 2",
          City,"Post Code",County,"Country/Region Code");
    END;

    [External]
    PROCEDURE SalesHeaderSellTo@6(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR SalesHeader@1001 : Record "Sales Header");
    BEGIN
      with SalesHeader do
        FormatAddr(
          AddrArray,"Sell-to Customer Name","Sell-to Customer Name 2","Sell-to Contact","Sell-to Address","Sell-to Address 2",
          "Sell-to City","Sell-to Post Code","Sell-to County","Sell-to Country/Region Code");
    END;

    [External]
    PROCEDURE SalesHeaderBillTo@7(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR SalesHeader@1001 : Record "Sales Header");
    BEGIN
      with SalesHeader do
        FormatAddr(
          AddrArray,"Bill-to Name","Bill-to Name 2","Bill-to Contact","Bill-to Address","Bill-to Address 2",
          "Bill-to City","Bill-to Post Code","Bill-to County","Bill-to Country/Region Code");
    END;

    [External]
    PROCEDURE SalesHeaderShipTo@8(VAR AddrArray@1000 : ARRAY [8] OF Text[50];CustAddr@1002 : ARRAY [8] OF Text[50];VAR SalesHeader@1001 : Record "Sales Header") ShowShippingAddr : Boolean;
    VAR
      CountryRegion@1003 : Record "Country/Region";
      SellToCountry@1004 : Code[50];
    BEGIN
      with SalesHeader do begin
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
        if CountryRegion.GET("Sell-to Country/Region Code") then
          SellToCountry := CountryRegion.Name;
        ShowShippingAddr := "Sell-to Customer No." <> "Bill-to Customer No.";
        for i := 1 to ARRAYLEN(AddrArray) do
          if (AddrArray[i] <> CustAddr[i]) and (AddrArray[i] <> '') and (AddrArray[i] <> SellToCountry) then
            ShowShippingAddr := true;
      end;
    END;

    [External]
    PROCEDURE PurchHeaderBuyFrom@9(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR PurchHeader@1001 : Record "Purchase Header");
    BEGIN
      with PurchHeader do
        FormatAddr(
          AddrArray,"Buy-from Vendor Name","Buy-from Vendor Name 2","Buy-from Contact","Buy-from Address","Buy-from Address 2",
          "Buy-from City","Buy-from Post Code","Buy-from County","Buy-from Country/Region Code");
    END;

    [External]
    PROCEDURE PurchHeaderPayTo@10(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR PurchHeader@1001 : Record "Purchase Header");
    BEGIN
      with PurchHeader do
        FormatAddr(
          AddrArray,"Pay-to Name","Pay-to Name 2","Pay-to Contact","Pay-to Address","Pay-to Address 2",
          "Pay-to City","Pay-to Post Code","Pay-to County","Pay-to Country/Region Code");
    END;

    [External]
    PROCEDURE PurchHeaderShipTo@11(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR PurchHeader@1001 : Record "Purchase Header");
    BEGIN
      with PurchHeader do
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
    END;

    [External]
    PROCEDURE SalesShptSellTo@12(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR SalesShptHeader@1001 : Record "Sales Shipment Header");
    BEGIN
      with SalesShptHeader do
        FormatAddr(
          AddrArray,"Sell-to Customer Name","Sell-to Customer Name 2","Sell-to Contact","Sell-to Address","Sell-to Address 2",
          "Sell-to City","Sell-to Post Code","Sell-to County","Sell-to Country/Region Code");
    END;

    [External]
    PROCEDURE SalesShptBillTo@13(VAR AddrArray@1000 : ARRAY [8] OF Text[50];ShipToAddr@1002 : ARRAY [8] OF Text[50];VAR SalesShptHeader@1001 : Record "Sales Shipment Header") ShowCustAddr : Boolean;
    BEGIN
      with SalesShptHeader do begin
        FormatAddr(
          AddrArray,"Bill-to Name","Bill-to Name 2","Bill-to Contact","Bill-to Address","Bill-to Address 2",
          "Bill-to City","Bill-to Post Code","Bill-to County","Bill-to Country/Region Code");
        ShowCustAddr := "Bill-to Customer No." <> "Sell-to Customer No.";
        for i := 1 to ARRAYLEN(AddrArray) do
          if ShipToAddr[i] <> AddrArray[i] then
            ShowCustAddr := true;
      end;
    END;

    [External]
    PROCEDURE SalesShptShipTo@14(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR SalesShptHeader@1001 : Record "Sales Shipment Header");
    BEGIN
      with SalesShptHeader do
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
    END;

    [External]
    PROCEDURE SalesInvSellTo@15(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR SalesInvHeader@1001 : Record "Sales Invoice Header");
    BEGIN
      with SalesInvHeader do
        FormatAddr(
          AddrArray,"Sell-to Customer Name","Sell-to Customer Name 2","Sell-to Contact","Sell-to Address","Sell-to Address 2",
          "Sell-to City","Sell-to Post Code","Sell-to County","Sell-to Country/Region Code");
    END;

    [External]
    PROCEDURE SalesInvBillTo@16(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR SalesInvHeader@1001 : Record "Sales Invoice Header");
    BEGIN
      with SalesInvHeader do
        FormatAddr(
          AddrArray,"Bill-to Name","Bill-to Name 2","Bill-to Contact","Bill-to Address","Bill-to Address 2",
          "Bill-to City","Bill-to Post Code","Bill-to County","Bill-to Country/Region Code");
    END;

    [External]
    PROCEDURE SalesInvShipTo@17(VAR AddrArray@1000 : ARRAY [8] OF Text[50];CustAddr@1002 : ARRAY [8] OF Text[50];VAR SalesInvHeader@1001 : Record "Sales Invoice Header") ShowShippingAddr : Boolean;
    BEGIN
      with SalesInvHeader do begin
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
        ShowShippingAddr := "Sell-to Customer No." <> "Bill-to Customer No.";
        for i := 1 to ARRAYLEN(AddrArray) do
          if AddrArray[i] <> CustAddr[i] then
            ShowShippingAddr := true;
      end;
    END;

    [External]
    PROCEDURE SalesCrMemoSellTo@18(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR SalesCrMemoHeader@1001 : Record "Sales Cr.Memo Header");
    BEGIN
      with SalesCrMemoHeader do
        FormatAddr(
          AddrArray,"Sell-to Customer Name","Sell-to Customer Name 2","Sell-to Contact","Sell-to Address","Sell-to Address 2",
          "Sell-to City","Sell-to Post Code","Sell-to County","Sell-to Country/Region Code");
    END;

    [External]
    PROCEDURE SalesCrMemoBillTo@19(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR SalesCrMemoHeader@1001 : Record "Sales Cr.Memo Header");
    BEGIN
      with SalesCrMemoHeader do
        FormatAddr(
          AddrArray,"Bill-to Name","Bill-to Name 2","Bill-to Contact","Bill-to Address","Bill-to Address 2",
          "Bill-to City","Bill-to Post Code","Bill-to County","Bill-to Country/Region Code");
    END;

    [External]
    PROCEDURE SalesCrMemoShipTo@20(VAR AddrArray@1000 : ARRAY [8] OF Text[50];CustAddr@1002 : ARRAY [8] OF Text[50];VAR SalesCrMemoHeader@1001 : Record "Sales Cr.Memo Header") ShowShippingAddr : Boolean;
    BEGIN
      with SalesCrMemoHeader do begin
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
        ShowShippingAddr := "Sell-to Customer No." <> "Bill-to Customer No.";
        for i := 1 to ARRAYLEN(AddrArray) do
          if AddrArray[i] <> CustAddr[i] then
            ShowShippingAddr := true;
      end;
    END;

    [External]
    PROCEDURE SalesRcptSellTo@5803(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR ReturnRcptHeader@1001 : Record "Return Receipt Header");
    BEGIN
      with ReturnRcptHeader do
        FormatAddr(
          AddrArray,"Sell-to Customer Name","Sell-to Customer Name 2","Sell-to Contact","Sell-to Address","Sell-to Address 2",
          "Sell-to City","Sell-to Post Code","Sell-to County","Sell-to Country/Region Code");
    END;

    [External]
    PROCEDURE SalesRcptBillTo@5804(VAR AddrArray@1000 : ARRAY [8] OF Text[50];ShipToAddr@1002 : ARRAY [8] OF Text[50];VAR ReturnRcptHeader@1001 : Record "Return Receipt Header") ShowCustAddr : Boolean;
    BEGIN
      with ReturnRcptHeader do begin
        FormatAddr(
          AddrArray,"Bill-to Name","Bill-to Name 2","Bill-to Contact","Bill-to Address","Bill-to Address 2",
          "Bill-to City","Bill-to Post Code","Bill-to County","Bill-to Country/Region Code");
        ShowCustAddr := "Bill-to Customer No." <> "Sell-to Customer No.";
        for i := 1 to ARRAYLEN(AddrArray) do
          if AddrArray[i] <> ShipToAddr[i] then
            ShowCustAddr := true;
      end;
    END;

    [External]
    PROCEDURE SalesRcptShipTo@5805(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR ReturnRcptHeader@1001 : Record "Return Receipt Header");
    BEGIN
      with ReturnRcptHeader do
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
    END;

    [External]
    PROCEDURE PurchRcptBuyFrom@21(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR PurchRcptHeader@1001 : Record "Purch. Rcpt. Header");
    BEGIN
      with PurchRcptHeader do
        FormatAddr(
          AddrArray,"Buy-from Vendor Name","Buy-from Vendor Name 2","Buy-from Contact","Buy-from Address","Buy-from Address 2",
          "Buy-from City","Buy-from Post Code","Buy-from County","Buy-from Country/Region Code");
    END;

    [External]
    PROCEDURE PurchRcptPayTo@22(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR PurchRcptHeader@1001 : Record "Purch. Rcpt. Header");
    BEGIN
      with PurchRcptHeader do
        FormatAddr(
          AddrArray,"Pay-to Name","Pay-to Name 2","Pay-to Contact","Pay-to Address","Pay-to Address 2",
          "Pay-to City","Pay-to Post Code","Pay-to County","Pay-to Country/Region Code");
    END;

    [External]
    PROCEDURE PurchRcptShipTo@23(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR PurchRcptHeader@1001 : Record "Purch. Rcpt. Header");
    BEGIN
      with PurchRcptHeader do
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
    END;

    [External]
    PROCEDURE PurchInvBuyFrom@24(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR PurchInvHeader@1001 : Record "Purch. Inv. Header");
    BEGIN
      with PurchInvHeader do
        FormatAddr(
          AddrArray,"Buy-from Vendor Name","Buy-from Vendor Name 2","Buy-from Contact","Buy-from Address","Buy-from Address 2",
          "Buy-from City","Buy-from Post Code","Buy-from County","Buy-from Country/Region Code");
    END;

    [External]
    PROCEDURE PurchInvPayTo@25(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR PurchInvHeader@1001 : Record "Purch. Inv. Header");
    BEGIN
      with PurchInvHeader do
        FormatAddr(
          AddrArray,"Pay-to Name","Pay-to Name 2","Pay-to Contact","Pay-to Address","Pay-to Address 2",
          "Pay-to City","Pay-to Post Code","Pay-to County","Pay-to Country/Region Code");
    END;

    [External]
    PROCEDURE PurchInvShipTo@26(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR PurchInvHeader@1001 : Record "Purch. Inv. Header");
    BEGIN
      with PurchInvHeader do
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
    END;

    [External]
    PROCEDURE PurchCrMemoBuyFrom@27(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR PurchCrMemoHeader@1001 : Record "Purch. Cr. Memo Hdr.");
    BEGIN
      with PurchCrMemoHeader do
        FormatAddr(
          AddrArray,"Buy-from Vendor Name","Buy-from Vendor Name 2","Buy-from Contact","Buy-from Address","Buy-from Address 2",
          "Buy-from City","Buy-from Post Code","Buy-from County","Buy-from Country/Region Code");
    END;

    [External]
    PROCEDURE PurchCrMemoPayTo@28(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR PurchCrMemoHeader@1001 : Record "Purch. Cr. Memo Hdr.");
    BEGIN
      with PurchCrMemoHeader do
        FormatAddr(
          AddrArray,"Pay-to Name","Pay-to Name 2","Pay-to Contact","Pay-to Address","Pay-to Address 2",
          "Pay-to City","Pay-to Post Code","Pay-to County","Pay-to Country/Region Code");
    END;

    [External]
    PROCEDURE PurchCrMemoShipTo@29(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR PurchCrMemoHeader@1001 : Record "Purch. Cr. Memo Hdr.");
    BEGIN
      with PurchCrMemoHeader do
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
    END;

    [External]
    PROCEDURE PurchShptBuyFrom@5800(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR ReturnShptHeader@1001 : Record "Return Shipment Header");
    BEGIN
      with ReturnShptHeader do
        FormatAddr(
          AddrArray,"Buy-from Vendor Name","Buy-from Vendor Name 2","Buy-from Contact","Buy-from Address","Buy-from Address 2",
          "Buy-from City","Buy-from Post Code","Buy-from County","Buy-from Country/Region Code");
    END;

    [External]
    PROCEDURE PurchShptPayTo@5801(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR ReturnShptHeader@1001 : Record "Return Shipment Header");
    BEGIN
      with ReturnShptHeader do
        FormatAddr(
          AddrArray,"Pay-to Name","Pay-to Name 2","Pay-to Contact","Pay-to Address","Pay-to Address 2",
          "Pay-to City","Pay-to Post Code","Pay-to County","Pay-to Country/Region Code");
    END;

    [External]
    PROCEDURE PurchShptShipTo@5802(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR ReturnShptHeader@1001 : Record "Return Shipment Header");
    BEGIN
      with ReturnShptHeader do
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
    END;

    [External]
    PROCEDURE AltAddr@34(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR Employee@1001 : Record Employee;VAR AlternativeAddr@1002 : Record "Alternative Address");
    BEGIN
      with AlternativeAddr do
        FormatAddr(
          AddrArray,COPYSTR(Employee.FullName,1,50),'','',Address,
          "Address 2",City,"Post Code",County,"Country/Region Code");
    END;

    [External]
    PROCEDURE Employee@33(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR Employee@1001 : Record Employee);
    BEGIN
      with Employee do
        FormatAddr(
          AddrArray,COPYSTR(FullName,1,50),'','',Address,"Address 2",
          City,"Post Code",County,"Country/Region Code");
    END;

    [External]
    PROCEDURE EmployeeAltAddr@32(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR Employee@1001 : Record Employee);
    VAR
      AlternativeAddr@1002 : Record "Alternative Address";
    BEGIN
      AlternativeAddr.GET(Employee."No.",Employee."Alt. Address Code");
      with AlternativeAddr do
        FormatAddr(
          AddrArray,COPYSTR(Employee.FullName,1,50),'','',Address,
          "Address 2",City,"Post Code",County,"Country/Region Code");
    END;

    [External]
    PROCEDURE VendBankAcc@37(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR VendBankAcc@1001 : Record "Vendor Bank Account");
    BEGIN
      with VendBankAcc do
        FormatAddr(
          AddrArray,Name,"Name 2",Contact,Address,"Address 2",
          City,"Post Code",County,"Country/Region Code");
    END;

    [External]
    PROCEDURE CustBankAcc@38(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR CustBankAcc@1001 : Record "Customer Bank Account");
    BEGIN
      with CustBankAcc do
        FormatAddr(
          AddrArray,Name,"Name 2",Contact,Address,"Address 2",
          City,"Post Code",County,"Country/Region Code");
    END;

    [External]
    PROCEDURE RespCenter@40(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR RespCenter@1001 : Record "Responsibility Center");
    BEGIN
      with RespCenter do
        FormatAddr(
          AddrArray,Name,"Name 2",Contact,Address,"Address 2",
          City,"Post Code",County,"Country/Region Code");
    END;

    [External]
    PROCEDURE TransferShptTransferFrom@35(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR TransShptHeader@1001 : Record "Transfer Shipment Header");
    BEGIN
      with TransShptHeader do
        FormatAddr(
          AddrArray,"Transfer-from Name","Transfer-from Name 2",'',"Transfer-from Address","Transfer-from Address 2",
          "Transfer-from City","Transfer-from Post Code","Transfer-from County","Trsf.-from Country/Region Code");
    END;

    [External]
    PROCEDURE TransferShptTransferTo@36(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR TransShptHeader@1001 : Record "Transfer Shipment Header");
    BEGIN
      with TransShptHeader do
        FormatAddr(
          AddrArray,"Transfer-to Name","Transfer-to Name 2",'',"Transfer-to Address","Transfer-to Address 2",
          "Transfer-to City","Transfer-to Post Code","Transfer-to County","Trsf.-to Country/Region Code");
    END;

    [External]
    PROCEDURE TransferRcptTransferFrom@41(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR TransRcptHeader@1001 : Record "Transfer Receipt Header");
    BEGIN
      with TransRcptHeader do
        FormatAddr(
          AddrArray,"Transfer-from Name","Transfer-from Name 2",'',"Transfer-from Address","Transfer-from Address 2",
          "Transfer-from City","Transfer-from Post Code","Transfer-from County","Trsf.-from Country/Region Code");
    END;

    [External]
    PROCEDURE TransferRcptTransferTo@39(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR TransRcptHeader@1001 : Record "Transfer Receipt Header");
    BEGIN
      with TransRcptHeader do
        FormatAddr(
          AddrArray,"Transfer-to Name","Transfer-to Name 2",'',"Transfer-to Address","Transfer-to Address 2",
          "Transfer-to City","Transfer-to Post Code","Transfer-to County","Trsf.-to Country/Region Code");
    END;

    [External]
    PROCEDURE TransferHeaderTransferFrom@43(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR TransHeader@1001 : Record "Transfer Header");
    BEGIN
      with TransHeader do
        FormatAddr(
          AddrArray,"Transfer-from Name","Transfer-from Name 2",'',"Transfer-from Address","Transfer-from Address 2",
          "Transfer-from City","Transfer-from Post Code","Transfer-from County","Trsf.-from Country/Region Code");
    END;

    [External]
    PROCEDURE TransferHeaderTransferTo@42(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR TransHeader@1001 : Record "Transfer Header");
    BEGIN
      with TransHeader do
        FormatAddr(
          AddrArray,"Transfer-to Name","Transfer-to Name 2",'',"Transfer-to Address","Transfer-to Address 2",
          "Transfer-to City","Transfer-to Post Code","Transfer-to County","Trsf.-to Country/Region Code");
    END;

    [External]
    PROCEDURE ContactAddr@45(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR Cont@1001 : Record Contact);
    BEGIN
      ContactAddrAlt(AddrArray,Cont,Cont.ActiveAltAddress(WORKDATE),WORKDATE)
    END;

    [External]
    PROCEDURE ContactAddrAlt@44(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR Cont@1001 : Record Contact;AltAddressCode@1002 : Code[10];ActiveDate@1003 : Date);
    VAR
      RMSetup@1004 : Record "Marketing Setup";
      ContCompany@1005 : Record Contact;
      ContAltAddr@1006 : Record "Contact Alt. Address";
      CompanyAltAddressCode@1007 : Code[10];
      ContIdenticalAddress@1008 : Boolean;
    BEGIN
      RMSetup.GET;

      if (Cont.Type = Cont.Type::Person) and (Cont."Company No." <> '') then begin
        ContCompany.GET(Cont."Company No.");
        CompanyAltAddressCode := ContCompany.ActiveAltAddress(ActiveDate);
        ContIdenticalAddress := Cont.IdenticalAddress(ContCompany);
      end;

      case true of
        AltAddressCode <> '':
          with ContAltAddr do begin
            GET(Cont."No.",AltAddressCode);
            FormatAddr(
              AddrArray,"Company Name","Company Name 2",Cont.Name,Address,"Address 2",
              City,"Post Code",County,"Country/Region Code");
          end;
        (Cont.Type = Cont.Type::Person) and
        (Cont."Company No." <> '') and
        (CompanyAltAddressCode <> '') and
        RMSetup."Inherit Address Details" and
        ContIdenticalAddress:
          with ContAltAddr do begin
            GET(Cont."Company No.",CompanyAltAddressCode);
            FormatAddr(
              AddrArray,"Company Name","Company Name 2",Cont.Name,Address,"Address 2",
              City,"Post Code",County,"Country/Region Code");
          end;
        (Cont.Type = Cont.Type::Person) and
        (Cont."Company No." <> ''):
          with Cont do
            FormatAddr(
              AddrArray,ContCompany.Name,ContCompany."Name 2",Name,Address,"Address 2",
              City,"Post Code",County,"Country/Region Code")
        else
          with Cont do
            FormatAddr(
              AddrArray,Name,"Name 2",'',Address,"Address 2",
              City,"Post Code",County,"Country/Region Code")
      end;
    END;

    [External]
    PROCEDURE ServiceOrderSellto@47(VAR AddrArray@1000 : ARRAY [8] OF Text[50];ServHeader@1001 : Record "Service Header");
    BEGIN
      with ServHeader do
        FormatAddr(
          AddrArray,Name,"Name 2","Contact Name",Address,"Address 2",
          City,"Post Code",County,"Country/Region Code");
    END;

    [External]
    PROCEDURE ServiceOrderShipto@53(VAR AddrArray@1000 : ARRAY [8] OF Text[50];ServHeader@1001 : Record "Service Header");
    BEGIN
      with ServHeader do
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
    END;

    [External]
    PROCEDURE ServContractSellto@50(VAR AddrArray@1000 : ARRAY [8] OF Text[50];ServContract@1001 : Record "Service Contract Header");
    BEGIN
      with ServContract do begin
        CALCFIELDS(Name,"Name 2",Address,"Address 2","Post Code",City,County,"Country/Region Code");
        FormatAddr(
          AddrArray,Name,"Name 2","Contact Name",Address,"Address 2",
          City,"Post Code",County,"Country/Region Code");
      end;
    END;

    [External]
    PROCEDURE ServContractShipto@52(VAR AddrArray@1000 : ARRAY [8] OF Text[50];ServContract@1001 : Record "Service Contract Header");
    BEGIN
      with ServContract do begin
        CALCFIELDS(
          "Ship-to Name","Ship-to Name 2","Ship-to Address","Ship-to Address 2",
          "Ship-to Post Code","Ship-to City","Ship-to County","Ship-to Country/Region Code");
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Contact Name","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
      end;
    END;

    [External]
    PROCEDURE ServiceInvBillTo@49(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR ServiceInvHeader@1001 : Record "Service Invoice Header");
    BEGIN
      with ServiceInvHeader do
        FormatAddr(
          AddrArray,"Bill-to Name","Bill-to Name 2","Bill-to Contact","Bill-to Address","Bill-to Address 2",
          "Bill-to City","Bill-to Post Code","Bill-to County","Bill-to Country/Region Code");
    END;

    [External]
    PROCEDURE ServiceInvShipTo@51(VAR AddrArray@1000 : ARRAY [8] OF Text[50];CustAddr@1002 : ARRAY [8] OF Text[50];VAR ServiceInvHeader@1001 : Record "Service Invoice Header") ShowShippingAddr : Boolean;
    BEGIN
      with ServiceInvHeader do begin
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
        ShowShippingAddr := "Customer No." <> "Bill-to Customer No.";
        for i := 1 to ARRAYLEN(AddrArray) do
          if AddrArray[i] <> CustAddr[i] then
            ShowShippingAddr := true;
      end;
    END;

    [External]
    PROCEDURE ServiceShptShipTo@54(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR ServiceShptHeader@1001 : Record "Service Shipment Header");
    BEGIN
      with ServiceShptHeader do
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
    END;

    [External]
    PROCEDURE ServiceShptSellTo@56(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR ServiceShptHeader@1001 : Record "Service Shipment Header");
    BEGIN
      with ServiceShptHeader do
        FormatAddr(
          AddrArray,Name,"Name 2","Contact Name",Address,"Address 2",
          City,"Post Code",County,"Country/Region Code");
    END;

    [External]
    PROCEDURE ServiceShptBillTo@55(VAR AddrArray@1000 : ARRAY [8] OF Text[50];ShipToAddr@1002 : ARRAY [8] OF Text[50];VAR ServiceShptHeader@1001 : Record "Service Shipment Header") ShowCustAddr : Boolean;
    BEGIN
      with ServiceShptHeader do begin
        FormatAddr(
          AddrArray,"Bill-to Name","Bill-to Name 2","Bill-to Contact","Bill-to Address","Bill-to Address 2",
          "Bill-to City","Bill-to Post Code","Bill-to County","Bill-to Country/Region Code");
        ShowCustAddr := "Bill-to Customer No." <> "Customer No.";
        for i := 1 to ARRAYLEN(AddrArray) do
          if ShipToAddr[i] <> AddrArray[i] then
            ShowCustAddr := true;
      end;
    END;

    [External]
    PROCEDURE ServiceCrMemoBillTo@58(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR ServiceCrMemoHeader@1001 : Record "Service Cr.Memo Header");
    BEGIN
      with ServiceCrMemoHeader do
        FormatAddr(
          AddrArray,"Bill-to Name","Bill-to Name 2","Bill-to Contact","Bill-to Address","Bill-to Address 2",
          "Bill-to City","Bill-to Post Code","Bill-to County","Bill-to Country/Region Code");
    END;

    [External]
    PROCEDURE ServiceCrMemoShipTo@57(VAR AddrArray@1000 : ARRAY [8] OF Text[50];CustAddr@1002 : ARRAY [8] OF Text[50];VAR ServiceCrMemoHeader@1001 : Record "Service Cr.Memo Header") ShowShippingAddr : Boolean;
    BEGIN
      with ServiceCrMemoHeader do begin
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
        ShowShippingAddr := "Customer No." <> "Bill-to Customer No.";
        for i := 1 to ARRAYLEN(AddrArray) do
          if AddrArray[i] <> CustAddr[i] then
            ShowShippingAddr := true;
      end;
    END;

    [External]
    PROCEDURE ServiceHeaderSellTo@61(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR ServiceHeader@1001 : Record "Service Header");
    BEGIN
      with ServiceHeader do
        FormatAddr(
          AddrArray,Name,"Name 2","Contact No.",Address,"Address 2",
          City,"Post Code",County,"Country/Region Code");
    END;

    [External]
    PROCEDURE ServiceHeaderBillTo@60(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR ServiceHeader@1001 : Record "Service Header");
    BEGIN
      with ServiceHeader do
        FormatAddr(
          AddrArray,"Bill-to Name","Bill-to Name 2","Bill-to Contact","Bill-to Address","Bill-to Address 2",
          "Bill-to City","Bill-to Post Code","Bill-to County","Bill-to Country/Region Code");
    END;

    [External]
    PROCEDURE ServiceHeaderShipTo@59(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR ServiceHeader@1001 : Record "Service Header");
    BEGIN
      with ServiceHeader do
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
    END;

    [External]
    PROCEDURE PostalBarCode@65(AddressType@1000 : Option) : Text[100];
    BEGIN
      if AddressType = AddressType then
        exit('');
      exit('');
    END;

    [External]
    PROCEDURE SalesHeaderArchBillTo@46(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR SalesHeaderArch@1001 : Record "Sales Header Archive");
    BEGIN
      with SalesHeaderArch do
        FormatAddr(
          AddrArray,"Bill-to Name","Bill-to Name 2","Bill-to Contact","Bill-to Address","Bill-to Address 2",
          "Bill-to City","Bill-to Post Code","Bill-to County","Bill-to Country/Region Code");
    END;

    [External]
    PROCEDURE SalesHeaderArchShipTo@48(VAR AddrArray@1000 : ARRAY [8] OF Text[50];CustAddr@1002 : ARRAY [8] OF Text[50];VAR SalesHeaderArch@1001 : Record "Sales Header Archive") ShowShippingAddr : Boolean;
    VAR
      CountryRegion@1003 : Record "Country/Region";
      SellToCountry@1004 : Code[50];
    BEGIN
      with SalesHeaderArch do begin
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
        ShowShippingAddr := "Sell-to Customer No." <> "Bill-to Customer No.";
        if CountryRegion.GET("Sell-to Country/Region Code") then
          SellToCountry := CountryRegion.Name;
        for i := 1 to ARRAYLEN(AddrArray) do
          if (AddrArray[i] <> CustAddr[i]) and (AddrArray[i] <> '') and (AddrArray[i] <> SellToCountry) then
            ShowShippingAddr := true;
      end;
    END;

    [External]
    PROCEDURE PurchHeaderBuyFromArch@62(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR PurchHeaderArch@1001 : Record "Purchase Header Archive");
    BEGIN
      with PurchHeaderArch do
        FormatAddr(
          AddrArray,"Buy-from Vendor Name","Buy-from Vendor Name 2","Buy-from Contact","Buy-from Address","Buy-from Address 2",
          "Buy-from City","Buy-from Post Code","Buy-from County","Buy-from Country/Region Code");
    END;

    [External]
    PROCEDURE PurchHeaderPayToArch@64(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR PurchHeaderArch@1001 : Record "Purchase Header Archive");
    BEGIN
      with PurchHeaderArch do
        FormatAddr(
          AddrArray,"Pay-to Name","Pay-to Name 2","Pay-to Contact","Pay-to Address","Pay-to Address 2",
          "Pay-to City","Pay-to Post Code","Pay-to County","Pay-to Country/Region Code");
    END;

    [External]
    PROCEDURE PurchHeaderShipToArch@63(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR PurchHeaderArch@1001 : Record "Purchase Header Archive");
    BEGIN
      with PurchHeaderArch do
        FormatAddr(
          AddrArray,"Ship-to Name","Ship-to Name 2","Ship-to Contact","Ship-to Address","Ship-to Address 2",
          "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code");
    END;

    [External]
    PROCEDURE Reminder@67(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR ReminderHeader@1001 : Record "Reminder Header");
    BEGIN
      with ReminderHeader do
        FormatAddr(
          AddrArray,Name,"Name 2",Contact,Address,"Address 2",City,"Post Code",County,"Country/Region Code");
    END;

    [External]
    PROCEDURE IssuedReminder@69(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR IssuedReminderHeader@1001 : Record "Issued Reminder Header");
    BEGIN
      with IssuedReminderHeader do
        FormatAddr(
          AddrArray,Name,"Name 2",Contact,Address,"Address 2",City,"Post Code",County,"Country/Region Code");
    END;

    [External]
    PROCEDURE FinanceChargeMemo@71(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR FinanceChargeMemoHeader@1001 : Record "Finance Charge Memo Header");
    BEGIN
      with FinanceChargeMemoHeader do
        FormatAddr(
          AddrArray,Name,"Name 2",Contact,Address,"Address 2",City,"Post Code",County,"Country/Region Code");
    END;

    [External]
    PROCEDURE IssuedFinanceChargeMemo@72(VAR AddrArray@1000 : ARRAY [8] OF Text[50];VAR IssuedFinChargeMemoHeader@1001 : Record "Issued Fin. Charge Memo Header");
    BEGIN
      with IssuedFinChargeMemoHeader do
        FormatAddr(
          AddrArray,Name,"Name 2",Contact,Address,"Address 2",City,"Post Code",County,"Country/Region Code");
    END;

    BEGIN
    END.
  }
}

