OBJECT Page 6509 Serial No. Information List
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Serial No. Information List;
    SourceTable="Serial No. Information";
    PageType=List;
    CardPageID="Serial No. Information Card";
    OnInit=BEGIN
             CurrPage.LOOKUPMODE := true;
           END;

    OnOpenPage=BEGIN
                 SETRANGE("Date Filter",DMY2DATE(1,1,0),WORKDATE);
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 1102601001;1 ;ActionGroup;
                      Name=&Serial No.;
                      CaptionML=ENU=&Serial No.;
                      Image=SerialNo }
      { 1102601002;2 ;Action    ;
                      Name=Item &Tracking Entries;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Entries;
                      ToolTipML=ENU=View serial or lot numbers that are assigned to items.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLedger;
                      OnAction=VAR
                                 ItemTrackingDocMgt@1000 : Codeunit "Item Tracking Doc. Management";
                               BEGIN
                                 ItemTrackingDocMgt.ShowItemTrackingForMasterData(0,'',"Item No.","Variant Code","Serial No.",'','');
                               END;
                                }
      { 1102601003;2 ;Action    ;
                      Name=Comment;
                      CaptionML=ENU=Comment;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#ItemTracking;
                      RunObject=Page "Item Tracking Comments";
                      RunPageLink=Type=CONST("Serial No."),
                                  "Item No."=FIELD("Item No."),
                                  "Variant Code"=FIELD("Variant Code"),
                                  "Serial/Lot No."=FIELD("Serial No.");
                      Image=ViewComments }
      { 1102601004;2 ;Separator ;
                      Name=Separator1102601004 }
      { 1102601005;2 ;Action    ;
                      Name=&Item Tracing;
                      CaptionML=ENU=&Item Tracing;
                      ToolTipML=ENU=Trace where a lot or serial number assigned to the item was used, for example, to find which lot a defective component came from or to find all the customers that have received items containing the defective component.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTracing;
                      OnAction=VAR
                                 ItemTracingBuffer@1002 : Record "Item Tracing Buffer";
                                 ItemTracing@1000 : Page "Item Tracing";
                               BEGIN
                                 CLEAR(ItemTracing);
                                 ItemTracingBuffer.SETRANGE("Item No.","Item No.");
                                 ItemTracingBuffer.SETRANGE("Variant Code","Variant Code");
                                 ItemTracingBuffer.SETRANGE("Serial No.","Serial No.");
                                 ItemTracing.InitFilters(ItemTracingBuffer);
                                 ItemTracing.FindRecords;
                                 ItemTracing.RUNMODAL;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 1102601006;1 ;Action    ;
                      Name=Navigate;
                      CaptionML=ENU=&Navigate;
                      ToolTipML=ENU=Find all entries and documents that exist for the document number and posting date on the selected entry or document.;
                      ApplicationArea=#ItemTracking;
                      Promoted=true;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Navigate@1000000000 : Page Navigate;
                               BEGIN
                                 Navigate.SetTracking("Serial No.",'');
                                 Navigate.RUN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Item No.;
                ToolTipML=ENU=Specifies the number that is copied from the Tracking Specification table, when a serial number information record is created.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Item No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 6   ;2   ;Field     ;
                Name=Serial No.;
                ToolTipML=ENU=Specifies this number from the Tracking Specification table when a serial number information record is created.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Serial No.";
                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the serial no. information record.;
                ApplicationArea=#ItemTracking;
                SourceExpr=Description;
                Editable=TRUE;
                ImplicitType=Text50 }

    { 14  ;2   ;Field     ;
                Name=Blocked;
                ToolTipML=ENU=Specifies that a document or journal line carrying the specified serial number cannot be posted.;
                ApplicationArea=#ItemTracking;
                SourceExpr=Blocked;
                ImplicitType=Boolean }

    { 16  ;2   ;Field     ;
                Name=Comment;
                ToolTipML=ENU=Specifies that a comment has been recorded for the serial number.;
                ApplicationArea=#ItemTracking;
                SourceExpr=Comment;
                ImplicitType=Boolean }

    { 18  ;2   ;Field     ;
                Name=Inventory;
                ToolTipML=ENU=Specifies the inventory quantity of the specified serial number.;
                ApplicationArea=#ItemTracking;
                SourceExpr=Inventory;
                Visible=FALSE;
                ImplicitType=Decimal }

    { 26  ;2   ;Field     ;
                Name=Expired Inventory;
                ToolTipML=ENU=Specifies the inventory of the serial number with an expiration date before the posting date on the associated document.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Expired Inventory";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                ApplicationArea=#ItemTracking;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                ApplicationArea=#ItemTracking;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {

    [Internal]
    PROCEDURE GetSelectionFilter@4() : Text;
    VAR
      SerialNoInfo@1001 : Record "Serial No. Information";
      SelectionFilterManagement@1002 : Codeunit SelectionFilterManagement;
    BEGIN
      CurrPage.SETSELECTIONFILTER(SerialNoInfo);
      exit(SelectionFilterManagement.GetSelectionFilterForSerialNoInformation(SerialNoInfo));
    END;

    BEGIN
    END.
  }
}

