OBJECT Codeunit 1531 Workflow Change Rec Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Workflow - Record Change"=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ValueMismatchMsg@1002 : TextConst 'ENU=The current value of the field is different from the value before the change.';
      NoRecordChangesFoundMsg@1000 : TextConst 'ENU=No record changes exist to apply the saved values to using the current options.';

    [External]
    PROCEDURE RevertValueForField@51(VAR Variant@1000 : Variant;xVariant@1001 : Variant;WorkflowStepInstance@1002 : Record "Workflow Step Instance");
    VAR
      WorkflowStepArgument@1004 : Record "Workflow Step Argument";
      WorkflowRecordChange@1008 : Record "Workflow - Record Change";
      RecRef@1003 : RecordRef;
      OldValue@1005 : Text;
      NewValue@1006 : Text;
    BEGIN
      RecRef.GETTABLE(Variant);

      WorkflowStepArgument.GET(WorkflowStepInstance.Argument);

      OldValue := GetValueFromField(xVariant,WorkflowStepArgument."Field No.");
      NewValue := GetValueFromField(Variant,WorkflowStepArgument."Field No.");

      if OldValue = NewValue then
        exit;

      CreateChangeRecord(RecRef,OldValue,NewValue,WorkflowStepArgument."Field No.",WorkflowStepInstance,WorkflowRecordChange);

      SetValueForField(RecRef,WorkflowStepArgument."Field No.",OldValue);

      RecRef.MODIFY(true);

      RecRef.SETTABLE(Variant);
    END;

    [External]
    PROCEDURE ApplyNewValues@65(Variant@1000 : Variant;WorkflowStepInstance@1002 : Record "Workflow Step Instance");
    VAR
      ApprovalEntry@1004 : Record "Approval Entry";
      WorkflowRecordChange@1003 : Record "Workflow - Record Change";
      WorkflowStepArgument@1005 : Record "Workflow Step Argument";
      RecRef@1001 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Variant);

      case RecRef.NUMBER of
        DATABASE::"Approval Entry":
          begin
            ApprovalEntry.GET(RecRef.RECORDID);
            WorkflowRecordChange.SETRANGE("Workflow Step Instance ID",WorkflowStepInstance.ID);
            WorkflowRecordChange.SETRANGE("Record ID",ApprovalEntry."Record ID to Approve");
            WorkflowRecordChange.SETRANGE(Inactive,false);
          end;
        DATABASE::"Workflow - Record Change":
          begin
            WorkflowRecordChange.GET(RecRef.RECORDID);
            WorkflowRecordChange.SETRANGE("Workflow Step Instance ID",WorkflowStepInstance.ID);
            WorkflowRecordChange.SETRANGE("Record ID",WorkflowRecordChange."Record ID");
            WorkflowRecordChange.SETRANGE(Inactive,false);
          end;
        else begin
          WorkflowRecordChange.SETRANGE("Workflow Step Instance ID",WorkflowStepInstance.ID);
          WorkflowRecordChange.SETRANGE("Record ID",RecRef.RECORDID);
          WorkflowRecordChange.SETRANGE(Inactive,false);
        end
      end;

      if WorkflowStepArgument.GET(WorkflowStepInstance.Argument) then
        if WorkflowStepArgument."Field No." <> 0 then begin
          WorkflowRecordChange.SETRANGE("Table No.",WorkflowStepArgument."Table No.");
          WorkflowRecordChange.SETRANGE("Field No.",WorkflowStepArgument."Field No.");
        end;

      if WorkflowRecordChange.FINDSET then
        repeat
          ApplyNewValueFromChangeRecord(WorkflowRecordChange);
        until WorkflowRecordChange.NEXT = 0
      else
        MESSAGE(NoRecordChangesFoundMsg);
    END;

    [External]
    PROCEDURE DiscardNewValues@1(Variant@1001 : Variant;WorkflowStepInstance@1000 : Record "Workflow Step Instance");
    VAR
      ApprovalEntry@1004 : Record "Approval Entry";
      WorkflowRecordChange@1002 : Record "Workflow - Record Change";
      RecRef@1003 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Variant);

      case RecRef.NUMBER of
        DATABASE::"Approval Entry":
          begin
            ApprovalEntry.GET(RecRef.RECORDID);
            RecRef.GET(ApprovalEntry."Record ID to Approve");
          end;
        DATABASE::"Workflow - Record Change":
          begin
            WorkflowRecordChange.GET(RecRef.RECORDID);
            RecRef.GET(WorkflowRecordChange."Record ID");
          end;
      end;

      WorkflowRecordChange.SETRANGE("Table No.",RecRef.NUMBER);
      WorkflowRecordChange.SETRANGE("Record ID",RecRef.RECORDID);
      WorkflowRecordChange.SETRANGE("Workflow Step Instance ID",WorkflowStepInstance.ID);
      WorkflowRecordChange.MODIFYALL(Inactive,true,true);
    END;

    LOCAL PROCEDURE CreateChangeRecord@49(RecRef@1001 : RecordRef;OldValue@1002 : Text;NewValue@1006 : Text;FieldNo@1004 : Integer;WorkflowStepInstance@1005 : Record "Workflow Step Instance";VAR WorkflowRecordChange@1003 : Record "Workflow - Record Change");
    BEGIN
      CLEAR(WorkflowRecordChange);
      WorkflowRecordChange."Table No." := RecRef.NUMBER;
      WorkflowRecordChange."Field No." := FieldNo;
      WorkflowRecordChange."Old Value" := COPYSTR(OldValue,1,250);
      WorkflowRecordChange."New Value" := COPYSTR(NewValue,1,250);
      WorkflowRecordChange."Record ID" := RecRef.RECORDID;
      WorkflowRecordChange."Workflow Step Instance ID" := WorkflowStepInstance.ID;
      WorkflowRecordChange.INSERT(true);
    END;

    LOCAL PROCEDURE ApplyNewValueFromChangeRecord@70(WorkflowRecordChange@1000 : Record "Workflow - Record Change");
    VAR
      RecRef@1001 : RecordRef;
    BEGIN
      RecRef.GET(WorkflowRecordChange."Record ID");

      if WorkflowRecordChange."Old Value" = GetValueFromField(RecRef,WorkflowRecordChange."Field No.") then begin
        SetValueForField(RecRef,WorkflowRecordChange."Field No.",WorkflowRecordChange."New Value");
        RecRef.MODIFY(true);
        WorkflowRecordChange.Inactive := true;
        WorkflowRecordChange.MODIFY(true);
      end else
        MESSAGE(ValueMismatchMsg);
    END;

    LOCAL PROCEDURE GetValueFromField@61(Variant@1000 : Variant;FieldId@1001 : Integer) : Text;
    VAR
      RecRef@1002 : RecordRef;
      FieldRef@1003 : FieldRef;
    BEGIN
      RecRef.GETTABLE(Variant);
      FieldRef := RecRef.FIELD(FieldId);
      exit(FORMAT(FieldRef.VALUE,0,9));
    END;

    LOCAL PROCEDURE SetValueForField@33(VAR RecRef@1001 : RecordRef;FieldId@1002 : Integer;NewValue@1000 : Text);
    VAR
      FieldRef@1004 : FieldRef;
    BEGIN
      FieldRef := RecRef.FIELD(FieldId);
      EVALUATE(FieldRef,NewValue,9);
    END;

    BEGIN
    END.
  }
}

