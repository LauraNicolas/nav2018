OBJECT Codeunit 1316 Top Ten Customers Chart Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CustomerXCaptionTxt@1002 : TextConst 'ENU=Customer Name';
      SalesLCYYCaptionTxt@1001 : TextConst 'ENU=Sales (LCY)';
      AllOtherCustomersTxt@1000 : TextConst 'ENU=All Other Customers';

    [Internal]
    PROCEDURE UpdateChart@3(VAR BusChartBuf@1000 : Record "Business Chart Buffer");
    VAR
      ColumnIndex@1003 : Integer;
      CustomerName@1002 : ARRAY [11] OF Text[50];
      SalesLCY@1001 : ARRAY [11] OF Decimal;
    BEGIN
      with BusChartBuf do begin
        Initialize;
        AddMeasure(SalesLCYYCaptionTxt,1,"Data Type"::Decimal,"Chart Type"::StackedColumn);
        SetXAxis(CustomerXCaptionTxt,"Data Type"::String);
        CalcTopTenSalesCustomers(CustomerName,SalesLCY);
        for ColumnIndex := 1 to 11 do begin
          AddColumn(CustomerName[ColumnIndex]);
          SetValueByIndex(0,ColumnIndex - 1,SalesLCY[ColumnIndex]);
        end;
      end;
    END;

    [Internal]
    PROCEDURE DrillDown@5(VAR BusChartBuf@1000 : Record "Business Chart Buffer");
    VAR
      CustomerName@1001 : Variant;
    BEGIN
      BusChartBuf.GetXValue(BusChartBuf."Drill-Down X Index",CustomerName);
      // drill down only for top 10 customers
      // for the 11th column "all other customers", it drills down to customer list of all other customers
      if (BusChartBuf."Drill-Down Measure Index" = 0) and (BusChartBuf."Drill-Down X Index" < 10) then
        DrillDownCust(FORMAT(CustomerName));
      if (BusChartBuf."Drill-Down Measure Index" = 0) and (BusChartBuf."Drill-Down X Index" = 10) then
        DrillDownOtherCustList;
    END;

    LOCAL PROCEDURE CalcTopTenSalesCustomers@9(VAR CustomerName@1002 : ARRAY [11] OF Text[50];VAR SalesLCY@1000 : ARRAY [11] OF Decimal);
    VAR
      Customer@1003 : Record Customer;
      ColumnIndex@1001 : Integer;
    BEGIN
      ColumnIndex := 1;
      Customer.CALCFIELDS("Sales (LCY)");
      Customer.SETCURRENTKEY("Sales (LCY)");
      Customer.ASCENDING(false);
      with Customer do begin
        if FIND('-') then
          repeat
            // Return Sales (LCY) for top 10 customer, and as 11th measure - the sum of Sales (LCY) for all other customers
            if ColumnIndex <= 10 then begin
              CustomerName[ColumnIndex] := Name;
              SalesLCY[ColumnIndex] := "Sales (LCY)";
            end else
              SalesLCY[11] += "Sales (LCY)";
            ColumnIndex := ColumnIndex + 1;
          until NEXT = 0;
        CustomerName[11] := AllOtherCustomersTxt;
      end;
    END;

    LOCAL PROCEDURE DrillDownCust@1(DrillDownName@1000 : Text[50]);
    VAR
      Customer@1001 : Record Customer;
    BEGIN
      Customer.SETRANGE(Name,DrillDownName);
      Customer.FINDFIRST;
      PAGE.RUN(PAGE::"Customer Card",Customer);
    END;

    LOCAL PROCEDURE DrillDownOtherCustList@8();
    VAR
      Customer@1001 : Record Customer;
    BEGIN
      Customer.SETFILTER("No.",GetFilterToExcludeTopTenCustomers);
      Customer.SETCURRENTKEY(Name);
      Customer.ASCENDING(true);
      PAGE.RUN(PAGE::"Customer List",Customer);
    END;

    LOCAL PROCEDURE GetFilterToExcludeTopTenCustomers@11() : Text;
    VAR
      Customer@1002 : Record Customer;
      CustomerCounter@1001 : Integer;
      FilterToExcludeTopTenCustomers@1000 : Text;
    BEGIN
      CustomerCounter := 1;
      Customer.CALCFIELDS("Sales (LCY)");
      Customer.SETCURRENTKEY("Sales (LCY)");
      Customer.ASCENDING(false);
      with Customer do begin
        if FIND('-') then
          repeat
            if CustomerCounter = 1 then
              FilterToExcludeTopTenCustomers := STRSUBSTNO('<>%1',"No.")
            else
              FilterToExcludeTopTenCustomers += STRSUBSTNO('&<>%1',"No.");
            CustomerCounter := CustomerCounter + 1;
          until (NEXT = 0) or (CustomerCounter = 11);
      end;
      exit(FilterToExcludeTopTenCustomers);
    END;

    BEGIN
    END.
  }
}

