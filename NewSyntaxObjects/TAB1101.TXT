OBJECT Table 1101 Cost Journal Line
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               LOCKTABLE;
               CostJournalTemplate.GET("Journal Template Name");
               CostJournalBatch.GET("Journal Template Name","Journal Batch Name");
               "Reason Code" := CostJournalBatch."Reason Code";

               if "Source Code" = '' then begin
                 SourceCodeSetup.GET;
                 "Source Code" := SourceCodeSetup."Cost Journal";
               end;
             END;

    OnModify=BEGIN
               "System-Created Entry" := false;
             END;

    CaptionML=ENU=Cost Journal Line;
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="Cost Journal Template";
                                                   CaptionML=ENU=Journal Template Name }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 4   ;   ;Cost Type No.       ;Code20        ;TableRelation="Cost Type";
                                                   OnValidate=BEGIN
                                                                if CostType.GET("Cost Type No.") then begin
                                                                  CostType.TESTFIELD(Blocked,false);
                                                                  CostType.TESTFIELD(Type,CostType.Type::"Cost Type");
                                                                  "Cost Center Code" := CostType."Cost Center Code";
                                                                  "Cost Object Code" := CostType."Cost Object Code";
                                                                  Description := CostType.Name;
                                                                end;

                                                                CalcBalance;
                                                              END;

                                                   CaptionML=ENU=Cost Type No. }
    { 5   ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date;
                                                   ClosingDates=true }
    { 7   ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 8   ;   ;Description         ;Text80        ;CaptionML=ENU=Description }
    { 9   ;   ;Journal Batch Name  ;Code10        ;TableRelation="Cost Journal Batch".Name WHERE ("Journal Template Name"=FIELD("Journal Template Name"));
                                                   CaptionML=ENU=Journal Batch Name }
    { 11  ;   ;Bal. Cost Type No.  ;Code20        ;TableRelation="Cost Type";
                                                   OnValidate=BEGIN
                                                                if CostType.GET("Bal. Cost Type No.") then begin
                                                                  CostType.TESTFIELD(Blocked,false);
                                                                  CostType.TESTFIELD(Type,CostType.Type::"Cost Type");
                                                                  "Bal. Cost Center Code" := CostType."Cost Center Code";
                                                                  "Bal. Cost Object Code" := CostType."Cost Object Code";
                                                                end;

                                                                CalcBalance;
                                                              END;

                                                   CaptionML=ENU=Bal. Cost Type No. }
    { 16  ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                CalcBalance;
                                                                UpdateDebitCreditAmounts;
                                                              END;

                                                   CaptionML=ENU=Amount }
    { 17  ;   ;Balance             ;Decimal       ;CaptionML=ENU=Balance;
                                                   Editable=false }
    { 18  ;   ;Debit Amount        ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE(Amount,"Debit Amount");
                                                              END;

                                                   CaptionML=ENU=Debit Amount }
    { 19  ;   ;Credit Amount       ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE(Amount,-"Credit Amount");
                                                              END;

                                                   CaptionML=ENU=Credit Amount }
    { 20  ;   ;Cost Center Code    ;Code20        ;TableRelation="Cost Center";
                                                   OnValidate=BEGIN
                                                                CheckCostCenter("Cost Center Code");
                                                              END;

                                                   CaptionML=ENU=Cost Center Code }
    { 21  ;   ;Cost Object Code    ;Code20        ;TableRelation="Cost Object";
                                                   OnValidate=BEGIN
                                                                CheckCostObject("Cost Object Code");
                                                              END;

                                                   CaptionML=ENU=Cost Object Code }
    { 22  ;   ;Bal. Cost Center Code;Code20       ;TableRelation="Cost Center";
                                                   OnValidate=BEGIN
                                                                CheckCostCenter("Bal. Cost Center Code");
                                                              END;

                                                   CaptionML=ENU=Bal. Cost Center Code }
    { 23  ;   ;Bal. Cost Object Code;Code20       ;TableRelation="Cost Object";
                                                   OnValidate=BEGIN
                                                                CheckCostObject("Bal. Cost Object Code");
                                                              END;

                                                   CaptionML=ENU=Bal. Cost Object Code }
    { 27  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code }
    { 29  ;   ;G/L Entry No.       ;Integer       ;TableRelation="G/L Entry";
                                                   CaptionML=ENU=G/L Entry No.;
                                                   Editable=false }
    { 30  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code }
    { 31  ;   ;System-Created Entry;Boolean       ;CaptionML=ENU=System-Created Entry;
                                                   Editable=false }
    { 32  ;   ;Cost Entry No.      ;Integer       ;CaptionML=ENU=Cost Entry No.;
                                                   Editable=false }
    { 33  ;   ;Allocated           ;Boolean       ;CaptionML=ENU=Allocated }
    { 50  ;   ;Allocation Description;Text80      ;CaptionML=ENU=Allocation Description }
    { 51  ;   ;Allocation ID       ;Code10        ;CaptionML=ENU=Allocation ID }
    { 68  ;   ;Additional-Currency Amount;Decimal ;CaptionML=ENU=Additional-Currency Amount;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 69  ;   ;Add.-Currency Debit Amount;Decimal ;CaptionML=ENU=Add.-Currency Debit Amount;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 70  ;   ;Add.-Currency Credit Amount;Decimal;CaptionML=ENU=Add.-Currency Credit Amount;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 100 ;   ;Budget Name         ;Code10        ;CaptionML=ENU=Budget Name;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"Journal Template Name","Journal Batch Name","Line No.";
                                                   SumIndexFields=Balance;
                                                   Clustered=true }
    {    ;"Cost Type No.","Cost Center Code","Cost Object Code" }
    {    ;"G/L Entry No."                          }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SourceCodeSetup@1005 : Record "Source Code Setup";
      CostType@1004 : Record "Cost Type";
      CostJournalBatch@1003 : Record "Cost Journal Batch";
      CostJournalTemplate@1002 : Record "Cost Journal Template";
      Text000@1006 : TextConst '@@@="%2 = Cost Center or Cost Object; %3 = Cost Center or Cost Object Code";ENU=Line Type must be %1 or Begin-Total in %2 %3.';

    LOCAL PROCEDURE CalcBalance@1();
    BEGIN
      case true of
        ("Cost Type No." <> '') and ("Bal. Cost Type No." <> ''):
          Balance := 0;
        "Bal. Cost Type No." <> '':
          Balance := -Amount;
        else
          Balance := Amount;
      end;
    END;

    LOCAL PROCEDURE CheckCostCenter@2(CostCenterCode@1000 : Code[20]);
    VAR
      CostCenter@1001 : Record "Cost Center";
    BEGIN
      if CostCenter.GET(CostCenterCode) then begin
        if not (CostCenter."Line Type" in [CostCenter."Line Type"::"Cost Center",CostCenter."Line Type"::"Begin-Total"]) then
          ERROR(Text000,CostCenter."Line Type"::"Cost Center",CostCenter.TABLECAPTION,CostCenter.Code);
        CostCenter.TESTFIELD(Blocked,false);
      end;
    END;

    LOCAL PROCEDURE CheckCostObject@3(CostObjectCode@1000 : Code[20]);
    VAR
      CostObject@1001 : Record "Cost Object";
    BEGIN
      if CostObject.GET(CostObjectCode) then begin
        if not (CostObject."Line Type" in [CostObject."Line Type"::"Cost Object",CostObject."Line Type"::"Begin-Total"]) then
          ERROR(Text000,CostObject."Line Type"::"Cost Object",CostObject.TABLECAPTION,CostObject.Code);
        CostObject.TESTFIELD(Blocked,false);
      end;
    END;

    [External]
    PROCEDURE SetUpNewLine@8(LastCostJournalLine@1000 : Record "Cost Journal Line");
    VAR
      CostJournalLine@1001 : Record "Cost Journal Line";
    BEGIN
      CostJournalTemplate.GET("Journal Template Name");
      CostJournalBatch.GET("Journal Template Name","Journal Batch Name");
      CostJournalLine.SETRANGE("Journal Template Name","Journal Template Name");
      CostJournalLine.SETRANGE("Journal Batch Name","Journal Batch Name");
      if CostJournalLine.FINDFIRST then begin
        "Posting Date" := LastCostJournalLine."Posting Date";
        "Document No." := LastCostJournalLine."Document No.";
      end else
        "Posting Date" := WORKDATE;

      "Source Code" := CostJournalTemplate."Source Code";
      "Reason Code" := CostJournalBatch."Reason Code";
      "Bal. Cost Type No." := CostJournalBatch."Bal. Cost Type No.";
      "Bal. Cost Center Code" := CostJournalBatch."Bal. Cost Center Code";
      "Bal. Cost Object Code" := CostJournalBatch."Bal. Cost Object Code";
    END;

    [External]
    PROCEDURE EmptyLine@4() : Boolean;
    BEGIN
      exit(Amount = 0);
    END;

    LOCAL PROCEDURE UpdateDebitCreditAmounts@5();
    BEGIN
      case true of
        Amount > 0:
          begin
            "Debit Amount" := Amount;
            "Credit Amount" := 0;
          end;
        Amount < 0:
          begin
            "Debit Amount" := 0;
            "Credit Amount" := -Amount;
          end;
        Amount = 0:
          begin
            "Debit Amount" := 0;
            "Credit Amount" := 0;
          end;
      end;
    END;

    [External]
    PROCEDURE IsOpenedFromBatch@42() : Boolean;
    VAR
      CostJournalBatch@1002 : Record "Cost Journal Batch";
      TemplateFilter@1001 : Text;
      BatchFilter@1000 : Text;
    BEGIN
      BatchFilter := GETFILTER("Journal Batch Name");
      if BatchFilter <> '' then begin
        TemplateFilter := GETFILTER("Journal Template Name");
        if TemplateFilter <> '' then
          CostJournalBatch.SETFILTER("Journal Template Name",TemplateFilter);
        CostJournalBatch.SETFILTER(Name,BatchFilter);
        CostJournalBatch.FINDFIRST;
      end;

      exit((("Journal Batch Name" <> '') and ("Journal Template Name" = '')) or (BatchFilter <> ''));
    END;

    BEGIN
    END.
  }
}

