OBJECT Table 7322 Posted Whse. Shipment Header
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Posted Whse. Shipment Line"=rd;
    OnInsert=BEGIN
               WhseSetup.GET;
               if "No." = '' then begin
                 WhseSetup.TESTFIELD("Posted Whse. Shipment Nos.");
                 NoSeriesMgt.InitSeries(
                   WhseSetup."Posted Whse. Shipment Nos.",xRec."No. Series","Posting Date","No.","No. Series");
               end;
             END;

    OnDelete=VAR
               PostedWhseShptLine@1001 : Record "Posted Whse. Shipment Line";
               WhseCommentLine@1000 : Record "Warehouse Comment Line";
             BEGIN
               PostedWhseShptLine.SETRANGE("No.","No.");
               PostedWhseShptLine.DELETEALL;

               WhseCommentLine.SETRANGE("Table Name",WhseCommentLine."Table Name"::"Posted Whse. Shipment");
               WhseCommentLine.SETRANGE(Type,WhseCommentLine.Type::" ");
               WhseCommentLine.SETRANGE("No.","No.");
               WhseCommentLine.DELETEALL;
             END;

    CaptionML=ENU=Posted Whse. Shipment Header;
    LookupPageID="Posted Whse. Shipment List";
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=ENU=No. }
    { 2   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE ("Use As In-Transit"=CONST(false));
                                                   CaptionML=ENU=Location Code }
    { 3   ;   ;Assigned User ID    ;Code50        ;TableRelation="Warehouse Employee" WHERE ("Location Code"=FIELD("Location Code"));
                                                   CaptionML=ENU=Assigned User ID }
    { 4   ;   ;Assignment Date     ;Date          ;CaptionML=ENU=Assignment Date;
                                                   Editable=false }
    { 5   ;   ;Assignment Time     ;Time          ;CaptionML=ENU=Assignment Time;
                                                   Editable=false }
    { 7   ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series }
    { 11  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Warehouse Comment Line" WHERE ("Table Name"=CONST("Posted Whse. Shipment"),
                                                                                                     Type=CONST(" "),
                                                                                                     "No."=FIELD("No.")));
                                                   CaptionML=ENU=Comment;
                                                   Editable=false }
    { 12  ;   ;Bin Code            ;Code20        ;TableRelation=IF ("Zone Code"=FILTER('')) Bin.Code WHERE ("Location Code"=FIELD("Location Code"))
                                                                 ELSE IF ("Zone Code"=FILTER(<>'')) Bin.Code WHERE ("Location Code"=FIELD("Location Code"),
                                                                                                                    "Zone Code"=FIELD("Zone Code"));
                                                   CaptionML=ENU=Bin Code }
    { 13  ;   ;Zone Code           ;Code10        ;TableRelation=Zone.Code WHERE ("Location Code"=FIELD("Location Code"));
                                                   CaptionML=ENU=Zone Code }
    { 39  ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 40  ;   ;Shipment Date       ;Date          ;CaptionML=ENU=Shipment Date }
    { 41  ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   AccessByPermission=TableData "Shipping Agent Services"=R;
                                                   CaptionML=ENU=Shipping Agent Code }
    { 42  ;   ;Shipping Agent Service Code;Code10 ;TableRelation="Shipping Agent Services".Code WHERE ("Shipping Agent Code"=FIELD("Shipping Agent Code"));
                                                   CaptionML=ENU=Shipping Agent Service Code }
    { 43  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=ENU=Shipment Method Code }
    { 45  ;   ;Whse. Shipment No.  ;Code20        ;CaptionML=ENU=Whse. Shipment No. }
    { 48  ;   ;External Document No.;Code35       ;CaptionML=ENU=External Document No. }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
    {    ;"Location Code"                          }
    {    ;"Whse. Shipment No."                     }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;"No.","Location Code","Posting Date"     }
  }
  CODE
  {
    VAR
      WhseSetup@1000 : Record "Warehouse Setup";
      NoSeriesMgt@1001 : Codeunit NoSeriesManagement;
      Text000@1002 : TextConst 'ENU=You must first set up user %1 as a warehouse employee.';

    [External]
    PROCEDURE LookupPostedWhseShptHeader@3(VAR PostedWhseShptHeader@1001 : Record "Posted Whse. Shipment Header");
    BEGIN
      COMMIT;
      if USERID <> '' then begin
        PostedWhseShptHeader.FILTERGROUP := 2;
        PostedWhseShptHeader.SETRANGE("Location Code");
      end;
      if PAGE.RUNMODAL(0,PostedWhseShptHeader) = ACTION::LookupOK then;
      if USERID <> '' then begin
        PostedWhseShptHeader.FILTERGROUP := 2;
        PostedWhseShptHeader.SETRANGE("Location Code",PostedWhseShptHeader."Location Code");
        PostedWhseShptHeader.FILTERGROUP := 0;
      end;
    END;

    [External]
    PROCEDURE FindFirstAllowedRec@1(Which@1000 : Text[1024]) : Boolean;
    VAR
      PostedWhseShptHeader@1001 : Record "Posted Whse. Shipment Header";
      WMSManagement@1002 : Codeunit "WMS Management";
    BEGIN
      if FIND(Which) then begin
        PostedWhseShptHeader := Rec;
        while true do begin
          if WMSManagement.LocationIsAllowedToView("Location Code") then
            exit(true);

          if NEXT(1) = 0 then begin
            Rec := PostedWhseShptHeader;
            if FIND(Which) then
              while true do begin
                if WMSManagement.LocationIsAllowedToView("Location Code") then
                  exit(true);

                if NEXT(-1) = 0 then
                  exit(false);
              end;
          end;
        end;
      end;
      exit(false);
    END;

    [External]
    PROCEDURE FindNextAllowedRec@2(Steps@1000 : Integer) : Integer;
    VAR
      PostedWhseShptHeader@1002 : Record "Posted Whse. Shipment Header";
      WMSManagement@1001 : Codeunit "WMS Management";
      RealSteps@1003 : Integer;
      NextSteps@1004 : Integer;
    BEGIN
      RealSteps := 0;
      if Steps <> 0 then begin
        PostedWhseShptHeader := Rec;
        repeat
          NextSteps := NEXT(Steps / ABS(Steps));
          if WMSManagement.LocationIsAllowedToView("Location Code") then begin
            RealSteps := RealSteps + NextSteps;
            PostedWhseShptHeader := Rec;
          end;
        until (NextSteps = 0) or (RealSteps = Steps);
        Rec := PostedWhseShptHeader;
        if not FIND then;
      end;
      exit(RealSteps);
    END;

    [External]
    PROCEDURE ErrorIfUserIsNotWhseEmployee@4();
    VAR
      WhseEmployee@1000 : Record "Warehouse Employee";
    BEGIN
      if USERID <> '' then begin
        WhseEmployee.SETRANGE("User ID",USERID);
        if WhseEmployee.ISEMPTY then
          ERROR(Text000,USERID);
      end;
    END;

    BEGIN
    END.
  }
}

