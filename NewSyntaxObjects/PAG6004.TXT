OBJECT Page 6004 Res. Availability (Service)
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Res. Availability (Service);
    SaveValues=true;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable=Resource;
    DataCaptionExpr='';
    PageType=Card;
    OnOpenPage=BEGIN
                 ServMgtSetup.GET;
                 ServHeader.GET(CurrentDocumentType,CurrentDocumentNo);
                 SetColumns(SetWanted::Initial);
                 UpdateFields;
               END;

    OnAfterGetRecord=BEGIN
                       if ServHeader.GET(CurrentDocumentType,CurrentDocumentNo) then
                         "Service Zone Filter" := ServHeader."Service Zone Code"
                       else
                         "Service Zone Filter" := '';

                       CALCFIELDS("In Customer Zone");
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 77      ;1   ;Action    ;
                      Name=ShowMatrix;
                      CaptionML=ENU=&Show Matrix;
                      ToolTipML=ENU=View the data overview according to the selected filters and options.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=ShowMatrix;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 MatrixForm@1117 : Page "Res. Avail. (Service) Matrix";
                               BEGIN
                                 MatrixForm.SetData(CurrentDocumentType,CurrentDocumentNo,CurrentServItemLineNo,CurrentEntryNo,
                                   MatrixColumnCaptions,MatrixRecords,PeriodType);
                                 MatrixForm.SETTABLEVIEW(Rec);
                                 MatrixForm.RUNMODAL;
                               END;
                                }
      { 3       ;1   ;Action    ;
                      Name=Previous Set;
                      CaptionML=ENU=Previous Set;
                      ToolTipML=ENU=Go to the previous set of data.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::Previous);
                               END;
                                }
      { 6       ;1   ;Action    ;
                      Name=Next Set;
                      CaptionML=ENU=Next Set;
                      ToolTipML=ENU=Go to the next set of data.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::Next);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 22  ;1   ;Group     ;
                Name=Matrix Options;
                CaptionML=ENU=Matrix Options }

    { 4   ;2   ;Field     ;
                Name=PeriodType;
                CaptionML=ENU=View by;
                ToolTipML=ENU=Specifies by which period amounts are displayed.;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                ApplicationArea=#Service;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             DateControl;
                             SetColumns(SetWanted::Initial);
                           END;

                ImplicitType=Option }

    { 5   ;2   ;Field     ;
                Name=DateFilter;
                CaptionML=ENU=Date Filter;
                ToolTipML=ENU=Specifies the dates that will be used to filter the amounts in the window.;
                ApplicationArea=#Service;
                SourceExpr=DateFilter;
                OnValidate=BEGIN
                             DateControl;
                             SetColumns(SetWanted::Initial);
                           END;

                ImplicitType=Text }

    { 2   ;2   ;Field     ;
                Name=ColumnsSet;
                CaptionML=ENU=Column set;
                ToolTipML=ENU=Specifies the range of values that are displayed in the matrix window, for example, the total period.;
                ApplicationArea=#Service;
                SourceExpr=ColumnsSet;
                Editable=FALSE;
                ImplicitType=Text1024 }

  }
  CODE
  {
    VAR
      MatrixRecords@1021 : ARRAY [32] OF Record Date;
      ResRec2@1041 : Record Resource;
      ServMgtSetup@1001 : Record "Service Mgt. Setup";
      ServHeader@1002 : Record "Service Header";
      ApplicationManagement@1039 : Codeunit ApplicationManagement;
      CurrentDocumentType@1019 : Integer;
      CurrentDocumentNo@1007 : Code[20];
      CurrentServItemLineNo@1008 : Integer;
      CurrentEntryNo@1009 : Integer;
      PeriodType@1012 : 'Day,Week,Month,Quarter,Year,"Accounting Period"';
      DateFilter@1035 : Text;
      SetWanted@1048 : 'Initial,Previous,Same,Next';
      PKFirstRecInCurrSet@1047 : Text[1024];
      MatrixColumnCaptions@1046 : ARRAY [32] OF Text[100];
      ColumnsSet@1045 : Text[1024];
      CurrSetLength@1044 : Integer;

    [External]
    PROCEDURE SetData@2(DocumentType@1003 : Integer;DocumentNo@1000 : Code[20];ServItemLineNo@1001 : Integer;EntryNo@1002 : Integer);
    BEGIN
      CurrentDocumentType := DocumentType;
      CurrentDocumentNo := DocumentNo;
      CurrentServItemLineNo := ServItemLineNo;
      CurrentEntryNo := EntryNo;
    END;

    LOCAL PROCEDURE UpdateFields@3();
    BEGIN
    END;

    LOCAL PROCEDURE DateControl@6();
    BEGIN
      if ApplicationManagement.MakeDateFilter(DateFilter) = 0 then;
      ResRec2.SETFILTER("Date Filter",DateFilter);
      DateFilter := ResRec2.GETFILTER("Date Filter");
    END;

    [Internal]
    PROCEDURE SetColumns@11(SetWanted@1001 : 'Initial,Previous,Same,Next');
    VAR
      MatrixMgt@1000 : Codeunit "Matrix Management";
    BEGIN
      MatrixMgt.GeneratePeriodMatrixData(SetWanted,32,false,PeriodType,DateFilter,
        PKFirstRecInCurrSet,MatrixColumnCaptions,ColumnsSet,CurrSetLength,MatrixRecords);
    END;

    BEGIN
    END.
  }
}

