OBJECT Page 193 Incoming Doc. Attach. FactBox
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Incoming Document Files;
    SourceTable="Inc. Doc. Attachment Overview";
    PageType=ListPart;
    SourceTableTemporary=true;
    OnAfterGetRecord=BEGIN
                       StyleExpressionTxt := GetStyleTxt;
                     END;

    ActionList=ACTIONS
    {
      { 7       ;    ;ActionContainer;
                      Name=Actions;
                      CaptionML=ENU=Actions;
                      ActionContainerType=ActionItems }
      { 6       ;1   ;Action    ;
                      Name=Export;
                      CaptionML=ENU=View File;
                      ToolTipML=ENU=View the file that is attached to the incoming document record.;
                      ApplicationArea=#Basic,#Suite;
                      Visible=FALSE;
                      Image=Document;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 NameDrillDown;
                               END;
                                }
      { 8       ;1   ;Action    ;
                      Name=ImportNew;
                      CaptionML=ENU=Attach File;
                      ToolTipML=ENU=Attach a file to the incoming document record.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record "Incoming Document Attachment";
                                 IncomingDocument@1001 : Record "Incoming Document";
                               BEGIN
                                 IncomingDocumentAttachment.SETRANGE("Incoming Document Entry No.","Incoming Document Entry No.");
                                 IncomingDocumentAttachment.SetFiltersFromMainRecord(MainRecordRef,IncomingDocumentAttachment);
                                 if IncomingDocumentAttachment.Import then
                                   if IncomingDocument.GET(IncomingDocumentAttachment."Incoming Document Entry No.") then
                                     LoadDataFromIncomingDocument(IncomingDocument);
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=IncomingDoc;
                      CaptionML=ENU=Incoming Document;
                      ToolTipML=ENU=View or create an incoming document record that is linked to the entry or document.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Document;
                      Scope=Repeater;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record "Incoming Document";
                               BEGIN
                                 if not IncomingDocument.GET("Incoming Document Entry No.") then
                                   exit;
                                 PAGE.RUNMODAL(PAGE::"Incoming Document",IncomingDocument);

                                 if IncomingDocument.GET(IncomingDocument."Entry No.") then
                                   LoadDataFromIncomingDocument(IncomingDocument);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                IndentationColumnName=Indentation;
                IndentationControls=Name;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                Name=Name;
                ToolTipML=ENU=Specifies the name of the attached file.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name;
                StyleExpr=StyleExpressionTxt;
                OnDrillDown=BEGIN
                              NameDrillDown;
                            END;

                ImplicitType=Text250 }

    { 5   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the type of the attached file.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Type;
                ImplicitType=Option }

    { 3   ;2   ;Field     ;
                Name=Created Date-Time;
                ToolTipML=ENU=Specifies when the incoming document line was created.;
                ApplicationArea=#Advanced;
                SourceExpr="Created Date-Time";
                Visible=FALSE;
                ImplicitType=DateTime }

  }
  CODE
  {
    VAR
      MainRecordRef@1000 : RecordRef;
      StyleExpressionTxt@1001 : Text;

    [External]
    PROCEDURE LoadDataFromRecord@3(MainRecordVariant@1003 : Variant);
    VAR
      IncomingDocument@1000 : Record "Incoming Document";
      DataTypeManagement@1002 : Codeunit "Data Type Management";
    BEGIN
      if not DataTypeManagement.GetRecordRef(MainRecordVariant,MainRecordRef) then
        exit;

      DELETEALL;

      if not MainRecordRef.GET(MainRecordRef.RECORDID) then
        exit;

      if GetIncomingDocumentRecord(MainRecordVariant,IncomingDocument) then
        InsertFromIncomingDocument(IncomingDocument,Rec);
      CurrPage.UPDATE(false);
    END;

    [External]
    PROCEDURE LoadDataFromIncomingDocument@38(IncomingDocument@1000 : Record "Incoming Document");
    BEGIN
      DELETEALL;
      InsertFromIncomingDocument(IncomingDocument,Rec);
      CurrPage.UPDATE(false);
    END;

    [External]
    PROCEDURE GetIncomingDocumentRecord@10(MainRecordVariant@1000 : Variant;VAR IncomingDocument@1001 : Record "Incoming Document") : Boolean;
    VAR
      DataTypeManagement@1003 : Codeunit "Data Type Management";
    BEGIN
      if not DataTypeManagement.GetRecordRef(MainRecordVariant,MainRecordRef) then
        exit(false);

      case MainRecordRef.NUMBER of
        DATABASE::"Incoming Document":
          begin
            IncomingDocument.COPY(MainRecordVariant);
            exit(true);
          end;
        else begin
          if IncomingDocument.FindFromIncomingDocumentEntryNo(MainRecordRef,IncomingDocument) then
            exit(true);
          if IncomingDocument.FindByDocumentNoAndPostingDate(MainRecordRef,IncomingDocument) then
            exit(true);
          exit(false);
        end;
      end;
    END;

    BEGIN
    END.
  }
}

