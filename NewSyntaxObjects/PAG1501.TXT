OBJECT Page 1501 Workflow
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Workflow;
    SourceTable=Workflow;
    PageType=Document;
    PromotedActionCategoriesML=ENU=New,Process,Report,Flow;
    OnOpenPage=VAR
                 ApplicationAreaSetup@1000 : Record "Application Area Setup";
               BEGIN
                 IsNotTemplate := not Template;
                 InstancesExist := false;
                 ArchiveExists := false;

                 if OpenView or ApplicationAreaSetup.IsBasicOnlyEnabled then
                   CurrPage.EDITABLE := false;

                 // Load webhook subscription link when page opens
                 WorkflowWebhookSubscription.SETRANGE(Enabled,true);
                 WorkflowWebhookSubscription.SETRANGE("WF Definition Id",Code);
                 HasWebhookClientLink := WorkflowWebhookSubscription.FINDFIRST;
               END;

    OnClosePage=VAR
                  Workflow@1000 : Record Workflow;
                BEGIN
                  if Workflow.GET then
                    Workflow.DELETE;
                END;

    OnAfterGetRecord=VAR
                       WorkflowStepInstance@1000 : Record "Workflow Step Instance";
                       WorkflowStepInstanceArchive@1001 : Record "Workflow Step Instance Archive";
                     BEGIN
                       IsNotTemplate := not Template;
                       WorkflowStepInstance.SETRANGE("Workflow Code",Code);
                       InstancesExist := not WorkflowStepInstance.ISEMPTY;

                       WorkflowStepInstanceArchive.SETRANGE("Workflow Code",Code);
                       ArchiveExists := not WorkflowStepInstanceArchive.ISEMPTY;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           if OpenNew then
                             CLEAR(Rec);

                           CurrPage.WorkflowResponses.PAGE.UpdateData;
                         END;

    ActionList=ACTIONS
    {
      { 8       ;    ;ActionContainer;
                      Name=ActionContainer8;
                      ActionContainerType=ActionItems }
      { 18      ;1   ;Action    ;
                      Name=ImportWorkflow;
                      CaptionML=ENU=Import from File;
                      ToolTipML=ENU=Import an existing workflow from an XML file.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      Visible=IsNotTemplate;
                      Enabled=Code <> '';
                      PromotedIsBig=true;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TempBlob@1000 : Record TempBlob;
                                 WorkflowImpExpMgt@1007 : Codeunit "Workflow Imp. / Exp. Mgt";
                                 FileManagement@1001 : Codeunit "File Management";
                               BEGIN
                                 if FileManagement.BLOBImport(TempBlob,'') = '' then
                                   exit;

                                 WorkflowImpExpMgt.ReplaceWorkflow(Rec,TempBlob);
                                 CurrPage.WorkflowSubpage.PAGE.RefreshBuffer;
                               END;
                                }
      { 17      ;1   ;Action    ;
                      Name=ExportWorkflow;
                      CaptionML=ENU=Export to File;
                      ToolTipML=ENU=Export the workflow to a file that can be imported in another Dynamics 365 database.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      Visible=IsNotTemplate;
                      Enabled=Code <> '';
                      PromotedIsBig=true;
                      Image=Export;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Workflow@1003 : Record Workflow;
                                 TempBlob@1001 : Record TempBlob;
                                 FileManagement@1002 : Codeunit "File Management";
                               BEGIN
                                 Workflow.GET(Code);
                                 Workflow.SETRANGE(Code,Code);
                                 Workflow.ExportToBlob(TempBlob);
                                 FileManagement.BLOBExport(TempBlob,'*.xml',true);
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      Name=Flow;
                      CaptionML=ENU=Flow }
      { 14      ;2   ;Action    ;
                      Name=WebhookClientLink;
                      CaptionML=ENU=View;
                      ToolTipML=ENU=View Flow Definition;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=HasWebhookClientLink;
                      PromotedIsBig=true;
                      Image=Flow;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 WorkflowMgt@1000 : Codeunit "Workflow Management";
                               BEGIN
                                 if not WorkflowWebhookSubscription.ISEMPTY then
                                   HYPERLINK(WorkflowMgt.GetWebhookClientLink(WorkflowWebhookSubscription."Client Id",WorkflowWebhookSubscription."Client Type"));
                               END;
                                }
      { 12      ;    ;ActionContainer;
                      Name=ActionContainer12;
                      ActionContainerType=RelatedInformation }
      { 13      ;1   ;Action    ;
                      Name=WorkflowStepInstances;
                      CaptionML=ENU=Workflow Step Instances;
                      ToolTipML=ENU=Show all instances of workflow steps in current workflows.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      Visible=IsNotTemplate;
                      Enabled=InstancesExist;
                      PromotedIsBig=true;
                      Image=List;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 WorkflowStepInstances@1000 : Page "Workflow Step Instances";
                               BEGIN
                                 WorkflowStepInstances.SetWorkflow(Rec);
                                 WorkflowStepInstances.RUNMODAL;
                               END;
                                }
      { 15      ;1   ;Action    ;
                      Name=ArchivedWorkflowStepInstances;
                      CaptionML=ENU=Archived Workflow Step Instances;
                      ToolTipML=ENU=View all instances of workflow steps that are no longer used, either because they are completed or because they were manually archived.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      Visible=IsNotTemplate;
                      Enabled=ArchiveExists;
                      PromotedIsBig=true;
                      Image=ListPage;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ArchivedWFStepInstances@1000 : Page "Archived WF Step Instances";
                               BEGIN
                                 ArchivedWFStepInstances.SetWorkflowCode(Code);
                                 ArchivedWFStepInstances.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 4   ;1   ;Field     ;
                Name=Code;
                ToolTipML=ENU=Specifies the workflow.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Code;
                Editable=IsNotTemplate;
                OnValidate=BEGIN
                             if OpenNew then begin
                               if INSERT then;
                               CurrPage.UPDATE(false);
                               GET(Code);
                               OpenNew := false;
                             end;
                           END;

                ImplicitType=Code20 }

    { 5   ;1   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the workflow.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Editable=IsNotTemplate;
                ImplicitType=Text100 }

    { 16  ;1   ;Field     ;
                Name=Category;
                ToolTipML=ENU=Specifies the category that the workflow belongs to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Category;
                Editable=IsNotTemplate;
                ImplicitType=Code20 }

    { 2   ;1   ;Field     ;
                Name=Enabled;
                ToolTipML=ENU=Specifies that the workflow will start when the event in the first entry-point workflow step occurs.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Enabled;
                Enabled=IsNotTemplate;
                Editable=IsNotTemplate;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;

                ImplicitType=Boolean }

    { 7   ;1   ;Part      ;
                Name=WorkflowSubpage;
                CaptionML=ENU=Workflow Steps;
                ApplicationArea=#Basic,#Suite;
                SubPageLink="Workflow Code"=FIELD(Code);
                PagePartID="Workflow Subpage";
                PartType=Page;
                UpdatePropagation=Both }

    { 3   ;    ;Container ;
                Name=Container3;
                ContainerType=FactBoxArea }

    { 6   ;1   ;Part      ;
                Name=WorkflowResponses;
                CaptionML=ENU=Workflow Responses;
                ApplicationArea=#Suite;
                SubPageLink="Parent Event Step ID"=FIELD("Event Step ID"),
                            "Workflow Code"=FIELD("Workflow Code");
                PagePartID="Workflow Response FactBox";
                ProviderID=7;
                PartType=Page }

    { 11  ;1   ;Part      ;
                Name=Part11;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

    { 10  ;1   ;Part      ;
                Name=Part10;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

  }
  CODE
  {
    VAR
      WorkflowWebhookSubscription@1007 : Record "Workflow Webhook Subscription";
      IsNotTemplate@1000 : Boolean;
      InstancesExist@1001 : Boolean;
      ArchiveExists@1002 : Boolean;
      OpenNew@1003 : Boolean;
      OpenView@1004 : Boolean;
      HasWebhookClientLink@1006 : Boolean;

    [External]
    PROCEDURE SetOpenNew@1(NewOpenNew@1000 : Boolean);
    BEGIN
      OpenNew := NewOpenNew
    END;

    [External]
    PROCEDURE SetOpenView@2(NewOpenView@1000 : Boolean);
    BEGIN
      OpenView := NewOpenView
    END;

    BEGIN
    END.
  }
}

