OBJECT Table 9060 SB Owner Cue
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=SB Owner Cue;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Released Sales Quotes;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE ("Document Type"=CONST(Quote),
                                                                                           Status=FILTER(Released)));
                                                   CaptionML=ENU=Released Sales Quotes }
    { 3   ;   ;Open Sales Orders   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE ("Document Type"=CONST(Order),
                                                                                           Status=FILTER(Open)));
                                                   AccessByPermission=TableData "Return Receipt Header"=R;
                                                   CaptionML=ENU=Open Sales Orders }
    { 4   ;   ;Released Sales Orders;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE ("Document Type"=CONST(Order),
                                                                                           Status=FILTER(Released)));
                                                   AccessByPermission=TableData "Return Receipt Header"=R;
                                                   CaptionML=ENU=Released Sales Orders }
    { 5   ;   ;Released Purchase Orders;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE ("Document Type"=CONST(Order),
                                                                                              Status=FILTER(Released)));
                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=Released Purchase Orders }
    { 6   ;   ;Overdue Sales Documents;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("Cust. Ledger Entry" WHERE ("Document Type"=FILTER(Invoice|"Credit Memo"),
                                                                                                 "Due Date"=FIELD("Overdue Date Filter"),
                                                                                                 Open=CONST(true)));
                                                   CaptionML=ENU=Overdue Sales Documents }
    { 7   ;   ;SOs Shipped Not Invoiced;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE ("Document Type"=CONST(Order),
                                                                                           "Completely Shipped"=CONST(true),
                                                                                           "Shipped Not Invoiced"=CONST(true)));
                                                   AccessByPermission=TableData "Sales Shipment Header"=R;
                                                   CaptionML=ENU=SOs Shipped Not Invoiced }
    { 8   ;   ;Customers - Blocked ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count(Customer WHERE (Blocked=FILTER(<>" ")));
                                                   CaptionML=ENU=Customers - Blocked }
    { 9   ;   ;Purchase Documents Due Today;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Vendor Ledger Entry" WHERE ("Document Type"=FILTER(Invoice|"Credit Memo"),
                                                                                                  "Due Date"=FIELD("Due Date Filter"),
                                                                                                  Open=CONST(true)));
                                                   CaptionML=ENU=Purchase Documents Due Today }
    { 10  ;   ;Vendors - Payment on Hold;Integer  ;FieldClass=FlowField;
                                                   CalcFormula=Count(Vendor WHERE (Blocked=FILTER(Payment)));
                                                   CaptionML=ENU=Vendors - Payment on Hold }
    { 11  ;   ;Sales Invoices      ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE ("Document Type"=FILTER(Invoice)));
                                                   CaptionML=ENU=Sales Invoices }
    { 12  ;   ;Unpaid Sales Invoices;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Invoice Header" WHERE (Closed=FILTER(false)));
                                                   CaptionML=ENU=Unpaid Sales Invoices }
    { 13  ;   ;Overdue Sales Invoices;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Invoice Header" WHERE ("Due Date"=FIELD("Overdue Date Filter"),
                                                                                                   Closed=FILTER(false)));
                                                   CaptionML=ENU=Overdue Sales Invoices }
    { 14  ;   ;Sales Quotes        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE ("Document Type"=FILTER(Quote)));
                                                   CaptionML=ENU=Sales Quotes }
    { 20  ;   ;Due Date Filter     ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Due Date Filter;
                                                   Editable=false }
    { 21  ;   ;Overdue Date Filter ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Overdue Date Filter }
    { 30  ;   ;Purchase Invoices   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE ("Document Type"=FILTER(Invoice)));
                                                   CaptionML=ENU=Purchase Invoices }
    { 31  ;   ;Unpaid Purchase Invoices;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Inv. Header" WHERE (Closed=FILTER(false)));
                                                   CaptionML=ENU=Unpaid Purchase Invoices }
    { 32  ;   ;Overdue Purchase Invoices;Integer  ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Inv. Header" WHERE ("Due Date"=FIELD("Overdue Date Filter"),
                                                                                                 Closed=FILTER(false)));
                                                   CaptionML=ENU=Overdue Purchase Invoices }
    { 33  ;   ;User ID Filter      ;Code50        ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=User ID Filter }
    { 34  ;   ;Pending Tasks       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("User Task" WHERE ("Assigned To User Name"=FIELD("User ID Filter"),
                                                                                        "Percent Complete"=FILTER(<>100)));
                                                   CaptionML=ENU=Pending Tasks }
  }
  KEYS
  {
    {    ;"Primary Key"                           ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE CountSalesOrdersShippedNotInvoiced@1() : Integer;
    VAR
      CountSalesOrders@1000 : Query "Count Sales Orders";
    BEGIN
      CountSalesOrders.SETRANGE(Completely_Shipped,true);
      CountSalesOrders.SETRANGE(Invoice,false);
      CountSalesOrders.OPEN;
      CountSalesOrders.READ;
      exit(CountSalesOrders.Count_Orders);
    END;

    [External]
    PROCEDURE ShowSalesOrdersShippedNotInvoiced@2();
    VAR
      SalesHeader@1000 : Record "Sales Header";
    BEGIN
      SalesHeader.SETRANGE("Document Type",SalesHeader."Document Type"::Order);
      SalesHeader.SETRANGE("Completely Shipped",true);
      SalesHeader.SETRANGE(Invoice,false);
      PAGE.RUN(PAGE::"Sales Order List",SalesHeader);
    END;

    BEGIN
    END.
  }
}

