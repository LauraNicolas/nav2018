OBJECT Report 493 Carry Out Action Msg. - Req.
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Carry Out Action Msg. - Req.;
    ProcessingOnly=true;
    OnPreReport=BEGIN
                  UseOneJnl(ReqLine);
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnOpenPage=BEGIN
                   PurchOrderHeader."Order Date" := WORKDATE;
                   PurchOrderHeader."Posting Date" := WORKDATE;
                   PurchOrderHeader."Expected Receipt Date" := WORKDATE;
                   if ReqWkshTmpl.Recurring then
                     EndOrderDate := WORKDATE
                   else
                     EndOrderDate := 0D;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 6   ;2   ;Field     ;
                  Name=PrintOrders;
                  CaptionML=ENU=Print Orders;
                  ToolTipML=ENU=Specifies whether to print the purchase orders after they are created.;
                  ApplicationArea=#Planning;
                  SourceExpr=PrintOrders }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=cannot be filtered when you create orders';
      Text001@1001 : TextConst 'ENU=There is nothing to create.';
      Text003@1003 : TextConst 'ENU=You are now in worksheet %1.';
      ReqWkshTmpl@1007 : Record "Req. Wksh. Template";
      ReqWkshName@1008 : Record "Requisition Wksh. Name";
      ReqLine@1009 : Record "Requisition Line";
      PurchOrderHeader@1010 : Record "Purchase Header";
      ReqWkshMakeOrders@1011 : Codeunit "Req. Wksh.-Make Order";
      EndOrderDate@1012 : Date;
      PrintOrders@1013 : Boolean;
      TempJnlBatchName@1014 : Code[10];
      HideDialog@1017 : Boolean;

    PROCEDURE SetReqWkshLine@1(VAR NewReqLine@1000 : Record "Requisition Line");
    BEGIN
      ReqLine.COPY(NewReqLine);
      ReqWkshTmpl.GET(NewReqLine."Worksheet Template Name");
    END;

    PROCEDURE GetReqWkshLine@6(VAR NewReqLine@1000 : Record "Requisition Line");
    BEGIN
      NewReqLine.COPY(ReqLine);
    END;

    PROCEDURE SetReqWkshName@2(VAR NewReqWkshName@1000 : Record "Requisition Wksh. Name");
    BEGIN
      ReqWkshName.COPY(NewReqWkshName);
      ReqWkshTmpl.GET(NewReqWkshName."Worksheet Template Name");
    END;

    LOCAL PROCEDURE UseOneJnl@3(VAR ReqLine@1000 : Record "Requisition Line");
    BEGIN
      with ReqLine do begin
        ReqWkshTmpl.GET("Worksheet Template Name");
        if ReqWkshTmpl.Recurring and (GETFILTER("Order Date") <> '') then
          FIELDERROR("Order Date",Text000);
        TempJnlBatchName := "Journal Batch Name";
        ReqWkshMakeOrders.Set(PurchOrderHeader,EndOrderDate,PrintOrders);
        ReqWkshMakeOrders.CarryOutBatchAction(ReqLine);

        if "Line No." = 0 then
          MESSAGE(Text001)
        else
          if not HideDialog then
            if TempJnlBatchName <> "Journal Batch Name" then
              MESSAGE(
                Text003,
                "Journal Batch Name");

        if not FIND('=><') or (TempJnlBatchName <> "Journal Batch Name") then begin
          RESET;
          FILTERGROUP := 2;
          SETRANGE("Worksheet Template Name","Worksheet Template Name");
          SETRANGE("Journal Batch Name","Journal Batch Name");
          FILTERGROUP := 0;
          "Line No." := 1;
        end;
      end;
    END;

    PROCEDURE InitializeRequest@5(ExpirationDate@1000 : Date;OrderDate@1001 : Date;PostingDate@1002 : Date;ExpectedReceiptDate@1003 : Date;YourRef@1004 : Text[50]);
    BEGIN
      EndOrderDate := ExpirationDate;
      PurchOrderHeader."Order Date" := OrderDate;
      PurchOrderHeader."Posting Date" := PostingDate;
      PurchOrderHeader."Expected Receipt Date" := ExpectedReceiptDate;
      PurchOrderHeader."Your Reference" := YourRef;
    END;

    PROCEDURE SetHideDialog@7(NewHideDialog@1000 : Boolean);
    BEGIN
      HideDialog := NewHideDialog;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

