OBJECT Codeunit 5476 Graph Mgt - Sales Inv. Lines
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE GetUnitOfMeasureJSON@1(VAR SalesInvoiceLineAggregate@1002 : Record "Sales Invoice Line Aggregate") : Text;
    VAR
      Item@1003 : Record Item;
      GraphCollectionMgtItem@1000 : Codeunit "Graph Collection Mgt - Item";
      GraphMgtComplexTypes@1001 : Codeunit "Graph Mgt - Complex Types";
      UnitOfMeasureJSON@1004 : Text;
    BEGIN
      if SalesInvoiceLineAggregate."No." = '' then
        exit;

      case SalesInvoiceLineAggregate.Type of
        SalesInvoiceLineAggregate.Type::Item:
          begin
            if not Item.GET(SalesInvoiceLineAggregate."No.") then
              exit;

            UnitOfMeasureJSON := GraphCollectionMgtItem.ItemUnitOfMeasureToJSON(Item,SalesInvoiceLineAggregate."Unit of Measure Code");
          end;
        else
          UnitOfMeasureJSON := GraphMgtComplexTypes.GetUnitOfMeasureJSON(SalesInvoiceLineAggregate."Unit of Measure Code");
      end;

      exit(UnitOfMeasureJSON);
    END;

    [EventSubscriber(Codeunit,5150,OnUpdateReferencedIdField)]
    LOCAL PROCEDURE HandleUpdateReferencedIdFieldOnSalesInvoiceHeader@19(VAR RecRef@1000 : RecordRef;NewId@1001 : GUID;VAR Handled@1002 : Boolean);
    BEGIN
      if Handled then
        exit;

      if RecRef.NUMBER <> DATABASE::"Sales Invoice Line" then
        exit;

      Handled := true;
    END;

    [EventSubscriber(Codeunit,5150,OnGetPredefinedIdValue)]
    LOCAL PROCEDURE HandleGetPredefinedIdValue@21(VAR Id@1000 : GUID;VAR RecRef@1001 : RecordRef;VAR Handled@1002 : Boolean);
    BEGIN
      if Handled then
        exit;

      if RecRef.NUMBER <> DATABASE::"Sales Invoice Line" then
        exit;

      Handled := true;
    END;

    BEGIN
    END.
  }
}

