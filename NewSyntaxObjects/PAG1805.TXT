OBJECT Page 1805 Email Setup Wizard
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Email Setup;
    SourceTable="SMTP Mail Setup";
    PageType=NavigatePage;
    SourceTableTemporary=true;
    OnInit=BEGIN
             LoadTopBanners;
           END;

    OnOpenPage=VAR
                 SMTPMailSetup@1000 : Record "SMTP Mail Setup";
                 CompanyInformation@1001 : Record "Company Information";
                 SMTPMail@1002 : Codeunit "SMTP Mail";
               BEGIN
                 INIT;
                 if SMTPMailSetup.GET then begin
                   TRANSFERFIELDS(SMTPMailSetup);
                   GetEmailProvider(SMTPMailSetup)
                 end else begin
                   SMTPMail.ApplyOffice365Smtp(Rec);
                   EmailProvider := EmailProvider::"Office 365";
                   if CompanyInformation.GET then
                     "User ID" := CompanyInformation."E-Mail";
                 end;
                 INSERT;
                 if SMTPMailSetup.HasPassword then
                   Password := DummyPasswordTxt;

                 Step := Step::Start;
                 EnableControls;
               END;

    OnQueryClosePage=BEGIN
                       if CloseAction = ACTION::OK then
                         if AssistedSetup.GetStatus(PAGE::"Email Setup Wizard") = AssistedSetup.Status::"Not Completed" then
                           if not CONFIRM(NAVNotSetUpQst,false) then
                             ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      Name=ActionContainer10;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Enabled=BackActionEnabled;
                      InFooterBar=true;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(true);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Enabled=NextActionEnabled;
                      InFooterBar=true;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 case Step of
                                   Step::Settings:
                                     if (Authentication = Authentication::Basic) and (("User ID" = '') or (Password = '')) then
                                       ERROR(EmailPasswordMissingErr);
                                 end;

                                 NextStep(false);
                               END;
                                }
      { 16      ;1   ;Action    ;
                      Name=ActionSendTestEmail;
                      CaptionML=ENU=Send Test Email;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Visible=FinishActionEnabled;
                      Enabled=True;
                      InFooterBar=true;
                      Image=Email;
                      OnAction=BEGIN
                                 SendTestEmailAction;
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Enabled=FinishActionEnabled;
                      InFooterBar=true;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Name=Group96;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                Name=MediaResourcesStandard;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 98  ;1   ;Group     ;
                Name=Group98;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                Name=MediaResourcesDone;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 20  ;1   ;Group     ;
                Name=<MediaRepositoryDone>;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 13  ;2   ;Group     ;
                Name=Welcome to Email Setup;
                CaptionML=ENU=Welcome to Email Setup;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 18  ;3   ;Group     ;
                Name=Group18;
                GroupType=Group;
                InstructionalTextML=ENU=To send email messages using actions on documents, such as the Sales Invoice window, you must log on to the relevant email account. }

    { 21  ;2   ;Group     ;
                Name=Let's go!;
                CaptionML=ENU=Let's go!;
                GroupType=Group }

    { 22  ;3   ;Group     ;
                Name=Group22;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next so you can set up email sending from documents. }

    { 2   ;1   ;Group     ;
                Name=Group2;
                Visible=ProviderStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Choose your email provider. }

    { 3   ;2   ;Field     ;
                Name=Email Provider;
                CaptionML=ENU=Email Provider;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=EmailProvider;
                OnValidate=BEGIN
                             case EmailProvider of
                               EmailProvider::"Office 365":
                                 SMTPMail.ApplyOffice365Smtp(Rec);
                               EmailProvider::Outlook:
                                 SMTPMail.ApplyOutlookSmtp(Rec);
                               EmailProvider::Gmail:
                                 SMTPMail.ApplyGmailSmtp(Rec);
                               EmailProvider::Yahoo:
                                 SMTPMail.ApplyYahooSmtp(Rec);
                               EmailProvider::"Other Email Provider":
                                 "SMTP Server" := '';
                             end;
                             AdvancedSettingsVisible := EmailProvider = EmailProvider::"Other Email Provider";
                             EnableControls;
                           END;

                ImplicitType=Option }

    { 12  ;1   ;Group     ;
                Name=Group12;
                Visible=SettingsStepVisible;
                GroupType=Group }

    { 27  ;2   ;Group     ;
                Name=Group27;
                Visible=AdvancedSettingsVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Enter the SMTP Server Details. }

    { 9   ;3   ;Field     ;
                Name=Authentication;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Authentication;
                OnValidate=BEGIN
                             EnableControls;
                           END;

                ImplicitType=Option }

    { 8   ;3   ;Field     ;
                Name=SMTP Server;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="SMTP Server";
                OnValidate=BEGIN
                             EnableControls;
                           END;

                ImplicitType=Text250;
                ShowMandatory=TRUE }

    { 7   ;3   ;Field     ;
                Name=SMTP Server Port;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="SMTP Server Port";
                ImplicitType=Integer }

    { 6   ;3   ;Field     ;
                Name=Secure Connection;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Secure Connection";
                ImplicitType=Boolean }

    { 26  ;2   ;Group     ;
                Name=Group26;
                Visible=MailSettingsVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Enter the credentials for the account, which will be used for sending emails. }

    { 5   ;3   ;Field     ;
                Name=Email;
                ExtendedDatatype=E-Mail;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="User ID";
                OnValidate=BEGIN
                             EnableControls;
                           END;

                ImplicitType=Text250 }

    { 4   ;3   ;Field     ;
                Name=Password;
                ExtendedDatatype=Masked;
                CaptionML=ENU=Password;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Password;
                OnValidate=BEGIN
                             EnableControls;
                           END;

                ImplicitType=Text250 }

    { 17  ;1   ;Group     ;
                Name=Group17;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 23  ;2   ;Group     ;
                Name=Group23;
                GroupType=Group;
                InstructionalTextML=ENU=To verify that the specified email setup works, choose Send Test Email. }

    { 24  ;2   ;Group     ;
                Name=That's it!;
                CaptionML=ENU=That's it!;
                GroupType=Group }

    { 25  ;3   ;Group     ;
                Name=Group25;
                GroupType=Group;
                InstructionalTextML=ENU=To enable email sending directly from documents, choose Finish. }

  }
  CODE
  {
    VAR
      AssistedSetup@1005 : Record "Assisted Setup";
      MediaRepositoryStandard@1040 : Record "Media Repository";
      MediaRepositoryDone@1041 : Record "Media Repository";
      MediaResourcesStandard@1018 : Record "Media Resources";
      MediaResourcesDone@1016 : Record "Media Resources";
      SMTPMail@1008 : Codeunit "SMTP Mail";
      Step@1012 : 'Start,Provider,Settings,Finish';
      TopBannerVisible@1042 : Boolean;
      FirstStepVisible@1000 : Boolean;
      ProviderStepVisible@1010 : Boolean;
      SettingsStepVisible@1011 : Boolean;
      AdvancedSettingsVisible@1003 : Boolean;
      MailSettingsVisible@1002 : Boolean;
      FinalStepVisible@1015 : Boolean;
      EmailProvider@1001 : '"Office 365",Outlook,Gmail,Yahoo,"Other Email Provider"';
      FinishActionEnabled@1009 : Boolean;
      BackActionEnabled@1013 : Boolean;
      NextActionEnabled@1014 : Boolean;
      NAVNotSetUpQst@1004 : TextConst 'ENU=Email has not been set up.\\Are you sure you want to exit?';
      EmailPasswordMissingErr@1006 : TextConst 'ENU=Please enter a valid email address and password.';
      Password@1007 : Text[250];
      DummyPasswordTxt@1017 : TextConst '@@@={Locked};ENU=***';

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      ResetControls;

      case Step of
        Step::Start:
          ShowStartStep;
        Step::Provider:
          ShowProviderStep;
        Step::Settings:
          ShowSettingsStep;
        Step::Finish:
          ShowFinishStep;
      end;
    END;

    LOCAL PROCEDURE StoreSMTPSetup@31();
    VAR
      SMTPMailSetup@1000 : Record "SMTP Mail Setup";
    BEGIN
      if not SMTPMailSetup.GET then begin
        SMTPMailSetup.INIT;
        SMTPMailSetup.INSERT;
      end;

      SMTPMailSetup.TRANSFERFIELDS(Rec,false);
      if Password <> DummyPasswordTxt then
        SMTPMailSetup.SetPassword(Password);
      SMTPMailSetup.MODIFY(true);
      COMMIT;
    END;

    LOCAL PROCEDURE SendTestEmailAction@10();
    BEGIN
      StoreSMTPSetup;
      CODEUNIT.RUN(CODEUNIT::"SMTP Test Mail");
    END;

    LOCAL PROCEDURE FinishAction@12();
    BEGIN
      StoreSMTPSetup;
      AssistedSetup.SetStatus(PAGE::"Email Setup Wizard",AssistedSetup.Status::Completed);
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@41(Backwards@1000 : Boolean);
    BEGIN
      if Backwards then
        Step := Step - 1
      else
        Step := Step + 1;

      EnableControls;
    END;

    LOCAL PROCEDURE ShowStartStep@24();
    BEGIN
      FirstStepVisible := true;
      FinishActionEnabled := false;
      BackActionEnabled := false;
    END;

    LOCAL PROCEDURE ShowProviderStep@33();
    BEGIN
      ProviderStepVisible := true;
    END;

    LOCAL PROCEDURE ShowSettingsStep@34();
    BEGIN
      SettingsStepVisible := true;
      AdvancedSettingsVisible := EmailProvider = EmailProvider::"Other Email Provider";
      MailSettingsVisible := Authentication = Authentication::Basic;
      NextActionEnabled := "SMTP Server" <> '';
    END;

    LOCAL PROCEDURE ShowFinishStep@35();
    BEGIN
      FinalStepVisible := true;
      NextActionEnabled := false;
      FinishActionEnabled := true;
    END;

    LOCAL PROCEDURE ResetControls@1();
    BEGIN
      FinishActionEnabled := false;
      BackActionEnabled := true;
      NextActionEnabled := true;

      FirstStepVisible := false;
      ProviderStepVisible := false;
      SettingsStepVisible := false;
      FinalStepVisible := false;
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      if MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE)) and
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE))
      then
        if MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") and
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        then
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE GetEmailProvider@11(VAR SMTPMailSetup@1000 : Record "SMTP Mail Setup");
    BEGIN
      case true of
        SMTPMail.IsOffice365Setup(SMTPMailSetup):
          EmailProvider := EmailProvider::"Office 365";
        SMTPMail.IsOutlookSetup(SMTPMailSetup):
          EmailProvider := EmailProvider::Outlook;
        SMTPMail.IsGmailSetup(SMTPMailSetup):
          EmailProvider := EmailProvider::Gmail;
        SMTPMail.IsYahooSetup(SMTPMailSetup):
          EmailProvider := EmailProvider::Yahoo;
        else
          EmailProvider := EmailProvider::"Other Email Provider";
      end;
    END;

    BEGIN
    END.
  }
}

