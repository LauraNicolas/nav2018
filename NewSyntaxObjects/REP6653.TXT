OBJECT Report 6653 Combine Return Receipts
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Combine Return Receipts;
    ProcessingOnly=true;
  }
  DATASET
  {
    { 2495;    ;DataItem;SalesOrderHeader    ;
               DataItemTable="Sales Header";
               DataItemTableView=SORTING("Document Type","Combine Shipments","Bill-to Customer No.") WHERE("Document Type"=CONST("Return Order"),"Combine Shipments"=CONST(true));
               ReqFilterHeadingML=ENU=Sales Return Order;
               OnPreDataItem=BEGIN
                               if PostingDateReq = 0D then
                                 ERROR(Text000);
                               if DocDateReq = 0D then
                                 ERROR(Text001);

                               Window.OPEN(
                                 Text002 +
                                 Text003 +
                                 Text004 +
                                 Text005);
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := Language.GetLanguageID("Language Code");

                                  Window.UPDATE(1,"Bill-to Customer No.");
                                  Window.UPDATE(2,"No.");
                                END;

               OnPostDataItem=BEGIN
                                CurrReport.LANGUAGE := GLOBALLANGUAGE;
                                Window.CLOSE;
                                if SalesHeader."No." <> '' then begin // Not the first time
                                  FinalizeSalesInvHeader;
                                  if NoOfSalesInvErrors = 0 then
                                    MESSAGE(Text010,NoOfSalesInv)
                                  else
                                    MESSAGE(Text007,NoOfSalesInvErrors)
                                end else
                                  MESSAGE(Text008);
                              END;

               ReqFilterFields="Sell-to Customer No.","Bill-to Customer No." }

    { 9963;1   ;DataItem;Return Receipt Header;
               DataItemTable="Return Receipt Header";
               DataItemTableView=SORTING("Return Order No.");
               ReqFilterHeadingML=ENU=Posted Return Receipts;
               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(3,"No.");
                                END;

               ReqFilterFields="Posting Date";
               DataItemLink="Return Order No."=FIELD("No.") }

    { 5391;2   ;DataItem;Return Receipt Line ;
               DataItemTable="Return Receipt Line";
               DataItemTableView=SORTING("Document No.","Line No.") WHERE("Return Qty. Rcd. Not Invd."=FILTER(<>0));
               OnAfterGetRecord=VAR
                                  SalesGetReturnReceipts@1001 : Codeunit "Sales-Get Return Receipts";
                                BEGIN
                                  if "Return Qty. Rcd. Not Invd." <> 0 then begin
                                    if "Bill-to Customer No." <> Cust."No." then
                                      Cust.GET("Bill-to Customer No.");
                                    if Cust.Blocked <> Cust.Blocked::All then begin
                                      if (SalesOrderHeader."Bill-to Customer No." <> SalesHeader."Bill-to Customer No.") or
                                         (SalesOrderHeader."Currency Code" <> SalesHeader."Currency Code") or
                                         (SalesOrderHeader."Dimension Set ID" <> SalesHeader."Dimension Set ID")
                                      then begin
                                        if SalesHeader."No." <> '' then
                                          FinalizeSalesInvHeader;
                                        InsertSalesInvHeader;
                                        SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");
                                        SalesLine.SETRANGE("Document No.",SalesHeader."No.");
                                        SalesLine."Document Type" := SalesHeader."Document Type";
                                        SalesLine."Document No." := SalesHeader."No.";
                                      end;
                                      ReturnRcptLine := "Return Receipt Line";
                                      ReturnRcptLine.InsertInvLineFromRetRcptLine(SalesLine);
                                      if Type = Type::"Charge (Item)" then
                                        SalesGetReturnReceipts.GetItemChargeAssgnt("Return Receipt Line",SalesLine."Qty. to Invoice");
                                    end else
                                      NoOfSalesInvErrors := NoOfSalesInvErrors + 1;
                                  end;
                                END;

               DataItemLink="Document No."=FIELD("No.") }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnOpenPage=BEGIN
                   if PostingDateReq = 0D then
                     PostingDateReq := WORKDATE;
                   if DocDateReq = 0D then
                     DocDateReq := WORKDATE;
                   SalesSetup.GET;
                   CalcInvDisc := SalesSetup."Calc. Inv. Discount";
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=Posting Date;
                  CaptionML=ENU=Posting Date;
                  ToolTipML=ENU=Specifies the posting date for the credit memo(s) that the batch job creates.;
                  ApplicationArea=#SalesReturnOrder;
                  SourceExpr=PostingDateReq }

      { 4   ;2   ;Field     ;
                  Name=Document Date;
                  CaptionML=ENU=Document Date;
                  ToolTipML=ENU=Specifies the document date for the credit memo(s) that the batch job creates. This field must be filled in.;
                  ApplicationArea=#SalesReturnOrder;
                  SourceExpr=DocDateReq }

      { 2   ;2   ;Field     ;
                  Name=Calc. Inv. Discount;
                  CaptionML=ENU=Calc. Inv. Discount;
                  ToolTipML=ENU=Specifies if you want the invoice discounts calculated automatically.;
                  ApplicationArea=#SalesReturnOrder;
                  SourceExpr=CalcInvDisc;
                  OnValidate=BEGIN
                               SalesSetup.GET;
                               SalesSetup.TESTFIELD("Calc. Inv. Discount",false);
                             END;
                              }

      { 3   ;2   ;Field     ;
                  Name=Post Credit Memos;
                  CaptionML=ENU=Post Credit Memos;
                  ToolTipML=ENU=Specifies if you want to have the credit memos posted immediately.;
                  ApplicationArea=#SalesReturnOrder;
                  SourceExpr=PostInv }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Enter the posting date.';
      Text001@1001 : TextConst 'ENU=Enter the document date.';
      Text002@1002 : TextConst 'ENU=Combining return receipts...\\';
      Text003@1003 : TextConst 'ENU=Customer No.        #1##########\';
      Text004@1004 : TextConst 'ENU=Return Order No.    #2##########\';
      Text005@1005 : TextConst 'ENU=Return Receipt No.  #3##########';
      Text007@1006 : TextConst 'ENU=Not all the credit memos were posted. A total of %1 credit memos were not posted.';
      Text008@1007 : TextConst 'ENU=There is nothing to combine.';
      Text010@1008 : TextConst 'ENU=The return receipts are now combined and the number of credit memos created is %1.';
      SalesHeader@1010 : Record "Sales Header";
      SalesLine@1011 : Record "Sales Line";
      ReturnRcptLine@1012 : Record "Return Receipt Line";
      SalesSetup@1013 : Record "Sales & Receivables Setup";
      Cust@1018 : Record Customer;
      Language@1015 : Record Language;
      SalesCalcDisc@1019 : Codeunit "Sales-Calc. Discount";
      SalesPost@1020 : Codeunit "Sales-Post";
      Window@1021 : Dialog;
      PostingDateReq@1022 : Date;
      DocDateReq@1023 : Date;
      CalcInvDisc@1024 : Boolean;
      PostInv@1025 : Boolean;
      NoOfSalesInvErrors@1027 : Integer;
      NoOfSalesInv@1028 : Integer;

    LOCAL PROCEDURE FinalizeSalesInvHeader@2();
    BEGIN
      with SalesHeader do begin
        if CalcInvDisc then
          SalesCalcDisc.RUN(SalesLine);
        FIND;
        COMMIT;
        CLEAR(SalesCalcDisc);
        CLEAR(SalesPost);
        NoOfSalesInv := NoOfSalesInv + 1;
        if PostInv then begin
          CLEAR(SalesPost);
          if not SalesPost.RUN(SalesHeader) then
            NoOfSalesInvErrors := NoOfSalesInvErrors + 1;
        end;
      end;
    END;

    LOCAL PROCEDURE InsertSalesInvHeader@1();
    BEGIN
      with SalesHeader do begin
        INIT;
        "Document Type" := "Document Type"::"Credit Memo";
        "No." := '';
        INSERT(true);
        VALIDATE("Sell-to Customer No.",SalesOrderHeader."Bill-to Customer No.");
        if "Bill-to Customer No." <> "Sell-to Customer No." then
          VALIDATE("Bill-to Customer No.",SalesOrderHeader."Bill-to Customer No.");
        VALIDATE("Posting Date",PostingDateReq);
        VALIDATE("Document Date",DocDateReq);
        VALIDATE("Currency Code",SalesOrderHeader."Currency Code");
        "Shortcut Dimension 1 Code" := SalesOrderHeader."Shortcut Dimension 1 Code";
        "Shortcut Dimension 2 Code" := SalesOrderHeader."Shortcut Dimension 2 Code";
        "Dimension Set ID" := SalesOrderHeader."Dimension Set ID";
        MODIFY;
        COMMIT;
      end;
    END;

    PROCEDURE InitializeRequest@4(NewPostingDate@1000 : Date;NewDocumentDate@1001 : Date;NewCalcInvDisc@1002 : Boolean;NewPostCreditMemo@1003 : Boolean);
    BEGIN
      PostingDateReq := NewPostingDate;
      DocDateReq := NewDocumentDate;
      CalcInvDisc := NewCalcInvDisc;
      PostInv := NewPostCreditMemo;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

