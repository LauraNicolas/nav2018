OBJECT Table 454 Approval Entry
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnModify=BEGIN
               "Last Date-Time Modified" := CREATEDATETIME(TODAY,TIME);
               "Last Modified By User ID" := USERID;
             END;

    CaptionML=ENU=Approval Entry;
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;CaptionML=ENU=Table ID }
    { 2   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU="Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order, ";
                                                   OptionString=Quote,Order,Invoice,"Credit Memo","Blanket Order","Return Order"," " }
    { 3   ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 4   ;   ;Sequence No.        ;Integer       ;CaptionML=ENU=Sequence No. }
    { 5   ;   ;Approval Code       ;Code20        ;CaptionML=ENU=Approval Code }
    { 6   ;   ;Sender ID           ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=BEGIN
                                                              UserMgt.LookupUserID("Sender ID");
                                                            END;

                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Sender ID }
    { 7   ;   ;Salespers./Purch. Code;Code20      ;CaptionML=ENU=Salespers./Purch. Code }
    { 8   ;   ;Approver ID         ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=BEGIN
                                                              UserMgt.LookupUserID("Approver ID");
                                                            END;

                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Approver ID }
    { 9   ;   ;Status              ;Option        ;OnValidate=BEGIN
                                                                if (xRec.Status = Status::Created) and (Status = Status::Open) then
                                                                  "Date-Time Sent for Approval" := CREATEDATETIME(TODAY,TIME);
                                                              END;

                                                   CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Created,Open,Canceled,Rejected,Approved;
                                                   OptionString=Created,Open,Canceled,Rejected,Approved }
    { 10  ;   ;Date-Time Sent for Approval;DateTime;
                                                   CaptionML=ENU=Date-Time Sent for Approval }
    { 11  ;   ;Last Date-Time Modified;DateTime   ;CaptionML=ENU=Last Date-Time Modified }
    { 12  ;   ;Last Modified By User ID;Code50    ;TableRelation=User."User Name";
                                                   OnLookup=BEGIN
                                                              UserMgt.LookupUserID("Last Modified By User ID");
                                                            END;

                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Last Modified By User ID }
    { 13  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Approval Comment Line" WHERE ("Table ID"=FIELD("Table ID"),
                                                                                                    "Record ID to Approve"=FIELD("Record ID to Approve"),
                                                                                                    "Workflow Step Instance ID"=FIELD("Workflow Step Instance ID")));
                                                   CaptionML=ENU=Comment;
                                                   Editable=false }
    { 14  ;   ;Due Date            ;Date          ;CaptionML=ENU=Due Date }
    { 15  ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 16  ;   ;Amount (LCY)        ;Decimal       ;CaptionML=ENU=Amount (LCY);
                                                   AutoFormatType=1 }
    { 17  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code }
    { 18  ;   ;Approval Type       ;Option        ;CaptionML=ENU=Approval Type;
                                                   OptionCaptionML=ENU=Workflow User Group,Sales Pers./Purchaser,Approver;
                                                   OptionString="Workflow User Group","Sales Pers./Purchaser",Approver }
    { 19  ;   ;Limit Type          ;Option        ;CaptionML=ENU=Limit Type;
                                                   OptionCaptionML=ENU=Approval Limits,Credit Limits,Request Limits,No Limits;
                                                   OptionString="Approval Limits","Credit Limits","Request Limits","No Limits" }
    { 20  ;   ;Available Credit Limit (LCY);Decimal;
                                                   CaptionML=ENU=Available Credit Limit (LCY) }
    { 21  ;   ;Pending Approvals   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Approval Entry" WHERE ("Record ID to Approve"=FIELD("Record ID to Approve"),
                                                                                             Status=FILTER(Created|Open),
                                                                                             "Workflow Step Instance ID"=FIELD("Workflow Step Instance ID")));
                                                   CaptionML=ENU=Pending Approvals }
    { 22  ;   ;Record ID to Approve;RecordID      ;CaptionML=ENU=Record ID to Approve }
    { 23  ;   ;Delegation Date Formula;DateFormula;CaptionML=ENU=Delegation Date Formula }
    { 26  ;   ;Number of Approved Requests;Integer;FieldClass=FlowField;
                                                   CalcFormula=Count("Approval Entry" WHERE ("Record ID to Approve"=FIELD("Record ID to Approve"),
                                                                                             Status=FILTER(Approved),
                                                                                             "Workflow Step Instance ID"=FIELD("Workflow Step Instance ID")));
                                                   CaptionML=ENU=Number of Approved Requests }
    { 27  ;   ;Number of Rejected Requests;Integer;FieldClass=FlowField;
                                                   CalcFormula=Count("Approval Entry" WHERE ("Record ID to Approve"=FIELD("Record ID to Approve"),
                                                                                             Status=FILTER(Rejected),
                                                                                             "Workflow Step Instance ID"=FIELD("Workflow Step Instance ID")));
                                                   CaptionML=ENU=Number of Rejected Requests }
    { 29  ;   ;Entry No.           ;Integer       ;AutoIncrement=true;
                                                   CaptionML=ENU=Entry No. }
    { 30  ;   ;Workflow Step Instance ID;GUID     ;CaptionML=ENU=Workflow Step Instance ID }
    { 31  ;   ;Related to Change   ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Workflow - Record Change" WHERE ("Workflow Step Instance ID"=FIELD("Workflow Step Instance ID"),
                                                                                                       "Record ID"=FIELD("Record ID to Approve")));
                                                   CaptionML=ENU=Related to Change }
  }
  KEYS
  {
    {    ;"Entry No."                             ;Clustered=true }
    {    ;"Record ID to Approve","Workflow Step Instance ID","Sequence No." }
    {    ;"Table ID","Document Type","Document No.","Sequence No.","Record ID to Approve" }
    {    ;"Approver ID",Status                     }
    {    ;"Sender ID"                              }
    {    ;"Due Date"                               }
    {    ;"Table ID","Record ID to Approve",Status,"Workflow Step Instance ID","Sequence No." }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      UserMgt@1000 : Codeunit "User Management";
      PageManagement@1001 : Codeunit "Page Management";
      RecNotExistTxt@1002 : TextConst 'ENU=The record does not exist.';
      ChangeRecordDetailsTxt@1003 : TextConst '@@@="Prefix = Record information %1 = field caption %2 = old value %3 = new value. Example: Customer 123455; Credit Limit changed from 100.00 to 200.00";ENU="; %1 changed from %2 to %3"';

    [Internal]
    PROCEDURE ShowRecord@1();
    VAR
      RecRef@1000 : RecordRef;
    BEGIN
      if not RecRef.GET("Record ID to Approve") then
        exit;
      RecRef.SETRECFILTER;
      PageManagement.PageRun(RecRef);
    END;

    [Internal]
    PROCEDURE RecordCaption@4() : Text;
    VAR
      Object@1000 : Record Object;
      RecRef@1002 : RecordRef;
      PageNo@1001 : Integer;
    BEGIN
      if not RecRef.GET("Record ID to Approve") then
        exit;
      PageNo := PageManagement.GetPageID(RecRef);
      if PageNo = 0 then
        exit;
      Object.GET(Object.Type::Page,'',PageNo);
      Object.CALCFIELDS(Caption);
      exit(STRSUBSTNO('%1 %2',Object.Caption,"Document No."));
    END;

    [External]
    PROCEDURE RecordDetails@3() : Text;
    VAR
      SalesHeader@1001 : Record "Sales Header";
      PurchHeader@1000 : Record "Purchase Header";
      RecRef@1002 : RecordRef;
      ChangeRecordDetails@1003 : Text;
    BEGIN
      if not RecRef.GET("Record ID to Approve") then
        exit(RecNotExistTxt);

      ChangeRecordDetails := GetChangeRecordDetails;

      case RecRef.NUMBER of
        DATABASE::"Sales Header":
          begin
            RecRef.SETTABLE(SalesHeader);
            SalesHeader.CALCFIELDS(Amount);
            exit(STRSUBSTNO('%1 ; %2: %3',SalesHeader."Sell-to Customer Name",
                SalesHeader.FIELDCAPTION(Amount),SalesHeader.Amount));
          end;
        DATABASE::"Purchase Header":
          begin
            RecRef.SETTABLE(PurchHeader);
            PurchHeader.CALCFIELDS(Amount);
            exit(STRSUBSTNO('%1 ; %2: %3',PurchHeader."Buy-from Vendor Name",
                PurchHeader.FIELDCAPTION(Amount),PurchHeader.Amount));
          end;
        else
          exit(FORMAT("Record ID to Approve",0,1) + ChangeRecordDetails);
      end;
    END;

    [External]
    PROCEDURE IsOverdue@5() : Boolean;
    BEGIN
      exit((Status in [Status::Created,Status::Open]) and ("Due Date" < TODAY));
    END;

    [External]
    PROCEDURE GetCustVendorDetails@6(VAR CustVendorNo@1002 : Code[20];VAR CustVendorName@1003 : Text[50]);
    VAR
      PurchaseHeader@1000 : Record "Purchase Header";
      SalesHeader@1001 : Record "Sales Header";
      Customer@1005 : Record Customer;
      RecRef@1004 : RecordRef;
    BEGIN
      if not RecRef.GET("Record ID to Approve") then
        exit;

      case "Table ID" of
        DATABASE::"Purchase Header":
          begin
            RecRef.SETTABLE(PurchaseHeader);
            CustVendorNo := PurchaseHeader."Pay-to Vendor No.";
            CustVendorName := PurchaseHeader."Pay-to Name";
          end;
        DATABASE::"Sales Header":
          begin
            RecRef.SETTABLE(SalesHeader);
            CustVendorNo := SalesHeader."Bill-to Customer No.";
            CustVendorName := SalesHeader."Bill-to Name";
          end;
        DATABASE::Customer:
          begin
            RecRef.SETTABLE(Customer);
            CustVendorNo := Customer."No.";
            CustVendorName := Customer.Name;
          end;
      end;
    END;

    [External]
    PROCEDURE GetChangeRecordDetails@2() ChangeDetails : Text;
    VAR
      WorkflowRecordChange@1000 : Record "Workflow - Record Change";
      OldValue@1001 : Text;
      NewValue@1002 : Text;
    BEGIN
      WorkflowRecordChange.SETRANGE("Record ID","Record ID to Approve");
      WorkflowRecordChange.SETRANGE("Workflow Step Instance ID","Workflow Step Instance ID");

      if WorkflowRecordChange.FINDSET then
        repeat
          WorkflowRecordChange.CALCFIELDS("Field Caption");
          NewValue := WorkflowRecordChange.GetFormattedNewValue(true);
          OldValue := WorkflowRecordChange.GetFormattedOldValue(true);
          ChangeDetails += STRSUBSTNO(ChangeRecordDetailsTxt,WorkflowRecordChange."Field Caption",
              OldValue,NewValue);
        until WorkflowRecordChange.NEXT = 0;
    END;

    [External]
    PROCEDURE CanCurrentUserEdit@7() : Boolean;
    VAR
      UserSetup@1000 : Record "User Setup";
    BEGIN
      if not UserSetup.GET(USERID) then
        exit(false);
      exit((UserSetup."User ID" in ["Sender ID","Approver ID"]) or UserSetup."Approval Administrator");
    END;

    [External]
    PROCEDURE MarkAllWhereUserisApproverOrSender@9();
    VAR
      UserSetup@1000 : Record "User Setup";
    BEGIN
      if UserSetup.GET(USERID) and UserSetup."Approval Administrator" then
        exit;
      FILTERGROUP(-1); // Used to support the cross-column search
      SETRANGE("Approver ID",USERID);
      SETRANGE("Sender ID",USERID);
      if FINDSET then
        repeat
          MARK(true);
        until NEXT = 0;
      MARKEDONLY(true);
    END;

    BEGIN
    END.
  }
}

