OBJECT Table 1227 Data Exch. Line Def
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnDelete=VAR
               DataExchMapping@1001 : Record "Data Exch. Mapping";
               DataExchColumnDef@1000 : Record "Data Exch. Column Def";
             BEGIN
               DataExchMapping.SETRANGE("Data Exch. Def Code","Data Exch. Def Code");
               DataExchMapping.SETRANGE("Data Exch. Line Def Code",Code);
               DataExchMapping.DELETEALL(true);

               DataExchColumnDef.SETRANGE("Data Exch. Def Code","Data Exch. Def Code");
               DataExchColumnDef.SETRANGE("Data Exch. Line Def Code",Code);
               DataExchColumnDef.DELETEALL(true);
             END;

    CaptionML=ENU=Data Exch. Line Def;
  }
  FIELDS
  {
    { 1   ;   ;Data Exch. Def Code ;Code20        ;TableRelation="Data Exch. Def".Code;
                                                   CaptionML=ENU=Data Exch. Def Code;
                                                   NotBlank=true }
    { 2   ;   ;Code                ;Code20        ;CaptionML=ENU=Code;
                                                   NotBlank=true }
    { 3   ;   ;Name                ;Text100       ;CaptionML=ENU=Name }
    { 4   ;   ;Column Count        ;Integer       ;CaptionML=ENU=Column Count }
    { 5   ;   ;Data Line Tag       ;Text250       ;CaptionML=ENU=Data Line Tag }
    { 6   ;   ;Namespace           ;Text250       ;CaptionML=ENU=Namespace }
    { 10  ;   ;Parent Code         ;Code20        ;TableRelation="Data Exch. Line Def".Code WHERE ("Data Exch. Def Code"=FIELD("Data Exch. Def Code"));
                                                   OnValidate=BEGIN
                                                                if "Parent Code" = '' then
                                                                  exit;
                                                                if "Parent Code" = Code then
                                                                  ERROR(STRSUBSTNO(DontPointToTheSameLineErr,FIELDCAPTION("Parent Code"),FIELDCAPTION(Code)));
                                                              END;

                                                   CaptionML=ENU=Parent Code }
    { 11  ;   ;Line Type           ;Option        ;CaptionML=ENU=Line Type;
                                                   OptionCaptionML=ENU=Detail,Header,Footer;
                                                   OptionString=Detail,Header,Footer }
  }
  KEYS
  {
    {    ;"Data Exch. Def Code",Code              ;Clustered=true }
    {    ;"Data Exch. Def Code","Parent Code"      }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      IncorrectNamespaceErr@1000 : TextConst '@@@="%1=file namespace,%2=supported namespace";ENU=The imported file contains unsupported namespace "%1". The supported namespace is ''%2''.';
      DontPointToTheSameLineErr@1001 : TextConst '@@@="%1 =Parent Code and %2 = Code";ENU=%1 cannot be the same as %2.';

    [External]
    PROCEDURE InsertRec@7(DataExchDefCode@1000 : Code[20];NewCode@1001 : Code[20];NewName@1002 : Text[100];ColumnCount@1003 : Integer);
    BEGIN
      VALIDATE("Data Exch. Def Code",DataExchDefCode);
      VALIDATE(Code,NewCode);
      VALIDATE(Name,NewName);
      VALIDATE("Column Count",ColumnCount);
      INSERT;
    END;

    [External]
    PROCEDURE ValidateNamespace@3(XMLNode@1000 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode");
    VAR
      NamespaceURI@1001 : Text;
    BEGIN
      if Namespace <> '' then begin
        NamespaceURI := XMLNode.NamespaceURI;
        if NamespaceURI <> Namespace then
          ERROR(IncorrectNamespaceErr,NamespaceURI,Namespace);
      end;
    END;

    [External]
    PROCEDURE GetPath@1(TableId@1000 : Integer;FieldId@1001 : Integer) : Text;
    VAR
      DataExchFieldMapping@1002 : Record "Data Exch. Field Mapping";
      DataExchDef@1003 : Record "Data Exch. Def";
    BEGIN
      DataExchDef.GET("Data Exch. Def Code");
      DataExchFieldMapping.SETRANGE("Data Exch. Def Code","Data Exch. Def Code");
      DataExchFieldMapping.SETRANGE("Data Exch. Line Def Code",Code);
      if DataExchDef.Type = DataExchDef.Type::"Generic Import" then begin
        DataExchFieldMapping.SETRANGE("Target Table ID",TableId);
        DataExchFieldMapping.SETRANGE("Target Field ID",FieldId);
      end else begin
        DataExchFieldMapping.SETRANGE("Table ID",TableId);
        DataExchFieldMapping.SETRANGE("Field ID",FieldId);
      end;
      if DataExchFieldMapping.FINDFIRST then
        exit(DataExchFieldMapping.GetPath);
      exit('');
    END;

    BEGIN
    END.
  }
}

