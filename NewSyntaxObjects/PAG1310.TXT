OBJECT Page 1310 O365 Activities
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Activities;
    SourceTable="Activities Cue";
    PageType=CardPart;
    RefreshOnActivate=true;
    ShowFilter=false;
    OnInit=BEGIN
             if UserTours.IsAvailable and O365GettingStartedMgt.AreUserToursEnabled then
               O365GettingStartedMgt.UpdateGettingStartedVisible(TileGettingStartedVisible,ReplayGettingStartedVisible);
           END;

    OnOpenPage=VAR
                 BookingSync@1002 : Record "Booking Sync";
                 OCRServiceMgt@1000 : Codeunit "OCR Service Mgt.";
                 RoleCenterNotificationMgt@1001 : Codeunit "Role Center Notification Mgt.";
               BEGIN
                 RESET;
                 if not GET then begin
                   INIT;
                   INSERT;
                   COMMIT;
                 end;
                 SETFILTER("Due Date Filter",'>=%1',WORKDATE);
                 SETFILTER("Overdue Date Filter",'<%1',WORKDATE);
                 SETFILTER("Due Next Week Filter",'%1..%2',CALCDATE('<1D>',WORKDATE),CALCDATE('<1W>',WORKDATE));
                 SETRANGE("User ID Filter",USERID);

                 HasCamera := CameraProvider.IsAvailable;
                 if HasCamera then
                   CameraProvider := CameraProvider.Create;

                 PrepareOnLoadDialog;

                 ShowBookings := BookingSync.IsSetup;
                 ShowCamera := true;
                 ShowStartActivities := true;
                 ShowSalesActivities := true;
                 ShowPurchasesActivities := true;
                 ShowPaymentsActivities := true;
                 ShowIncomingDocuments := true;
                 ShowProductVideosActivities := true;
                 ShowAwaitingIncomingDoc := OCRServiceMgt.OcrServiceIsEnable;
                 ShowIntercompanyActivities := true;

                 RoleCenterNotificationMgt.ShowNotifications;
               END;

    OnAfterGetRecord=VAR
                       DocExchServiceSetup@1000 : Record "Doc. Exch. Service Setup";
                     BEGIN
                       CalculateCueFieldValues;
                       ShowDocumentsPendingDocExchService := false;
                       if DocExchServiceSetup.GET then
                         ShowDocumentsPendingDocExchService := DocExchServiceSetup.Enabled;
                       SetActivityGroupVisibility;
                     END;

    OnAfterGetCurrRecord=VAR
                           RoleCenterNotificationMgt@1000 : Codeunit "Role Center Notification Mgt.";
                         BEGIN
                           if UserTours.IsAvailable and O365GettingStartedMgt.AreUserToursEnabled then
                             O365GettingStartedMgt.UpdateGettingStartedVisible(TileGettingStartedVisible,ReplayGettingStartedVisible);
                           RoleCenterNotificationMgt.HideEvaluationNotificationAfterStartingTrial;
                         END;

    ActionList=ACTIONS
    {
      { 6       ;    ;ActionContainer;
                      Name=ActionContainer6;
                      ActionContainerType=ActionItems }
      { 7       ;1   ;Action    ;
                      Name=Set Up Cues;
                      CaptionML=ENU=Set Up Cues;
                      ToolTipML=ENU=Set up the cues (status tiles) related to the role.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Setup;
                      OnAction=VAR
                                 CueRecordRef@1000 : RecordRef;
                               BEGIN
                                 CueRecordRef.GETTABLE(Rec);
                                 CueSetup.OpenCustomizePageForCurrentUser(CueRecordRef.NUMBER);
                               END;
                                }
      { 36      ;1   ;ActionGroup;
                      Name=Show/Hide Activities;
                      CaptionML=ENU=Show/Hide Activities;
                      Image=Answers }
      { 37      ;2   ;Action    ;
                      Name=[Sales ];
                      CaptionML=ENU=Sales;
                      ToolTipML=ENU=View the list of ongoing sales orders.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit "Sales Activities Mgt.";
                      Image=Sales }
      { 38      ;2   ;Action    ;
                      Name=Purchases;
                      CaptionML=ENU=Purchases;
                      ToolTipML=ENU=View the list of ongoing purchase orders.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit "Purchases Activities Mgt.";
                      Image=Purchase }
      { 39      ;2   ;Action    ;
                      Name=Payments;
                      CaptionML=ENU=Payments;
                      ToolTipML=ENU=Specifies the amount that relates to payments.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit "Payments Activities Mgt.";
                      Image=Payment }
      { 41      ;2   ;Action    ;
                      Name=Incoming Documents;
                      CaptionML=ENU=Incoming Documents;
                      ToolTipML=ENU=View the list of incoming documents, such as vendor invoices in PDF, that you can manually or automatically create documents for, such as purchase invoices.;
                      ApplicationArea=#Suite;
                      RunObject=Codeunit "Inc. Doc. Activities Mgt.";
                      Image=Documents }
      { 53      ;2   ;Action    ;
                      Name=User Tasks;
                      CaptionML=ENU=User Tasks;
                      ToolTipML=ENU=Show or hide the User Task cue.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit "User Task Activities Mgt.";
                      Image=Task }
      { 40      ;2   ;Action    ;
                      Name=Start;
                      CaptionML=ENU=Start;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit "Start Activities Mgt.";
                      Image=NewDocument }
      { 45      ;2   ;Action    ;
                      Name=Product Videos;
                      CaptionML=ENU=Product Videos;
                      ToolTipML=ENU=View the list of product videos.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit "Product Videos Activities Mgt.";
                      Image=Filed }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 35  ;1   ;Group     ;
                Name=Welcome;
                CaptionML=ENU=Welcome;
                Visible=TileGettingStartedVisible;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 4       ;    ;Action    ;
                                  Name=GettingStartedTile;
                                  CaptionML=ENU=Return to Getting Started;
                                  ToolTipML=ENU=Learn how to get started with Dynamics 365.;
                                  ApplicationArea=#Basic,#Suite;
                                  Image=TileVideo;
                                  OnAction=BEGIN
                                             O365GettingStartedMgt.LaunchWizard(true,false);
                                           END;
                                            }
                }
                 }

    { 10  ;1   ;Group     ;
                Name=Ongoing Sales;
                CaptionML=ENU=Ongoing Sales;
                Visible=ShowSalesActivities;
                GroupType=CueGroup }

    { 13  ;2   ;Field     ;
                Name=Ongoing Sales Quotes;
                CaptionML=ENU=Quotes;
                ToolTipML=ENU=Specifies sales quotes that have not yet been converted to invoices or orders.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ongoing Sales Quotes";
                DrillDownPageID="Sales Quotes";
                ImplicitType=Integer }

    { 20  ;2   ;Field     ;
                Name=Ongoing Sales Orders;
                CaptionML=ENU=Orders;
                ToolTipML=ENU=Specifies sales orders that are not yet posted or only partially posted.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ongoing Sales Orders";
                DrillDownPageID="Sales Order List";
                ImplicitType=Integer }

    { 2   ;2   ;Field     ;
                Name=Ongoing Sales Invoices;
                CaptionML=ENU=Invoices;
                ToolTipML=ENU=Specifies sales invoices that are not yet posted or only partially posted.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ongoing Sales Invoices";
                DrillDownPageID="Sales Invoice List";
                ImplicitType=Integer }

    { 3   ;2   ;Field     ;
                Name=Sales This Month;
                ToolTipML=ENU=Specifies the sum of sales in the current month.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sales This Month";
                DrillDownPageID="Sales Invoice List";
                OnDrillDown=BEGIN
                              ActivitiesMgt.DrillDownSalesThisMonth;
                            END;

                ImplicitType=Decimal }

    { 46  ;2   ;Field     ;
                Name=Uninvoiced Bookings;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Uninvoiced Bookings";
                Visible=ShowBookings;
                Enabled=ShowBookings;
                OnDrillDown=VAR
                              BookingManager@1000 : Codeunit "Booking Manager";
                            BEGIN
                              BookingManager.InvoiceBookingItems;
                            END;

                ImplicitType=Integer }

    { 28  ;1   ;Group     ;
                Name=Document Exchange Service;
                CaptionML=ENU=Document Exchange Service;
                Visible=ShowDocumentsPendingDocExchService;
                GroupType=CueGroup }

    { 27  ;2   ;Field     ;
                Name=Sales Inv. - Pending Doc.Exch.;
                ToolTipML=ENU=Specifies sales invoices that await sending to the customer through the document exchange service.;
                ApplicationArea=#Suite;
                SourceExpr="Sales Inv. - Pending Doc.Exch.";
                Visible=ShowDocumentsPendingDocExchService;
                DrillDownPageID="Posted Sales Invoices";
                ImplicitType=Integer }

    { 26  ;2   ;Field     ;
                Name=Sales CrM. - Pending Doc.Exch.;
                ToolTipML=ENU=Specifies sales credit memos that await sending to the customer through the document exchange service.;
                ApplicationArea=#Suite;
                SourceExpr="Sales CrM. - Pending Doc.Exch.";
                Visible=ShowDocumentsPendingDocExchService;
                DrillDownPageID="Posted Sales Credit Memos";
                ImplicitType=Integer }

    { 9   ;1   ;Group     ;
                Name=Purchases;
                CaptionML=ENU=Purchases;
                Visible=ShowPurchasesActivities;
                GroupType=CueGroup }

    { 42  ;2   ;Field     ;
                Name=Purchase Orders;
                ToolTipML=ENU=Specifies purchases orders that are not posted or only partially posted.;
                ApplicationArea=#Suite;
                SourceExpr="Purchase Orders";
                DrillDownPageID="Purchase Order List";
                ImplicitType=Integer }

    { 5   ;2   ;Field     ;
                Name=Ongoing Purchase Invoices;
                ToolTipML=ENU=Specifies purchases invoices that are not posted or only partially posted.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ongoing Purchase Invoices";
                DrillDownPageID="Purchase Invoices";
                ImplicitType=Integer }

    { 18  ;2   ;Field     ;
                Name=Overdue Purch. Invoice Amount;
                ToolTipML=ENU=Specifies the sum of your overdue payments to vendors.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Overdue Purch. Invoice Amount";
                OnDrillDown=BEGIN
                              ActivitiesMgt.DrillDownOverduePurchaseInvoiceAmount;
                            END;

                ImplicitType=Decimal }

    { 11  ;2   ;Field     ;
                Name=Purch. Invoices Due Next Week;
                ToolTipML=ENU=Specifies the number of payments to vendors that are due next week.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Purch. Invoices Due Next Week";
                ImplicitType=Integer }

    { 24  ;1   ;Group     ;
                Name=Approvals;
                CaptionML=ENU=Approvals;
                Visible=FALSE;
                GroupType=CueGroup }

    { 25  ;2   ;Field     ;
                Name=Requests to Approve;
                ToolTipML=ENU=Specifies the number of approval requests that require your approval.;
                ApplicationArea=#Suite;
                SourceExpr="Requests to Approve";
                DrillDownPageID="Requests to Approve";
                ImplicitType=Integer }

    { 47  ;1   ;Group     ;
                Name=Intercompany;
                CaptionML=ENU=Intercompany;
                Visible=ShowIntercompanyActivities;
                GroupType=CueGroup }

    { 48  ;2   ;Field     ;
                Name=IC Inbox Transactions;
                CaptionML=ENU=Pending Inbox Transactions;
                ApplicationArea=#Intercompany;
                SourceExpr="IC Inbox Transactions";
                Visible="IC Inbox Transactions" <> 0;
                DrillDownPageID="IC Inbox Transactions";
                ImplicitType=Integer }

    { 49  ;2   ;Field     ;
                Name=IC Outbox Transactions;
                CaptionML=ENU=Pending Outbox Transactions;
                ApplicationArea=#Intercompany;
                SourceExpr="IC Outbox Transactions";
                Visible="IC Outbox Transactions" <> 0;
                DrillDownPageID="IC Outbox Transactions";
                ImplicitType=Integer }

    { 12  ;1   ;Group     ;
                Name=Payments;
                CaptionML=ENU=Payments;
                Visible=ShowPaymentsActivities;
                GroupType=CueGroup }

    { 17  ;2   ;Field     ;
                Name=Overdue Sales Invoice Amount;
                ToolTipML=ENU=Specifies the sum of overdue payments from customers.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Overdue Sales Invoice Amount";
                OnDrillDown=BEGIN
                              ActivitiesMgt.DrillDownCalcOverdueSalesInvoiceAmount;
                            END;

                ImplicitType=Decimal }

    { 29  ;2   ;Field     ;
                Name=Non-Applied Payments;
                CaptionML=ENU=Unprocessed Payments;
                ToolTipML=ENU=Specifies imported bank transactions for payments that are not yet reconciled in the Payment Reconciliation Journal window.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Non-Applied Payments";
                Image=Cash;
                OnDrillDown=BEGIN
                              CODEUNIT.RUN(CODEUNIT::"Pmt. Rec. Journals Launcher");
                            END;

                ImplicitType=Integer }

    { 19  ;2   ;Field     ;
                Name=Average Collection Days;
                ToolTipML=ENU=Specifies how long customers took to pay invoices in the last three months. This is the average number of days from when invoices are issued to when customers pay the invoices.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Average Collection Days";
                ImplicitType=Decimal }

    { 33  ;1   ;Group     ;
                Name=Camera;
                CaptionML=ENU=Camera;
                Visible=ShowCamera;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 21      ;    ;Action    ;
                                  Name=CreateIncomingDocumentFromCamera;
                                  CaptionML=ENU=Create Incoming Doc. from Camera;
                                  ToolTipML=ENU=Create an incoming document by taking a photo of the document with your mobile device camera. The photo will be attached to the new document.;
                                  ApplicationArea=#Suite;
                                  Image=TileCamera;
                                  OnAction=VAR
                                             CameraOptions@1000 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraOptions";
                                           BEGIN
                                             if not HasCamera then
                                               exit;

                                             CameraOptions := CameraOptions.CameraOptions;
                                             CameraOptions.Quality := 100; // 100%
                                             CameraProvider.RequestPictureAsync(CameraOptions);
                                           END;
                                            }
                }
                 }

    { 34  ;1   ;Group     ;
                Name=Incoming Documents;
                CaptionML=ENU=Incoming Documents;
                Visible=ShowIncomingDocuments;
                GroupType=CueGroup }

    { 30  ;2   ;Field     ;
                Name=My Incoming Documents;
                ToolTipML=ENU=Specifies incoming documents that are assigned to you.;
                ApplicationArea=#Suite;
                SourceExpr="My Incoming Documents";
                ImplicitType=Integer }

    { 32  ;2   ;Field     ;
                Name=Awaiting Verfication;
                DrillDown=true;
                ToolTipML=ENU=Specifies incoming documents in OCR processing that require you to log on to the OCR service website to manually verify the OCR values before the documents can be received.;
                ApplicationArea=#Suite;
                SourceExpr="Inc. Doc. Awaiting Verfication";
                Visible=ShowAwaitingIncomingDoc;
                OnDrillDown=VAR
                              OCRServiceSetup@1000 : Record "OCR Service Setup";
                            BEGIN
                              if OCRServiceSetup.GET then
                                if OCRServiceSetup.Enabled then
                                  HYPERLINK(OCRServiceSetup."Sign-in URL");
                            END;

                ImplicitType=Integer }

    { 50  ;1   ;Group     ;
                Name=My User Tasks;
                CaptionML=ENU=My User Tasks;
                Visible=ShowUserTaskActivities;
                GroupType=CueGroup }

    { 51  ;2   ;Field     ;
                Name=Pending Tasks;
                CaptionML=ENU=Pending User Tasks;
                ToolTipML=ENU=Specifies the number of pending tasks that are assigned to you.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pending Tasks";
                DrillDownPageID="User Task List";
                ImplicitType=Integer }

    { 14  ;1   ;Group     ;
                Name=Start;
                CaptionML=ENU=Start;
                Visible=ShowStartActivities;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 15      ;    ;Action    ;
                                  Name=Sales Quote;
                                  CaptionML=ENU=Sales Quote;
                                  ToolTipML=ENU=Offer items or services to a customer.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Sales Quote";
                                  Image=TileNew;
                                  RunPageMode=Create }
                  { 31      ;    ;Action    ;
                                  Name=Sales Order;
                                  CaptionML=ENU=Sales Order;
                                  ToolTipML=ENU=Create a new sales order for items or services that require partial posting or order confirmation.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Sales Order";
                                  Image=TileNew;
                                  RunPageMode=Create }
                  { 16      ;    ;Action    ;
                                  Name=Sales Invoice;
                                  CaptionML=ENU=Sales Invoice;
                                  ToolTipML=ENU=Create a new invoice for the sales of items or services. Invoice quantities cannot be posted partially.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Sales Invoice";
                                  Image=TileNew;
                                  RunPageMode=Create }
                  { 22      ;    ;Action    ;
                                  Name=Purchase Invoice;
                                  CaptionML=ENU=Purchase Invoice;
                                  ToolTipML=ENU=Create a new purchase invoice for items or services.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Purchase Invoice";
                                  Image=TileNew;
                                  RunPageMode=Create }
                  { 100     ;    ;Action    ;
                                  Name=Sales Return Order;
                                  CaptionML=ENU=Sales Return Order;
                                  ToolTipML=ENU=Create a new sales return order for items or services.;
                                  ApplicationArea=#SalesReturnOrder;
                                  RunObject=Page "Sales Return Order";
                                  Image=TileNew;
                                  RunPageMode=Create }
                }
                 }

    { 52  ;1   ;Group     ;
                Name=Product Videos;
                CaptionML=ENU=Product Videos;
                Visible=ShowProductVideosActivities;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 43      ;    ;Action    ;
                                  Name=Product Videos;
                                  CaptionML=ENU=Product Videos;
                                  ToolTipML=ENU=Open a list of videos that showcase some of the product capabilities.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Product Videos";
                                  Image=TileVideo }
                }
                 }

    { 44  ;1   ;Group     ;
                Name=Get started;
                CaptionML=ENU=Get started;
                Visible=ReplayGettingStartedVisible;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 23      ;    ;Action    ;
                                  Name=ShowStartInMyCompany;
                                  CaptionML=ENU=Try with my own data;
                                  ToolTipML=ENU=Set up My Company with the settings you choose. We'll show you how, it's easy.;
                                  ApplicationArea=#Basic,#Suite;
                                  Visible=FALSE;
                                  Image=TileSettings;
                                  OnAction=BEGIN
                                             if UserTours.IsAvailable and O365GettingStartedMgt.AreUserToursEnabled then
                                               UserTours.StartUserTour(O365GettingStartedMgt.GetChangeCompanyTourID);
                                           END;
                                            }
                  { 8       ;    ;Action    ;
                                  Name=ReplayGettingStarted;
                                  CaptionML=ENU=Replay Getting Started;
                                  ToolTipML=ENU=Show the Getting Started guide again.;
                                  ApplicationArea=#Basic,#Suite;
                                  Image=TileVideo;
                                  OnAction=VAR
                                             O365GettingStarted@1000 : Record "O365 Getting Started";
                                           BEGIN
                                             if O365GettingStarted.GET(USERID,CURRENTCLIENTTYPE) then begin
                                               O365GettingStarted."Tour in Progress" := false;
                                               O365GettingStarted."Current Page" := 1;
                                               O365GettingStarted.MODIFY;
                                               COMMIT;
                                             end;

                                             O365GettingStartedMgt.LaunchWizard(true,false);
                                           END;
                                            }
                }
                 }

  }
  CODE
  {
    VAR
      ActivitiesMgt@1009 : Codeunit "Activities Mgt.";
      CueSetup@1005 : Codeunit "Cue Setup";
      O365GettingStartedMgt@1004 : Codeunit "O365 Getting Started Mgt.";
      CameraProvider@1007 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraProvider" WITHEVENTS RUNONCLIENT;
      UserTours@1001 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.UserTours" WITHEVENTS RUNONCLIENT;
      PageNotifier@1002 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.PageNotifier" WITHEVENTS RUNONCLIENT;
      HasCamera@1008 : Boolean;
      ShowBookings@1020 : Boolean;
      ShowCamera@1003 : Boolean;
      ShowDocumentsPendingDocExchService@1006 : Boolean;
      ShowStartActivities@1010 : Boolean;
      ShowIncomingDocuments@1011 : Boolean;
      ShowPaymentsActivities@1012 : Boolean;
      ShowPurchasesActivities@1013 : Boolean;
      ShowSalesActivities@1014 : Boolean;
      ShowAwaitingIncomingDoc@1015 : Boolean;
      ShowProductVideosActivities@1019 : Boolean;
      ShowIntercompanyActivities@1021 : Boolean;
      TileGettingStartedVisible@1000 : Boolean;
      ReplayGettingStartedVisible@1016 : Boolean;
      HideNpsDialog@1017 : Boolean;
      WhatIsNewTourVisible@1018 : Boolean;
      ShowUserTaskActivities@1022 : Boolean;

    LOCAL PROCEDURE CalculateCueFieldValues@6();
    BEGIN
      if FIELDACTIVE("Overdue Sales Invoice Amount") then
        "Overdue Sales Invoice Amount" := ActivitiesMgt.CalcOverdueSalesInvoiceAmount(false);
      if FIELDACTIVE("Overdue Purch. Invoice Amount") then
        "Overdue Purch. Invoice Amount" := ActivitiesMgt.CalcOverduePurchaseInvoiceAmount(false);
      if FIELDACTIVE("Sales This Month") then
        "Sales This Month" := ActivitiesMgt.CalcSalesThisMonthAmount(false);
      if FIELDACTIVE("Top 10 Customer Sales YTD") then
        "Top 10 Customer Sales YTD" := ActivitiesMgt.CalcTop10CustomerSalesRatioYTD;
      if FIELDACTIVE("Average Collection Days") then
        "Average Collection Days" := ActivitiesMgt.CalcAverageCollectionDays;
      if FIELDACTIVE("Uninvoiced Bookings") then
        "Uninvoiced Bookings" := ActivitiesMgt.CalcUninvoicedBookings;
    END;

    LOCAL PROCEDURE SetActivityGroupVisibility@12();
    VAR
      StartActivitiesMgt@1001 : Codeunit "Start Activities Mgt.";
      SalesActivitiesMgt@1002 : Codeunit "Sales Activities Mgt.";
      PurchasesActivitiesMgt@1003 : Codeunit "Purchases Activities Mgt.";
      PaymentsActivitiesMgt@1004 : Codeunit "Payments Activities Mgt.";
      IncDocActivitiesMgt@1005 : Codeunit "Inc. Doc. Activities Mgt.";
      ProductVideosActivitiesMgt@1000 : Codeunit "Product Videos Activities Mgt.";
      UserTaskActivitiesMgt@1006 : Codeunit "User Task Activities Mgt.";
    BEGIN
      ShowStartActivities := StartActivitiesMgt.IsActivitiesVisible;
      ShowSalesActivities := SalesActivitiesMgt.IsActivitiesVisible;
      ShowPurchasesActivities := PurchasesActivitiesMgt.IsActivitiesVisible;
      ShowPaymentsActivities := PaymentsActivitiesMgt.IsActivitiesVisible;
      ShowIncomingDocuments := IncDocActivitiesMgt.IsActivitiesVisible;
      ShowProductVideosActivities := ProductVideosActivitiesMgt.IsActivitiesVisible;
      ShowCamera := HasCamera and ShowIncomingDocuments;
      ShowIntercompanyActivities := ("IC Inbox Transactions" <> 0) or ("IC Outbox Transactions" <> 0);
      ShowUserTaskActivities := UserTaskActivitiesMgt.IsActivitiesVisible;
    END;

    LOCAL PROCEDURE StartWhatIsNewTour@45(hasTourCompleted@1000 : Boolean);
    VAR
      O365UserTours@1001 : Record "User Tours";
      TourID@1003 : Integer;
    BEGIN
      TourID := O365GettingStartedMgt.GetWhatIsNewTourID;

      if O365UserTours.AlreadyCompleted(TourID) then
        exit;

      if not hasTourCompleted then begin
        UserTours.StartUserTour(TourID);
        WhatIsNewTourVisible := true;
        exit;
      end;

      if WhatIsNewTourVisible then begin
        O365UserTours.MarkAsCompleted(TourID);
        WhatIsNewTourVisible := false;
      end;
    END;

    LOCAL PROCEDURE PrepareOnLoadDialog@30();
    BEGIN
      if PrepareUserTours then
        exit;
      PreparePageNotifier;
    END;

    LOCAL PROCEDURE PreparePageNotifier@8();
    BEGIN
      if not PageNotifier.IsAvailable then
        exit;
      PageNotifier := PageNotifier.Create;
      PageNotifier.NotifyPageReady;
    END;

    LOCAL PROCEDURE PrepareUserTours@9() : Boolean;
    VAR
      NetPromoterScore@1002 : Record "Net Promoter Score";
    BEGIN
      if (not UserTours.IsAvailable) or (not O365GettingStartedMgt.AreUserToursEnabled) then
        exit(false);
      UserTours := UserTours.Create;
      UserTours.NotifyShowTourWizard;
      if O365GettingStartedMgt.IsGettingStartedSupported then begin
        HideNpsDialog := O365GettingStartedMgt.WizardHasToBeLaunched(false);
        if HideNpsDialog then
          NetPromoterScore.DisableRequestSending;
      end;
      exit(true);
    END;

    EVENT CameraProvider@1007::PictureAvailable@10(PictureName@1001 : Text;PictureFilePath@1000 : Text);
    VAR
      IncomingDocument@1002 : Record "Incoming Document";
    BEGIN
      IncomingDocument.CreateIncomingDocumentFromServerFile(PictureName,PictureFilePath);
      CurrPage.UPDATE;
    END;

    EVENT UserTours@1001::ShowTourWizard@13(hasTourCompleted@1000 : Boolean);
    VAR
      NetPromoterScoreMgt@1001 : Codeunit "Net Promoter Score Mgt.";
    BEGIN
      if O365GettingStartedMgt.IsGettingStartedSupported then
        if O365GettingStartedMgt.LaunchWizard(false,hasTourCompleted) then
          exit;

      if (not hasTourCompleted) and (not HideNpsDialog) then
        if NetPromoterScoreMgt.ShowNpsDialog then begin
          HideNpsDialog := true;
          exit;
        end;

      StartWhatIsNewTour(hasTourCompleted);
    END;

    EVENT UserTours@1001::IsTourInProgressResultReady@14(isInProgress@1000 : Boolean);
    BEGIN
    END;

    EVENT PageNotifier@1002::PageReady@9();
    VAR
      NetPromoterScoreMgt@1000 : Codeunit "Net Promoter Score Mgt.";
    BEGIN
      if O365GettingStartedMgt.WizardShouldBeOpenedForDevices then begin
        COMMIT;
        PAGE.RUNMODAL(PAGE::"O365 Getting Started Device");
        exit;
      end;

      if not HideNpsDialog then
        if NetPromoterScoreMgt.ShowNpsDialog then
          HideNpsDialog := true;
    END;

    BEGIN
    END.
  }
}

