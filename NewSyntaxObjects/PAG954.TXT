OBJECT Page 954 Manager Time Sheet by Job
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Manager Time Sheet by Job;
    InsertAllowed=false;
    DeleteAllowed=false;
    SourceTable="Time Sheet Line";
    SourceTableView=WHERE(Type=CONST(Job));
    PageType=Worksheet;
    AutoSplitKey=true;
    PromotedActionCategoriesML=ENU=New,Process,Report,Navigate,Show;
    OnOpenPage=BEGIN
                 FindPeriod(SetWanted::Initial);
               END;

    OnAfterGetRecord=BEGIN
                       AfterGetCurrentRecord;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 20      ;1   ;ActionGroup;
                      Name=&Time Sheet;
                      CaptionML=ENU=&Time Sheet }
      { 7       ;2   ;Action    ;
                      Name=&Previous Period;
                      ShortCutKey=Ctrl+PgUp;
                      CaptionML=ENU=&Previous Period;
                      ToolTipML=ENU=Show the information based on the previous period. If you set the View by field to Day, the date filter changes to the day before.;
                      ApplicationArea=#Jobs;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PreviousSet;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 FindPeriod(SetWanted::Previous);
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=&Next Period;
                      ShortCutKey=Ctrl+PgDn;
                      CaptionML=ENU=&Next Period;
                      ToolTipML=ENU=View information for the next period.;
                      ApplicationArea=#Jobs;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=NextSet;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 FindPeriod(SetWanted::Next);
                               END;
                                }
      { 32      ;1   ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 12      ;2   ;Action    ;
                      Name=Co&mments;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Time Sheet Comment Sheet";
                      RunPageLink="No."=FIELD("Time Sheet No."),
                                  "Time Sheet Line No."=FIELD("Line No.");
                      Promoted=true;
                      Image=ViewComments;
                      PromotedCategory=Category5 }
      { 6       ;2   ;Action    ;
                      Name=Posting E&ntries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Posting E&ntries;
                      ToolTipML=ENU=View the resource ledger entries that have been posted in connection with the.;
                      ApplicationArea=#Jobs;
                      Promoted=true;
                      Image=PostingEntries;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 TimeSheetMgt.ShowPostingEntries("Time Sheet No.","Line No.");
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Name=Activity &Details;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Activity &Details;
                      ToolTipML=ENU=View the quantity of hours for each time sheet status.;
                      ApplicationArea=#Jobs;
                      Promoted=true;
                      Image=View;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 ShowLineDetails(true);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 33      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 37      ;2   ;Action    ;
                      Name=&Approve;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=&Approve;
                      ToolTipML=ENU=Approve the lines on the time sheet. Choose All to approve all lines. Choose Selected to approve only selected lines.;
                      ApplicationArea=#Jobs;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Approve;
                               END;
                                }
      { 46      ;2   ;Action    ;
                      Name=&Reject;
                      CaptionML=ENU=&Reject;
                      ToolTipML=ENU=Reject to approve the lines on the time sheet. Choose All to reject all lines. Choose Selected to reject only selected lines.;
                      ApplicationArea=#Jobs;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Reject;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Reject;
                               END;
                                }
      { 14      ;2   ;Action    ;
                      Name=Re&open;
                      CaptionML=ENU=Re&open;
                      ToolTipML=ENU=Reopen the time sheet to change it.;
                      ApplicationArea=#Jobs;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Reopen;
                               END;
                                }
      { 47      ;2   ;Separator ;
                      Name=Separator47 }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 10  ;1   ;Group     ;
                Name=Group10;
                GroupType=Group }

    { 3   ;2   ;Field     ;
                Name=StartingDate;
                CaptionML=ENU=Starting Date;
                ToolTipML=ENU=Specifies the date from which the report or batch job processes information.;
                ApplicationArea=#Jobs;
                SourceExpr=StartingDate;
                Editable=FALSE;
                ImplicitType=Date }

    { 5   ;2   ;Field     ;
                Name=EndingDate;
                CaptionML=ENU=Ending Date;
                ToolTipML=ENU=Specifies the date to which the report or batch job processes information.;
                ApplicationArea=#Jobs;
                SourceExpr=EndingDate;
                Editable=FALSE;
                ImplicitType=Date }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 23  ;2   ;Field     ;
                Name=Job No.;
                ToolTipML=ENU=Specifies the number for the job that is associated with the time sheet line.;
                ApplicationArea=#Jobs;
                SourceExpr="Job No.";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Code20 }

    { 29  ;2   ;Field     ;
                Name=Job Task No.;
                ToolTipML=ENU=Specifies the number of the related job task.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Task No.";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the time sheet line.;
                ApplicationArea=#Jobs;
                SourceExpr=Description;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               ShowLineDetails(true);
                               CurrPage.UPDATE;
                             END;

                ImplicitType=Text50 }

    { 18  ;2   ;Field     ;
                Name=Work Type Code;
                ToolTipML=ENU=Specifies which work type the resource applies to. Prices are updated based on this entry.;
                ApplicationArea=#Jobs;
                SourceExpr="Work Type Code";
                Visible=FALSE;
                Editable=WorkTypeCodeAllowEdit;
                OnValidate=BEGIN
                             TESTFIELD(Status,Status::Submitted);
                           END;

                ImplicitType=Code10 }

    { 2   ;2   ;Field     ;
                Name=Chargeable;
                ToolTipML=ENU=Specifies if the usage that you are posting is chargeable.;
                ApplicationArea=#Jobs;
                SourceExpr=Chargeable;
                Visible=FALSE;
                Editable=ChargeableAllowEdit;
                OnValidate=BEGIN
                             TESTFIELD(Status,Status::Submitted);
                           END;

                ImplicitType=Boolean }

    { 11  ;2   ;Field     ;
                Name=Field1;
                Width=6;
                ApplicationArea=#Jobs;
                DecimalPlaces=0:2;
                BlankZero=true;
                SourceExpr=CellData[1];
                CaptionClass='3,' + ColumnCaption[1];
                Editable=FALSE }

    { 15  ;2   ;Field     ;
                Name=Field2;
                Width=6;
                ApplicationArea=#Jobs;
                DecimalPlaces=0:2;
                BlankZero=true;
                SourceExpr=CellData[2];
                CaptionClass='3,' + ColumnCaption[2];
                Editable=FALSE }

    { 17  ;2   ;Field     ;
                Name=Field3;
                Width=6;
                ApplicationArea=#Jobs;
                DecimalPlaces=0:2;
                BlankZero=true;
                SourceExpr=CellData[3];
                CaptionClass='3,' + ColumnCaption[3];
                Editable=FALSE }

    { 19  ;2   ;Field     ;
                Name=Field4;
                Width=6;
                ApplicationArea=#Jobs;
                DecimalPlaces=0:2;
                BlankZero=true;
                SourceExpr=CellData[4];
                CaptionClass='3,' + ColumnCaption[4];
                Editable=FALSE }

    { 21  ;2   ;Field     ;
                Name=Field5;
                Width=6;
                ApplicationArea=#Jobs;
                DecimalPlaces=0:2;
                BlankZero=true;
                SourceExpr=CellData[5];
                CaptionClass='3,' + ColumnCaption[5];
                Editable=FALSE }

    { 25  ;2   ;Field     ;
                Name=Field6;
                Width=6;
                ApplicationArea=#Jobs;
                BlankZero=true;
                SourceExpr=CellData[6];
                CaptionClass='3,' + ColumnCaption[6];
                Visible=FALSE;
                Editable=FALSE }

    { 27  ;2   ;Field     ;
                Name=Field7;
                Width=6;
                ApplicationArea=#Jobs;
                BlankZero=true;
                SourceExpr=CellData[7];
                CaptionClass='3,' + ColumnCaption[7];
                Visible=FALSE;
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                Name=Status;
                ToolTipML=ENU=Specifies information about the status of a time sheet line.;
                ApplicationArea=#Jobs;
                SourceExpr=Status;
                ImplicitType=Option }

    { 16  ;2   ;Field     ;
                Name=Total Quantity;
                ToolTipML=ENU=Specifies the total number of hours that have been entered on a time sheet.;
                ApplicationArea=#Jobs;
                SourceExpr="Total Quantity";
                Visible=FALSE;
                ImplicitType=Decimal }

  }
  CODE
  {
    VAR
      ResourcesSetup@1013 : Record "Resources Setup";
      TimeSheetDetail@1003 : Record "Time Sheet Detail";
      ColumnRecords@1004 : ARRAY [32] OF Record Date;
      TimeSheetMgt@1007 : Codeunit "Time Sheet Management";
      TimeSheetApprovalMgt@1010 : Codeunit "Time Sheet Approval Management";
      NoOfColumns@1002 : Integer;
      CellData@1001 : ARRAY [32] OF Decimal;
      ColumnCaption@1000 : ARRAY [32] OF Text[1024];
      SetWanted@1009 : 'Initial,Previous,Next';
      StartingDate@1011 : Date;
      EndingDate@1012 : Date;
      WorkTypeCodeAllowEdit@1006 : Boolean;
      ChargeableAllowEdit@1005 : Boolean;

    [Internal]
    PROCEDURE SetColumns@11();
    VAR
      Calendar@1003 : Record Date;
    BEGIN
      CLEAR(ColumnCaption);
      CLEAR(ColumnRecords);
      CLEAR(Calendar);
      CLEAR(NoOfColumns);

      Calendar.SETRANGE("Period Type",Calendar."Period Type"::Date);
      Calendar.SETRANGE("Period Start",StartingDate,EndingDate);
      if Calendar.FINDSET then
        repeat
          NoOfColumns += 1;
          ColumnRecords[NoOfColumns]."Period Start" := Calendar."Period Start";
          ColumnCaption[NoOfColumns] := TimeSheetMgt.FormatDate(Calendar."Period Start",1);
        until Calendar.NEXT = 0;
    END;

    LOCAL PROCEDURE AfterGetCurrentRecord@8();
    VAR
      i@1000 : Integer;
    BEGIN
      i := 0;
      while i < NoOfColumns do begin
        i := i + 1;
        if ("Line No." <> 0) and TimeSheetDetail.GET(
             "Time Sheet No.",
             "Line No.",
             ColumnRecords[i]."Period Start")
        then
          CellData[i] := TimeSheetDetail.Quantity
        else
          CellData[i] := 0;
      end;
      WorkTypeCodeAllowEdit := GetAllowEdit(FIELDNO("Work Type Code"),true);
      ChargeableAllowEdit := GetAllowEdit(FIELDNO(Chargeable),true);
    END;

    LOCAL PROCEDURE FindPeriod@10(Which@1003 : 'Initial,Previous,Next');
    BEGIN
      ResourcesSetup.GET;
      case Which of
        Which::Initial:
          if DATE2DWY(WORKDATE,1) = ResourcesSetup."Time Sheet First Weekday" + 1 then
            StartingDate := WORKDATE
          else
            StartingDate := CALCDATE(STRSUBSTNO('<WD%1-7D>',ResourcesSetup."Time Sheet First Weekday" + 1),WORKDATE);
        Which::Previous:
          StartingDate := CALCDATE('<-1W>',StartingDate);
        Which::Next:
          StartingDate := CALCDATE('<1W>',StartingDate);
      end;
      EndingDate := CALCDATE('<1W>',StartingDate) - 1;
      FILTERGROUP(2);
      SETRANGE("Time Sheet Starting Date",StartingDate,EndingDate);
      SETRANGE("Approver ID",USERID);
      FILTERGROUP(0);
      SetColumns;
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE Process@1(Action@1000 : '"Approve Selected","Approve All","Reopen Selected","Reopen All","Reject Selected","Reject All"');
    VAR
      TimeSheetLine@1001 : Record "Time Sheet Line";
      ActionType@1002 : 'Approve,Reopen,Reject';
    BEGIN
      CurrPage.SAVERECORD;
      case Action of
        Action::"Approve All",
        Action::"Reject All":
          FilterAllLines(TimeSheetLine,ActionType::Approve);
        Action::"Reopen All":
          FilterAllLines(TimeSheetLine,ActionType::Reopen);
        else
          CurrPage.SETSELECTIONFILTER(TimeSheetLine);
      end;
      if TimeSheetLine.FINDSET then
        repeat
          case Action of
            Action::"Approve Selected",
            Action::"Approve All":
              TimeSheetApprovalMgt.Approve(TimeSheetLine);
            Action::"Reopen Selected",
            Action::"Reopen All":
              TimeSheetApprovalMgt.ReopenApproved(TimeSheetLine);
            Action::"Reject Selected",
            Action::"Reject All":
              TimeSheetApprovalMgt.Reject(TimeSheetLine);
          end;
        until TimeSheetLine.NEXT = 0;
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE Approve@2();
    VAR
      Action@1001 : '"Approve Selected","Approve All","Reopen Selected","Reopen All","Reject Selected","Reject All"';
      ActionType@1002 : 'Approve,Reopen,Reject';
    BEGIN
      case ShowDialog(ActionType::Approve) of
        1:
          Process(Action::"Approve All");
        2:
          Process(Action::"Approve Selected");
      end;
    END;

    LOCAL PROCEDURE Reopen@14();
    VAR
      ActionType@1002 : 'Approve,Reopen,Reject';
      Action@1001 : '"Approve Selected","Approve All","Reopen Selected","Reopen All","Reject Selected","Reject All"';
    BEGIN
      case ShowDialog(ActionType::Reopen) of
        1:
          Process(Action::"Reopen All");
        2:
          Process(Action::"Reopen Selected");
      end;
    END;

    LOCAL PROCEDURE Reject@3();
    VAR
      ActionType@1002 : 'Approve,Reopen,Reject';
      Action@1001 : '"Approve Selected","Approve All","Reopen Selected","Reopen All","Reject Selected","Reject All"';
    BEGIN
      case ShowDialog(ActionType::Reject) of
        1:
          Process(Action::"Reject All");
        2:
          Process(Action::"Reject Selected");
      end;
    END;

    LOCAL PROCEDURE GetDialogText@16(ActionType@1000 : 'Approve,Reopen,Reject') : Text[100];
    VAR
      TimeSheetLine@1003 : Record "Time Sheet Line";
    BEGIN
      FilterAllLines(TimeSheetLine,ActionType);
      exit(TimeSheetApprovalMgt.GetManagerTimeSheetDialogText(ActionType,TimeSheetLine.COUNT));
    END;

    LOCAL PROCEDURE FilterAllLines@22(VAR TimeSheetLine@1000 : Record "Time Sheet Line";ActionType@1001 : 'Approve,Reopen,Reject');
    BEGIN
      TimeSheetLine.COPYFILTERS(Rec);
      TimeSheetLine.FILTERGROUP(2);
      TimeSheetLine.SETRANGE("Time Sheet Starting Date",StartingDate,EndingDate);
      TimeSheetLine.SETRANGE("Approver ID",USERID);
      TimeSheetLine.SETRANGE(Type,TimeSheetLine.Type::Job);
      TimeSheetLine.FILTERGROUP(0);
      case ActionType of
        ActionType::Approve,
        ActionType::Reject:
          TimeSheetLine.SETRANGE(Status,TimeSheetLine.Status::Submitted);
        ActionType::Reopen:
          TimeSheetLine.SETRANGE(Status,TimeSheetLine.Status::Approved);
      end;
    END;

    LOCAL PROCEDURE ShowDialog@4(ActionType@1000 : 'Approve,Reopen,Reject') : Integer;
    BEGIN
      exit(STRMENU(GetDialogText(ActionType),1,TimeSheetApprovalMgt.GetManagerTimeSheetDialogInstruction(ActionType)));
    END;

    BEGIN
    END.
  }
}

