OBJECT Table 910 Posted Assembly Header
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnDelete=VAR
               AssemblyCommentLine@1000 : Record "Assembly Comment Line";
               PostedAssemblyLinesDelete@1001 : Codeunit "PostedAssemblyLines-Delete";
             BEGIN
               CheckIsNotAsmToOrder;

               PostedAssemblyLinesDelete.DeleteLines(Rec);

               AssemblyCommentLine.SETCURRENTKEY("Document Type","Document No.");
               AssemblyCommentLine.SETRANGE("Document Type",AssemblyCommentLine."Document Type"::"Posted Assembly");
               AssemblyCommentLine.SETRANGE("Document No.","No.");
               AssemblyCommentLine.DELETEALL;
             END;

    CaptionML=ENU=Posted Assembly Header;
    LookupPageID="Posted Assembly Orders";
  }
  FIELDS
  {
    { 2   ;   ;No.                 ;Code20        ;AltSearchField=Search Description;
                                                   CaptionML=ENU=No. }
    { 3   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 4   ;   ;Search Description  ;Code50        ;CaptionML=ENU=Search Description }
    { 5   ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 9   ;   ;Order No.           ;Code20        ;CaptionML=ENU=Order No. }
    { 10  ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=ENU=Item No. }
    { 12  ;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE ("Item No."=FIELD("No."),
                                                                                            Code=FIELD("Variant Code"));
                                                   CaptionML=ENU=Variant Code }
    { 15  ;   ;Inventory Posting Group;Code20     ;TableRelation="Inventory Posting Group";
                                                   CaptionML=ENU=Inventory Posting Group }
    { 16  ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=ENU=Gen. Prod. Posting Group }
    { 19  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Assembly Comment Line" WHERE ("Document Type"=CONST("Posted Assembly"),
                                                                                                    "Document No."=FIELD("No.")));
                                                   CaptionML=ENU=Comment;
                                                   Editable=false }
    { 20  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE ("Use As In-Transit"=CONST(false));
                                                   CaptionML=ENU=Location Code }
    { 21  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 22  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 23  ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 24  ;   ;Due Date            ;Date          ;CaptionML=ENU=Due Date }
    { 25  ;   ;Starting Date       ;Date          ;CaptionML=ENU=Starting Date }
    { 27  ;   ;Ending Date         ;Date          ;CaptionML=ENU=Ending Date }
    { 33  ;   ;Bin Code            ;Code20        ;AccessByPermission=TableData "Warehouse Source Filter"=R;
                                                   CaptionML=ENU=Bin Code }
    { 39  ;   ;Item Rcpt. Entry No.;Integer       ;CaptionML=ENU=Item Rcpt. Entry No. }
    { 40  ;   ;Quantity            ;Decimal       ;CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0 }
    { 41  ;   ;Quantity (Base)     ;Decimal       ;CaptionML=ENU=Quantity (Base);
                                                   DecimalPlaces=0:5 }
    { 54  ;   ;Assemble to Order   ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Posted Assemble-to-Order Link" WHERE ("Assembly Document Type"=CONST(Assembly),
                                                                                                            "Assembly Document No."=FIELD("No.")));
                                                   CaptionML=ENU=Assemble to Order;
                                                   Editable=false }
    { 65  ;   ;Unit Cost           ;Decimal       ;CaptionML=ENU=Unit Cost;
                                                   AutoFormatType=2 }
    { 67  ;   ;Cost Amount         ;Decimal       ;CaptionML=ENU=Cost Amount;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 75  ;   ;Indirect Cost %     ;Decimal       ;CaptionML=ENU=Indirect Cost %;
                                                   DecimalPlaces=0:5 }
    { 76  ;   ;Overhead Rate       ;Decimal       ;CaptionML=ENU=Overhead Rate;
                                                   DecimalPlaces=0:5 }
    { 80  ;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE ("Item No."=FIELD("Item No."));
                                                   CaptionML=ENU=Unit of Measure Code }
    { 81  ;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=ENU=Qty. per Unit of Measure;
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 100 ;   ;Reversed            ;Boolean       ;CaptionML=ENU=Reversed }
    { 107 ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=false }
    { 108 ;   ;Posting No. Series  ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Posting No. Series }
    { 109 ;   ;Order No. Series    ;Code20        ;CaptionML=ENU=Order No. Series }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=false }
    { 9010;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit "User Management";
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=false;
                                                   CaptionML=ENU=User ID }
    { 9020;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
    {    ;"Order No."                              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      RowIdx@1000 : ',MatCost,ResCost,ResOvhd,AsmOvhd,Total';

    [External]
    PROCEDURE ShowDimensions@30();
    VAR
      DimMgt@1000 : Codeunit DimensionManagement;
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"No."));
    END;

    [External]
    PROCEDURE ShowStatistics@48();
    BEGIN
      TESTFIELD("Item No.");
      PAGE.RUN(PAGE::"Posted Asm. Order Statistics",Rec);
    END;

    [External]
    PROCEDURE PrintRecords@1(ShowRequestForm@1000 : Boolean);
    VAR
      ReportSelections@1001 : Record "Report Selections";
      PostedAssemblyHeader@1002 : Record "Posted Assembly Header";
    BEGIN
      with PostedAssemblyHeader do begin
        COPY(Rec);
        ReportSelections.PrintWithGUIYesNo(ReportSelections.Usage::"P.Assembly Order",PostedAssemblyHeader,ShowRequestForm,'');
      end;
    END;

    [External]
    PROCEDURE Navigate@2();
    VAR
      Navigate@1000 : Page Navigate;
    BEGIN
      Navigate.SetDoc("Posting Date","No.");
      Navigate.RUN;
    END;

    [External]
    PROCEDURE ShowItemTrackingLines@3();
    VAR
      ItemTrackingDocMgt@1000 : Codeunit "Item Tracking Doc. Management";
    BEGIN
      ItemTrackingDocMgt.ShowItemTrackingForShptRcptLine(DATABASE::"Posted Assembly Header",0,"No.",'',0,0);
    END;

    [External]
    PROCEDURE CheckIsNotAsmToOrder@63();
    BEGIN
      CALCFIELDS("Assemble to Order");
      TESTFIELD("Assemble to Order",false);
    END;

    [External]
    PROCEDURE IsAsmToOrder@4() : Boolean;
    BEGIN
      CALCFIELDS("Assemble to Order");
      exit("Assemble to Order");
    END;

    [External]
    PROCEDURE ShowAsmToOrder@61();
    VAR
      PostedATOLink@1000 : Record "Posted Assemble-to-Order Link";
    BEGIN
      PostedATOLink.ShowSalesShpt(Rec);
    END;

    [External]
    PROCEDURE CalcActualCosts@52(VAR ActCost@1006 : ARRAY [5] OF Decimal);
    VAR
      TempSourceInvtAdjmtEntryOrder@1005 : TEMPORARY Record "Inventory Adjmt. Entry (Order)";
      CalcInvtAdjmtOrder@1001 : Codeunit "Calc. Inventory Adjmt. - Order";
    BEGIN
      TempSourceInvtAdjmtEntryOrder.SetPostedAsmOrder(Rec);
      CalcInvtAdjmtOrder.CalcActualUsageCosts(TempSourceInvtAdjmtEntryOrder,"Quantity (Base)",TempSourceInvtAdjmtEntryOrder);
      ActCost[RowIdx::MatCost] := TempSourceInvtAdjmtEntryOrder."Single-Level Material Cost";
      ActCost[RowIdx::ResCost] := TempSourceInvtAdjmtEntryOrder."Single-Level Capacity Cost";
      ActCost[RowIdx::ResOvhd] := TempSourceInvtAdjmtEntryOrder."Single-Level Cap. Ovhd Cost";
      ActCost[RowIdx::AsmOvhd] := TempSourceInvtAdjmtEntryOrder."Single-Level Mfg. Ovhd Cost";
    END;

    [External]
    PROCEDURE CalcTotalCost@25(VAR ExpCost@1001 : ARRAY [5] OF Decimal) : Decimal;
    VAR
      GLSetup@1006 : Record "General Ledger Setup";
      Resource@1004 : Record Resource;
      PostedAssemblyLine@1000 : Record "Posted Assembly Line";
      DirectLineCost@1005 : Decimal;
    BEGIN
      GLSetup.GET;

      PostedAssemblyLine.SETRANGE("Document No.","No.");
      if PostedAssemblyLine.FINDSET then
        repeat
          case PostedAssemblyLine.Type of
            PostedAssemblyLine.Type::Item:
              ExpCost[RowIdx::MatCost] += PostedAssemblyLine."Cost Amount";
            PostedAssemblyLine.Type::Resource:
              begin
                Resource.GET(PostedAssemblyLine."No.");
                DirectLineCost :=
                  ROUND(
                    Resource."Direct Unit Cost" * PostedAssemblyLine."Quantity (Base)",
                    GLSetup."Unit-Amount Rounding Precision");
                ExpCost[RowIdx::ResCost] += DirectLineCost;
                ExpCost[RowIdx::ResOvhd] += PostedAssemblyLine."Cost Amount" - DirectLineCost;
              end;
          end
        until PostedAssemblyLine.NEXT = 0;

      exit(ExpCost[RowIdx::MatCost] + ExpCost[RowIdx::ResCost] + ExpCost[RowIdx::ResOvhd]);
    END;

    BEGIN
    END.
  }
}

