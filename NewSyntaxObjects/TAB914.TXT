OBJECT Table 914 Posted Assemble-to-Order Link
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Posted Assembly Header"=d,
                TableData "Posted Assemble-to-Order Link"=d;
    CaptionML=ENU=Posted Assemble-to-Order Link;
  }
  FIELDS
  {
    { 1   ;   ;Assembly Document Type;Option      ;CaptionML=ENU=Assembly Document Type;
                                                   OptionCaptionML=ENU=" ,Assembly";
                                                   OptionString=" ",Assembly }
    { 2   ;   ;Assembly Document No.;Code20       ;TableRelation=IF ("Assembly Document Type"=CONST(Assembly)) "Posted Assembly Header" WHERE ("No."=FIELD("Assembly Document No."));
                                                   CaptionML=ENU=Assembly Document No. }
    { 12  ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Sales Shipment";
                                                   OptionString=" ","Sales Shipment" }
    { 13  ;   ;Document No.        ;Code20        ;TableRelation=IF ("Document Type"=CONST("Sales Shipment")) "Sales Shipment Line" WHERE ("Document No."=FIELD("Document No."),
                                                                                                                                           "Line No."=FIELD("Document Line No."));
                                                   CaptionML=ENU=Document No. }
    { 14  ;   ;Document Line No.   ;Integer       ;CaptionML=ENU=Document Line No. }
    { 20  ;   ;Assembled Quantity  ;Decimal       ;CaptionML=ENU=Assembled Quantity;
                                                   DecimalPlaces=0:5 }
    { 21  ;   ;Assembled Quantity (Base);Decimal  ;CaptionML=ENU=Assembled Quantity (Base);
                                                   DecimalPlaces=0:5 }
    { 32  ;   ;Assembly Order No.  ;Code20        ;CaptionML=ENU=Assembly Order No. }
    { 33  ;   ;Order No.           ;Code20        ;CaptionML=ENU=Order No. }
    { 34  ;   ;Order Line No.      ;Integer       ;CaptionML=ENU=Order Line No. }
  }
  KEYS
  {
    {    ;"Assembly Document Type","Assembly Document No.";
                                                   Clustered=true }
    {    ;"Document Type","Document No.","Document Line No." }
    {    ;"Order No.","Order Line No."             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PostedAsmHeader@1000 : Record "Posted Assembly Header";

    [External]
    PROCEDURE AsmExistsForPostedShipmentLine@1(SalesShipmentLine@1000 : Record "Sales Shipment Line") : Boolean;
    BEGIN
      RESET;
      SETCURRENTKEY("Document Type","Document No.","Document Line No.");
      SETRANGE("Document Type","Document Type"::"Sales Shipment");
      SETRANGE("Document No.",SalesShipmentLine."Document No.");
      SETRANGE("Document Line No.",SalesShipmentLine."Line No.");
      exit(FINDFIRST);
    END;

    [External]
    PROCEDURE DeleteAsmFromSalesShptLine@2(SalesShptLine@1000 : Record "Sales Shipment Line");
    BEGIN
      if AsmExistsForPostedShipmentLine(SalesShptLine) then begin
        DELETE;

        if GetPostedAsmHeader then begin
          PostedAsmHeader.DELETE(true);
          PostedAsmHeader.INIT;
        end;
      end;
    END;

    [External]
    PROCEDURE ShowPostedAsm@11(SalesShptLine@1000 : Record "Sales Shipment Line");
    BEGIN
      if AsmExistsForPostedShipmentLine(SalesShptLine) then begin
        GetPostedAsmHeader;
        PAGE.RUNMODAL(PAGE::"Posted Assembly Order",PostedAsmHeader);
      end;
    END;

    [External]
    PROCEDURE ShowSalesShpt@13(PostedAsmHeader@1000 : Record "Posted Assembly Header");
    VAR
      SalesShptHeader@1001 : Record "Sales Shipment Header";
    BEGIN
      if GET("Assembly Document Type"::Assembly,PostedAsmHeader."No.") then
        if "Document Type" = "Document Type"::"Sales Shipment" then begin
          SalesShptHeader.GET("Document No.");
          PAGE.RUNMODAL(PAGE::"Posted Sales Shipment",SalesShptHeader);
        end;
    END;

    LOCAL PROCEDURE GetPostedAsmHeader@19() : Boolean;
    BEGIN
      if PostedAsmHeader."No." = "Assembly Document No." then
        exit(true);
      exit(PostedAsmHeader.GET("Assembly Document No."));
    END;

    [External]
    PROCEDURE FindLinksFromSalesLine@3(SalesLine@1000 : Record "Sales Line") : Boolean;
    BEGIN
      case SalesLine."Document Type" of
        SalesLine."Document Type"::Order:
          begin
            SETCURRENTKEY("Order No.","Order Line No.");
            SETRANGE("Order No.",SalesLine."Document No.");
            SETRANGE("Order Line No.",SalesLine."Line No.");
          end;
        SalesLine."Document Type"::Invoice:
          begin
            SETCURRENTKEY("Document Type","Document No.","Document Line No.");
            SETRANGE("Document Type","Document Type"::"Sales Shipment");
            SETRANGE("Document No.",SalesLine."Shipment No.");
            SETRANGE("Document Line No.",SalesLine."Shipment Line No.");
          end;
        else
          SalesLine.FIELDERROR("Document Type");
      end;
      exit(FINDSET);
    END;

    BEGIN
    END.
  }
}

