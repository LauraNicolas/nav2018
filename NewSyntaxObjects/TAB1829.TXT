OBJECT Table 1829 Consolidation Account
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Consolidation Account;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=ENU=No.;
                                                   NotBlank=true }
    { 2   ;   ;Name                ;Text50        ;CaptionML=ENU=Name }
    { 3   ;   ;Income/Balance      ;Option        ;CaptionML=ENU=Income/Balance;
                                                   OptionCaptionML=ENU=Income Statement,Balance Sheet;
                                                   OptionString="Income Statement","Balance Sheet" }
    { 4   ;   ;Blocked             ;Boolean       ;CaptionML=ENU=Blocked }
    { 5   ;   ;Direct Posting      ;Boolean       ;InitValue=true;
                                                   CaptionML=ENU=Direct Posting }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE PopulateAccounts@1();
    BEGIN
      InsertData('10100','Checking account',1,true);
    END;

    LOCAL PROCEDURE InsertData@2(AccountNo@1000 : Code[20];AccountName@1001 : Text[50];IncomeBalance@1003 : Option;DirectPosting@1009 : Boolean);
    VAR
      ConsolidationAccount@1010 : Record "Consolidation Account";
    BEGIN
      ConsolidationAccount.INIT;
      ConsolidationAccount.VALIDATE("No.",AccountNo);
      ConsolidationAccount.VALIDATE(Name,AccountName);
      ConsolidationAccount.VALIDATE("Direct Posting",DirectPosting);
      ConsolidationAccount.VALIDATE("Income/Balance",IncomeBalance);
      ConsolidationAccount.INSERT;
    END;

    PROCEDURE PopulateConsolidationAccountsForExistingCompany@4(ConsolidatedCompany@1000 : Text[50]);
    VAR
      GLAccount@1001 : Record "G/L Account";
    BEGIN
      GLAccount.CHANGECOMPANY(ConsolidatedCompany);
      GLAccount.RESET;
      GLAccount.SETFILTER("Account Type",FORMAT(GLAccount."Account Type"::Posting));
      if GLAccount.FIND('-') then
        repeat
          InsertData(GLAccount."No.",GLAccount.Name,GLAccount."Income/Balance",GLAccount."Direct Posting");
        until GLAccount.NEXT = 0;
    END;

    PROCEDURE ValidateCountry@3(CountryCode@1000 : Code[2]) : Boolean;
    VAR
      ApplicationManagement@1001 : Codeunit ApplicationManagement;
    BEGIN
      if STRPOS(ApplicationManagement.ApplicationVersion,CountryCode) = 1 then
        exit(true);

      exit(false);
    END;

    BEGIN
    END.
  }
}

