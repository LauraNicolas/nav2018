OBJECT Codeunit 99000759 Calendar Absence Management
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Remove@1000 : Boolean;

    [External]
    PROCEDURE UpdateAbsence@1(VAR CalAbsentEntry@1000 : Record "Calendar Absence Entry");
    VAR
      CalendarEntry@1001 : Record "Calendar Entry";
      CalendarEntry2@1002 : Record "Calendar Entry";
      CalendarEntry3@1003 : Record "Calendar Entry";
      AbsenceStartingDateTime@1005 : DateTime;
      Finished@1006 : Boolean;
    BEGIN
      with CalAbsentEntry do begin
        AbsenceStartingDateTime := "Starting Date-Time";
        CalendarEntry.SETCURRENTKEY("Capacity Type","No.","Starting Date-Time");
        CalendarEntry.SETRANGE("Capacity Type","Capacity Type");
        CalendarEntry.SETRANGE("No.","No.");
        CalendarEntry.SETFILTER("Starting Date-Time",'<%1',"Ending Date-Time");
        CalendarEntry.SETFILTER("Ending Date-Time",'>%1',"Starting Date-Time");
        if Remove then
          CalendarEntry.SETFILTER("Absence Capacity",'>%1',0);
        if CalendarEntry.FIND('-') then
          repeat
            Finished := false;
            CalendarEntry2 := CalendarEntry;
            CalendarEntry3 := CalendarEntry;
            CalendarEntry.DELETE;
            if CalendarEntry."Starting Date-Time" < "Starting Date-Time" then begin
              CalendarEntry2.VALIDATE("Ending Date-Time","Starting Date-Time");
              CalendarEntry2.INSERT;
            end else
              "Starting Date-Time" := CalendarEntry."Starting Date-Time";

            if Remove then
              if CalendarEntry2."Absence Capacity" < Capacity then
                CalendarEntry2."Absence Capacity" := 0
              else
                CalendarEntry2."Absence Capacity" := CalendarEntry2."Absence Capacity" - Capacity
            else
              if CalendarEntry2.Capacity > Capacity then
                CalendarEntry2."Absence Capacity" := Capacity
              else
                CalendarEntry2."Absence Capacity" := CalendarEntry2.Capacity;

            if CalendarEntry."Ending Date-Time" < "Ending Date-Time" then begin
              CalendarEntry2.VALIDATE("Ending Date-Time",CalendarEntry."Ending Date-Time");
              CalendarEntry2.VALIDATE("Starting Date-Time","Starting Date-Time");
              CalendarEntry2.INSERT;
              CalendarEntry := CalendarEntry2;
              "Starting Date-Time" := CalendarEntry."Ending Date-Time";
            end else begin
              CalendarEntry2.VALIDATE("Ending Date-Time","Ending Date-Time");
              CalendarEntry2.VALIDATE("Starting Date-Time","Starting Date-Time");
              CalendarEntry2.INSERT;
              if CalendarEntry3."Ending Date-Time" > "Ending Date-Time" then begin
                CalendarEntry3.VALIDATE("Starting Date-Time","Ending Date-Time");
                CalendarEntry3.INSERT;
                CalendarEntry := CalendarEntry3;
              end;
              Finished := true;
            end;

          until (CalendarEntry.NEXT = 0) or Finished;
      end;

      CalAbsentEntry."Starting Date-Time" := AbsenceStartingDateTime;
      CalAbsentEntry.Updated := not Remove;

      if not Remove then
        CalAbsentEntry.MODIFY;

      GatherEntries(CalendarEntry3);
    END;

    [External]
    PROCEDURE RemoveAbsence@2(VAR CalAbsentEntry@1000 : Record "Calendar Absence Entry");
    BEGIN
      if not CalAbsentEntry.Updated then
        exit;
      Remove := true;
      UpdateAbsence(CalAbsentEntry);
      Remove := false;
    END;

    LOCAL PROCEDURE GatherEntries@3(CalendarEntry@1000 : Record "Calendar Entry");
    VAR
      CalendarEntry2@1001 : Record "Calendar Entry";
    BEGIN
      with CalendarEntry do begin
        CalendarEntry2.SETCURRENTKEY("Capacity Type","No.","Starting Date-Time");
        CalendarEntry2.SETRANGE("Capacity Type","Capacity Type");
        CalendarEntry2.SETRANGE("No.","No.");
        CalendarEntry2.SETRANGE(Date,Date);
        if not CalendarEntry2.FIND('-') then
          exit;

        CalendarEntry := CalendarEntry2;
        if CalendarEntry2.NEXT = 0 then
          exit;

        repeat
          if (Efficiency = CalendarEntry2.Efficiency) and
             (Capacity = CalendarEntry2.Capacity) and
             ("Absence Efficiency" = CalendarEntry2."Absence Efficiency") and
             ("Absence Capacity" = CalendarEntry2."Absence Capacity") and
             (Date = CalendarEntry2.Date) and
             ("Work Shift Code" = CalendarEntry2."Work Shift Code") and
             ("Ending Date-Time" = CalendarEntry2."Starting Date-Time")
          then begin
            CalendarEntry2.DELETE;
            DELETE;
            CalendarEntry2.VALIDATE("Starting Date-Time","Starting Date-Time");
            CalendarEntry2.INSERT;
          end;
          CalendarEntry := CalendarEntry2;
        until CalendarEntry2.NEXT = 0;
      end;
    END;

    BEGIN
    END.
  }
}

