OBJECT Page 2311 BC O365 Sales Inv. Line Subp.
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Invoice Line;
    SaveValues=true;
    LinksAllowed=false;
    SourceTable="Sales Line";
    DelayedInsert=true;
    PageType=ListPart;
    AutoSplitKey=true;
    RefreshOnActivate=true;
    OnInit=VAR
             O365SalesInitialSetup@1000 : Record "O365 Sales Initial Setup";
           BEGIN
             SalesSetup.GET;
             if TaxSetup.GET then;
             Currency.InitRoundingPrecision;
             O365SalesInvoiceMgmt.ConstructCurrencyFormatString(Rec,CurrencyFormat);
             IsUsingVAT := O365SalesInitialSetup.IsUsingVAT;
           END;

    OnAfterGetRecord=BEGIN
                       UpdatePriceDescription;
                       O365SalesInvoiceMgmt.ConstructCurrencyFormatString(Rec,CurrencyFormat);
                       CALCFIELDS("Posting Date");
                       CalculateTotals;
                       LineQuantity := Quantity;
                       UpdateVATPostingGroupDescription;
                     END;

    OnNewRecord=VAR
                  SalesLine@1000 : Record "Sales Line";
                BEGIN
                  Type := Type::Item;
                  SalesLine.SETRANGE("Document Type","Document Type");
                  SalesLine.SETRANGE("Document No.","Document No.");
                  if SalesLine.FINDLAST then;
                  "Line No." := SalesLine."Line No." + 10000;
                  LineQuantity := 1;
                  CLEAR(VATProductPostingGroupDescription);
                END;

    OnModifyRecord=BEGIN
                     UpdatePriceDescription;
                     MODIFY(true);
                     CalculateTotals;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           UpdatePageCaption;
                           DescriptionSelected := Description <> '';
                         END;

    ActionList=ACTIONS
    {
      { 4       ;    ;ActionContainer;
                      Name=New;
                      CaptionML=ENU=New;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;Action    ;
                      Name=DeleteLine;
                      CaptionML=ENU=Delete Line;
                      ToolTipML=ENU=Delete the selected line.;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Promoted=true;
                      Image=Invoicing-Delete;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 if "No." = '' then
                                   exit;

                                 if not CONFIRM(DeleteQst,true) then
                                   exit;
                                 DELETE(true);
                               END;

                      Gesture=RightSwipe }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 6   ;1   ;Group     ;
                Name=grpGeneral;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the record.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 22  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the item or service on the line.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Description;
                LookupPageID="BC O365 Item List";
                OnValidate=BEGIN
                             if IsLookupRequested then
                               if not O365SalesInvoiceMgmt.LookupDescription(Rec,Description,DescriptionSelected) then
                                 ERROR('');

                             RedistributeTotalsOnAfterValidate;
                             DescriptionSelected := Description <> '';
                           END;

                ImplicitType=Text50 }

    { 5   ;2   ;Field     ;
                Name=LineQuantity;
                CaptionML=ENU=Quantity;
                ToolTipML=ENU=Specifies the quantity of the item or service on the line.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                DecimalPlaces=0:5;
                SourceExpr=LineQuantity;
                Enabled=DescriptionSelected;
                OnValidate=BEGIN
                             VALIDATE(Quantity,LineQuantity);
                             RedistributeTotalsOnAfterValidate;
                             ShowInvoiceDiscountNotification;
                           END;

                ImplicitType=Decimal }

    { 12  ;2   ;Field     ;
                Name=Unit Price;
                CaptionML=ENU=Price;
                ToolTipML=ENU=Specifies the price for one unit on the sales line.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Unit Price";
                Enabled=DescriptionSelected;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 17  ;2   ;Field     ;
                Name=Line Discount %;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Line Discount %";
                Enabled=DescriptionSelected;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                             if HasShownInvoiceDiscountNotification then
                               InvoiceDiscountNotification.RECALL;
                           END;

                ImplicitType=Decimal }

    { 27  ;2   ;Field     ;
                Name=VATProductPostingGroupDescription;
                CaptionML=ENU=VAT;
                ToolTipML=ENU=Specifies the VAT group code for this item.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                NotBlank=true;
                SourceExpr=VATProductPostingGroupDescription;
                Visible=IsUsingVAT;
                Enabled=DescriptionSelected;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                OnLookup=VAR
                           VATProductPostingGroup@1000 : Record "VAT Product Posting Group";
                         BEGIN
                           if PAGE.RUNMODAL(PAGE::"O365 VAT Product Posting Gr.",VATProductPostingGroup) = ACTION::LookupOK then begin
                             VALIDATE("VAT Prod. Posting Group",VATProductPostingGroup.Code);
                             VATProductPostingGroupDescription := VATProductPostingGroup.Description;
                             RedistributeTotalsOnAfterValidate;
                           end;
                         END;

                ImplicitType=Text50;
                QuickEntry=FALSE }

    { 2   ;2   ;Field     ;
                Name=Line Amount;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Line Amount";
                ImplicitType=Decimal }

  }
  CODE
  {
    VAR
      Currency@1008 : Record Currency;
      SalesSetup@1007 : Record "Sales & Receivables Setup";
      TotalSalesHeader@1006 : Record "Sales Header";
      TotalSalesLine@1005 : Record "Sales Line";
      TaxSetup@1012 : Record "Tax Setup";
      O365SalesInvoiceMgmt@1021 : Codeunit "O365 Sales Invoice Mgmt";
      DocumentTotals@1004 : Codeunit "Document Totals";
      InvoiceDiscountNotification@1019 : Notification;
      CurrencyFormat@1001 : Text;
      VATProductPostingGroupDescription@1027 : Text[50];
      VATAmount@1002 : Decimal;
      LineQuantity@1003 : Decimal;
      HasShownInvoiceDiscountNotification@1000 : Boolean;
      DescriptionSelected@1010 : Boolean;
      DeleteQst@1013 : TextConst 'ENU=Are you sure?';
      IsUsingVAT@1017 : Boolean;
      InvoiceCaptionTxt@1025 : TextConst 'ENU=Invoice Line';
      EstimateCaptionTxt@1026 : TextConst 'ENU=Estimate Line';

    LOCAL PROCEDURE CalculateTotals@6();
    BEGIN
      GetTotalSalesHeader;
      if SalesSetup."Calc. Inv. Discount" and ("Document No." <> '') and (TotalSalesHeader."Customer Posting Group" <> '') then
        CODEUNIT.RUN(CODEUNIT::"Sales-Calc. Discount",Rec);

      DocumentTotals.CalculateSalesTotals(TotalSalesLine,VATAmount,Rec);
    END;

    LOCAL PROCEDURE RedistributeTotalsOnAfterValidate@2();
    BEGIN
      CurrPage.SAVERECORD;

      TotalSalesHeader.GET("Document Type","Document No.");
      DocumentTotals.SalesRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalSalesLine);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE GetTotalSalesHeader@13();
    BEGIN
      if not TotalSalesHeader.GET("Document Type","Document No.") then
        CLEAR(TotalSalesHeader);
      if Currency.Code <> TotalSalesHeader."Currency Code" then
        if not Currency.GET(TotalSalesHeader."Currency Code") then
          Currency.InitRoundingPrecision;
    END;

    LOCAL PROCEDURE ShowInvoiceDiscountNotification@4();
    BEGIN
      if HasShownInvoiceDiscountNotification then
        exit;
      if "Line Discount %" = xRec."Line Discount %" then
        exit;
      O365SalesInvoiceMgmt.ShowInvoiceDiscountNotification(InvoiceDiscountNotification);
      HasShownInvoiceDiscountNotification := true;
    END;

    LOCAL PROCEDURE UpdatePageCaption@5();
    BEGIN
      if "Document Type" = "Document Type"::Invoice then
        CurrPage.CAPTION := InvoiceCaptionTxt
      else
        if "Document Type" = "Document Type"::Quote then
          CurrPage.CAPTION := EstimateCaptionTxt;
    END;

    LOCAL PROCEDURE UpdateVATPostingGroupDescription@10();
    VAR
      VATProductPostingGroup@1000 : Record "VAT Product Posting Group";
    BEGIN
      if VATProductPostingGroup.GET("VAT Prod. Posting Group") then
        VATProductPostingGroupDescription := VATProductPostingGroup.Description
      else
        CLEAR(VATProductPostingGroup);
    END;

    BEGIN
    END.
  }
}

