OBJECT Codeunit 2800 Native - Setup APIs
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            if not GUIALLOWED then
              exit;

            // SetupApis;
            InsertTenantWebServices;
            COMMIT;
          END;

  }
  CODE
  {
    VAR
      ApiPrefixTxt@1000 : TextConst '@@@={Locked};ENU=nativeInvoicing';

    [EventSubscriber(Codeunit,5465,ApiSetup)]
    PROCEDURE SetupApis@1();
    VAR
      NativeEDMTypes@1000 : Codeunit "Native - EDM Types";
    BEGIN
      NativeEDMTypes.UpdateEDMTypes;
    END;

    PROCEDURE InsertTenantWebServices@2();
    BEGIN
      InsertOrUpdateTenantWebService(PAGE::"Native - KPIs Entity",ApiPrefixTxt + 'KPIs');
      InsertOrUpdateTenantWebService(PAGE::"Native - Customer Entity",ApiPrefixTxt + 'Customers');
      InsertOrUpdateTenantWebService(PAGE::"Native - Item Entity",ApiPrefixTxt + 'Items');
      InsertOrUpdateTenantWebService(PAGE::"Native - Sales Inv. Entity",ApiPrefixTxt + 'SalesInvoices');
      InsertOrUpdateTenantWebService(PAGE::"Native - Sales Quotes",ApiPrefixTxt + 'SalesQuotes');
      InsertOrUpdateTenantWebService(PAGE::"Native - Tax Area",ApiPrefixTxt + 'TaxAreas');
      InsertOrUpdateTenantWebService(PAGE::"Native - Tax Group Entity",ApiPrefixTxt + 'TaxGroups');
      InsertOrUpdateTenantWebService(PAGE::"Native - Units of Measure",ApiPrefixTxt + 'UnitsOfMeasure');
      InsertOrUpdateTenantWebService(PAGE::"Native - Payment Terms",ApiPrefixTxt + 'PaymentTerms');
      InsertOrUpdateTenantWebService(PAGE::"Native - Payment Methods",ApiPrefixTxt + 'PaymentMethods');
      InsertOrUpdateTenantWebService(PAGE::"Native - Attachments",ApiPrefixTxt + 'Attachments');
      InsertOrUpdateTenantWebService(PAGE::"Native - General Setting",ApiPrefixTxt + 'GeneralSettings');
      InsertOrUpdateTenantWebService(PAGE::"Native - SMTP Mail Setup",ApiPrefixTxt + 'SMTPMailSetup');
      InsertOrUpdateTenantWebService(PAGE::"Native - Email Setting",ApiPrefixTxt + 'EmailSetting');
      InsertOrUpdateTenantWebService(PAGE::"Native Country/Regions Entity",ApiPrefixTxt + 'CountryRegion');
      InsertOrUpdateTenantWebService(PAGE::"Native - PDFs",ApiPrefixTxt + 'PDFs');
      InsertOrUpdateTenantWebService(PAGE::"Native - Email Preview",ApiPrefixTxt + 'EmailPreview');
      InsertOrUpdateTenantWebService(PAGE::"Native - Export Invoices",ApiPrefixTxt + 'ExportInvoices');
      InsertOrUpdateTenantWebService(PAGE::"Native - Test Mail",ApiPrefixTxt + 'TestMail');
      InsertOrUpdateTenantWebService(PAGE::"Native - Sales Tax Setup",ApiPrefixTxt + 'SalesTaxSetup');
      InsertOrUpdateTenantWebService(PAGE::"Native - VAT Setup",ApiPrefixTxt + 'VATSetup');
      InsertOrUpdateTenantWebService(PAGE::"Native - Languages",ApiPrefixTxt + 'Languages');
    END;

    LOCAL PROCEDURE InsertOrUpdateTenantWebService@6(PageNumber@1000 : Integer;ServiceName@1002 : Text);
    VAR
      TenantWebService@1001 : Record "Tenant Web Service";
    BEGIN
      if TenantWebService.GET(TenantWebService."Object Type"::Page,ServiceName) then begin
        TenantWebService.Published := true;
        TenantWebService."Object ID" := PageNumber;
        TenantWebService.MODIFY(true);
        exit;
      end;

      TenantWebService."Object Type" := TenantWebService."Object Type"::Page;
      TenantWebService."Service Name" := COPYSTR(ServiceName,1,MAXSTRLEN(TenantWebService."Service Name"));
      TenantWebService."Object ID" := PageNumber;
      TenantWebService.Published := true;
      TenantWebService.INSERT(true);
    END;

    PROCEDURE CreatePaymentRegistrationSetup@16();
    VAR
      PaymentRegistrationSetup@1000 : Record "Payment Registration Setup";
    BEGIN
      with PaymentRegistrationSetup do begin
        if GET(USERID) then
          exit;
        if GET then begin
          "User ID" := USERID;
          INSERT(true);
          COMMIT;
          exit;
        end;
        CODEUNIT.RUN(CODEUNIT::"O365 Sales Initial Setup");
        COMMIT;
      end;
    END;

    PROCEDURE GetAPIPrefix@3() : Text;
    BEGIN
      exit(ApiPrefixTxt);
    END;

    BEGIN
    END.
  }
}

