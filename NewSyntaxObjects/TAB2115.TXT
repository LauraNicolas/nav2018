OBJECT Table 2115 O365 Coupon Claim
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "O365 Posted Coupon Claim"=imd;
    OnInsert=BEGIN
               SetLastModifiedDateTime;
             END;

    OnModify=BEGIN
               SetLastModifiedDateTime;
             END;

    OnRename=BEGIN
               SetLastModifiedDateTime;
             END;

    CaptionML=ENU=O365 Coupon Claim;
    LookupPageID="O365 Coupon";
    DrillDownPageID="O365 Coupon";
  }
  FIELDS
  {
    { 1   ;   ;Claim ID            ;Text150       ;CaptionML=ENU=Claim ID }
    { 2   ;   ;Graph Contact ID    ;Text250       ;OnValidate=BEGIN
                                                                UpdateCustomerId;
                                                              END;

                                                   CaptionML=ENU=Graph Contact ID }
    { 3   ;   ;Usage               ;Option        ;CaptionML=ENU=Usage;
                                                   OptionCaptionML=ENU=oneTime,multiUse;
                                                   OptionString=oneTime,multiUse }
    { 4   ;   ;Offer               ;Text250       ;CaptionML=ENU=Offer }
    { 5   ;   ;Terms               ;Text250       ;CaptionML=ENU=Terms }
    { 6   ;   ;Code                ;Text30        ;CaptionML=ENU=Code }
    { 7   ;   ;Expiration          ;Date          ;CaptionML=ENU=Expiration }
    { 8   ;   ;Discount Value      ;Decimal       ;OnValidate=BEGIN
                                                                UpdateAmountText;
                                                              END;

                                                   CaptionML=ENU=Discount Value;
                                                   AutoFormatType=1 }
    { 9   ;   ;Discount Type       ;Option        ;OnValidate=BEGIN
                                                                UpdateAmountText;
                                                              END;

                                                   CaptionML=ENU=Discount Type;
                                                   OptionCaptionML=ENU=Custom,%,Amount;
                                                   OptionString=Custom,"%",Amount }
    { 10  ;   ;Created DateTime    ;DateTime      ;CaptionML=ENU=Created DateTime }
    { 11  ;   ;Is Valid            ;Boolean       ;CaptionML=ENU=Is Valid }
    { 12  ;   ;Status Text         ;Text50        ;CaptionML=ENU=Status }
    { 13  ;   ;Amount Text         ;Text30        ;CaptionML=ENU=Discount }
    { 14  ;   ;Is applied          ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("O365 Coupon Claim Doc. Link" WHERE ("Claim ID"=FIELD("Claim ID"),
                                                                                                          "Document Type"=FIELD("Document Type Filter"),
                                                                                                          "Document No."=FIELD("Document No. Filter"),
                                                                                                          "Graph Contact ID"=FIELD("Graph Contact ID")));
                                                   CaptionML=ENU=Is applied }
    { 15  ;   ;Document Type Filter;Option        ;FieldClass=FlowFilter;
                                                   TableRelation="Sales Header"."Document Type";
                                                   CaptionML=ENU=Document Type Filter;
                                                   OptionCaptionML=ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                   OptionString=Quote,Order,Invoice,"Credit Memo","Blanket Order","Return Order" }
    { 16  ;   ;Document No. Filter ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="Sales Header"."No.";
                                                   CaptionML=ENU=Document No. Filter }
    { 17  ;   ;Offer Blob          ;BLOB          ;CaptionML=ENU=Offer Blob }
    { 18  ;   ;Terms Blob          ;BLOB          ;CaptionML=ENU=Terms Blob }
    { 8001;   ;Last Modified DateTime;DateTime    ;CaptionML=ENU=Last Modified DateTime }
    { 8002;   ;Customer Id         ;GUID          ;CaptionML=ENU=Customer Id }
  }
  KEYS
  {
    {    ;"Claim ID","Graph Contact ID"           ;Clustered=true }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;"Status Text",Code,"Amount Text",Offer   }
  }
  CODE
  {
    VAR
      O365Discounts@1000 : Codeunit "O365 Discounts";
      AppliedTxt@1001 : TextConst 'ENU=Applied';
      ClaimedTxt@1006 : TextConst 'ENU=Claimed';
      ExpiresTodayTxt@1002 : TextConst 'ENU=Expires today';
      ExpiresTomorrowTxt@1003 : TextConst 'ENU=Expires tomorrow';
      ExpiresInTxt@1004 : TextConst '@@@="%1 = a number of days, larger than 2, ex. 5";ENU=Expires in %1 days';
      ExpiredTxt@1005 : TextConst 'ENU=Expired';
      ApplyDiscountPercentageOptionStringTxt@1007 : TextConst '@@@="%1 = a number indicating the discount value, ex. 8";ENU=Apply %1% discount,Let me change discount';
      MustApplyDiscountManuallyMsg@1008 : TextConst 'ENU=You must apply this discount manually.';
      CouponHasAlreadyBeenAppliedErr@1009 : TextConst 'ENU=This coupon has already been applied.';
      MustUnapplyDiscountManuallyMsg@1011 : TextConst 'ENU=You must unapply this discount manually.';
      UnapplyDiscountPercentageOptionStringTxt@1010 : TextConst 'ENU=Clear invoice discount,Let me change discount';
      CouponAlreadyUsedChangeAppliedInvoiceQst@1012 : TextConst 'ENU=This coupon has already been used, do you wish to use it here instead?';
      PercentDiscountTxt@1013 : TextConst '@@@="%1 = a number indicating the discount value, ex. 8";ENU=%1% off';
      AmountDiscountTxt@1014 : TextConst '@@@="%1 = currency symbol, ex. $. %2 = a number indicating the discount value, ex. 8";ENU=%1%2 off';
      GraphIntContact@1015 : Codeunit "Graph Int. - Contact";
      CouldNotRedeemCouponMsg@1016 : TextConst '@@@="%1 = a coupon id specified by the user, ex. BIKE25";ENU=The coupon %1 was not redeemed.';

    PROCEDURE GetAppliedClaimsForSalesDocument@6(SalesHeader@1000 : Record "Sales Header") CouponCodes : Text;
    BEGIN
      SETRANGE("Document Type Filter",SalesHeader."Document Type");
      SETRANGE("Document No. Filter",SalesHeader."No.");
      SETRANGE("Is applied",true);
      if not FINDSET then
        exit;

      UpdateAmountText;
      if Code <> '' then
        CouponCodes := Code
      else
        CouponCodes := "Amount Text";
      if NEXT <> 0 then
        repeat
          UpdateAmountText;
          if Code <> '' then
            CouponCodes += STRSUBSTNO(', %1',Code)
          else
            CouponCodes += STRSUBSTNO(', %1',"Amount Text");
        until NEXT = 0;
    END;

    PROCEDURE GetOffer@14() : Text;
    VAR
      TempBlob@1000 : Record TempBlob;
      CR@1001 : Text[1];
    BEGIN
      CALCFIELDS("Offer Blob");
      if not "Offer Blob".HASVALUE then
        exit(Offer);
      CR[1] := 10;
      TempBlob.Blob := "Offer Blob";
      exit(TempBlob.ReadAsText(CR,TEXTENCODING::Windows));
    END;

    PROCEDURE SetOffer@15(NewOffer@1001 : Text);
    VAR
      TempBlob@1000 : Record TempBlob;
    BEGIN
      CLEAR("Offer Blob");
      Offer := COPYSTR(NewOffer,1,MAXSTRLEN(Offer));
      if STRLEN(NewOffer) <= MAXSTRLEN(Offer) then
        exit; // No need to store anything in the blob
      if NewOffer = '' then
        exit;
      TempBlob.WriteAsText(NewOffer,TEXTENCODING::Windows);
      "Offer Blob" := TempBlob.Blob;
      MODIFY;
    END;

    PROCEDURE GetTerms@16() : Text;
    VAR
      TempBlob@1000 : Record TempBlob;
      CR@1001 : Text[1];
    BEGIN
      CALCFIELDS("Terms Blob");
      if not "Terms Blob".HASVALUE then
        exit(Terms);
      CR[1] := 10;
      TempBlob.Blob := "Terms Blob";
      exit(TempBlob.ReadAsText(CR,TEXTENCODING::Windows));
    END;

    PROCEDURE SetTerms@17(NewTerms@1001 : Text);
    VAR
      TempBlob@1000 : Record TempBlob;
    BEGIN
      CLEAR("Terms Blob");
      Terms := COPYSTR(NewTerms,1,MAXSTRLEN(Terms));
      if STRLEN(NewTerms) <= MAXSTRLEN(Terms) then
        exit; // No need to store anything in the blob
      if NewTerms = '' then
        exit;
      TempBlob.WriteAsText(NewTerms,TEXTENCODING::Windows);
      "Terms Blob" := TempBlob.Blob;
      MODIFY;
    END;

    LOCAL PROCEDURE UpdateAmountText@2();
    VAR
      Currency@1000 : Record Currency;
    BEGIN
      CLEAR("Amount Text");
      if "Discount Value" = 0 then
        exit;

      if "Discount Type" = "Discount Type"::"%" then
        "Amount Text" := STRSUBSTNO(PercentDiscountTxt,"Discount Value");

      if "Discount Type" = "Discount Type"::Amount then
        "Amount Text" := STRSUBSTNO(AmountDiscountTxt,Currency.ResolveGLCurrencySymbol(''),"Discount Value");
    END;

    PROCEDURE UpdateStatusText@1();
    BEGIN
      "Status Text" := GetStatusText;
    END;

    PROCEDURE Apply@3() : Boolean;
    VAR
      O365CouponClaimDocLink@1002 : Record "O365 Coupon Claim Doc. Link";
      SalesHeader@1001 : Record "Sales Header";
      DeleteAllExistingUsagesOfCoupon@1003 : Boolean;
      Choice@1000 : Integer;
      OptionString@1004 : Text;
    BEGIN
      if "Is applied" then
        exit;

      if not SalesHeader.GET(GETRANGEMIN("Document Type Filter"),GETRANGEMIN("Document No. Filter")) then
        exit;

      if Usage = Usage::oneTime then begin
        O365CouponClaimDocLink.SETRANGE("Claim ID","Claim ID");
        O365CouponClaimDocLink.SETRANGE("Graph Contact ID","Graph Contact ID");
        if O365CouponClaimDocLink.FINDFIRST then begin
          if not CONFIRM(CouponAlreadyUsedChangeAppliedInvoiceQst) then
            exit;
          DeleteAllExistingUsagesOfCoupon := true;
        end;
      end;

      if ("Discount Value" > 0) and
         ("Discount Type" = "Discount Type"::"%") and (SalesHeader."Invoice Discount Value" = 0)
      then begin
        OptionString := STRSUBSTNO(ApplyDiscountPercentageOptionStringTxt,"Discount Value");
        Choice := STRMENU(OptionString);
        case Choice of
          0:
            exit(false); // Cancel
          1:
            O365Discounts.ApplyInvoiceDiscountPercentage(SalesHeader,"Discount Value");
          2:
            if PAGE.RUNMODAL(PAGE::"O365 Sales Invoice Discount",SalesHeader) <> ACTION::LookupOK then
              exit; // The user did not apply any discount
        end;
      end else begin
        MESSAGE(MustApplyDiscountManuallyMsg);
        if PAGE.RUNMODAL(PAGE::"O365 Sales Invoice Discount",SalesHeader) <> ACTION::LookupOK then
          exit; // The user did not apply any discount
      end;

      if DeleteAllExistingUsagesOfCoupon then begin
        O365CouponClaimDocLink.SETRANGE("Claim ID","Claim ID");
        O365CouponClaimDocLink.SETRANGE("Graph Contact ID","Graph Contact ID");
        O365CouponClaimDocLink.DELETEALL;
      end;

      O365CouponClaimDocLink."Claim ID" := "Claim ID";
      O365CouponClaimDocLink."Graph Contact ID" := "Graph Contact ID";
      O365CouponClaimDocLink."Document Type" := GETRANGEMIN("Document Type Filter");
      O365CouponClaimDocLink."Document No." := GETRANGEMIN("Document No. Filter");
      if not O365CouponClaimDocLink.INSERT then
        ERROR(CouponHasAlreadyBeenAppliedErr);
      exit(true);
    END;

    PROCEDURE Unapply@5() : Boolean;
    VAR
      O365CouponClaimDocLink@1002 : Record "O365 Coupon Claim Doc. Link";
      SalesHeader@1001 : Record "Sales Header";
      Choice@1000 : Integer;
      OptionString@1003 : Text;
    BEGIN
      if not O365CouponClaimDocLink.GET(
           "Claim ID","Graph Contact ID",GETRANGEMIN("Document Type Filter"),GETRANGEMIN("Document No. Filter"))
      then
        exit;

      if not SalesHeader.GET(GETRANGEMIN("Document Type Filter"),GETRANGEMIN("Document No. Filter")) then
        exit;

      if ("Discount Value" > 0) and ("Discount Type" = "Discount Type"::"%") then begin
        OptionString := UnapplyDiscountPercentageOptionStringTxt;
        Choice := STRMENU(OptionString);
        case Choice of
          0:
            exit(false); // Cancel
          1:
            O365Discounts.ApplyInvoiceDiscountPercentage(SalesHeader,0);
          2:
            if PAGE.RUNMODAL(PAGE::"O365 Sales Invoice Discount",SalesHeader) <> ACTION::LookupOK then
              exit; // The user did not unapply any discount;
        end;
      end else begin
        MESSAGE(MustUnapplyDiscountManuallyMsg);
        if PAGE.RUNMODAL(PAGE::"O365 Sales Invoice Discount",SalesHeader) <> ACTION::LookupOK then
          exit; // The user did not apply any discount
      end;

      O365CouponClaimDocLink.DELETE;
      exit(true);
    END;

    PROCEDURE RedeemCouponsForSalesDocument@7(PostedSalesHeader@1000 : Record "Sales Header");
    VAR
      O365PostedCouponClaim@1001 : Record "O365 Posted Coupon Claim";
      O365CouponClaimDocLink@1003 : Record "O365 Coupon Claim Doc. Link";
    BEGIN
      O365CouponClaimDocLink.SETRANGE("Document Type",PostedSalesHeader."Document Type");
      O365CouponClaimDocLink.SETRANGE("Document No.",PostedSalesHeader."No.");
      if O365CouponClaimDocLink.FINDSET then
        repeat
          SETRANGE("Claim ID",O365CouponClaimDocLink."Claim ID");
          if GET(O365CouponClaimDocLink."Claim ID",O365CouponClaimDocLink."Graph Contact ID") then begin
            RedeemCoupon(PostedSalesHeader."Sell-to Customer No.");

            O365PostedCouponClaim.TRANSFERFIELDS(Rec,true);
            O365PostedCouponClaim.VALIDATE("Sales Invoice No.",PostedSalesHeader."Last Posting No.");
            O365PostedCouponClaim.INSERT;
          end;
        until O365CouponClaimDocLink.NEXT = 0;
    END;

    PROCEDURE RedeemCoupon@8(CustomerNo@1001 : Code[20]);
    VAR
      CouponsManagement@1000 : Codeunit "Coupons Management";
    BEGIN
      // Since the invoice has been posted, we cannot throw any errors to revert anything at this point
      // Hence we simply inform the user if the coupon could not be redeemed
      if not CouponsManagement.RedeemClaim(CustomerNo,"Claim ID") then
        MESSAGE(CouldNotRedeemCouponMsg,Code);
    END;

    LOCAL PROCEDURE GetStatusText@4() : Text[50];
    VAR
      DaysUntilExpiration@1001 : Integer;
    BEGIN
      CALCFIELDS("Is applied");
      if "Is applied" then
        exit(AppliedTxt);

      if not "Is Valid" then
        exit(ClaimedTxt);

      DaysUntilExpiration := Expiration - WORKDATE;

      if DaysUntilExpiration < 0 then
        exit(ExpiredTxt);

      if DaysUntilExpiration = 0 then
        exit(ExpiresTodayTxt);

      if DaysUntilExpiration = 1 then
        exit(ExpiresTomorrowTxt);

      exit(STRSUBSTNO(ExpiresInTxt,DaysUntilExpiration));
    END;

    PROCEDURE CouponsExistForCustomer@9(CustomerNo@1000 : Code[20]) : Boolean;
    VAR
      O365CouponClaim@1002 : Record "O365 Coupon Claim";
      GraphContactID@1001 : Text[250];
    BEGIN
      if not GraphIntContact.FindGraphContactIdFromCustomerNo(GraphContactID,CustomerNo) then
        exit;

      O365CouponClaim.SETRANGE("Graph Contact ID",GraphContactID);
      exit(not O365CouponClaim.ISEMPTY);
    END;

    PROCEDURE UpdateCustomerId@12();
    VAR
      Customer@1000 : Record Customer;
      Contact@1001 : Record Contact;
    BEGIN
      if not GraphIntContact.FindOrCreateCustomerFromGraphContactSafe("Graph Contact ID",Customer,Contact) then
        exit;

      "Customer Id" := Customer.Id;
    END;

    LOCAL PROCEDURE SetLastModifiedDateTime@10();
    BEGIN
      "Last Modified DateTime" := CURRENTDATETIME;
    END;

    BEGIN
    END.
  }
}

