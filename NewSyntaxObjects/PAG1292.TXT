OBJECT Page 1292 Payment Application
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Payment Application;
    DeleteAllowed=false;
    SourceTable="Payment Application Proposal";
    DelayedInsert=true;
    SourceTableView=SORTING("Sorting Order")
                    ORDER(Ascending);
    PageType=Worksheet;
    SourceTableTemporary=true;
    OnOpenPage=BEGIN
                 CODEUNIT.RUN(CODEUNIT::"Get Bank Stmt. Line Candidates",Rec);
                 SETCURRENTKEY("Sorting Order","Stmt To Rem. Amount Difference");
                 ASCENDING(true);

                 if FINDFIRST then;
               END;

    OnNewRecord=BEGIN
                  TransferFromBankAccReconLine(BankAccReconLine);
                END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateTotals;
                           LineEditable := "Applies-to Entry No." = 0;
                         END;

    ActionList=ACTIONS
    {
      { 43      ;    ;ActionContainer;
                      Name=ActionContainer43;
                      ActionContainerType=RelatedInformation }
      { 38      ;1   ;ActionGroup;
                      Name=Details;
                      CaptionML=ENU=Details }
      { 42      ;2   ;Action    ;
                      Name=ShowBankTransactionDetails;
                      CaptionML=ENU=Bank Transaction Details;
                      ToolTipML=ENU=View the bank statement details for the selected line. The details include the values that exist in an imported bank statement file.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ExternalDocument;
                      OnAction=VAR
                                 DataExchField@1001 : Record "Data Exch. Field";
                               BEGIN
                                 DataExchField.SETRANGE("Data Exch. No.",BankAccReconLine."Data Exch. Entry No.");
                                 DataExchField.SETRANGE("Line No.",BankAccReconLine."Data Exch. Line No.");
                                 PAGE.RUN(PAGE::"Bank Statement Line Details",DataExchField);
                               END;
                                }
      { 7       ;    ;ActionContainer;
                      Name=ActionContainer7;
                      ActionContainerType=ActionItems }
      { 10      ;1   ;ActionGroup;
                      Name=Review;
                      CaptionML=ENU=Review }
      { 9       ;2   ;Action    ;
                      Name=Accept;
                      CaptionML=ENU=Accept Applications;
                      ToolTipML=ENU=Accept a payment application after reviewing it or manually applying it to entries. This closes the payment application and sets the Match Confidence to Accepted.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Approve;
                      OnAction=BEGIN
                                 if BankAccReconLine.Difference * BankAccReconLine."Applied Amount" > 0 then
                                   if BankAccReconLine."Account Type" = BankAccReconLine."Account Type"::"Bank Account" then
                                     ERROR(ExcessiveAmountErr,BankAccReconLine.Difference);

                                 BankAccReconLine.AcceptApplication;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 8       ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=ENU=Remove Applications;
                      ToolTipML=ENU=Remove a payment application from an entry. This unapplies the payment.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Reject;
                      OnAction=BEGIN
                                 if CONFIRM(RemoveApplicationsQst) then
                                   RemoveApplications;
                               END;
                                }
      { 11      ;1   ;ActionGroup;
                      Name=Show;
                      CaptionML=ENU=Show }
      { 35      ;2   ;Action    ;
                      Name=AllOpenEntries;
                      CaptionML=ENU=All Open Entries;
                      ToolTipML=ENU=Show all open entries that the payment can be applied to.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewDetails;
                      OnAction=BEGIN
                                 SETRANGE(Applied);
                                 SETRANGE("Account Type");
                                 SETRANGE("Account No.");
                                 SETRANGE(Type,Type::"Bank Account Ledger Entry",Type::"Check Ledger Entry");

                                 if FINDFIRST then;
                               END;
                                }
      { 37      ;2   ;Action    ;
                      Name=RelatedPartyOpenEntries;
                      CaptionML=ENU=Related-Party Open Entries;
                      ToolTipML=ENU=Show only open entries that are specifically for the related party in the Account No. field. This limits the list to those open entries that are most likely to relate to the payment.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewDocumentLine;
                      OnAction=BEGIN
                                 SETRANGE(Applied);

                                 BankAccReconLine.GET(
                                   BankAccReconLine."Statement Type",BankAccReconLine."Bank Account No.",
                                   BankAccReconLine."Statement No.",BankAccReconLine."Statement Line No.");

                                 if BankAccReconLine."Account No." <> '' then begin
                                   SETRANGE("Account No.",BankAccReconLine."Account No.");
                                   SETRANGE("Account Type",BankAccReconLine."Account Type");
                                 end;
                                 SETRANGE(Type,Type::"Bank Account Ledger Entry",Type::"Check Ledger Entry");

                                 if FINDFIRST then;
                               END;
                                }
      { 36      ;2   ;Action    ;
                      Name=AppliedEntries;
                      CaptionML=ENU=Applied Entries;
                      ToolTipML=ENU=View the ledger entries that have been applied to this record.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewRegisteredOrder;
                      OnAction=BEGIN
                                 SETRANGE(Applied,true);
                                 SETRANGE("Account Type");
                                 SETRANGE("Account No.");
                                 SETRANGE(Type,Type::"Bank Account Ledger Entry",Type::"Check Ledger Entry");

                                 if FINDFIRST then;
                               END;
                                }
      { 46      ;2   ;Action    ;
                      Name=AllOpenBankTransactions;
                      CaptionML=ENU=All Open Bank Transactions;
                      ToolTipML=ENU=View all open bank entries that the payment can be applied to.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewPostedOrder;
                      OnAction=BEGIN
                                 SETRANGE(Applied);
                                 SETRANGE("Account Type","Account Type"::"Bank Account");
                                 SETRANGE("Account No.");
                                 SETRANGE(Type,Type::"Bank Account Ledger Entry");

                                 if FINDFIRST then;
                               END;
                                }
      { 47      ;2   ;Action    ;
                      Name=AllOpenPayments;
                      CaptionML=ENU=All Open Payments;
                      ToolTipML=ENU=Show all open checks that the payment can be applied to.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewCheck;
                      OnAction=BEGIN
                                 SETRANGE(Applied);
                                 SETRANGE("Account Type","Account Type"::"Bank Account");
                                 SETRANGE("Account No.");
                                 SETRANGE(Type,Type::"Check Ledger Entry");
                                 if FINDFIRST then;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 29  ;0   ;Container ;
                Name=Container29;
                ContainerType=ContentArea }

    { 30  ;1   ;Group     ;
                Name=PaymentInformation;
                CaptionML=ENU=Payment Information;
                GroupType=Group }

    { 39  ;2   ;Field     ;
                Name=PaymentStatus;
                CaptionML=ENU=Payment Status;
                ToolTipML=ENU=Specifies the application status of the payment, including information about the match confidence of payments that are applied automatically.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Status;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE;
                ImplicitType=Text }

    { 31  ;2   ;Field     ;
                Name=TransactionDate;
                CaptionML=ENU=Transaction Date;
                ToolTipML=ENU=Specifies the date when the payment was recorded in the bank account.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BankAccReconLine."Transaction Date";
                Editable=FALSE }

    { 32  ;2   ;Field     ;
                Name=TransactionAmount;
                CaptionML=ENU=Transaction Amount;
                ToolTipML=ENU=Specifies the payment amount that was recorded on the electronic bank account.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BankAccReconLine."Statement Amount";
                Editable=FALSE }

    { 33  ;2   ;Field     ;
                Name=BankAccReconLineDescription;
                CaptionML=ENU=Transaction Text;
                ToolTipML=ENU=Specifies the text that was entered on the payment when the payment was made to the electronic bank account.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BankAccReconLine."Transaction Text";
                Editable=FALSE }

    { 34  ;1   ;Group     ;
                Name=Open Entries;
                CaptionML=ENU=Open Entries;
                GroupType=Group }

    { 28  ;2   ;Group     ;
                Name=Group28;
                CaptionML=ENU=Open Entries;
                GroupType=Repeater }

    { 19  ;3   ;Field     ;
                Name=AppliedAmount;
                CaptionML=ENU=Applied Amount;
                ToolTipML=ENU=Specifies the payment amount, excluding the value in the Applied Pmt. Discount field, that is applied to the open entry.;
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr="Applied Amt. Incl. Discount";
                Style=Strong;
                StyleExpr=TRUE;
                OnValidate=BEGIN
                             UpdateAfterChangingApplication;
                           END;

                ImplicitType=Decimal }

    { 20  ;3   ;Field     ;
                Name=Applied;
                ToolTipML=ENU=Specifies that the payment specified on the header of the Payment Application window is applied to the open entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Applied;
                OnValidate=BEGIN
                             UpdateAfterChangingApplication;
                           END;

                ImplicitType=Boolean }

    { 17  ;3   ;Field     ;
                Name=RemainingAmountAfterPosting;
                CaptionML=ENU=Remaining Amount After Posting;
                ToolTipML=ENU=Specifies the amount that remains to be paid for the open entry after you have posted the payment in the Payment Reconciliation Journal window.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetRemainingAmountAfterPostingValue;
                ImplicitType=Decimal }

    { 14  ;3   ;Field     ;
                Name=Applies-to Entry No.;
                ToolTipML=ENU=Specifies the number of the customer or vendor ledger entry that the payment will be applied to when you post the payment reconciliation journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Entry No.";
                Editable=FALSE;
                OnDrillDown=BEGIN
                              AppliesToEntryNoDrillDown;
                            END;

                ImplicitType=Integer }

    { 12  ;3   ;Field     ;
                Name=Due Date;
                ToolTipML=ENU=Specifies the due date of the open entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                Editable=FALSE;
                ImplicitType=Date }

    { 24  ;3   ;Field     ;
                Name=Document Type;
                ToolTipML=ENU=Specifies the type of document that is related to the open entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type";
                Editable=FALSE;
                ImplicitType=Option }

    { 23  ;3   ;Field     ;
                Name=Document No.;
                ToolTipML=ENU=Specifies the number of the document that is related to the open entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                Editable=FALSE;
                ImplicitType=Code20 }

    { 22  ;3   ;Field     ;
                Name=External Document No.;
                ToolTipML=ENU=Specifies the external document number on the document that is related to the open entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="External Document No.";
                Editable=FALSE;
                ImplicitType=Code35 }

    { 21  ;3   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the description of the open entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Editable=FALSE;
                ImplicitType=Text50 }

    { 44  ;3   ;Field     ;
                Name=Remaining Amount;
                ToolTipML=ENU=Specifies the amount that remains to be paid for the open entry.;
                ApplicationArea=#Advanced;
                SourceExpr="Remaining Amount";
                Visible=FALSE;
                Enabled=FALSE;
                Editable=FALSE;
                ImplicitType=Decimal }

    { 41  ;3   ;Field     ;
                Name=Remaining Amt. Incl. Discount;
                ToolTipML=ENU=Specifies the amount that remains to be paid for the open entry, minus any granted payment discount.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Remaining Amt. Incl. Discount";
                Enabled=FALSE;
                Editable=FALSE;
                ImplicitType=Decimal }

    { 16  ;3   ;Field     ;
                Name=Pmt. Disc. Due Date;
                CaptionML=ENU=Pmt. Discount Date;
                ToolTipML=ENU=Specifies the date on which the remaining amount on the open entry must be paid to grant a discount.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pmt. Disc. Due Date";
                OnValidate=BEGIN
                             UpdateAfterChangingApplication;
                           END;

                ImplicitType=Date }

    { 45  ;3   ;Field     ;
                Name=Pmt. Disc. Tolerance Date;
                ToolTipML=ENU=Specifies the latest date the amount in the entry must be paid in order for payment discount tolerance to be granted.;
                ApplicationArea=#Advanced;
                SourceExpr="Pmt. Disc. Tolerance Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 15  ;3   ;Field     ;
                Name=Remaining Pmt. Disc. Possible;
                CaptionML=ENU=Remaining Pmt. Discount Possible;
                ToolTipML=ENU=Specifies how much discount you can grant for the payment if you apply it to the open entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Remaining Pmt. Disc. Possible";
                OnValidate=BEGIN
                             UpdateAfterChangingApplication;
                           END;

                ImplicitType=Decimal }

    { 40  ;3   ;Field     ;
                Name=AccountName;
                CaptionML=ENU=Account Name;
                ToolTipML=ENU=Specifies the name of the account that the payment is applied to in the Payment Reconciliation Journal window.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetAccountName;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              AccountNameDrillDown;
                            END;

                ImplicitType=Text }

    { 27  ;3   ;Field     ;
                Name=Account Type;
                ToolTipML=ENU=Specifies the type of account that the payment application will be posted to when you post the payment reconciliation journal.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account Type";
                Editable=LineEditable;
                ImplicitType=Option }

    { 26  ;3   ;Field     ;
                Name=Account No.;
                ToolTipML=ENU=Specifies the account number the payment application will be posted to when you post the payment reconciliation journal.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account No.";
                Editable=LineEditable;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                           END;

                ImplicitType=Code20 }

    { 25  ;3   ;Field     ;
                Name=Posting Date;
                ToolTipML=ENU=Specifies the posting date of the open entry.;
                ApplicationArea=#Advanced;
                SourceExpr="Posting Date";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Date }

    { 13  ;3   ;Field     ;
                Name=Match Confidence;
                ToolTipML=ENU=Specifies the quality of the match between the payment and the open entry for payment application purposes.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Match Confidence";
                ImplicitType=Option }

    { 18  ;3   ;Field     ;
                Name=Currency Code;
                CaptionML=ENU=Entry Currency Code;
                ToolTipML=ENU=Specifies the currency code of the open entry.;
                ApplicationArea=#Advanced;
                SourceExpr="Currency Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 5   ;1   ;Group     ;
                Name=Group5;
                GroupType=Group }

    { 6   ;2   ;Field     ;
                Name=TotalAppliedAmount;
                CaptionML=ENU=Applied Amount;
                ToolTipML=ENU=Specifies the sum of the values in the Applied Amount field on lines in the Payment Application window.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=BankAccReconLine."Applied Amount";
                AutoFormatType=1;
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                Name=TotalRemainingAmount;
                CaptionML=ENU=Difference;
                ToolTipML=ENU=Specifies how much of the payment amount remains to be applied to open entries in the Payment Application window.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=BankAccReconLine."Statement Amount" - BankAccReconLine."Applied Amount";
                AutoFormatType=1;
                Editable=FALSE;
                StyleExpr=RemAmtToApplyStyleExpr }

    { 3   ;0   ;Container ;
                Name=Container3;
                ContainerType=FactBoxArea }

    { 2   ;1   ;Part      ;
                Name=Part2;
                ApplicationArea=#Basic,#Suite;
                SubPageLink="Bank Account No."=FIELD("Bank Account No."),
                            "Statement No."=FIELD("Statement No."),
                            "Statement Line No."=FIELD("Statement Line No."),
                            "Statement Type"=FIELD("Statement Type"),
                            "Account Type"=FIELD("Account Type"),
                            "Account No."=FIELD("Account No."),
                            "Applies-to Entry No."=FIELD("Applies-to Entry No."),
                            "Match Confidence"=FIELD("Match Confidence"),
                            Quality=FIELD(Quality);
                PagePartID="Payment-to-Entry Match";
                PartType=Page }

    { 1   ;1   ;Part      ;
                Name=Part1;
                ApplicationArea=#Basic,#Suite;
                SubPageLink="Bank Account No."=FIELD("Bank Account No."),
                            "Statement No."=FIELD("Statement No."),
                            "Statement Line No."=FIELD("Statement Line No."),
                            "Statement Type"=FIELD("Statement Type");
                PagePartID="Additional Match Details";
                PartType=Page }

  }
  CODE
  {
    VAR
      BankAccReconLine@1000 : Record "Bank Acc. Reconciliation Line";
      RemAmtToApplyStyleExpr@1001 : Text;
      RemoveApplicationsQst@1002 : TextConst 'ENU=Are you sure you want to remove all applications?';
      Status@1003 : Text;
      AppliedManuallyStatusTxt@1004 : TextConst 'ENU=Applied Manually';
      NoApplicationStatusTxt@1005 : TextConst 'ENU=Not Applied';
      AppliedAutomaticallyStatusTxt@1006 : TextConst 'ENU=Applied Automatically - Match Confidence: %1';
      AcceptedStatusTxt@1007 : TextConst 'ENU=Accepted';
      LineEditable@1008 : Boolean;
      ExcessiveAmountErr@1010 : TextConst '@@@=%1 is the amount that is not applied (there is filed on the page named Remaining Amount To Apply);ENU=The remaining amount to apply is %1.';

    [External]
    PROCEDURE SetBankAccReconcLine@3(NewBankAccReconLine@1000 : Record "Bank Acc. Reconciliation Line");
    BEGIN
      BankAccReconLine := NewBankAccReconLine;
      TransferFromBankAccReconLine(NewBankAccReconLine);

      OnSetBankAccReconcLine(BankAccReconLine);
    END;

    LOCAL PROCEDURE UpdateTotals@7();
    BEGIN
      BankAccReconLine.GET(
        BankAccReconLine."Statement Type",BankAccReconLine."Bank Account No.",
        BankAccReconLine."Statement No.",BankAccReconLine."Statement Line No.");

      BankAccReconLine.CALCFIELDS("Match Confidence");
      case BankAccReconLine."Match Confidence" of
        BankAccReconLine."Match Confidence"::None:
          Status := NoApplicationStatusTxt;
        BankAccReconLine."Match Confidence"::Accepted:
          Status := AcceptedStatusTxt;
        BankAccReconLine."Match Confidence"::Manual:
          Status := AppliedManuallyStatusTxt;
        else
          Status := STRSUBSTNO(AppliedAutomaticallyStatusTxt,BankAccReconLine."Match Confidence");
      end;

      UpdateRemAmtToApplyStyle;
    END;

    LOCAL PROCEDURE UpdateRemAmtToApplyStyle@6();
    BEGIN
      if BankAccReconLine."Statement Amount" = BankAccReconLine."Applied Amount" then
        RemAmtToApplyStyleExpr := 'Favorable'
      else
        RemAmtToApplyStyleExpr := 'Unfavorable';
    END;

    LOCAL PROCEDURE UpdateAfterChangingApplication@13();
    VAR
      MatchBankPayments@1000 : Codeunit "Match Bank Payments";
    BEGIN
      BankAccReconLine.SetManualApplication;
      UpdateToSystemMatchConfidence;
      UpdateTotals;
      MatchBankPayments.UpdateType(BankAccReconLine);
    END;

    LOCAL PROCEDURE UpdateToSystemMatchConfidence@1();
    VAR
      BankPmtApplRule@1001 : Record "Bank Pmt. Appl. Rule";
    BEGIN
      if ("Match Confidence" = "Match Confidence"::Accepted) or ("Match Confidence" = "Match Confidence"::Manual) then
        "Match Confidence" := BankPmtApplRule.GetMatchConfidence(Quality);
    END;

    [Integration(TRUE)]
    PROCEDURE OnSetBankAccReconcLine@2(BankAccReconciliationLine@1000 : Record "Bank Acc. Reconciliation Line");
    BEGIN
    END;

    BEGIN
    END.
  }
}

