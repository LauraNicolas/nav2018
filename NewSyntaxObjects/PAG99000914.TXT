OBJECT Page 99000914 Change Production Order Status
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Change Production Order Status;
    SourceTable="Production Order";
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 BuildForm;
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 47      ;1   ;ActionGroup;
                      Name=Pro&d. Order;
                      CaptionML=ENU=Pro&d. Order;
                      Image=Order }
      { 49      ;2   ;ActionGroup;
                      Name=E&ntries;
                      CaptionML=ENU=E&ntries;
                      Image=Entries }
      { 50      ;3   ;Action    ;
                      Name=Item Ledger E&ntries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Item Ledger E&ntries;
                      ToolTipML=ENU=View the item ledger entries of the item on the document or journal line.;
                      ApplicationArea=#Manufacturing;
                      Image=ItemLedger;
                      OnAction=VAR
                                 ItemLedgEntry@1000 : Record "Item Ledger Entry";
                               BEGIN
                                 if Status <> Status::Released then
                                   exit;

                                 ItemLedgEntry.RESET;
                                 ItemLedgEntry.SETCURRENTKEY("Order Type","Order No.");
                                 ItemLedgEntry.SETRANGE("Order Type",ItemLedgEntry."Order Type"::Production);
                                 ItemLedgEntry.SETRANGE("Order No.","No.");
                                 PAGE.RUNMODAL(0,ItemLedgEntry);
                               END;
                                }
      { 51      ;3   ;Action    ;
                      Name=Capacity Ledger Entries;
                      CaptionML=ENU=Capacity Ledger Entries;
                      ToolTipML=ENU=View the capacity ledger entries of the involved production order. Capacity is recorded either as time (run time, stop time, or setup time) or as quantity (scrap quantity or output quantity).;
                      ApplicationArea=#Manufacturing;
                      Image=CapacityLedger;
                      OnAction=VAR
                                 CapLedgEntry@1000 : Record "Capacity Ledger Entry";
                               BEGIN
                                 if Status <> Status::Released then
                                   exit;

                                 CapLedgEntry.RESET;
                                 CapLedgEntry.SETCURRENTKEY("Order Type","Order No.");
                                 CapLedgEntry.SETRANGE("Order Type",CapLedgEntry."Order Type"::Production);
                                 CapLedgEntry.SETRANGE("Order No.","No.");
                                 PAGE.RUNMODAL(0,CapLedgEntry);
                               END;
                                }
      { 52      ;3   ;Action    ;
                      Name=Value Entries;
                      CaptionML=ENU=Value Entries;
                      ToolTipML=ENU=View the value entries of the item on the document or journal line.;
                      ApplicationArea=#Manufacturing;
                      Image=ValueLedger;
                      OnAction=VAR
                                 ValueEntry@1000 : Record "Value Entry";
                               BEGIN
                                 if Status <> Status::Released then
                                   exit;

                                 ValueEntry.RESET;
                                 ValueEntry.SETCURRENTKEY("Order Type","Order No.");
                                 ValueEntry.SETRANGE("Order Type",ValueEntry."Order Type"::Production);
                                 ValueEntry.SETRANGE("Order No.","No.");
                                 PAGE.RUNMODAL(0,ValueEntry);
                               END;
                                }
      { 53      ;2   ;Action    ;
                      Name=Co&mments;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Manufacturing;
                      RunObject=Page "Prod. Order Comment Sheet";
                      RunPageLink=Status=FIELD(Status),
                                  "Prod. Order No."=FIELD("No.");
                      Image=ViewComments }
      { 54      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 56      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      ToolTipML=ENU=View statistical information, such as the value of posted entries, for the record.;
                      ApplicationArea=#Manufacturing;
                      RunObject=Page "Production Order Statistics";
                      RunPageLink=Status=FIELD(Status),
                                  "No."=FIELD("No."),
                                  "Date Filter"=FIELD("Date Filter");
                      Promoted=true;
                      Image=Statistics;
                      PromotedCategory=Process }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 40      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 41      ;2   ;Action    ;
                      Name=Change &Status;
                      Ellipsis=true;
                      CaptionML=ENU=Change &Status;
                      ApplicationArea=#Manufacturing;
                      Image=ChangeStatus;
                      OnAction=VAR
                                 ProdOrderStatusMgt@1004 : Codeunit "Prod. Order Status Management";
                                 ChangeStatusForm@1000 : Page "Change Status on Prod. Order";
                                 Window@1005 : Dialog;
                                 NewStatus@1006 : 'Simulated,Planned,"Firm Planned",Released,Finished';
                                 NewPostingDate@1007 : Date;
                                 NewUpdateUnitCost@1008 : Boolean;
                                 NoOfRecords@1009 : Integer;
                                 POCount@1010 : Integer;
                                 LocalText000@1011 : TextConst 'ENU=Simulated,Planned,Firm Planned,Released,Finished';
                               BEGIN
                                 ChangeStatusForm.Set(Rec);

                                 if ChangeStatusForm.RUNMODAL <> ACTION::Yes then
                                   exit;

                                 ChangeStatusForm.ReturnPostingInfo(NewStatus,NewPostingDate,NewUpdateUnitCost);

                                 NoOfRecords := COUNT;

                                 Window.OPEN(
                                   STRSUBSTNO(Text000,SELECTSTR(NewStatus + 1,LocalText000)) +
                                   Text001);

                                 POCount := 0;

                                 if FIND('-') then
                                   repeat
                                     POCount := POCount + 1;
                                     Window.UPDATE(1,"No.");
                                     Window.UPDATE(2,ROUND(POCount / NoOfRecords * 10000,1));
                                     ProdOrderStatusMgt.ChangeStatusOnProdOrder(
                                       Rec,NewStatus,NewPostingDate,NewUpdateUnitCost);
                                     COMMIT;
                                   until NEXT = 0;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 29  ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 30  ;2   ;Field     ;
                Name=ProdOrderStatus;
                CaptionML=ENU=Status Filter;
                ToolTipML=ENU=Specifies the status of the production orders to define a filter on the lines.;
                OptionCaptionML=ENU=Simulated,Planned,Firm Planned,Released;
                ApplicationArea=#Manufacturing;
                SourceExpr=ProdOrderStatus;
                OnValidate=BEGIN
                             ProdOrderStatusOnAfterValidate;
                           END;

                ImplicitType=Option }

    { 32  ;2   ;Field     ;
                Name=StartingDate;
                CaptionML=ENU=Must Start Before;
                ToolTipML=ENU=Specifies a date to define a filter on the lines.;
                ApplicationArea=#Manufacturing;
                SourceExpr=StartingDate;
                OnValidate=BEGIN
                             StartingDateOnAfterValidate;
                           END;

                ImplicitType=Date }

    { 46  ;2   ;Field     ;
                Name=EndingDate;
                CaptionML=ENU=Ends Before;
                ToolTipML=ENU=Specifies a date to define a filter on the lines.;
                ApplicationArea=#Manufacturing;
                SourceExpr=EndingDate;
                OnValidate=BEGIN
                             EndingDateOnAfterValidate;
                           END;

                ImplicitType=Date }

    { 1   ;1   ;Group     ;
                Name=Group1;
                Editable=FALSE;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the production order.;
                ApplicationArea=#Manufacturing;
                SourceExpr="No.";
                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the description of the production order.;
                ApplicationArea=#Manufacturing;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 6   ;2   ;Field     ;
                Name=Creation Date;
                ToolTipML=ENU=Specifies the date on which you created the production order.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Creation Date";
                ImplicitType=Date }

    { 8   ;2   ;Field     ;
                Name=Source Type;
                ToolTipML=ENU=Specifies the source type of the production order.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Source Type";
                ImplicitType=Option }

    { 10  ;2   ;Field     ;
                Name=Source No.;
                ToolTipML=ENU=Specifies the source number of the production order.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Source No.";
                ImplicitType=Code20 }

    { 14  ;2   ;Field     ;
                Name=Starting Time;
                ToolTipML=ENU=Specifies the starting time of the production order.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Starting Time";
                ImplicitType=Time }

    { 16  ;2   ;Field     ;
                Name=Starting Date;
                ToolTipML=ENU=Specifies the starting date of the production order.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Starting Date";
                ImplicitType=Date }

    { 18  ;2   ;Field     ;
                Name=Ending Time;
                ToolTipML=ENU=Specifies the ending time of the production order.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Ending Time";
                ImplicitType=Time }

    { 20  ;2   ;Field     ;
                Name=Ending Date;
                ToolTipML=ENU=Specifies the ending date of the production order.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Ending Date";
                ImplicitType=Date }

    { 22  ;2   ;Field     ;
                Name=Due Date;
                ToolTipML=ENU=Specifies the due date of the production order.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Due Date";
                ImplicitType=Date }

    { 24  ;2   ;Field     ;
                Name=Finished Date;
                ToolTipML=ENU=Specifies the actual finishing date of a finished production order.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Finished Date";
                ImplicitType=Date }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Changing status to %1...\\';
      Text001@1001 : TextConst 'ENU=Prod. Order #1###### @2@@@@@@@@@@@@@';
      ProdOrderStatus@1002 : 'Simulated,Planned,"Firm Planned",Released';
      StartingDate@1003 : Date;
      EndingDate@1004 : Date;

    LOCAL PROCEDURE BuildForm@1();
    BEGIN
      FILTERGROUP(2);
      SETRANGE(Status,ProdOrderStatus);
      FILTERGROUP(0);

      if StartingDate <> 0D then
        SETFILTER("Starting Date",'..%1',StartingDate)
      else
        SETRANGE("Starting Date");

      if EndingDate <> 0D then
        SETFILTER("Ending Date",'..%1',EndingDate)
      else
        SETRANGE("Ending Date");

      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE ProdOrderStatusOnAfterValidate@19066920();
    BEGIN
      BuildForm;
    END;

    LOCAL PROCEDURE StartingDateOnAfterValidate@19020273();
    BEGIN
      BuildForm;
    END;

    LOCAL PROCEDURE EndingDateOnAfterValidate@19076447();
    BEGIN
      BuildForm;
    END;

    BEGIN
    END.
  }
}

