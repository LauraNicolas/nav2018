OBJECT Table 1509 WF Event/Response Combination
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=WF Event/Response Combination;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Event,Response;
                                                   OptionString=Event,Response }
    { 2   ;   ;Function Name       ;Code128       ;TableRelation=IF (Type=CONST(Event)) "Workflow Event"
                                                                 ELSE IF (Type=CONST(Response)) "Workflow Response";
                                                   CaptionML=ENU=Function Name }
    { 3   ;   ;Predecessor Type    ;Option        ;CaptionML=ENU=Predecessor Type;
                                                   OptionCaptionML=ENU=Event,Response;
                                                   OptionString=Event,Response }
    { 4   ;   ;Predecessor Function Name;Code128  ;TableRelation=IF ("Predecessor Type"=CONST(Event)) "Workflow Event"
                                                                 ELSE IF ("Predecessor Type"=CONST(Response)) "Workflow Response";
                                                   CaptionML=ENU=Predecessor Function Name }
  }
  KEYS
  {
    {    ;Type,"Function Name","Predecessor Type","Predecessor Function Name";
                                                   Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE MakeEventResponseIndependent@8(Type@1003 : Option;FunctionName@1004 : Code[128]);
    VAR
      WorkflowEvent@1000 : Record "Workflow Event";
      WFEventResponseCombination@1002 : Record "WF Event/Response Combination";
      IsDependentOnAllEvents@1001 : Boolean;
    BEGIN
      IsDependentOnAllEvents := true;
      if WorkflowEvent.FINDSET then
        repeat
          if not WFEventResponseCombination.GET(Type,FunctionName,
               WFEventResponseCombination.Type::"Event",WorkflowEvent."Function Name")
          then
            IsDependentOnAllEvents := false;
        until (WorkflowEvent.NEXT = 0) or (not IsDependentOnAllEvents);

      if IsDependentOnAllEvents then begin
        WFEventResponseCombination.SETRANGE(Type,Type);
        WFEventResponseCombination.SETRANGE("Function Name",FunctionName);
        WFEventResponseCombination.DELETEALL;
      end;
    END;

    BEGIN
    END.
  }
}

