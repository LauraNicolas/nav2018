OBJECT Report 8615 Copy Package
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Copy - VAT Posting Setup;
    ProcessingOnly=true;
  }
  DATASET
  {
    { 1756;    ;DataItem;Config. Package     ;
               DataItemTable="Config. Package";
               DataItemTableView=SORTING(Code);
               OnPreDataItem=BEGIN
                               SETRANGE(Code,UseConfigPackage.Code);
                             END;

               OnAfterGetRecord=BEGIN
                                  ConfigPackage.INIT;
                                  ConfigPackage.TRANSFERFIELDS(UseConfigPackage);
                                  ConfigPackage.Code := NewPackageCode;
                                  ConfigPackage.INSERT;

                                  ConfigPackageTable.SETRANGE("Package Code",Code);
                                  if ConfigPackageTable.FINDSET then
                                    repeat
                                      ConfigPackageTable2.TRANSFERFIELDS(ConfigPackageTable);
                                      ConfigPackageTable2."Package Code" := ConfigPackage.Code;
                                      ConfigPackageTable2.INSERT;
                                    until ConfigPackageTable.NEXT = 0;

                                  ConfigPackageField.SETRANGE("Package Code",Code);
                                  if ConfigPackageField.FINDSET then
                                    repeat
                                      ConfigPackageField2.TRANSFERFIELDS(ConfigPackageField);
                                      ConfigPackageField2."Package Code" := ConfigPackage.Code;
                                      ConfigPackageField2.INSERT;
                                    until ConfigPackageField.NEXT = 0;

                                  ConfigPackageFilter.SETRANGE("Package Code",Code);
                                  if ConfigPackageFilter.FINDSET then
                                    repeat
                                      ConfigPackageFilter2.TRANSFERFIELDS(ConfigPackageFilter);
                                      ConfigPackageFilter2."Package Code" := ConfigPackage.Code;
                                      ConfigPackageFilter2.INSERT;
                                    until ConfigPackageFilter.NEXT = 0;

                                  if CopyData then begin
                                    ConfigPackageRecord.SETRANGE("Package Code",Code);
                                    if ConfigPackageRecord.FINDSET then
                                      repeat
                                        ConfigPackageRecord2.TRANSFERFIELDS(ConfigPackageRecord);
                                        ConfigPackageRecord2."Package Code" := ConfigPackage.Code;
                                        ConfigPackageRecord2.Invalid := false;
                                        ConfigPackageRecord2.INSERT;
                                      until ConfigPackageRecord.NEXT = 0;

                                    ConfigPackageData.SETRANGE("Package Code",Code);
                                    if ConfigPackageData.FINDSET then
                                      repeat
                                        ConfigPackageData2.TRANSFERFIELDS(ConfigPackageData);
                                        ConfigPackageData2."Package Code" := ConfigPackage.Code;
                                        ConfigPackageData2.Invalid := false;
                                        ConfigPackageData2.INSERT;
                                      until ConfigPackageData.NEXT = 0;
                                  end;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 2   ;2   ;Field     ;
                  Name=Package;
                  CaptionML=ENU=New Package Code;
                  ToolTipML=ENU=Specifies the code that the new configuration package gets after copying.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=NewPackageCode;
                  OnValidate=BEGIN
                               if ConfigPackage.GET(NewPackageCode) then
                                 ERROR(Text002,NewPackageCode);
                             END;
                              }

      { 1   ;2   ;Field     ;
                  Name=CopyData;
                  CaptionML=ENU=Copy Data;
                  ToolTipML=ENU=Specifies if data in the configuration package is copied.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=CopyData }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      UseConfigPackage@1001 : Record "Config. Package";
      ConfigPackage@1002 : Record "Config. Package";
      ConfigPackageTable@1003 : Record "Config. Package Table";
      ConfigPackageTable2@1008 : Record "Config. Package Table";
      ConfigPackageField@1004 : Record "Config. Package Field";
      ConfigPackageField2@1009 : Record "Config. Package Field";
      ConfigPackageData@1005 : Record "Config. Package Data";
      ConfigPackageData2@1010 : Record "Config. Package Data";
      ConfigPackageRecord@1006 : Record "Config. Package Record";
      ConfigPackageRecord2@1011 : Record "Config. Package Record";
      ConfigPackageFilter@1015 : Record "Config. Package Filter";
      ConfigPackageFilter2@1016 : Record "Config. Package Filter";
      NewPackageCode@1013 : Code[20];
      CopyData@1007 : Boolean;
      Text002@1014 : TextConst 'ENU=Package %1 already exists.';

    [External]
    PROCEDURE Set@1(ConfigPackage2@1000 : Record "Config. Package");
    BEGIN
      UseConfigPackage := ConfigPackage2;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

