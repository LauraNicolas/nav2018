OBJECT Table 7023 Sales Price Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               if "Sales Type" = "Sales Type"::"All Customers" then
                 "Sales Code" := ''
               else
                 TESTFIELD("Sales Code");
               TESTFIELD("Item No.");
             END;

    OnRename=BEGIN
               if "Sales Type" <> "Sales Type"::"All Customers" then
                 TESTFIELD("Sales Code");
               TESTFIELD("Item No.");
             END;

    CaptionML=ENU=Sales Price Worksheet;
  }
  FIELDS
  {
    { 1   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                if "Item No." <> xRec."Item No." then begin
                                                                  "Unit of Measure Code" := '';
                                                                  "Variant Code" := '';
                                                                end;

                                                                if "Sales Type" = "Sales Type"::"Customer Price Group" then
                                                                  if CustPriceGr.GET("Sales Code") and
                                                                     (CustPriceGr."Allow Invoice Disc." <> "Allow Invoice Disc.")
                                                                  then
                                                                    if Item.GET("Item No.") then
                                                                      "Allow Invoice Disc." := Item."Allow Invoice Disc.";

                                                                CalcCurrentPrice(PriceAlreadyExists);
                                                              END;

                                                   CaptionML=ENU=Item No.;
                                                   NotBlank=true }
    { 2   ;   ;Sales Code          ;Code20        ;TableRelation=IF ("Sales Type"=CONST("Customer Price Group")) "Customer Price Group"
                                                                 ELSE IF ("Sales Type"=CONST(Customer)) Customer
                                                                 ELSE IF ("Sales Type"=CONST(Campaign)) Campaign;
                                                   OnValidate=BEGIN
                                                                if ("Sales Code" <> '') and ("Sales Type" = "Sales Type"::"All Customers") then
                                                                  ERROR(Text001,FIELDCAPTION("Sales Code"));

                                                                SetSalesDescription;
                                                                CalcCurrentPrice(PriceAlreadyExists);

                                                                if ("Sales Code" = '') and ("Sales Type" <> "Sales Type"::"All Customers") then
                                                                  exit;

                                                                if not PriceAlreadyExists and ("Sales Code" <> '') then
                                                                  case "Sales Type" of
                                                                    "Sales Type"::"Customer Price Group":
                                                                      begin
                                                                        CustPriceGr.GET("Sales Code");
                                                                        "Price Includes VAT" := CustPriceGr."Price Includes VAT";
                                                                        "VAT Bus. Posting Gr. (Price)" := CustPriceGr."VAT Bus. Posting Gr. (Price)";
                                                                        "Allow Line Disc." := CustPriceGr."Allow Line Disc.";
                                                                        "Allow Invoice Disc." := CustPriceGr."Allow Invoice Disc.";
                                                                      end;
                                                                    "Sales Type"::Customer:
                                                                      begin
                                                                        Cust.GET("Sales Code");
                                                                        "Currency Code" := Cust."Currency Code";
                                                                        "Price Includes VAT" := Cust."Prices Including VAT";
                                                                        "Allow Line Disc." := Cust."Allow Line Disc.";
                                                                      end;
                                                                    "Sales Type"::Campaign:
                                                                      begin
                                                                        Campaign.GET("Sales Code");
                                                                        "Starting Date" := Campaign."Starting Date";
                                                                        "Ending Date" := Campaign."Ending Date";
                                                                      end;
                                                                  end;
                                                              END;

                                                   CaptionML=ENU=Sales Code }
    { 3   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                CalcCurrentPrice(PriceAlreadyExists);
                                                              END;

                                                   CaptionML=ENU=Currency Code }
    { 4   ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                if ("Starting Date" > "Ending Date") and ("Ending Date" <> 0D) then
                                                                  ERROR(Text000,FIELDCAPTION("Starting Date"),FIELDCAPTION("Ending Date"));

                                                                if CurrFieldNo <> 0 then
                                                                  if "Sales Type" = "Sales Type"::Campaign then
                                                                    ERROR(Text002,FIELDCAPTION("Starting Date"),FIELDCAPTION("Ending Date"),FIELDCAPTION("Sales Type"),"Sales Type");

                                                                CalcCurrentPrice(PriceAlreadyExists);
                                                              END;

                                                   CaptionML=ENU=Starting Date }
    { 5   ;   ;Current Unit Price  ;Decimal       ;CaptionML=ENU=Current Unit Price;
                                                   MinValue=0;
                                                   Editable=false;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Currency Code" }
    { 6   ;   ;New Unit Price      ;Decimal       ;CaptionML=ENU=New Unit Price;
                                                   MinValue=0;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr="Currency Code" }
    { 7   ;   ;Price Includes VAT  ;Boolean       ;CaptionML=ENU=Price Includes VAT }
    { 10  ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=true;
                                                   CaptionML=ENU=Allow Invoice Disc. }
    { 11  ;   ;VAT Bus. Posting Gr. (Price);Code20;TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=VAT Bus. Posting Gr. (Price) }
    { 13  ;   ;Sales Type          ;Option        ;OnValidate=BEGIN
                                                                if "Sales Type" <> xRec."Sales Type" then
                                                                  VALIDATE("Sales Code",'');
                                                              END;

                                                   CaptionML=ENU=Sales Type;
                                                   OptionCaptionML=ENU=Customer,Customer Price Group,All Customers,Campaign;
                                                   OptionString=Customer,"Customer Price Group","All Customers",Campaign }
    { 14  ;   ;Minimum Quantity    ;Decimal       ;OnValidate=BEGIN
                                                                CalcCurrentPrice(PriceAlreadyExists);
                                                              END;

                                                   CaptionML=ENU=Minimum Quantity;
                                                   MinValue=0 }
    { 15  ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                VALIDATE("Starting Date");

                                                                if CurrFieldNo <> 0 then
                                                                  if "Sales Type" = "Sales Type"::Campaign then
                                                                    ERROR(Text002,FIELDCAPTION("Starting Date"),FIELDCAPTION("Ending Date"),FIELDCAPTION("Sales Type"),"Sales Type");
                                                              END;

                                                   CaptionML=ENU=Ending Date }
    { 20  ;   ;Item Description    ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Item.Description WHERE ("No."=FIELD("Item No.")));
                                                   CaptionML=ENU=Item Description }
    { 21  ;   ;Sales Description   ;Text50        ;CaptionML=ENU=Sales Description }
    { 5400;   ;Unit of Measure Code;Code10        ;TableRelation="Item Unit of Measure".Code WHERE ("Item No."=FIELD("Item No."));
                                                   OnValidate=BEGIN
                                                                CalcCurrentPrice(PriceAlreadyExists);
                                                              END;

                                                   CaptionML=ENU=Unit of Measure Code }
    { 5700;   ;Variant Code        ;Code10        ;TableRelation="Item Variant".Code WHERE ("Item No."=FIELD("Item No."));
                                                   OnValidate=BEGIN
                                                                CalcCurrentPrice(PriceAlreadyExists);
                                                              END;

                                                   CaptionML=ENU=Variant Code }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;InitValue=true;
                                                   CaptionML=ENU=Allow Line Disc. }
  }
  KEYS
  {
    {    ;"Starting Date","Ending Date","Sales Type","Sales Code","Currency Code","Item No.","Variant Code","Unit of Measure Code","Minimum Quantity";
                                                   Clustered=true }
    {    ;"Item No.","Variant Code","Unit of Measure Code","Minimum Quantity","Starting Date","Ending Date","Sales Type","Sales Code","Currency Code" }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CustPriceGr@1000 : Record "Customer Price Group";
      Text000@1001 : TextConst 'ENU=%1 cannot be after %2';
      Cust@1002 : Record Customer;
      Text001@1003 : TextConst 'ENU=%1 must be blank.';
      Campaign@1006 : Record Campaign;
      Item@1005 : Record Item;
      PriceAlreadyExists@1004 : Boolean;
      Text002@1007 : TextConst 'ENU="%1 and %2 can only be altered from the Campaign Card when %3 = %4."';

    [External]
    PROCEDURE CalcCurrentPrice@1(VAR PriceAlreadyExists@1000 : Boolean);
    VAR
      SalesPrice@1001 : Record "Sales Price";
    BEGIN
      SalesPrice.SETRANGE("Item No.","Item No.");
      SalesPrice.SETRANGE("Sales Type","Sales Type");
      SalesPrice.SETRANGE("Sales Code","Sales Code");
      SalesPrice.SETRANGE("Currency Code","Currency Code");
      SalesPrice.SETRANGE("Unit of Measure Code","Unit of Measure Code");
      SalesPrice.SETRANGE("Starting Date",0D,"Starting Date");
      SalesPrice.SETRANGE("Minimum Quantity",0,"Minimum Quantity");
      SalesPrice.SETRANGE("Variant Code","Variant Code");
      if SalesPrice.FINDLAST then begin
        "Current Unit Price" := SalesPrice."Unit Price";
        "Price Includes VAT" := SalesPrice."Price Includes VAT";
        "Allow Line Disc." := SalesPrice."Allow Line Disc.";
        "Allow Invoice Disc." := SalesPrice."Allow Invoice Disc.";
        "VAT Bus. Posting Gr. (Price)" := SalesPrice."VAT Bus. Posting Gr. (Price)";
        PriceAlreadyExists := SalesPrice."Starting Date" = "Starting Date";
      end else begin
        "Current Unit Price" := 0;
        PriceAlreadyExists := false;
      end;
    END;

    [External]
    PROCEDURE SetSalesDescription@4();
    VAR
      Customer@1002 : Record Customer;
      CustomerPriceGroup@1003 : Record "Customer Price Group";
      Campaign@1004 : Record Campaign;
    BEGIN
      "Sales Description" := '';
      if "Sales Code" = '' then
        exit;
      case "Sales Type" of
        "Sales Type"::Customer:
          if Customer.GET("Sales Code") then
            "Sales Description" := Customer.Name;
        "Sales Type"::"Customer Price Group":
          if CustomerPriceGroup.GET("Sales Code") then
            "Sales Description" := CustomerPriceGroup.Description;
        "Sales Type"::Campaign:
          if Campaign.GET("Sales Code") then
            "Sales Description" := Campaign.Description;
      end;
    END;

    BEGIN
    END.
  }
}

