OBJECT Codeunit 5306 Outlook Synch. Export Schema
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      OSynchEntity@1005 : Record "Outlook Synch. Entity";
      OSynchField@1004 : Record "Outlook Synch. Field";
      SortedEntitiesBuffer@1000 : TEMPORARY Record "Outlook Synch. Lookup Name";
      OSynchSetupDetail@1006 : Record "Outlook Synch. Setup Detail";
      OSynchTypeConversion@1007 : Codeunit "Outlook Synch. Type Conv";
      OsynchOutlookMgt@1011 : Codeunit "Outlook Synch. Outlook Mgt.";
      XMLWriter@1002 : DotNet "'Microsoft.Dynamics.Nav.OLSync.Common, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.Common.XmlTextWriter";
      Text001@1003 : TextConst '@@@=%1 - product name;ENU=The synchronization failed because the synchronization data could not be sent from %1. Try again later and if the problem persists contact your system administrator.';
      Text002@1008 : TextConst 'ENU=The synchronization failed because the %1 user has no entities to synchronize. Try again later and if the problem persists contact your system administrator.';
      Text003@1009 : TextConst 'ENU=The synchronization failed because the synchronization data from Microsoft Outlook cannot be processed. Try again later and if the problem persists contact your system administrator.';

    [Internal]
    PROCEDURE Export@2(UserID@1000 : Text[50];VAR XMLMessage@1001 : Text);
    VAR
      OsynchNAVMgt@1002 : Codeunit "Outlook Synch. NAV Mgt";
    BEGIN
      OsynchNAVMgt.GetSortedEntities(UserID,SortedEntitiesBuffer,true);
      SendMappingScheme(UserID,XMLMessage);
    END;

    [Internal]
    PROCEDURE SendMappingScheme@36(UserID@1002 : Code[50];VAR XMLMessage@1000 : Text);
    VAR
      XMLTextReader@1003 : DotNet "'Microsoft.Dynamics.Nav.OLSync.Common, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.Common.XmlTextReader";
      TempDateTime@1007 : DateTime;
      OutlookCheckSum@1005 : Text[250];
      CurrentCheckSum@1006 : Text[250];
    BEGIN
      if not SortedEntitiesBuffer.FIND('-') then
        ERROR(Text002,UserID);

      CLEAR(XMLTextReader);
      XMLTextReader := XMLTextReader.XmlTextReader;
      TempDateTime := OSynchTypeConversion.LocalDT2UTC(CURRENTDATETIME);

      if not XMLTextReader.LoadXml(XMLMessage) then
        ERROR(Text003);

      if ISNULL(XMLWriter) then
        XMLWriter := XMLWriter.XmlTextWriter;

      XMLWriter.WriteStartDocument;
      XMLWriter.WriteStartElement('Schema');
      XMLWriter.WriteAttribute('StartSynchTime',FORMAT(OSynchTypeConversion.SetDateTimeFormat(TempDateTime)));

      repeat
        OSynchEntity.GET(SortedEntitiesBuffer.Name);
        if OSynchEntity."Outlook Item" <> '' then
          ComposeSynchEntityNode(OSynchEntity,UserID);
      until SortedEntitiesBuffer.NEXT = 0;

      XMLWriter.WriteEndElement;
      XMLWriter.WriteEndDocument;

      OutlookCheckSum := GetOutlookSchemaCheckSum(XMLTextReader);
      if OutlookCheckSum <> '' then
        CurrentCheckSum := GetCurrentSchemaCheckSum(XMLWriter);

      if (OutlookCheckSum <> '') and (OutlookCheckSum = CurrentCheckSum) then
        PutCurrentSchemaCheckSum(XMLWriter,CurrentCheckSum,TempDateTime);

      XMLMessage := XMLWriter.ToString;

      if STRLEN(XMLMessage) = 0 then begin
        CLEAR(XMLWriter);
        ERROR(Text001,PRODUCTNAME.FULL);
      end;

      CLEAR(XMLWriter);
    END;

    LOCAL PROCEDURE ComposeSynchEntityNode@35(OSynchEntity1@1000 : Record "Outlook Synch. Entity";UserID@1003 : Code[50]);
    VAR
      OSynchEntityElement@1002 : Record "Outlook Synch. Entity Element";
      TempOSynchField@1004 : TEMPORARY Record "Outlook Synch. Field";
      OSynchUserSetup@1001 : Record "Outlook Synch. User Setup";
      IntVar@1005 : Integer;
    BEGIN
      if ISNULL(XMLWriter) then
        exit;

      OSynchEntity1.TESTFIELD(Code);
      OSynchUserSetup.GET(UserID,OSynchEntity1.Code);
      IntVar := OSynchUserSetup."Synch. Direction";

      XMLWriter.WriteStartElement('SynchEntity');
      XMLWriter.WriteAttribute('Code',OSynchEntity1.Code);
      XMLWriter.WriteAttribute('Description',OSynchEntity1.Description);
      XMLWriter.WriteAttribute('OutlookItemType',OSynchEntity1."Outlook Item");
      XMLWriter.WriteAttribute('SynchDirection',FORMAT(IntVar));

      OSynchField.RESET;
      OSynchField.SETRANGE("Synch. Entity Code",OSynchEntity1.Code);
      OSynchField.SETRANGE("Element No.",0);
      OSynchField.SETFILTER("Outlook Object",'<>%1','');
      OSynchField.SETFILTER("Outlook Property",'<>%1','');
      if OSynchField.FIND('-') then
        repeat
          TempOSynchField.RESET;
          TempOSynchField.SETRANGE("Synch. Entity Code",OSynchField."Synch. Entity Code");
          TempOSynchField.SETRANGE("Element No.",OSynchField."Element No.");
          TempOSynchField.SETRANGE("Outlook Property",OSynchField."Outlook Property");
          if not TempOSynchField.FIND('-') then begin
            TempOSynchField.INIT;
            TempOSynchField := OSynchField;
            TempOSynchField.INSERT;
          end;
        until OSynchField.NEXT = 0;

      TempOSynchField.RESET;
      if TempOSynchField.FIND('-') then
        repeat
          ComposeFieldNode(TempOSynchField);
        until TempOSynchField.NEXT = 0;

      OSynchSetupDetail.RESET;
      OSynchSetupDetail.SETCURRENTKEY("Table No.");
      OSynchSetupDetail.SETRANGE("Synch. Entity Code",OSynchEntity1.Code);
      OSynchSetupDetail.SETRANGE("User ID",UserID);
      if OSynchSetupDetail.FIND('-') then
        repeat
          OSynchEntityElement.GET(OSynchSetupDetail."Synch. Entity Code",OSynchSetupDetail."Element No.");
          if OSynchEntityElement."Outlook Collection" <> '' then
            ComposeCollectionNode(OSynchEntityElement);
        until OSynchSetupDetail.NEXT = 0;

      XMLWriter.WriteEndElement;
    END;

    LOCAL PROCEDURE ComposeFieldNode@34(OSynchFieldIn@1000 : Record "Outlook Synch. Field");
    VAR
      Field@1001 : Record Field;
      RecRef@1003 : RecordRef;
      FldRef@1002 : FieldRef;
    BEGIN
      if ISNULL(XMLWriter) then
        exit;

      OSynchFieldIn.TESTFIELD("Synch. Entity Code");
      OSynchFieldIn.TESTFIELD("Line No.");

      XMLWriter.WriteStartElement('Field');
      if OSynchFieldIn."Outlook Property" <> '' then
        XMLWriter.WriteAttribute('Name',OSynchFieldIn."Outlook Property");

      if OSynchFieldIn."Read-Only Status" <> OSynchFieldIn."Read-Only Status"::" " then begin
        RecRef.GETTABLE(OSynchFieldIn);
        FldRef := RecRef.FIELD(OSynchFieldIn.FIELDNO("Read-Only Status"));

        XMLWriter.WriteAttribute('Read-OnlyStatus',SELECTSTR(OSynchFieldIn."Read-Only Status" + 1,FldRef.OPTIONSTRING));
        RecRef.CLOSE
      end;

      if OSynchFieldIn."User-Defined" then
        XMLWriter.WriteAttribute('User-Defined',OSynchTypeConversion.SetBoolFormat(OSynchFieldIn."User-Defined"));

      if OSynchFieldIn."Search Field" then
        XMLWriter.WriteAttribute('SearchKey',OSynchTypeConversion.SetBoolFormat(OSynchFieldIn."Search Field"));

      if OSynchFieldIn."Table No." = 0 then
        Field.GET(OSynchFieldIn."Master Table No.",OSynchFieldIn."Field No.")
      else
        Field.GET(OSynchFieldIn."Table No.",OSynchFieldIn."Field No.");

      if Field.Type = Field.Type::BLOB then
        XMLWriter.WriteAttribute('Base64',OSynchTypeConversion.SetBoolFormat(true));

      XMLWriter.WriteEndElement;
    END;

    LOCAL PROCEDURE ComposeCollectionNode@33(OSynchEntityElementIn@1000 : Record "Outlook Synch. Entity Element");
    VAR
      TempOSynchField@1002 : TEMPORARY Record "Outlook Synch. Field";
      OSynchDependency@1001 : Record "Outlook Synch. Dependency";
    BEGIN
      if ISNULL(XMLWriter) then
        exit;

      OSynchEntityElementIn.TESTFIELD("Synch. Entity Code");
      OSynchEntityElementIn.TESTFIELD("Element No.");

      XMLWriter.WriteStartElement('Collection');
      XMLWriter.WriteAttribute('Name',OSynchEntityElementIn."Outlook Collection");

      OSynchField.RESET;
      OSynchField.SETRANGE("Synch. Entity Code",OSynchEntityElementIn."Synch. Entity Code");
      OSynchField.SETRANGE("Element No.",OSynchEntityElementIn."Element No.");
      OSynchField.SETFILTER("Outlook Object",'<>%1','');
      OSynchField.SETFILTER("Outlook Property",'<>%1','');
      if OSynchField.FIND('-') then
        repeat
          TempOSynchField.RESET;
          TempOSynchField.SETRANGE("Synch. Entity Code",OSynchField."Synch. Entity Code");
          TempOSynchField.SETRANGE("Element No.",OSynchField."Element No.");
          TempOSynchField.SETRANGE("Outlook Property",OSynchField."Outlook Property");
          if not TempOSynchField.FIND('-') then begin
            TempOSynchField.INIT;
            TempOSynchField := OSynchField;
            TempOSynchField.INSERT;
          end;
        until OSynchField.NEXT = 0;

      TempOSynchField.RESET;
      if TempOSynchField.FIND('-') then
        repeat
          ComposeFieldNode(TempOSynchField);
        until TempOSynchField.NEXT = 0;

      OSynchDependency.RESET;
      OSynchDependency.SETRANGE("Synch. Entity Code",TempOSynchField."Synch. Entity Code");
      OSynchDependency.SETRANGE("Element No.",TempOSynchField."Element No.");
      if OSynchDependency.FINDFIRST then begin
        TempOSynchField.SETRANGE("Search Field",true);
        if TempOSynchField.FIND('-') then
          repeat
            ComposeSearchFieldNode(TempOSynchField,OSynchDependency);
          until TempOSynchField.NEXT = 0;
      end;

      XMLWriter.WriteEndElement;
    END;

    LOCAL PROCEDURE ComposeSearchFieldNode@32(OSynchFieldIn@1000 : Record "Outlook Synch. Field";OSynchDependency@1004 : Record "Outlook Synch. Dependency");
    VAR
      OSynchField1@1002 : Record "Outlook Synch. Field";
      SearchKeyBuffer@1001 : TEMPORARY Record "Outlook Synch. Lookup Name";
    BEGIN
      if ISNULL(XMLWriter) then
        exit;

      XMLWriter.WriteStartElement('SearchKey');
      XMLWriter.WriteAttribute('Field',OSynchFieldIn."Outlook Property");

      if OSynchDependency.FIND('-') then
        repeat
          OSynchField.RESET;
          OSynchField.SETRANGE("Synch. Entity Code",OSynchFieldIn."Synch. Entity Code");
          OSynchField.SETRANGE("Element No.",OSynchFieldIn."Element No.");
          OSynchField.SETRANGE("Outlook Property",OSynchFieldIn."Outlook Property");
          if OSynchField.FIND('-') then
            repeat
              OSynchEntity.GET(OSynchDependency."Depend. Synch. Entity Code");
              OSynchField1.RESET;
              OSynchField1.SETRANGE("Synch. Entity Code",OSynchEntity.Code);
              OSynchField1.SETRANGE("Element No.",0);
              if OSynchField."Table No." = 0 then
                if OSynchField."Master Table No." = OSynchEntity."Table No." then
                  OSynchField1.SETRANGE("Table No.",0)
                else
                  OSynchField1.SETRANGE("Table No.",OSynchField."Master Table No.")
              else
                if OSynchField."Table No." = OSynchEntity."Table No." then
                  OSynchField1.SETRANGE("Table No.",0)
                else
                  OSynchField1.SETRANGE("Table No.",OSynchField."Table No.");

              OSynchField1.SETRANGE("Field No.",OSynchField."Field No.");
              if OSynchField1.FINDFIRST then begin
                SearchKeyBuffer.RESET;
                SearchKeyBuffer.SETRANGE(Name,OSynchEntity.Code);
                if not SearchKeyBuffer.FINDFIRST then begin
                  XMLWriter.WriteStartElement('Entity');
                  XMLWriter.WriteAttribute('Name',OSynchEntity.Code);
                  XMLWriter.WriteAttribute('Field',OSynchField1."Outlook Property");
                  XMLWriter.WriteEndElement;

                  SearchKeyBuffer.INIT;
                  SearchKeyBuffer."Entry No." := SearchKeyBuffer."Entry No." + 1;
                  SearchKeyBuffer.Name := OSynchEntity.Code;
                  SearchKeyBuffer.INSERT;
                end;
              end;
            until OSynchField.NEXT = 0;
        until OSynchDependency.NEXT = 0;

      XMLWriter.WriteEndElement;
    END;

    LOCAL PROCEDURE GetOutlookSchemaCheckSum@1(XmlTextReader@1000 : DotNet "'Microsoft.Dynamics.Nav.OLSync.Common, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.Common.XmlTextReader") CheckSum : Text[250];
    VAR
      Container@1003 : Text;
      RootIterator@1002 : Text[38];
    BEGIN
      if ISNULL(XmlTextReader) then
        ERROR(Text003);

      if XmlTextReader.RootLocalName <> 'Schema' then
        ERROR(Text003);

      if XmlTextReader.SelectElements(RootIterator,'child::CheckSum') > 0 then begin
        Container := OsynchOutlookMgt.ConvertValueFromBase64(XmlTextReader.GetValue(RootIterator));
        CheckSum := COPYSTR(Container,1,250);
      end;
    END;

    LOCAL PROCEDURE GetCurrentSchemaCheckSum@37(VAR XMLTextWriter@1003 : DotNet "'Microsoft.Dynamics.Nav.OLSync.Common, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.Common.XmlTextWriter") CheckSum : Text[250];
    VAR
      XmlTextReader@1002 : DotNet "'Microsoft.Dynamics.Nav.OLSync.Common, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.Common.XmlTextReader";
      Container@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";
      CarriageChar@1004 : Char;
      ReturnChar@1001 : Char;
    BEGIN
      XmlTextReader := XmlTextReader.XmlTextReader;
      XmlTextReader.Initialize(XMLTextWriter);
      XmlTextReader.XPathNavigator.MoveToRoot;
      Container := XmlTextReader.XPathNavigator.InnerXml;
      // Remove the first line of the container (contains timestamp)
      Container := Container.Substring(Container.IndexOf('<SynchEntity'));
      // Remove all \r from \r\n as the recipent over the wire will only recieve \n.
      CarriageChar := 13;
      ReturnChar := 10;
      Container := Container.Replace(FORMAT(CarriageChar) + FORMAT(ReturnChar),FORMAT(ReturnChar));
      CheckSum := OsynchOutlookMgt.ComputeHash(Container);
      CLEAR(XmlTextReader);
    END;

    LOCAL PROCEDURE PutCurrentSchemaCheckSum@3(VAR XMLTextWriter@1003 : DotNet "'Microsoft.Dynamics.Nav.OLSync.Common, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.NAV.OLSync.Common.XmlTextWriter";CheckSumText@1002 : Text[250];StartDateTime@1000 : DateTime);
    VAR
      TempOSynchLink@1001 : TEMPORARY Record "Outlook Synch. Link";
      OutStrm@1004 : OutStream;
      EntryIDContainer@1005 : Text;
    BEGIN
      CLEAR(XMLTextWriter);
      CLEAR(EntryIDContainer);

      XMLTextWriter := XMLTextWriter.XmlTextWriter;

      XMLTextWriter.WriteStartDocument;
      XMLTextWriter.WriteStartElement('Schema');
      XMLWriter.WriteAttribute('StartSynchTime',FORMAT(OSynchTypeConversion.SetDateTimeFormat(StartDateTime)));

      XMLTextWriter.WriteStartElement('CheckSum');
      if CheckSumText <> '' then begin
        CLEAR(TempOSynchLink);
        CLEAR(OutStrm);
        TempOSynchLink.RESET;
        TempOSynchLink.INIT;
        TempOSynchLink."Outlook Entry ID".CREATEOUTSTREAM(OutStrm);
        TempOSynchLink.INSERT;
        if OutStrm.WRITETEXT(CheckSumText,STRLEN(CheckSumText)) > 0 then begin
          TempOSynchLink.CALCFIELDS("Outlook Entry ID");
          if TempOSynchLink.GetEntryID(EntryIDContainer) then
            XMLTextWriter.WriteElementTextContent(OsynchOutlookMgt.ConvertValueToBase64(EntryIDContainer));
        end;
      end;
      XMLTextWriter.WriteEndElement;
      XMLTextWriter.WriteEndElement;
    END;

    BEGIN
    END.
  }
}

