OBJECT Codeunit 5915 Customer-Notify by Email
{
  OBJECT-PROPERTIES
  {
    Date=20161025D;
    Time=120000T;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    TableNo="Service Header";
    OnRun=BEGIN
            ServHeader := Rec;
            NotifyByEMailWhenServiceIsDone;
            Rec := ServHeader;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=We have finished carrying out service order %1.';
      Text001@1001 : TextConst 'ENU=You can collect your serviced items when it is convenient for you.';
      Text002@1002 : TextConst 'ENU=The customer will be notified as requested because service order %1 is now %2.';
      ServHeader@1003 : Record "Service Header";

    LOCAL PROCEDURE NotifyByEMailWhenServiceIsDone@1();
    VAR
      ServEmailQueue@1000 : Record "Service Email Queue";
    BEGIN
      if ServHeader."Notify Customer" <> ServHeader."Notify Customer"::"By Email" then
        exit;

      ServEmailQueue.INIT;
      if ServHeader."Ship-to Code" <> '' then
        ServEmailQueue."To Address" := ServHeader."Ship-to E-Mail";
      if ServEmailQueue."To Address" = '' then
        ServEmailQueue."To Address" := ServHeader."E-Mail";
      if ServEmailQueue."To Address" = '' then
        exit;

      ServEmailQueue."Copy-to Address" := '';
      ServEmailQueue."Subject Line" := STRSUBSTNO(Text000,ServHeader."No.");
      ServEmailQueue."Body Line" := Text001;
      ServEmailQueue."Attachment Filename" := '';
      ServEmailQueue."Document Type" := ServEmailQueue."Document Type"::"Service Order";
      ServEmailQueue."Document No." := ServHeader."No.";
      ServEmailQueue.Status := ServEmailQueue.Status::" ";
      ServEmailQueue.INSERT(true);
      ServEmailQueue.ScheduleInJobQueue;
      MESSAGE(
        Text002,
        ServHeader."No.",ServHeader.Status);
    END;

    BEGIN
    END.
  }
}

