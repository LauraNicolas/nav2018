OBJECT Page 6630 Sales Return Order
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Sales Return Order;
    SourceTable="Sales Header";
    SourceTableView=WHERE("Document Type"=FILTER("Return Order"));
    PageType=Document;
    RefreshOnActivate=true;
    PromotedActionCategoriesML=ENU=New,Process,Report,Approve,Release,Posting,Prepare,Invoice,Request Approval;
    OnInit=VAR
             SalesReceivablesSetup@1000 : Record "Sales & Receivables Setup";
           BEGIN
             JobQueueUsed := SalesReceivablesSetup.JobQueueActive;
           END;

    OnOpenPage=BEGIN
                 if UserMgt.GetSalesFilter <> '' then begin
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetSalesFilter);
                   FILTERGROUP(0);
                 end;

                 SetDocNoVisible;
                 if ("No." <> '') and ("Sell-to Customer No." = '') then
                   DocumentIsPosted := (not GET("Document Type","No."));
               END;

    OnAfterGetRecord=BEGIN
                       SetControlAppearance;
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetSalesFilter;
                  if (not DocNoVisible) and ("No." = '') then
                    SetSellToCustomerFromFilter;
                END;

    OnInsertRecord=BEGIN
                     if DocNoVisible then
                       CheckCreditMaxBeforeInsert;
                   END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     exit(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       if not DocumentIsPosted then
                         exit(ConfirmCloseUnposted);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                           CurrPage.ApprovalFactBox.PAGE.UpdateApprovalEntriesFromSourceRecord(RECORDID);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 49      ;1   ;ActionGroup;
                      Name=&Return Order;
                      CaptionML=ENU=&Return Order;
                      Image=Return }
      { 51      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      ToolTipML=ENU=View statistical information, such as the value of posted entries, for the record.;
                      ApplicationArea=#SalesReturnOrder;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Statistics;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=VAR
                                 Handled@1000 : Boolean;
                               BEGIN
                                 OnBeforeStatisticsAction(Rec,Handled);
                                 if not Handled then begin
                                   OpenSalesOrderStatistics;
                                   SalesCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                                 end
                               END;
                                }
      { 52      ;2   ;Action    ;
                      Name=Customer;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Customer;
                      ToolTipML=ENU=View or edit detailed information about the customer on the sales document.;
                      ApplicationArea=#SalesReturnOrder;
                      RunObject=Page "Customer Card";
                      RunPageLink="No."=FIELD("Sell-to Customer No.");
                      Promoted=true;
                      PromotedIsBig=false;
                      Image=EditLines;
                      PromotedOnly=true }
      { 105     ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Promoted=false;
                      Enabled="No." <> '';
                      PromotedIsBig=false;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 140     ;2   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData "Approval Entry"=R;
                      CaptionML=ENU=Approvals;
                      ToolTipML=ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      Image=Approvals;
                      PromotedCategory=Category9;
                      PromotedOnly=true;
                      OnAction=VAR
                                 WorkflowsEntriesBuffer@1000 : Record "Workflows Entries Buffer";
                               BEGIN
                                 WorkflowsEntriesBuffer.RunWorkflowEntriesPage(RECORDID,DATABASE::"Sales Header","Document Type","No.");
                               END;
                                }
      { 53      ;2   ;Action    ;
                      Name=Co&mments;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Sales Comment Sheet";
                      RunPageLink="Document Type"=CONST("Return Order"),
                                  "No."=FIELD("No."),
                                  "Document Line No."=CONST(0);
                      Image=ViewComments }
      { 15      ;1   ;ActionGroup;
                      Name=Documents;
                      CaptionML=ENU=Documents;
                      Image=Documents }
      { 5801    ;2   ;Action    ;
                      Name=Return Receipts;
                      CaptionML=ENU=Return Receipts;
                      ToolTipML=ENU=View a list of posted return receipts for the order.;
                      ApplicationArea=#SalesReturnOrder;
                      RunObject=Page "Posted Return Receipts";
                      RunPageView=SORTING("Return Order No.");
                      RunPageLink="Return Order No."=FIELD("No.");
                      Image=ReturnReceipt }
      { 5802    ;2   ;Action    ;
                      Name=Cred&it Memos;
                      CaptionML=ENU=Cred&it Memos;
                      ToolTipML=ENU=View a list of ongoing credit memos for the order.;
                      ApplicationArea=#SalesReturnOrder;
                      RunObject=Page "Posted Sales Credit Memos";
                      RunPageView=SORTING("Return Order No.");
                      RunPageLink="Return Order No."=FIELD("No.");
                      Image=CreditMemo }
      { 131     ;2   ;Separator ;
                      Name=Separator131 }
      { 17      ;1   ;ActionGroup;
                      Name=Warehouse;
                      CaptionML=ENU=Warehouse;
                      Image=Warehouse }
      { 130     ;2   ;Action    ;
                      Name=In&vt. Put-away/Pick Lines;
                      CaptionML=ENU=In&vt. Put-away/Pick Lines;
                      ToolTipML=ENU=View items that are inbound or outbound on inventory put-away or inventory pick documents for the transfer order.;
                      ApplicationArea=#Warehouse;
                      RunObject=Page "Warehouse Activity List";
                      RunPageView=SORTING("Source Document","Source No.","Location Code");
                      RunPageLink="Source Document"=CONST("Sales Return Order"),
                                  "Source No."=FIELD("No.");
                      Image=PickLines }
      { 120     ;2   ;Action    ;
                      Name=Whse. Receipt Lines;
                      CaptionML=ENU=Whse. Receipt Lines;
                      ToolTipML=ENU=View ongoing warehouse receipts for the document, in advanced warehouse configurations.;
                      ApplicationArea=#Warehouse;
                      RunObject=Page "Whse. Receipt Lines";
                      RunPageView=SORTING("Source Type","Source Subtype","Source No.","Source Line No.");
                      RunPageLink="Source Type"=CONST(37),
                                  "Source Subtype"=FIELD("Document Type"),
                                  "Source No."=FIELD("No.");
                      Image=ReceiptLines }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 29      ;1   ;ActionGroup;
                      Name=Approval;
                      CaptionML=ENU=Approval }
      { 27      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=ENU=Approve;
                      ToolTipML=ENU=Approve the requested changes.;
                      ApplicationArea=#SalesReturnOrder;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=true;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 25      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=ENU=Reject;
                      ToolTipML=ENU=Reject the approval request.;
                      ApplicationArea=#SalesReturnOrder;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=true;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 23      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=ENU=Delegate;
                      ToolTipML=ENU=Delegate the approval to a substitute approver.;
                      ApplicationArea=#SalesReturnOrder;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 21      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=ENU=Comments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 119     ;1   ;Action    ;
                      Name=&Print;
                      Ellipsis=true;
                      CaptionML=ENU=&Print;
                      ToolTipML=ENU=Prepare to print the document. A report request window for the document opens where you can specify what to include on the print-out.;
                      ApplicationArea=#SalesReturnOrder;
                      Promoted=true;
                      Image=Print;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 DocPrint.PrintSalesHeader(Rec);
                               END;
                                }
      { 7       ;1   ;ActionGroup;
                      Name=ActionGroup7;
                      CaptionML=ENU=Release;
                      Image=ReleaseDoc }
      { 112     ;2   ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=Re&lease;
                      ToolTipML=ENU=Release the document to the next stage of processing. When a document is released, it will be included in all availability calculations from the expected receipt date of the items. You must reopen the document before you can make changes to it.;
                      ApplicationArea=#SalesReturnOrder;
                      Promoted=true;
                      Image=ReleaseDoc;
                      PromotedCategory=Category5;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ReleaseSalesDoc@1000 : Codeunit "Release Sales Document";
                               BEGIN
                                 ReleaseSalesDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 113     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=ENU=Re&open;
                      ToolTipML=ENU=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed;
                      ApplicationArea=#SalesReturnOrder;
                      Promoted=true;
                      Enabled=Status <> Status::Open;
                      Image=ReOpen;
                      PromotedCategory=Category5;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ReleaseSalesDoc@1001 : Codeunit "Release Sales Document";
                               BEGIN
                                 ReleaseSalesDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 600     ;2   ;Separator ;
                      Name=Separator600 }
      { 54      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 55      ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      AccessByPermission=TableData "Cust. Invoice Disc."=R;
                      CaptionML=ENU=Calculate &Invoice Discount;
                      ToolTipML=ENU=Calculate the invoice discount that applies to the sales return order.;
                      ApplicationArea=#SalesReturnOrder;
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 SalesCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 132     ;2   ;Separator ;
                      Name=Separator132 }
      { 93      ;2   ;Action    ;
                      Name=Apply Entries;
                      ShortCutKey=Shift+F11;
                      Ellipsis=true;
                      CaptionML=ENU=Apply Entries;
                      ToolTipML=ENU=Select one or more ledger entries that you want to apply this record to so that the related posted documents are closed as paid or refunded.;
                      ApplicationArea=#SalesReturnOrder;
                      Promoted=true;
                      Image=ApplyEntries;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Sales Header Apply",Rec);
                               END;
                                }
      { 115     ;2   ;Action    ;
                      Name=Create Return-Related &Documents;
                      Ellipsis=true;
                      CaptionML=ENU=Create Return-Related &Documents;
                      ApplicationArea=#SalesReturnOrder;
                      Promoted=true;
                      Image=ApplyEntries;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 CLEAR(CreateRetRelDocs);
                                 CreateRetRelDocs.SetSalesHeader(Rec);
                                 CreateRetRelDocs.RUNMODAL;
                                 CreateRetRelDocs.ShowDocuments;
                               END;
                                }
      { 133     ;2   ;Separator ;
                      Name=Separator133 }
      { 56      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=true;
                      CaptionML=ENU=Copy Document;
                      ToolTipML=ENU=Copy document lines and header information from another sales document to this document. You can copy a posted sales invoice into a new sales invoice to quickly create a similar document.;
                      ApplicationArea=#Suite;
                      Image=CopyDocument;
                      OnAction=BEGIN
                                 CopySalesDoc.SetSalesHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                                 CLEAR(CopySalesDoc);
                                 if GET("Document Type","No.") then;
                               END;
                                }
      { 118     ;2   ;Action    ;
                      Name=MoveNegativeLines;
                      Ellipsis=true;
                      CaptionML=ENU=Move Negative Lines;
                      ToolTipML=ENU=Prepare to create a replacement sales order in a sales return process.;
                      ApplicationArea=#SalesReturnOrder;
                      Image=MoveNegativeLines;
                      OnAction=BEGIN
                                 CLEAR(MoveNegSalesLines);
                                 MoveNegSalesLines.SetSalesHeader(Rec);
                                 MoveNegSalesLines.RUNMODAL;
                                 MoveNegSalesLines.ShowDocument;
                               END;
                                }
      { 62      ;2   ;Action    ;
                      Name=Post and &Print;
                      ShortCutKey=Shift+F9;
                      Ellipsis=true;
                      CaptionML=ENU=Post and &Print;
                      ToolTipML=ENU=Finalize and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.;
                      ApplicationArea=#SalesReturnOrder;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post + Print");
                               END;
                                }
      { 139     ;2   ;Action    ;
                      Name=GetPostedDocumentLinesToReverse;
                      Ellipsis=true;
                      CaptionML=ENU=Get Posted Doc&ument Lines to Reverse;
                      ToolTipML=ENU=Copy one or more posted sales document lines in order to reverse the original order.;
                      ApplicationArea=#SalesReturnOrder;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=ReverseLines;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 GetPstdDocLinesToRevere;
                               END;
                                }
      { 145     ;2   ;Action    ;
                      Name=Archive Document;
                      CaptionML=ENU=Archive Document;
                      ToolTipML=ENU=Send the document to the archive, for example because it is too soon to delete it. Later, you delete or reprocess the archived document.;
                      ApplicationArea=#Advanced;
                      Image=Archive;
                      OnAction=BEGIN
                                 ArchiveManagement.ArchiveSalesDocument(Rec);
                                 CurrPage.UPDATE(false);
                               END;
                                }
      { 31      ;2   ;Action    ;
                      Name=Send IC Return Order Cnfmn.;
                      AccessByPermission=TableData "IC G/L Account"=R;
                      CaptionML=ENU=Send IC Return Order Cnfmn.;
                      ApplicationArea=#Intercompany;
                      Image=IntercompanyOrder;
                      OnAction=VAR
                                 ICInOutboxMgt@1000 : Codeunit ICInboxOutboxMgt;
                                 ApprovalsMgmt@1003 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 if ApprovalsMgmt.PrePostApprovalCheckSales(Rec) then
                                   ICInOutboxMgt.SendSalesDoc(Rec,false);
                               END;
                                }
      { 135     ;2   ;Separator ;
                      Name=Separator135 }
      { 61      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      Ellipsis=true;
                      CaptionML=ENU=P&ost;
                      ToolTipML=ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                      ApplicationArea=#SalesReturnOrder;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post (Yes/No)");
                               END;
                                }
      { 11      ;2   ;Action    ;
                      Name=Preview Posting;
                      CaptionML=ENU=Preview Posting;
                      ToolTipML=ENU=Review the different types of entries that will be created when you post the document or journal.;
                      ApplicationArea=#SalesReturnOrder;
                      Promoted=true;
                      Image=ViewPostedOrder;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 ShowPreview;
                               END;
                                }
      { 13      ;1   ;ActionGroup;
                      Name=ActionGroup13;
                      CaptionML=ENU=Warehouse;
                      Image=Warehouse }
      { 136     ;2   ;Separator ;
                      Name=Separator136 }
      { 122     ;2   ;Action    ;
                      Name=Create &Whse. Receipt;
                      AccessByPermission=TableData "Warehouse Receipt Header"=R;
                      CaptionML=ENU=Create &Whse. Receipt;
                      ToolTipML=ENU=Create a warehouse receipt to start a receive and put-away process according to an advanced warehouse configuration.;
                      ApplicationArea=#Warehouse;
                      Image=NewReceipt;
                      OnAction=VAR
                                 GetSourceDocInbound@1000 : Codeunit "Get Source Doc. Inbound";
                               BEGIN
                                 GetSourceDocInbound.CreateFromSalesReturnOrder(Rec);
                               END;
                                }
      { 121     ;2   ;Action    ;
                      Name=Create Inventor&y Put-away/Pick;
                      AccessByPermission=TableData "Posted Invt. Put-away Header"=R;
                      Ellipsis=true;
                      CaptionML=ENU=Create Inventor&y Put-away/Pick;
                      ToolTipML=ENU=Create an inventory put-away or inventory pick to handle items on the document according to a basic warehouse configuration that does not require warehouse receipt or shipment documents.;
                      ApplicationArea=#Warehouse;
                      Image=CreateInventoryPickup;
                      OnAction=BEGIN
                                 CreateInvtPutAwayPick;
                               END;
                                }
      { 30      ;2   ;Separator ;
                      Name=Separator30 }
      { 59      ;1   ;ActionGroup;
                      Name=P&osting;
                      CaptionML=ENU=P&osting;
                      Image=Post }
      { 60      ;2   ;Action    ;
                      Name=Test Report;
                      Ellipsis=true;
                      CaptionML=ENU=Test Report;
                      ToolTipML=ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                      ApplicationArea=#SalesReturnOrder;
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintSalesHeader(Rec);
                               END;
                                }
      { 63      ;2   ;Action    ;
                      Name=Post &Batch;
                      Ellipsis=true;
                      CaptionML=ENU=Post &Batch;
                      ToolTipML=ENU=Post several documents at once. A report request window opens where you can specify which documents to post.;
                      ApplicationArea=#Advanced;
                      Promoted=false;
                      Image=PostBatch;
                      PromotedOnly=false;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Batch Post Sales Return Orders",true,true,Rec);
                                 CurrPage.UPDATE(false);
                               END;
                                }
      { 3       ;2   ;Action    ;
                      Name=Remove From Job Queue;
                      CaptionML=ENU=Remove From Job Queue;
                      ToolTipML=ENU=Remove the scheduled processing of this record from the job queue.;
                      ApplicationArea=#All;
                      Visible=JobQueueVisible;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      Name=Request Approval;
                      CaptionML=ENU=Request Approval }
      { 142     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=ENU=Send A&pproval Request;
                      ToolTipML=ENU=Request approval of the document.;
                      ApplicationArea=#SalesReturnOrder;
                      Promoted=true;
                      Enabled=NOT OpenApprovalEntriesExist;
                      PromotedIsBig=true;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 if ApprovalsMgmt.CheckSalesApprovalPossible(Rec) then
                                   ApprovalsMgmt.OnSendSalesDocForApproval(Rec);
                               END;
                                }
      { 143     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=ENU=Cancel Approval Re&quest;
                      ToolTipML=ENU=Cancel the approval request.;
                      ApplicationArea=#SalesReturnOrder;
                      Promoted=true;
                      Enabled=CanCancelApprovalForRecord;
                      PromotedIsBig=true;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.OnCancelSalesApprovalRequest(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the sales document. The field can be filled automatically or manually and can be set up to be invisible.;
                ApplicationArea=#All;
                SourceExpr="No.";
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               if AssistEdit(xRec) then
                                 CurrPage.UPDATE;
                             END;

                ImplicitType=Code20 }

    { 41  ;2   ;Field     ;
                Name=Sell-to Customer No.;
                CaptionML=ENU=Customer No.;
                ToolTipML=ENU=Specifies the number of the customer associated with the sales return.;
                ApplicationArea=#SalesReturnOrder;
                NotBlank=true;
                SourceExpr="Sell-to Customer No.";
                Importance=Additional;
                OnValidate=BEGIN
                             SelltoCustomerNoOnAfterValidate(Rec,xRec);
                             CurrPage.UPDATE;
                           END;

                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name=Sell-to Customer Name;
                CaptionML=ENU=Customer Name;
                ToolTipML=ENU=Specifies the name of the customer.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Sell-to Customer Name";
                Importance=Promoted;
                OnValidate=BEGIN
                             SelltoCustomerNoOnAfterValidate(Rec,xRec);

                             if ApplicationAreaSetup.IsFoundationEnabled then
                               SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;

                ImplicitType=Text50;
                ShowMandatory=TRUE }

    { 35  ;2   ;Group     ;
                Name=Sell-to;
                CaptionML=ENU=Sell-to;
                GroupType=Group }

    { 65  ;3   ;Field     ;
                Name=Sell-to Address;
                CaptionML=ENU=Address;
                ToolTipML=ENU=Specifies the customer's address.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Sell-to Address";
                Importance=Additional;
                ImplicitType=Text50 }

    { 67  ;3   ;Field     ;
                Name=Sell-to Address 2;
                CaptionML=ENU=Address 2;
                ToolTipML=ENU=Specifies an additional part of the customer's address.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Sell-to Address 2";
                Importance=Additional;
                ImplicitType=Text50 }

    { 70  ;3   ;Field     ;
                Name=Sell-to Post Code;
                CaptionML=ENU=Post Code;
                ToolTipML=ENU=Specifies the postal code of the customer's address.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Sell-to Post Code";
                Importance=Additional;
                ImplicitType=Code20 }

    { 69  ;3   ;Field     ;
                Name=Sell-to City;
                CaptionML=ENU=City;
                ToolTipML=ENU=Specifies the city of the customer's address.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Sell-to City";
                Importance=Additional;
                ImplicitType=Text30 }

    { 117 ;3   ;Field     ;
                Name=Sell-to Contact No.;
                CaptionML=ENU=Contact No.;
                ToolTipML=ENU=Specifies the number of the contact person at the customer.;
                ApplicationArea=#Advanced;
                SourceExpr="Sell-to Contact No.";
                Importance=Additional;
                OnValidate=BEGIN
                             if GETFILTER("Sell-to Contact No.") = xRec."Sell-to Contact No." then
                               if "Sell-to Contact No." <> xRec."Sell-to Contact No." then
                                 SETRANGE("Sell-to Contact No.");
                           END;

                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name=Sell-to Contact;
                CaptionML=ENU=Contact;
                ToolTipML=ENU=Specifies the name of the contact person at the customer.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Sell-to Contact";
                Editable="Sell-to Customer No." <> '';
                ImplicitType=Text50 }

    { 39  ;2   ;Field     ;
                Name=Document Date;
                ToolTipML=ENU=Specifies the date when the document was created.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Document Date";
                Importance=Additional;
                ImplicitType=Date }

    { 12  ;2   ;Field     ;
                Name=Posting Date;
                ToolTipML=ENU=Specifies the date when the sales document was posted.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Posting Date";
                Importance=Promoted;
                ImplicitType=Date }

    { 125 ;2   ;Field     ;
                Name=Order Date;
                ToolTipML=ENU=Specifies the date when the order was created.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Order Date";
                Importance=Promoted;
                ImplicitType=Date;
                QuickEntry=FALSE }

    { 58  ;2   ;Field     ;
                Name=External Document No.;
                ToolTipML=ENU=Specifies the number that the customer uses in their own system to refer to this sales document.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="External Document No.";
                Importance=Promoted;
                ImplicitType=Code35 }

    { 147 ;2   ;Field     ;
                Name=No. of Archived Versions;
                ToolTipML=ENU=Specifies the number of archived versions for this document.;
                ApplicationArea=#Advanced;
                SourceExpr="No. of Archived Versions";
                ImplicitType=Integer }

    { 10  ;2   ;Field     ;
                Name=Salesperson Code;
                ToolTipML=ENU=Specifies the name of the salesperson who is assigned to the customer.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Salesperson Code";
                Importance=Additional;
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;

                ImplicitType=Code20;
                QuickEntry=FALSE }

    { 104 ;2   ;Field     ;
                Name=Campaign No.;
                ToolTipML=ENU=Specifies the campaign number the document is linked to.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Campaign No.";
                ImplicitType=Code20 }

    { 107 ;2   ;Field     ;
                Name=Responsibility Center;
                ToolTipML=ENU=Specifies the code of the responsibility center that is associated with the user, company, or customer.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Responsibility Center";
                ImplicitType=Code10 }

    { 141 ;2   ;Field     ;
                Name=Assigned User ID;
                ToolTipML=ENU=Specifies the ID of the user who is responsible for the document.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Assigned User ID";
                ImplicitType=Code50 }

    { 5   ;2   ;Field     ;
                Name=Job Queue Status;
                ToolTipML=ENU=Specifies the status of a job queue entry or task that handles the posting of sales return orders.;
                ApplicationArea=#All;
                SourceExpr="Job Queue Status";
                Importance=Additional;
                Visible=JobQueueUsed;
                ImplicitType=Option }

    { 110 ;2   ;Field     ;
                Name=Status;
                ToolTipML=ENU=Specifies whether the document is open, waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.;
                ApplicationArea=#Advanced;
                SourceExpr=Status;
                Importance=Promoted;
                ImplicitType=Option;
                QuickEntry=FALSE }

    { 48  ;1   ;Part      ;
                Name=SalesLines;
                ApplicationArea=#SalesReturnOrder;
                SubPageLink="Document No."=FIELD("No.");
                PagePartID="Sales Return Order Subform";
                Enabled="Sell-to Customer No." <> '';
                Editable="Sell-to Customer No." <> '';
                PartType=Page;
                UpdatePropagation=Both }

    { 1905885101;1;Group  ;
                Name=Invoice Details;
                CaptionML=ENU=Invoice Details;
                GroupType=Group }

    { 91  ;2   ;Field     ;
                Name=Currency Code;
                ToolTipML=ENU=Specifies the currency that is used on the entry.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               if "Posting Date" <> 0D then
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               else
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               if ChangeExchangeRate.RUNMODAL = ACTION::OK then begin
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               end;
                               CLEAR(ChangeExchangeRate);
                             END;

                ImplicitType=Code10 }

    { 100 ;2   ;Field     ;
                Name=Prices Including VAT;
                ToolTipML=ENU=Specifies if the Unit Price and Line Amount fields on document lines should be shown with or without VAT.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;

                ImplicitType=Boolean }

    { 137 ;2   ;Field     ;
                Name=VAT Bus. Posting Group;
                ToolTipML=ENU=Specifies the customer's VAT specification to link transactions made for this customer to.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="VAT Bus. Posting Group";
                ImplicitType=Code20 }

    { 44  ;2   ;Field     ;
                Name=Transaction Type;
                ToolTipML=ENU=Specifies the type of transaction that the sales document represents, for the purpose of reporting to INTRASTAT.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Transaction Type";
                ImplicitType=Code10 }

    { 74  ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;

                ImplicitType=Code20 }

    { 78  ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;

                ImplicitType=Code20 }

    { 96  ;2   ;Field     ;
                Name=Shipment Date;
                ToolTipML=ENU=Specifies when items on the document are shipped or were shipped. A shipment date is usually calculated from a requested delivery date plus lead time.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Shipment Date";
                Importance=Promoted;
                ImplicitType=Date }

    { 14  ;2   ;Field     ;
                Name=Applies-to Doc. Type;
                ToolTipML=ENU=Specifies the type of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Applies-to Doc. Type";
                Importance=Promoted;
                ImplicitType=Option }

    { 16  ;2   ;Field     ;
                Name=Applies-to Doc. No.;
                ToolTipML=ENU=Specifies the number of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Applies-to Doc. No.";
                Importance=Promoted;
                ImplicitType=Code20 }

    { 94  ;2   ;Field     ;
                Name=Applies-to ID;
                ToolTipML=ENU=Specifies the ID of entries that will be applied to when you choose the Apply Entries action.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Applies-to ID";
                ImplicitType=Code50 }

    { 1906801201;1;Group  ;
                Name=Shipping and Billing;
                CaptionML=ENU=Shipping and Billing;
                GroupType=Group }

    { 47  ;2   ;Group     ;
                Name=Shipment Method;
                CaptionML=ENU=Shipment Method;
                GroupType=Group }

    { 45  ;3   ;Field     ;
                Name=Shipping Agent Code;
                CaptionML=ENU=Agent;
                ToolTipML=ENU=Specifies which shipping agent is used to transport the items on the sales document to the customer.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Shipping Agent Code";
                Importance=Additional;
                ImplicitType=Code10 }

    { 43  ;3   ;Field     ;
                Name=Shipping Agent Service Code;
                CaptionML=ENU=Agent Service;
                ToolTipML=ENU=Specifies which shipping agent service is used to transport the items on the sales document to the customer.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Shipping Agent Service Code";
                Importance=Additional;
                ImplicitType=Code10 }

    { 4   ;3   ;Field     ;
                Name=Package Tracking No.;
                ToolTipML=ENU=Specifies the shipping agent's package number.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Package Tracking No.";
                Importance=Additional;
                ImplicitType=Text30 }

    { 18  ;2   ;Group     ;
                Name=Ship-to;
                CaptionML=ENU=Ship-to;
                GroupType=Group }

    { 50  ;3   ;Field     ;
                Name=Location Code;
                CaptionML=ENU=Location;
                ToolTipML=ENU=Specifies the location from where inventory items to the customer on the sales document are to be shipped by default.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Location Code";
                Importance=Promoted;
                ImplicitType=Code10 }

    { 32  ;3   ;Field     ;
                Name=Ship-to Name;
                CaptionML=ENU=Name;
                ToolTipML=ENU=Specifies the name that products on the sales document will be shipped to.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Ship-to Name";
                ImplicitType=Text50 }

    { 34  ;3   ;Field     ;
                Name=Ship-to Address;
                CaptionML=ENU=Address;
                ToolTipML=ENU=Specifies the address that products on the sales document will be shipped to.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Ship-to Address";
                ImplicitType=Text50 }

    { 36  ;3   ;Field     ;
                Name=Ship-to Address 2;
                CaptionML=ENU=Address 2;
                ToolTipML=ENU=Specifies an additional part of the shipping address.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Ship-to Address 2";
                ImplicitType=Text50 }

    { 83  ;3   ;Field     ;
                Name=Ship-to Post Code;
                CaptionML=ENU=Post Code;
                ToolTipML=ENU=Specifies the postal code of the shipping address.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Ship-to Post Code";
                ImplicitType=Code20 }

    { 38  ;3   ;Field     ;
                Name=Ship-to City;
                CaptionML=ENU=City;
                ToolTipML=ENU=Specifies the city of the shipping address.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Ship-to City";
                ImplicitType=Text30 }

    { 40  ;3   ;Field     ;
                Name=Ship-to Contact;
                CaptionML=ENU=Contact;
                ToolTipML=ENU=Specifies the name of the contact person at the shipping address.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Ship-to Contact";
                ImplicitType=Text50 }

    { 37  ;2   ;Group     ;
                Name=Bill-to;
                CaptionML=ENU=Bill-to;
                GroupType=Group }

    { 20  ;3   ;Field     ;
                Name=Bill-to Name;
                CaptionML=ENU=Name;
                ToolTipML=ENU=Specifies the customer to whom you will send the sales invoice, when different from the customer that you are selling to.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Bill-to Name";
                Importance=Promoted;
                OnValidate=BEGIN
                             if GETFILTER("Bill-to Customer No.") = xRec."Bill-to Customer No." then
                               if "Bill-to Customer No." <> xRec."Bill-to Customer No." then
                                 SETRANGE("Bill-to Customer No.");

                             if ApplicationAreaSetup.IsFoundationEnabled then
                               SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;

                ImplicitType=Text50 }

    { 22  ;3   ;Field     ;
                Name=Bill-to Address;
                CaptionML=ENU=Address;
                ToolTipML=ENU=Specifies the address of the customer that you will send the invoice to.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Bill-to Address";
                Importance=Additional;
                Enabled="Bill-to Customer No." <> "Sell-to Customer No.";
                Editable="Bill-to Customer No." <> "Sell-to Customer No.";
                ImplicitType=Text50 }

    { 24  ;3   ;Field     ;
                Name=Bill-to Address 2;
                CaptionML=ENU=Address 2;
                ToolTipML=ENU=Specifies an additional part of the billing address.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Bill-to Address 2";
                Importance=Additional;
                Enabled="Bill-to Customer No." <> "Sell-to Customer No.";
                Editable="Bill-to Customer No." <> "Sell-to Customer No.";
                ImplicitType=Text50 }

    { 75  ;3   ;Field     ;
                Name=Bill-to Post Code;
                CaptionML=ENU=Post Code;
                ToolTipML=ENU=Specifies the postal code of the billing address.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Bill-to Post Code";
                Importance=Additional;
                Enabled="Bill-to Customer No." <> "Sell-to Customer No.";
                Editable="Bill-to Customer No." <> "Sell-to Customer No.";
                ImplicitType=Code20 }

    { 26  ;3   ;Field     ;
                Name=Bill-to City;
                CaptionML=ENU=City;
                ToolTipML=ENU=Specifies the city of the billing address.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Bill-to City";
                Importance=Additional;
                Enabled="Bill-to Customer No." <> "Sell-to Customer No.";
                Editable="Bill-to Customer No." <> "Sell-to Customer No.";
                ImplicitType=Text30 }

    { 128 ;3   ;Field     ;
                Name=Bill-to Contact No.;
                CaptionML=ENU=Contact No.;
                ToolTipML=ENU=Specifies the number of the contact person at the billing address.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Bill-to Contact No.";
                Importance=Additional;
                Enabled="Bill-to Customer No." <> "Sell-to Customer No.";
                Editable="Bill-to Customer No." <> "Sell-to Customer No.";
                ImplicitType=Code20 }

    { 28  ;3   ;Field     ;
                Name=Bill-to Contact;
                CaptionML=ENU=Contact;
                ToolTipML=ENU=Specifies the name of the contact person at the billing address.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Bill-to Contact";
                ImplicitType=Text50 }

    { 1907468901;1;Group  ;
                Name=Foreign Trade;
                CaptionML=ENU=Foreign Trade }

    { 42  ;2   ;Field     ;
                Name=EU 3-Party Trade;
                ToolTipML=ENU=Specifies if the sales document is part of a three-party trade.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="EU 3-Party Trade";
                ImplicitType=Boolean }

    { 89  ;2   ;Field     ;
                Name=Transaction Specification;
                ToolTipML=ENU=Specifies a code for the sales document's transaction specification, for the purpose of reporting to INTRASTAT.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Transaction Specification";
                ImplicitType=Code10 }

    { 46  ;2   ;Field     ;
                Name=Transport Method;
                ToolTipML=ENU=Specifies the transport method, for the purpose of reporting to INTRASTAT.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Transport Method";
                ImplicitType=Code10 }

    { 85  ;2   ;Field     ;
                Name=Exit Point;
                ToolTipML=ENU=Specifies the point of exit through which you ship the items out of your country/region, for reporting to Intrastat.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Exit Point";
                ImplicitType=Code10 }

    { 87  ;2   ;Field     ;
                Name=Area;
                ToolTipML=ENU=Specifies the area of the customer's address, for the purpose of reporting to INTRASTAT.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr=Area;
                ImplicitType=Code10 }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 19  ;1   ;Part      ;
                Name=Part19;
                ApplicationArea=#SalesReturnOrder;
                SubPageLink="Table ID"=CONST(36),
                            "Document Type"=FIELD("Document Type"),
                            "Document No."=FIELD("No.");
                PagePartID="Pending Approval FactBox";
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1903720907;1;Part   ;
                Name=Part1903720907;
                ApplicationArea=#SalesReturnOrder;
                SubPageLink="No."=FIELD("Sell-to Customer No.");
                PagePartID="Sales Hist. Sell-to FactBox";
                PartType=Page }

    { 1907234507;1;Part   ;
                Name=Part1907234507;
                ApplicationArea=#SalesReturnOrder;
                SubPageLink="No."=FIELD("Sell-to Customer No.");
                PagePartID="Sales Hist. Bill-to FactBox";
                Visible=FALSE;
                PartType=Page }

    { 1902018507;1;Part   ;
                Name=Part1902018507;
                ApplicationArea=#SalesReturnOrder;
                SubPageLink="No."=FIELD("Bill-to Customer No.");
                PagePartID="Customer Statistics FactBox";
                Visible=FALSE;
                PartType=Page }

    { 1900316107;1;Part   ;
                Name=Part1900316107;
                ApplicationArea=#SalesReturnOrder;
                SubPageLink="No."=FIELD("Sell-to Customer No.");
                PagePartID="Customer Details FactBox";
                PartType=Page }

    { 1906127307;1;Part   ;
                Name=Part1906127307;
                ApplicationArea=#SalesReturnOrder;
                SubPageLink="Document Type"=FIELD("Document Type"),
                            "Document No."=FIELD("Document No."),
                            "Line No."=FIELD("Line No.");
                PagePartID="Sales Line FactBox";
                ProviderID=48;
                Visible=FALSE;
                PartType=Page }

    { 1906354007;1;Part   ;
                Name=ApprovalFactBox;
                ApplicationArea=#SalesReturnOrder;
                PagePartID="Approval FactBox";
                Visible=FALSE;
                PartType=Page }

    { 1907012907;1;Part   ;
                Name=Part1907012907;
                ApplicationArea=#SalesReturnOrder;
                SubPageLink="No."=FIELD("No.");
                PagePartID="Resource Details FactBox";
                ProviderID=48;
                Visible=FALSE;
                PartType=Page }

    { 33  ;1   ;Part      ;
                Name=WorkflowStatus;
                ApplicationArea=#SalesReturnOrder;
                PagePartID="Workflow Status FactBox";
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=false }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ApplicationAreaSetup@1022 : Record "Application Area Setup";
      CopySalesDoc@1003 : Report "Copy Sales Document";
      MoveNegSalesLines@1009 : Report "Move Negative Sales Lines";
      CreateRetRelDocs@1000 : Report "Create Ret.-Related Documents";
      ReportPrint@1004 : Codeunit "Test Report-Print";
      DocPrint@1008 : Codeunit "Document-Print";
      UserMgt@1005 : Codeunit "User Setup Management";
      ArchiveManagement@1006 : Codeunit ArchiveManagement;
      SalesCalcDiscByType@1010 : Codeunit "Sales - Calc Discount By Type";
      ChangeExchangeRate@1002 : Page "Change Exchange Rate";
      JobQueueVisible@1001 : Boolean INDATASET;
      JobQueueUsed@1017 : Boolean INDATASET;
      DocNoVisible@1007 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1015 : Boolean;
      OpenApprovalEntriesExist@1014 : Boolean;
      ShowWorkflowStatus@1011 : Boolean;
      CanCancelApprovalForRecord@1012 : Boolean;
      DocumentIsPosted@1013 : Boolean;
      OpenPostedSalesReturnOrderQst@1016 : TextConst 'ENU=The return order has been posted and moved to the Posted Sales Credit Memos window.\\Do you want to open the posted credit memo?';

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    VAR
      SalesHeader@1001 : Record "Sales Header";
      InstructionMgt@1002 : Codeunit "Instruction Mgt.";
    BEGIN
      SendToPosting(PostingCodeunitID);

      DocumentIsPosted := not SalesHeader.GET("Document Type","No.");

      if "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting" then
        CurrPage.CLOSE;
      CurrPage.UPDATE(false);

      if PostingCodeunitID <> CODEUNIT::"Sales-Post (Yes/No)" then
        exit;

      if InstructionMgt.IsEnabled(InstructionMgt.ShowPostedConfirmationMessageCode) then
        ShowPostedConfirmationMessage;
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.SalesLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@19011896();
    BEGIN
      CurrPage.SalesLines.PAGE.UpdateForm(true);
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.SalesLines.PAGE.UpdateForm(true);
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.SalesLines.PAGE.UpdateForm(true);
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SetDocNoVisible@2();
    VAR
      DocumentNoVisibility@1001 : Codeunit DocumentNoVisibility;
      DocType@1000 : 'Quote,Order,Invoice,"Credit Memo","Blanket Order","Return Order",Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.SalesDocumentNoIsVisible(DocType::"Return Order","No.");
    END;

    [Internal]
    PROCEDURE ShowPreview@3();
    VAR
      SalesPostYesNo@1001 : Codeunit "Sales-Post (Yes/No)";
    BEGIN
      SalesPostYesNo.Preview(Rec);
    END;

    LOCAL PROCEDURE SetControlAppearance@6();
    VAR
      ApprovalsMgmt@1002 : Codeunit "Approvals Mgmt.";
    BEGIN
      JobQueueVisible := "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting";

      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@17();
    VAR
      ReturnOrderSalesHeader@1003 : Record "Sales Header";
      SalesCrMemoHeader@1000 : Record "Sales Cr.Memo Header";
      InstructionMgt@1002 : Codeunit "Instruction Mgt.";
    BEGIN
      if not ReturnOrderSalesHeader.GET("Document Type","No.") then begin
        SalesCrMemoHeader.SETRANGE("No.","Last Posting No.");
        if SalesCrMemoHeader.FINDFIRST then
          if InstructionMgt.ShowConfirm(OpenPostedSalesReturnOrderQst,InstructionMgt.ShowPostedConfirmationMessageCode) then
            PAGE.RUN(PAGE::"Posted Sales Credit Memo",SalesCrMemoHeader);
      end;
    END;

    [Integration]
    [External]
    LOCAL PROCEDURE OnBeforeStatisticsAction@5(VAR SalesHeader@1000 : Record "Sales Header";VAR Handled@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

