OBJECT Page 190 Incoming Documents
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Incoming Documents;
    SourceTable="Incoming Document";
    DataCaptionFields=Description;
    PageType=List;
    CardPageID="Incoming Document";
    RefreshOnActivate=true;
    PromotedActionCategoriesML=ENU=New,Process,Report,Release,Status,Show;
    OnOpenPage=BEGIN
                 IsDataExchTypeEditable := true;
                 HasCamera := CameraProvider.IsAvailable;
                 if HasCamera then
                   CameraProvider := CameraProvider.Create;
                 EnableReceiveFromOCR := WaitingToReceiveFromOCR;
                 UpdateOCRSetupVisibility;

                 FILTERGROUP(0);
                 SetProcessedDocumentsVisibility(GETFILTER(Processed) = FORMAT(true));
               END;

    OnAfterGetRecord=BEGIN
                       URL := GetURL;
                       StatusStyleText := GetStatusStyleText;
                     END;

    OnNewRecord=BEGIN
                  URL := '';
                  StatusStyleText := GetStatusStyleText;
                END;

    OnAfterGetCurrRecord=BEGIN
                           IsDataExchTypeEditable := not (Status in [Status::Created,Status::Posted]);
                           StatusStyleText := GetStatusStyleText;
                           SetControlVisibility;
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromIncomingDocument(Rec);
                           SetToProcessedIsEnable := not Processed;
                         END;

    ActionList=ACTIONS
    {
      { 22      ;    ;ActionContainer;
                      Name=New;
                      CaptionML=ENU=New;
                      ActionContainerType=NewDocumentItems }
      { 56      ;1   ;Action    ;
                      Name=CreateFromCamera;
                      CaptionML=ENU=Create from Camera;
                      ToolTipML=ENU=Create a new incoming document record by taking a picture.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=HasCamera;
                      PromotedIsBig=true;
                      Image=Camera;
                      OnAction=VAR
                                 CameraOptions@1000 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraOptions";
                               BEGIN
                                 if not HasCamera then
                                   exit;
                                 CameraOptions := CameraOptions.CameraOptions;
                                 CameraOptions.Quality := 100; // 100%
                                 CameraProvider.RequestPictureAsync(CameraOptions);
                               END;
                                }
      { 50      ;1   ;Action    ;
                      Name=CreateFromAttachment;
                      CaptionML=ENU=Create from File;
                      ToolTipML=ENU=Create a new incoming document record by first selecting the file it will be based on. The selected file will be attached.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=ExportAttachment;
                      OnAction=BEGIN
                                 CreateFromAttachment;
                               END;
                                }
      { 33      ;    ;ActionContainer;
                      Name=Related Information;
                      CaptionML=ENU=Related Information;
                      ActionContainerType=RelatedInformation }
      { 28      ;1   ;ActionGroup;
                      Name=ActionGroup28;
                      CaptionML=ENU=Setup }
      { 32      ;2   ;Action    ;
                      Name=Setup;
                      CaptionML=ENU=Setup;
                      ToolTipML=ENU=Define the general journal type to use when creating journal lines. You can also specify whether it requires approval to create documents and journal lines.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Incoming Documents Setup";
                      Image=Setup;
                      PromotedCategory=Category5 }
      { 42      ;2   ;Action    ;
                      Name=DataExchangeTypes;
                      CaptionML=ENU=Data Exchange Types;
                      ToolTipML=ENU=View the data exchange types that are available to convert electronic documents to documents in Dynamics 365.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Data Exchange Types";
                      Image=Entries;
                      PromotedCategory=Category5 }
      { 46      ;2   ;Action    ;
                      Name=OCRSetup;
                      CaptionML=ENU=OCR Service Setup;
                      ToolTipML=ENU=Open the OCR Service Setup window, for example to change credentials or enable the service.;
                      ApplicationArea=#Basic,#Suite;
                      Visible=ShowOCRSetup;
                      Image=ServiceSetup;
                      OnAction=BEGIN
                                 PAGE.RUNMODAL(PAGE::"OCR Service Setup");
                                 CurrPage.UPDATE;
                                 if CURRENTCLIENTTYPE = CLIENTTYPE::Web then
                                   if OCRIsEnabled then begin
                                     OnCloseIncomingDocumentsFromActions(Rec);
                                     CurrPage.CLOSE;
                                   end;
                               END;
                                }
      { 66      ;1   ;Action    ;
                      Name=ApprovalEntries;
                      AccessByPermission=TableData "Approval Entry"=R;
                      CaptionML=ENU=Approvals;
                      ToolTipML=ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                      ApplicationArea=#Suite;
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.OpenApprovalEntriesPage(RECORDID);
                               END;
                                }
      { 29      ;    ;ActionContainer;
                      Name=ActionContainer29;
                      ActionContainerType=ActionItems }
      { 54      ;1   ;ActionGroup;
                      Name=Process;
                      CaptionML=ENU=Process }
      { 45      ;2   ;Action    ;
                      Name=CreateDocument;
                      CaptionML=ENU=Create Document;
                      ToolTipML=ENU=Create a document, such as a purchase invoice, automatically by converting the electronic document that is attached to the incoming document record.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=AutomaticCreationActionsAreEnabled;
                      PromotedIsBig=true;
                      Image=CreateDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateDocument);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 51      ;2   ;Action    ;
                      Name=CreateGenJnlLine;
                      CaptionML=ENU=Create Journal Line;
                      ToolTipML=ENU=Create a journal line automatically by converting the electronic document that is attached to the incoming document record.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=AutomaticCreationActionsAreEnabled;
                      PromotedIsBig=true;
                      Image=TransferToGeneralJournal;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateGenJnlLineWithDataExchange);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 63      ;2   ;Action    ;
                      Name=CreateManually;
                      CaptionML=ENU=Create Manually;
                      ToolTipML=ENU=Create a document, such as a purchase invoice, manually from information in the file that is attached to the incoming document record.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=CreateCreditMemo;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateManually);
                               END;
                                }
      { 39      ;2   ;Action    ;
                      Name=AttachFile;
                      CaptionML=ENU=Attach File;
                      ToolTipML=ENU=Attach a file to the incoming document record.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Attach;
                      PromotedCategory=Process;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 ImportAttachment(Rec);
                               END;
                                }
      { 49      ;2   ;Action    ;
                      Name=TextToAccountMapping;
                      CaptionML=ENU=Map Text to Account;
                      ToolTipML=ENU=Create a mapping of text on incoming documents to identical text on specific debit, credit, and balancing accounts in the general ledger or on bank accounts so that the resulting document or journal lines are prefilled with the specified information.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Text-to-Account Mapping Wksh.";
                      Image=MapAccounts;
                      PromotedCategory=Category5 }
      { 53      ;1   ;ActionGroup;
                      Name=ActionGroup53;
                      CaptionML=ENU=Release }
      { 30      ;2   ;Action    ;
                      Name=Release;
                      CaptionML=ENU=Release;
                      ToolTipML=ENU=Release the incoming document to indicate that it has been approved by the incoming document approver. Note that this is not related to approval workflows.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Approve;
                      PromotedCategory=Category4;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::Release);
                               END;
                                }
      { 67      ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=ENU=Reopen;
                      ToolTipML=ENU=Reopen the incoming document record after it has been approved by the incoming document approver. Note that this is not related to approval workflows.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=ReOpen;
                      PromotedCategory=Category4;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::Reopen);
                               END;
                                }
      { 31      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=ENU=Reject;
                      ToolTipML=ENU=Reject to approve the incoming document. Note that this is not related to approval workflows.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Reject;
                      PromotedCategory=Category4;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::Reject);
                               END;
                                }
      { 68      ;1   ;ActionGroup;
                      Name=Status;
                      CaptionML=ENU=Status }
      { 65      ;2   ;Action    ;
                      Name=SetToProcessed;
                      CaptionML=ENU=Set To Processed;
                      ToolTipML=ENU=Set the incoming document to processed. It will then be shown in the Incoming Documents window when the Show All view is selected.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=SetToProcessedIsEnable;
                      PromotedIsBig=true;
                      Image=Archive;
                      PromotedCategory=Category5;
                      Scope=Repeater;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record "Incoming Document";
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(IncomingDocument);
                                 IncomingDocument.MODIFYALL(Processed,true);
                               END;
                                }
      { 64      ;2   ;Action    ;
                      Name=SetToUnprocessed;
                      CaptionML=ENU=Set To Unprocessed;
                      ToolTipML=ENU=Set the incoming document to unprocessed. It will then be shown in the Incoming Documents window when the Show Unprocessed view is selected.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=NOT SetToProcessedIsEnable;
                      PromotedIsBig=true;
                      Image=ReOpen;
                      PromotedCategory=Category5;
                      Scope=Repeater;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record "Incoming Document";
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(IncomingDocument);
                                 IncomingDocument.MODIFYALL(Processed,false);
                               END;
                                }
      { 61      ;1   ;ActionGroup;
                      Name=Request Approval;
                      CaptionML=ENU=Request Approval;
                      Image=SendApprovalRequest }
      { 60      ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=ENU=Send A&pproval Request;
                      ToolTipML=ENU=Request approval of the incoming document. You can send an approval request as part of a workflow if this has been set up in your organization.;
                      ApplicationArea=#Suite;
                      Enabled=NOT OpenApprovalEntriesExist;
                      Image=SendApprovalRequest;
                      Scope=Repeater;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 TestReadyForApproval;
                                 if ApprovalsMgmt.CheckIncomingDocApprovalsWorkflowEnabled(Rec) then
                                   ApprovalsMgmt.OnSendIncomingDocForApproval(Rec);
                               END;
                                }
      { 59      ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=ENU=Cancel Approval Re&quest;
                      ToolTipML=ENU=Cancel requesting approval of the incoming document.;
                      ApplicationArea=#Suite;
                      Enabled=CanCancelApprovalForRecord;
                      Image=CancelApprovalRequest;
                      Scope=Repeater;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.OnCancelIncomingDocApprovalRequest(Rec);
                               END;
                                }
      { 57      ;1   ;ActionGroup;
                      Name=Incoming Documents;
                      CaptionML=ENU=Incoming Documents }
      { 58      ;2   ;Action    ;
                      Name=OpenDocument;
                      CaptionML=ENU=Open Record;
                      ToolTipML=ENU=Open the document, journal line, or entry that the incoming document is linked to.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewDetails;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 ShowNAVRecord;
                               END;
                                }
      { 40      ;2   ;Action    ;
                      Name=RemoveReferencedRecord;
                      CaptionML=ENU=Remove Reference to Record;
                      ToolTipML=ENU=Remove the link that exists from the incoming document to a document, journal line, or entry.;
                      ApplicationArea=#Basic,#Suite;
                      PromotedIsBig=true;
                      Image=ClearLog;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 RemoveReferencedRecords;
                               END;
                                }
      { 55      ;2   ;Action    ;
                      Name=Navigate;
                      CaptionML=ENU=Navigate;
                      ToolTipML=ENU=Find all entries and documents that exist for the document number and posting date on the selected entry or document.;
                      ApplicationArea=#Basic,#Suite;
                      PromotedIsBig=true;
                      Image=Navigate;
                      Scope=Repeater;
                      OnAction=VAR
                                 NavigatePage@1000 : Page Navigate;
                               BEGIN
                                 TESTFIELD(Posted);
                                 NavigatePage.SetDoc("Posting Date","Document No.");
                                 NavigatePage.RUN;
                               END;
                                }
      { 52      ;2   ;ActionGroup;
                      Name=Document;
                      CaptionML=ENU=Record;
                      Visible=FALSE;
                      Enabled=FALSE;
                      Image=Document }
      { 23      ;3   ;Action    ;
                      Name=Journal;
                      CaptionML=ENU=Journal Line;
                      ToolTipML=ENU=Open the record that the incoming document is linked to.;
                      ApplicationArea=#Advanced;
                      Image=Journal;
                      Scope=Repeater;
                      OnAction=VAR
                                 GenJournalBatch@1001 : Record "Gen. Journal Batch";
                                 GenJnlManagement@1002 : Codeunit GenJnlManagement;
                               BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateGenJnlLine);
                                 IncomingDocumentsSetup.Fetch;
                                 GenJournalBatch.GET(IncomingDocumentsSetup."General Journal Template Name",IncomingDocumentsSetup."General Journal Batch Name");
                                 GenJnlManagement.TemplateSelectionFromBatch(GenJournalBatch);
                               END;
                                }
      { 26      ;3   ;Action    ;
                      Name=PurchaseInvoice;
                      CaptionML=ENU=Purchase Invoice;
                      ToolTipML=ENU=Open the record that the incoming document is linked to.;
                      ApplicationArea=#Advanced;
                      Image=Purchase;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreatePurchInvoice);
                               END;
                                }
      { 27      ;3   ;Action    ;
                      Name=PurchaseCreditMemo;
                      CaptionML=ENU=Purchase Credit Memo;
                      ToolTipML=ENU=Open the record that the incoming document is linked to.;
                      ApplicationArea=#Advanced;
                      Image=CreditMemo;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreatePurchCreditMemo);
                               END;
                                }
      { 24      ;3   ;Action    ;
                      Name=SalesInvoice;
                      CaptionML=ENU=Sales Invoice;
                      ToolTipML=ENU=Open the record that the incoming document is linked to.;
                      ApplicationArea=#Advanced;
                      Image=Sales;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateSalesInvoice);
                               END;
                                }
      { 25      ;3   ;Action    ;
                      Name=SalesCreditMemo;
                      CaptionML=ENU=Sales Credit Memo;
                      ToolTipML=ENU=Open the record that the incoming document is linked to.;
                      ApplicationArea=#Advanced;
                      Image=CreditMemo;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateSalesCreditMemo);
                               END;
                                }
      { 44      ;1   ;ActionGroup;
                      Name=OCR;
                      CaptionML=ENU=OCR }
      { 41      ;2   ;Action    ;
                      Name=SetReadyForOCR;
                      CaptionML=ENU=Send to Job Queue;
                      ToolTipML=ENU=Set the incoming document to be sent to its recipient as soon as possible.;
                      ApplicationArea=#Basic,#Suite;
                      Visible=OCRServiceIsEnabled;
                      Image=Translation;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::SetReadyForOcr);
                               END;
                                }
      { 43      ;2   ;Action    ;
                      Name=UndoSetReadyForOCR;
                      CaptionML=ENU=Remove from Job Queue;
                      ToolTipML=ENU=Remove the scheduled processing of this record from the job queue.;
                      ApplicationArea=#Basic,#Suite;
                      Visible=OCRServiceIsEnabled;
                      Image=Translation;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::UndoReadyForOcr);
                               END;
                                }
      { 12      ;2   ;Action    ;
                      Name=SendToOcr;
                      CaptionML=ENU=Send to OCR Service;
                      ToolTipML=ENU=Send the attached PDF or image file to the OCR service immediately.;
                      ApplicationArea=#Basic,#Suite;
                      Visible=OCRServiceIsEnabled;
                      Image=Translations;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::SendToOcr);
                               END;
                                }
      { 47      ;2   ;Action    ;
                      Name=ReceiveFromOCR;
                      CaptionML=ENU=Receive from OCR Service;
                      ToolTipML=ENU=Get any electronic documents that are ready to receive from the OCR service.;
                      ApplicationArea=#Basic,#Suite;
                      Visible=OCRServiceIsEnabled;
                      Enabled=EnableReceiveFromOCR;
                      PromotedIsBig=true;
                      Image=Import;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"OCR - Receive from Service");
                               END;
                                }
      { 73      ;1   ;ActionGroup;
                      Name=Set View;
                      CaptionML=ENU=Set View }
      { 71      ;2   ;Action    ;
                      Name=ShowAll;
                      CaptionML=ENU=Show All;
                      ToolTipML=ENU=Show both processed and non-processed incoming documents.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=NOT ShowAllDocsIsEnable;
                      PromotedIsBig=true;
                      Image=AllLines;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 SetProcessedDocumentsVisibility(true);
                               END;
                                }
      { 72      ;2   ;Action    ;
                      Name=ShowUnprocessed;
                      CaptionML=ENU=Show Unprocessed;
                      ToolTipML=ENU=Show only unprocessed incoming documents.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=ShowAllDocsIsEnable;
                      PromotedIsBig=true;
                      Image=Document;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 SetProcessedDocumentsVisibility(false);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=Entry No.;
                ToolTipML=ENU=Specifies the entry number. This field is intended only for internal use.;
                ApplicationArea=#Advanced;
                SourceExpr="Entry No.";
                Visible=FALSE;
                ImplicitType=Integer }

    { 4   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the description of the incoming document. You must enter the description manually.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 35  ;2   ;Field     ;
                Name=Vendor Name;
                ToolTipML=ENU=Specifies the name of the vendor on the incoming document. The field may be filled automatically.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Name";
                ImplicitType=Text50 }

    { 36  ;2   ;Field     ;
                Name=Document Date;
                ToolTipML=ENU=Specifies the date that is printed on the incoming document. This is the date when the vendor created the invoice, for example. The field may be filled automatically.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                ImplicitType=Date }

    { 37  ;2   ;Field     ;
                Name=Vendor Invoice No.;
                ToolTipML=ENU=Specifies the invoice number, if the document contains that number. The field may be filled automatically.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Invoice No.";
                ImplicitType=Code20 }

    { 38  ;2   ;Field     ;
                Name=Currency Code;
                ToolTipML=ENU=Specifies the currency code, if the document contains that code. The field may be filled automatically.;
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                ImplicitType=Code10 }

    { 48  ;2   ;Field     ;
                Name=Amount Incl. VAT;
                ToolTipML=ENU=Specifies the amount including VAT for the whole document. The field may be filled automatically.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount Incl. VAT";
                ImplicitType=Decimal }

    { 34  ;2   ;Field     ;
                Name=URL;
                ExtendedDatatype=URL;
                CaptionML=ENU=Link to Document;
                ToolTipML=ENU=Specifies the location of the file that represents the incoming document.;
                ApplicationArea=#Advanced;
                SourceExpr=URL;
                Importance=Additional;
                Visible=FALSE;
                OnValidate=BEGIN
                             SetURL(URL);
                           END;

                ImplicitType=Text }

    { 140 ;2   ;Field     ;
                Name=Data Exchange Type;
                ToolTipML=ENU=Specifies the data exchange type that is used to process the incoming document when it is an electronic document.;
                ApplicationArea=#Advanced;
                SourceExpr="Data Exchange Type";
                Visible=FALSE;
                Editable=IsDataExchTypeEditable;
                ImplicitType=Code20 }

    { 17  ;2   ;Field     ;
                Name=Status;
                DrillDown=true;
                ToolTipML=ENU=Specifies the status of the incoming document record.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Status;
                StyleExpr=StatusStyleText;
                OnDrillDown=VAR
                              ErrorMessage@1000 : Record "Error Message";
                            BEGIN
                              ErrorMessage.SetContext(RECORDID);
                              ErrorMessage.ShowErrorMessages(false);
                            END;

                ImplicitType=Option }

    { 62  ;2   ;Field     ;
                Name=OCR Status;
                ToolTipML=ENU=Specifies the status of the incoming document record when it takes part in the OCR process.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="OCR Status";
                OnDrillDown=VAR
                              OCRServiceSetup@1000 : Record "OCR Service Setup";
                              OCRServiceMgt@1001 : Codeunit "OCR Service Mgt.";
                            BEGIN
                              if not OCRServiceSetup.ISEMPTY then
                                HYPERLINK(OCRServiceMgt.GetStatusHyperLink(Rec));
                            END;

                ImplicitType=Option }

    { 5   ;2   ;Field     ;
                Name=Created Date-Time;
                ToolTipML=ENU=Specifies when the incoming document line was created.;
                ApplicationArea=#Advanced;
                SourceExpr="Created Date-Time";
                Visible=FALSE;
                ImplicitType=DateTime }

    { 6   ;2   ;Field     ;
                Name=Created By User Name;
                ToolTipML=ENU=Specifies the name of the user who created the incoming document line.;
                ApplicationArea=#Advanced;
                SourceExpr="Created By User Name";
                Visible=FALSE;
                ImplicitType=Code50 }

    { 8   ;2   ;Field     ;
                Name=Released Date-Time;
                ToolTipML=ENU=Specifies when the incoming document was approved.;
                ApplicationArea=#Advanced;
                SourceExpr="Released Date-Time";
                Visible=FALSE;
                ImplicitType=DateTime }

    { 9   ;2   ;Field     ;
                Name=Released By User Name;
                ToolTipML=ENU=Specifies the name of the user who approved the incoming document.;
                ApplicationArea=#Advanced;
                SourceExpr="Released By User Name";
                Visible=FALSE;
                ImplicitType=Code50 }

    { 10  ;2   ;Field     ;
                Name=Last Date-Time Modified;
                ToolTipML=ENU=Specifies when the incoming document line was last modified.;
                ApplicationArea=#Advanced;
                SourceExpr="Last Date-Time Modified";
                Visible=FALSE;
                ImplicitType=DateTime }

    { 11  ;2   ;Field     ;
                Name=Last Modified By User Name;
                ToolTipML=ENU=Specifies the name of the user who last modified the incoming document line.;
                ApplicationArea=#Advanced;
                SourceExpr="Last Modified By User Name";
                Visible=FALSE;
                ImplicitType=Code50 }

    { 13  ;2   ;Field     ;
                Name=Posted Date-Time;
                ToolTipML=ENU=Specifies when the related document or journal line was posted.;
                ApplicationArea=#Advanced;
                SourceExpr="Posted Date-Time";
                Visible=FALSE;
                ImplicitType=DateTime }

    { 14  ;2   ;Field     ;
                Name=Document Type;
                ToolTipML=ENU=Specifies the type of document or journal that the incoming document can be connected to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type";
                ImplicitType=Option }

    { 15  ;2   ;Field     ;
                Name=Document No.;
                ToolTipML=ENU=Specifies the number of the related document or journal line that is created for the incoming document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                ImplicitType=Code20 }

    { 16  ;2   ;Field     ;
                Name=Posting Date;
                ToolTipML=ENU=Specifies when the document or journal line that relates to the incoming document was posted.;
                ApplicationArea=#Advanced;
                SourceExpr="Posting Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 70  ;2   ;Field     ;
                Name=Processed;
                DrillDown=true;
                ToolTipML=ENU=Specifies if the incoming document has been processed.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Processed;
                StyleExpr=StatusStyleText;
                OnDrillDown=VAR
                              ErrorMessage@1000 : Record "Error Message";
                            BEGIN
                              ErrorMessage.SetContext(RECORDID);
                              ErrorMessage.ShowErrorMessages(false);
                            END;

                ImplicitType=Boolean }

    { 18  ;0   ;Container ;
                Name=Container18;
                ContainerType=FactBoxArea }

    { 7   ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                ApplicationArea=#Basic,#Suite;
                SubPageLink="Incoming Document Entry No."=FIELD("Entry No.");
                PagePartID="Incoming Doc. Attach. FactBox";
                PartType=Page;
                ShowFilter=false }

    { 19  ;1   ;Part      ;
                Name=Part19;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

    { 20  ;1   ;Part      ;
                Name=Part20;
                ApplicationArea=#Advanced;
                Visible=FALSE;
                PartType=System;
                SystemPartID=MyNotes }

    { 21  ;1   ;Part      ;
                Name=Part21;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

  }
  CODE
  {
    VAR
      IncomingDocumentsSetup@1001 : Record "Incoming Documents Setup";
      AutomaticProcessingQst@1005 : TextConst 'ENU=The Data Exchange Type field is filled on at least one of the selected Incoming Documents.\\Are you sure you want to create documents manually?';
      CameraProvider@1008 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraProvider" WITHEVENTS RUNONCLIENT;
      HasCamera@1003 : Boolean;
      URL@1006 : Text;
      StatusStyleText@1004 : Text;
      MultiSelectAction@1002 : 'CreateGenJnlLine,CreatePurchInvoice,CreatePurchCreditMemo,CreateSalesInvoice,CreateSalesCreditMemo,Release,Reopen,Reject,CreateDocument,SetReadyForOcr,UndoReadyForOcr,SendToOcr,CreateGenJnlLineWithDataExchange,CreateManually';
      IsDataExchTypeEditable@1000 : Boolean;
      OpenApprovalEntriesExist@1009 : Boolean;
      EnableReceiveFromOCR@1007 : Boolean;
      CanCancelApprovalForRecord@1010 : Boolean;
      ShowOCRSetup@1011 : Boolean;
      OCRServiceIsEnabled@1012 : Boolean;
      AutomaticCreationActionsAreEnabled@1013 : Boolean;
      SetToProcessedIsEnable@1014 : Boolean;
      ShowAllDocsIsEnable@1022 : Boolean;

    LOCAL PROCEDURE IncomingDocumentMultiSelectAction@10(ActionName@1000 : Option);
    VAR
      IncomingDocument@1001 : Record "Incoming Document";
      ReleaseIncomingDocument@1002 : Codeunit "Release Incoming Document";
    BEGIN
      if not AskUserPermission(ActionName) then
        exit;

      CurrPage.SETSELECTIONFILTER(IncomingDocument);
      if IncomingDocument.FINDSET then
        repeat
          case ActionName of
            MultiSelectAction::CreateDocument:
              IncomingDocument.CreateDocumentWithDataExchange;
            MultiSelectAction::CreateManually:
              IncomingDocument.CreateManually;
            MultiSelectAction::CreateGenJnlLine:
              IncomingDocument.CreateGenJnlLine;
            MultiSelectAction::CreateGenJnlLineWithDataExchange:
              IncomingDocument.CreateGeneralJournalLineWithDataExchange;
            MultiSelectAction::CreatePurchInvoice:
              IncomingDocument.CreatePurchInvoice;
            MultiSelectAction::CreatePurchCreditMemo:
              IncomingDocument.CreatePurchCreditMemo;
            MultiSelectAction::CreateSalesInvoice:
              IncomingDocument.CreateSalesInvoice;
            MultiSelectAction::CreateSalesCreditMemo:
              IncomingDocument.CreateSalesCreditMemo;
            MultiSelectAction::Release:
              ReleaseIncomingDocument.PerformManualRelease(IncomingDocument);
            MultiSelectAction::Reopen:
              ReleaseIncomingDocument.PerformManualReopen(IncomingDocument);
            MultiSelectAction::Reject:
              ReleaseIncomingDocument.PerformManualReject(IncomingDocument);
            MultiSelectAction::SetReadyForOcr:
              IncomingDocument.SendToJobQueue(false);
            MultiSelectAction::UndoReadyForOcr:
              IncomingDocument.RemoveFromJobQueue(false);
            MultiSelectAction::SendToOcr:
              IncomingDocument.SendToOCR(false);
          end;
        until IncomingDocument.NEXT = 0;
    END;

    LOCAL PROCEDURE AskUserPermission@7(ActionName@1000 : Option) : Boolean;
    VAR
      IncomingDocument@1001 : Record "Incoming Document";
    BEGIN
      CurrPage.SETSELECTIONFILTER(IncomingDocument);
      if ActionName in [MultiSelectAction::Reject,
                        MultiSelectAction::Release,
                        MultiSelectAction::SetReadyForOcr,
                        MultiSelectAction::CreateDocument]
      then
        exit(true);

      if Status <> Status::New then
        exit(true);

      IncomingDocument.SETFILTER("Data Exchange Type",'<>%1','');
      if IncomingDocument.ISEMPTY then
        exit(true);

      exit(CONFIRM(AutomaticProcessingQst));
    END;

    LOCAL PROCEDURE SetControlVisibility@9();
    VAR
      ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
    BEGIN
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      EnableReceiveFromOCR := WaitingToReceiveFromOCR;
      UpdateOCRSetupVisibility;
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
      AutomaticCreationActionsAreEnabled := "Data Exchange Type" <> '';
    END;

    [Integration(TRUE,TRUE)]
    [External]
    LOCAL PROCEDURE OnCloseIncomingDocumentsFromActions@3(VAR IncomingDocument@1000 : Record "Incoming Document");
    BEGIN
    END;

    LOCAL PROCEDURE SetProcessedDocumentsVisibility@1(ShowProcessedItems@1000 : Boolean);
    BEGIN
      FILTERGROUP(0);

      if ShowProcessedItems then begin
        SETRANGE(Processed);
        ShowAllDocsIsEnable := true;
      end else begin
        SETRANGE(Processed,false);
        ShowAllDocsIsEnable := false;
      end;
    END;

    LOCAL PROCEDURE UpdateOCRSetupVisibility@5();
    BEGIN
      OCRServiceIsEnabled := OCRIsEnabled;
      ShowOCRSetup := not OCRServiceIsEnabled;
    END;

    EVENT CameraProvider@1008::PictureAvailable@11(PictureName@1001 : Text;PictureFilePath@1000 : Text);
    BEGIN
      CreateIncomingDocumentFromServerFile(PictureName,PictureFilePath);
    END;

    BEGIN
    END.
  }
}

