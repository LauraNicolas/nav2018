OBJECT Page 5859 Get Post.Doc-P.Cr.MemoLn Sbfrm
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Lines;
    LinksAllowed=false;
    SourceTable="Purch. Cr. Memo Line";
    PageType=ListPart;
    OnFindRecord=BEGIN
                   if FIND(Which) then begin
                     PurchCrMemoLine := Rec;
                     while true do begin
                       ShowRec := IsShowRec(Rec);
                       if ShowRec then
                         exit(true);
                       if NEXT(1) = 0 then begin
                         Rec := PurchCrMemoLine;
                         if FIND(Which) then
                           while true do begin
                             ShowRec := IsShowRec(Rec);
                             if ShowRec then
                               exit(true);
                             if NEXT(-1) = 0 then
                               exit(false);
                           end;
                       end;
                     end;
                   end;
                   exit(false);
                 END;

    OnNextRecord=VAR
                   RealSteps@1000 : Integer;
                   NextSteps@1001 : Integer;
                 BEGIN
                   if Steps = 0 then
                     exit;

                   PurchCrMemoLine := Rec;
                   repeat
                     NextSteps := NEXT(Steps / ABS(Steps));
                     ShowRec := IsShowRec(Rec);
                     if ShowRec then begin
                       RealSteps := RealSteps + NextSteps;
                       PurchCrMemoLine := Rec;
                     end;
                   until (NextSteps = 0) or (RealSteps = Steps);
                   Rec := PurchCrMemoLine;
                   FIND;
                   exit(RealSteps);
                 END;

    OnAfterGetRecord=BEGIN
                       DocumentNoHideValue := false;
                       DocumentNoOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1900206104;2 ;Action    ;
                      Name=Show Document;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Show Document;
                      ToolTipML=ENU=Open the document that the selected line exists on.;
                      ApplicationArea=#Suite;
                      Image=View;
                      OnAction=BEGIN
                                 ShowDocument;
                               END;
                                }
      { 1901652504;2 ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Suite;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 Dimensions;
                               END;
                                }
      { 1903098904;2 ;Action    ;
                      Name=Item &Tracking Lines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      ToolTipML=ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 ItemTrackingLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Document No.;
                Lookup=false;
                ToolTipML=ENU=Specifies the credit memo number.;
                ApplicationArea=#Suite;
                SourceExpr="Document No.";
                HideValue=DocumentNoHideValue;
                StyleExpr='Strong';
                ImplicitType=Code20 }

    { 36  ;2   ;Field     ;
                Name=Posting Date;
                CaptionML=ENU=Posting Date;
                ToolTipML=ENU=Specifies the posting date of the record.;
                ApplicationArea=#Suite;
                SourceExpr=PurchCrMemoHeader."Posting Date" }

    { 40  ;2   ;Field     ;
                Name=Expected Receipt Date;
                ToolTipML=ENU=Specifies the date the items were received.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Expected Receipt Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 4   ;2   ;Field     ;
                Name=Buy-from Vendor No.;
                ToolTipML=ENU=Specifies the name of the vendor who delivered the items.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Buy-from Vendor No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the line type.;
                ApplicationArea=#Suite;
                SourceExpr=Type;
                ImplicitType=Option }

    { 8   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies an item number that identifies the account number that identifies the general ledger account used when posting the line.;
                ApplicationArea=#Suite;
                SourceExpr="No.";
                ImplicitType=Code20 }

    { 28  ;2   ;Field     ;
                Name=Cross-Reference No.;
                ToolTipML=ENU=Specifies the cross-referenced item number. If you enter a cross reference between yours and your vendor's or customer's item number, then this number will override the standard item number when you enter the cross-reference number on a sales or purchase document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 10  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 30  ;2   ;Field     ;
                Name=Nonstock;
                ToolTipML=ENU=Specifies that this item is a nonstock item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Nonstock;
                Visible=FALSE;
                ImplicitType=Boolean }

    { 12  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies either the name of, or a description of, the item or general ledger account.;
                ApplicationArea=#Suite;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 42  ;2   ;Field     ;
                Name=Return Reason Code;
                ToolTipML=ENU=Specifies the code explaining why the item was returned.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Return Reason Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 18  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the code for the location where the credit memo line is registered.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 20  ;2   ;Field     ;
                Name=Bin Code;
                ToolTipML=ENU=Specifies the bin where the items are picked or put away.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Bin Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 14  ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 16  ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 24  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Suite;
                SourceExpr="Unit of Measure Code";
                ImplicitType=Code10 }

    { 22  ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the number of units of the item specified on the credit memo line.;
                ApplicationArea=#Suite;
                SourceExpr=Quantity;
                ImplicitType=Decimal }

    { 26  ;2   ;Field     ;
                Name=Unit of Measure;
                ToolTipML=ENU=Specifies the unit of measure for the item (bottle or piece, for example).;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Unit of Measure";
                Visible=FALSE;
                ImplicitType=Text10 }

    { 44  ;2   ;Field     ;
                Name=Unit Cost (LCY);
                ToolTipML=ENU=Specifies the unit cost of the item on the line.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 76  ;2   ;Field     ;
                Name=DirectUnitCost;
                CaptionML=ENU=Direct Unit Cost;
                ToolTipML=ENU="Specifies the direct unit cost. ";
                ApplicationArea=#SalesReturnOrder;
                SourceExpr=DirectUnitCost;
                AutoFormatType=2;
                AutoFormatExpr=PurchCrMemoHeader."Currency Code";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 74  ;2   ;Field     ;
                Name=LineAmount;
                CaptionML=ENU=Line Amount;
                ToolTipML=ENU=Specifies the net amount, excluding any invoice discount amount, that must be paid for products on the line.;
                ApplicationArea=#Suite;
                SourceExpr=LineAmount;
                AutoFormatType=1;
                AutoFormatExpr=PurchCrMemoHeader."Currency Code";
                ImplicitType=Decimal }

    { 80  ;2   ;Field     ;
                Name=Currency Code;
                CaptionML=ENU=Currency Code;
                ToolTipML=ENU=Specifies the code for the currency that amounts are shown in.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr=PurchCrMemoHeader."Currency Code";
                Visible=FALSE }

    { 82  ;2   ;Field     ;
                Name=Prices Including VAT;
                CaptionML=ENU=Prices Including VAT;
                ToolTipML=ENU=Specifies if the Unit Price and Line Amount fields on document lines should be shown with or without VAT.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr=PurchCrMemoHeader."Prices Including VAT";
                Visible=FALSE }

    { 46  ;2   ;Field     ;
                Name=Line Discount %;
                ToolTipML=ENU=Specifies the discount percentage that is granted for the item on the line.;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr="Line Discount %";
                ImplicitType=Decimal }

    { 48  ;2   ;Field     ;
                Name=Line Discount Amount;
                ToolTipML=ENU=Specifies the discount amount that is granted for the item on the line.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 52  ;2   ;Field     ;
                Name=Allow Invoice Disc.;
                ToolTipML=ENU=Specifies if the invoice line is included when the invoice discount is calculated.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 54  ;2   ;Field     ;
                Name=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount for the line.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 34  ;2   ;Field     ;
                Name=Job No.;
                ToolTipML=ENU=Specifies the number of the related job.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Job No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 68  ;2   ;Field     ;
                Name=Blanket Order No.;
                ToolTipML=ENU=Specifies the number of the blanket order that the record originates from.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Blanket Order No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 70  ;2   ;Field     ;
                Name=Blanket Order Line No.;
                ToolTipML=ENU=Specifies the number of the blanket order line that the record originates from.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE;
                ImplicitType=Integer }

    { 32  ;2   ;Field     ;
                Name=Appl.-to Item Entry;
                ToolTipML=ENU=Specifies the number of the item ledger entry that the document or journal line is applied -to.;
                ApplicationArea=#SalesReturnOrder;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE;
                ImplicitType=Integer }

  }
  CODE
  {
    VAR
      PurchCrMemoHeader@1006 : Record "Purch. Cr. Memo Hdr.";
      PurchCrMemoLine@1001 : Record "Purch. Cr. Memo Line";
      TempPurchCrMemoLine@1002 : TEMPORARY Record "Purch. Cr. Memo Line";
      DirectUnitCost@1007 : Decimal;
      LineAmount@1012 : Decimal;
      DocumentNoHideValue@19020538 : Boolean INDATASET;
      ShowRec@1000 : Boolean;

    LOCAL PROCEDURE IsFirstDocLine@2() : Boolean;
    BEGIN
      TempPurchCrMemoLine.RESET;
      TempPurchCrMemoLine.COPYFILTERS(Rec);
      TempPurchCrMemoLine.SETRANGE("Document No.","Document No.");
      if not TempPurchCrMemoLine.FINDFIRST then begin
        PurchCrMemoLine.COPYFILTERS(Rec);
        PurchCrMemoLine.SETRANGE("Document No.","Document No.");
        if not PurchCrMemoLine.FINDFIRST then
          exit(false);
        TempPurchCrMemoLine := PurchCrMemoLine;
        TempPurchCrMemoLine.INSERT;
      end;

      if "Document No." <> PurchCrMemoHeader."No." then
        PurchCrMemoHeader.GET("Document No.");

      DirectUnitCost := "Direct Unit Cost";
      LineAmount := "Line Amount";

      exit("Line No." = TempPurchCrMemoLine."Line No.");
    END;

    LOCAL PROCEDURE IsShowRec@3(PurchCrMemoLine2@1000 : Record "Purch. Cr. Memo Line") : Boolean;
    BEGIN
      with PurchCrMemoLine2 do begin
        if "Document No." <> PurchCrMemoHeader."No." then
          PurchCrMemoHeader.GET("Document No.");
        if PurchCrMemoHeader."Prepayment Credit Memo" then
          exit(false);
        exit(true);
      end;
    END;

    [External]
    PROCEDURE GetSelectedLine@1(VAR FromPurchCrMemoLine@1000 : Record "Purch. Cr. Memo Line");
    BEGIN
      FromPurchCrMemoLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(FromPurchCrMemoLine);
    END;

    LOCAL PROCEDURE ShowDocument@5();
    BEGIN
      if not PurchCrMemoHeader.GET("Document No.") then
        exit;
      PAGE.RUN(PAGE::"Posted Purchase Credit Memo",PurchCrMemoHeader);
    END;

    LOCAL PROCEDURE Dimensions@7();
    VAR
      FromPurchCrMemoLine@1003 : Record "Purch. Cr. Memo Line";
    BEGIN
      GetSelectedLine(FromPurchCrMemoLine);
      FromPurchCrMemoLine.ShowDimensions;
    END;

    LOCAL PROCEDURE ItemTrackingLines@8();
    VAR
      FromPurchCrMemoLine@1000 : Record "Purch. Cr. Memo Line";
    BEGIN
      GetSelectedLine(FromPurchCrMemoLine);
      FromPurchCrMemoLine.ShowItemTrackingLines;
    END;

    LOCAL PROCEDURE DocumentNoOnFormat@19001080();
    BEGIN
      if not IsFirstDocLine then
        DocumentNoHideValue := true;
    END;

    BEGIN
    END.
  }
}

