OBJECT Page 5935 Service Credit Memo
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Credit Memo;
    SourceTable="Service Header";
    SourceTableView=WHERE("Document Type"=FILTER("Credit Memo"));
    PageType=Document;
    RefreshOnActivate=true;
    OnOpenPage=BEGIN
                 SetSecurityFilterOnRespCenter;
                 if ("No." <> '') and ("Customer No." = '') then
                   DocumentIsPosted := (not GET("Document Type","No."));
               END;

    OnFindRecord=BEGIN
                   if FIND(Which) then
                     exit(true);

                   SETRANGE("No.");
                   exit(FIND(Which));
                 END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetServiceFilter;

                  if "No." = '' then
                    SetCustomerFromFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     CLEAR(ServLogMgt);
                     ServLogMgt.ServHeaderManualDelete(Rec);
                     exit(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       if not DocumentIsPosted then
                         exit(ConfirmCloseUnposted);
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 49      ;1   ;ActionGroup;
                      Name=&Cr. Memo;
                      CaptionML=ENU=&Cr. Memo;
                      Image=CreditMemo }
      { 51      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      ToolTipML=ENU=View statistical information, such as the value of posted entries, for the record.;
                      ApplicationArea=#Service;
                      Promoted=true;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CalcInvDiscForHeader;
                                 COMMIT;
                                 PAGE.RUNMODAL(PAGE::"Service Statistics",Rec);
                               END;
                                }
      { 52      ;2   ;Action    ;
                      Name=Card;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Card;
                      ToolTipML=ENU=View or change detailed information about the record on the document or journal line.;
                      ApplicationArea=#Service;
                      RunObject=Page "Customer Card";
                      RunPageLink="No."=FIELD("Customer No.");
                      Image=EditLines }
      { 53      ;2   ;Action    ;
                      Name=Co&mments;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Service;
                      RunObject=Page "Service Comment Sheet";
                      RunPageLink="Table Name"=CONST("Service Header"),
                                  "Table Subtype"=FIELD("Document Type"),
                                  "No."=FIELD("No."),
                                  Type=CONST(General);
                      Image=ViewComments }
      { 105     ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Enabled="No." <> '';
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 30      ;2   ;Action    ;
                      Name=Service Document Lo&g;
                      CaptionML=ENU=Service Document Lo&g;
                      ToolTipML=ENU=View a list of the service document changes that have been logged. The program creates entries in the window when, for example, the response time or service order status changed, a resource was allocated, a service order was shipped or invoiced, and so on. Each line in this window identifies the event that occurred to the service document. The line contains the information about the field that was changed, its old and new value, the date and time when the change took place, and the ID of the user who actually made the changes.;
                      ApplicationArea=#Service;
                      Image=Log;
                      OnAction=VAR
                                 TempServDocLog@1000 : TEMPORARY Record "Service Document Log";
                               BEGIN
                                 TempServDocLog.RESET;
                                 TempServDocLog.DELETEALL;
                                 TempServDocLog.CopyServLog(TempServDocLog."Document Type"::"Credit Memo","No.");

                                 TempServDocLog.RESET;
                                 TempServDocLog.SETCURRENTKEY("Change Date","Change Time");
                                 TempServDocLog.ASCENDING(false);

                                 PAGE.RUN(0,TempServDocLog);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 58      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 114     ;2   ;Action    ;
                      Name=Calculate Invoice Discount;
                      AccessByPermission=TableData "Cust. Invoice Disc."=R;
                      CaptionML=ENU=Calculate &Invoice Discount;
                      ToolTipML=ENU=Calculate the invoice discount that applies to the service order.;
                      ApplicationArea=#Service;
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                               END;
                                }
      { 121     ;2   ;Action    ;
                      Name=ApplyEntries;
                      ShortCutKey=Shift+F11;
                      Ellipsis=true;
                      CaptionML=ENU=Apply Entries;
                      ToolTipML=ENU=Select one or more ledger entries that you want to apply this record to so that the related posted documents are closed as paid or refunded.;
                      ApplicationArea=#Service;
                      Image=ApplyEntries;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Service Header Apply",Rec);
                               END;
                                }
      { 112     ;2   ;Action    ;
                      Name=Get St&d. Service Codes;
                      Ellipsis=true;
                      CaptionML=ENU=Get St&d. Service Codes;
                      ToolTipML=ENU="Insert service order lines that you have set up for recurring services. ";
                      ApplicationArea=#Service;
                      Image=ServiceCode;
                      OnAction=VAR
                                 StdServCode@1001 : Record "Standard Service Code";
                               BEGIN
                                 StdServCode.InsertServiceLines(Rec);
                               END;
                                }
      { 120     ;2   ;Action    ;
                      Name=Get Prepaid Contract E&ntries;
                      CaptionML=ENU=Get Prepaid Contract E&ntries;
                      ApplicationArea=#Prepayments;
                      Image=ContractPayment;
                      OnAction=BEGIN
                                 CLEAR(GetPrepaidTransactions);
                                 GetPrepaidTransactions.Initialize(Rec);
                                 GetPrepaidTransactions.RUNMODAL;
                                 CurrPage.UPDATE(false);
                               END;
                                }
      { 59      ;1   ;ActionGroup;
                      Name=P&osting;
                      CaptionML=ENU=P&osting;
                      Image=Post }
      { 60      ;2   ;Action    ;
                      Name=TestReport;
                      Ellipsis=true;
                      CaptionML=ENU=Test Report;
                      ToolTipML=ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                      ApplicationArea=#Service;
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintServiceHeader(Rec);
                               END;
                                }
      { 61      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=ENU=P&ost;
                      ToolTipML=ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                      ApplicationArea=#Service;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceHeader@1001 : Record "Service Header";
                                 ServPostYesNo@1000 : Codeunit "Service-Post (Yes/No)";
                                 InstructionMgt@1003 : Codeunit "Instruction Mgt.";
                                 PreAssignedNo@1002 : Code[20];
                               BEGIN
                                 PreAssignedNo := "No.";
                                 ServPostYesNo.PostDocument(Rec);

                                 DocumentIsPosted := not ServiceHeader.GET("Document Type","No.");

                                 if InstructionMgt.IsEnabled(InstructionMgt.ShowPostedConfirmationMessageCode) then
                                   ShowPostedConfirmationMessage(PreAssignedNo);
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=ENU=Preview Posting;
                      ToolTipML=ENU=Review the different types of entries that will be created when you post the document or journal.;
                      ApplicationArea=#Service;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 ServiceHeader@1001 : Record "Service Header";
                                 ServPostYesNo@1000 : Codeunit "Service-Post (Yes/No)";
                               BEGIN
                                 ServPostYesNo.PreviewDocument(Rec);
                                 DocumentIsPosted := not ServiceHeader.GET("Document Type","No.");
                               END;
                                }
      { 3       ;2   ;Action    ;
                      Name=PostAndSend;
                      Ellipsis=true;
                      CaptionML=ENU=Post and &Send;
                      ToolTipML=ENU=Finalize and prepare to send the document according to the customer's sending profile, such as attached to an email. The Send document to window opens first so you can confirm or select a sending profile.;
                      ApplicationArea=#Service;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostSendTo;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceHeader@1000 : Record "Service Header";
                               BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Service-Post and Send",Rec);
                                 DocumentIsPosted := not ServiceHeader.GET("Document Type","No.");
                               END;
                                }
      { 62      ;2   ;Action    ;
                      Name=Post and &Print;
                      ShortCutKey=Shift+F9;
                      CaptionML=ENU=Post and &Print;
                      ToolTipML=ENU=Finalize and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.;
                      ApplicationArea=#Service;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServPostPrint@1000 : Codeunit "Service-Post+Print";
                               BEGIN
                                 ServPostPrint.PostDocument(Rec);
                               END;
                                }
      { 63      ;2   ;Action    ;
                      Name=Post &Batch;
                      Ellipsis=true;
                      CaptionML=ENU=Post &Batch;
                      ToolTipML=ENU=Post several documents at once. A report request window opens where you can specify which documents to post.;
                      ApplicationArea=#Service;
                      Image=PostBatch;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Batch Post Service Cr. Memos",true,true,Rec);
                                 CurrPage.UPDATE(false);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the service document you are creating.;
                ApplicationArea=#Service;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               if AssistEdit(xRec) then
                                 CurrPage.UPDATE;
                             END;

                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Customer No.;
                ToolTipML=ENU=Specifies the number of the customer who owns the items in the service document.;
                ApplicationArea=#Service;
                SourceExpr="Customer No.";
                OnValidate=BEGIN
                             CustomerNoOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 57  ;2   ;Field     ;
                Name=Contact No.;
                ToolTipML=ENU=Specifies the number of the contact to whom you will deliver the service.;
                ApplicationArea=#Service;
                SourceExpr="Contact No.";
                OnValidate=BEGIN
                             if GETFILTER("Contact No.") = xRec."Contact No." then
                               if "Contact No." <> xRec."Contact No." then
                                 SETRANGE("Contact No.");
                           END;

                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name=Name;
                ToolTipML=ENU=Specifies the name of the customer to whom the items on the document will be shipped.;
                ApplicationArea=#Service;
                SourceExpr=Name;
                ImplicitType=Text50 }

    { 65  ;2   ;Field     ;
                Name=Address;
                ToolTipML=ENU=Specifies the address of the customer to whom the service will be shipped.;
                ApplicationArea=#Service;
                SourceExpr=Address;
                ImplicitType=Text50 }

    { 67  ;2   ;Field     ;
                Name=Address 2;
                ToolTipML=ENU=Specifies additional address information.;
                ApplicationArea=#Service;
                SourceExpr="Address 2";
                ImplicitType=Text50 }

    { 70  ;2   ;Field     ;
                Name=Post Code;
                ToolTipML=ENU=Specifies the postal code of the address.;
                ApplicationArea=#Service;
                SourceExpr="Post Code";
                ImplicitType=Code20 }

    { 69  ;2   ;Field     ;
                Name=City;
                ToolTipML=ENU=Specifies the city of the address.;
                ApplicationArea=#Service;
                SourceExpr=City;
                ImplicitType=Text30 }

    { 8   ;2   ;Field     ;
                Name=Contact Name;
                ToolTipML=ENU=Specifies the name of the contact who will receive the service.;
                ApplicationArea=#Service;
                SourceExpr="Contact Name";
                ImplicitType=Text50 }

    { 12  ;2   ;Field     ;
                Name=Posting Date;
                ToolTipML=ENU=Specifies the date when the service document should be posted.;
                ApplicationArea=#Service;
                SourceExpr="Posting Date";
                ImplicitType=Date }

    { 39  ;2   ;Field     ;
                Name=Document Date;
                ToolTipML=ENU=Specifies the date when the service document was created.;
                ApplicationArea=#Service;
                SourceExpr="Document Date";
                ImplicitType=Date }

    { 10  ;2   ;Field     ;
                Name=Salesperson Code;
                ToolTipML=ENU=Specifies the code of the salesperson assigned to this service document.;
                ApplicationArea=#Service;
                SourceExpr="Salesperson Code";
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 107 ;2   ;Field     ;
                Name=Responsibility Center;
                ToolTipML=ENU=Specifies the code of the responsibility center associated with the user who created the service order.;
                ApplicationArea=#Service;
                SourceExpr="Responsibility Center";
                OnValidate=BEGIN
                             ResponsibilityCenterOnAfterVal;
                           END;

                ImplicitType=Code10 }

    { 111 ;2   ;Field     ;
                Name=Assigned User ID;
                ToolTipML=ENU=Specifies the ID of the user who is responsible for the document.;
                ApplicationArea=#Service;
                SourceExpr="Assigned User ID";
                ImplicitType=Code50 }

    { 48  ;1   ;Part      ;
                Name=ServLines;
                ApplicationArea=#Service;
                SubPageLink="Document No."=FIELD("No.");
                PagePartID="Service Credit Memo Subform";
                PartType=Page }

    { 1905885101;1;Group  ;
                Name=Invoicing;
                CaptionML=ENU=Invoicing }

    { 18  ;2   ;Field     ;
                Name=Bill-to Customer No.;
                ToolTipML=ENU=Specifies the number of the customer that you send or sent the invoice or credit memo to.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Customer No.";
                OnValidate=BEGIN
                             BilltoCustomerNoOnAfterValidat;
                           END;

                ImplicitType=Code20 }

    { 124 ;2   ;Field     ;
                Name=Bill-to Contact No.;
                ToolTipML=ENU=Specifies the number of the contact person at the customer's billing address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Contact No.";
                ImplicitType=Code20 }

    { 20  ;2   ;Field     ;
                Name=Bill-to Name;
                ToolTipML=ENU=Specifies the name of the customer that you send or sent the invoice or credit memo to.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Name";
                ImplicitType=Text50 }

    { 22  ;2   ;Field     ;
                Name=Bill-to Address;
                ToolTipML=ENU=Specifies the address of the customer to whom you will send the credit memo.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Address";
                ImplicitType=Text50 }

    { 24  ;2   ;Field     ;
                Name=Bill-to Address 2;
                ToolTipML=ENU=Specifies an additional line of the address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Address 2";
                ImplicitType=Text50 }

    { 75  ;2   ;Field     ;
                Name=Bill-to Post Code;
                ToolTipML=ENU=Specifies the postal code of the customer's billing address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Post Code";
                ImplicitType=Code20 }

    { 26  ;2   ;Field     ;
                Name=Bill-to City;
                ToolTipML=ENU=Specifies the city of the address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to City";
                ImplicitType=Text30 }

    { 28  ;2   ;Field     ;
                Name=Bill-to Contact;
                ToolTipML=ENU=Specifies the name of the contact person at the customer's billing address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Contact";
                ImplicitType=Text50 }

    { 74  ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;

                ImplicitType=Code20 }

    { 78  ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;

                ImplicitType=Code20 }

    { 131 ;2   ;Field     ;
                Name=Payment Terms Code;
                ToolTipML=ENU=Specifies the code that represents the service header payment terms, which are used to calculate the due date and payment discount date.;
                ApplicationArea=#Service;
                SourceExpr="Payment Terms Code";
                ImplicitType=Code10 }

    { 133 ;2   ;Field     ;
                Name=Due Date;
                ToolTipML=ENU=Specifies when the related invoice must be paid.;
                ApplicationArea=#Service;
                SourceExpr="Due Date";
                ImplicitType=Date }

    { 135 ;2   ;Field     ;
                Name=Payment Discount %;
                ToolTipML=ENU=Specifies the percentage of payment discount given, if the customer pays by the date entered in the Pmt. Discount Date field.;
                ApplicationArea=#Service;
                SourceExpr="Payment Discount %";
                ImplicitType=Decimal }

    { 137 ;2   ;Field     ;
                Name=Pmt. Discount Date;
                ToolTipML=ENU=Specifies the date on which the amount in the entry must be paid for a payment discount to be granted.;
                ApplicationArea=#Service;
                SourceExpr="Pmt. Discount Date";
                ImplicitType=Date }

    { 100 ;2   ;Field     ;
                Name=Prices Including VAT;
                ToolTipML=ENU=Specifies if the Unit Price and Line Amount fields on document lines should be shown with or without VAT.;
                ApplicationArea=#Service;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;

                ImplicitType=Boolean }

    { 1906801201;1;Group  ;
                Name=Shipping;
                CaptionML=ENU=Shipping }

    { 32  ;2   ;Field     ;
                Name=Ship-to Name;
                ToolTipML=ENU=Specifies the name of the customer to whom you will ship the service on the document.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Name";
                ImplicitType=Text50 }

    { 34  ;2   ;Field     ;
                Name=Ship-to Address;
                ToolTipML=ENU=Specifies the address that the items are shipped to.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Address";
                ImplicitType=Text50 }

    { 36  ;2   ;Field     ;
                Name=Ship-to Address 2;
                ToolTipML=ENU=Specifies an additional part of the ship-to address, in case it is a long address.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Address 2";
                ImplicitType=Text50 }

    { 83  ;2   ;Field     ;
                Name=Ship-to Post Code;
                ToolTipML=ENU=Specifies the postal code of the address.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Post Code";
                ImplicitType=Code20 }

    { 38  ;2   ;Field     ;
                Name=Ship-to City;
                ToolTipML=ENU=Specifies the city of the address that the items are shipped to.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to City";
                ImplicitType=Text30 }

    { 40  ;2   ;Field     ;
                Name=Ship-to Contact;
                ToolTipML=ENU=Specifies the name of the contact person at the place where the service should be shipped to.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Contact";
                ImplicitType=Text50 }

    { 80  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the code of the location (for example, warehouse or distribution center) of the items specified on the service item lines.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                ImplicitType=Code10 }

    { 1907468901;1;Group  ;
                Name=Foreign Trade;
                CaptionML=ENU=Foreign Trade }

    { 91  ;2   ;Field     ;
                Name=Currency Code;
                ToolTipML=ENU=Specifies the currency code for various amounts on the service lines.;
                ApplicationArea=#Advanced;
                SourceExpr="Currency Code";
                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               if ChangeExchangeRate.RUNMODAL = ACTION::OK then begin
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               end;
                               CLEAR(ChangeExchangeRate);
                             END;

                ImplicitType=Code10 }

    { 42  ;2   ;Field     ;
                Name=EU 3-Party Trade;
                ToolTipML=ENU=Specifies if the service document is part of a three-party trade.;
                ApplicationArea=#Service;
                SourceExpr="EU 3-Party Trade";
                ImplicitType=Boolean }

    { 44  ;2   ;Field     ;
                Name=Transaction Type;
                ToolTipML=ENU=Specifies the code for the transaction type assigned to the service document.;
                ApplicationArea=#Service;
                SourceExpr="Transaction Type";
                ImplicitType=Code10 }

    { 89  ;2   ;Field     ;
                Name=Transaction Specification;
                ToolTipML=ENU=Specifies the transaction specification code used on the service document.;
                ApplicationArea=#Service;
                SourceExpr="Transaction Specification";
                ImplicitType=Code10 }

    { 46  ;2   ;Field     ;
                Name=Transport Method;
                ToolTipML=ENU=Specifies the code for the transport method to be used for shipment.;
                ApplicationArea=#Service;
                SourceExpr="Transport Method";
                ImplicitType=Code10 }

    { 85  ;2   ;Field     ;
                Name=Exit Point;
                ToolTipML=ENU=Specifies the point of exit through which you ship the items out of your country/region, for reporting to Intrastat.;
                ApplicationArea=#Service;
                SourceExpr="Exit Point";
                ImplicitType=Code10 }

    { 87  ;2   ;Field     ;
                Name=Area;
                ToolTipML=ENU=Specifies the code for the area where the customer company is located.;
                ApplicationArea=#Service;
                SourceExpr=Area;
                ImplicitType=Code10 }

    { 1904409301;1;Group  ;
                Name=Application;
                CaptionML=ENU=Application }

    { 14  ;2   ;Field     ;
                Name=Applies-to Doc. Type;
                ToolTipML=ENU=Specifies the type of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                ApplicationArea=#Service;
                SourceExpr="Applies-to Doc. Type";
                ImplicitType=Option }

    { 16  ;2   ;Field     ;
                Name=Applies-to Doc. No.;
                ToolTipML=ENU=Specifies the number of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                ApplicationArea=#Service;
                SourceExpr="Applies-to Doc. No.";
                ImplicitType=Code20 }

    { 94  ;2   ;Field     ;
                Name=Applies-to ID;
                ToolTipML=ENU=Specifies the ID of entries that will be applied to when you choose the Apply Entries action.;
                ApplicationArea=#Service;
                SourceExpr="Applies-to ID";
                ImplicitType=Code50 }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1902018507;1;Part   ;
                Name=Part1902018507;
                ApplicationArea=#Service;
                SubPageLink="No."=FIELD("Bill-to Customer No.");
                PagePartID="Customer Statistics FactBox";
                Visible=TRUE;
                PartType=Page }

    { 1900316107;1;Part   ;
                Name=Part1900316107;
                ApplicationArea=#Service;
                SubPageLink="No."=FIELD("Customer No.");
                PagePartID="Customer Details FactBox";
                Visible=FALSE;
                PartType=Page }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      GetPrepaidTransactions@1006 : Report "Get Prepaid Contract Entries";
      ReportPrint@1004 : Codeunit "Test Report-Print";
      UserMgt@1005 : Codeunit "User Setup Management";
      ServLogMgt@1000 : Codeunit ServLogManagement;
      ChangeExchangeRate@1002 : Page "Change Exchange Rate";
      DocumentIsPosted@1001 : Boolean;
      OpenPostedServiceCrMemoQst@1003 : TextConst 'ENU=The credit memo has been posted and moved to the Posted Service Credit Memos window.\\Do you want to open the posted credit memo?';

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.ServLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE CustomerNoOnAfterValidate@19016267();
    BEGIN
      if GETFILTER("Customer No.") = xRec."Customer No." then
        if "Customer No." <> xRec."Customer No." then
          SETRANGE("Customer No.");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@19011896();
    BEGIN
      CurrPage.ServLines.PAGE.UpdateForm(true);
    END;

    LOCAL PROCEDURE ResponsibilityCenterOnAfterVal@19032024();
    BEGIN
      CurrPage.ServLines.PAGE.UpdateForm(true);
    END;

    LOCAL PROCEDURE BilltoCustomerNoOnAfterValidat@19044114();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@17(PreAssignedNo@1001 : Code[20]);
    VAR
      ServiceCrMemoHeader@1000 : Record "Service Cr.Memo Header";
      InstructionMgt@1002 : Codeunit "Instruction Mgt.";
    BEGIN
      ServiceCrMemoHeader.SETCURRENTKEY("Pre-Assigned No.");
      ServiceCrMemoHeader.SETRANGE("Pre-Assigned No.",PreAssignedNo);
      if ServiceCrMemoHeader.FINDFIRST then
        if InstructionMgt.ShowConfirm(OpenPostedServiceCrMemoQst,InstructionMgt.ShowPostedConfirmationMessageCode) then
          PAGE.RUN(PAGE::"Posted Service Credit Memo",ServiceCrMemoHeader);
    END;

    BEGIN
    END.
  }
}

