OBJECT Codeunit 1106 CostJnlManagement
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Cost Journal Template"=imd,
                TableData "Cost Journal Batch"=imd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      OpenFromBatch@1000 : Boolean;
      Text001@1001 : TextConst 'ENU=STANDARD';
      Text002@1002 : TextConst 'ENU=Standard Template';
      Text003@1003 : TextConst 'ENU=DEFAULT';
      Text004@1004 : TextConst 'ENU=Default Batch';

    [External]
    PROCEDURE TemplateSelection@1(VAR CostJnlLine@1000 : Record "Cost Journal Line";VAR JnlSelected@1001 : Boolean);
    VAR
      CostJnlTemplate@1002 : Record "Cost Journal Template";
    BEGIN
      JnlSelected := true;
      CostJnlTemplate.RESET;

      case CostJnlTemplate.COUNT of
        0:
          begin
            CostJnlTemplate.INIT;
            CostJnlTemplate.Name := Text001;
            CostJnlTemplate.Description := Text002;
            CostJnlTemplate.INSERT(true);
          end;
        1:
          CostJnlTemplate.FINDFIRST;
        else
          JnlSelected := PAGE.RUNMODAL(0,CostJnlTemplate) = ACTION::LookupOK;
      end;

      if JnlSelected then begin
        CostJnlLine.FILTERGROUP := 2;
        CostJnlLine.SETRANGE("Journal Template Name",CostJnlTemplate.Name);
        CostJnlLine.FILTERGROUP := 0;
        if OpenFromBatch then begin
          CostJnlLine."Journal Template Name" := '';
          PAGE.RUN(PAGE::"Cost Journal",CostJnlLine);
        end;
      end;
    END;

    [External]
    PROCEDURE TemplateSelectionFromBatch@15(VAR CostJnlBatch@1000 : Record "Cost Journal Batch");
    VAR
      CostJnlLine@1002 : Record "Cost Journal Line";
      CostJnlTemplate@1003 : Record "Cost Journal Template";
    BEGIN
      OpenFromBatch := true;
      CostJnlTemplate.GET(CostJnlBatch."Journal Template Name");
      CostJnlBatch.TESTFIELD(Name);

      CostJnlLine.FILTERGROUP := 2;
      CostJnlLine.SETRANGE("Journal Template Name",CostJnlTemplate.Name);
      CostJnlLine.FILTERGROUP := 0;

      CostJnlLine."Journal Template Name" := '';
      CostJnlLine."Journal Batch Name" := CostJnlBatch.Name;
      PAGE.RUN(PAGE::"Cost Journal",CostJnlLine);
    END;

    [External]
    PROCEDURE OpenJnl@2(VAR CostJnlBatchName@1000 : Code[10];VAR CostJnlLine@1001 : Record "Cost Journal Line");
    BEGIN
      CheckTemplateName(CostJnlLine.GETRANGEMAX("Journal Template Name"),CostJnlBatchName);
      CostJnlLine.FILTERGROUP := 2;
      CostJnlLine.SETRANGE("Journal Batch Name",CostJnlBatchName);
      CostJnlLine.FILTERGROUP := 0;
    END;

    [External]
    PROCEDURE OpenJnlBatch@6(VAR CostJnlBatch@1000 : Record "Cost Journal Batch");
    VAR
      CostJnlTemplate@1004 : Record "Cost Journal Template";
      CostJnlLine@1003 : Record "Cost Journal Line";
      JnlSelected@1001 : Boolean;
    BEGIN
      if CostJnlBatch.GETFILTER("Journal Template Name") <> '' then
        exit;
      CostJnlBatch.FILTERGROUP(2);
      if CostJnlBatch.GETFILTER("Journal Template Name") <> '' then begin
        CostJnlBatch.FILTERGROUP(0);
        exit;
      end;
      CostJnlBatch.FILTERGROUP(0);

      if not CostJnlBatch.FINDFIRST then begin
        if not CostJnlTemplate.FINDFIRST then
          TemplateSelection(CostJnlLine,JnlSelected);
        if CostJnlTemplate.FINDFIRST then
          CheckTemplateName(CostJnlTemplate.Name,CostJnlBatch.Name);
        if not CostJnlTemplate.FINDFIRST then
          TemplateSelection(CostJnlLine,JnlSelected);
        if CostJnlTemplate.FINDFIRST then
          CheckTemplateName(CostJnlTemplate.Name,CostJnlBatch.Name);
      end;
      CostJnlBatch.FINDFIRST;
      JnlSelected := true;
      if CostJnlBatch.GETFILTER("Journal Template Name") <> '' then
        CostJnlTemplate.SETRANGE(Name,CostJnlBatch.GETFILTER("Journal Template Name"));
      case CostJnlTemplate.COUNT of
        1:
          CostJnlTemplate.FINDFIRST;
        else
          JnlSelected := PAGE.RUNMODAL(0,CostJnlTemplate) = ACTION::LookupOK;
      end;
      if not JnlSelected then
        ERROR('');

      CostJnlBatch.FILTERGROUP(2);
      CostJnlBatch.SETRANGE("Journal Template Name",CostJnlTemplate.Name);
      CostJnlBatch.FILTERGROUP(0);
    END;

    [External]
    PROCEDURE CheckTemplateName@7(CostJnlTemplateName@1001 : Code[10];VAR CostJnlBatchName@1002 : Code[10]);
    VAR
      CostJnlBatch@1000 : Record "Cost Journal Batch";
    BEGIN
      CostJnlBatch.SETRANGE("Journal Template Name",CostJnlTemplateName);
      if not CostJnlBatch.GET(CostJnlTemplateName,CostJnlBatchName) then begin
        if not CostJnlBatch.FINDFIRST then begin
          CostJnlBatch.INIT;
          CostJnlBatch."Journal Template Name" := CostJnlTemplateName;
          CostJnlBatch.Name := Text003;
          CostJnlBatch.Description := Text004;
          CostJnlBatch.INSERT(true);
          COMMIT;
        end;
        CostJnlBatchName := CostJnlBatch.Name;
      end;
    END;

    [External]
    PROCEDURE CheckName@11(CostJnlBatchName@1000 : Code[10];VAR CostJnlLine@1001 : Record "Cost Journal Line");
    VAR
      CostJnlBatch@1002 : Record "Cost Journal Batch";
    BEGIN
      CostJnlBatch.GET(CostJnlLine.GETRANGEMAX("Journal Template Name"),CostJnlBatchName);
    END;

    [External]
    PROCEDURE SetName@5(CostJnlBatchName@1000 : Code[10];VAR CostJnlLine@1001 : Record "Cost Journal Line");
    BEGIN
      CostJnlLine.FILTERGROUP := 2;
      CostJnlLine.SETRANGE("Journal Batch Name",CostJnlBatchName);
      CostJnlLine.FILTERGROUP := 0;
      if CostJnlLine.FINDFIRST then;
    END;

    [External]
    PROCEDURE LookupName@4(VAR CostJnlBatchName@1000 : Code[10];VAR CostJnlLine@1001 : Record "Cost Journal Line");
    VAR
      CostJnlBatch@1002 : Record "Cost Journal Batch";
    BEGIN
      COMMIT;
      CostJnlBatch."Journal Template Name" := CostJnlLine.GETRANGEMAX("Journal Template Name");
      CostJnlBatch.Name := CostJnlLine.GETRANGEMAX("Journal Batch Name");
      CostJnlBatch."Journal Template Name" := CostJnlLine."Journal Template Name";
      CostJnlBatch.Name := CostJnlLine."Journal Batch Name";
      CostJnlBatch.FILTERGROUP(2);
      CostJnlBatch.SETRANGE("Journal Template Name",CostJnlBatch."Journal Template Name");
      CostJnlBatch.FILTERGROUP(0);
      if PAGE.RUNMODAL(PAGE::"Cost Journal Batches",CostJnlBatch) = ACTION::LookupOK then begin
        CostJnlBatchName := CostJnlBatch.Name;
        SetName(CostJnlBatchName,CostJnlLine);
      end;
    END;

    [External]
    PROCEDURE CalcBalance@8(VAR CostJnlLine@1000 : Record "Cost Journal Line";LastCostJnlLine@1001 : Record "Cost Journal Line";VAR Balance@1002 : Decimal;VAR TotalBalance@1003 : Decimal;VAR ShowBalance@1004 : Boolean;VAR ShowTotalBalance@1005 : Boolean);
    VAR
      CostJnlLine2@1006 : Record "Cost Journal Line";
    BEGIN
      CostJnlLine2.COPYFILTERS(CostJnlLine);
      ShowTotalBalance := CostJnlLine2.CALCSUMS(Balance);
      if ShowTotalBalance then begin
        TotalBalance := CostJnlLine2.Balance;
        if CostJnlLine."Line No." = 0 then
          TotalBalance := TotalBalance + LastCostJnlLine.Balance;
      end;

      if CostJnlLine."Line No." <> 0 then begin
        CostJnlLine2.SETRANGE("Line No.",0,CostJnlLine."Line No.");
        ShowBalance := CostJnlLine2.CALCSUMS(Balance);
        if ShowBalance then
          Balance := CostJnlLine2.Balance;
      end else begin
        CostJnlLine2.SETRANGE("Line No.",0,LastCostJnlLine."Line No.");
        ShowBalance := CostJnlLine2.CALCSUMS(Balance);
        if ShowBalance then begin
          Balance := CostJnlLine2.Balance;
          CostJnlLine2.COPYFILTERS(CostJnlLine);
          CostJnlLine2 := LastCostJnlLine;
          if CostJnlLine2.NEXT = 0 then
            Balance := Balance + LastCostJnlLine.Balance;
        end;
      end;
    END;

    BEGIN
    END.
  }
}

