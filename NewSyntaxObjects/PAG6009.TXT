OBJECT Page 6009 Res. Gr. Alloc. per Serv Order
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Resource Group Allocated per Service Order;
    SaveValues=true;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable="Service Header";
    DataCaptionExpr='';
    PageType=Card;
    OnOpenPage=BEGIN
                 SetColumns(SetWanted::Initial);
                 if HASFILTER then
                   ResourceGrFilter := GETFILTER("Resource Group Filter");
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 13      ;1   ;Action    ;
                      Name=ShowMatrix;
                      CaptionML=ENU=Show Matrix;
                      ToolTipML=ENU=Open the matrix window to see data according to the specified values.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=ShowMatrix;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 HorizontalRecord@1003 : Record "Service Order Allocation";
                                 ResPerServiceOrderMatrix@1000 : Page "ResGrp. All. per Serv.  Matrix";
                               BEGIN
                                 HorizontalRecord.SETRANGE("Resource Group No.",ResourceGrFilter);
                                 ServiceHeader.SETFILTER("Resource Group Filter",ResourceGrFilter);
                                 ResPerServiceOrderMatrix.Load(ServiceHeader,HorizontalRecord,MatrixColumnCaptions,MatrixRecords,CurrSetLength);
                                 ResPerServiceOrderMatrix.RUNMODAL;
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=Previous Set;
                      CaptionML=ENU=Previous Set;
                      ToolTipML=ENU=Go to the previous set of data.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::Previous);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=Next Set;
                      CaptionML=ENU=Next Set;
                      ToolTipML=ENU=Go to the next set of data.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::Next);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 12  ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 1   ;2   ;Field     ;
                Name=ResourceGrFilter;
                Lookup=true;
                CaptionML=ENU=Resource Gr. Filter;
                ToolTipML=ENU=Specifies the resource group that the allocations apply to.;
                ApplicationArea=#Advanced;
                SourceExpr=ResourceGrFilter;
                TableRelation="Resource Group";
                LookupPageID="Resource Groups";
                ImplicitType=Text }

    { 1906098301;1;Group  ;
                Name=Matrix Options;
                CaptionML=ENU=Matrix Options }

    { 3   ;2   ;Field     ;
                Name=PeriodType;
                CaptionML=ENU=View by;
                ToolTipML=ENU=Specifies by which period amounts are displayed.;
                OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                ApplicationArea=#Advanced;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             DateControl;
                             SetColumns(SetWanted::Initial);
                           END;

                ImplicitType=Option }

    { 4   ;2   ;Field     ;
                Name=DateFilter;
                CaptionML=ENU=Date Filter;
                ToolTipML=ENU=Specifies the dates that will be used to filter the amounts in the window.;
                ApplicationArea=#Advanced;
                SourceExpr=DateFilter;
                OnValidate=BEGIN
                             DateControl;
                             SetColumns(SetWanted::Initial);
                           END;

                ImplicitType=Text }

    { 9   ;2   ;Field     ;
                Name=ColumnsSet;
                CaptionML=ENU=Column set;
                ToolTipML=ENU=Specifies the range of values that are displayed in the matrix window, for example, the total period.;
                ApplicationArea=#Advanced;
                SourceExpr=ColumnsSet;
                Editable=FALSE;
                ImplicitType=Text1024 }

  }
  CODE
  {
    VAR
      MatrixRecords@1001 : ARRAY [32] OF Record Date;
      ResRec2@1028 : Record Resource;
      ServiceHeader@1020 : Record "Service Header";
      ApplicationManagement@1027 : Codeunit ApplicationManagement;
      DateFilter@1000 : Text;
      ResourceGrFilter@1018 : Text;
      PeriodType@1005 : 'Day,Week,Month,Quarter,Year,"Accounting Period"';
      SetWanted@1034 : 'Initial,Previous,Same,Next';
      PKFirstRecInCurrSet@1033 : Text[1024];
      MatrixColumnCaptions@1032 : ARRAY [32] OF Text[100];
      ColumnsSet@1031 : Text[1024];
      CurrSetLength@1030 : Integer;

    LOCAL PROCEDURE DateControl@6();
    BEGIN
      if ApplicationManagement.MakeDateFilter(DateFilter) = 0 then;
      ResRec2.SETFILTER("Date Filter",DateFilter);
      DateFilter := ResRec2.GETFILTER("Date Filter");
    END;

    [Internal]
    PROCEDURE SetColumns@7(SetWanted@1001 : 'Initial,Previous,Same,Next');
    VAR
      MatrixMgt@1000 : Codeunit "Matrix Management";
    BEGIN
      MatrixMgt.GeneratePeriodMatrixData(SetWanted,32,false,PeriodType,DateFilter,
        PKFirstRecInCurrSet,MatrixColumnCaptions,ColumnsSet,CurrSetLength,MatrixRecords);
    END;

    BEGIN
    END.
  }
}

