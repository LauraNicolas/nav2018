OBJECT Page 54 Purchase Order Subform
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    MultipleNewLines=true;
    LinksAllowed=false;
    SourceTable="Purchase Line";
    DelayedInsert=true;
    SourceTableView=WHERE("Document Type"=FILTER(Order));
    PageType=ListPart;
    AutoSplitKey=true;
    OnInit=VAR
             ApplicationAreaSetup@1001 : Record "Application Area Setup";
           BEGIN
             TempOptionLookupBuffer.FillBuffer(TempOptionLookupBuffer."Lookup Type"::Purchases);
             IsFoundation := ApplicationAreaSetup.IsFoundationEnabled;
             Currency.InitRoundingPrecision;
           END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       CLEAR(DocumentTotals);
                       UpdateTypeText;
                       SetItemChargeFieldsStyle;
                     END;

    OnNewRecord=BEGIN
                  InitType;
                  // Default to Item for the first line and to previous line type for the others
                  if ApplicationAreaSetup.IsFoundationEnabled then
                    if xRec."Document No." = '' then
                      Type := Type::Item;

                  CLEAR(ShortcutDimCode);
                  UpdateTypeText;
                END;

    OnDeleteRecord=VAR
                     ReservePurchLine@1000 : Codeunit "Purch. Line-Reserve";
                   BEGIN
                     if (Quantity <> 0) and ItemExists("No.") then begin
                       COMMIT;
                       if not ReservePurchLine.DeleteLineConfirm(Rec) then
                         exit(false);
                       ReservePurchLine.DeleteLine(Rec);
                     end;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateEditableOnRow;
                           if PurchHeader.GET("Document Type","Document No.") then;

                           DocumentTotals.PurchaseUpdateTotalsControls(Rec,TotalPurchaseHeader,TotalPurchaseLine,RefreshMessageEnabled,
                             TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,VATAmount);
                           UpdateCurrency;
                           UpdateTypeText;
                           SetItemChargeFieldsStyle;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1906421304;2 ;ActionGroup;
                      Name=Item Availability by;
                      CaptionML=ENU=Item Availability by;
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      Name=Event;
                      CaptionML=ENU=Event;
                      ToolTipML=ENU=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 1902027204;3 ;Action    ;
                      Name=Period;
                      CaptionML=ENU=Period;
                      ToolTipML=ENU=Show the projected quantity of the item over time according to time periods, such as day, week, or month.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 1901633104;3 ;Action    ;
                      Name=Variant;
                      CaptionML=ENU=Variant;
                      ToolTipML=ENU=View or edit the item's variants. Instead of setting up each color of an item as a separate item, you can set up the various colors as variants of the item.;
                      ApplicationArea=#Advanced;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 1902479904;3 ;Action    ;
                      Name=Location;
                      AccessByPermission=TableData Location=R;
                      CaptionML=ENU=Location;
                      ToolTipML=ENU=View the actual and projected quantity of the item per location.;
                      ApplicationArea=#Location;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 3       ;3   ;Action    ;
                      Name=BOM Level;
                      AccessByPermission=TableData "BOM Buffer"=R;
                      CaptionML=ENU=BOM Level;
                      ToolTipML=ENU=View availability figures for items on bills of materials that show how many units of a parent item you can make based on the availability of child items.;
                      ApplicationArea=#Assembly;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromPurchLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 1902085804;2 ;Action    ;
                      Name=Reservation Entries;
                      AccessByPermission=TableData Item=R;
                      CaptionML=ENU=Reservation Entries;
                      ToolTipML=ENU=View the entries for every reservation that is made, either manually or automatically.;
                      ApplicationArea=#Advanced;
                      Image=ReservationLedger;
                      OnAction=BEGIN
                                 ShowReservationEntries(true);
                               END;
                                }
      { 1905987604;2 ;Action    ;
                      Name=Item Tracking Lines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      ToolTipML=ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 1903984904;2 ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Suite;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1903079404;2 ;Action    ;
                      Name=Co&mments;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Advanced;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 ShowLineComments;
                               END;
                                }
      { 1907184504;2 ;Action    ;
                      Name=ItemChargeAssignment;
                      AccessByPermission=TableData "Item Charge"=R;
                      CaptionML=ENU=Item Charge &Assignment;
                      ToolTipML=ENU=Assign additional direct costs, for example for freight, to the item on the line.;
                      ApplicationArea=#ItemCharges;
                      Image=ItemCosts;
                      OnAction=BEGIN
                                 ShowItemChargeAssgnt;
                                 SetItemChargeFieldsStyle;
                               END;
                                }
      { 23      ;2   ;Action    ;
                      Name=DeferralSchedule;
                      CaptionML=ENU=Deferral Schedule;
                      ToolTipML=ENU=View or edit the deferral schedule that governs how revenue made with this sales document is deferred to different accounting periods when the document is posted.;
                      ApplicationArea=#Suite;
                      Enabled="Deferral Code" <> '';
                      Image=PaymentPeriod;
                      OnAction=BEGIN
                                 PurchHeader.GET("Document Type","Document No.");
                                 ShowDeferrals(PurchHeader."Posting Date",PurchHeader."Currency Code")
                               END;
                                }
      { 1906587504;1 ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 1901312904;2 ;Action    ;
                      Name=E&xplode BOM;
                      AccessByPermission=TableData "BOM Component"=R;
                      CaptionML=ENU=E&xplode BOM;
                      ToolTipML=ENU=Insert new lines for the components on the bill of materials, for example to sell the parent item as a kit. CAUTION: The line for the parent item will be deleted and represented by a description only. To undo, you must delete the component lines and add a line the parent item again.;
                      ApplicationArea=#Advanced;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 1901313304;2 ;Action    ;
                      Name=Insert Ext. Texts;
                      AccessByPermission=TableData "Extended Text Header"=R;
                      CaptionML=ENU=Insert &Ext. Texts;
                      ToolTipML=ENU=Insert the extended item description that is set up for the item that is being processed on the line.;
                      ApplicationArea=#Suite;
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(true);
                               END;
                                }
      { 1906391504;2 ;Action    ;
                      Name=Reserve;
                      Ellipsis=true;
                      CaptionML=ENU=&Reserve;
                      ToolTipML=ENU=Reserve the quantity that is required on the document line that you opened this window for.;
                      ApplicationArea=#Advanced;
                      Image=Reserve;
                      OnAction=BEGIN
                                 FIND;
                                 ShowReservation;
                               END;
                                }
      { 1903502504;2 ;Action    ;
                      Name=OrderTracking;
                      CaptionML=ENU=Order &Tracking;
                      ToolTipML=ENU=Tracks the connection of a supply to its corresponding demand. This can help you find the original demand that created a specific production order or purchase order.;
                      ApplicationArea=#Advanced;
                      Image=OrderTracking;
                      OnAction=BEGIN
                                 ShowTracking;
                               END;
                                }
      { 1905926804;1 ;ActionGroup;
                      Name=O&rder;
                      CaptionML=ENU=O&rder;
                      Image=Order }
      { 1903621804;2 ;ActionGroup;
                      Name=Dr&op Shipment;
                      CaptionML=ENU=Dr&op Shipment;
                      Image=Delivery }
      { 1903563204;3 ;Action    ;
                      Name=Sales &Order;
                      AccessByPermission=TableData "Sales Shipment Header"=R;
                      CaptionML=ENU=Sales &Order;
                      ToolTipML=ENU=Create a new sales order for an item that is shipped directly from the vendor to the customer. The Drop Shipment check box must be selected on the sales order line, and the Vendor No. field must be filled on the item card.;
                      ApplicationArea=#Suite;
                      Image=Document;
                      OnAction=BEGIN
                                 OpenSalesOrderForm;
                               END;
                                }
      { 1903169104;2 ;ActionGroup;
                      Name=Speci&al Order;
                      CaptionML=ENU=Speci&al Order;
                      Image=SpecialOrder }
      { 1901038504;3 ;Action    ;
                      Name=Action1901038504;
                      AccessByPermission=TableData "Sales Shipment Header"=R;
                      CaptionML=ENU=Sales &Order;
                      ToolTipML=ENU=Create a new sales order for an item that is shipped directly from the vendor to the customer. The Drop Shipment check box must be selected on the sales order line, and the Vendor No. field must be filled on the item card.;
                      ApplicationArea=#Advanced;
                      Image=Document;
                      OnAction=BEGIN
                                 OpenSpecOrderSalesOrderForm;
                               END;
                                }
      { 29      ;2   ;Action    ;
                      Name=BlanketOrder;
                      CaptionML=ENU=Blanket Order;
                      ToolTipML=ENU=View the blanket purchase order.;
                      ApplicationArea=#Advanced;
                      Image=BlanketOrder;
                      OnAction=VAR
                                 PurchaseHeader@1000 : Record "Purchase Header";
                                 BlanketPurchaseOrder@1001 : Page "Blanket Purchase Order";
                               BEGIN
                                 TESTFIELD("Blanket Order No.");
                                 PurchaseHeader.SETRANGE("No.","Blanket Order No.");
                                 if not PurchaseHeader.ISEMPTY then begin
                                   BlanketPurchaseOrder.SETTABLEVIEW(PurchaseHeader);
                                   BlanketPurchaseOrder.EDITABLE := false;
                                   BlanketPurchaseOrder.RUN;
                                 end;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the line type.;
                ApplicationArea=#Advanced;
                SourceExpr=Type;
                OnValidate=BEGIN
                             NoOnAfterValidate;

                             if xRec."No." <> '' then
                               RedistributeTotalsOnAfterValidate;
                             UpdateEditableOnRow;
                             UpdateTypeText;
                           END;

                ImplicitType=Option }

    { 31  ;2   ;Field     ;
                Name=FilteredTypeField;
                CaptionML=ENU=Type;
                ToolTipML=ENU=Specifies the type of entity that will be posted for this purchase line, such as Item,, or G/L Account.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TypeAsText;
                TableRelation="Option Lookup Buffer"."Option Caption" WHERE ("Lookup Type"=CONST(Purchases));
                Visible=IsFoundation;
                LookupPageID="Option Lookup List";
                OnValidate=BEGIN
                             if TempOptionLookupBuffer.AutoCompleteOption(TypeAsText,TempOptionLookupBuffer."Lookup Type"::Purchases) then
                               VALIDATE(Type,TempOptionLookupBuffer.ID);
                             TempOptionLookupBuffer.ValidateOption(TypeAsText);
                             UpdateEditableOnRow;
                             UpdateTypeText;
                           END;

                ImplicitType=Text30 }

    { 4   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of a general ledger account, item, additional cost, or fixed asset, depending on what you selected in the Type field.;
                ApplicationArea=#Suite;
                SourceExpr="No.";
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;

                             if xRec."No." <> '' then
                               RedistributeTotalsOnAfterValidate;
                             UpdateTypeText;
                           END;

                ImplicitType=Code20;
                ShowMandatory=NOT IsCommentLine }

    { 62  ;2   ;Field     ;
                Name=Cross-Reference No.;
                ToolTipML=ENU=Specifies the cross-referenced item number. If you enter a cross reference between yours and your vendor's or customer's item number, then this number will override the standard item number when you enter the cross-reference number on a sales or purchase document.;
                ApplicationArea=#Suite;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CrossReferenceNoOnAfterValidat;
                             NoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           InsertExtendedText(false);
                           NoOnAfterValidate;
                         END;

                ImplicitType=Code20 }

    { 1108;2   ;Field     ;
                Name=IC Partner Code;
                ToolTipML=ENU=Specifies the code of the intercompany partner that the transaction is related to if the entry was created from an intercompany transaction.;
                ApplicationArea=#Intercompany;
                SourceExpr="IC Partner Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 104 ;2   ;Field     ;
                Name=IC Partner Ref. Type;
                ToolTipML=ENU=Specifies the item or account in your IC partner's company that corresponds to the item or account on the line.;
                ApplicationArea=#Intercompany;
                SourceExpr="IC Partner Ref. Type";
                Visible=FALSE;
                ImplicitType=Option }

    { 106 ;2   ;Field     ;
                Name=IC Partner Reference;
                ToolTipML=ENU=Specifies the IC partner. If the line is being sent to one of your intercompany partners, this field is used together with the IC Partner Ref. Type field to indicate the item or account in your partner's company that corresponds to the line.;
                ApplicationArea=#Intercompany;
                SourceExpr="IC Partner Reference";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 32  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 82  ;2   ;Field     ;
                Name=Nonstock;
                ToolTipML=ENU=Specifies that this item is a nonstock item.;
                ApplicationArea=#Suite;
                SourceExpr=Nonstock;
                Visible=FALSE;
                ImplicitType=Boolean }

    { 14  ;2   ;Field     ;
                Name=VAT Prod. Posting Group;
                ToolTipML=ENU=Specifies the VAT product posting group. Links business transactions made for the item, resource, or G/L account with the general ledger, to account for VAT amounts resulting from trade with that record.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the entry of the product to be purchased. To add a non-transactional text line, fill in the Description field only.;
                ApplicationArea=#Suite;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 80  ;2   ;Field     ;
                Name=Drop Shipment;
                ToolTipML=ENU=Specifies if your vendor ships the items directly to your customer.;
                ApplicationArea=#Suite;
                SourceExpr="Drop Shipment";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 88  ;2   ;Field     ;
                Name=Return Reason Code;
                ToolTipML=ENU=Specifies the code explaining why the item was returned.;
                ApplicationArea=#Advanced;
                SourceExpr="Return Reason Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 74  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies a code for the location where you want the items to be placed when they are received.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Enabled=NOT IsCommentLine;
                Editable=NOT IsCommentLine;
                ImplicitType=Code10 }

    { 102 ;2   ;Field     ;
                Name=Bin Code;
                ToolTipML=ENU=Specifies the bin where the items are picked or put away.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the number of units of the item specified on the line.;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=Quantity;
                Enabled=NOT IsCommentLine;
                Editable=NOT IsCommentLine;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal;
                ShowMandatory=(NOT IsCommentLine) AND ("No." <> '') }

    { 42  ;2   ;Field     ;
                Name=Reserved Quantity;
                ToolTipML=ENU=Specifies how many item units on this line have been reserved.;
                ApplicationArea=#Advanced;
                BlankZero=true;
                SourceExpr="Reserved Quantity";
                ImplicitType=Decimal }

    { 9   ;2   ;Field     ;
                Name=Job Remaining Qty.;
                ToolTipML=ENU=Specifies the quantity that remains to complete a job.;
                ApplicationArea=#Advanced;
                BlankZero=true;
                SourceExpr="Job Remaining Qty.";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 36  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Suite;
                SourceExpr="Unit of Measure Code";
                Visible=FALSE;
                Enabled=UnitofMeasureCodeIsChangeable;
                Editable=UnitofMeasureCodeIsChangeable;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Code10 }

    { 10  ;2   ;Field     ;
                Name=Unit of Measure;
                ToolTipML=ENU=Specifies the unit of measure.;
                ApplicationArea=#Advanced;
                SourceExpr="Unit of Measure";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Text10 }

    { 12  ;2   ;Field     ;
                Name=Direct Unit Cost;
                ToolTipML=ENU=Specifies the cost of one unit of the selected item or resource.;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr="Direct Unit Cost";
                Enabled=NOT IsCommentLine;
                Editable=NOT IsCommentLine;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal;
                ShowMandatory=(NOT IsCommentLine) AND ("No." <> '') }

    { 28  ;2   ;Field     ;
                Name=Indirect Cost %;
                ToolTipML=ENU=Specifies the percentage of the item's last purchase cost that includes indirect costs, such as freight that is associated with the purchase of the item.;
                ApplicationArea=#Advanced;
                SourceExpr="Indirect Cost %";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 68  ;2   ;Field     ;
                Name=Unit Cost (LCY);
                ToolTipML=ENU=Specifies the unit cost of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 30  ;2   ;Field     ;
                Name=Unit Price (LCY);
                ToolTipML=ENU=Specifies the price, in LCY, for one unit of the item.;
                ApplicationArea=#Advanced;
                BlankZero=true;
                SourceExpr="Unit Price (LCY)";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 16  ;2   ;Field     ;
                Name=Line Discount %;
                ToolTipML=ENU=Specifies the discount percentage that is granted for the item on the line.;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr="Line Discount %";
                Visible=FALSE;
                Enabled=NOT IsCommentLine;
                Editable=NOT IsCommentLine;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 44  ;2   ;Field     ;
                Name=Line Amount;
                ToolTipML=ENU=Specifies the net amount, excluding any invoice discount amount, that must be paid for products on the line.;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr="Line Amount";
                Enabled=NOT IsCommentLine;
                Editable=NOT IsCommentLine;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 60  ;2   ;Field     ;
                Name=Line Discount Amount;
                ToolTipML=ENU=Specifies the discount amount that is granted for the item on the line.;
                ApplicationArea=#Suite;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 108 ;2   ;Field     ;
                Name=Prepayment %;
                ToolTipML=ENU=Specifies the prepayment percentage to use to calculate the prepayment for purchases.;
                ApplicationArea=#Prepayments;
                SourceExpr="Prepayment %";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 110 ;2   ;Field     ;
                Name=Prepmt. Line Amount;
                ToolTipML=ENU=Specifies the prepayment amount of the line in the currency of the purchase document if a prepayment percentage is specified for the purchase line.;
                ApplicationArea=#Prepayments;
                SourceExpr="Prepmt. Line Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 112 ;2   ;Field     ;
                Name=Prepmt. Amt. Inv.;
                ToolTipML=ENU=Specifies the prepayment amount that has already been invoiced to the customer for this purchase line.;
                ApplicationArea=#Prepayments;
                SourceExpr="Prepmt. Amt. Inv.";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 58  ;2   ;Field     ;
                Name=Allow Invoice Disc.;
                ToolTipML=ENU=Specifies if the invoice line is included when the invoice discount is calculated.;
                ApplicationArea=#Advanced;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 26  ;2   ;Field     ;
                Name=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the total calculated invoice discount amount for the line.;
                ApplicationArea=#Suite;
                SourceExpr="Inv. Discount Amount";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 39  ;2   ;Field     ;
                Name=Inv. Disc. Amount to Invoice;
                ToolTipML=ENU=Specifies the actual invoice discount amount that will be posted for the line on the invoice.;
                ApplicationArea=#Suite;
                SourceExpr="Inv. Disc. Amount to Invoice";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 18  ;2   ;Field     ;
                Name=Qty. to Receive;
                ToolTipML=ENU=Specifies the quantity of items that remains to be received.;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr="Qty. to Receive";
                ImplicitType=Decimal }

    { 20  ;2   ;Field     ;
                Name=Quantity Received;
                ToolTipML=ENU=Specifies how many units of the item on the line have been posted as received.;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr="Quantity Received";
                ImplicitType=Decimal }

    { 22  ;2   ;Field     ;
                Name=Qty. to Invoice;
                ToolTipML=ENU=Specifies the quantity that remains to be invoiced. It is calculated as Quantity - Qty. Invoiced.;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr="Qty. to Invoice";
                ImplicitType=Decimal }

    { 24  ;2   ;Field     ;
                Name=Quantity Invoiced;
                ToolTipML=ENU=Specifies how many units of the item on the line have been posted as invoiced.;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr="Quantity Invoiced";
                ImplicitType=Decimal }

    { 114 ;2   ;Field     ;
                Name=Prepmt Amt to Deduct;
                ToolTipML=ENU=Specifies the prepayment amount that has already been deducted from ordinary invoices posted for this purchase order line.;
                ApplicationArea=#Prepayments;
                SourceExpr="Prepmt Amt to Deduct";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 116 ;2   ;Field     ;
                Name=Prepmt Amt Deducted;
                ToolTipML=ENU=Specifies the prepayment amount that has already been deducted from ordinary invoices posted for this purchase order line.;
                ApplicationArea=#Prepayments;
                SourceExpr="Prepmt Amt Deducted";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 56  ;2   ;Field     ;
                Name=Allow Item Charge Assignment;
                ToolTipML=ENU=Specifies that you can assign item charges to this line.;
                ApplicationArea=#Advanced;
                SourceExpr="Allow Item Charge Assignment";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 66  ;2   ;Field     ;
                Name=Qty. to Assign;
                ToolTipML=ENU=Specifies how many units of the item charge will be assigned to the line.;
                ApplicationArea=#ItemCharges;
                SourceExpr="Qty. to Assign";
                StyleExpr=ItemChargeStyleExpression;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(false);
                            END;

                ImplicitType=Decimal }

    { 54  ;2   ;Field     ;
                Name=Qty. Assigned;
                ToolTipML=ENU=Specifies how much of the item charge that has been assigned.;
                ApplicationArea=#ItemCharges;
                BlankZero=true;
                SourceExpr="Qty. Assigned";
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(false);
                            END;

                ImplicitType=Decimal }

    { 126 ;2   ;Field     ;
                Name=Job No.;
                ToolTipML=ENU=Specifies the number of the related job. If you fill in this field and the Job Task No. field, then a job ledger entry will be posted together with the purchase line.;
                ApplicationArea=#Jobs;
                SourceExpr="Job No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 128 ;2   ;Field     ;
                Name=Job Task No.;
                ToolTipML=ENU=Specifies the number of the related job task.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Task No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 7   ;2   ;Field     ;
                Name=Job Planning Line No.;
                ToolTipML=ENU=Specifies the job planning line number to which the usage should be linked when the Job Journal is posted. You can only link to Job Planning Lines that have the Apply Usage Link option enabled.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Planning Line No.";
                Visible=FALSE;
                ImplicitType=Integer }

    { 130 ;2   ;Field     ;
                Name=Job Line Type;
                ToolTipML=ENU=Specifies the type of planning line that was created when the job ledger entry is posted from the purchase line. If the field is empty, no planning lines were created for this entry.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Type";
                Visible=FALSE;
                ImplicitType=Option }

    { 132 ;2   ;Field     ;
                Name=Job Unit Price;
                ToolTipML=ENU=Specifies the sales price per unit that applies to the item or general ledger expense that will be posted.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Unit Price";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 134 ;2   ;Field     ;
                Name=Job Line Amount;
                ToolTipML=ENU=Specifies the line amount of the job ledger entry that is related to the purchase line.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Amount";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 136 ;2   ;Field     ;
                Name=Job Line Discount Amount;
                ToolTipML=ENU=Specifies the line discount amount of the job ledger entry that is related to the purchase line.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Discount Amount";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 138 ;2   ;Field     ;
                Name=Job Line Discount %;
                ToolTipML=ENU=Specifies the line discount percentage of the job ledger entry that is related to the purchase line.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Discount %";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 140 ;2   ;Field     ;
                Name=Job Total Price;
                ToolTipML=ENU=Specifies the gross amount of the line that the purchase line applies to.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Total Price";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 142 ;2   ;Field     ;
                Name=Job Unit Price (LCY);
                ToolTipML=ENU=Specifies the sales price per unit that applies to the item or general ledger expense that will be posted.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Unit Price (LCY)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 144 ;2   ;Field     ;
                Name=Job Total Price (LCY);
                ToolTipML=ENU=Specifies the gross amount of the line, in the local currency.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Total Price (LCY)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 146 ;2   ;Field     ;
                Name=Job Line Amount (LCY);
                ToolTipML=ENU=Specifies the line amount of the job ledger entry that is related to the purchase line.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Amount (LCY)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 148 ;2   ;Field     ;
                Name=Job Line Disc. Amount (LCY);
                ToolTipML=ENU=Specifies the line discount amount of the job ledger entry that is related to the purchase line.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Line Disc. Amount (LCY)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 34  ;2   ;Field     ;
                Name=Requested Receipt Date;
                ToolTipML=ENU=Specifies the date that you want the vendor to deliver to the ship-to address. The value in the field is used to calculate the latest date you can order the items to have them delivered on the requested receipt date. If you do not need delivery on a specific date, you can leave the field blank.;
                ApplicationArea=#Suite;
                SourceExpr="Requested Receipt Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 90  ;2   ;Field     ;
                Name=Promised Receipt Date;
                ToolTipML=ENU=Specifies the date that you have promised to deliver the order, as a result of the Order Promising function.;
                ApplicationArea=#Advanced;
                SourceExpr="Promised Receipt Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 92  ;2   ;Field     ;
                Name=Planned Receipt Date;
                ToolTipML=ENU="Specifies the date when the item is planned to arrive in inventory. Forward calculation: planned receipt date = order date + vendor lead time (per the vendor calendar and rounded to the next working day in first the vendor calendar and then the location calendar). If no vendor calendar exists, then: planned receipt date = order date + vendor lead time (per the location calendar). Backward calculation: order date = planned receipt date - vendor lead time (per the vendor calendar and rounded to the previous working day in first the vendor calendar and then the location calendar). If no vendor calendar exists, then: order date = planned receipt date - vendor lead time (per the location calendar).";
                ApplicationArea=#Advanced;
                SourceExpr="Planned Receipt Date";
                ImplicitType=Date }

    { 100 ;2   ;Field     ;
                Name=Expected Receipt Date;
                ToolTipML=ENU="Specifies the date you expect the items to be available in your warehouse. If you leave the field blank, it will be calculated as follows: Planned Receipt Date + Safety Lead Time + Inbound Warehouse Handling Time = Expected Receipt Date.";
                ApplicationArea=#Advanced;
                SourceExpr="Expected Receipt Date";
                ImplicitType=Date }

    { 94  ;2   ;Field     ;
                Name=Order Date;
                ToolTipML=ENU=Specifies the date when the order was created.;
                ApplicationArea=#Suite;
                SourceExpr="Order Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 96  ;2   ;Field     ;
                Name=Lead Time Calculation;
                ToolTipML=ENU=Specifies a date formula for the amount of time it takes to replenish the item.;
                ApplicationArea=#Advanced;
                SourceExpr="Lead Time Calculation";
                Visible=FALSE;
                ImplicitType=DateFormula }

    { 84  ;2   ;Field     ;
                Name=Planning Flexibility;
                ToolTipML=ENU=Specifies whether the supply represented by this line is considered by the planning system when calculating action messages.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Planning Flexibility";
                Visible=FALSE;
                ImplicitType=Option }

    { 40  ;2   ;Field     ;
                Name=Prod. Order No.;
                ToolTipML=ENU=Specifies the number of the related production order.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Prod. Order No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 86  ;2   ;Field     ;
                Name=Prod. Order Line No.;
                ToolTipML=ENU=Specifies the number of the related production order line.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Prod. Order Line No.";
                Visible=FALSE;
                ImplicitType=Integer }

    { 64  ;2   ;Field     ;
                Name=Operation No.;
                ToolTipML=ENU=Specifies the number of the related production operation.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Operation No.";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 70  ;2   ;Field     ;
                Name=Work Center No.;
                ToolTipML=ENU=Specifies the work center number of the journal line.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Work Center No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 72  ;2   ;Field     ;
                Name=Finished;
                ToolTipML=ENU=Specifies that any related  service or operation is finished.;
                ApplicationArea=#Manufacturing;
                SourceExpr=Finished;
                Visible=FALSE;
                ImplicitType=Boolean }

    { 38  ;2   ;Field     ;
                Name=Whse. Outstanding Qty. (Base);
                ToolTipML=ENU=Specifies how many units on the purchase order line remain to be handled in warehouse documents.;
                ApplicationArea=#Warehouse;
                SourceExpr="Whse. Outstanding Qty. (Base)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 98  ;2   ;Field     ;
                Name=Inbound Whse. Handling Time;
                ToolTipML=ENU=Specifies the time it takes to make items part of available inventory, after the items have been posted as received.;
                ApplicationArea=#Warehouse;
                SourceExpr="Inbound Whse. Handling Time";
                Visible=FALSE;
                ImplicitType=DateFormula }

    { 46  ;2   ;Field     ;
                Name=Blanket Order No.;
                ToolTipML=ENU=Specifies the number of the blanket order that the record originates from.;
                ApplicationArea=#Advanced;
                SourceExpr="Blanket Order No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 48  ;2   ;Field     ;
                Name=Blanket Order Line No.;
                ToolTipML=ENU=Specifies the number of the blanket order line that the record originates from.;
                ApplicationArea=#Advanced;
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE;
                ImplicitType=Integer }

    { 52  ;2   ;Field     ;
                Name=Appl.-to Item Entry;
                ToolTipML=ENU=Specifies the number of the item ledger entry that the document or journal line is applied -to.;
                ApplicationArea=#Suite;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE;
                ImplicitType=Integer }

    { 21  ;2   ;Field     ;
                Name=Deferral Code;
                ToolTipML=ENU=Specifies the deferral template that governs how expenses paid with this purchase document are deferred to the different accounting periods when the expenses were incurred.;
                ApplicationArea=#Suite;
                SourceExpr="Deferral Code";
                TableRelation="Deferral Template"."Deferral Code";
                Visible=FALSE;
                Enabled=(Type <> Type::"Fixed Asset") AND (Type <> Type::" ");
                ImplicitType=Code10 }

    { 78  ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 76  ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 300 ;2   ;Field     ;
                Name=ShortcutDimCode[3];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(3),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                Name=ShortcutDimCode[4];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(4),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                Name=ShortcutDimCode[5];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(5),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                Name=ShortcutDimCode[6];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(6),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                Name=ShortcutDimCode[7];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(7),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                Name=ShortcutDimCode[8];
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(8),
                                                            "Dimension Value Type"=CONST(Standard),
                                                            Blocked=CONST(false));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 25  ;2   ;Field     ;
                Name=Document No.;
                ToolTipML=ENU=Specifies the document number.;
                ApplicationArea=#Advanced;
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Code20 }

    { 27  ;2   ;Field     ;
                Name=Line No.;
                ToolTipML=ENU=Specifies the number of this line.;
                ApplicationArea=#Advanced;
                SourceExpr="Line No.";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Integer }

    { 43  ;1   ;Group     ;
                Name=Group43;
                GroupType=Group }

    { 37  ;2   ;Group     ;
                Name=Group37;
                GroupType=Group }

    { 35  ;3   ;Field     ;
                Name=Invoice Discount Amount;
                CaptionML=ENU=Invoice Discount Amount;
                ToolTipML=ENU=Specifies the amount that is calculated and shown in the Invoice Discount Amount field. The invoice discount amount is deducted from the value shown in the Total Amount Incl. VAT field.;
                ApplicationArea=#Suite;
                SourceExpr=TotalPurchaseLine."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetInvoiceDiscAmountWithVATAndCurrencyCaption(FIELDCAPTION("Inv. Discount Amount"),Currency.Code);
                Editable=InvDiscAmountEditable;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled;
                OnValidate=VAR
                             PurchaseHeader@1000 : Record "Purchase Header";
                           BEGIN
                             PurchaseHeader.GET("Document Type","Document No.");
                             if PurchaseHeader.InvoicedLineExists then
                               if not CONFIRM(UpdateInvDiscountQst,false) then
                                 exit;

                             PurchCalcDiscByType.ApplyInvDiscBasedOnAmt(TotalPurchaseLine."Inv. Discount Amount",PurchaseHeader);
                             CurrPage.UPDATE(false);
                           END;
                            }

    { 33  ;3   ;Field     ;
                Name=Invoice Disc. Pct.;
                CaptionML=ENU=Invoice Discount %;
                ToolTipML=ENU=Specifies a discount percentage that is granted if criteria that you have set up for the customer are met. The calculated discount amount is inserted in the Invoice Discount Amount field, but you can change it manually.;
                ApplicationArea=#Suite;
                DecimalPlaces=0:2;
                SourceExpr=PurchCalcDiscByType.GetVendInvoiceDiscountPct(Rec);
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 19  ;2   ;Group     ;
                Name=Group19;
                GroupType=Group }

    { 17  ;3   ;Field     ;
                Name=Total Amount Excl. VAT;
                DrillDown=false;
                CaptionML=ENU=Total Amount Excl. VAT;
                ToolTipML=ENU=Specifies the sum of the value in the Line Amount Excl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.;
                ApplicationArea=#Suite;
                SourceExpr=TotalPurchaseLine.Amount;
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetTotalExclVATCaption(Currency.Code);
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 15  ;3   ;Field     ;
                Name=Total VAT Amount;
                CaptionML=ENU=Total VAT;
                ToolTipML=ENU=Specifies the sum of VAT amounts on all lines in the document.;
                ApplicationArea=#Suite;
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetTotalVATCaption(Currency.Code);
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled;
                ImplicitType=Decimal }

    { 13  ;3   ;Field     ;
                Name=Total Amount Incl. VAT;
                CaptionML=ENU=Total Amount Incl. VAT;
                ToolTipML=ENU=Specifies the sum of the value in the Line Amount Incl. VAT field on all lines in the document minus any discount amount in the Invoice Discount Amount field.;
                ApplicationArea=#Suite;
                SourceExpr=TotalPurchaseLine."Amount Including VAT";
                AutoFormatType=1;
                AutoFormatExpr=Currency.Code;
                CaptionClass=DocumentTotals.GetTotalInclVATCaption(Currency.Code);
                Editable=FALSE;
                StyleExpr=TotalAmountStyle }

    { 11  ;3   ;Field     ;
                Name=RefreshTotals;
                DrillDown=true;
                ApplicationArea=#Suite;
                SourceExpr=RefreshMessageText;
                Enabled=RefreshMessageEnabled;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DocumentTotals.PurchaseRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalPurchaseLine);
                              DocumentTotals.PurchaseUpdateTotalsControls(Rec,TotalPurchaseHeader,TotalPurchaseLine,RefreshMessageEnabled,
                                TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,VATAmount);
                            END;

                ImplicitType=Text;
                ShowCaption=false }

  }
  CODE
  {
    VAR
      TotalPurchaseHeader@1009 : Record "Purchase Header";
      TotalPurchaseLine@1008 : Record "Purchase Line";
      PurchHeader@1005 : Record "Purchase Header";
      Currency@1022 : Record Currency;
      ApplicationAreaSetup@1000 : Record "Application Area Setup";
      TempOptionLookupBuffer@1001 : TEMPORARY Record "Option Lookup Buffer";
      TransferExtendedText@1002 : Codeunit "Transfer Extended Text";
      ItemAvailFormsMgt@1006 : Codeunit "Item Availability Forms Mgt";
      Text001@1007 : TextConst 'ENU=You cannot use the Explode BOM function because a prepayment of the purchase order has been invoiced.';
      PurchCalcDiscByType@1010 : Codeunit "Purch - Calc Disc. By Type";
      DocumentTotals@1017 : Codeunit "Document Totals";
      ShortcutDimCode@1003 : ARRAY [8] OF Code[20];
      VATAmount@1018 : Decimal;
      TotalAmountStyle@1015 : Text;
      RefreshMessageText@1013 : Text;
      TypeAsText@1020 : Text[30];
      ItemChargeStyleExpression@1016 : Text;
      InvDiscAmountEditable@1012 : Boolean;
      RefreshMessageEnabled@1004 : Boolean;
      IsCommentLine@1019 : Boolean;
      IsFoundation@1021 : Boolean;
      UnitofMeasureCodeIsChangeable@1011 : Boolean;
      UpdateInvDiscountQst@1014 : TextConst 'ENU=One or more lines have been invoiced. The discount distributed to invoiced lines will not be taken into account.\\Do you want to update the invoice discount?';

    [External]
    PROCEDURE ApproveCalcInvDisc@7();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Purch.-Disc. (Yes/No)",Rec);
    END;

    LOCAL PROCEDURE ExplodeBOM@3();
    BEGIN
      if "Prepmt. Amt. Inv." <> 0 then
        ERROR(Text001);
      CODEUNIT.RUN(CODEUNIT::"Purch.-Explode BOM",Rec);
    END;

    LOCAL PROCEDURE OpenSalesOrderForm@5();
    VAR
      SalesHeader@1000 : Record "Sales Header";
      SalesOrder@1001 : Page "Sales Order";
    BEGIN
      TESTFIELD("Sales Order No.");
      SalesHeader.SETRANGE("No.","Sales Order No.");
      SalesOrder.SETTABLEVIEW(SalesHeader);
      SalesOrder.EDITABLE := false;
      SalesOrder.RUN;
    END;

    LOCAL PROCEDURE InsertExtendedText@6(Unconditionally@1000 : Boolean);
    BEGIN
      if TransferExtendedText.PurchCheckIfAnyExtText(Rec,Unconditionally) then begin
        CurrPage.SAVERECORD;
        TransferExtendedText.InsertPurchExtText(Rec);
      end;
      if TransferExtendedText.MakeUpdate then
        UpdateForm(true);
    END;

    [External]
    PROCEDURE ShowTracking@10();
    VAR
      TrackingForm@1000 : Page "Order Tracking";
    BEGIN
      TrackingForm.SetPurchLine(Rec);
      TrackingForm.RUNMODAL;
    END;

    LOCAL PROCEDURE OpenSpecOrderSalesOrderForm@12();
    VAR
      SalesHeader@1000 : Record "Sales Header";
      SalesOrder@1001 : Page "Sales Order";
    BEGIN
      TESTFIELD("Special Order Sales No.");
      SalesHeader.SETRANGE("No.","Special Order Sales No.");
      SalesOrder.SETTABLEVIEW(SalesHeader);
      SalesOrder.EDITABLE := false;
      SalesOrder.RUN;
    END;

    [External]
    PROCEDURE UpdateForm@13(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@409();
    BEGIN
      UpdateEditableOnRow;
      InsertExtendedText(false);
      if (Type = Type::"Charge (Item)") and ("No." <> xRec."No.") and
         (xRec."No." <> '')
      then
        CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE CrossReferenceNoOnAfterValidat@2059();
    BEGIN
      InsertExtendedText(false);
    END;

    LOCAL PROCEDURE RedistributeTotalsOnAfterValidate@2();
    BEGIN
      CurrPage.SAVERECORD;

      PurchHeader.GET("Document Type","Document No.");
      if DocumentTotals.PurchaseCheckNumberOfLinesLimit(PurchHeader) then
        DocumentTotals.PurchaseRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalPurchaseLine);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ValidateSaveShortcutDimCode@19(FieldNumber@1001 : Integer;VAR ShortcutDimCode@1000 : Code[20]);
    BEGIN
      ValidateShortcutDimCode(FieldNumber,ShortcutDimCode);
      CurrPage.SAVERECORD;
    END;

    LOCAL PROCEDURE UpdateEditableOnRow@8();
    BEGIN
      UnitofMeasureCodeIsChangeable := CanEditUnitOfMeasureCode;
      IsCommentLine := Type = Type::" ";
    END;

    LOCAL PROCEDURE UpdateTypeText@14();
    VAR
      RecRef@1000 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      TypeAsText := TempOptionLookupBuffer.FormatOption(RecRef.FIELD(FIELDNO(Type)));
    END;

    LOCAL PROCEDURE SetItemChargeFieldsStyle@77();
    BEGIN
      ItemChargeStyleExpression := '';
      if AssignedItemCharge and ("Qty. Assigned" <> Quantity) then
        ItemChargeStyleExpression := 'Unfavorable';
    END;

    LOCAL PROCEDURE UpdateCurrency@1();
    BEGIN
      if Currency.Code <> TotalPurchaseHeader."Currency Code" then
        if not Currency.GET(TotalPurchaseHeader."Currency Code") then begin
          CLEAR(Currency);
          Currency.InitRoundingPrecision;
        end
    END;

    BEGIN
    END.
  }
}

