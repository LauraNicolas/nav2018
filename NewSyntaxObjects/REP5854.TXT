OBJECT Report 5854 Roll Up Standard Cost
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Roll Up Standard Cost;
    ProcessingOnly=true;
    OnPreReport=VAR
                  StdCostWkshName@1000 : Record "Standard Cost Worksheet Name";
                BEGIN
                  RolledUp := false;

                  if ToStdCostWkshName = '' then
                    ERROR(STRSUBSTNO(Text003));
                  StdCostWkshName.GET(ToStdCostWkshName);
                END;

  }
  DATASET
  {
    { 8129;    ;DataItem;Item                ;
               DataItemTable=Item;
               DataItemTableView=SORTING("No.");
               OnPreDataItem=BEGIN
                               StdCostWksh.LOCKTABLE;
                               CLEAR(CalcStdCost);
                               CalcStdCost.SetProperties(CalculationDate,true,false,false,ToStdCostWkshName,true);
                               CalcStdCost.CalcItems(Item,TempItem);

                               TempItem.SETFILTER("Replenishment System",'%1|%2',
                                 TempItem."Replenishment System"::"Prod. Order",
                                 TempItem."Replenishment System"::Assembly);
                               if TempItem.FIND('-') then
                                 repeat
                                   UpdateStdCostWksh;
                                   RolledUp := true;
                                 until TempItem.NEXT = 0;
                             END;

               OnPostDataItem=BEGIN
                                if not NoMessage then
                                  if RolledUp then
                                    MESSAGE(Text000)
                                  else
                                    MESSAGE(Text001);
                              END;

               ReqFilterFields="No.","Costing Method" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnOpenPage=BEGIN
                   if CalculationDate = 0D then
                     CalculationDate := WORKDATE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 15  ;2   ;Field     ;
                  Name=CalculationDate;
                  CaptionML=ENU=Calculation Date;
                  ToolTipML=ENU=Specifies the date you want the cost shares to be calculated.;
                  ApplicationArea=#Advanced;
                  SourceExpr=CalculationDate;
                  OnValidate=BEGIN
                               if CalculationDate = 0D then
                                 ERROR(Text002);
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      TempItem@1003 : TEMPORARY Record Item;
      StdCostWksh@1004 : Record "Standard Cost Worksheet";
      CalcStdCost@1000 : Codeunit "Calculate Standard Cost";
      CalculationDate@1001 : Date;
      ToStdCostWkshName@1002 : Code[10];
      RolledUp@1006 : Boolean;
      Text000@1007 : TextConst 'ENU=The standard costs have been rolled up successfully.';
      Text001@1008 : TextConst 'ENU=There is nothing to roll up.';
      Text002@1009 : TextConst 'ENU=You must enter a calculation date.';
      Text003@1010 : TextConst 'ENU=You must specify a worksheet name to roll up to.';
      NoMessage@1011 : Boolean;

    LOCAL PROCEDURE UpdateStdCostWksh@3();
    VAR
      Found@1000 : Boolean;
    BEGIN
      with StdCostWksh do begin
        Found := GET(ToStdCostWkshName,Type::Item,TempItem."No.");
        VALIDATE("Standard Cost Worksheet Name",ToStdCostWkshName);
        VALIDATE(Type,Type::Item);
        VALIDATE("No.",TempItem."No.");
        "New Standard Cost" := TempItem."Standard Cost";

        "New Single-Lvl Material Cost" := TempItem."Single-Level Material Cost";
        "New Single-Lvl Cap. Cost" := TempItem."Single-Level Capacity Cost";
        "New Single-Lvl Subcontrd Cost" := TempItem."Single-Level Subcontrd. Cost";
        "New Single-Lvl Cap. Ovhd Cost" := TempItem."Single-Level Cap. Ovhd Cost";
        "New Single-Lvl Mfg. Ovhd Cost" := TempItem."Single-Level Mfg. Ovhd Cost";

        "New Rolled-up Material Cost" := TempItem."Rolled-up Material Cost";
        "New Rolled-up Cap. Cost" := TempItem."Rolled-up Capacity Cost";
        "New Rolled-up Subcontrd Cost" := TempItem."Rolled-up Subcontracted Cost";
        "New Rolled-up Cap. Ovhd Cost" := TempItem."Rolled-up Cap. Overhead Cost";
        "New Rolled-up Mfg. Ovhd Cost" := TempItem."Rolled-up Mfg. Ovhd Cost";

        if Found then
          MODIFY(true)
        else
          INSERT(true);
      end;
    END;

    PROCEDURE SetStdCostWksh@1(NewStdCostWkshName@1000 : Code[10]);
    BEGIN
      ToStdCostWkshName := NewStdCostWkshName;
    END;

    PROCEDURE Initialize@2(StdCostWkshName2@1000 : Code[10];NoMessage2@1001 : Boolean);
    BEGIN
      ToStdCostWkshName := StdCostWkshName2;
      NoMessage := NoMessage2;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

