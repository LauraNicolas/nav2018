OBJECT Table 5635 Insurance Journal Line
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               LOCKTABLE;
               InsuranceJnlTempl.GET("Journal Template Name");
               "Source Code" := InsuranceJnlTempl."Source Code";
               InsuranceJnlBatch.GET("Journal Template Name","Journal Batch Name");
               "Reason Code" := InsuranceJnlBatch."Reason Code";

               ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
               ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
             END;

    CaptionML=ENU=Insurance Journal Line;
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="Insurance Journal Template";
                                                   CaptionML=ENU=Journal Template Name }
    { 2   ;   ;Journal Batch Name  ;Code10        ;TableRelation="Insurance Journal Batch".Name WHERE ("Journal Template Name"=FIELD("Journal Template Name"));
                                                   CaptionML=ENU=Journal Batch Name }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 4   ;   ;Insurance No.       ;Code20        ;TableRelation=Insurance;
                                                   OnValidate=BEGIN
                                                                if "Insurance No." = '' then begin
                                                                  CreateDim(DATABASE::Insurance,"Insurance No.");
                                                                  exit;
                                                                end;

                                                                Insurance.GET("Insurance No.");
                                                                Insurance.TESTFIELD(Blocked,false);
                                                                Description := Insurance.Description;

                                                                CreateDim(DATABASE::Insurance,"Insurance No.");
                                                              END;

                                                   CaptionML=ENU=Insurance No. }
    { 6   ;   ;FA No.              ;Code20        ;TableRelation="Fixed Asset";
                                                   OnValidate=BEGIN
                                                                if "FA No." = '' then begin
                                                                  "FA Description" := '';
                                                                  exit;
                                                                end;
                                                                FA.GET("FA No.");
                                                                "FA Description" := FA.Description;
                                                                FA.TESTFIELD(Blocked,false);
                                                                FA.TESTFIELD(Inactive,false);
                                                              END;

                                                   CaptionML=ENU=FA No. }
    { 7   ;   ;FA Description      ;Text50        ;CaptionML=ENU=FA Description }
    { 8   ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 9   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,,Invoice,Credit Memo";
                                                   OptionString=" ",,Invoice,"Credit Memo" }
    { 10  ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 11  ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 12  ;   ;External Document No.;Code35       ;CaptionML=ENU=External Document No. }
    { 13  ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   AutoFormatType=1 }
    { 14  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 15  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 16  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 17  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code }
    { 18  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code }
    { 20  ;   ;Index Entry         ;Boolean       ;CaptionML=ENU=Index Entry }
    { 21  ;   ;Posting No. Series  ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Posting No. Series }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnValidate=BEGIN
                                                                DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"Journal Template Name","Journal Batch Name","Line No.";
                                                   Clustered=true }
    {    ;"Journal Template Name","Journal Batch Name","Posting Date";
                                                   MaintainSQLIndex=false }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Insurance@1000 : Record Insurance;
      FA@1001 : Record "Fixed Asset";
      InsuranceJnlTempl@1002 : Record "Insurance Journal Template";
      InsuranceJnlBatch@1003 : Record "Insurance Journal Batch";
      InsuranceJnlLine@1004 : Record "Insurance Journal Line";
      NoSeriesMgt@1005 : Codeunit NoSeriesManagement;
      DimMgt@1006 : Codeunit DimensionManagement;

    [External]
    PROCEDURE SetUpNewLine@8(LastInsuranceJnlLine@1000 : Record "Insurance Journal Line");
    BEGIN
      InsuranceJnlTempl.GET("Journal Template Name");
      InsuranceJnlBatch.GET("Journal Template Name","Journal Batch Name");
      InsuranceJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
      InsuranceJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
      if InsuranceJnlLine.FINDFIRST then begin
        "Posting Date" := LastInsuranceJnlLine."Posting Date";
        "Document No." := LastInsuranceJnlLine."Document No.";
      end else begin
        "Posting Date" := WORKDATE;
        if InsuranceJnlBatch."No. Series" <> '' then begin
          CLEAR(NoSeriesMgt);
          "Document No." := NoSeriesMgt.TryGetNextNo(InsuranceJnlBatch."No. Series","Posting Date");
        end;
      end;
      "Source Code" := InsuranceJnlTempl."Source Code";
      "Reason Code" := InsuranceJnlBatch."Reason Code";
      "Posting No. Series" := InsuranceJnlBatch."Posting No. Series";
    END;

    [External]
    PROCEDURE CreateDim@13(Type1@1000 : Integer;No1@1001 : Code[20]);
    VAR
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
    BEGIN
      TableID[1] := Type1;
      No[1] := No1;
      OnAfterCreateDimTableIDs(Rec,CurrFieldNo,TableID,No);

      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      "Dimension Set ID" :=
        DimMgt.GetRecDefaultDimID(
          Rec,CurrFieldNo,TableID,No,"Source Code","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0);
    END;

    [External]
    PROCEDURE ValidateShortcutDimCode@14(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    [External]
    PROCEDURE LookupShortcutDimCode@18(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    [External]
    PROCEDURE ShowShortcutDimCode@15(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    [External]
    PROCEDURE ShowDimensions@2();
    BEGIN
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1 %2 %3',"Journal Template Name","Journal Batch Name","Line No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    [External]
    PROCEDURE IsOpenedFromBatch@42() : Boolean;
    VAR
      InsuranceJournalBatch@1002 : Record "Insurance Journal Batch";
      TemplateFilter@1001 : Text;
      BatchFilter@1000 : Text;
    BEGIN
      BatchFilter := GETFILTER("Journal Batch Name");
      if BatchFilter <> '' then begin
        TemplateFilter := GETFILTER("Journal Template Name");
        if TemplateFilter <> '' then
          InsuranceJournalBatch.SETFILTER("Journal Template Name",TemplateFilter);
        InsuranceJournalBatch.SETFILTER(Name,BatchFilter);
        InsuranceJournalBatch.FINDFIRST;
      end;

      exit((("Journal Batch Name" <> '') and ("Journal Template Name" = '')) or (BatchFilter <> ''));
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCreateDimTableIDs@138(VAR InsuranceJournalLine@1000 : Record "Insurance Journal Line";FieldNo@1001 : Integer;TableID@1003 : ARRAY [10] OF Integer;No@1002 : ARRAY [10] OF Code[20]);
    BEGIN
    END;

    BEGIN
    END.
  }
}

