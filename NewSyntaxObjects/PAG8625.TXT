OBJECT Page 8625 Config. Package Subform
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Tables;
    SourceTable="Config. Package Table";
    DelayedInsert=true;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 SETFILTER("Company Filter (Source Table)",'%1',COMPANYNAME);
               END;

    OnAfterGetRecord=BEGIN
                       NoOfErrorsStyleTxt := SetFieldStyle(FIELDNO("No. of Package Errors"));
                     END;

    OnInsertRecord=BEGIN
                     CheckFieldsMultiRelations;
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 23      ;1   ;ActionGroup;
                      Name=Table;
                      CaptionML=ENU=Table }
      { 32      ;2   ;Action    ;
                      Name=PackageRecords;
                      CaptionML=ENU=Package Data;
                      ToolTipML=ENU=View or edit information about the package.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Grid;
                      OnAction=BEGIN
                                 ShowPackageRecords(Show::Records,"Dimensions as Columns");
                               END;
                                }
      { 30      ;2   ;Action    ;
                      Name=DatabaseRecords;
                      CaptionML=ENU=Database Data;
                      ToolTipML=ENU=View the data that has been applied to the database.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Database;
                      OnAction=BEGIN
                                 ShowDatabaseRecords;
                               END;
                                }
      { 29      ;2   ;Action    ;
                      Name=PackageErrors;
                      CaptionML=ENU=Errors;
                      ToolTipML=ENU=View a list of errors that resulted from the data migration. For example, if you are importing a customer into Dynamics 365 and assign to that customer a salesperson who is not in the database, you get an error during migration. You can fix the error by removing the incorrect salesperson ID or by updating the information about salespeople so that the list of salespeople is correct and up-to-date.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ErrorLog;
                      OnAction=BEGIN
                                 ShowPackageRecords(Show::Errors,"Dimensions as Columns");
                               END;
                                }
      { 24      ;2   ;Action    ;
                      Name=PackageFields;
                      CaptionML=ENU=Fields;
                      ToolTipML=ENU=View the fields that are used in the company configuration process. For each table in the list of configuration tables, the Config. Package Fields window displays a list of all the fields in the table and indicates the order in which the data in a field is to be processed.;
                      ApplicationArea=#Basic,#Suite;
                      Image=CheckList;
                      OnAction=BEGIN
                                 ShowPackageFields;
                               END;
                                }
      { 7       ;2   ;Action    ;
                      Name=PackageFilters;
                      CaptionML=ENU=Filters;
                      ToolTipML=ENU=View or set field filter values for a configuration package filter. By setting a value, you specify that only records with that value are included in the configuration package.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Filter;
                      OnAction=BEGIN
                                 ShowFilters;
                               END;
                                }
      { 36      ;2   ;Action    ;
                      Name=ProcessingRules;
                      CaptionML=ENU=Processing Rules;
                      ToolTipML=ENU=View or edit the filters that are used to process data.;
                      ApplicationArea=#Basic,#Suite;
                      Image=SetupList;
                      OnAction=BEGIN
                                 ShowProcessingRules;
                               END;
                                }
      { 26      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 34      ;2   ;Action    ;
                      Name=GetRelatedTables;
                      CaptionML=ENU=Get Related Tables;
                      ToolTipML=ENU=Select tables that relate to existing selected tables that you also want to add to the configuration package.;
                      ApplicationArea=#Advanced;
                      Image=GetLines;
                      OnAction=VAR
                                 ConfigPackageTable@1000 : Record "Config. Package Table";
                                 ConfigPackageMgt@1004 : Codeunit "Config. Package Management";
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ConfigPackageTable);
                                 ConfigPackageMgt.GetRelatedTables(ConfigPackageTable);
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=ValidateRelations;
                      CaptionML=ENU=Validate Relations;
                      ToolTipML=ENU=Determine if you have introduced errors, such as not including tables that the configuration relies on.;
                      ApplicationArea=#Basic,#Suite;
                      Image=CheckRulesSyntax;
                      OnAction=VAR
                                 TempConfigPackageTable@1001 : TEMPORARY Record "Config. Package Table";
                                 ConfigPackageMgt@1002 : Codeunit "Config. Package Management";
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ConfigPackageTable);

                                 if CONFIRM(SelectionConfirmMessage,true) then
                                   ConfigPackageMgt.ValidatePackageRelations(ConfigPackageTable,TempConfigPackageTable,true);
                               END;
                                }
      { 8       ;2   ;Action    ;
                      Name=ApplyData;
                      CaptionML=ENU=Apply Data;
                      ToolTipML=ENU=Apply the data in the package to the database. After you apply data, you can only see it in the database.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Apply;
                      OnAction=VAR
                                 ConfigPackage@1000 : Record "Config. Package";
                                 ConfigPackageMgt@1001 : Codeunit "Config. Package Management";
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ConfigPackageTable);
                                 if CONFIRM(SelectionConfirmMessage,true) then begin
                                   ConfigPackage.GET("Package Code");
                                   ConfigPackageMgt.ApplyPackage(ConfigPackage,ConfigPackageTable,true);
                                 end;
                               END;
                                }
      { 19      ;1   ;ActionGroup;
                      Name=E&xcel;
                      CaptionML=ENU=E&xcel }
      { 21      ;2   ;Action    ;
                      Name=ExportToExcel;
                      CaptionML=ENU=Export to Excel;
                      ToolTipML=ENU=Export the data in the package to Excel.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ExportToExcel;
                      OnAction=VAR
                                 ConfigExcelExchange@1001 : Codeunit "Config. Excel Exchange";
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ConfigPackageTable);
                                 if CONFIRM(SelectionConfirmMessage,true) then
                                   ConfigExcelExchange.ExportExcelFromTables(ConfigPackageTable);
                               END;
                                }
      { 20      ;2   ;Action    ;
                      Name=ImportFromExcel;
                      CaptionML=ENU=Import from Excel;
                      ToolTipML=ENU=Begin the migration of legacy data.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ImportExcel;
                      OnAction=VAR
                                 ConfigExcelExchange@1000 : Codeunit "Config. Excel Exchange";
                               BEGIN
                                 ConfigExcelExchange.ImportExcelFromPackage;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Table ID;
                ToolTipML=ENU=Specifies the name of the table that is part of the migration process. The name comes from the Name property of the table.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Table ID";
                StyleExpr=NoOfErrorsStyleTxt;
                OnValidate=BEGIN
                             CALCFIELDS("Table Name");
                           END;

                ImplicitType=Integer }

    { 4   ;2   ;Field     ;
                Name=Table Name;
                DrillDown=false;
                ToolTipML=ENU=Specifies the name of the configuration table. After you select a table ID from the list of tables, the table name is automatically filled in.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Table Name";
                StyleExpr=NoOfErrorsStyleTxt;
                ImplicitType=Text250 }

    { 13  ;2   ;Field     ;
                Name=Table Caption;
                DrillDown=false;
                ToolTipML=ENU=Specifies the caption of the table that is part of the migration process. The name comes from the Caption property of the table.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Table Caption";
                Visible=FALSE;
                ImplicitType=Text250 }

    { 5   ;2   ;Field     ;
                Name=Parent Table ID;
                ToolTipML=ENU=Specifies the table that holds the configuration data.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Parent Table ID";
                ImplicitType=Integer }

    { 28  ;2   ;Field     ;
                Name=Data Template;
                ToolTipML=ENU=Specifies the name of the data template that is being used as part of the migration process.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Data Template";
                OnLookup=VAR
                           ConfigTemplateHeader@1001 : Record "Config. Template Header";
                         BEGIN
                           ConfigTemplateHeader.SETRANGE("Table ID","Table ID");
                           if PAGE.RUNMODAL(PAGE::"Config. Template List",ConfigTemplateHeader,ConfigTemplateHeader.Code) = ACTION::LookupOK then
                             "Data Template" := ConfigTemplateHeader.Code;
                         END;

                ImplicitType=Code10 }

    { 3   ;2   ;Field     ;
                Name=Processing Order;
                ToolTipML=ENU=Specifies the number of the processing order. This is used to track the migration process.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Processing Order";
                Visible=FALSE;
                ImplicitType=Integer }

    { 17  ;2   ;Field     ;
                Name=Skip Table Triggers;
                ToolTipML=ENU=Specifies whether codeunit triggers related to tables should be skipped during the configuration process.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Skip Table Triggers";
                ImplicitType=Boolean }

    { 37  ;2   ;Field     ;
                Name=Delete Recs Before Processing;
                CaptionML=ENU=Delete Table Records Before Processing;
                ToolTipML=ENU=Specifies whether table records should be deleted before the migration process is begun.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Delete Recs Before Processing";
                ImplicitType=Boolean }

    { 12  ;2   ;Field     ;
                Name=Processing Report ID;
                ToolTipML=ENU=Specifies the codeunit that has been set up to process data before you apply it to a Dynamics 365 database. By default, Dynamics 365 uses codeunit 8621.;
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr="Processing Report ID";
                Visible=FALSE;
                ImplicitType=Integer }

    { 6   ;2   ;Field     ;
                Name=No. of Package Records;
                DrillDown=true;
                ToolTipML=ENU=Specifies the count of the number of configuration package records.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No. of Package Records";
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ShowPackageRecords(Show::All,"Dimensions as Columns");
                              CurrPage.UPDATE;
                            END;

                ImplicitType=Integer }

    { 11  ;2   ;Field     ;
                Name=No. of Fields Available;
                DrillDown=true;
                ToolTipML=ENU=Specifies the count of the number of fields that are available in the migration table.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No. of Fields Available";
                DrillDownPageID="Config. Package Fields";
                ImplicitType=Integer }

    { 15  ;2   ;Field     ;
                Name=No. of Fields Included;
                DrillDown=true;
                ToolTipML=ENU=Specifies the count of the number of fields that are included in the migration table.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No. of Fields Included";
                DrillDownPageID="Config. Package Fields";
                ImplicitType=Integer }

    { 25  ;2   ;Field     ;
                Name=No. of Fields to Validate;
                DrillDown=true;
                ToolTipML=ENU=Specifies the number of fields to validate. The count of the number of fields to validate is based on how many fields in the table have the Validate Field check box selected.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No. of Fields to Validate";
                DrillDownPageID="Config. Package Fields";
                ImplicitType=Integer }

    { 31  ;2   ;Field     ;
                Name=No. of Package Errors;
                DrillDown=true;
                ToolTipML=ENU=Specifies the count of the number of package errors.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No. of Package Errors";
                Editable=FALSE;
                StyleExpr=NoOfErrorsStyleTxt;
                OnDrillDown=BEGIN
                              ShowPackageRecords(Show::Errors,"Dimensions as Columns");
                              CurrPage.UPDATE;
                            END;

                ImplicitType=Integer }

    { 10  ;2   ;Field     ;
                Name=NoOfDatabaseRecords;
                DrillDown=true;
                CaptionML=ENU=No. of Database Records;
                ToolTipML=ENU=Specifies how many database records have been created in connection with the migration.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetNoOfDatabaseRecords;
                OnDrillDown=BEGIN
                              ShowDatabaseRecords;
                            END;

                ImplicitType=Integer }

    { 16  ;2   ;Field     ;
                Name=Filtered;
                ToolTipML=ENU=Specifies whether the package is filtered. This field is set depending on filter settings you have specified.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Filtered;
                ImplicitType=Boolean }

    { 39  ;2   ;Field     ;
                Name=Page ID;
                ToolTipML=ENU=Specifies the number of the page that is used to show the journal or worksheet that uses the template.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Page ID";
                ImplicitType=Integer }

    { 18  ;2   ;Field     ;
                Name=Comments;
                ToolTipML=ENU=Specifies a comment in which you can provide a description;
                ApplicationArea=#Advanced;
                SourceExpr=Comments;
                ImplicitType=Text250 }

    { 22  ;2   ;Field     ;
                Name=Created Date and Time;
                ToolTipML=ENU=Specifies the date and time that the configuration package was created. The field is updated each time you save the package.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Created Date and Time";
                ImplicitType=DateTime }

    { 27  ;2   ;Field     ;
                Name=Created by User ID;
                ToolTipML=ENU=Specifies the ID of the user who created the configuration package.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Created by User ID";
                ImplicitType=Code50 }

    { 14  ;2   ;Field     ;
                Name=Imported Date and Time;
                ToolTipML=ENU=Specifies the date and time that migration records were imported from Excel or from an .xml file.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Imported Date and Time";
                Editable=FALSE;
                ImplicitType=DateTime }

    { 33  ;2   ;Field     ;
                Name=Imported by User ID;
                ToolTipML=ENU=Specifies the ID of the user who has imported the package.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Imported by User ID";
                ImplicitType=Code50 }

  }
  CODE
  {
    VAR
      MultipleTablesSelectedQst@1003 : TextConst '@@@="%1 = Number of selected tables";ENU=%1 tables have been selected. Do you want to continue?';
      ConfigPackageTable@1005 : Record "Config. Package Table";
      Show@1000 : 'Records,Errors,All';
      NoOfErrorsStyleTxt@1001 : Text INDATASET;
      SingleTableSelectedQst@1002 : TextConst '@@@="%1 = Table name";ENU=One table has been selected. Do you want to continue?';
      MultiRelationQst@1004 : TextConst 'ENU=Some fields have 2 or more related tables.\Do you want check them?';

    LOCAL PROCEDURE SelectionConfirmMessage@1() : Text;
    BEGIN
      if ConfigPackageTable.COUNT <> 1 then
        exit(STRSUBSTNO(MultipleTablesSelectedQst,ConfigPackageTable.COUNT));

      exit(SingleTableSelectedQst);
    END;

    LOCAL PROCEDURE CheckFieldsMultiRelations@5();
    VAR
      Field@1004 : Record Field;
      ConfigPackageManagement@1002 : Codeunit "Config. Package Management";
      FieldsWithMultiRelations@1001 : Boolean;
      FilterMultiRelationFields@1000 : Text;
    BEGIN
      ConfigPackageManagement.SetFieldFilter(Field,"Table ID",0);
      if Field.FINDSET then
        repeat
          if ConfigPackageManagement.IsFieldMultiRelation("Table ID",Field."No.") then begin
            FieldsWithMultiRelations := true;
            FilterMultiRelationFields += FORMAT(Field."No.") + '|';
          end;
        until Field.NEXT = 0;
      if FieldsWithMultiRelations then
        if CONFIRM(MultiRelationQst) then
          ShowFilteredPackageFields(DELCHR(FilterMultiRelationFields,'>','|'));
    END;

    BEGIN
    END.
  }
}

