OBJECT Report 81 Import Budget from Excel
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Import Budget from Excel;
    ProcessingOnly=true;
    OnPreReport=VAR
                  BusUnit@1000 : Record "Business Unit";
                BEGIN
                  if ToGLBudgetName = '' then
                    ERROR(STRSUBSTNO(Text000));

                  if SheetName = '' then
                    SheetName := ExcelBuf.SelectSheetsName(ServerFileName);

                  BusUnitDimCode := 'BUSINESSUNIT_TAB220';
                  TempDim.INIT;
                  TempDim.Code := BusUnitDimCode;
                  TempDim."Code Caption" := UPPERCASE(BusUnit.TABLECAPTION);
                  TempDim.INSERT;

                  if Dim.FIND('-') then begin
                    repeat
                      TempDim.INIT;
                      TempDim := Dim;
                      TempDim."Code Caption" := UPPERCASE(TempDim."Code Caption");
                      TempDim.INSERT;
                    until Dim.NEXT = 0;
                  end;

                  if GLAcc.FIND('-') then begin
                    repeat
                      TempGLAcc.INIT;
                      TempGLAcc := GLAcc;
                      TempGLAcc.INSERT;
                    until GLAcc.NEXT = 0;
                  end;

                  ExcelBuf.LOCKTABLE;
                  BudgetBuf.LOCKTABLE;
                  GLBudgetEntry.SETRANGE("Budget Name",ToGLBudgetName);
                  if not GLBudgetName.GET(ToGLBudgetName) then
                    CLEAR(GLBudgetName);

                  GLSetup.GET;
                  GlobalDim1Code := GLSetup."Global Dimension 1 Code";
                  GlobalDim2Code := GLSetup."Global Dimension 2 Code";
                  BudgetDim1Code := GLBudgetName."Budget Dimension 1 Code";
                  BudgetDim2Code := GLBudgetName."Budget Dimension 2 Code";
                  BudgetDim3Code := GLBudgetName."Budget Dimension 3 Code";
                  BudgetDim4Code := GLBudgetName."Budget Dimension 4 Code";

                  ExcelBuf.OpenBook(ServerFileName,SheetName);
                  ExcelBuf.ReadSheet;

                  AnalyzeData;
                END;

    OnPostReport=BEGIN
                   ExcelBuf.DELETEALL;
                   BudgetBuf.DELETEALL;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;BudgetBuf           ;
               DataItemTable="Budget Buffer";
               DataItemTableView=SORTING("G/L Account No.","Dimension Value Code 1","Dimension Value Code 2","Dimension Value Code 3","Dimension Value Code 4","Dimension Value Code 5","Dimension Value Code 6","Dimension Value Code 7","Dimension Value Code 8",Date);
               OnPreDataItem=BEGIN
                               RecNo := 0;

                               if not GLBudgetName.GET(ToGLBudgetName) then begin
                                 if not CONFIRM(Text001,false,GLBudgetName.TABLECAPTION,ToGLBudgetName) then
                                   CurrReport.BREAK;
                                 GLBudgetName.Name := ToGLBudgetName;
                                 GLBudgetName.INSERT;
                               end else begin
                                 if GLBudgetName.Blocked then begin
                                   MESSAGE(Text002,
                                     GLBudgetEntry.FIELDCAPTION("Budget Name"),ToGLBudgetName);
                                   CurrReport.BREAK;
                                 end;
                                 if not CONFIRM(Text003,false,LOWERCASE(FORMAT(SELECTSTR(ImportOption + 1,Text027))),ToGLBudgetName) then
                                   CurrReport.BREAK;
                               end;

                               if GLBudgetEntry3.FINDLAST then
                                 EntryNo := GLBudgetEntry3."Entry No." + 1
                               else
                                 EntryNo := 1;
                               LastEntryNoBeforeImport := GLBudgetEntry3."Entry No.";
                             END;

               OnAfterGetRecord=BEGIN
                                  RecNo := RecNo + 1;

                                  if ImportOption = ImportOption::"Replace entries" then begin
                                    GLBudgetEntry.SETRANGE("G/L Account No.","G/L Account No.");
                                    GLBudgetEntry.SETRANGE(Date,Date);
                                    GLBudgetEntry.SETFILTER("Entry No.",'<=%1',LastEntryNoBeforeImport);
                                    if DimCode[1] <> '' then
                                      SetBudgetDimFilter(DimCode[1],"Dimension Value Code 1",GLBudgetEntry);
                                    if DimCode[2] <> '' then
                                      SetBudgetDimFilter(DimCode[2],"Dimension Value Code 2",GLBudgetEntry);
                                    if DimCode[3] <> '' then
                                      SetBudgetDimFilter(DimCode[3],"Dimension Value Code 3",GLBudgetEntry);
                                    if DimCode[4] <> '' then
                                      SetBudgetDimFilter(DimCode[4],"Dimension Value Code 4",GLBudgetEntry);
                                    if DimCode[5] <> '' then
                                      SetBudgetDimFilter(DimCode[5],"Dimension Value Code 5",GLBudgetEntry);
                                    if DimCode[6] <> '' then
                                      SetBudgetDimFilter(DimCode[6],"Dimension Value Code 6",GLBudgetEntry);
                                    if DimCode[7] <> '' then
                                      SetBudgetDimFilter(DimCode[7],"Dimension Value Code 7",GLBudgetEntry);
                                    if DimCode[8] <> '' then
                                      SetBudgetDimFilter(DimCode[8],"Dimension Value Code 8",GLBudgetEntry);
                                    if not GLBudgetEntry.ISEMPTY then
                                      GLBudgetEntry.DELETEALL(true);
                                  end;

                                  if Amount = 0 then
                                    CurrReport.SKIP;
                                  if not IsPostingAccount("G/L Account No.") then
                                    CurrReport.SKIP;
                                  GLBudgetEntry.INIT;
                                  GLBudgetEntry."Entry No." := EntryNo;
                                  GLBudgetEntry."Budget Name" := ToGLBudgetName;
                                  GLBudgetEntry."G/L Account No." := "G/L Account No.";
                                  GLBudgetEntry.Date := Date;
                                  GLBudgetEntry.Amount := ROUND(Amount);
                                  GLBudgetEntry.Description := Description;

                                  // Clear any entries in the temporary dimension set entry table
                                  if not TempDimSetEntry.ISEMPTY then
                                    TempDimSetEntry.DELETEALL(true);

                                  if "Dimension Value Code 1" <> '' then
                                    InsertGLBudgetDim(DimCode[1],"Dimension Value Code 1",GLBudgetEntry);
                                  if "Dimension Value Code 2" <> '' then
                                    InsertGLBudgetDim(DimCode[2],"Dimension Value Code 2",GLBudgetEntry);
                                  if "Dimension Value Code 3" <> '' then
                                    InsertGLBudgetDim(DimCode[3],"Dimension Value Code 3",GLBudgetEntry);
                                  if "Dimension Value Code 4" <> '' then
                                    InsertGLBudgetDim(DimCode[4],"Dimension Value Code 4",GLBudgetEntry);
                                  if "Dimension Value Code 5" <> '' then
                                    InsertGLBudgetDim(DimCode[5],"Dimension Value Code 5",GLBudgetEntry);
                                  if "Dimension Value Code 6" <> '' then
                                    InsertGLBudgetDim(DimCode[6],"Dimension Value Code 6",GLBudgetEntry);
                                  if "Dimension Value Code 7" <> '' then
                                    InsertGLBudgetDim(DimCode[7],"Dimension Value Code 7",GLBudgetEntry);
                                  if "Dimension Value Code 8" <> '' then
                                    InsertGLBudgetDim(DimCode[8],"Dimension Value Code 8",GLBudgetEntry);
                                  GLBudgetEntry."Dimension Set ID" := DimMgt.GetDimensionSetID(TempDimSetEntry);
                                  GLBudgetEntry.INSERT(true);
                                  EntryNo := EntryNo + 1;
                                END;

               OnPostDataItem=BEGIN
                                if RecNo > 0 then
                                  MESSAGE(Text004,GLBudgetEntry.TABLECAPTION,RecNo);

                                if ImportOption = ImportOption::"Replace entries" then begin
                                  AnalysisView.SETRANGE("Include Budgets",true);
                                  if AnalysisView.FINDSET(true,false) then
                                    repeat
                                      AnalysisView.AnalysisviewBudgetReset;
                                      AnalysisView.MODIFY;
                                    until AnalysisView.NEXT = 0;
                                end;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnOpenPage=BEGIN
                   Description := Text005 + FORMAT(WORKDATE);
                 END;

      OnQueryClosePage=VAR
                         FileMgt@1001 : Codeunit "File Management";
                       BEGIN
                         if CloseAction = ACTION::OK then begin
                           if ServerFileName = '' then
                             ServerFileName := FileMgt.UploadFile(Text006,ExcelFileExtensionTok);
                           if ServerFileName = '' then
                             exit(false);
                         end;
                       END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 9   ;2   ;Field     ;
                  Name=Budget Name;
                  CaptionML=ENU=Budget Name;
                  ToolTipML=ENU=Specifies the name of the budget.;
                  ApplicationArea=#Suite;
                  SourceExpr=ToGLBudgetName;
                  TableRelation="G/L Budget Name" }

      { 7   ;2   ;Field     ;
                  Name=Option;
                  CaptionML=ENU=Option;
                  ToolTipML=ENU=Specifies if the budget entries are added from Excel to budget entries that are currently in the system or are replaced in Dynamics 365 for Finance and Operations, Business edition with the budget entries from Excel.;
                  OptionCaptionML=ENU=Replace entries,Add entries;
                  ApplicationArea=#Suite;
                  SourceExpr=ImportOption }

      { 5   ;2   ;Field     ;
                  Name=Description;
                  CaptionML=ENU=Description;
                  ToolTipML=ENU=Specifies a description of the imported budget entries, so that the entries can be easily identified among other budget entries.;
                  ApplicationArea=#Suite;
                  SourceExpr=Description }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You must specify a budget name to import to.';
      Text001@1001 : TextConst 'ENU=Do you want to create a %1 with the name %2?';
      Text002@1002 : TextConst 'ENU=%1 %2 is blocked. You cannot import entries.';
      Text003@1003 : TextConst 'ENU=Are you sure that you want to %1 for the budget name %2?';
      Text004@1004 : TextConst 'ENU=%1 table has been successfully updated with %2 entries.';
      Text005@1005 : TextConst 'ENU="Imported from Excel "';
      Text006@1006 : TextConst 'ENU=Import Excel File';
      Text007@1007 : TextConst 'ENU=Analyzing Data...\\';
      Text008@1008 : TextConst 'ENU=You cannot specify more than 8 dimensions in your Excel worksheet.';
      Text010@1010 : TextConst 'ENU=G/L Account No.';
      Text011@1011 : TextConst 'ENU=The text G/L Account No. can only be specified once in the Excel worksheet.';
      Text012@1012 : TextConst 'ENU=The dimensions specified by worksheet must be placed in the lines before the table.';
      Text013@1013 : TextConst 'ENU="Dimension "';
      Text014@1014 : TextConst 'ENU=Date';
      Text015@1015 : TextConst 'ENU=Dimension 1';
      Text016@1016 : TextConst 'ENU=Dimension 2';
      Text017@1017 : TextConst 'ENU=Dimension 3';
      Text018@1018 : TextConst 'ENU=Dimension 4';
      Text019@1019 : TextConst 'ENU=Dimension 5';
      Text020@1020 : TextConst 'ENU=Dimension 6';
      Text021@1021 : TextConst 'ENU=Dimension 7';
      Text022@1022 : TextConst 'ENU=Dimension 8';
      Text023@1023 : TextConst 'ENU=You cannot import the same information twice.\';
      Text024@1024 : TextConst 'ENU=The combination G/L Account No. - Dimensions - Date must be unique.';
      Text025@1025 : TextConst 'ENU=G/L Accounts have not been found in the Excel worksheet.';
      Text026@1026 : TextConst 'ENU=Dates have not been recognized in the Excel worksheet.';
      ExcelBuf@1027 : Record "Excel Buffer";
      Dim@1028 : Record Dimension;
      TempDim@1030 : TEMPORARY Record Dimension;
      GLBudgetEntry@1032 : Record "G/L Budget Entry";
      TempDimSetEntry@1029 : TEMPORARY Record "Dimension Set Entry";
      GLSetup@1034 : Record "General Ledger Setup";
      GLAcc@1035 : Record "G/L Account";
      TempGLAcc@1036 : TEMPORARY Record "G/L Account";
      GLBudgetName@1048 : Record "G/L Budget Name";
      GLBudgetEntry3@1049 : Record "G/L Budget Entry";
      AnalysisView@1057 : Record "Analysis View";
      DimMgt@1061 : Codeunit DimensionManagement;
      Window@1009 : Dialog;
      ServerFileName@1033 : Text;
      SheetName@1038 : Text[250];
      ToGLBudgetName@1039 : Code[10];
      DimCode@1040 : ARRAY [8] OF Code[20];
      EntryNo@1041 : Integer;
      LastEntryNoBeforeImport@1058 : Integer;
      GlobalDim1Code@1042 : Code[20];
      GlobalDim2Code@1043 : Code[20];
      TotalRecNo@1044 : Integer;
      RecNo@1045 : Integer;
      Description@1047 : Text[50];
      BusUnitDimCode@1031 : Code[20];
      BudgetDim1Code@1050 : Code[20];
      BudgetDim2Code@1051 : Code[20];
      BudgetDim3Code@1052 : Code[20];
      BudgetDim4Code@1053 : Code[20];
      ImportOption@1054 : '"Replace entries","Add entries"';
      Text027@1055 : TextConst 'ENU=Replace Entries,Add Entries';
      Text028@1056 : TextConst 'ENU=A filter has been used on the %1 when the budget was exported. When a filter on a dimension has been used, a column with the same dimension must be present in the worksheet imported. The column in the worksheet must specify the dimension value codes the program should use when importing the budget.';
      ExcelFileExtensionTok@1037 : TextConst '@@@={Locked};ENU=.xlsx';

    LOCAL PROCEDURE AnalyzeData@2();
    VAR
      TempExcelBuf@1000 : TEMPORARY Record "Excel Buffer";
      BudgetBuf@1001 : Record "Budget Buffer";
      DummyBudgetBuf@1002 : Record "Budget Buffer";
      HeaderRowNo@1003 : Integer;
      CountDim@1004 : Integer;
      TestDateTime@1005 : DateTime;
      OldRowNo@1006 : Integer;
      DimRowNo@1007 : Integer;
      DimCode3@1008 : Code[20];
    BEGIN
      Window.OPEN(
        Text007 +
        '@1@@@@@@@@@@@@@@@@@@@@@@@@@\');
      Window.UPDATE(1,0);
      TotalRecNo := ExcelBuf.COUNT;
      RecNo := 0;
      BudgetBuf.DELETEALL;

      if ExcelBuf.FIND('-') then begin
        repeat
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
          TempDim.SETRANGE("Code Caption",UPPERCASE(FormatData(ExcelBuf."Cell Value as Text")));
          case true of
            ExcelBuf."Cell Value as Text" = GLBudgetEntry.FIELDCAPTION("G/L Account No."):
              begin
                if HeaderRowNo = 0 then begin
                  HeaderRowNo := ExcelBuf."Row No.";
                  TempExcelBuf := ExcelBuf;
                  TempExcelBuf.Comment := Text010;
                  TempExcelBuf.INSERT;
                end else
                  ERROR(Text011);
              end;
            TempDim.FINDFIRST and (ExcelBuf."Column No." > 2) and (ExcelBuf."Row No." <> HeaderRowNo):
              begin
                if HeaderRowNo <> 0 then
                  ERROR(Text012);

                TempDim.MARK(true);
                DimRowNo := ExcelBuf."Row No.";
                DimCode3 := TempDim.Code;
              end;
            (ExcelBuf."Row No." = DimRowNo) and (ImportOption = ImportOption::"Replace entries"):
              case DimCode3 of
                BusUnitDimCode:
                  GLBudgetEntry.SETFILTER("Business Unit Code",ExcelBuf."Cell Value as Text");
                GlobalDim1Code:
                  GLBudgetEntry.SETFILTER("Global Dimension 1 Code",ExcelBuf."Cell Value as Text");
                GlobalDim2Code:
                  GLBudgetEntry.SETFILTER("Global Dimension 2 Code",ExcelBuf."Cell Value as Text");
                BudgetDim1Code:
                  GLBudgetEntry.SETFILTER("Budget Dimension 1 Code",ExcelBuf."Cell Value as Text");
                BudgetDim2Code:
                  GLBudgetEntry.SETFILTER("Budget Dimension 2 Code",ExcelBuf."Cell Value as Text");
                BudgetDim3Code:
                  GLBudgetEntry.SETFILTER("Budget Dimension 3 Code",ExcelBuf."Cell Value as Text");
                BudgetDim4Code:
                  GLBudgetEntry.SETFILTER("Budget Dimension 4 Code",ExcelBuf."Cell Value as Text");
              end;
            ExcelBuf."Row No." = HeaderRowNo:
              begin
                TempExcelBuf := ExcelBuf;
                case true of
                  TempDim.FINDFIRST:
                    begin
                      TempDim.MARK(false);
                      CountDim := CountDim + 1;
                      if CountDim > 8 then
                        ERROR(Text008);
                      TempExcelBuf.Comment := Text013 + FORMAT(CountDim);
                      TempExcelBuf.INSERT;
                      DimCode[CountDim] := TempDim.Code;
                    end;
                  EVALUATE(TestDateTime,TempExcelBuf."Cell Value as Text"):
                    begin
                      TempExcelBuf."Cell Value as Text" := FORMAT(DT2DATE(TestDateTime));
                      TempExcelBuf.Comment := Text014;
                      TempExcelBuf.INSERT;
                    end;
                end;
              end;
            (ExcelBuf."Row No." > HeaderRowNo) and (HeaderRowNo > 0):
              begin
                if ExcelBuf."Row No." <> OldRowNo then begin
                  OldRowNo := ExcelBuf."Row No.";
                  CLEAR(DummyBudgetBuf);
                end;

                TempExcelBuf.SETRANGE("Column No.",ExcelBuf."Column No.");
                if TempExcelBuf.FINDFIRST then
                  case TempExcelBuf.Comment of
                    Text010:
                      begin
                        TempGLAcc.SETRANGE(
                          "No.",
                          COPYSTR(
                            ExcelBuf."Cell Value as Text",
                            1,MAXSTRLEN(DummyBudgetBuf."G/L Account No.")));
                        if TempGLAcc.FINDFIRST then
                          DummyBudgetBuf."G/L Account No." :=
                            COPYSTR(
                              ExcelBuf."Cell Value as Text",
                              1,MAXSTRLEN(DummyBudgetBuf."G/L Account No."))
                        else
                          DummyBudgetBuf."G/L Account No." := '';
                      end;
                    Text015:
                      DummyBudgetBuf."Dimension Value Code 1" :=
                        COPYSTR(
                          ExcelBuf."Cell Value as Text",
                          1,MAXSTRLEN(DummyBudgetBuf."Dimension Value Code 1"));
                    Text016:
                      DummyBudgetBuf."Dimension Value Code 2" :=
                        COPYSTR(
                          ExcelBuf."Cell Value as Text",
                          1,MAXSTRLEN(DummyBudgetBuf."Dimension Value Code 2"));
                    Text017:
                      DummyBudgetBuf."Dimension Value Code 3" :=
                        COPYSTR(
                          ExcelBuf."Cell Value as Text",
                          1,MAXSTRLEN(DummyBudgetBuf."Dimension Value Code 3"));
                    Text018:
                      DummyBudgetBuf."Dimension Value Code 4" :=
                        COPYSTR(
                          ExcelBuf."Cell Value as Text",
                          1,MAXSTRLEN(DummyBudgetBuf."Dimension Value Code 4"));
                    Text019:
                      DummyBudgetBuf."Dimension Value Code 5" :=
                        COPYSTR(
                          ExcelBuf."Cell Value as Text",
                          1,MAXSTRLEN(DummyBudgetBuf."Dimension Value Code 5"));
                    Text020:
                      DummyBudgetBuf."Dimension Value Code 6" :=
                        COPYSTR(
                          ExcelBuf."Cell Value as Text",
                          1,MAXSTRLEN(DummyBudgetBuf."Dimension Value Code 6"));
                    Text021:
                      DummyBudgetBuf."Dimension Value Code 7" :=
                        COPYSTR(
                          ExcelBuf."Cell Value as Text",
                          1,MAXSTRLEN(DummyBudgetBuf."Dimension Value Code 7"));
                    Text022:
                      DummyBudgetBuf."Dimension Value Code 8" :=
                        COPYSTR(
                          ExcelBuf."Cell Value as Text",
                          1,MAXSTRLEN(DummyBudgetBuf."Dimension Value Code 8"));
                    Text014:
                      if DummyBudgetBuf."G/L Account No." <> '' then begin
                        BudgetBuf := DummyBudgetBuf;
                        EVALUATE(BudgetBuf.Date,TempExcelBuf."Cell Value as Text");
                        EVALUATE(BudgetBuf.Amount,ExcelBuf."Cell Value as Text");
                        if not BudgetBuf.FIND('=') then
                          BudgetBuf.INSERT
                        else
                          ERROR(Text023 + Text024);
                      end;
                  end;
              end;
          end;
        until ExcelBuf.NEXT = 0;
      end;

      TempDim.SETRANGE("Code Caption");
      TempDim.MARKEDONLY(true);
      if TempDim.FINDFIRST then begin
        Dim.GET(TempDim.Code);
        ERROR(Text028,Dim."Code Caption");
      end;

      Window.CLOSE;
      TempExcelBuf.RESET;
      TempExcelBuf.SETRANGE(Comment,Text010);
      if not TempExcelBuf.FINDFIRST then
        ERROR(Text025);
      TempExcelBuf.SETRANGE(Comment,Text014);
      if not TempExcelBuf.FINDFIRST then
        ERROR(Text026);
    END;

    LOCAL PROCEDURE InsertGLBudgetDim@4(DimCode2@1000 : Code[20];DimValCode2@1001 : Code[20];VAR GLBudgetEntry2@1002 : Record "G/L Budget Entry");
    VAR
      DimValue@1003 : Record "Dimension Value";
    BEGIN
      if DimCode2 <> BusUnitDimCode then begin
        DimValue.GET(DimCode2,DimValCode2);
        TempDimSetEntry.INIT;
        TempDimSetEntry.VALIDATE("Dimension Code",DimCode2);
        TempDimSetEntry.VALIDATE("Dimension Value Code",DimValCode2);
        TempDimSetEntry.VALIDATE("Dimension Value ID",DimValue."Dimension Value ID");
        TempDimSetEntry.INSERT;
      end;
      case DimCode2 of
        BusUnitDimCode:
          GLBudgetEntry2."Business Unit Code" := COPYSTR(DimValCode2,1,MAXSTRLEN(GLBudgetEntry2."Business Unit Code"));
        GlobalDim1Code:
          GLBudgetEntry2."Global Dimension 1 Code" := DimValCode2;
        GlobalDim2Code:
          GLBudgetEntry2."Global Dimension 2 Code" := DimValCode2;
        BudgetDim1Code:
          GLBudgetEntry2."Budget Dimension 1 Code" := DimValCode2;
        BudgetDim2Code:
          GLBudgetEntry2."Budget Dimension 2 Code" := DimValCode2;
        BudgetDim3Code:
          GLBudgetEntry2."Budget Dimension 3 Code" := DimValCode2;
        BudgetDim4Code:
          GLBudgetEntry2."Budget Dimension 4 Code" := DimValCode2;
      end;
    END;

    [External]
    PROCEDURE IsPostingAccount@9(AccNo@1000 : Code[20]) : Boolean;
    VAR
      GLAccount@1102601001 : Record "G/L Account";
    BEGIN
      if not GLAccount.GET(AccNo) then
        exit(false);
      exit(GLAccount."Account Type" in [GLAccount."Account Type"::Posting,GLAccount."Account Type"::"Begin-Total"]);
    END;

    LOCAL PROCEDURE FormatData@8(TextToFormat@1000 : Text[250]) : Text[250];
    VAR
      FormatInteger@1001 : Integer;
      FormatDecimal@1002 : Decimal;
      FormatDate@1003 : Date;
    BEGIN
      case true of
        EVALUATE(FormatInteger,TextToFormat):
          exit(FORMAT(FormatInteger));
        EVALUATE(FormatDecimal,TextToFormat):
          exit(FORMAT(FormatDecimal));
        EVALUATE(FormatDate,TextToFormat):
          exit(FORMAT(FormatDate));
        else
          exit(TextToFormat);
      end;
    END;

    [External]
    PROCEDURE SetParameters@3(NewToGLBudgetName@1000 : Code[10];NewImportOption@1001 : Option);
    BEGIN
      ToGLBudgetName := NewToGLBudgetName;
      ImportOption := NewImportOption;
    END;

    [External]
    PROCEDURE SetBudgetDimFilter@1102601000(DimCode2@1102601002 : Code[20];DimValCode2@1102601001 : Code[20];VAR GLBudgetEntry2@1102601000 : Record "G/L Budget Entry");
    BEGIN
      case DimCode2 of
        BusUnitDimCode:
          GLBudgetEntry2.SETRANGE("Business Unit Code",DimValCode2);
        GlobalDim1Code:
          GLBudgetEntry2.SETRANGE("Global Dimension 1 Code",DimValCode2);
        GlobalDim2Code:
          GLBudgetEntry2.SETRANGE("Global Dimension 2 Code",DimValCode2);
        BudgetDim1Code:
          GLBudgetEntry2.SETRANGE("Budget Dimension 1 Code",DimValCode2);
        BudgetDim2Code:
          GLBudgetEntry2.SETRANGE("Budget Dimension 2 Code",DimValCode2);
        BudgetDim3Code:
          GLBudgetEntry2.SETRANGE("Budget Dimension 3 Code",DimValCode2);
        BudgetDim4Code:
          GLBudgetEntry2.SETRANGE("Budget Dimension 4 Code",DimValCode2);
      end;
    END;

    [External]
    PROCEDURE SetFileName@5(NewFileName@1000 : Text);
    BEGIN
      ServerFileName := NewFileName;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

