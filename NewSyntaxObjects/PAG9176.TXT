OBJECT Page 9176 My Settings
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=My Settings;
    PageType=StandardDialog;
    OnInit=BEGIN
             NotRunningOnSaaS := not PermissionManager.SoftwareAsAService;
             IsNotOnMobile := CURRENTCLIENTTYPE <> CLIENTTYPE::Phone;
           END;

    OnOpenPage=VAR
                 UserPersonalization@1000 : Record "User Personalization";
                 RoleCenterNotificationMgt@1001 : Codeunit "Role Center Notification Mgt.";
               BEGIN
                 with UserPersonalization do begin
                   GET(USERSECURITYID);
                   ProfileID := "Profile ID";
                   ProfileAppID := "App ID";
                   ProfileScope := Scope;
                   LanguageID := "Language ID";
                   LocaleID := "Locale ID";
                   TimeZoneID := "Time Zone";
                   VarCompany := Company;
                   NewWorkdate := WORKDATE;
                   SetCompanyDisplayName;
                 end;
                 if RoleCenterNotificationMgt.IsEvaluationNotificationClicked then begin
                   // change notification state from Clicked to Enabled in order to avoid appearing a new notification
                   // on this page after decline of terms & conditions in the 30 days trial wizard
                   RoleCenterNotificationMgt.EnableEvaluationNotification;
                   COMMIT;
                 end;
               END;

    OnQueryClosePage=VAR
                       UserPersonalization@1002 : Record "User Personalization";
                       sessionSetting@1004 : SessionSettings;
                       AnythingUpdated@1003 : Boolean;
                       WasEvaluation@1001 : Boolean;
                     BEGIN
                       if CloseAction <> ACTION::Cancel then begin
                         with UserPersonalization do begin
                           GET(USERSECURITYID);

                           if ("Language ID" <> LanguageID) or
                              ("Locale ID" <> LocaleID) or
                              ("Time Zone" <> TimeZoneID) or
                              (Company <> VarCompany) or
                              ("Profile ID" <> ProfileID)
                           then begin
                             AnythingUpdated := true;
                             sessionSetting.INIT;

                             if Company <> VarCompany then begin
                               WasEvaluation := IsEvaluation;
                               sessionSetting.COMPANY := VarCompany;
                             end;

                             if "Profile ID" <> ProfileID then begin
                               sessionSetting.PROFILEID := ProfileID;
                               sessionSetting.PROFILEAPPID := ProfileAppID;
                               sessionSetting.PROFILESYSTEMSCOPE := ProfileScope = ProfileScope::System;
                             end;

                             if "Language ID" <> LanguageID then
                               sessionSetting.LANGUAGEID := LanguageID;

                             if "Locale ID" <> LocaleID then
                               sessionSetting.LOCALEID := LocaleID;

                             if "Time Zone" <> TimeZoneID then
                               sessionSetting.TIMEZONE := TimeZoneID;
                           end;
                         end;

                         if WasEvaluation and IsTrial then
                           MESSAGE(TrialStartMsg);

                         OnQueryClosePageEvent(LanguageID,LocaleID,TimeZoneID,VarCompany,ProfileID);

                         if AnythingUpdated then
                           sessionSetting.REQUESTSESSIONUPDATE(true);
                       end;
                     END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 14  ;1   ;Group     ;
                Name=Group14;
                GroupType=Group }

    { 13  ;2   ;Field     ;
                Name=UserRoleCenter;
                AssistEdit=true;
                CaptionML=ENU=Role Center;
                ToolTipML=ENU=Specifies the Role Center that is associated with the current user.;
                ApplicationArea=#All;
                SourceExpr=GetProfileName;
                Importance=Promoted;
                Editable=FALSE;
                OnAssistEdit=VAR
                               Profile@1001 : Record "All Profile";
                               UserPersonalizationCard@1000 : Page "User Personalization Card";
                             BEGIN
                               if PAGE.RUNMODAL(PAGE::"Available Role Centers",Profile) = ACTION::LookupOK then begin
                                 ProfileID := Profile."Profile ID";
                                 ProfileAppID := Profile."App ID";
                                 ProfileScope := Profile.Scope;
                               end;
                               OnUserRoleCenterChange(ProfileID);
                               UserPersonalizationCard.SetExperienceToSuite(ProfileID);
                             END;
                              }

    { 6   ;2   ;Field     ;
                Name=Company;
                CaptionML=ENU=Company;
                ToolTipML=ENU=Specifies the database company that you work in. You must sign out and then sign in again for the change to take effect.;
                ApplicationArea=#All;
                SourceExpr=CompanyDisplayName;
                Editable=FALSE;
                OnAssistEdit=VAR
                               SelectedCompany@1001 : Record Company;
                               AllowedCompanies@1000 : Page "Allowed Companies";
                               IsSetupInProgress@1002 : Boolean;
                             BEGIN
                               AllowedCompanies.Initialize;

                               if SelectedCompany.GET(COMPANYNAME) then
                                 AllowedCompanies.SETRECORD(SelectedCompany);

                               AllowedCompanies.LOOKUPMODE(true);

                               if AllowedCompanies.RUNMODAL = ACTION::LookupOK then begin
                                 AllowedCompanies.GETRECORD(SelectedCompany);
                                 OnCompanyChange(SelectedCompany.Name,IsSetupInProgress);
                                 if IsSetupInProgress then begin
                                   VarCompany := COMPANYNAME;
                                   MESSAGE(STRSUBSTNO(CompanySetUpInProgressMsg,SelectedCompany.Name));
                                 end else
                                   VarCompany := SelectedCompany.Name;
                                 SetCompanyDisplayName;
                               end;
                             END;
                              }

    { 7   ;2   ;Field     ;
                Name=NewWorkdate;
                CaptionML=ENU=Work Date;
                ToolTipML=ENU=Specifies the date that will be entered on transactions, typically today's date. This change only affects the date on new transactions.;
                ApplicationArea=#All;
                SourceExpr=NewWorkdate;
                OnValidate=BEGIN
                             WORKDATE := NewWorkdate;
                           END;
                            }

    { 9   ;2   ;Field     ;
                Name=Locale2;
                CaptionML=ENU=Region;
                ToolTipML=ENU=Specifies the regional settings, such as date and numeric format, on all devices. You must sign out and then sign in again for the change to take effect.;
                ApplicationArea=#All;
                SourceExpr=GetLocale;
                Visible=NOT NotRunningOnSaaS;
                OnAssistEdit=VAR
                               LanguageManagement@1000 : Codeunit LanguageManagement;
                             BEGIN
                               if PermissionManager.SoftwareAsAService then
                                 LanguageManagement.LookupWindowsLocale(LocaleID);
                             END;
                              }

    { 2   ;2   ;Group     ;
                Name=Region & Language;
                CaptionML=ENU=Region & Language;
                Visible=NotRunningOnSaaS;
                GroupType=Group }

    { 4   ;3   ;Field     ;
                Name=Locale;
                CaptionML=ENU=Region;
                ToolTipML=ENU=Specifies the regional settings, such as date and numeric format, on all devices. You must sign out and then sign in again for the change to take effect.;
                ApplicationArea=#All;
                SourceExpr=GetLocale;
                Visible=NotRunningOnSaaS;
                OnAssistEdit=VAR
                               LanguageManagement@1000 : Codeunit LanguageManagement;
                             BEGIN
                               if not PermissionManager.SoftwareAsAService then
                                 LanguageManagement.LookupWindowsLocale(LocaleID);
                             END;
                              }

    { 3   ;3   ;Field     ;
                Name=Language;
                CaptionML=ENU=Language;
                ToolTipML=ENU=Specifies the display language, on all devices. You must sign out and then sign in again for the change to take effect.;
                ApplicationArea=#All;
                SourceExpr=GetLanguage;
                Importance=Promoted;
                Visible=NotRunningOnSaaS;
                Editable=FALSE;
                OnAssistEdit=VAR
                               LanguageManagement@1001 : Codeunit LanguageManagement;
                             BEGIN
                               if not PermissionManager.SoftwareAsAService then
                                 LanguageManagement.LookupApplicationLanguage(LanguageID);
                             END;
                              }

    { 5   ;3   ;Field     ;
                Name=TimeZone;
                CaptionML=ENU=Time Zone;
                ToolTipML=ENU=Specifies the time zone that you work in. You must sign out and then sign in again for the change to take effect.;
                ApplicationArea=#All;
                SourceExpr=GetTimeZone;
                Visible=NotRunningOnSaaS;
                OnAssistEdit=VAR
                               ConfPersonalizationMgt@1001 : Codeunit "Conf./Personalization Mgt.";
                             BEGIN
                               if not PermissionManager.SoftwareAsAService then
                                 ConfPersonalizationMgt.LookupTimeZone(TimeZoneID);
                             END;
                              }

    { 11  ;2   ;Field     ;
                Name=MyNotificationsLbl;
                ApplicationArea=#All;
                SourceExpr=MyNotificationsLbl;
                Visible=IsNotOnMobile;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              PAGE.RUNMODAL(PAGE::"My Notifications");
                            END;
                             }

  }
  CODE
  {
    VAR
      PermissionManager@1008 : Codeunit "Permission Manager";
      LanguageID@1001 : Integer;
      LocaleID@1000 : Integer;
      TimeZoneID@1002 : Text[180];
      VarCompany@1003 : Text;
      NewWorkdate@1005 : Date;
      ProfileID@1007 : Code[30];
      NotRunningOnSaaS@1012 : Boolean;
      MyNotificationsLbl@1013 : TextConst 'ENU=Change when I receive notifications.';
      IsNotOnMobile@1006 : Boolean;
      CompanyDisplayName@1010 : Text[250];
      ProfileAppID@1011 : GUID;
      ProfileScope@1014 : 'System,Tenant';
      CompanySetUpInProgressMsg@1015 : TextConst '@@@=%1 - a company name;ENU=Company %1 was just created, and we are still setting it up for you.\This may take up to 10 minutes, so take a short break before you begin to use Dynamics 365.';
      TrialStartMsg@1004 : TextConst 'ENU=We''re glad you''ve chosen to explore Dynamics 365 for Finance and Operations, Business edition!\\Your session will restart to activate the new settings.';

    LOCAL PROCEDURE GetLanguage@20() : Text;
    BEGIN
      exit(GetWindowsLanguageNameFromID(LanguageID));
    END;

    LOCAL PROCEDURE GetWindowsLanguageNameFromID@12(ID@1000 : Integer) : Text;
    VAR
      WindowsLanguage@1001 : Record "Windows Language";
    BEGIN
      if WindowsLanguage.GET(ID) then
        exit(WindowsLanguage.Name);
    END;

    LOCAL PROCEDURE GetLocale@1() : Text;
    BEGIN
      exit(GetWindowsLanguageNameFromID(LocaleID));
    END;

    LOCAL PROCEDURE GetTimeZone@2() : Text;
    VAR
      TimeZone@1000 : Record "Time Zone";
    BEGIN
      TimeZone.SETRANGE(ID,TimeZoneID);
      if TimeZone.FINDFIRST then
        exit(TimeZone."Display Name");
    END;

    LOCAL PROCEDURE GetProfileName@5() : Text;
    VAR
      Profile@1000 : Record "All Profile";
    BEGIN
      if not Profile.GET(ProfileScope,ProfileAppID,ProfileID) then begin
        Profile.SETRANGE("Default Role Center",true);
        if not Profile.FINDFIRST then
          exit('');
      end;
      exit(Profile.Description);
    END;

    LOCAL PROCEDURE GetLicenseState@6() : Integer;
    VAR
      TenantLicenseState@1000 : Record "Tenant License State";
    BEGIN
      if TenantLicenseState.FINDLAST then
        exit(TenantLicenseState.State);
      exit(TenantLicenseState.State::Evaluation);
    END;

    LOCAL PROCEDURE IsEvaluation@7() : Boolean;
    VAR
      TenantLicenseState@1000 : Record "Tenant License State";
    BEGIN
      exit(GetLicenseState = TenantLicenseState.State::Evaluation);
    END;

    LOCAL PROCEDURE IsTrial@8() : Boolean;
    VAR
      TenantLicenseState@1000 : Record "Tenant License State";
    BEGIN
      exit(GetLicenseState = TenantLicenseState.State::Trial);
    END;

    [Integration]
    [External]
    LOCAL PROCEDURE OnCompanyChange@3(NewCompanyName@1000 : Text;VAR IsSetupInProgress@1001 : Boolean);
    BEGIN
    END;

    [Integration]
    [External]
    LOCAL PROCEDURE OnUserRoleCenterChange@4(NewRoleCenter@1000 : Code[30]);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnQueryClosePageEvent@21(NewLanguageID@1000 : Integer;NewLocaleID@1001 : Integer;NewTimeZoneID@1002 : Text[180];NewCompany@1003 : Text;NewProfileID@1004 : Code[30]);
    BEGIN
    END;

    LOCAL PROCEDURE SetCompanyDisplayName@13();
    VAR
      SelectedCompany@1001 : Record Company;
      AllowedCompanies@1002 : Page "Allowed Companies";
    BEGIN
      if SelectedCompany.GET(VarCompany) then
        CompanyDisplayName := AllowedCompanies.GetCompanyDisplayNameDefaulted(SelectedCompany)
    END;

    BEGIN
    {
      Contains various system-wide settings which are personal to an individual user.
      Styled as a StandardDialog which is ideal for presenting a single field. Once more fields are added,
      this page should be converted to a Card page.
    }
    END.
  }
}

