OBJECT Page 9203 Budget Matrix
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Budget Matrix;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable="Dimension Code Buffer";
    DataCaptionExpr=BudgetName;
    PageType=ListPart;
    RefreshOnActivate=true;
    OnOpenPage=BEGIN
                 if GLAccBudgetBuf.GETFILTER("Global Dimension 1 Filter") <> '' then
                   GlobalDim1Filter := GLAccBudgetBuf.GETFILTER("Global Dimension 1 Filter");
                 if GLAccBudgetBuf.GETFILTER("Global Dimension 2 Filter") <> '' then
                   GlobalDim2Filter := GLAccBudgetBuf.GETFILTER("Global Dimension 2 Filter");

                 GLSetup.GET;
               END;

    OnFindRecord=BEGIN
                   exit(FindRec(LineDimOption,Rec,Which));
                 END;

    OnNextRecord=BEGIN
                   exit(NextRec(LineDimOption,Rec,Steps));
                 END;

    OnAfterGetRecord=VAR
                       MATRIX_CurrentColumnOrdinal@1045 : Integer;
                     BEGIN
                       NameIndent := 0;
                       for MATRIX_CurrentColumnOrdinal := 1 to MATRIX_CurrentNoOfMatrixColumn do
                         MATRIX_OnAfterGetRecord(MATRIX_CurrentColumnOrdinal);
                       Amount := MatrixMgt.RoundValue(CalcAmount(false),RoundingFactor);
                       FormatLine;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 2       ;1   ;ActionGroup;
                      Name=&Balance;
                      CaptionML=ENU=&Balance;
                      Image=Balance }
      { 3       ;2   ;Action    ;
                      Name=GLAccBalanceBudget;
                      CaptionML=ENU=G/L Account Balance/Bud&get;
                      ToolTipML=ENU=Open a summary of the debit and credit balances for the current budget.;
                      ApplicationArea=#Suite;
                      Image=Period;
                      OnAction=BEGIN
                                 GLAccountBalanceBudget;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                IndentationColumnName=NameIndent;
                IndentationControls=Name;
                GroupType=Repeater }

    { 20  ;2   ;Field     ;
                Name=Code;
                ToolTipML=ENU=Specifies the code of the record.;
                ApplicationArea=#Suite;
                SourceExpr=Code;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize;
                OnLookup=BEGIN
                           LookUpCode(LineDimOption,LineDimCode,Code);
                         END;

                ImplicitType=Code20 }

    { 22  ;2   ;Field     ;
                Name=Name;
                ToolTipML=ENU=Specifies the name of the record.;
                ApplicationArea=#Suite;
                SourceExpr=Name;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize;
                ImplicitType=Text50 }

    { 24  ;2   ;Field     ;
                Name=TotalBudgetedAmount;
                CaptionML=ENU=Budgeted Amount;
                ToolTipML=ENU=Specifies the G/L account's total budget.;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=Amount;
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=Emphasize;
                OnDrillDown=BEGIN
                              SetCommonFilters(GLAccBudgetBuf);
                              SetDimFilters(GLAccBudgetBuf,0);
                              BudgetDrillDown;
                            END;

                ImplicitType=Decimal }

    { 1012;2   ;Field     ;
                Name=Field1;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[1];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_CaptionSet[1];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(1);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(1);
                            END;
                             }

    { 1013;2   ;Field     ;
                Name=Field2;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[2];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_CaptionSet[2];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(2);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(2);
                            END;
                             }

    { 1014;2   ;Field     ;
                Name=Field3;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[3];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_CaptionSet[3];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(3);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(3);
                            END;
                             }

    { 1015;2   ;Field     ;
                Name=Field4;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[4];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_CaptionSet[4];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(4);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(4);
                            END;
                             }

    { 1016;2   ;Field     ;
                Name=Field5;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[5];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_CaptionSet[5];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(5);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(5);
                            END;
                             }

    { 1017;2   ;Field     ;
                Name=Field6;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[6];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_CaptionSet[6];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(6);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(6);
                            END;
                             }

    { 1018;2   ;Field     ;
                Name=Field7;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[7];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_CaptionSet[7];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(7);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(7);
                            END;
                             }

    { 1019;2   ;Field     ;
                Name=Field8;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[8];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_CaptionSet[8];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(8);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(8);
                            END;
                             }

    { 1020;2   ;Field     ;
                Name=Field9;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[9];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_CaptionSet[9];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(9);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(9);
                            END;
                             }

    { 1021;2   ;Field     ;
                Name=Field10;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[10];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_CaptionSet[10];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(10);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(10);
                            END;
                             }

    { 1022;2   ;Field     ;
                Name=Field11;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[11];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_CaptionSet[11];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(11);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(11);
                            END;
                             }

    { 1023;2   ;Field     ;
                Name=Field12;
                ApplicationArea=#Suite;
                BlankZero=true;
                SourceExpr=MATRIX_CellData[12];
                AutoFormatType=10;
                AutoFormatExpr=FormatStr;
                CaptionClass='3,' + MATRIX_CaptionSet[12];
                Style=Strong;
                StyleExpr=Emphasize;
                OnValidate=BEGIN
                             UpdateAmount(12);
                           END;

                OnDrillDown=BEGIN
                              MATRIX_OnDrillDown(12);
                            END;
                             }

  }
  CODE
  {
    VAR
      Text001@1082 : TextConst 'ENU=Period';
      Text002@1002 : TextConst 'ENU=You may only edit column 1 to %1.';
      GLSetup@1093 : Record "General Ledger Setup";
      GLAccBudgetBuf@1094 : Record "G/L Acc. Budget Buffer";
      GLBudgetName@1095 : Record "G/L Budget Name";
      MatrixRecords@1001 : ARRAY [12] OF Record "Dimension Code Buffer";
      MATRIX_MatrixRecord@1000 : Record "Dimension Code Buffer";
      MatrixMgt@1003 : Codeunit "Matrix Management";
      BudgetName@1097 : Code[10];
      LineDimOption@1098 : '"G/L Account",Period,"Business Unit","Global Dimension 1","Global Dimension 2","Budget Dimension 1","Budget Dimension 2","Budget Dimension 3","Budget Dimension 4"';
      ColumnDimOption@1099 : '"G/L Account",Period,"Business Unit","Global Dimension 1","Global Dimension 2","Budget Dimension 1","Budget Dimension 2","Budget Dimension 3","Budget Dimension 4"';
      LineDimCode@1100 : Text[30];
      PeriodType@1102 : 'Day,Week,Month,Quarter,Year,"Accounting Period"';
      RoundingFactor@1103 : 'None,"1","1000","1000000"';
      DateFilter@1106 : Text[30];
      InternalDateFilter@1107 : Text[30];
      BusUnitFilter@1108 : Code[250];
      GLAccFilter@1109 : Code[250];
      IncomeBalanceGLAccFilter@1005 : '" ","Income Statement","Balance Sheet"';
      GLAccCategoryFilter@1006 : '" ",Assets,Liabilities,Equity,Income,"Cost of Goods Sold",Expense';
      GlobalDim1Filter@1110 : Code[250];
      GlobalDim2Filter@1111 : Code[250];
      BudgetDim1Filter@1112 : Code[250];
      BudgetDim2Filter@1113 : Code[250];
      BudgetDim3Filter@1114 : Code[250];
      BudgetDim4Filter@1115 : Code[250];
      PeriodInitialized@1117 : Boolean;
      MATRIX_CurrentNoOfMatrixColumn@1124 : Integer;
      MATRIX_CellData@1125 : ARRAY [12] OF Decimal;
      MATRIX_CaptionSet@1126 : ARRAY [12] OF Text[80];
      RoundingFactorFormatString@1004 : Text;
      Emphasize@19018670 : Boolean INDATASET;
      NameIndent@19079073 : Integer INDATASET;

    LOCAL PROCEDURE DimCodeToOption@21(DimCode@1000 : Text[30]) : Integer;
    VAR
      BusUnit@1001 : Record "Business Unit";
      GLAcc@1002 : Record "G/L Account";
    BEGIN
      case DimCode of
        '':
          exit(-1);
        GLAcc.TABLECAPTION:
          exit(0);
        Text001:
          exit(1);
        BusUnit.TABLECAPTION:
          exit(2);
        GLSetup."Global Dimension 1 Code":
          exit(3);
        GLSetup."Global Dimension 2 Code":
          exit(4);
        GLBudgetName."Budget Dimension 1 Code":
          exit(5);
        GLBudgetName."Budget Dimension 2 Code":
          exit(6);
        GLBudgetName."Budget Dimension 3 Code":
          exit(7);
        GLBudgetName."Budget Dimension 4 Code":
          exit(8);
        else
          exit(-1);
      end;
    END;

    LOCAL PROCEDURE FindRec@1130(DimOption@1000 : '"G/L Account",Period,"Business Unit","Global Dimension 1","Global Dimension 2","Budget Dimension 1","Budget Dimension 2","Budget Dimension 3","Budget Dimension 4"';VAR DimCodeBuf@1001 : Record "Dimension Code Buffer";Which@1002 : Text[250]) : Boolean;
    VAR
      GLAcc@1131 : Record "G/L Account";
      BusUnit@1132 : Record "Business Unit";
      Period@1133 : Record Date;
      DimVal@1134 : Record "Dimension Value";
      PeriodFormMgt@1135 : Codeunit PeriodFormManagement;
      Found@1136 : Boolean;
    BEGIN
      case DimOption of
        DimOption::"G/L Account":
          begin
            GLAcc."No." := DimCodeBuf.Code;
            if GLAccFilter <> '' then
              GLAcc.SETFILTER("No.",GLAccFilter);
            SetIncomeBalanceGLAccFilterOnGLAcc(GLAcc);
            if GLAccCategoryFilter <> GLAccCategoryFilter::" " then
              GLAcc.SETRANGE("Account Category",GLAccCategoryFilter);
            Found := GLAcc.FIND(Which);
            if Found then
              CopyGLAccToBuf(GLAcc,DimCodeBuf);
          end;
        DimOption::Period:
          begin
            if not PeriodInitialized then
              DateFilter := '';
            PeriodInitialized := true;
            Period."Period Start" := DimCodeBuf."Period Start";
            if DateFilter <> '' then
              Period.SETFILTER("Period Start",DateFilter)
            else
              if not PeriodInitialized and (InternalDateFilter <> '') then
                Period.SETFILTER("Period Start",InternalDateFilter);
            Found := PeriodFormMgt.FindDate(Which,Period,PeriodType);
            if Found then
              CopyPeriodToBuf(Period,DimCodeBuf);
          end;
        DimOption::"Business Unit":
          begin
            BusUnit.Code := DimCodeBuf.Code;
            if BusUnitFilter <> '' then
              BusUnit.SETFILTER(Code,BusUnitFilter);
            Found := BusUnit.FIND(Which);
            if Found then
              CopyBusUnitToBuf(BusUnit,DimCodeBuf);
          end;
        DimOption::"Global Dimension 1":
          begin
            if GlobalDim1Filter <> '' then
              DimVal.SETFILTER(Code,GlobalDim1Filter);
            DimVal."Dimension Code" := GLSetup."Global Dimension 1 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            if Found then
              CopyDimValToBuf(DimVal,DimCodeBuf);
          end;
        DimOption::"Global Dimension 2":
          begin
            if GlobalDim2Filter <> '' then
              DimVal.SETFILTER(Code,GlobalDim2Filter);
            DimVal."Dimension Code" := GLSetup."Global Dimension 2 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            if Found then
              CopyDimValToBuf(DimVal,DimCodeBuf);
          end;
        DimOption::"Budget Dimension 1":
          begin
            if BudgetDim1Filter <> '' then
              DimVal.SETFILTER(Code,BudgetDim1Filter);
            DimVal."Dimension Code" := GLBudgetName."Budget Dimension 1 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            if Found then
              CopyDimValToBuf(DimVal,DimCodeBuf);
          end;
        DimOption::"Budget Dimension 2":
          begin
            if BudgetDim2Filter <> '' then
              DimVal.SETFILTER(Code,BudgetDim2Filter);
            DimVal."Dimension Code" := GLBudgetName."Budget Dimension 2 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            if Found then
              CopyDimValToBuf(DimVal,DimCodeBuf);
          end;
        DimOption::"Budget Dimension 3":
          begin
            if BudgetDim3Filter <> '' then
              DimVal.SETFILTER(Code,BudgetDim3Filter);
            DimVal."Dimension Code" := GLBudgetName."Budget Dimension 3 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            if Found then
              CopyDimValToBuf(DimVal,DimCodeBuf);
          end;
        DimOption::"Budget Dimension 4":
          begin
            if BudgetDim4Filter <> '' then
              DimVal.SETFILTER(Code,BudgetDim4Filter);
            DimVal."Dimension Code" := GLBudgetName."Budget Dimension 4 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            if Found then
              CopyDimValToBuf(DimVal,DimCodeBuf);
          end;
      end;
      exit(Found);
    END;

    LOCAL PROCEDURE NextRec@1137(DimOption@1000 : '"G/L Account",Period,"Business Unit","Global Dimension 1","Global Dimension 2","Budget Dimension 1","Budget Dimension 2","Budget Dimension 3","Budget Dimension 4"';VAR DimCodeBuf@1001 : Record "Dimension Code Buffer";Steps@1002 : Integer) : Integer;
    VAR
      GLAcc@1138 : Record "G/L Account";
      BusUnit@1139 : Record "Business Unit";
      Period@1140 : Record Date;
      DimVal@1141 : Record "Dimension Value";
      PeriodFormMgt@1142 : Codeunit PeriodFormManagement;
      ResultSteps@1143 : Integer;
    BEGIN
      case DimOption of
        DimOption::"G/L Account":
          begin
            GLAcc."No." := DimCodeBuf.Code;
            if GLAccFilter <> '' then
              GLAcc.SETFILTER("No.",GLAccFilter);
            SetIncomeBalanceGLAccFilterOnGLAcc(GLAcc);
            if GLAccCategoryFilter <> GLAccCategoryFilter::" " then
              GLAcc.SETRANGE("Account Category",GLAccCategoryFilter);
            ResultSteps := GLAcc.NEXT(Steps);
            if ResultSteps <> 0 then
              CopyGLAccToBuf(GLAcc,DimCodeBuf);
          end;
        DimOption::Period:
          begin
            if DateFilter <> '' then
              Period.SETFILTER("Period Start",DateFilter);
            Period."Period Start" := DimCodeBuf."Period Start";
            ResultSteps := PeriodFormMgt.NextDate(Steps,Period,PeriodType);
            if ResultSteps <> 0 then
              CopyPeriodToBuf(Period,DimCodeBuf);
          end;
        DimOption::"Business Unit":
          begin
            BusUnit.Code := DimCodeBuf.Code;
            if BusUnitFilter <> '' then
              BusUnit.SETFILTER(Code,BusUnitFilter);
            ResultSteps := BusUnit.NEXT(Steps);
            if ResultSteps <> 0 then
              CopyBusUnitToBuf(BusUnit,DimCodeBuf);
          end;
        DimOption::"Global Dimension 1":
          begin
            if GlobalDim1Filter <> '' then
              DimVal.SETFILTER(Code,GlobalDim1Filter);
            DimVal."Dimension Code" := GLSetup."Global Dimension 1 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            if ResultSteps <> 0 then
              CopyDimValToBuf(DimVal,DimCodeBuf);
          end;
        DimOption::"Global Dimension 2":
          begin
            if GlobalDim2Filter <> '' then
              DimVal.SETFILTER(Code,GlobalDim2Filter);
            DimVal."Dimension Code" := GLSetup."Global Dimension 2 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            if ResultSteps <> 0 then
              CopyDimValToBuf(DimVal,DimCodeBuf);
          end;
        DimOption::"Budget Dimension 1":
          begin
            if BudgetDim1Filter <> '' then
              DimVal.SETFILTER(Code,BudgetDim1Filter);
            DimVal."Dimension Code" := GLBudgetName."Budget Dimension 1 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            if ResultSteps <> 0 then
              CopyDimValToBuf(DimVal,DimCodeBuf);
          end;
        DimOption::"Budget Dimension 2":
          begin
            if BudgetDim2Filter <> '' then
              DimVal.SETFILTER(Code,BudgetDim2Filter);
            DimVal."Dimension Code" := GLBudgetName."Budget Dimension 2 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            if ResultSteps <> 0 then
              CopyDimValToBuf(DimVal,DimCodeBuf);
          end;
        DimOption::"Budget Dimension 3":
          begin
            if BudgetDim3Filter <> '' then
              DimVal.SETFILTER(Code,BudgetDim3Filter);
            DimVal."Dimension Code" := GLBudgetName."Budget Dimension 3 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            if ResultSteps <> 0 then
              CopyDimValToBuf(DimVal,DimCodeBuf);
          end;
        DimOption::"Budget Dimension 4":
          begin
            if BudgetDim4Filter <> '' then
              DimVal.SETFILTER(Code,BudgetDim4Filter);
            DimVal."Dimension Code" := GLBudgetName."Budget Dimension 4 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            if ResultSteps <> 0 then
              CopyDimValToBuf(DimVal,DimCodeBuf);
          end;
      end;
      exit(ResultSteps);
    END;

    LOCAL PROCEDURE CopyGLAccToBuf@1144(VAR TheGLAcc@1000 : Record "G/L Account";VAR TheDimCodeBuf@1001 : Record "Dimension Code Buffer");
    BEGIN
      with TheDimCodeBuf do begin
        INIT;
        Code := TheGLAcc."No.";
        Name := TheGLAcc.Name;
        Totaling := TheGLAcc.Totaling;
        Indentation := TheGLAcc.Indentation;
        "Show in Bold" := TheGLAcc."Account Type" <> TheGLAcc."Account Type"::Posting;
      end;
    END;

    LOCAL PROCEDURE CopyPeriodToBuf@1145(VAR ThePeriod@1000 : Record Date;VAR TheDimCodeBuf@1001 : Record "Dimension Code Buffer");
    VAR
      Period2@1146 : Record Date;
    BEGIN
      with TheDimCodeBuf do begin
        INIT;
        Code := FORMAT(ThePeriod."Period Start");
        "Period Start" := ThePeriod."Period Start";
        "Period End" := ThePeriod."Period End";
        if DateFilter <> '' then begin
          Period2.SETFILTER("Period End",DateFilter);
          if Period2.GETRANGEMAX("Period End") < "Period End" then
            "Period End" := Period2.GETRANGEMAX("Period End");
        end;
        Name := ThePeriod."Period Name";
      end;
    END;

    LOCAL PROCEDURE CopyBusUnitToBuf@1147(VAR TheBusUnit@1000 : Record "Business Unit";VAR TheDimCodeBuf@1001 : Record "Dimension Code Buffer");
    BEGIN
      with TheDimCodeBuf do begin
        INIT;
        Code := TheBusUnit.Code;
        if TheBusUnit.Name <> '' then
          Name := TheBusUnit.Name
        else
          Name := TheBusUnit."Company Name";
      end;
    END;

    LOCAL PROCEDURE CopyDimValToBuf@1148(VAR TheDimVal@1000 : Record "Dimension Value";VAR TheDimCodeBuf@1001 : Record "Dimension Code Buffer");
    BEGIN
      with TheDimCodeBuf do begin
        INIT;
        Code := TheDimVal.Code;
        Name := TheDimVal.Name;
        Totaling := TheDimVal.Totaling;
        Indentation := TheDimVal.Indentation;
        "Show in Bold" :=
          TheDimVal."Dimension Value Type" <> TheDimVal."Dimension Value Type"::Standard;
      end;
    END;

    LOCAL PROCEDURE LookUpCode@1160(DimOption@1000 : '"G/L Account",Period,"Business Unit","Global Dimension 1","Global Dimension 2","Budget Dimension 1","Budget Dimension 2","Budget Dimension 3","Budget Dimension 4"';DimCode@1001 : Text[30];Code@1002 : Text[30]);
    VAR
      GLAcc@1161 : Record "G/L Account";
      BusUnit@1162 : Record "Business Unit";
      DimVal@1163 : Record "Dimension Value";
    BEGIN
      case DimOption of
        DimOption::"G/L Account":
          begin
            GLAcc.GET(Code);
            PAGE.RUNMODAL(PAGE::"G/L Account List",GLAcc);
          end;
        DimOption::Period:
          ;
        DimOption::"Business Unit":
          begin
            BusUnit.GET(Code);
            PAGE.RUNMODAL(PAGE::"Business Unit List",BusUnit);
          end;
        DimOption::"Global Dimension 1",DimOption::"Global Dimension 2",
        DimOption::"Budget Dimension 1",DimOption::"Budget Dimension 2",
        DimOption::"Budget Dimension 3",DimOption::"Budget Dimension 4":
          begin
            DimVal.SETRANGE("Dimension Code",DimCode);
            DimVal.GET(DimCode,Code);

            PAGE.RUNMODAL(PAGE::"Dimension Value List",DimVal);
          end;
      end;
    END;

    LOCAL PROCEDURE SetCommonFilters@1168(VAR TheGLAccBudgetBuf@1000 : Record "G/L Acc. Budget Buffer");
    BEGIN
      with TheGLAccBudgetBuf do begin
        RESET;
        SETRANGE("Budget Filter",GLBudgetName.Name);
        if BusUnitFilter <> '' then
          SETFILTER("Business Unit Filter",BusUnitFilter);
        if GLAccFilter <> '' then
          SETFILTER("G/L Account Filter",GLAccFilter);
        if IncomeBalanceGLAccFilter <> IncomeBalanceGLAccFilter::" " then
          SETRANGE("Income/Balance",IncomeBalanceGLAccFilter);
        if DateFilter <> '' then
          SETFILTER("Date Filter",DateFilter);
        if GlobalDim1Filter <> '' then
          SETFILTER("Global Dimension 1 Filter",GlobalDim1Filter);
        if GlobalDim2Filter <> '' then
          SETFILTER("Global Dimension 2 Filter",GlobalDim2Filter);
        if BudgetDim1Filter <> '' then
          SETFILTER("Budget Dimension 1 Filter",BudgetDim1Filter);
        if BudgetDim2Filter <> '' then
          SETFILTER("Budget Dimension 2 Filter",BudgetDim2Filter);
        if BudgetDim3Filter <> '' then
          SETFILTER("Budget Dimension 3 Filter",BudgetDim3Filter);
        if BudgetDim4Filter <> '' then
          SETFILTER("Budget Dimension 4 Filter",BudgetDim4Filter);
      end;
    END;

    LOCAL PROCEDURE SetDimFilters@1169(VAR TheGLAccBudgetBuf@1000 : Record "G/L Acc. Budget Buffer";LineOrColumn@1001 : 'Line,Column');
    VAR
      DimCodeBuf@1002 : Record "Dimension Code Buffer";
      DimOption@1170 : '"G/L Account",Period,"Business Unit","Global Dimension 1","Global Dimension 2","Budget Dimension 1","Budget Dimension 2","Budget Dimension 3","Budget Dimension 4"';
    BEGIN
      if LineOrColumn = LineOrColumn::Line then begin
        DimCodeBuf := Rec;
        DimOption := LineDimOption;
      end else begin
        DimCodeBuf := MATRIX_MatrixRecord;
        DimOption := ColumnDimOption;
      end;

      with TheGLAccBudgetBuf do
        case DimOption of
          DimOption::"G/L Account":
            if DimCodeBuf.Totaling <> '' then
              GLAccBudgetBuf.SETFILTER("G/L Account Filter",DimCodeBuf.Totaling)
            else
              GLAccBudgetBuf.SETRANGE("G/L Account Filter",DimCodeBuf.Code);
          DimOption::Period:
            SETRANGE("Date Filter",DimCodeBuf."Period Start",DimCodeBuf."Period End");
          DimOption::"Business Unit":
            SETRANGE("Business Unit Filter",DimCodeBuf.Code);
          DimOption::"Global Dimension 1":
            if DimCodeBuf.Totaling <> '' then
              SETFILTER("Global Dimension 1 Filter",DimCodeBuf.Totaling)
            else
              SETRANGE("Global Dimension 1 Filter",DimCodeBuf.Code);
          DimOption::"Global Dimension 2":
            if DimCodeBuf.Totaling <> '' then
              SETFILTER("Global Dimension 2 Filter",DimCodeBuf.Totaling)
            else
              SETRANGE("Global Dimension 2 Filter",DimCodeBuf.Code);
          DimOption::"Budget Dimension 1":
            if DimCodeBuf.Totaling <> '' then
              SETFILTER("Budget Dimension 1 Filter",DimCodeBuf.Totaling)
            else
              SETRANGE("Budget Dimension 1 Filter",DimCodeBuf.Code);
          DimOption::"Budget Dimension 2":
            if DimCodeBuf.Totaling <> '' then
              SETFILTER("Budget Dimension 2 Filter",DimCodeBuf.Totaling)
            else
              SETRANGE("Budget Dimension 2 Filter",DimCodeBuf.Code);
          DimOption::"Budget Dimension 3":
            if DimCodeBuf.Totaling <> '' then
              SETFILTER("Budget Dimension 3 Filter",DimCodeBuf.Totaling)
            else
              SETRANGE("Budget Dimension 3 Filter",DimCodeBuf.Code);
          DimOption::"Budget Dimension 4":
            if DimCodeBuf.Totaling <> '' then
              SETFILTER("Budget Dimension 4 Filter",DimCodeBuf.Totaling)
            else
              SETRANGE("Budget Dimension 4 Filter",DimCodeBuf.Code);
        end;
    END;

    LOCAL PROCEDURE BudgetDrillDown@1172();
    VAR
      GLBudgetEntry@1173 : Record "G/L Budget Entry";
      GLBudgetEntries@1000 : Page "G/L Budget Entries";
    BEGIN
      GLBudgetEntry.SETRANGE("Budget Name",GLBudgetName.Name);
      if GLAccBudgetBuf.GETFILTER("G/L Account Filter") <> '' then
        GLAccBudgetBuf.COPYFILTER("G/L Account Filter",GLBudgetEntry."G/L Account No.");
      if GLAccBudgetBuf.GETFILTER("Business Unit Filter") <> '' then
        GLAccBudgetBuf.COPYFILTER("Business Unit Filter",GLBudgetEntry."Business Unit Code");
      if GLAccBudgetBuf.GETFILTER("Global Dimension 1 Filter") <> '' then
        GLAccBudgetBuf.COPYFILTER("Global Dimension 1 Filter",GLBudgetEntry."Global Dimension 1 Code");
      if GLAccBudgetBuf.GETFILTER("Global Dimension 2 Filter") <> '' then
        GLAccBudgetBuf.COPYFILTER("Global Dimension 2 Filter",GLBudgetEntry."Global Dimension 2 Code");
      if GLAccBudgetBuf.GETFILTER("Budget Dimension 1 Filter") <> '' then
        GLAccBudgetBuf.COPYFILTER("Budget Dimension 1 Filter",GLBudgetEntry."Budget Dimension 1 Code");
      if GLAccBudgetBuf.GETFILTER("Budget Dimension 2 Filter") <> '' then
        GLAccBudgetBuf.COPYFILTER("Budget Dimension 2 Filter",GLBudgetEntry."Budget Dimension 2 Code");
      if GLAccBudgetBuf.GETFILTER("Budget Dimension 3 Filter") <> '' then
        GLAccBudgetBuf.COPYFILTER("Budget Dimension 3 Filter",GLBudgetEntry."Budget Dimension 3 Code");
      if GLAccBudgetBuf.GETFILTER("Budget Dimension 4 Filter") <> '' then
        GLAccBudgetBuf.COPYFILTER("Budget Dimension 4 Filter",GLBudgetEntry."Budget Dimension 4 Code");
      if GLAccBudgetBuf.GETFILTER("Date Filter") <> '' then
        GLAccBudgetBuf.COPYFILTER("Date Filter",GLBudgetEntry.Date)
      else
        GLBudgetEntry.SETRANGE(Date,0D,DMY2DATE(31,12,9999));
      with GLBudgetEntry do
        if (GETFILTER("Global Dimension 1 Code") <> '') or (GETFILTER("Global Dimension 2 Code") <> '') or
           (GETFILTER("Business Unit Code") <> '')
        then
          SETCURRENTKEY("Budget Name","G/L Account No.","Business Unit Code","Global Dimension 1 Code")
        else
          SETCURRENTKEY("Budget Name","G/L Account No.",Date);
      GLBudgetEntries.SetEditable(true);
      GLBudgetEntries.SETTABLEVIEW(GLBudgetEntry);
      GLBudgetEntries.RUN;
    END;

    LOCAL PROCEDURE CalcAmount@1184(SetColumnFilter@1000 : Boolean) : Decimal;
    BEGIN
      SetCommonFilters(GLAccBudgetBuf);
      SetDimFilters(GLAccBudgetBuf,0);
      if SetColumnFilter then
        SetDimFilters(GLAccBudgetBuf,1);
      GLAccBudgetBuf.CALCFIELDS("Budgeted Amount");
      exit(GLAccBudgetBuf."Budgeted Amount");
    END;

    LOCAL PROCEDURE FromRoundedValue@3(OrgAmount@1000 : Decimal) : Decimal;
    VAR
      NewAmount@1001 : Decimal;
    BEGIN
      NewAmount := OrgAmount;
      case RoundingFactor of
        RoundingFactor::"1000":
          NewAmount := OrgAmount * 1000;
        RoundingFactor::"1000000":
          NewAmount := OrgAmount * 1000000;
      end;
      exit(NewAmount);
    END;

    [External]
    PROCEDURE Load@1186(MatrixColumns1@1005 : ARRAY [32] OF Text[80];VAR MatrixRecords1@1006 : ARRAY [12] OF Record "Dimension Code Buffer";CurrentNoOfMatrixColumns@1007 : Integer;_LineDimCode@1015 : Text[30];_LineDimOption@1000 : Integer;_ColumnDimOption@1002 : Integer;_GlobalDim1Filter@1001 : Code[250];_GlobalDim2Filter@1003 : Code[250];_BudgetDim1Filter@1004 : Code[250];_BudgetDim2Filter@1010 : Code[250];_BudgetDim3Filter@1009 : Code[250];_BudgetDim4Filter@1008 : Code[250];VAR _GLBudgetName@1011 : Record "G/L Budget Name";_DateFilter@1012 : Text[30];_GLAccFilter@1013 : Code[250];_IncomeBalanceGLAccFilter@1018 : Option;_GLAccCategoryFilter@1019 : Option;_RoundingFactor@1014 : Integer;_PeriodType@1017 : 'Day,Week,Month,Quarter,Year,"Accounting Period"');
    VAR
      i@1016 : Integer;
    BEGIN
      for i := 1 to 12 do
        MATRIX_CellData[i] := 0;

      for i := 1 to 12 do begin
        if MatrixColumns1[i] = '' then
          MATRIX_CaptionSet[i] := ' '
        else
          MATRIX_CaptionSet[i] := MatrixColumns1[i];
        MatrixRecords[i] := MatrixRecords1[i];
      end;
      if CurrentNoOfMatrixColumns > ARRAYLEN(MATRIX_CellData) then
        MATRIX_CurrentNoOfMatrixColumn := ARRAYLEN(MATRIX_CellData)
      else
        MATRIX_CurrentNoOfMatrixColumn := CurrentNoOfMatrixColumns;
      LineDimCode := _LineDimCode;
      LineDimOption := _LineDimOption;
      ColumnDimOption := _ColumnDimOption;
      GlobalDim1Filter := _GlobalDim1Filter;
      GlobalDim2Filter := _GlobalDim2Filter;
      BudgetDim1Filter := _BudgetDim1Filter;
      BudgetDim2Filter := _BudgetDim2Filter;
      BudgetDim3Filter := _BudgetDim3Filter;
      BudgetDim4Filter := _BudgetDim4Filter;
      GLBudgetName := _GLBudgetName;
      DateFilter := _DateFilter;
      GLAccFilter := _GLAccFilter;
      IncomeBalanceGLAccFilter := _IncomeBalanceGLAccFilter;
      GLAccCategoryFilter := _GLAccCategoryFilter;
      RoundingFactor := _RoundingFactor;
      PeriodType := _PeriodType;
      RoundingFactorFormatString := MatrixMgt.GetFormatString(RoundingFactor,false);
    END;

    LOCAL PROCEDURE MATRIX_OnDrillDown@1187(MATRIX_ColumnOrdinal@1008 : Integer);
    BEGIN
      MATRIX_MatrixRecord := MatrixRecords[MATRIX_ColumnOrdinal];
      SetCommonFilters(GLAccBudgetBuf);
      SetDimFilters(GLAccBudgetBuf,0);
      SetDimFilters(GLAccBudgetBuf,1);
      BudgetDrillDown;
    END;

    LOCAL PROCEDURE MATRIX_OnAfterGetRecord@1189(MATRIX_ColumnOrdinal@1010 : Integer);
    BEGIN
      MATRIX_MatrixRecord := MatrixRecords[MATRIX_ColumnOrdinal];
      MATRIX_CellData[MATRIX_ColumnOrdinal] := MatrixMgt.RoundValue(CalcAmount(true),RoundingFactor);
    END;

    LOCAL PROCEDURE UpdateAmount@1102601001(MATRIX_ColumnOrdinal@1102601000 : Integer);
    VAR
      NewAmount@1000 : Decimal;
    BEGIN
      if MATRIX_ColumnOrdinal > MATRIX_CurrentNoOfMatrixColumn then
        ERROR(Text002,MATRIX_CurrentNoOfMatrixColumn);
      MATRIX_MatrixRecord := MatrixRecords[MATRIX_ColumnOrdinal];
      NewAmount := FromRoundedValue(MATRIX_CellData[MATRIX_ColumnOrdinal]);
      if CalcAmount(true) = 0 then; // To set filters correctly
      GLAccBudgetBuf.CALCFIELDS("Budgeted Amount");
      GLAccBudgetBuf.VALIDATE("Budgeted Amount",NewAmount);
      Amount := MatrixMgt.RoundValue(CalcAmount(false),RoundingFactor);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE GLAccountBalanceBudget@1102601002();
    VAR
      GLAcc@1102601000 : Record "G/L Account";
    BEGIN
      if DimCodeToOption(LineDimCode) = 0 then
        GLAcc.GET(Code)
      else begin
        if GLAccFilter <> '' then
          GLAcc.SETFILTER("No.",GLAccFilter);
        SetIncomeBalanceGLAccFilterOnGLAcc(GLAcc);
        if GLAccCategoryFilter <> GLAccCategoryFilter::" " then
          GLAcc.SETRANGE("Account Category",GLAccCategoryFilter);
        GLAcc.FINDFIRST;
        GLAcc.RESET;
      end;
      with GLAcc do begin
        SETRANGE("Budget Filter",GLBudgetName.Name);
        if DateFilter <> '' then
          SETFILTER("Date Filter",DateFilter);
        if BusUnitFilter <> '' then
          SETFILTER("Business Unit Filter",BusUnitFilter);
        if GLAccFilter <> '' then
          SETFILTER("No.",GLAccFilter);
        SetIncomeBalanceGLAccFilterOnGLAcc(GLAcc);
        if GLAccCategoryFilter <> GLAccCategoryFilter::" " then
          SETRANGE("Account Category",GLAccCategoryFilter);
        if GlobalDim1Filter <> '' then
          SETFILTER("Global Dimension 1 Filter",GlobalDim1Filter);
        if GlobalDim2Filter <> '' then
          SETFILTER("Global Dimension 2 Filter",GlobalDim2Filter);
      end;
      PAGE.RUN(PAGE::"G/L Account Balance/Budget",GLAcc);
    END;

    LOCAL PROCEDURE FormatLine@19039177();
    BEGIN
      Emphasize := "Show in Bold";
      NameIndent := Indentation;
    END;

    LOCAL PROCEDURE FormatStr@8() : Text;
    BEGIN
      exit(RoundingFactorFormatString);
    END;

    LOCAL PROCEDURE SetIncomeBalanceGLAccFilterOnGLAcc@5(VAR GLAccount@1000 : Record "G/L Account");
    BEGIN
      case IncomeBalanceGLAccFilter of
        IncomeBalanceGLAccFilter::"Balance Sheet":
          GLAccount.SETRANGE("Income/Balance",GLAccount."Income/Balance"::"Balance Sheet");
        IncomeBalanceGLAccFilter::"Income Statement":
          GLAccount.SETRANGE("Income/Balance",GLAccount."Income/Balance"::"Income Statement");
      end;
    END;

    BEGIN
    END.
  }
}

