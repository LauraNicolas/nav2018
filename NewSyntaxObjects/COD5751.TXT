OBJECT Codeunit 5751 Get Source Doc. Inbound
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GetSourceDocuments@1000 : Report "Get Source Documents";

    LOCAL PROCEDURE CreateWhseReceiptHeaderFromWhseRequest@7(VAR WarehouseRequest@1000 : Record "Warehouse Request") : Boolean;
    BEGIN
      if WarehouseRequest.ISEMPTY then
        exit(false);

      CLEAR(GetSourceDocuments);
      GetSourceDocuments.USEREQUESTPAGE(false);
      GetSourceDocuments.SETTABLEVIEW(WarehouseRequest);
      GetSourceDocuments.SetHideDialog(true);
      GetSourceDocuments.RUNMODAL;

      exit(true);
    END;

    [External]
    PROCEDURE GetInboundDocs@1(WhseReceiptHeader@1000 : Record "Warehouse Receipt Header");
    VAR
      WhseGetSourceFilterRec@1001 : Record "Warehouse Source Filter";
      WhseSourceFilterSelection@1002 : Page "Filters to Get Source Docs.";
    BEGIN
      WhseReceiptHeader.FIND;
      WhseSourceFilterSelection.SetOneCreatedReceiptHeader(WhseReceiptHeader);
      WhseGetSourceFilterRec.FILTERGROUP(2);
      WhseGetSourceFilterRec.SETRANGE(Type,WhseGetSourceFilterRec.Type::Inbound);
      WhseGetSourceFilterRec.FILTERGROUP(0);
      WhseSourceFilterSelection.SETTABLEVIEW(WhseGetSourceFilterRec);
      WhseSourceFilterSelection.RUNMODAL;
    END;

    [External]
    PROCEDURE GetSingleInboundDoc@2(WhseReceiptHeader@1000 : Record "Warehouse Receipt Header");
    VAR
      WhseRqst@1001 : Record "Warehouse Request";
      SourceDocSelection@1003 : Page "Source Documents";
    BEGIN
      CLEAR(GetSourceDocuments);
      WhseReceiptHeader.FIND;

      WhseRqst.FILTERGROUP(2);
      WhseRqst.SETRANGE(Type,WhseRqst.Type::Inbound);
      WhseRqst.SETRANGE("Location Code",WhseReceiptHeader."Location Code");
      WhseRqst.FILTERGROUP(0);
      WhseRqst.SETRANGE("Document Status",WhseRqst."Document Status"::Released);
      WhseRqst.SETRANGE("Completely Handled",false);

      SourceDocSelection.LOOKUPMODE(true);
      SourceDocSelection.SETTABLEVIEW(WhseRqst);
      if SourceDocSelection.RUNMODAL <> ACTION::LookupOK then
        exit;
      SourceDocSelection.GetResult(WhseRqst);

      GetSourceDocuments.SetOneCreatedReceiptHeader(WhseReceiptHeader);
      GetSourceDocuments.USEREQUESTPAGE(false);
      GetSourceDocuments.SETTABLEVIEW(WhseRqst);
      GetSourceDocuments.RUNMODAL;
    END;

    [External]
    PROCEDURE CreateFromPurchOrder@3(PurchHeader@1000 : Record "Purchase Header");
    BEGIN
      ShowDialog(CreateFromPurchOrderHideDialog(PurchHeader));
    END;

    [External]
    PROCEDURE CreateFromPurchOrderHideDialog@15(PurchHeader@1000 : Record "Purchase Header") : Boolean;
    VAR
      WhseRqst@1001 : Record "Warehouse Request";
    BEGIN
      FindWarehouseRequestForPurchaseOrder(WhseRqst,PurchHeader);
      exit(CreateWhseReceiptHeaderFromWhseRequest(WhseRqst));
    END;

    [External]
    PROCEDURE CreateFromSalesReturnOrder@5(SalesHeader@1000 : Record "Sales Header");
    BEGIN
      ShowDialog(CreateFromSalesReturnOrderHideDialog(SalesHeader));
    END;

    [External]
    PROCEDURE CreateFromSalesReturnOrderHideDialog@16(SalesHeader@1000 : Record "Sales Header") : Boolean;
    VAR
      WhseRqst@1001 : Record "Warehouse Request";
    BEGIN
      FindWarehouseRequestForSalesReturnOrder(WhseRqst,SalesHeader);
      exit(CreateWhseReceiptHeaderFromWhseRequest(WhseRqst));
    END;

    [External]
    PROCEDURE CreateFromInbndTransferOrder@4(TransHeader@1000 : Record "Transfer Header");
    BEGIN
      ShowDialog(CreateFromInbndTransferOrderHideDialog(TransHeader));
    END;

    [External]
    PROCEDURE CreateFromInbndTransferOrderHideDialog@17(TransHeader@1000 : Record "Transfer Header") : Boolean;
    VAR
      WhseRqst@1001 : Record "Warehouse Request";
    BEGIN
      FindWarehouseRequestForInbndTransferOrder(WhseRqst,TransHeader);
      exit(CreateWhseReceiptHeaderFromWhseRequest(WhseRqst));
    END;

    [External]
    PROCEDURE GetSingleWhsePutAwayDoc@10(CurrentWkshTemplateName@1008 : Code[10];CurrentWkshName@1004 : Code[10];LocationCode@1000 : Code[10]);
    VAR
      WhsePutAwayRqst@1001 : Record "Whse. Put-away Request";
      GetWhseSourceDocuments@1002 : Report "Get Inbound Source Documents";
      WhsePutAwayDocSelection@1003 : Page "Put-away Selection";
    BEGIN
      WhsePutAwayRqst.FILTERGROUP(2);
      WhsePutAwayRqst.SETRANGE("Completely Put Away",false);
      WhsePutAwayRqst.SETRANGE("Location Code",LocationCode);
      WhsePutAwayRqst.FILTERGROUP(0);

      WhsePutAwayDocSelection.LOOKUPMODE(true);
      WhsePutAwayDocSelection.SETTABLEVIEW(WhsePutAwayRqst);
      if WhsePutAwayDocSelection.RUNMODAL <> ACTION::LookupOK then
        exit;

      WhsePutAwayDocSelection.GetResult(WhsePutAwayRqst);

      GetWhseSourceDocuments.SetWhseWkshName(
        CurrentWkshTemplateName,CurrentWkshName,LocationCode);

      GetWhseSourceDocuments.USEREQUESTPAGE(false);
      GetWhseSourceDocuments.SETTABLEVIEW(WhsePutAwayRqst);
      GetWhseSourceDocuments.RUNMODAL;
    END;

    LOCAL PROCEDURE GetRequireReceiveRqst@6(VAR WhseRqst@1002 : Record "Warehouse Request");
    VAR
      Location@1000 : Record Location;
      LocationCode@1001 : Text;
    BEGIN
      if WhseRqst.FINDSET then begin
        repeat
          if Location.RequireReceive(WhseRqst."Location Code") then
            LocationCode += WhseRqst."Location Code" + '|';
        until WhseRqst.NEXT = 0;
        if LocationCode <> '' then begin
          LocationCode := COPYSTR(LocationCode,1,STRLEN(LocationCode) - 1);
          if LocationCode[1] = '|' then
            LocationCode := '''''' + LocationCode;
        end;
        WhseRqst.SETFILTER("Location Code",LocationCode);
      end;
    END;

    LOCAL PROCEDURE FindWarehouseRequestForPurchaseOrder@8(VAR WhseRqst@1000 : Record "Warehouse Request";PurchHeader@1001 : Record "Purchase Header");
    BEGIN
      with PurchHeader do begin
        TESTFIELD(Status,Status::Released);
        WhseRqst.SETRANGE(Type,WhseRqst.Type::Inbound);
        WhseRqst.SETRANGE("Source Type",DATABASE::"Purchase Line");
        WhseRqst.SETRANGE("Source Subtype","Document Type");
        WhseRqst.SETRANGE("Source No.","No.");
        WhseRqst.SETRANGE("Document Status",WhseRqst."Document Status"::Released);
        GetRequireReceiveRqst(WhseRqst);
      end;
    END;

    LOCAL PROCEDURE FindWarehouseRequestForSalesReturnOrder@9(VAR WhseRqst@1000 : Record "Warehouse Request";SalesHeader@1001 : Record "Sales Header");
    BEGIN
      with SalesHeader do begin
        TESTFIELD(Status,Status::Released);
        WhseRqst.SETRANGE(Type,WhseRqst.Type::Inbound);
        WhseRqst.SETRANGE("Source Type",DATABASE::"Sales Line");
        WhseRqst.SETRANGE("Source Subtype","Document Type");
        WhseRqst.SETRANGE("Source No.","No.");
        WhseRqst.SETRANGE("Document Status",WhseRqst."Document Status"::Released);
        GetRequireReceiveRqst(WhseRqst);
      end;
    END;

    LOCAL PROCEDURE FindWarehouseRequestForInbndTransferOrder@12(VAR WhseRqst@1000 : Record "Warehouse Request";TransHeader@1001 : Record "Transfer Header");
    BEGIN
      with TransHeader do begin
        TESTFIELD(Status,Status::Released);
        WhseRqst.SETRANGE(Type,WhseRqst.Type::Inbound);
        WhseRqst.SETRANGE("Source Type",DATABASE::"Transfer Line");
        WhseRqst.SETRANGE("Source Subtype",1);
        WhseRqst.SETRANGE("Source No.","No.");
        WhseRqst.SETRANGE("Document Status",WhseRqst."Document Status"::Released);
        GetRequireReceiveRqst(WhseRqst);
      end;
    END;

    LOCAL PROCEDURE OpenWarehouseReceiptPage@14();
    VAR
      WarehouseReceiptHeader@1000 : Record "Warehouse Receipt Header";
    BEGIN
      GetSourceDocuments.GetLastReceiptHeader(WarehouseReceiptHeader);
      PAGE.RUN(PAGE::"Warehouse Receipt",WarehouseReceiptHeader);
    END;

    LOCAL PROCEDURE ShowDialog@11(WhseReceiptCreated@1000 : Boolean);
    BEGIN
      GetSourceDocuments.ShowReceiptDialog;
      if WhseReceiptCreated then
        OpenWarehouseReceiptPage;
    END;

    BEGIN
    END.
  }
}

