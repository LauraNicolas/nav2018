OBJECT Table 7860 MS- PayPal Standard Account
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Webhook Subscription"=rimd;
    OnModify=BEGIN
               UpdateWebhookOnModify;
             END;

    OnDelete=BEGIN
               DeleteWebhookSubscription("Account ID");
             END;

    CaptionML=ENU=MS- PayPal Standard Account;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Integer       ;AutoIncrement=true;
                                                   CaptionML=ENU=Primary Key }
    { 2   ;   ;Name                ;Text250       ;CaptionML=ENU=Name;
                                                   NotBlank=true }
    { 3   ;   ;Description         ;Text250       ;CaptionML=ENU=Description;
                                                   NotBlank=true }
    { 4   ;   ;Enabled             ;Boolean       ;OnValidate=BEGIN
                                                                VerifyAccountID;
                                                              END;

                                                   CaptionML=ENU=Enabled }
    { 5   ;   ;Always Include on Documents;Boolean;OnValidate=VAR
                                                                MSPayPalStandardAccount@1000 : Record "MS- PayPal Standard Account";
                                                                SalesHeader@1001 : Record "Sales Header";
                                                              BEGIN
                                                                if not "Always Include on Documents" then
                                                                  exit;

                                                                MSPayPalStandardAccount.SETRANGE("Always Include on Documents",true);
                                                                MSPayPalStandardAccount.SETFILTER("Primary Key",'<>%1',"Primary Key");
                                                                MSPayPalStandardAccount.MODIFYALL("Always Include on Documents",false,true);

                                                                if not GUIALLOWED then
                                                                  exit;

                                                                SalesHeader.SETFILTER("Document Type",STRSUBSTNO('%1|%2|%3',
                                                                    SalesHeader."Document Type"::Invoice,
                                                                    SalesHeader."Document Type"::Order,
                                                                    SalesHeader."Document Type"::Quote));

                                                                if SalesHeader.FINDFIRST and not HideDialogs then
                                                                  MESSAGE(UpdateOpenInvoicesManuallyMsg);
                                                              END;

                                                   CaptionML=ENU=Always Include on Documents }
    { 8   ;   ;Terms of Service    ;Text250       ;ExtendedDatatype=URL;
                                                   CaptionML=ENU=Terms of Service }
    { 10  ;   ;Account ID          ;Text250       ;OnValidate=BEGIN
                                                                VerifyAccountID;
                                                                "Account ID" := LOWERCASE("Account ID");
                                                              END;

                                                   CaptionML=ENU=Account ID }
    { 12  ;   ;Target URL          ;BLOB          ;CaptionML=ENU=Target URL;
                                                   SubType=Bitmap }
  }
  KEYS
  {
    {    ;"Primary Key"                           ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      AccountIDCannotBeBlankErr@1000 : TextConst 'ENU=You must specify an account ID for this payment service.';
      UpdateOpenInvoicesManuallyMsg@1001 : TextConst 'ENU=A link for the PayPal payment service will be included for new sales documents. To add it to existing sales documents, you must manually select it in the Payment Service field on the sales document.';
      HideDialogs@1002 : Boolean;

    PROCEDURE GetTargetURL@10() : Text;
    VAR
      InStream@1000 : InStream;
      TargetURL@1002 : Text;
    BEGIN
      TargetURL := '';
      CALCFIELDS("Target URL");
      if "Target URL".HASVALUE then begin
        "Target URL".CREATEINSTREAM(InStream);
        InStream.READ(TargetURL);
      end;
      exit(TargetURL);
    END;

    PROCEDURE SetTargetURL@20(TargetURL@1000 : Text);
    VAR
      WebRequestHelper@1002 : Codeunit "Web Request Helper";
      OutStream@1001 : OutStream;
    BEGIN
      WebRequestHelper.IsValidUri(TargetURL);
      WebRequestHelper.IsHttpUrl(TargetURL);
      WebRequestHelper.IsSecureHttpUrl(TargetURL);

      "Target URL".CREATEOUTSTREAM(OutStream);
      OutStream.WRITE(TargetURL);
      MODIFY;
    END;

    LOCAL PROCEDURE VerifyAccountID@2();
    BEGIN
      if Enabled then
        if "Account ID" = '' then
          if HideDialogs then
            "Account ID" := ''
          else
            ERROR(AccountIDCannotBeBlankErr);
    END;

    PROCEDURE HideAllDialogs@1();
    BEGIN
      HideDialogs := true;
    END;

    LOCAL PROCEDURE UpdateWebhookOnModify@6();
    VAR
      PrevMSPayPalStandardAccount@1001 : Record "MS- PayPal Standard Account";
    BEGIN
      PrevMSPayPalStandardAccount.GET("Primary Key");

      if PrevMSPayPalStandardAccount."Account ID" <> "Account ID" then
        DeleteWebhookSubscription(PrevMSPayPalStandardAccount."Account ID");

      if "Account ID" <> '' then
        if Enabled then
          RegisterWebhookListener("Account ID")
        else
          DeleteWebhookSubscription("Account ID");
    END;

    LOCAL PROCEDURE RegisterWebhookListener@3(AccountID@1002 : Text[250]);
    VAR
      WebhookSubscription@1006 : Record "Webhook Subscription";
      MarketingSetup@1003 : Record "Marketing Setup";
      WebhookManagement@1001 : Codeunit "Webhook Management";
      EndpointUri@1007 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Uri";
      WebHooksAdapterUri@1000 : Text[250];
    BEGIN
      if not WebhookManagement.IsCurrentClientTypeAllowed then
        exit;

      AccountID := LOWERCASE(AccountID);
      WebhookSubscription.SETRANGE("Subscription ID",AccountID);

      WebHooksAdapterUri := LOWERCASE(WebhookManagement.GetNotificationUrl);
      EndpointUri := EndpointUri.Uri(WebHooksAdapterUri);

      if WebhookManagement.FindWebhookSubscriptionMatchingEndPoint(WebhookSubscription,EndpointUri,0,0) then
        exit; // subscription already exists

      if STRLEN(AccountID) > MAXSTRLEN(WebhookSubscription."Subscription ID") then
        exit;

      WebhookSubscription."Subscription ID" :=
        COPYSTR(AccountID,1,MAXSTRLEN(WebhookSubscription."Subscription ID"));
      WebhookSubscription.Endpoint := WebHooksAdapterUri;
      WebhookSubscription."Created By" := GetBaseURL;
      WebhookSubscription."Company Name" := COMPANYNAME;
      WebhookSubscription."Run Notification As" := MarketingSetup.TrySetWebhookSubscriptionUserAsCurrentUser;
      if WebhookSubscription.INSERT then;
    END;

    LOCAL PROCEDURE DeleteWebhookSubscription@5(AccountID@1000 : Text[250]);
    VAR
      WebhookSubscription@1001 : Record "Webhook Subscription";
      WebhookManagement@1002 : Codeunit "Webhook Management";
      EndpointUri@1004 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Uri";
      WebHooksAdapterUri@1003 : Text[250];
    BEGIN
      WebhookSubscription.SETRANGE("Subscription ID",LOWERCASE(AccountID));
      WebHooksAdapterUri := LOWERCASE(WebhookManagement.GetNotificationUrl);
      EndpointUri := EndpointUri.Uri(WebHooksAdapterUri);
      if WebhookManagement.FindWebhookSubscriptionMatchingEndPoint(WebhookSubscription,EndpointUri,0,0) then
        WebhookSubscription.DELETE(true);
    END;

    LOCAL PROCEDURE GetBaseURL@7() PayPalBaseUrl : Text[50];
    VAR
      PayPalUrl@1001 : Text;
      ParametersStartPosition@1002 : Integer;
    BEGIN
      PayPalUrl := GetTargetURL;
      ParametersStartPosition := STRPOS(PayPalUrl,'?');
      if ParametersStartPosition > 0 then
        PayPalBaseUrl := COPYSTR(DELSTR(PayPalUrl,ParametersStartPosition),1,MAXSTRLEN(PayPalBaseUrl))
      else
        PayPalBaseUrl := COPYSTR(PayPalUrl,1,MAXSTRLEN(PayPalBaseUrl));
    END;

    BEGIN
    END.
  }
}

