OBJECT Page 9816 Permission Set by User
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Access Control"=rimd;
    CaptionML=ENU=Permission Set by User;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    LinksAllowed=false;
    SourceTable="Aggregate Permission Set";
    DataCaptionExpr=SelectedCompany;
    PageType=Worksheet;
    PromotedActionCategoriesML=ENU=New,Process,Report,Browse;
    OnOpenPage=VAR
                 User@1000 : Record User;
               BEGIN
                 SelectedCompany := COMPANYNAME;
                 UpdateCompany;
                 HideExternalUsers(User);
                 NoOfRecords := User.COUNT;
                 PermissionPagesMgt.Init(NoOfRecords,ARRAYLEN(UserNameCode));
               END;

    OnAfterGetRecord=BEGIN
                       FindUsers;
                       PermissionEditable := ISNULLGUID("App ID");
                     END;

    OnAfterGetCurrRecord=BEGIN
                           FindUsers;
                         END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      Name=PermissionActions;
                      CaptionML=ENU=Permissions;
                      ActionContainerType=RelatedInformation }
      { 6       ;1   ;Action    ;
                      Name=Permissions;
                      ShortCutKey=Shift+Ctrl+p;
                      CaptionML=ENU=Permissions;
                      ToolTipML=ENU=View or edit which feature objects that users need to access and set up the related permissions in permission sets that you can assign to the users of the database.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page Permissions;
                      RunPageLink="Role ID"=FIELD("Role ID");
                      Promoted=true;
                      Enabled=PermissionEditable;
                      PromotedIsBig=true;
                      Image=Permission;
                      PromotedCategory=Process }
      { 9       ;    ;ActionContainer;
                      Name=ActionContainer9;
                      ActionContainerType=ActionItems }
      { 8       ;1   ;Action    ;
                      Name=CopyPermissionSet;
                      Ellipsis=true;
                      CaptionML=ENU=Copy Permission Set;
                      ToolTipML=ENU=Create a copy of the current permission set with a name that you specify.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=PermissionEditable;
                      Image=Copy;
                      OnAction=VAR
                                 PermissionSet@1035 : Record "Permission Set";
                                 CopyPermissionSet@1034 : Report "Copy Permission Set";
                               BEGIN
                                 PermissionSet.SETRANGE("Role ID","Role ID");
                                 CopyPermissionSet.SETTABLEVIEW(PermissionSet);
                                 CopyPermissionSet.RUNMODAL;

                                 if GET(Scope::System,"App ID",CopyPermissionSet.GetRoleId) then;
                               END;
                                }
      { 7       ;1   ;Action    ;
                      Name=AllColumnsLeft;
                      CaptionML=ENU=All Columns Left;
                      ToolTipML=ENU=Jump to the left-most column.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PreviousSet;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 PermissionPagesMgt.AllColumnsLeft;
                               END;
                                }
      { 15      ;1   ;Action    ;
                      Name=ColumnLeft;
                      CaptionML=ENU=Column Left;
                      ToolTipML=ENU=Jump one column to the left.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PreviousRecord;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 PermissionPagesMgt.ColumnLeft;
                               END;
                                }
      { 16      ;1   ;Action    ;
                      Name=ColumnRight;
                      CaptionML=ENU=Column Right;
                      ToolTipML=ENU=Jump one column to the right.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=NextRecord;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 PermissionPagesMgt.ColumnRight;
                               END;
                                }
      { 25      ;1   ;Action    ;
                      Name=AllColumnsRight;
                      CaptionML=ENU=All Columns Right;
                      ToolTipML=ENU=Jump to the right-most column.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=NextSet;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 PermissionPagesMgt.AllColumnsRight;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 23  ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General;
                GroupType=Group }

    { 24  ;2   ;Field     ;
                Name=SelectedCompany;
                CaptionML=ENU=Company Name;
                ToolTipML=ENU=Specifies the name of the company.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SelectedCompany;
                TableRelation=Company;
                OnValidate=BEGIN
                             UpdateCompany;
                           END;

                ImplicitType=Text30 }

    { 26  ;2   ;Field     ;
                Name=ShowDomainName;
                CaptionML=ENU=Show Domain Name;
                ToolTipML=ENU=Specifies the domain name together with the user name for Windows user accounts, for example, DOMAIN\UserName.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShowDomainName;
                OnValidate=BEGIN
                             CurrPage.UPDATE(false);
                           END;

                ImplicitType=Boolean }

    { 2   ;1   ;Group     ;
                Name=Group;
                CaptionML=ENU=Permission Set;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=Role ID;
                ToolTipML=ENU=Specifies a profile. The profile determines the layout of the home page.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Role ID";
                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Name;
                ToolTipML=ENU=Specifies the name of the record.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name;
                ImplicitType=Text30 }

    { 31  ;2   ;Field     ;
                Name=App ID;
                CaptionML=ENU=Extension ID;
                ToolTipML=ENU=Specifies the unique identifier for the extension. A unique identifier will be generated if a value is not provided.;
                ApplicationArea=#Advanced;
                SourceExpr="App ID";
                Visible=False;
                ImplicitType=GUID }

    { 29  ;2   ;Field     ;
                Name=App Name;
                CaptionML=ENU=Extension Name;
                ToolTipML=ENU=Specifies the name of the extension.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="App Name";
                ImplicitType=Text250 }

    { 22  ;2   ;Field     ;
                Name=AllUsersHavePermission;
                CaptionML=ENU=All Users;
                ToolTipML=ENU=Specifies that the permission set will be assigned to all users.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AllUsersHavePermission;
                OnValidate=BEGIN
                             SetColumnPermission(0,AllUsersHavePermission);
                             CurrPage.UPDATE(false);
                           END;

                ImplicitType=Boolean }

    { 11  ;2   ;Field     ;
                Name=Column1;
                ApplicationArea=#All;
                SourceExpr=UserHasPermissionSet[1];
                CaptionClass='3,' + UserNameCode[1];
                Visible=NoOfRecords >= 1;
                OnValidate=BEGIN
                             SetColumnPermission(1,UserHasPermissionSet[1]);
                           END;
                            }

    { 12  ;2   ;Field     ;
                Name=Column2;
                ApplicationArea=#All;
                SourceExpr=UserHasPermissionSet[2];
                CaptionClass='3,' + UserNameCode[2];
                Visible=NoOfRecords >= 2;
                OnValidate=BEGIN
                             SetColumnPermission(2,UserHasPermissionSet[2]);
                           END;
                            }

    { 13  ;2   ;Field     ;
                Name=Column3;
                ApplicationArea=#All;
                SourceExpr=UserHasPermissionSet[3];
                CaptionClass='3,' + UserNameCode[3];
                Visible=NoOfRecords >= 3;
                OnValidate=BEGIN
                             SetColumnPermission(3,UserHasPermissionSet[3]);
                           END;
                            }

    { 14  ;2   ;Field     ;
                Name=Column4;
                ApplicationArea=#All;
                SourceExpr=UserHasPermissionSet[4];
                CaptionClass='3,' + UserNameCode[4];
                Visible=NoOfRecords >= 4;
                OnValidate=BEGIN
                             SetColumnPermission(4,UserHasPermissionSet[4]);
                           END;
                            }

    { 5   ;2   ;Field     ;
                Name=Column5;
                ApplicationArea=#All;
                SourceExpr=UserHasPermissionSet[5];
                CaptionClass='3,' + UserNameCode[5];
                Visible=NoOfRecords >= 5;
                OnValidate=BEGIN
                             SetColumnPermission(5,UserHasPermissionSet[5]);
                           END;
                            }

    { 17  ;2   ;Field     ;
                Name=Column6;
                ApplicationArea=#All;
                SourceExpr=UserHasPermissionSet[6];
                CaptionClass='3,' + UserNameCode[6];
                Visible=NoOfRecords >= 6;
                OnValidate=BEGIN
                             SetColumnPermission(6,UserHasPermissionSet[6]);
                           END;
                            }

    { 18  ;2   ;Field     ;
                Name=Column7;
                ApplicationArea=#All;
                SourceExpr=UserHasPermissionSet[7];
                CaptionClass='3,' + UserNameCode[7];
                Visible=NoOfRecords >= 7;
                OnValidate=BEGIN
                             SetColumnPermission(7,UserHasPermissionSet[7]);
                           END;
                            }

    { 19  ;2   ;Field     ;
                Name=Column8;
                ApplicationArea=#All;
                SourceExpr=UserHasPermissionSet[8];
                CaptionClass='3,' + UserNameCode[8];
                Visible=NoOfRecords >= 8;
                OnValidate=BEGIN
                             SetColumnPermission(8,UserHasPermissionSet[8]);
                           END;
                            }

    { 20  ;2   ;Field     ;
                Name=Column9;
                ApplicationArea=#All;
                SourceExpr=UserHasPermissionSet[9];
                CaptionClass='3,' + UserNameCode[9];
                Visible=NoOfRecords >= 9;
                OnValidate=BEGIN
                             SetColumnPermission(9,UserHasPermissionSet[9]);
                           END;
                            }

    { 21  ;2   ;Field     ;
                Name=Column10;
                ApplicationArea=#All;
                SourceExpr=UserHasPermissionSet[10];
                CaptionClass='3,' + UserNameCode[10];
                Visible=NoOfRecords >= 10;
                OnValidate=BEGIN
                             SetColumnPermission(10,UserHasPermissionSet[10]);
                           END;
                            }

    { 28  ;    ;Container ;
                Name=Container28;
                ContainerType=FactBoxArea }

    { 27  ;1   ;Part      ;
                Name=Permissions;
                CaptionML=ENU=Permissions;
                ApplicationArea=#Basic,#Suite;
                SubPageLink="Role ID"=FIELD("Role ID");
                PagePartID="Permissions FactBox";
                PartType=Page }

    { 30  ;1   ;Part      ;
                Name=Tenant Permissions;
                CaptionML=ENU=Tenant Permissions;
                ApplicationArea=#Basic,#Suite;
                SubPageLink="Role ID"=FIELD("Role ID"),
                            "App ID"=FIELD("App ID");
                PagePartID="Tenant Permissions FactBox";
                Editable=FALSE;
                PartType=Page }

  }
  CODE
  {
    VAR
      Company@1006 : Record Company;
      PermissionPagesMgt@1009 : Codeunit "Permission Pages Mgt.";
      UserSecurityIDArr@1005 : ARRAY [10] OF GUID;
      SelectedCompany@1007 : Text[30];
      ShowDomainName@1008 : Boolean;
      UserNameCode@1000 : ARRAY [10] OF Code[50];
      UserHasPermissionSet@1001 : ARRAY [10] OF Boolean;
      AllUsersHavePermission@1004 : Boolean;
      NoOfRecords@1002 : Integer;
      PermissionEditable@1003 : Boolean;

    LOCAL PROCEDURE FindUsers@5();
    VAR
      User@1000 : Record User;
      i@1001 : Integer;
      j@1002 : Integer;
    BEGIN
      CLEAR(UserNameCode);
      CLEAR(UserHasPermissionSet);
      User.SETCURRENTKEY("User Name");
      AllUsersHavePermission := true;
      HideExternalUsers(User);
      if User.FINDSET then
        repeat
          i += 1;
          if PermissionPagesMgt.IsInColumnsRange(i) then begin
            UserSecurityIDArr[i - PermissionPagesMgt.GetOffset] := User."User Security ID";
            j := 0;
            if not ShowDomainName then begin
              j := STRPOS(User."User Name",'\');
              if j < 0 then
                j := 0;
            end;
            UserNameCode[i - PermissionPagesMgt.GetOffset] := COPYSTR(User."User Name",j + 1,MAXSTRLEN(UserNameCode[1]));
            UserHasPermissionSet[i - PermissionPagesMgt.GetOffset] := UserHasPermission(Rec,User);
            AllUsersHavePermission := AllUsersHavePermission and UserHasPermissionSet[i - PermissionPagesMgt.GetOffset];
          end else
            if AllUsersHavePermission then
              AllUsersHavePermission := UserHasPermission(Rec,User);
        until (User.NEXT = 0) or (PermissionPagesMgt.IsPastColumnRange(i) and not AllUsersHavePermission);
    END;

    LOCAL PROCEDURE UserHasPermission@14(VAR AggregatePermissionSet@1001 : Record "Aggregate Permission Set";VAR User@1000 : Record User) : Boolean;
    VAR
      AccessControl@1002 : Record "Access Control";
    BEGIN
      AccessControl.SETRANGE("User Security ID",User."User Security ID");
      AccessControl.SETRANGE("Role ID",AggregatePermissionSet."Role ID");
      AccessControl.SETFILTER("Company Name",'%1|%2','',Company.Name);
      AccessControl.SETRANGE(Scope,AggregatePermissionSet.Scope);
      AccessControl.SETRANGE("App ID",AggregatePermissionSet."App ID");
      exit(not AccessControl.ISEMPTY);
    END;

    LOCAL PROCEDURE SetColumnPermission@1(ColumnNo@1001 : Integer;UserHasPermission@1003 : Boolean);
    VAR
      User@1000 : Record User;
    BEGIN
      if ColumnNo > 0 then begin
        SetUserPermission(UserSecurityIDArr[ColumnNo],UserHasPermission);
        AllUsersHavePermission := AllUsersHavePermission and UserHasPermission;
      end else begin
        HideExternalUsers(User);
        if User.FINDSET then
          repeat
            SetUserPermission(User."User Security ID",UserHasPermission);
          until User.NEXT = 0;
      end;
    END;

    LOCAL PROCEDURE SetUserPermission@7(UserSecurityID@1001 : GUID;UserHasPermission@1003 : Boolean);
    VAR
      AccessControl@1002 : Record "Access Control";
    BEGIN
      if AccessControl.GET(UserSecurityID,"Role ID",'',Scope,"App ID") or
         AccessControl.GET(UserSecurityID,"Role ID",Company.Name,Scope,"App ID")
      then begin
        if not UserHasPermission then
          AccessControl.DELETE;
        exit;
      end;
      if not UserHasPermission then
        exit;
      AccessControl.INIT;
      AccessControl."User Security ID" := UserSecurityID;
      AccessControl."Role ID" := "Role ID";
      AccessControl."Company Name" := Company.Name;
      AccessControl.Scope := Scope;
      AccessControl."App ID" := "App ID";
      AccessControl.INSERT;
    END;

    LOCAL PROCEDURE UpdateCompany@2();
    BEGIN
      Company.Name := SelectedCompany;
      if SelectedCompany <> '' then begin
        Company.FIND('=<>');
        SelectedCompany := Company.Name;
      end;
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE HideExternalUsers@6(VAR User@1000 : Record User);
    VAR
      PermissionManager@1001 : Codeunit "Permission Manager";
    BEGIN
      if PermissionManager.SoftwareAsAService then
        User.SETFILTER("License Type",'<>%1',User."License Type"::"External User");
    END;

    BEGIN
    END.
  }
}

