OBJECT Report 1198 Date Compress Resource Ledger
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Res. Ledger Entry"=rimd,
                TableData "Resource Register"=rimd,
                TableData "Date Compr. Register"=rimd,
                TableData "Dimension Set ID Filter Line"=imd;
    CaptionML=ENU=Date Compress Resource Ledger;
    ProcessingOnly=true;
    OnPreReport=BEGIN
                  DimSelectionBuf.CompareDimText(
                    3,REPORT::"Date Compress Resource Ledger",'',RetainDimText,Text010);
                  ResLedgEntryFilter := COPYSTR("Res. Ledger Entry".GETFILTERS,1,MAXSTRLEN(DateComprReg.Filter));
                END;

  }
  DATASET
  {
    { 4729;    ;DataItem;Res. Ledger Entry   ;
               DataItemTable="Res. Ledger Entry";
               DataItemTableView=SORTING("Resource No.","Posting Date");
               OnPreDataItem=VAR
                               GLSetup@1000 : Record "General Ledger Setup";
                             BEGIN
                               if not CONFIRM(Text000,false) then
                                 CurrReport.BREAK;

                               if EntrdDateComprReg."Ending Date" = 0D then
                                 ERROR(STRSUBSTNO(Text003,EntrdDateComprReg.FIELDCAPTION("Ending Date")));

                               Window.OPEN(Text004);

                               SourceCodeSetup.GET;
                               SourceCodeSetup.TESTFIELD("Compress Res. Ledger");

                               SelectedDim.GetSelectedDim(
                                 USERID,3,REPORT::"Date Compress Resource Ledger",'',TempSelectedDim);
                               GLSetup.GET;
                               Retain[5] :=
                                 TempSelectedDim.GET(
                                   USERID,3,REPORT::"Date Compress Resource Ledger",'',GLSetup."Global Dimension 1 Code");
                               Retain[6] :=
                                 TempSelectedDim.GET(
                                   USERID,3,REPORT::"Date Compress Resource Ledger",'',GLSetup."Global Dimension 2 Code");

                               NewResLedgEntry.LOCKTABLE;
                               ResReg.LOCKTABLE;
                               DateComprReg.LOCKTABLE;

                               if ResLedgEntry2.FIND('+') then;
                               LastEntryNo := ResLedgEntry2."Entry No.";
                               SETRANGE("Entry No.",0,LastEntryNo);
                               SETRANGE("Posting Date",EntrdDateComprReg."Starting Date",EntrdDateComprReg."Ending Date");

                               InitRegisters;
                             END;

               OnAfterGetRecord=BEGIN
                                  ResLedgEntry2 := "Res. Ledger Entry";
                                  with ResLedgEntry2 do begin
                                    SETCURRENTKEY("Resource No.","Posting Date");
                                    COPYFILTERS("Res. Ledger Entry");
                                    SETRANGE("Entry Type","Entry Type");
                                    SETRANGE("Resource No.","Resource No.");
                                    SETRANGE("Resource Group No.","Resource Group No.");
                                    SETFILTER("Posting Date",DateComprMgt.GetDateFilter("Posting Date",EntrdDateComprReg,true));

                                    if RetainNo(FIELDNO("Document No.")) then
                                      SETRANGE("Document No.","Document No.");
                                    if RetainNo(FIELDNO("Work Type Code")) then
                                      SETRANGE("Work Type Code","Work Type Code");
                                    if RetainNo(FIELDNO("Job No.")) then
                                      SETRANGE("Job No.","Job No.");
                                    if RetainNo(FIELDNO("Unit of Measure Code")) then
                                      SETRANGE("Unit of Measure Code","Unit of Measure Code");
                                    if RetainNo(FIELDNO("Global Dimension 1 Code")) then
                                      SETRANGE("Global Dimension 1 Code","Global Dimension 1 Code");
                                    if RetainNo(FIELDNO("Global Dimension 2 Code")) then
                                      SETRANGE("Global Dimension 2 Code","Global Dimension 2 Code");
                                    if RetainNo(FIELDNO(Chargeable)) then
                                      SETRANGE(Chargeable,Chargeable);
                                    if RetainNo(FIELDNO("Source Type")) then
                                      SETRANGE("Source Type","Source Type");
                                    if RetainNo(FIELDNO("Source No.")) then
                                      SETRANGE("Source No.","Source No.");

                                    if Quantity >= 0 then
                                      SETFILTER(Quantity,'>=0')
                                    else
                                      SETFILTER(Quantity,'<0');

                                    InitNewEntry(NewResLedgEntry);

                                    DimBufMgt.CollectDimEntryNo(
                                      TempSelectedDim,"Dimension Set ID","Entry No.",
                                      0,false,DimEntryNo);
                                    ComprDimEntryNo := DimEntryNo;
                                    SummarizeEntry(NewResLedgEntry,ResLedgEntry2);
                                    while NEXT <> 0 do begin
                                      DimBufMgt.CollectDimEntryNo(
                                        TempSelectedDim,"Dimension Set ID","Entry No.",
                                        ComprDimEntryNo,true,DimEntryNo);
                                      if DimEntryNo = ComprDimEntryNo then
                                        SummarizeEntry(NewResLedgEntry,ResLedgEntry2);
                                    end;

                                    InsertNewEntry(NewResLedgEntry,ComprDimEntryNo);

                                    ComprCollectedEntries;
                                  end;

                                  if DateComprReg."No. Records Deleted" >= NoOfDeleted + 10 then begin
                                    NoOfDeleted := DateComprReg."No. Records Deleted";
                                    InsertRegisters(ResReg,DateComprReg);
                                  end;
                                END;

               OnPostDataItem=BEGIN
                                if DateComprReg."No. Records Deleted" > NoOfDeleted then
                                  InsertRegisters(ResReg,DateComprReg);
                              END;

               ReqFilterFields="Entry Type","Resource No.","Resource Group No." }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnOpenPage=BEGIN
                   if EntrdDateComprReg."Ending Date" = 0D then
                     EntrdDateComprReg."Ending Date" := TODAY;
                   if EntrdResLedgEntry.Description = '' then
                     EntrdResLedgEntry.Description := Text009;

                   with "Res. Ledger Entry" do begin
                     InsertField(FIELDNO("Document No."),FIELDCAPTION("Document No."));
                     InsertField(FIELDNO("Work Type Code"),FIELDCAPTION("Work Type Code"));
                     InsertField(FIELDNO("Job No."),FIELDCAPTION("Job No."));
                     InsertField(FIELDNO("Unit of Measure Code"),FIELDCAPTION("Unit of Measure Code"));
                     InsertField(FIELDNO("Global Dimension 1 Code"),FIELDCAPTION("Global Dimension 1 Code"));
                     InsertField(FIELDNO("Global Dimension 2 Code"),FIELDCAPTION("Global Dimension 2 Code"));
                     InsertField(FIELDNO(Chargeable),FIELDCAPTION(Chargeable));
                     InsertField(FIELDNO("Source Type"),FIELDCAPTION("Source No."));
                     InsertField(FIELDNO("Source No."),FIELDCAPTION("Source No."));
                   end;

                   RetainDimText := DimSelectionBuf.GetDimSelectionText(3,REPORT::"Date Compress Resource Ledger",'');
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=StartingDate;
                  CaptionML=ENU=Starting Date;
                  ToolTipML=ENU=Specifies the date from which the report or batch job processes information.;
                  ApplicationArea=#Jobs;
                  SourceExpr=EntrdDateComprReg."Starting Date" }

      { 2   ;2   ;Field     ;
                  Name=EndingDate;
                  CaptionML=ENU=Ending Date;
                  ToolTipML=ENU=Specifies the date to which the report or batch job processes information.;
                  ApplicationArea=#Jobs;
                  SourceExpr=EntrdDateComprReg."Ending Date" }

      { 3   ;2   ;Field     ;
                  Name=Period Length;
                  CaptionML=ENU=Period Length;
                  ToolTipML=ENU=Specifies the period for which data is shown in the report. For example, enter "1M" for one month, "30D" for thirty days, "3Q" for three quarters, or "5Y" for five years.;
                  OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Period;
                  ApplicationArea=#Jobs;
                  SourceExpr=EntrdDateComprReg."Period Length" }

      { 4   ;2   ;Field     ;
                  Name=Posting Description;
                  CaptionML=ENU=Posting Description;
                  ToolTipML=ENU=Specifies a text that accompanies the entries that result from the compression. The default description is Date Compressed.;
                  ApplicationArea=#Jobs;
                  SourceExpr=EntrdResLedgEntry.Description }

      { 1907651001;2;Group  ;
                  Name=Retain Field Contents;
                  CaptionML=ENU=Retain Field Contents }

      { 5   ;3   ;Field     ;
                  Name=Document No.;
                  CaptionML=ENU=Document No.;
                  ToolTipML=ENU=Specifies the number of a document that the date compression will apply to.;
                  ApplicationArea=#Jobs;
                  SourceExpr=Retain[1] }

      { 6   ;3   ;Field     ;
                  Name=Work Type Code;
                  CaptionML=ENU=Work Type Code;
                  ToolTipML=ENU=Specifies that you want to retain the contents of the Work Type Code field.;
                  ApplicationArea=#Jobs;
                  SourceExpr=Retain[2] }

      { 7   ;3   ;Field     ;
                  Name=Job No.;
                  CaptionML=ENU=Job No.;
                  ToolTipML=ENU=Specifies the job number.;
                  ApplicationArea=#Jobs;
                  SourceExpr=Retain[3] }

      { 10  ;3   ;Field     ;
                  Name=Unit of Measure Code;
                  CaptionML=ENU=Unit of Measure Code;
                  ToolTipML=ENU=Specifies that you want to retain the contents of the Unit of Measure Code field.;
                  ApplicationArea=#Jobs;
                  SourceExpr=Retain[4] }

      { 8   ;3   ;Field     ;
                  Name=Source Type;
                  CaptionML=ENU=Source Type;
                  ToolTipML=ENU=Specifies that you want to retain the contents of the Source Type field.;
                  ApplicationArea=#Jobs;
                  SourceExpr=Retain[8] }

      { 9   ;3   ;Field     ;
                  Name=Source No.;
                  CaptionML=ENU=Source No.;
                  ToolTipML=ENU=Specifies that you want to retain the contents of the Source No. field.;
                  ApplicationArea=#Jobs;
                  SourceExpr=Retain[9] }

      { 11  ;3   ;Field     ;
                  Name=Chargeable;
                  CaptionML=ENU=Chargeable;
                  ToolTipML=ENU=Specifies that you want to retain the contents of the Chargeable field when compressing resource ledgers.;
                  ApplicationArea=#Jobs;
                  SourceExpr=Retain[7] }

      { 12  ;2   ;Field     ;
                  Name=RetainDimensions;
                  CaptionML=ENU=Retain Dimensions;
                  ToolTipML=ENU=Specifies which dimension information you want to retain when the entries are compressed. The more dimension information that you choose to retain, the more detailed the compressed entries are.;
                  ApplicationArea=#Jobs;
                  SourceExpr=RetainDimText;
                  Editable=FALSE;
                  OnAssistEdit=BEGIN
                                 DimSelectionBuf.SetDimSelectionMultiple(3,REPORT::"Date Compress Resource Ledger",RetainDimText);
                               END;
                                }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=This batch job deletes entries.Therefore, it is important that you make a backup of the database before you run the batch job.\\Do you want to date compress the entries?';
      Text003@1003 : TextConst 'ENU=%1 must be specified.';
      Text004@1004 : TextConst 'ENU=Date compressing resource ledger entries...\\Resource No.         #1##########\Date                 #2######\\No. of new entries   #3######\No. of entries del.  #4######';
      Text009@1009 : TextConst 'ENU=Date Compressed';
      Text010@1010 : TextConst 'ENU=Retain Dimensions';
      SourceCodeSetup@1011 : Record "Source Code Setup";
      DateComprReg@1012 : Record "Date Compr. Register";
      EntrdDateComprReg@1013 : Record "Date Compr. Register";
      ResReg@1014 : Record "Resource Register";
      EntrdResLedgEntry@1015 : Record "Res. Ledger Entry";
      NewResLedgEntry@1016 : Record "Res. Ledger Entry";
      ResLedgEntry2@1017 : Record "Res. Ledger Entry";
      SelectedDim@1018 : Record "Selected Dimension";
      TempSelectedDim@1019 : TEMPORARY Record "Selected Dimension";
      DimSelectionBuf@1020 : Record "Dimension Selection Buffer";
      DateComprMgt@1021 : Codeunit DateComprMgt;
      DimBufMgt@1022 : Codeunit "Dimension Buffer Management";
      DimMgt@1023 : Codeunit DimensionManagement;
      Window@1024 : Dialog;
      ResLedgEntryFilter@1025 : Text[250];
      NoOfFields@1026 : Integer;
      Retain@1027 : ARRAY [10] OF Boolean;
      FieldNumber@1028 : ARRAY [10] OF Integer;
      FieldNameArray@1029 : ARRAY [10] OF Text[100];
      LastEntryNo@1030 : Integer;
      NoOfDeleted@1031 : Integer;
      ResRegExists@1032 : Boolean;
      i@1033 : Integer;
      ComprDimEntryNo@1034 : Integer;
      DimEntryNo@1035 : Integer;
      RetainDimText@1036 : Text[250];

    LOCAL PROCEDURE InitRegisters@4();
    VAR
      NextRegNo@1000 : Integer;
    BEGIN
      if ResReg.FIND('+') then;
      ResReg.INIT;
      ResReg."No." := ResReg."No." + 1;
      ResReg."Creation Date" := TODAY;
      ResReg."Source Code" := SourceCodeSetup."Compress Res. Ledger";
      ResReg."User ID" := USERID;
      ResReg."From Entry No." := LastEntryNo + 1;

      if DateComprReg.FINDLAST then
        NextRegNo := DateComprReg."No." + 1;

      DateComprReg.InitRegister(
        DATABASE::"Res. Ledger Entry",NextRegNo,
        EntrdDateComprReg."Starting Date",EntrdDateComprReg."Ending Date",EntrdDateComprReg."Period Length",
        ResLedgEntryFilter,ResReg."No.",SourceCodeSetup."Compress Res. Ledger");

      for i := 1 to NoOfFields do
        if Retain[i] then
          DateComprReg."Retain Field Contents" :=
            COPYSTR(
              DateComprReg."Retain Field Contents" + ',' + FieldNameArray[i],1,
              MAXSTRLEN(DateComprReg."Retain Field Contents"));
      DateComprReg."Retain Field Contents" := COPYSTR(DateComprReg."Retain Field Contents",2);

      ResRegExists := false;
      NoOfDeleted := 0;
    END;

    LOCAL PROCEDURE InsertRegisters@1(VAR ResReg@1000 : Record "Resource Register";VAR DateComprReg@1001 : Record "Date Compr. Register");
    BEGIN
      ResReg."To Entry No." := NewResLedgEntry."Entry No.";

      if ResRegExists then begin
        ResReg.MODIFY;
        DateComprReg.MODIFY;
      end else begin
        ResReg.INSERT;
        DateComprReg.INSERT;
        ResRegExists := true;
      end;
      COMMIT;

      NewResLedgEntry.LOCKTABLE;
      ResReg.LOCKTABLE;
      DateComprReg.LOCKTABLE;

      ResLedgEntry2.RESET;
      if ResLedgEntry2.FIND('+') then;
      if LastEntryNo <> ResLedgEntry2."Entry No." then begin
        LastEntryNo := ResLedgEntry2."Entry No.";
        InitRegisters;
      end;
    END;

    LOCAL PROCEDURE InsertField@2(Number@1000 : Integer;Name@1001 : Text[100]);
    BEGIN
      NoOfFields := NoOfFields + 1;
      FieldNumber[NoOfFields] := Number;
      FieldNameArray[NoOfFields] := Name;
    END;

    LOCAL PROCEDURE RetainNo@3(Number@1000 : Integer) : Boolean;
    BEGIN
      exit(Retain[Index(Number)]);
    END;

    LOCAL PROCEDURE Index@6(Number@1000 : Integer) : Integer;
    BEGIN
      for i := 1 to NoOfFields do
        if Number = FieldNumber[i] then
          exit(i);
    END;

    LOCAL PROCEDURE SummarizeEntry@5(VAR NewResLedgEntry@1000 : Record "Res. Ledger Entry";ResLedgEntry@1001 : Record "Res. Ledger Entry");
    BEGIN
      with ResLedgEntry do begin
        NewResLedgEntry.Quantity := NewResLedgEntry.Quantity + Quantity;
        NewResLedgEntry."Quantity (Base)" := NewResLedgEntry."Quantity (Base)" + "Quantity (Base)";
        NewResLedgEntry."Total Cost" := NewResLedgEntry."Total Cost" + "Total Cost";
        NewResLedgEntry."Total Price" := NewResLedgEntry."Total Price" + "Total Price";
        DELETE;
        DateComprReg."No. Records Deleted" := DateComprReg."No. Records Deleted" + 1;
        Window.UPDATE(4,DateComprReg."No. Records Deleted");
      end;
    END;

    PROCEDURE ComprCollectedEntries@12();
    VAR
      ResLedgEntry@1000 : Record "Res. Ledger Entry";
      OldDimEntryNo@1001 : Integer;
      Found@1002 : Boolean;
      ResLedgEntryNo@1003 : Integer;
    BEGIN
      OldDimEntryNo := 0;
      if DimBufMgt.FindFirstDimEntryNo(DimEntryNo,ResLedgEntryNo) then begin
        InitNewEntry(NewResLedgEntry);
        repeat
          ResLedgEntry.GET(ResLedgEntryNo);
          SummarizeEntry(NewResLedgEntry,ResLedgEntry);
          OldDimEntryNo := DimEntryNo;
          Found := DimBufMgt.NextDimEntryNo(DimEntryNo,ResLedgEntryNo);
          if (OldDimEntryNo <> DimEntryNo) or not Found then begin
            InsertNewEntry(NewResLedgEntry,OldDimEntryNo);
            if Found then
              InitNewEntry(NewResLedgEntry);
          end;
          OldDimEntryNo := DimEntryNo;
        until not Found;
      end;
      DimBufMgt.DeleteAllDimEntryNo;
    END;

    PROCEDURE InitNewEntry@7(VAR NewResLedgEntry@1000 : Record "Res. Ledger Entry");
    BEGIN
      LastEntryNo := LastEntryNo + 1;

      with ResLedgEntry2 do begin
        NewResLedgEntry.INIT;
        NewResLedgEntry."Entry No." := LastEntryNo;
        NewResLedgEntry."Entry Type" := "Entry Type";
        NewResLedgEntry."Resource No." := "Resource No.";
        NewResLedgEntry."Resource Group No." := "Resource Group No.";
        NewResLedgEntry."Posting Date" := GETRANGEMIN("Posting Date");
        NewResLedgEntry.Description := EntrdResLedgEntry.Description;
        NewResLedgEntry."Source Code" := SourceCodeSetup."Compress Res. Ledger";
        NewResLedgEntry."User ID" := USERID;

        if RetainNo(FIELDNO("Document No.")) then
          NewResLedgEntry."Document No." := "Document No.";
        if RetainNo(FIELDNO("Work Type Code")) then
          NewResLedgEntry."Work Type Code" := "Work Type Code";
        if RetainNo(FIELDNO("Job No.")) then
          NewResLedgEntry."Job No." := "Job No.";
        if RetainNo(FIELDNO("Unit of Measure Code")) then
          NewResLedgEntry."Unit of Measure Code" := "Unit of Measure Code";
        if RetainNo(FIELDNO("Global Dimension 1 Code")) then
          NewResLedgEntry."Global Dimension 1 Code" := "Global Dimension 1 Code";
        if RetainNo(FIELDNO("Global Dimension 2 Code")) then
          NewResLedgEntry."Global Dimension 2 Code" := "Global Dimension 2 Code";
        if RetainNo(FIELDNO(Chargeable)) then
          NewResLedgEntry.Chargeable := Chargeable;

        Window.UPDATE(1,NewResLedgEntry."Resource No.");
        Window.UPDATE(2,NewResLedgEntry."Posting Date");
        DateComprReg."No. of New Records" := DateComprReg."No. of New Records" + 1;
        Window.UPDATE(3,DateComprReg."No. of New Records");
      end;
    END;

    LOCAL PROCEDURE InsertNewEntry@23(VAR NewResLedgEntry@1000 : Record "Res. Ledger Entry";DimEntryNo@1001 : Integer);
    VAR
      TempDimBuf@1002 : TEMPORARY Record "Dimension Buffer";
      TempDimSetEntry@1005 : TEMPORARY Record "Dimension Set Entry";
    BEGIN
      TempDimBuf.DELETEALL;
      DimBufMgt.GetDimensions(DimEntryNo,TempDimBuf);
      DimMgt.CopyDimBufToDimSetEntry(TempDimBuf,TempDimSetEntry);
      NewResLedgEntry."Dimension Set ID" := DimMgt.GetDimensionSetID(TempDimSetEntry);
      NewResLedgEntry.INSERT;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

