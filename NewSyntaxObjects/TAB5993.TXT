OBJECT Table 5993 Service Invoice Line
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Invoice Line;
    PasteIsValid=false;
    LookupPageID="Posted Service Invoice Lines";
    DrillDownPageID="Posted Service Invoice Lines";
  }
  FIELDS
  {
    { 2   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Customer No.;
                                                   Editable=false }
    { 3   ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 5   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,Item,Resource,Cost,G/L Account";
                                                   OptionString=" ",Item,Resource,Cost,"G/L Account" }
    { 6   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource
                                                                 ELSE IF (Type=CONST(Cost)) "Service Cost"
                                                                 ELSE IF (Type=CONST("G/L Account")) "G/L Account";
                                                   CaptionML=ENU=No. }
    { 7   ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=ENU=Location Code }
    { 8   ;   ;Posting Group       ;Code20        ;TableRelation=IF (Type=CONST(Item)) "Inventory Posting Group";
                                                   CaptionML=ENU=Posting Group }
    { 11  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 12  ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 13  ;   ;Unit of Measure     ;Text10        ;CaptionML=ENU=Unit of Measure }
    { 15  ;   ;Quantity            ;Decimal       ;CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5 }
    { 22  ;   ;Unit Price          ;Decimal       ;CaptionML=ENU=Unit Price;
                                                   Editable=true;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode;
                                                   CaptionClass=GetCaptionClass(FIELDNO("Unit Price")) }
    { 23  ;   ;Unit Cost (LCY)     ;Decimal       ;CaptionML=ENU=Unit Cost (LCY);
                                                   AutoFormatType=2 }
    { 25  ;   ;VAT %               ;Decimal       ;CaptionML=ENU=VAT %;
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 27  ;   ;Line Discount %     ;Decimal       ;CaptionML=ENU=Line Discount %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 28  ;   ;Line Discount Amount;Decimal       ;CaptionML=ENU=Line Discount Amount;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 29  ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 30  ;   ;Amount Including VAT;Decimal       ;CaptionML=ENU=Amount Including VAT;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 32  ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=true;
                                                   CaptionML=ENU=Allow Invoice Disc. }
    { 34  ;   ;Gross Weight        ;Decimal       ;CaptionML=ENU=Gross Weight;
                                                   DecimalPlaces=0:5 }
    { 35  ;   ;Net Weight          ;Decimal       ;CaptionML=ENU=Net Weight;
                                                   DecimalPlaces=0:5 }
    { 36  ;   ;Units per Parcel    ;Decimal       ;CaptionML=ENU=Units per Parcel;
                                                   DecimalPlaces=0:5 }
    { 37  ;   ;Unit Volume         ;Decimal       ;CaptionML=ENU=Unit Volume;
                                                   DecimalPlaces=0:5 }
    { 38  ;   ;Appl.-to Item Entry ;Integer       ;AccessByPermission=TableData Item=R;
                                                   CaptionML=ENU=Appl.-to Item Entry }
    { 40  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 41  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 42  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=ENU=Customer Price Group;
                                                   Editable=false }
    { 52  ;   ;Work Type Code      ;Code10        ;TableRelation="Work Type";
                                                   CaptionML=ENU=Work Type Code }
    { 63  ;   ;Shipment No.        ;Code20        ;CaptionML=ENU=Shipment No.;
                                                   Editable=false }
    { 64  ;   ;Shipment Line No.   ;Integer       ;CaptionML=ENU=Shipment Line No.;
                                                   Editable=false }
    { 68  ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Bill-to Customer No.;
                                                   Editable=false }
    { 69  ;   ;Inv. Discount Amount;Decimal       ;CaptionML=ENU=Inv. Discount Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 74  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 75  ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=ENU=Gen. Prod. Posting Group }
    { 77  ;   ;VAT Calculation Type;Option        ;CaptionML=ENU=VAT Calculation Type;
                                                   OptionCaptionML=ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   OptionString="Normal VAT","Reverse Charge VAT","Full VAT","Sales Tax";
                                                   Editable=false }
    { 78  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=ENU=Transaction Type }
    { 79  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=ENU=Transport Method }
    { 80  ;   ;Attached to Line No.;Integer       ;TableRelation="Service Invoice Line"."Line No." WHERE ("Document No."=FIELD("Document No."));
                                                   CaptionML=ENU=Attached to Line No.;
                                                   Editable=false }
    { 81  ;   ;Exit Point          ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=ENU=Exit Point }
    { 82  ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=ENU=Area }
    { 83  ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=ENU=Transaction Specification }
    { 85  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=ENU=Tax Area Code }
    { 86  ;   ;Tax Liable          ;Boolean       ;CaptionML=ENU=Tax Liable }
    { 87  ;   ;Tax Group Code      ;Code20        ;TableRelation="Tax Group";
                                                   CaptionML=ENU=Tax Group Code }
    { 88  ;   ;VAT Clause Code     ;Code20        ;TableRelation="VAT Clause";
                                                   CaptionML=ENU=VAT Clause Code }
    { 89  ;   ;VAT Bus. Posting Group;Code20      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=VAT Bus. Posting Group }
    { 90  ;   ;VAT Prod. Posting Group;Code20     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 99  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=ENU=VAT Base Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 101 ;   ;System-Created Entry;Boolean       ;CaptionML=ENU=System-Created Entry;
                                                   Editable=false }
    { 103 ;   ;Line Amount         ;Decimal       ;CaptionML=ENU=Line Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode;
                                                   CaptionClass=GetCaptionClass(FIELDNO("Line Amount")) }
    { 104 ;   ;VAT Difference      ;Decimal       ;CaptionML=ENU=VAT Difference;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 106 ;   ;VAT Identifier      ;Code20        ;CaptionML=ENU=VAT Identifier;
                                                   Editable=false }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=false }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE ("Item No."=FIELD("No."));
                                                   CaptionML=ENU=Variant Code }
    { 5403;   ;Bin Code            ;Code20        ;TableRelation=Bin.Code WHERE ("Location Code"=FIELD("Location Code"));
                                                   CaptionML=ENU=Bin Code }
    { 5404;   ;Qty. per Unit of Measure;Decimal   ;InitValue=1;
                                                   CaptionML=ENU=Qty. per Unit of Measure;
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 5407;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE ("Item No."=FIELD("No."))
                                                                 ELSE "Unit of Measure";
                                                   CaptionML=ENU=Unit of Measure Code }
    { 5415;   ;Quantity (Base)     ;Decimal       ;CaptionML=ENU=Quantity (Base);
                                                   DecimalPlaces=0:5 }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=ENU=Responsibility Center;
                                                   Editable=false }
    { 5702;   ;Substitution Available;Boolean     ;CaptionML=ENU=Substitution Available;
                                                   Editable=false }
    { 5709;   ;Item Category Code  ;Code20        ;TableRelation="Item Category".Code;
                                                   CaptionML=ENU=Item Category Code }
    { 5710;   ;Nonstock            ;Boolean       ;CaptionML=ENU=Nonstock;
                                                   Editable=false }
    { 5712;   ;Product Group Code  ;Code10        ;TableRelation="Product Group".Code WHERE ("Item Category Code"=FIELD("Item Category Code"));
                                                   ValidateTableRelation=false;
                                                   CaptionML=ENU=Product Group Code }
    { 5902;   ;Service Item No.    ;Code20        ;TableRelation="Service Item"."No.";
                                                   CaptionML=ENU=Service Item No. }
    { 5903;   ;Appl.-to Service Entry;Integer     ;AccessByPermission=TableData Item=R;
                                                   CaptionML=ENU=Appl.-to Service Entry;
                                                   Editable=false }
    { 5904;   ;Service Item Line No.;Integer      ;CaptionML=ENU=Service Item Line No. }
    { 5905;   ;Service Item Serial No.;Code20     ;CaptionML=ENU=Service Item Serial No. }
    { 5906;   ;Service Item Line Description;Text50;
                                                   CaptionML=ENU=Service Item Line Description;
                                                   Editable=false }
    { 5907;   ;Serv. Price Adjmt. Gr. Code;Code10 ;TableRelation="Service Price Adjustment Group";
                                                   CaptionML=ENU=Serv. Price Adjmt. Gr. Code;
                                                   Editable=false }
    { 5908;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 5910;   ;Needed by Date      ;Date          ;CaptionML=ENU=Needed by Date }
    { 5916;   ;Ship-to Code        ;Code10        ;TableRelation="Ship-to Address".Code WHERE ("Customer No."=FIELD("Customer No."));
                                                   CaptionML=ENU=Ship-to Code;
                                                   Editable=false }
    { 5918;   ;Quantity Consumed   ;Decimal       ;CaptionML=ENU=Quantity Consumed;
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 5920;   ;Qty. Consumed (Base);Decimal       ;CaptionML=ENU=Qty. Consumed (Base);
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 5928;   ;Service Price Group Code;Code10    ;TableRelation="Service Price Group";
                                                   CaptionML=ENU=Service Price Group Code }
    { 5929;   ;Fault Area Code     ;Code10        ;TableRelation="Fault Area";
                                                   CaptionML=ENU=Fault Area Code }
    { 5930;   ;Symptom Code        ;Code10        ;TableRelation="Symptom Code";
                                                   CaptionML=ENU=Symptom Code }
    { 5931;   ;Fault Code          ;Code10        ;TableRelation="Fault Code".Code WHERE ("Fault Area Code"=FIELD("Fault Area Code"),
                                                                                          "Symptom Code"=FIELD("Symptom Code"));
                                                   CaptionML=ENU=Fault Code }
    { 5932;   ;Resolution Code     ;Code10        ;TableRelation="Resolution Code";
                                                   CaptionML=ENU=Resolution Code }
    { 5933;   ;Exclude Warranty    ;Boolean       ;CaptionML=ENU=Exclude Warranty;
                                                   Editable=true }
    { 5934;   ;Warranty            ;Boolean       ;CaptionML=ENU=Warranty;
                                                   Editable=false }
    { 5936;   ;Contract No.        ;Code20        ;TableRelation="Service Contract Header"."Contract No." WHERE ("Contract Type"=CONST(Contract));
                                                   CaptionML=ENU=Contract No.;
                                                   Editable=false }
    { 5938;   ;Contract Disc. %    ;Decimal       ;CaptionML=ENU=Contract Disc. %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=false }
    { 5939;   ;Warranty Disc. %    ;Decimal       ;CaptionML=ENU=Warranty Disc. %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=false }
    { 5965;   ;Component Line No.  ;Integer       ;CaptionML=ENU=Component Line No. }
    { 5966;   ;Spare Part Action   ;Option        ;CaptionML=ENU=Spare Part Action;
                                                   OptionCaptionML=ENU=" ,Permanent,Temporary,Component Replaced,Component Installed";
                                                   OptionString=" ",Permanent,Temporary,"Component Replaced","Component Installed" }
    { 5967;   ;Fault Reason Code   ;Code10        ;TableRelation="Fault Reason Code";
                                                   CaptionML=ENU=Fault Reason Code }
    { 5968;   ;Replaced Item No.   ;Code20        ;TableRelation=IF ("Replaced Item Type"=CONST("Service Item")) "Service Item"
                                                                 ELSE IF ("Replaced Item Type"=CONST(Item)) Item;
                                                   CaptionML=ENU=Replaced Item No. }
    { 5969;   ;Exclude Contract Discount;Boolean  ;CaptionML=ENU=Exclude Contract Discount;
                                                   Editable=true }
    { 5970;   ;Replaced Item Type  ;Option        ;CaptionML=ENU=Replaced Item Type;
                                                   OptionCaptionML=ENU=" ,Service Item,Item";
                                                   OptionString=" ","Service Item",Item }
    { 5994;   ;Price Adjmt. Status ;Option        ;CaptionML=ENU=Price Adjmt. Status;
                                                   OptionCaptionML=ENU=" ,Adjusted,Modified";
                                                   OptionString=" ",Adjusted,Modified;
                                                   Editable=false }
    { 5997;   ;Line Discount Type  ;Option        ;CaptionML=ENU=Line Discount Type;
                                                   OptionCaptionML=ENU=" ,Warranty Disc.,Contract Disc.,Line Disc.,Manual";
                                                   OptionString=" ","Warranty Disc.","Contract Disc.","Line Disc.",Manual;
                                                   Editable=false }
    { 5999;   ;Copy Components From;Option        ;CaptionML=ENU=Copy Components From;
                                                   OptionCaptionML=ENU=None,Item BOM,Old Service Item,Old Serv.Item w/o Serial No.;
                                                   OptionString=None,"Item BOM","Old Service Item","Old Serv.Item w/o Serial No." }
    { 6608;   ;Return Reason Code  ;Code10        ;TableRelation="Return Reason";
                                                   CaptionML=ENU=Return Reason Code }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;CaptionML=ENU=Allow Line Disc. }
    { 7002;   ;Customer Disc. Group;Code20        ;TableRelation="Customer Discount Group";
                                                   CaptionML=ENU=Customer Disc. Group }
  }
  KEYS
  {
    {    ;"Document No.","Line No."               ;SumIndexFields=Amount;
                                                   Clustered=true }
    {    ;Type,"No."                               }
    {    ;"Service Item No.",Type,"Posting Date"   }
    {    ;"Document No.","Service Item No."        }
    {    ;"Document No.","Service Item Line No.","Serv. Price Adjmt. Gr. Code";
                                                   SumIndexFields=Amount }
    {    ;"Document No.","Service Item Line No.",Type,"No." }
    {    ;Type,"No.","Variant Code","Location Code","Posting Date","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code";
                                                   SumIndexFields="Quantity (Base)" }
    {    ;"Appl.-to Service Entry"                 }
    {    ;"Document No.","Service Item Line No.","Component Line No." }
    {    ;"Fault Reason Code"                      }
    {    ;"Customer No."                           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimMgt@1000 : Codeunit DimensionManagement;

    [External]
    PROCEDURE ShowItemTrackingLines@1();
    VAR
      ItemTrackingDocMgt@1000 : Codeunit "Item Tracking Doc. Management";
    BEGIN
      ItemTrackingDocMgt.ShowItemTrackingForInvoiceLine(RowID1);
    END;

    [External]
    PROCEDURE CalcVATAmountLines@7(ServInvHeader@1000 : Record "Service Invoice Header";VAR TempVATAmountLine@1001 : TEMPORARY Record "VAT Amount Line");
    BEGIN
      TempVATAmountLine.DELETEALL;
      SETRANGE("Document No.",ServInvHeader."No.");
      if FIND('-') then
        repeat
          TempVATAmountLine.INIT;
          TempVATAmountLine.CopyFromServInvLine(Rec);
          TempVATAmountLine.InsertLine;
        until NEXT = 0;
    END;

    [External]
    PROCEDURE RowID1@2() : Text[250];
    VAR
      ItemTrackingMgt@1000 : Codeunit "Item Tracking Management";
    BEGIN
      exit(ItemTrackingMgt.ComposeRowID(DATABASE::"Service Invoice Line",0,"Document No.",'',0,"Line No."));
    END;

    LOCAL PROCEDURE GetCaptionClass@3(FieldNumber@1000 : Integer) : Text[80];
    VAR
      ServiceInvHeader@1001 : Record "Service Invoice Header";
    BEGIN
      if not ServiceInvHeader.GET("Document No.") then
        ServiceInvHeader.INIT;
      if ServiceInvHeader."Prices Including VAT" then
        exit('2,1,' + GetFieldCaption(FieldNumber));
      exit('2,0,' + GetFieldCaption(FieldNumber));
    END;

    LOCAL PROCEDURE GetFieldCaption@4(FieldNumber@1000 : Integer) : Text[100];
    VAR
      Field@1001 : Record Field;
    BEGIN
      Field.GET(DATABASE::"Service Invoice Line",FieldNumber);
      exit(Field."Field Caption");
    END;

    [External]
    PROCEDURE ShowDimensions@5();
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",
        STRSUBSTNO('%1 %2 %3',TABLECAPTION,"Document No.","Line No."));
    END;

    [External]
    PROCEDURE GetCurrencyCode@6() : Code[10];
    VAR
      ServiceInvHeader@1000 : Record "Service Invoice Header";
    BEGIN
      if "Document No." = ServiceInvHeader."No." then
        exit(ServiceInvHeader."Currency Code");
      if ServiceInvHeader.GET("Document No.") then
        exit(ServiceInvHeader."Currency Code");
      exit('');
    END;

    LOCAL PROCEDURE GetServShptLines@14(VAR TempServShptLine@1000 : TEMPORARY Record "Service Shipment Line");
    VAR
      ServShptLine@1003 : Record "Service Shipment Line";
      ItemLedgEntry@1002 : Record "Item Ledger Entry";
      ValueEntry@1001 : Record "Value Entry";
    BEGIN
      TempServShptLine.RESET;
      TempServShptLine.DELETEALL;

      if Type <> Type::Item then
        exit;

      FilterPstdDocLineValueEntries(ValueEntry);
      if ValueEntry.FINDSET then
        repeat
          ItemLedgEntry.GET(ValueEntry."Item Ledger Entry No.");
          if ItemLedgEntry."Document Type" = ItemLedgEntry."Document Type"::"Service Shipment" then
            if ServShptLine.GET(ItemLedgEntry."Document No.",ItemLedgEntry."Document Line No.") then begin
              TempServShptLine.INIT;
              TempServShptLine := ServShptLine;
              if TempServShptLine.INSERT then;
            end;
        until ValueEntry.NEXT = 0;
    END;

    [External]
    PROCEDURE FilterPstdDocLineValueEntries@8(VAR ValueEntry@1000 : Record "Value Entry");
    BEGIN
      ValueEntry.RESET;
      ValueEntry.SETCURRENTKEY("Document No.");
      ValueEntry.SETRANGE("Document No.","Document No.");
      ValueEntry.SETRANGE("Document Type",ValueEntry."Document Type"::"Service Invoice");
      ValueEntry.SETRANGE("Document Line No.","Line No.");
    END;

    [External]
    PROCEDURE ShowItemShipmentLines@9();
    VAR
      TempServShptLine@1000 : TEMPORARY Record "Service Shipment Line";
    BEGIN
      if Type = Type::Item then begin
        GetServShptLines(TempServShptLine);
        PAGE.RUNMODAL(0,TempServShptLine);
      end;
    END;

    BEGIN
    END.
  }
}

