OBJECT Table 7700 Miniform Header
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnDelete=VAR
               MiniFormLine@1000 : Record "Miniform Line";
               MiniFormFunc@1001 : Record "Miniform Function";
             BEGIN
               MiniFormLine.RESET;
               MiniFormLine.SETRANGE("Miniform Code",Code);
               MiniFormLine.DELETEALL;

               MiniFormFunc.RESET;
               MiniFormFunc.SETRANGE("Miniform Code",Code);
               MiniFormFunc.DELETEALL;
             END;

    CaptionML=ENU=Miniform Header;
    LookupPageID=Miniforms;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=ENU=Code;
                                                   NotBlank=true }
    { 11  ;   ;Description         ;Text30        ;CaptionML=ENU=Description }
    { 12  ;   ;No. of Records in List;Integer     ;CaptionML=ENU=No. of Records in List }
    { 13  ;   ;Form Type           ;Option        ;CaptionML=ENU=Form Type;
                                                   OptionCaptionML=[@@@={Locked};
                                                                    ENU=Card,Selection List,Data List,Data List Input];
                                                   OptionString=Card,"Selection List","Data List","Data List Input" }
    { 15  ;   ;Start Miniform      ;Boolean       ;OnValidate=VAR
                                                                MiniformHeader@1000 : Record "Miniform Header";
                                                              BEGIN
                                                                MiniformHeader.SETFILTER(Code,'<>%1',Code);
                                                                MiniformHeader.SETRANGE("Start Miniform",true);
                                                                if not MiniformHeader.ISEMPTY then
                                                                  ERROR(Text002);
                                                              END;

                                                   CaptionML=ENU=Start Miniform }
    { 20  ;   ;Handling Codeunit   ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE ("Object Type"=CONST(Codeunit));
                                                   CaptionML=ENU=Handling Codeunit }
    { 21  ;   ;Next Miniform       ;Code20        ;TableRelation="Miniform Header";
                                                   OnValidate=BEGIN
                                                                if "Next Miniform" = Code then
                                                                  ERROR(Text000);

                                                                if "Form Type" in ["Form Type"::"Selection List","Form Type"::"Data List Input"] then
                                                                  ERROR(Text001,FIELDCAPTION("Form Type"),"Form Type");
                                                              END;

                                                   CaptionML=ENU=Next Miniform }
    { 25  ;   ;XMLin               ;BLOB          ;CaptionML=ENU=XMLin }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1001 : TextConst 'ENU=Recursion is not allowed.';
      Text001@1000 : TextConst 'ENU=%1 must not be %2.';
      Text002@1002 : TextConst 'ENU=There can only be one login form.';

    [External]
    PROCEDURE SaveXMLin@1(DOMxmlin@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      InStrm@1000 : InStream;
    BEGIN
      XMLin.CREATEINSTREAM(InStrm);
      DOMxmlin.Save(InStrm);
    END;

    [External]
    PROCEDURE LoadXMLin@2(VAR DOMxmlin@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument");
    VAR
      XMLDOMManagement@1002 : Codeunit "XML DOM Management";
      OutStrm@1000 : OutStream;
    BEGIN
      XMLin.CREATEOUTSTREAM(OutStrm);
      XMLDOMManagement.LoadXMLDocumentFromOutStream(OutStrm,DOMxmlin);
    END;

    BEGIN
    END.
  }
}

