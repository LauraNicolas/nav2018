OBJECT Table 751 Standard General Journal Line
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRename=BEGIN
               ERROR(Text001,TABLECAPTION);
             END;

    CaptionML=ENU=Standard General Journal Line;
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="Gen. Journal Template";
                                                   CaptionML=ENU=Journal Template Name;
                                                   NotBlank=true;
                                                   Editable=false }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No.;
                                                   NotBlank=true;
                                                   Editable=false }
    { 3   ;   ;Account Type        ;Option        ;OnValidate=BEGIN
                                                                if ("Account Type" in ["Account Type"::Customer,"Account Type"::Vendor,"Account Type"::"Fixed Asset",
                                                                                       "Account Type"::"IC Partner"]) and
                                                                   ("Bal. Account Type" in ["Bal. Account Type"::Customer,"Bal. Account Type"::Vendor,"Bal. Account Type"::"Fixed Asset",
                                                                                            "Bal. Account Type"::"IC Partner"])
                                                                then
                                                                  ERROR(
                                                                    Text000,
                                                                    FIELDCAPTION("Account Type"),FIELDCAPTION("Bal. Account Type"));

                                                                VALIDATE("Account No.",'');
                                                                VALIDATE("IC Partner G/L Acc. No.",'');

                                                                if "Account Type" in ["Account Type"::Customer,"Account Type"::Vendor,"Account Type"::"Bank Account"] then begin
                                                                  VALIDATE("Gen. Posting Type","Gen. Posting Type"::" ");
                                                                  VALIDATE("Gen. Bus. Posting Group",'');
                                                                  VALIDATE("Gen. Prod. Posting Group",'');
                                                                end else
                                                                  if "Bal. Account Type" in [
                                                                                             "Bal. Account Type"::"G/L Account","Account Type"::"Bank Account","Bal. Account Type"::"Fixed Asset"]
                                                                  then
                                                                    VALIDATE("Payment Terms Code",'');
                                                                UpdateSource;

                                                                if xRec."Account Type" in
                                                                   [xRec."Account Type"::Customer,xRec."Account Type"::Vendor]
                                                                then begin
                                                                  "Bill-to/Pay-to No." := '';
                                                                  "Ship-to/Order Address Code" := '';
                                                                  "Sell-to/Buy-from No." := '';
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Account Type;
                                                   OptionCaptionML=ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner,Employee;
                                                   OptionString="G/L Account",Customer,Vendor,"Bank Account","Fixed Asset","IC Partner",Employee }
    { 4   ;   ;Account No.         ;Code20        ;TableRelation=IF ("Account Type"=CONST("G/L Account")) "G/L Account"
                                                                 ELSE IF ("Account Type"=CONST(Customer)) Customer
                                                                 ELSE IF ("Account Type"=CONST(Vendor)) Vendor
                                                                 ELSE IF ("Account Type"=CONST("Bank Account")) "Bank Account"
                                                                 ELSE IF ("Account Type"=CONST("Fixed Asset")) "Fixed Asset"
                                                                 ELSE IF ("Account Type"=CONST("IC Partner")) "IC Partner";
                                                   OnValidate=BEGIN
                                                                if xRec."Account Type" in ["Account Type"::Customer,"Account Type"::Vendor,"Account Type"::"IC Partner"] then
                                                                  "IC Partner Code" := '';

                                                                if "Account No." = '' then begin
                                                                  UpdateLineBalance;
                                                                  UpdateSource;
                                                                  CreateDim(
                                                                    DimMgt.TypeToTableID1("Account Type"),"Account No.",
                                                                    DimMgt.TypeToTableID1("Bal. Account Type"),"Bal. Account No.",
                                                                    DATABASE::Job,"Job No.",
                                                                    DATABASE::"Salesperson/Purchaser","Salespers./Purch. Code",
                                                                    DATABASE::Campaign,"Campaign No.");
                                                                  if xRec."Account No." <> '' then begin
                                                                    "Gen. Posting Type" := "Gen. Posting Type"::" ";
                                                                    "Gen. Bus. Posting Group" := '';
                                                                    "Gen. Prod. Posting Group" := '';
                                                                    "VAT Bus. Posting Group" := '';
                                                                    "VAT Prod. Posting Group" := '';
                                                                    "Tax Area Code" := '';
                                                                    "Tax Liable" := false;
                                                                    "Tax Group Code" := '';
                                                                  end;
                                                                  exit;
                                                                end;

                                                                case "Account Type" of
                                                                  "Account Type"::"G/L Account":
                                                                    GetGLAccount;
                                                                  "Account Type"::Customer:
                                                                    GetCustomerAccount;
                                                                  "Account Type"::Vendor:
                                                                    GetVendorAccount;
                                                                  "Account Type"::"Bank Account":
                                                                    GetBankAccount;
                                                                  "Account Type"::"Fixed Asset":
                                                                    GetFAAccount;
                                                                  "Account Type"::"IC Partner":
                                                                    GetICPartnerAccount;
                                                                end;

                                                                VALIDATE("Currency Code");
                                                                VALIDATE("VAT Prod. Posting Group");
                                                                UpdateLineBalance;
                                                                UpdateSource;
                                                                CreateDim(
                                                                  DimMgt.TypeToTableID1("Account Type"),"Account No.",
                                                                  DimMgt.TypeToTableID1("Bal. Account Type"),"Bal. Account No.",
                                                                  DATABASE::Job,"Job No.",
                                                                  DATABASE::"Salesperson/Purchaser","Salespers./Purch. Code",
                                                                  DATABASE::Campaign,"Campaign No.");

                                                                VALIDATE("IC Partner G/L Acc. No.",GetDefaultICPartnerGLAccNo);
                                                              END;

                                                   CaptionML=ENU=Account No. }
    { 6   ;   ;Document Type       ;Option        ;OnValidate=BEGIN
                                                                VALIDATE("Payment Terms Code");
                                                                if "Account No." <> '' then
                                                                  CheckAccount("Account Type","Account No.");
                                                                if "Bal. Account No." <> '' then
                                                                  CheckAccount("Bal. Account Type","Bal. Account No.");
                                                              END;

                                                   CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=" ",Payment,Invoice,"Credit Memo","Finance Charge Memo",Reminder,Refund }
    { 8   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 10  ;   ;VAT %               ;Decimal       ;OnValidate=BEGIN
                                                                GetCurrency;
                                                                case "VAT Calculation Type" of
                                                                  "VAT Calculation Type"::"Normal VAT",
                                                                  "VAT Calculation Type"::"Reverse Charge VAT":
                                                                    "VAT Amount" :=
                                                                      ROUND(
                                                                        Amount * "VAT %" / (100 + "VAT %"),
                                                                        Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
                                                                  "VAT Calculation Type"::"Full VAT":
                                                                    "VAT Amount" := Amount;
                                                                  "VAT Calculation Type"::"Sales Tax":
                                                                    if ("Gen. Posting Type" = "Gen. Posting Type"::Purchase) and
                                                                       "Use Tax"
                                                                    then begin
                                                                      "VAT Amount" := 0;
                                                                      "VAT %" := 0;
                                                                    end else begin
                                                                      "VAT Amount" :=
                                                                        Amount -
                                                                        SalesTaxCalculate.ReverseCalculateTax(
                                                                          "Tax Area Code","Tax Group Code","Tax Liable",
                                                                          WORKDATE,Amount,Quantity,"Currency Factor");
                                                                      if Amount - "VAT Amount" <> 0 then
                                                                        "VAT %" := ROUND(100 * "VAT Amount" / (Amount - "VAT Amount"),0.00001)
                                                                      else
                                                                        "VAT %" := 0;
                                                                      "VAT Amount" :=
                                                                        ROUND("VAT Amount",Currency."Amount Rounding Precision");
                                                                    end;
                                                                end;
                                                                "VAT Base Amount" := Amount - "VAT Amount";
                                                                "VAT Difference" := 0;
                                                              END;

                                                   CaptionML=ENU=VAT %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=false }
    { 11  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF ("Bal. Account Type"=CONST("G/L Account")) "G/L Account"
                                                                 ELSE IF ("Bal. Account Type"=CONST(Customer)) Customer
                                                                 ELSE IF ("Bal. Account Type"=CONST(Vendor)) Vendor
                                                                 ELSE IF ("Bal. Account Type"=CONST("Bank Account")) "Bank Account"
                                                                 ELSE IF ("Bal. Account Type"=CONST("Fixed Asset")) "Fixed Asset"
                                                                 ELSE IF ("Bal. Account Type"=CONST("IC Partner")) "IC Partner";
                                                   OnValidate=BEGIN
                                                                if xRec."Bal. Account Type" in ["Bal. Account Type"::Customer,"Bal. Account Type"::Vendor,
                                                                                                "Bal. Account Type"::"IC Partner"]
                                                                then
                                                                  "IC Partner Code" := '';

                                                                if "Bal. Account No." = '' then begin
                                                                  UpdateLineBalance;
                                                                  UpdateSource;
                                                                  CreateDim(
                                                                    DimMgt.TypeToTableID1("Bal. Account Type"),"Bal. Account No.",
                                                                    DimMgt.TypeToTableID1("Account Type"),"Account No.",
                                                                    DATABASE::Job,"Job No.",
                                                                    DATABASE::"Salesperson/Purchaser","Salespers./Purch. Code",
                                                                    DATABASE::Campaign,"Campaign No.");
                                                                  if xRec."Bal. Account No." <> '' then begin
                                                                    "Bal. Gen. Posting Type" := "Bal. Gen. Posting Type"::" ";
                                                                    "Bal. Gen. Bus. Posting Group" := '';
                                                                    "Bal. Gen. Prod. Posting Group" := '';
                                                                    "Bal. VAT Bus. Posting Group" := '';
                                                                    "Bal. VAT Prod. Posting Group" := '';
                                                                    "Bal. Tax Area Code" := '';
                                                                    "Bal. Tax Liable" := false;
                                                                    "Bal. Tax Group Code" := '';
                                                                  end;
                                                                  exit;
                                                                end;

                                                                case "Bal. Account Type" of
                                                                  "Bal. Account Type"::"G/L Account":
                                                                    GetGLBalAccount;
                                                                  "Bal. Account Type"::Customer:
                                                                    GetCustomerBalAccount;
                                                                  "Bal. Account Type"::Vendor:
                                                                    GetVendorBalAccount;
                                                                  "Bal. Account Type"::"Bank Account":
                                                                    GetBankBalAccount;
                                                                  "Bal. Account Type"::"Fixed Asset":
                                                                    GetFABalAccount;
                                                                  "Bal. Account Type"::"IC Partner":
                                                                    GetICPartnerBalAccount;
                                                                end;

                                                                VALIDATE("Currency Code");
                                                                VALIDATE("Bal. VAT Prod. Posting Group");
                                                                UpdateLineBalance;
                                                                UpdateSource;
                                                                CreateDim(
                                                                  DimMgt.TypeToTableID1("Bal. Account Type"),"Bal. Account No.",
                                                                  DimMgt.TypeToTableID1("Account Type"),"Account No.",
                                                                  DATABASE::Job,"Job No.",
                                                                  DATABASE::"Salesperson/Purchaser","Salespers./Purch. Code",
                                                                  DATABASE::Campaign,"Campaign No.");

                                                                VALIDATE("IC Partner G/L Acc. No.",GetDefaultICPartnerGLAccNo);
                                                              END;

                                                   CaptionML=ENU=Bal. Account No. }
    { 12  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=VAR
                                                                BankAcc@1000 : Record "Bank Account";
                                                              BEGIN
                                                                if "Bal. Account Type" = "Bal. Account Type"::"Bank Account" then begin
                                                                  if BankAcc.GET("Bal. Account No.") and (BankAcc."Currency Code" <> '')then
                                                                    BankAcc.TESTFIELD("Currency Code","Currency Code");
                                                                end;
                                                                if "Account Type" = "Account Type"::"Bank Account" then begin
                                                                  if BankAcc.GET("Account No.") and (BankAcc."Currency Code" <> '') then
                                                                    BankAcc.TESTFIELD("Currency Code","Currency Code");
                                                                end;

                                                                if "Currency Code" <> '' then begin
                                                                  GetCurrency;
                                                                  if ("Currency Code" <> xRec."Currency Code") or
                                                                     (CurrFieldNo = FIELDNO("Currency Code")) or
                                                                     ("Currency Factor" = 0)
                                                                  then
                                                                    "Currency Factor" :=
                                                                      CurrExchRate.ExchangeRate(WORKDATE,"Currency Code");
                                                                end else
                                                                  "Currency Factor" := 0;
                                                                VALIDATE("Currency Factor");
                                                              END;

                                                   CaptionML=ENU=Currency Code }
    { 13  ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                GetCurrency;
                                                                if "Currency Code" = '' then
                                                                  "Amount (LCY)" := Amount
                                                                else
                                                                  "Amount (LCY)" := ROUND(
                                                                      CurrExchRate.ExchangeAmtFCYToLCY(
                                                                        WORKDATE,"Currency Code",
                                                                        Amount,"Currency Factor"));

                                                                Amount := ROUND(Amount,Currency."Amount Rounding Precision");

                                                                VALIDATE("VAT %");
                                                                VALIDATE("Bal. VAT %");
                                                                UpdateLineBalance;
                                                              END;

                                                   CaptionML=ENU=Amount;
                                                   AutoFormatType=1 }
    { 14  ;   ;Debit Amount        ;Decimal       ;OnValidate=BEGIN
                                                                GetCurrency;
                                                                "Debit Amount" := ROUND("Debit Amount",Currency."Amount Rounding Precision");
                                                                Correction := "Debit Amount" < 0;
                                                                Amount := "Debit Amount";
                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=ENU=Debit Amount;
                                                   BlankZero=true;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 15  ;   ;Credit Amount       ;Decimal       ;OnValidate=BEGIN
                                                                GetCurrency;
                                                                "Credit Amount" := ROUND("Credit Amount",Currency."Amount Rounding Precision");
                                                                Correction := "Credit Amount" < 0;
                                                                Amount := -"Credit Amount";
                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=ENU=Credit Amount;
                                                   BlankZero=true;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 16  ;   ;Amount (LCY)        ;Decimal       ;OnValidate=BEGIN
                                                                if "Currency Code" = '' then begin
                                                                  Amount := "Amount (LCY)";
                                                                  VALIDATE(Amount);
                                                                end
                                                              END;

                                                   CaptionML=ENU=Amount (LCY);
                                                   AutoFormatType=1 }
    { 17  ;   ;Balance (LCY)       ;Decimal       ;CaptionML=ENU=Balance (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 18  ;   ;Currency Factor     ;Decimal       ;OnValidate=BEGIN
                                                                if ("Currency Code" = '') and ("Currency Factor" <> 0) then
                                                                  FIELDERROR("Currency Factor",STRSUBSTNO(Text002,FIELDCAPTION("Currency Code")));
                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=ENU=Currency Factor;
                                                   DecimalPlaces=0:15;
                                                   MinValue=0;
                                                   Editable=false }
    { 19  ;   ;Sales/Purch. (LCY)  ;Decimal       ;CaptionML=ENU=Sales/Purch. (LCY);
                                                   AutoFormatType=1 }
    { 20  ;   ;Profit (LCY)        ;Decimal       ;CaptionML=ENU=Profit (LCY);
                                                   AutoFormatType=1 }
    { 21  ;   ;Inv. Discount (LCY) ;Decimal       ;CaptionML=ENU=Inv. Discount (LCY);
                                                   AutoFormatType=1 }
    { 22  ;   ;Bill-to/Pay-to No.  ;Code20        ;TableRelation=IF ("Account Type"=CONST(Customer)) Customer
                                                                 ELSE IF ("Bal. Account Type"=CONST(Customer)) Customer
                                                                 ELSE IF ("Account Type"=CONST(Vendor)) Vendor
                                                                 ELSE IF ("Bal. Account Type"=CONST(Vendor)) Vendor;
                                                   OnValidate=BEGIN
                                                                if "Bill-to/Pay-to No." <> xRec."Bill-to/Pay-to No." then
                                                                  "Ship-to/Order Address Code" := '';
                                                              END;

                                                   CaptionML=ENU=Bill-to/Pay-to No. }
    { 23  ;   ;Posting Group       ;Code20        ;TableRelation=IF ("Account Type"=CONST(Customer)) "Customer Posting Group"
                                                                 ELSE IF ("Account Type"=CONST(Vendor)) "Vendor Posting Group"
                                                                 ELSE IF ("Account Type"=CONST("Fixed Asset")) "FA Posting Group";
                                                   CaptionML=ENU=Posting Group;
                                                   Editable=false }
    { 24  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 25  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 26  ;   ;Salespers./Purch. Code;Code20      ;TableRelation="Salesperson/Purchaser";
                                                   OnValidate=BEGIN
                                                                CreateDim(
                                                                  DATABASE::"Salesperson/Purchaser","Salespers./Purch. Code",
                                                                  DimMgt.TypeToTableID1("Account Type"),"Account No.",
                                                                  DimMgt.TypeToTableID1("Bal. Account Type"),"Bal. Account No.",
                                                                  DATABASE::Job,"Job No.",
                                                                  DATABASE::Campaign,"Campaign No.");
                                                              END;

                                                   CaptionML=ENU=Salespers./Purch. Code }
    { 29  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code;
                                                   Editable=false }
    { 34  ;   ;On Hold             ;Code3         ;CaptionML=ENU=On Hold }
    { 35  ;   ;Applies-to Doc. Type;Option        ;CaptionML=ENU=Applies-to Doc. Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=" ",Payment,Invoice,"Credit Memo","Finance Charge Memo",Reminder,Refund }
    { 40  ;   ;Payment Discount %  ;Decimal       ;CaptionML=ENU=Payment Discount %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 42  ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   OnValidate=BEGIN
                                                                CreateDim(
                                                                  DATABASE::Job,"Job No.",
                                                                  DimMgt.TypeToTableID1("Account Type"),"Account No.",
                                                                  DimMgt.TypeToTableID1("Bal. Account Type"),"Bal. Account No.",
                                                                  DATABASE::"Salesperson/Purchaser","Salespers./Purch. Code",
                                                                  DATABASE::Campaign,"Campaign No.");
                                                              END;

                                                   CaptionML=ENU=Job No.;
                                                   Editable=false }
    { 43  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=ENU=Quantity;
                                                   DecimalPlaces=0:5 }
    { 44  ;   ;VAT Amount          ;Decimal       ;OnValidate=BEGIN
                                                                if not ("VAT Calculation Type" in
                                                                        ["VAT Calculation Type"::"Normal VAT","VAT Calculation Type"::"Reverse Charge VAT"])
                                                                then
                                                                  ERROR(
                                                                    Text010,FIELDCAPTION("VAT Calculation Type"),
                                                                    "VAT Calculation Type"::"Normal VAT","VAT Calculation Type"::"Reverse Charge VAT");
                                                                if "VAT Amount" <> 0 then begin
                                                                  TESTFIELD("VAT %");
                                                                  TESTFIELD(Amount);
                                                                end;

                                                                GetCurrency;
                                                                "VAT Amount" := ROUND("VAT Amount",Currency."Amount Rounding Precision",Currency.VATRoundingDirection);

                                                                if "VAT Amount" * Amount < 0 then
                                                                  if "VAT Amount" > 0 then
                                                                    ERROR(Text011,FIELDCAPTION("VAT Amount"))
                                                                  else
                                                                    ERROR(Text012,FIELDCAPTION("VAT Amount"));

                                                                "VAT Base Amount" := Amount - "VAT Amount";

                                                                "VAT Difference" :=
                                                                  "VAT Amount" -
                                                                  ROUND(
                                                                    Amount * "VAT %" / (100 + "VAT %"),
                                                                    Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
                                                                if ABS("VAT Difference") > Currency."Max. VAT Difference Allowed" then
                                                                  ERROR(Text013,FIELDCAPTION("VAT Difference"),Currency."Max. VAT Difference Allowed");
                                                              END;

                                                   CaptionML=ENU=VAT Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 47  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   OnValidate=VAR
                                                                PaymentTerms@1000 : Record "Payment Terms";
                                                              BEGIN
                                                                "Payment Discount %" := 0;
                                                                if ("Account Type" <> "Account Type"::"G/L Account") or
                                                                   ("Bal. Account Type" <> "Bal. Account Type"::"G/L Account")
                                                                then
                                                                  case "Document Type" of
                                                                    "Document Type"::Invoice:
                                                                      if "Payment Terms Code" <> '' then begin
                                                                        PaymentTerms.GET("Payment Terms Code");
                                                                        "Payment Discount %" := PaymentTerms."Discount %";
                                                                      end;
                                                                    "Document Type"::"Credit Memo":
                                                                      if "Payment Terms Code" <> '' then begin
                                                                        PaymentTerms.GET("Payment Terms Code");
                                                                        if PaymentTerms."Calc. Pmt. Disc. on Cr. Memos" then
                                                                          "Payment Discount %" := PaymentTerms."Discount %";
                                                                      end;
                                                                  end;
                                                              END;

                                                   CaptionML=ENU=Payment Terms Code }
    { 50  ;   ;Business Unit Code  ;Code20        ;TableRelation="Business Unit";
                                                   CaptionML=ENU=Business Unit Code }
    { 51  ;   ;Standard Journal Code;Code10       ;TableRelation="Standard General Journal".Code;
                                                   CaptionML=ENU=Standard Journal Code }
    { 52  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code }
    { 57  ;   ;Gen. Posting Type   ;Option        ;OnValidate=BEGIN
                                                                if "Account Type" in ["Account Type"::Customer,"Account Type"::Vendor,"Account Type"::"Bank Account"] then
                                                                  TESTFIELD("Gen. Posting Type","Gen. Posting Type"::" ");
                                                                if ("Gen. Posting Type" = "Gen. Posting Type"::Settlement) and (CurrFieldNo <> 0) then
                                                                  ERROR(Text006,"Gen. Posting Type");
                                                                if "Gen. Posting Type" > 0 then
                                                                  VALIDATE("VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Gen. Posting Type;
                                                   OptionCaptionML=ENU=" ,Purchase,Sale,Settlement";
                                                   OptionString=" ",Purchase,Sale,Settlement }
    { 58  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   OnValidate=VAR
                                                                GenBusPostingGrp@1000 : Record "Gen. Business Posting Group";
                                                              BEGIN
                                                                if "Account Type" in ["Account Type"::Customer,"Account Type"::Vendor,"Account Type"::"Bank Account"] then
                                                                  TESTFIELD("Gen. Bus. Posting Group",'');
                                                                if xRec."Gen. Bus. Posting Group" <> "Gen. Bus. Posting Group" then
                                                                  if GenBusPostingGrp.ValidateVatBusPostingGroup(GenBusPostingGrp,"Gen. Bus. Posting Group") then
                                                                    VALIDATE("VAT Bus. Posting Group",GenBusPostingGrp."Def. VAT Bus. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 59  ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   OnValidate=VAR
                                                                GenProdPostingGrp@1000 : Record "Gen. Product Posting Group";
                                                              BEGIN
                                                                if "Account Type" in ["Account Type"::Customer,"Account Type"::Vendor,"Account Type"::"Bank Account"] then
                                                                  TESTFIELD("Gen. Prod. Posting Group",'');
                                                                if xRec."Gen. Prod. Posting Group" <> "Gen. Prod. Posting Group" then
                                                                  if GenProdPostingGrp.ValidateVatProdPostingGroup(GenProdPostingGrp,"Gen. Prod. Posting Group") then
                                                                    VALIDATE("VAT Prod. Posting Group",GenProdPostingGrp."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Gen. Prod. Posting Group }
    { 60  ;   ;VAT Calculation Type;Option        ;CaptionML=ENU=VAT Calculation Type;
                                                   OptionCaptionML=ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   OptionString="Normal VAT","Reverse Charge VAT","Full VAT","Sales Tax";
                                                   Editable=false }
    { 63  ;   ;Bal. Account Type   ;Option        ;OnValidate=BEGIN
                                                                if ("Account Type" in ["Account Type"::Customer,"Account Type"::Vendor,"Account Type"::"Fixed Asset",
                                                                                       "Account Type"::"IC Partner"]) and
                                                                   ("Bal. Account Type" in ["Bal. Account Type"::Customer,"Bal. Account Type"::Vendor,"Bal. Account Type"::"Fixed Asset",
                                                                                            "Bal. Account Type"::"IC Partner"])
                                                                then
                                                                  ERROR(
                                                                    Text000,
                                                                    FIELDCAPTION("Account Type"),FIELDCAPTION("Bal. Account Type"));

                                                                VALIDATE("Bal. Account No.",'');
                                                                if "Bal. Account Type" in
                                                                   ["Bal. Account Type"::Customer,"Bal. Account Type"::Vendor,"Bal. Account Type"::"Bank Account"]
                                                                then begin
                                                                  VALIDATE("Bal. Gen. Posting Type","Bal. Gen. Posting Type"::" ");
                                                                  VALIDATE("Bal. Gen. Bus. Posting Group",'');
                                                                  VALIDATE("Bal. Gen. Prod. Posting Group",'');
                                                                end else
                                                                  if "Account Type" in [
                                                                                        "Bal. Account Type"::"G/L Account","Account Type"::"Bank Account","Account Type"::"Fixed Asset"]
                                                                  then
                                                                    VALIDATE("Payment Terms Code",'');
                                                                UpdateSource;

                                                                if xRec."Bal. Account Type" in
                                                                   [xRec."Bal. Account Type"::Customer,xRec."Bal. Account Type"::Vendor]
                                                                then begin
                                                                  "Bill-to/Pay-to No." := '';
                                                                  "Ship-to/Order Address Code" := '';
                                                                  "Sell-to/Buy-from No." := '';
                                                                end;
                                                                if ("Account Type" in [
                                                                                       "Account Type"::"G/L Account","Account Type"::"Bank Account","Account Type"::"Fixed Asset"]) and
                                                                   ("Bal. Account Type" in [
                                                                                            "Bal. Account Type"::"G/L Account","Bal. Account Type"::"Bank Account","Bal. Account Type"::"Fixed Asset"])
                                                                then
                                                                  VALIDATE("Payment Terms Code",'');
                                                              END;

                                                   CaptionML=ENU=Bal. Account Type;
                                                   OptionCaptionML=ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner,Employee;
                                                   OptionString="G/L Account",Customer,Vendor,"Bank Account","Fixed Asset","IC Partner",Employee }
    { 64  ;   ;Bal. Gen. Posting Type;Option      ;OnValidate=BEGIN
                                                                if "Bal. Account Type" in ["Bal. Account Type"::Customer,"Bal. Account Type"::Vendor,"Bal. Account Type"::"Bank Account"] then
                                                                  TESTFIELD("Bal. Gen. Posting Type","Bal. Gen. Posting Type"::" ");
                                                                if ("Bal. Gen. Posting Type" = "Gen. Posting Type"::Settlement) and (CurrFieldNo <> 0) then
                                                                  ERROR(Text006,"Bal. Gen. Posting Type");
                                                                if "Bal. Gen. Posting Type" > 0 then
                                                                  VALIDATE("Bal. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Bal. Gen. Posting Type;
                                                   OptionCaptionML=ENU=" ,Purchase,Sale,Settlement";
                                                   OptionString=" ",Purchase,Sale,Settlement }
    { 65  ;   ;Bal. Gen. Bus. Posting Group;Code20;TableRelation="Gen. Business Posting Group";
                                                   OnValidate=VAR
                                                                GenBusPostingGrp@1000 : Record "Gen. Business Posting Group";
                                                              BEGIN
                                                                if "Bal. Account Type" in ["Bal. Account Type"::Customer,"Bal. Account Type"::Vendor,"Bal. Account Type"::"Bank Account"] then
                                                                  TESTFIELD("Bal. Gen. Bus. Posting Group",'');
                                                                if xRec."Bal. Gen. Bus. Posting Group" <> "Bal. Gen. Bus. Posting Group" then
                                                                  if GenBusPostingGrp.ValidateVatBusPostingGroup(GenBusPostingGrp,"Bal. Gen. Bus. Posting Group") then
                                                                    VALIDATE("Bal. VAT Bus. Posting Group",GenBusPostingGrp."Def. VAT Bus. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Bal. Gen. Bus. Posting Group }
    { 66  ;   ;Bal. Gen. Prod. Posting Group;Code20;
                                                   TableRelation="Gen. Product Posting Group";
                                                   OnValidate=VAR
                                                                GenProdPostingGrp@1000 : Record "Gen. Product Posting Group";
                                                              BEGIN
                                                                if "Bal. Account Type" in ["Bal. Account Type"::Customer,"Bal. Account Type"::Vendor,"Bal. Account Type"::"Bank Account"] then
                                                                  TESTFIELD("Bal. Gen. Prod. Posting Group",'');
                                                                if xRec."Bal. Gen. Prod. Posting Group" <> "Bal. Gen. Prod. Posting Group" then
                                                                  if GenProdPostingGrp.ValidateVatProdPostingGroup(GenProdPostingGrp,"Bal. Gen. Prod. Posting Group") then
                                                                    VALIDATE("Bal. VAT Prod. Posting Group",GenProdPostingGrp."Def. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Bal. Gen. Prod. Posting Group }
    { 67  ;   ;Bal. VAT Calculation Type;Option   ;CaptionML=ENU=Bal. VAT Calculation Type;
                                                   OptionCaptionML=ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   OptionString="Normal VAT","Reverse Charge VAT","Full VAT","Sales Tax";
                                                   Editable=false }
    { 68  ;   ;Bal. VAT %          ;Decimal       ;OnValidate=BEGIN
                                                                GetCurrency;
                                                                case "Bal. VAT Calculation Type" of
                                                                  "Bal. VAT Calculation Type"::"Normal VAT",
                                                                  "Bal. VAT Calculation Type"::"Reverse Charge VAT":
                                                                    "Bal. VAT Amount" :=
                                                                      ROUND(
                                                                        -Amount * "Bal. VAT %" / (100 + "Bal. VAT %"),
                                                                        Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
                                                                  "Bal. VAT Calculation Type"::"Full VAT":
                                                                    "Bal. VAT Amount" := -Amount;
                                                                  "Bal. VAT Calculation Type"::"Sales Tax":
                                                                    if ("Bal. Gen. Posting Type" = "Bal. Gen. Posting Type"::Purchase) and
                                                                       "Bal. Use Tax"
                                                                    then begin
                                                                      "Bal. VAT Amount" := 0;
                                                                      "Bal. VAT %" := 0;
                                                                    end else begin
                                                                      "Bal. VAT Amount" :=
                                                                        -(Amount -
                                                                          SalesTaxCalculate.ReverseCalculateTax(
                                                                            "Bal. Tax Area Code","Bal. Tax Group Code","Bal. Tax Liable",
                                                                            WORKDATE,Amount,Quantity,"Currency Factor"));
                                                                      if Amount + "Bal. VAT Amount" <> 0 then
                                                                        "Bal. VAT %" := ROUND(100 * -"Bal. VAT Amount" / (Amount + "Bal. VAT Amount"),0.00001)
                                                                      else
                                                                        "Bal. VAT %" := 0;
                                                                      "Bal. VAT Amount" :=
                                                                        ROUND("Bal. VAT Amount",Currency."Amount Rounding Precision");
                                                                    end;
                                                                end;
                                                                "Bal. VAT Base Amount" := -(Amount + "Bal. VAT Amount");
                                                                "Bal. VAT Difference" := 0;
                                                              END;

                                                   CaptionML=ENU=Bal. VAT %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=false }
    { 69  ;   ;Bal. VAT Amount     ;Decimal       ;OnValidate=BEGIN
                                                                if not ("Bal. VAT Calculation Type" in
                                                                        ["Bal. VAT Calculation Type"::"Normal VAT","Bal. VAT Calculation Type"::"Reverse Charge VAT"])
                                                                then
                                                                  ERROR(
                                                                    Text010,FIELDCAPTION("Bal. VAT Calculation Type"),
                                                                    "Bal. VAT Calculation Type"::"Normal VAT","Bal. VAT Calculation Type"::"Reverse Charge VAT");
                                                                if "Bal. VAT Amount" <> 0 then begin
                                                                  TESTFIELD("Bal. VAT %");
                                                                  TESTFIELD(Amount);
                                                                end;

                                                                GetCurrency;
                                                                "Bal. VAT Amount" :=
                                                                  ROUND("Bal. VAT Amount",Currency."Amount Rounding Precision",Currency.VATRoundingDirection);

                                                                if "Bal. VAT Amount" * Amount > 0 then
                                                                  if "Bal. VAT Amount" > 0 then
                                                                    ERROR(Text011,FIELDCAPTION("Bal. VAT Amount"))
                                                                  else
                                                                    ERROR(Text012,FIELDCAPTION("Bal. VAT Amount"));

                                                                "Bal. VAT Base Amount" := -(Amount + "Bal. VAT Amount");

                                                                "Bal. VAT Difference" :=
                                                                  "Bal. VAT Amount" -
                                                                  ROUND(
                                                                    -Amount * "Bal. VAT %" / (100 + "Bal. VAT %"),
                                                                    Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
                                                                if ABS("Bal. VAT Difference") > Currency."Max. VAT Difference Allowed" then
                                                                  ERROR(
                                                                    Text013,FIELDCAPTION("Bal. VAT Difference"),Currency."Max. VAT Difference Allowed");
                                                              END;

                                                   CaptionML=ENU=Bal. VAT Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 70  ;   ;Bank Payment Type   ;Option        ;OnValidate=BEGIN
                                                                if ("Bank Payment Type" <> "Bank Payment Type"::" ") and
                                                                   ("Account Type" <> "Account Type"::"Bank Account") and
                                                                   ("Bal. Account Type" <> "Bal. Account Type"::"Bank Account")
                                                                then
                                                                  ERROR(
                                                                    Text007,
                                                                    FIELDCAPTION("Account Type"),FIELDCAPTION("Bal. Account Type"));
                                                                if ("Account Type" = "Account Type"::"Fixed Asset") and
                                                                   ("Bank Payment Type" <> "Bank Payment Type"::" ")
                                                                then
                                                                  FIELDERROR("Account Type");
                                                              END;

                                                   CaptionML=ENU=Bank Payment Type;
                                                   OptionCaptionML=ENU=" ,Computer Check,Manual Check";
                                                   OptionString=" ","Computer Check","Manual Check" }
    { 71  ;   ;VAT Base Amount     ;Decimal       ;OnValidate=BEGIN
                                                                GetCurrency;
                                                                "VAT Base Amount" := ROUND("VAT Base Amount",Currency."Amount Rounding Precision");
                                                                case "VAT Calculation Type" of
                                                                  "VAT Calculation Type"::"Normal VAT",
                                                                  "VAT Calculation Type"::"Reverse Charge VAT":
                                                                    Amount :=
                                                                      ROUND(
                                                                        "VAT Base Amount" * (1 + "VAT %" / 100),
                                                                        Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
                                                                  "VAT Calculation Type"::"Full VAT":
                                                                    if "VAT Base Amount" <> 0 then
                                                                      FIELDERROR(
                                                                        "VAT Base Amount",
                                                                        STRSUBSTNO(
                                                                          Text008,FIELDCAPTION("VAT Calculation Type"),
                                                                          "VAT Calculation Type"));
                                                                  "VAT Calculation Type"::"Sales Tax":
                                                                    if ("Gen. Posting Type" = "Gen. Posting Type"::Purchase) and
                                                                       "Use Tax"
                                                                    then begin
                                                                      "VAT Amount" := 0;
                                                                      "VAT %" := 0;
                                                                      Amount := "VAT Base Amount" + "VAT Amount";
                                                                    end else begin
                                                                      "VAT Amount" :=
                                                                        SalesTaxCalculate.CalculateTax(
                                                                          "Tax Area Code","Tax Group Code","Tax Liable",WORKDATE,
                                                                          "VAT Base Amount",Quantity,"Currency Factor");
                                                                      if "VAT Base Amount" <> 0 then
                                                                        "VAT %" := ROUND(100 * "VAT Amount" / "VAT Base Amount",0.00001)
                                                                      else
                                                                        "VAT %" := 0;
                                                                      "VAT Amount" :=
                                                                        ROUND("VAT Amount",Currency."Amount Rounding Precision");
                                                                      Amount := "VAT Base Amount" + "VAT Amount";
                                                                    end;
                                                                end;
                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=ENU=VAT Base Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 72  ;   ;Bal. VAT Base Amount;Decimal       ;OnValidate=BEGIN
                                                                GetCurrency;
                                                                "Bal. VAT Base Amount" := ROUND("Bal. VAT Base Amount",Currency."Amount Rounding Precision");
                                                                case "Bal. VAT Calculation Type" of
                                                                  "Bal. VAT Calculation Type"::"Normal VAT",
                                                                  "Bal. VAT Calculation Type"::"Reverse Charge VAT":
                                                                    Amount :=
                                                                      ROUND(
                                                                        -"Bal. VAT Base Amount" * (1 + "Bal. VAT %" / 100),
                                                                        Currency."Amount Rounding Precision",Currency.VATRoundingDirection);
                                                                  "Bal. VAT Calculation Type"::"Full VAT":
                                                                    if "Bal. VAT Base Amount" <> 0 then
                                                                      FIELDERROR(
                                                                        "Bal. VAT Base Amount",
                                                                        STRSUBSTNO(
                                                                          Text008,FIELDCAPTION("Bal. VAT Calculation Type"),
                                                                          "Bal. VAT Calculation Type"));
                                                                  "Bal. VAT Calculation Type"::"Sales Tax":
                                                                    if ("Bal. Gen. Posting Type" = "Bal. Gen. Posting Type"::Purchase) and
                                                                       "Bal. Use Tax"
                                                                    then begin
                                                                      "Bal. VAT Amount" := 0;
                                                                      "Bal. VAT %" := 0;
                                                                      Amount := -"Bal. VAT Base Amount" - "Bal. VAT Amount";
                                                                    end else begin
                                                                      "Bal. VAT Amount" :=
                                                                        SalesTaxCalculate.CalculateTax(
                                                                          "Bal. Tax Area Code","Bal. Tax Group Code","Bal. Tax Liable",
                                                                          WORKDATE,"Bal. VAT Base Amount",Quantity,"Currency Factor");
                                                                      if "Bal. VAT Base Amount" <> 0 then
                                                                        "Bal. VAT %" := ROUND(100 * "Bal. VAT Amount" / "Bal. VAT Base Amount",0.00001)
                                                                      else
                                                                        "Bal. VAT %" := 0;
                                                                      "Bal. VAT Amount" :=
                                                                        ROUND("Bal. VAT Amount",Currency."Amount Rounding Precision");
                                                                      Amount := -"Bal. VAT Base Amount" - "Bal. VAT Amount";
                                                                    end;
                                                                end;
                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=ENU=Bal. VAT Base Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 73  ;   ;Correction          ;Boolean       ;OnValidate=BEGIN
                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=ENU=Correction }
    { 78  ;   ;Source Type         ;Option        ;OnValidate=BEGIN
                                                                if ("Account Type" <> "Account Type"::"G/L Account") and ("Account No." <> '') or
                                                                   ("Bal. Account Type" <> "Bal. Account Type"::"G/L Account") and ("Bal. Account No." <> '')
                                                                then
                                                                  UpdateSource
                                                                else
                                                                  "Source No." := '';
                                                              END;

                                                   CaptionML=ENU=Source Type;
                                                   OptionCaptionML=ENU=" ,Customer,Vendor,Bank Account,Fixed Asset";
                                                   OptionString=" ",Customer,Vendor,"Bank Account","Fixed Asset" }
    { 79  ;   ;Source No.          ;Code20        ;TableRelation=IF ("Source Type"=CONST(Customer)) Customer
                                                                 ELSE IF ("Source Type"=CONST(Vendor)) Vendor
                                                                 ELSE IF ("Source Type"=CONST("Bank Account")) "Bank Account"
                                                                 ELSE IF ("Source Type"=CONST("Fixed Asset")) "Fixed Asset";
                                                   OnValidate=BEGIN
                                                                if ("Account Type" <> "Account Type"::"G/L Account") and ("Account No." <> '') or
                                                                   ("Bal. Account Type" <> "Bal. Account Type"::"G/L Account") and ("Bal. Account No." <> '')
                                                                then
                                                                  UpdateSource;
                                                              END;

                                                   CaptionML=ENU=Source No. }
    { 80  ;   ;Posting No. Series  ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Posting No. Series }
    { 82  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   OnValidate=BEGIN
                                                                VALIDATE("VAT %");
                                                              END;

                                                   CaptionML=ENU=Tax Area Code }
    { 83  ;   ;Tax Liable          ;Boolean       ;CaptionML=ENU=Tax Liable }
    { 84  ;   ;Tax Group Code      ;Code20        ;TableRelation="Tax Group";
                                                   OnValidate=BEGIN
                                                                VALIDATE("VAT %");
                                                              END;

                                                   CaptionML=ENU=Tax Group Code }
    { 85  ;   ;Use Tax             ;Boolean       ;CaptionML=ENU=Use Tax }
    { 86  ;   ;Bal. Tax Area Code  ;Code20        ;TableRelation="Tax Area";
                                                   OnValidate=BEGIN
                                                                VALIDATE("VAT %");
                                                              END;

                                                   CaptionML=ENU=Bal. Tax Area Code }
    { 87  ;   ;Bal. Tax Liable     ;Boolean       ;OnValidate=BEGIN
                                                                VALIDATE("VAT %");
                                                              END;

                                                   CaptionML=ENU=Bal. Tax Liable }
    { 88  ;   ;Bal. Tax Group Code ;Code20        ;TableRelation="Tax Group";
                                                   OnValidate=BEGIN
                                                                VALIDATE("VAT %");
                                                              END;

                                                   CaptionML=ENU=Bal. Tax Group Code }
    { 89  ;   ;Bal. Use Tax        ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD("Bal. Gen. Posting Type","Bal. Gen. Posting Type"::Purchase);
                                                                VALIDATE("Bal. VAT %");
                                                              END;

                                                   CaptionML=ENU=Bal. Use Tax }
    { 90  ;   ;VAT Bus. Posting Group;Code20      ;TableRelation="VAT Business Posting Group";
                                                   OnValidate=BEGIN
                                                                if "Account Type" in ["Account Type"::Customer,"Account Type"::Vendor,"Account Type"::"Bank Account"] then
                                                                  TESTFIELD("VAT Bus. Posting Group",'');

                                                                VALIDATE("VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=VAT Bus. Posting Group }
    { 91  ;   ;VAT Prod. Posting Group;Code20     ;TableRelation="VAT Product Posting Group";
                                                   OnValidate=BEGIN
                                                                if "Account Type" in ["Account Type"::Customer,"Account Type"::Vendor,"Account Type"::"Bank Account"] then
                                                                  TESTFIELD("VAT Prod. Posting Group",'');

                                                                "VAT %" := 0;
                                                                "VAT Calculation Type" := "VAT Calculation Type"::"Normal VAT";
                                                                if "Gen. Posting Type" <> 0 then begin
                                                                  if not VATPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group") then
                                                                    VATPostingSetup.INIT;
                                                                  "VAT Calculation Type" := VATPostingSetup."VAT Calculation Type";
                                                                  case "VAT Calculation Type" of
                                                                    "VAT Calculation Type"::"Normal VAT":
                                                                      "VAT %" := VATPostingSetup."VAT %";
                                                                    "VAT Calculation Type"::"Full VAT":
                                                                      case "Gen. Posting Type" of
                                                                        "Gen. Posting Type"::Sale:
                                                                          TESTFIELD("Account No.",VATPostingSetup.GetSalesAccount(false));
                                                                        "Gen. Posting Type"::Purchase:
                                                                          TESTFIELD("Account No.",VATPostingSetup.GetPurchAccount(false));
                                                                      end;
                                                                  end;
                                                                end;
                                                                VALIDATE("VAT %");
                                                              END;

                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 92  ;   ;Bal. VAT Bus. Posting Group;Code20 ;TableRelation="VAT Business Posting Group";
                                                   OnValidate=BEGIN
                                                                if "Bal. Account Type" in
                                                                   ["Bal. Account Type"::Customer,"Bal. Account Type"::Vendor,"Bal. Account Type"::"Bank Account"]
                                                                then
                                                                  TESTFIELD("Bal. VAT Bus. Posting Group",'');

                                                                VALIDATE("Bal. VAT Prod. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Bal. VAT Bus. Posting Group }
    { 93  ;   ;Bal. VAT Prod. Posting Group;Code20;TableRelation="VAT Product Posting Group";
                                                   OnValidate=BEGIN
                                                                if "Bal. Account Type" in
                                                                   ["Bal. Account Type"::Customer,"Bal. Account Type"::Vendor,"Bal. Account Type"::"Bank Account"]
                                                                then
                                                                  TESTFIELD("Bal. VAT Prod. Posting Group",'');

                                                                "Bal. VAT %" := 0;
                                                                "Bal. VAT Calculation Type" := "Bal. VAT Calculation Type"::"Normal VAT";
                                                                if "Bal. Gen. Posting Type" <> 0 then begin
                                                                  if not VATPostingSetup.GET("Bal. VAT Bus. Posting Group","Bal. VAT Prod. Posting Group") then
                                                                    VATPostingSetup.INIT;
                                                                  "Bal. VAT Calculation Type" := VATPostingSetup."VAT Calculation Type";
                                                                  case "Bal. VAT Calculation Type" of
                                                                    "Bal. VAT Calculation Type"::"Normal VAT":
                                                                      "Bal. VAT %" := VATPostingSetup."VAT %";
                                                                    "Bal. VAT Calculation Type"::"Full VAT":
                                                                      case "Bal. Gen. Posting Type" of
                                                                        "Bal. Gen. Posting Type"::Sale:
                                                                          TESTFIELD("Bal. Account No.",VATPostingSetup.GetSalesAccount(false));
                                                                        "Bal. Gen. Posting Type"::Purchase:
                                                                          TESTFIELD("Bal. Account No.",VATPostingSetup.GetPurchAccount(false));
                                                                      end;
                                                                  end;
                                                                end;
                                                                VALIDATE("Bal. VAT %");
                                                              END;

                                                   CaptionML=ENU=Bal. VAT Prod. Posting Group }
    { 110 ;   ;Ship-to/Order Address Code;Code10  ;TableRelation=IF ("Account Type"=CONST(Customer)) "Ship-to Address".Code WHERE ("Customer No."=FIELD("Bill-to/Pay-to No."))
                                                                 ELSE IF ("Account Type"=CONST(Vendor)) "Order Address".Code WHERE ("Vendor No."=FIELD("Bill-to/Pay-to No."))
                                                                 ELSE IF ("Bal. Account Type"=CONST(Customer)) "Ship-to Address".Code WHERE ("Customer No."=FIELD("Bill-to/Pay-to No."))
                                                                 ELSE IF ("Bal. Account Type"=CONST(Vendor)) "Order Address".Code WHERE ("Vendor No."=FIELD("Bill-to/Pay-to No."));
                                                   CaptionML=ENU=Ship-to/Order Address Code }
    { 111 ;   ;VAT Difference      ;Decimal       ;CaptionML=ENU=VAT Difference;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 112 ;   ;Bal. VAT Difference ;Decimal       ;CaptionML=ENU=Bal. VAT Difference;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 113 ;   ;IC Partner Code     ;Code20        ;TableRelation="IC Partner";
                                                   CaptionML=ENU=IC Partner Code;
                                                   Editable=false }
    { 116 ;   ;IC Partner G/L Acc. No.;Code20     ;TableRelation="IC G/L Account";
                                                   OnValidate=VAR
                                                                ICGLAccount@1000 : Record "IC G/L Account";
                                                                GenJnlTemplate@1001 : Record "Gen. Journal Template";
                                                              BEGIN
                                                                if "IC Partner G/L Acc. No." <> '' then begin
                                                                  GenJnlTemplate.GET("Journal Template Name");
                                                                  GenJnlTemplate.TESTFIELD(Type,GenJnlTemplate.Type::Intercompany);
                                                                  if ICGLAccount.GET("IC Partner G/L Acc. No.") then
                                                                    ICGLAccount.TESTFIELD(Blocked,false);
                                                                end
                                                              END;

                                                   CaptionML=ENU=IC Partner G/L Acc. No. }
    { 118 ;   ;Sell-to/Buy-from No.;Code20        ;TableRelation=IF ("Account Type"=CONST(Customer)) Customer
                                                                 ELSE IF ("Bal. Account Type"=CONST(Customer)) Customer
                                                                 ELSE IF ("Account Type"=CONST(Vendor)) Vendor
                                                                 ELSE IF ("Bal. Account Type"=CONST(Vendor)) Vendor;
                                                   CaptionML=ENU=Sell-to/Buy-from No. }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnValidate=BEGIN
                                                                DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=false }
    { 5050;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   OnValidate=BEGIN
                                                                CreateDim(
                                                                  DATABASE::Campaign,"Campaign No.",
                                                                  DimMgt.TypeToTableID1("Account Type"),"Account No.",
                                                                  DimMgt.TypeToTableID1("Bal. Account Type"),"Bal. Account No.",
                                                                  DATABASE::Job,"Job No.",
                                                                  DATABASE::"Salesperson/Purchaser","Salespers./Purch. Code");
                                                              END;

                                                   CaptionML=ENU=Campaign No. }
    { 5616;   ;Index Entry         ;Boolean       ;CaptionML=ENU=Index Entry }
  }
  KEYS
  {
    {    ;"Journal Template Name","Standard Journal Code","Line No.";
                                                   Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 or %2 must be G/L Account or Bank Account.';
      Text001@1002 : TextConst 'ENU=You cannot rename a %1.';
      Text002@1018 : TextConst 'ENU=cannot be specified without %1';
      Text006@1001 : TextConst 'ENU=The %1 option can only be used internally in the system.';
      Currency@1004 : Record Currency;
      CurrExchRate@1017 : Record "Currency Exchange Rate";
      VATPostingSetup@1016 : Record "VAT Posting Setup";
      DimMgt@1005 : Codeunit DimensionManagement;
      SalesTaxCalculate@1015 : Codeunit "Sales Tax Calculate";
      CurrencyCode@1003 : Code[10];
      Text007@1022 : TextConst 'ENU=%1 or %2 must be a Bank Account.';
      Text008@1019 : TextConst 'ENU=" must be 0 when %1 is %2."';
      Text010@1021 : TextConst 'ENU=%1 must be %2 or %3.';
      Text011@1011 : TextConst 'ENU=%1 must be negative.';
      Text012@1014 : TextConst 'ENU=%1 must be positive.';
      Text013@1012 : TextConst 'ENU=The %1 must not be more than %2.';
      Text014@1006 : TextConst 'ENU=The %1 %2 has a %3 %4.\Do you still want to use %1 %2 in this journal line?';

    LOCAL PROCEDURE UpdateLineBalance@2();
    BEGIN
      if ((Amount > 0) and (not Correction)) or
         ((Amount < 0) and Correction)
      then begin
        "Debit Amount" := Amount;
        "Credit Amount" := 0
      end else begin
        "Debit Amount" := 0;
        "Credit Amount" := -Amount;
      end;
      if "Currency Code" = '' then
        "Amount (LCY)" := Amount;
    END;

    [External]
    PROCEDURE ValidateShortcutDimCode@14(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    [External]
    PROCEDURE LookupShortcutDimCode@18(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    [External]
    PROCEDURE ShowShortcutDimCode@15(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    [External]
    PROCEDURE ShowDimensions@1();
    BEGIN
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1 %2 %3',"Journal Template Name","Standard Journal Code","Line No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    LOCAL PROCEDURE CheckGLAcc@7(GLAcc@1002 : Record "G/L Account");
    BEGIN
      GLAcc.CheckGLAcc;
      if GLAcc."Direct Posting" or ("Journal Template Name" = '') then
        exit;
      GLAcc.TESTFIELD("Direct Posting",true);
    END;

    LOCAL PROCEDURE CheckAccount@5(AccountType@1000 : '"G/L Account",Customer,Vendor,"Bank Account","Fixed Asset","IC Partner"';AccountNo@1001 : Code[20]);
    VAR
      GLAcc@1007 : Record "G/L Account";
      Cust@1006 : Record Customer;
      Vend@1005 : Record Vendor;
      ICPartner@1004 : Record "IC Partner";
      BankAcc@1003 : Record "Bank Account";
      FA@1002 : Record "Fixed Asset";
    BEGIN
      case AccountType of
        AccountType::"G/L Account":
          begin
            GLAcc.GET(AccountNo);
            CheckGLAcc(GLAcc);
          end;
        AccountType::Customer:
          begin
            Cust.GET(AccountNo);
            Cust.CheckBlockedCustOnJnls(Cust,"Document Type",false);
          end;
        AccountType::Vendor:
          begin
            Vend.GET(AccountNo);
            Vend.CheckBlockedVendOnJnls(Vend,"Document Type",false);
          end;
        AccountType::"Bank Account":
          begin
            BankAcc.GET(AccountNo);
            BankAcc.TESTFIELD(Blocked,false);
          end;
        AccountType::"Fixed Asset":
          begin
            FA.GET(AccountNo);
            FA.TESTFIELD(Blocked,false);
            FA.TESTFIELD(Inactive,false);
            FA.TESTFIELD("Budgeted Asset",false);
          end;
        AccountType::"IC Partner":
          begin
            ICPartner.GET(AccountNo);
            ICPartner.CheckICPartner;
          end;
      end;
    END;

    LOCAL PROCEDURE CheckICPartner@128(ICPartnerCode@1000 : Code[20];AccountType@1001 : '"G/L Account",Customer,Vendor,"Bank Account","Fixed Asset","IC Partner"';AccountNo@1002 : Code[20]);
    VAR
      ICPartner@1003 : Record "IC Partner";
    BEGIN
      if ICPartnerCode <> '' then
        if (ICPartnerCode <> '') and ICPartner.GET(ICPartnerCode) then begin
          ICPartner.CheckICPartnerIndirect(FORMAT(AccountType),AccountNo);
          "IC Partner Code" := ICPartnerCode;
        end;
    END;

    LOCAL PROCEDURE SetCurrencyCode@4(AccType2@1000 : '"G/L Account",Customer,Vendor,"Bank Account"';AccNo2@1001 : Code[20]) : Boolean;
    VAR
      Cust@1004 : Record Customer;
      Vend@1003 : Record Vendor;
      BankAcc@1002 : Record "Bank Account";
    BEGIN
      "Currency Code" := '';
      if AccNo2 <> '' then
        case AccType2 of
          AccType2::Customer:
            if Cust.GET(AccNo2) then
              "Currency Code" := Cust."Currency Code";
          AccType2::Vendor:
            if Vend.GET(AccNo2) then
              "Currency Code" := Vend."Currency Code";
          AccType2::"Bank Account":
            if BankAcc.GET(AccNo2) then
              "Currency Code" := BankAcc."Currency Code";
        end;
      exit("Currency Code" <> '');
    END;

    LOCAL PROCEDURE GetCurrency@3();
    BEGIN
      if CurrencyCode = '' then begin
        CLEAR(Currency);
        Currency.InitRoundingPrecision
      end else
        if CurrencyCode <> Currency.Code then begin
          Currency.GET(CurrencyCode);
          Currency.TESTFIELD("Amount Rounding Precision");
        end;
    END;

    LOCAL PROCEDURE UpdateSource@6();
    VAR
      SourceExists1@1000 : Boolean;
      SourceExists2@1001 : Boolean;
    BEGIN
      SourceExists1 := ("Account Type" <> "Account Type"::"G/L Account") and ("Account No." <> '');
      SourceExists2 := ("Bal. Account Type" <> "Bal. Account Type"::"G/L Account") and ("Bal. Account No." <> '');
      case true of
        SourceExists1 and not SourceExists2:
          begin
            "Source Type" := "Account Type";
            "Source No." := "Account No.";
          end;
        SourceExists2 and not SourceExists1:
          begin
            "Source Type" := "Bal. Account Type";
            "Source No." := "Bal. Account No.";
          end;
        else begin
          "Source Type" := "Source Type"::" ";
          "Source No." := '';
        end;
      end;
    END;

    LOCAL PROCEDURE CreateDim@13(Type1@1000 : Integer;No1@1001 : Code[20];Type2@1002 : Integer;No2@1003 : Code[20];Type3@1004 : Integer;No3@1005 : Code[20];Type4@1006 : Integer;No4@1007 : Code[20];Type5@1008 : Integer;No5@1009 : Code[20]);
    VAR
      TableID@1010 : ARRAY [10] OF Integer;
      No@1011 : ARRAY [10] OF Code[20];
    BEGIN
      TableID[1] := Type1;
      No[1] := No1;
      TableID[2] := Type2;
      No[2] := No2;
      TableID[3] := Type3;
      No[3] := No3;
      TableID[4] := Type4;
      No[4] := No4;
      TableID[5] := Type5;
      No[5] := No5;
      OnAfterCreateDimTableIDs(Rec,CurrFieldNo,TableID,No);

      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      "Dimension Set ID" :=
        DimMgt.GetRecDefaultDimID(
          Rec,CurrFieldNo,TableID,No,"Source Code","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0);
    END;

    LOCAL PROCEDURE GetDefaultICPartnerGLAccNo@1058() : Code[20];
    VAR
      GLAcc@1001 : Record "G/L Account";
      GLAccNo@1002 : Code[20];
    BEGIN
      if "IC Partner Code" <> '' then begin
        if "Account Type" = "Account Type"::"G/L Account" then
          GLAccNo := "Account No."
        else
          GLAccNo := "Bal. Account No.";
        if GLAcc.GET(GLAccNo) then
          exit(GLAcc."Default IC Partner G/L Acc. No")
      end;
    END;

    LOCAL PROCEDURE GetGLAccount@8();
    VAR
      GLAcc@1000 : Record "G/L Account";
    BEGIN
      GLAcc.GET("Account No.");
      CheckGLAcc(GLAcc);
      if "Bal. Account No." = '' then
        Description := GLAcc.Name;

      if ("Bal. Account No." = '') or
         ("Bal. Account Type" in
          ["Bal. Account Type"::"G/L Account","Bal. Account Type"::"Bank Account"])
      then begin
        "Posting Group" := '';
        "Salespers./Purch. Code" := '';
        "Payment Terms Code" := '';
      end;
      if "Bal. Account No." = '' then
        "Currency Code" := '';
      "Gen. Posting Type" := GLAcc."Gen. Posting Type";
      "Gen. Bus. Posting Group" := GLAcc."Gen. Bus. Posting Group";
      "Gen. Prod. Posting Group" := GLAcc."Gen. Prod. Posting Group";
      "VAT Bus. Posting Group" := GLAcc."VAT Bus. Posting Group";
      "VAT Prod. Posting Group" := GLAcc."VAT Prod. Posting Group";
      "Tax Area Code" := GLAcc."Tax Area Code";
      "Tax Liable" := GLAcc."Tax Liable";
      "Tax Group Code" := GLAcc."Tax Group Code";
      if WORKDATE = CLOSINGDATE(WORKDATE) then begin
        "Gen. Posting Type" := 0;
        "Gen. Bus. Posting Group" := '';
        "Gen. Prod. Posting Group" := '';
        "VAT Bus. Posting Group" := '';
        "VAT Prod. Posting Group" := '';
      end;
    END;

    LOCAL PROCEDURE GetGLBalAccount@19();
    VAR
      GLAcc@1000 : Record "G/L Account";
    BEGIN
      GLAcc.GET("Bal. Account No.");
      CheckGLAcc(GLAcc);
      if "Account No." = '' then begin
        Description := GLAcc.Name;
        "Currency Code" := '';
      end;
      if ("Account No." = '') or
         ("Account Type" in
          ["Account Type"::"G/L Account","Account Type"::"Bank Account"])
      then begin
        "Posting Group" := '';
        "Salespers./Purch. Code" := '';
        "Payment Terms Code" := '';
      end;
      "Bal. Gen. Posting Type" := GLAcc."Gen. Posting Type";
      "Bal. Gen. Bus. Posting Group" := GLAcc."Gen. Bus. Posting Group";
      "Bal. Gen. Prod. Posting Group" := GLAcc."Gen. Prod. Posting Group";
      "Bal. VAT Bus. Posting Group" := GLAcc."VAT Bus. Posting Group";
      "Bal. VAT Prod. Posting Group" := GLAcc."VAT Prod. Posting Group";
      "Bal. Tax Area Code" := GLAcc."Tax Area Code";
      "Bal. Tax Liable" := GLAcc."Tax Liable";
      "Bal. Tax Group Code" := GLAcc."Tax Group Code";
      if WORKDATE = CLOSINGDATE(WORKDATE) then begin
        "Bal. Gen. Bus. Posting Group" := '';
        "Bal. Gen. Prod. Posting Group" := '';
        "Bal. VAT Bus. Posting Group" := '';
        "Bal. VAT Prod. Posting Group" := '';
        "Bal. Gen. Posting Type" := 0;
      end;
    END;

    LOCAL PROCEDURE GetCustomerAccount@9();
    VAR
      Cust@1000 : Record Customer;
    BEGIN
      Cust.GET("Account No.");
      Cust.CheckBlockedCustOnJnls(Cust,"Document Type",false);
      CheckICPartner(Cust."IC Partner Code","Account Type","Account No.");
      Description := Cust.Name;
      "Posting Group" := Cust."Customer Posting Group";
      "Salespers./Purch. Code" := Cust."Salesperson Code";
      "Payment Terms Code" := Cust."Payment Terms Code";
      VALIDATE("Bill-to/Pay-to No.","Account No.");
      VALIDATE("Sell-to/Buy-from No.","Account No.");
      if SetCurrencyCode("Bal. Account Type","Bal. Account No.") then
        Cust.TESTFIELD("Currency Code","Currency Code")
      else
        "Currency Code" := Cust."Currency Code";
      "Gen. Posting Type" := 0;
      "Gen. Bus. Posting Group" := '';
      "Gen. Prod. Posting Group" := '';
      "VAT Bus. Posting Group" := '';
      "VAT Prod. Posting Group" := '';
      if (Cust."Bill-to Customer No." <> '') and (Cust."Bill-to Customer No." <> "Account No.") then begin
        if not CONFIRM(Text014,false,Cust.TABLECAPTION,Cust."No.",Cust.FIELDCAPTION("Bill-to Customer No."),Cust."Bill-to Customer No.") then
          ERROR('');
      end;
      VALIDATE("Payment Terms Code");
    END;

    LOCAL PROCEDURE GetCustomerBalAccount@20();
    VAR
      Cust@1000 : Record Customer;
    BEGIN
      Cust.GET("Bal. Account No.");
      Cust.CheckBlockedCustOnJnls(Cust,"Document Type",false);
      CheckICPartner(Cust."IC Partner Code","Bal. Account Type","Bal. Account No.");
      if "Account No." = '' then
        Description := Cust.Name;
      "Posting Group" := Cust."Customer Posting Group";
      "Salespers./Purch. Code" := Cust."Salesperson Code";
      "Payment Terms Code" := Cust."Payment Terms Code";
      VALIDATE("Bill-to/Pay-to No.","Bal. Account No.");
      VALIDATE("Sell-to/Buy-from No.","Bal. Account No.");
      if ("Account No." = '') or ("Account Type" = "Account Type"::"G/L Account") then
        "Currency Code" := Cust."Currency Code";
      if ("Account Type" = "Account Type"::"Bank Account") and ("Currency Code" = '') then
        "Currency Code" := Cust."Currency Code";
      "Bal. Gen. Posting Type" := 0;
      "Bal. Gen. Bus. Posting Group" := '';
      "Bal. Gen. Prod. Posting Group" := '';
      "Bal. VAT Bus. Posting Group" := '';
      "Bal. VAT Prod. Posting Group" := '';
      if (Cust."Bill-to Customer No." <> '') and (Cust."Bill-to Customer No." <> "Bal. Account No.") then begin
        if not CONFIRM(Text014,false,Cust.TABLECAPTION,Cust."No.",Cust.FIELDCAPTION("Bill-to Customer No."),Cust."Bill-to Customer No.") then
          ERROR('');
      end;
      VALIDATE("Payment Terms Code");
    END;

    LOCAL PROCEDURE GetVendorAccount@10();
    VAR
      Vend@1000 : Record Vendor;
    BEGIN
      Vend.GET("Account No.");
      Vend.CheckBlockedVendOnJnls(Vend,"Document Type",false);
      CheckICPartner(Vend."IC Partner Code","Account Type","Account No.");
      Description := Vend.Name;
      "Posting Group" := Vend."Vendor Posting Group";
      "Salespers./Purch. Code" := Vend."Purchaser Code";
      "Payment Terms Code" := Vend."Payment Terms Code";
      VALIDATE("Bill-to/Pay-to No.","Account No.");
      VALIDATE("Sell-to/Buy-from No.","Account No.");
      if SetCurrencyCode("Bal. Account Type","Bal. Account No.") then
        Vend.TESTFIELD("Currency Code","Currency Code")
      else
        "Currency Code" := Vend."Currency Code";
      "Gen. Posting Type" := 0;
      "Gen. Bus. Posting Group" := '';
      "Gen. Prod. Posting Group" := '';
      "VAT Bus. Posting Group" := '';
      "VAT Prod. Posting Group" := '';
      if (Vend."Pay-to Vendor No." <> '') and (Vend."Pay-to Vendor No." <> "Account No.") then begin
        if not CONFIRM(Text014,false,Vend.TABLECAPTION,Vend."No.",Vend.FIELDCAPTION("Pay-to Vendor No."),Vend."Pay-to Vendor No.") then
          ERROR('');
      end;
      VALIDATE("Payment Terms Code");
    END;

    LOCAL PROCEDURE GetVendorBalAccount@21();
    VAR
      Vend@1000 : Record Vendor;
    BEGIN
      Vend.GET("Bal. Account No.");
      Vend.CheckBlockedVendOnJnls(Vend,"Document Type",false);
      CheckICPartner(Vend."IC Partner Code","Bal. Account Type","Bal. Account No.");
      if "Account No." = '' then
        Description := Vend.Name;
      "Posting Group" := Vend."Vendor Posting Group";
      "Salespers./Purch. Code" := Vend."Purchaser Code";
      "Payment Terms Code" := Vend."Payment Terms Code";
      VALIDATE("Bill-to/Pay-to No.","Bal. Account No.");
      VALIDATE("Sell-to/Buy-from No.","Bal. Account No.");
      if ("Account No." = '') or ("Account Type" = "Account Type"::"G/L Account") then
        "Currency Code" := Vend."Currency Code";
      if ("Account Type" = "Account Type"::"Bank Account") and ("Currency Code" = '') then
        "Currency Code" := Vend."Currency Code";
      "Bal. Gen. Posting Type" := 0;
      "Bal. Gen. Bus. Posting Group" := '';
      "Bal. Gen. Prod. Posting Group" := '';
      "Bal. VAT Bus. Posting Group" := '';
      "Bal. VAT Prod. Posting Group" := '';
      if (Vend."Pay-to Vendor No." <> '') and (Vend."Pay-to Vendor No." <> "Bal. Account No.") then begin
        if not CONFIRM(Text014,false,Vend.TABLECAPTION,Vend."No.",Vend.FIELDCAPTION("Pay-to Vendor No."),Vend."Pay-to Vendor No.") then
          ERROR('');
      end;
      VALIDATE("Payment Terms Code");
    END;

    LOCAL PROCEDURE GetBankAccount@11();
    VAR
      BankAcc@1000 : Record "Bank Account";
    BEGIN
      BankAcc.GET("Account No.");
      BankAcc.TESTFIELD(Blocked,false);
      if "Bal. Account No." = '' then
        Description := BankAcc.Name;
      if ("Bal. Account No." = '') or
         ("Bal. Account Type" in
          ["Bal. Account Type"::"G/L Account","Bal. Account Type"::"Bank Account"])
      then begin
        "Posting Group" := '';
        "Salespers./Purch. Code" := '';
        "Payment Terms Code" := '';
      end;
      if BankAcc."Currency Code" = '' then begin
        if "Bal. Account No." = '' then
          "Currency Code" := '';
      end else
        if SetCurrencyCode("Bal. Account Type","Bal. Account No.") then
          BankAcc.TESTFIELD("Currency Code","Currency Code")
        else
          "Currency Code" := BankAcc."Currency Code";
      "Gen. Posting Type" := 0;
      "Gen. Bus. Posting Group" := '';
      "Gen. Prod. Posting Group" := '';
      "VAT Bus. Posting Group" := '';
      "VAT Prod. Posting Group" := '';
    END;

    LOCAL PROCEDURE GetBankBalAccount@22();
    VAR
      BankAcc@1000 : Record "Bank Account";
    BEGIN
      BankAcc.GET("Bal. Account No.");
      BankAcc.TESTFIELD(Blocked,false);
      if "Account No." = '' then
        Description := BankAcc.Name;
      if ("Account No." = '') or
         ("Account Type" in
          ["Account Type"::"G/L Account","Account Type"::"Bank Account"])
      then begin
        "Posting Group" := '';
        "Salespers./Purch. Code" := '';
        "Payment Terms Code" := '';
      end;
      if BankAcc."Currency Code" = '' then begin
        if "Account No." = '' then
          "Currency Code" := '';
      end else
        if SetCurrencyCode("Bal. Account Type","Bal. Account No.") then
          BankAcc.TESTFIELD("Currency Code","Currency Code")
        else
          "Currency Code" := BankAcc."Currency Code";
      "Bal. Gen. Posting Type" := 0;
      "Bal. Gen. Bus. Posting Group" := '';
      "Bal. Gen. Prod. Posting Group" := '';
      "Bal. VAT Bus. Posting Group" := '';
      "Bal. VAT Prod. Posting Group" := '';
    END;

    LOCAL PROCEDURE GetFAAccount@12();
    VAR
      FA@1000 : Record "Fixed Asset";
    BEGIN
      FA.GET("Account No.");
      FA.TESTFIELD(Blocked,false);
      FA.TESTFIELD(Inactive,false);
      FA.TESTFIELD("Budgeted Asset",false);
      Description := FA.Description;
    END;

    LOCAL PROCEDURE GetFABalAccount@23();
    VAR
      FA@1000 : Record "Fixed Asset";
    BEGIN
      FA.GET("Bal. Account No.");
      FA.TESTFIELD(Blocked,false);
      FA.TESTFIELD(Inactive,false);
      FA.TESTFIELD("Budgeted Asset",false);
      if "Account No." = '' then
        Description := FA.Description;
    END;

    LOCAL PROCEDURE GetICPartnerAccount@17();
    VAR
      ICPartner@1000 : Record "IC Partner";
    BEGIN
      ICPartner.GET("Account No.");
      ICPartner.CheckICPartner;
      Description := ICPartner.Name;
      if ("Bal. Account No." = '') or ("Bal. Account Type" = "Bal. Account Type"::"G/L Account") then
        "Currency Code" := ICPartner."Currency Code";
      if ("Bal. Account Type" = "Bal. Account Type"::"Bank Account") and ("Currency Code" = '') then
        "Currency Code" := ICPartner."Currency Code";
      "Gen. Posting Type" := 0;
      "Gen. Bus. Posting Group" := '';
      "Gen. Prod. Posting Group" := '';
      "VAT Bus. Posting Group" := '';
      "VAT Prod. Posting Group" := '';
      "IC Partner Code" := "Account No.";
    END;

    LOCAL PROCEDURE GetICPartnerBalAccount@24();
    VAR
      ICPartner@1000 : Record "IC Partner";
    BEGIN
      ICPartner.GET("Bal. Account No.");
      if "Account No." = '' then
        Description := ICPartner.Name;

      if ("Account No." = '') or ("Account Type" = "Account Type"::"G/L Account") then
        "Currency Code" := ICPartner."Currency Code";
      if ("Account Type" = "Account Type"::"Bank Account") and ("Currency Code" = '') then
        "Currency Code" := ICPartner."Currency Code";
      "Bal. Gen. Posting Type" := 0;
      "Bal. Gen. Bus. Posting Group" := '';
      "Bal. Gen. Prod. Posting Group" := '';
      "Bal. VAT Bus. Posting Group" := '';
      "Bal. VAT Prod. Posting Group" := '';
      "IC Partner Code" := "Bal. Account No.";
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCreateDimTableIDs@138(VAR StandardGenJournalLine@1000 : Record "Standard General Journal Line";FieldNo@1001 : Integer;TableID@1003 : ARRAY [10] OF Integer;No@1002 : ARRAY [10] OF Code[20]);
    BEGIN
    END;

    BEGIN
    END.
  }
}

