OBJECT Report 742 VAT Report Request Page
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=VAT Report Request Page;
    ProcessingOnly=true;
  }
  DATASET
  {
    { 1   ;    ;DataItem;VAT Report Header   ;
               DataItemTable="VAT Report Header";
               OnPreDataItem=VAR
                               VATStatementLine@1001 : Record "VAT Statement Line";
                               VATStatementReportLine@1000 : Record "VAT Statement Report Line";
                               VATStatementName@1004 : Record "VAT Statement Name";
                               VATStatement@1002 : Report "VAT Statement";
                               ColumnValue@1003 : Decimal;
                             BEGIN
                               COPY(Rec);

                               VATStatementName.SETRANGE("Statement Template Name","Statement Template Name");
                               VATStatementName.SETRANGE(Name,"Statement Name");
                               VATStatementName.SETRANGE("Date Filter","Start Date","End Date");

                               VATStatementName.COPYFILTER("Date Filter",VATStatementLine."Date Filter");

                               VATStatementLine.SETRANGE("Statement Template Name","Statement Template Name");
                               VATStatementLine.SETRANGE("Statement Name","Statement Name");
                               VATStatementLine.SETFILTER("Box No.",'<>%1','');
                               VATStatementLine.FINDSET;

                               VATStatement.InitializeRequest(VATStatementName,VATStatementLine,Selection,PeriodSelection,false,false);

                               VATStatementReportLine.SETRANGE("VAT Report No.","No.");
                               VATStatementReportLine.SETRANGE("VAT Report Config. Code","VAT Report Config. Code");
                               VATStatementReportLine.DELETEALL;

                               repeat
                                 VATStatement.CalcLineTotal(VATStatementLine,ColumnValue,0);
                                 if VATStatementLine."Print with" = VATStatementLine."Print with"::"Opposite Sign" then
                                   ColumnValue := -ColumnValue;
                                 VATStatementReportLine.INIT;
                                 VATStatementReportLine.VALIDATE("VAT Report No.","No.");
                                 VATStatementReportLine.VALIDATE("VAT Report Config. Code","VAT Report Config. Code");
                                 VATStatementReportLine.VALIDATE("Line No.",VATStatementLine."Line No.");
                                 VATStatementReportLine.VALIDATE("Row No.",VATStatementLine."Row No.");
                                 VATStatementReportLine.VALIDATE(Description,VATStatementLine.Description);
                                 VATStatementReportLine.VALIDATE("Box No.",VATStatementLine."Box No.");
                                 VATStatementReportLine.VALIDATE(Amount,ColumnValue);
                                 VATStatementReportLine.INSERT;
                               until VATStatementLine.NEXT = 0;
                             END;
                              }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      SourceTable="VAT Report Header";
      ShowFilter=false;
      OnOpenPage=VAR
                   VATStatementTemplate@1000 : Record "VAT Statement Template";
                   VATStatementName@1001 : Record "VAT Statement Name";
                 BEGIN
                   COPYFILTERS("VAT Report Header");
                   FINDFIRST;

                   if VATStatementTemplate.COUNT = 1 then begin
                     VATStatementTemplate.FINDFIRST;
                     "Statement Template Name" := VATStatementTemplate.Name;
                     MODIFY;

                     VATStatementName.SETRANGE("Statement Template Name",VATStatementTemplate.Name);
                     if VATStatementName.COUNT = 1 then begin
                       VATStatementName.FINDFIRST;
                       "Statement Name" := VATStatementName.Name;
                       MODIFY;
                     end;
                   end;
                 END;

    }
    CONTROLS
    {
      { 1   ;    ;Container ;
                  Name=RequestPage;
                  ContainerType=ContentArea }

      { 11  ;1   ;Group     ;
                  Name=Options;
                  GroupType=Group }

      { 2   ;2   ;Field     ;
                  Name=Include VAT entries1;
                  CaptionML=ENU=Include VAT entries;
                  ToolTipML=ENU=Specifies whether to include VAT entries based on their status. For example, Open is useful when submitting for the first time, Open and Closed is useful when resubmitting.;
                  OptionCaptionML=ENU=Open,Closed,Open and Closed;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=Selection;
                  ImplicitType=Option;
                  ShowMandatory=True }

      { 3   ;2   ;Field     ;
                  Name=Include VAT entries2;
                  CaptionML=ENU=Include VAT entries;
                  ToolTipML=ENU=Specifies whether to include VAT entries only from the specified period, or also from previous periods within the specified year.;
                  OptionCaptionML=ENU=Before and Within Period,Within Period;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=PeriodSelection;
                  ImplicitType=Option;
                  ShowMandatory=True }

      { 9   ;2   ;Field     ;
                  Name=VAT Statement Template;
                  CaptionML=ENU=VAT Statement Template;
                  ToolTipML=ENU=Specifies the VAT Statement to generate the VAT report.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr="Statement Template Name";
                  TableRelation="VAT Statement Template";
                  ImplicitType=Code10;
                  ShowMandatory=True }

      { 10  ;2   ;Field     ;
                  Name=VAT Statement Name;
                  CaptionML=ENU=VAT Statement Name;
                  ToolTipML=ENU=Specifies the VAT Statement to generate the VAT report.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr="Statement Name";
                  TableRelation="VAT Statement Name".Name WHERE ("Statement Template Name"=FIELD("Statement Template Name"));
                  LookupPageID="VAT Statement Names";
                  ImplicitType=Code10;
                  ShowMandatory=True }

      { 4   ;2   ;Field     ;
                  Name="Period Year";
                  ToolTipML=ENU=Specifies the year of the reporting period.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr="Period Year";
                  ImplicitType=Integer }

      { 5   ;2   ;Field     ;
                  Name="Period Type";
                  ToolTipML=ENU=Specifies the length of the reporting period.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr="Period Type";
                  ImplicitType=Option }

      { 6   ;2   ;Field     ;
                  Name="Period No.";
                  ToolTipML=ENU=Specifies the specific reporting period to use.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr="Period No.";
                  ImplicitType=Integer }

      { 7   ;2   ;Field     ;
                  Name="Start Date";
                  ToolTipML=ENU=Specifies the first date of the reporting period.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr="Start Date";
                  Importance=Additional;
                  ImplicitType=Date;
                  ShowMandatory=True }

      { 8   ;2   ;Field     ;
                  Name="End Date";
                  ToolTipML=ENU=Specifies the last date of the reporting period.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr="End Date";
                  Importance=Additional;
                  ImplicitType=Date;
                  ShowMandatory=True }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Selection@1001 : 'Open,Closed,"Open and Closed"';
      PeriodSelection@1000 : '"Before and Within Period","Within Period"';

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

