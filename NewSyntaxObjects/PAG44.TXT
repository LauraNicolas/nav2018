OBJECT Page 44 Sales Credit Memo
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Sales Credit Memo;
    SourceTable="Sales Header";
    SourceTableView=WHERE("Document Type"=FILTER("Credit Memo"));
    PageType=Document;
    RefreshOnActivate=true;
    PromotedActionCategoriesML=ENU=New,Process,Report,Approve,Release,Posting,Prepare,Credit Memo,Request Approval;
    OnInit=VAR
             SalesReceivablesSetup@1000 : Record "Sales & Receivables Setup";
           BEGIN
             JobQueueUsed := SalesReceivablesSetup.JobQueueActive;
             SetExtDocNoMandatoryCondition;
           END;

    OnOpenPage=BEGIN
                 if UserMgt.GetSalesFilter <> '' then begin
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetSalesFilter);
                   FILTERGROUP(0);
                 end;

                 SetDocNoVisible;
                 SetControlAppearance;
                 if ("No." <> '') and ("Sell-to Customer No." = '') then
                   DocumentIsPosted := (not GET("Document Type","No."));
               END;

    OnAfterGetRecord=BEGIN
                       SetControlAppearance;
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetSalesFilter;
                  if (not DocNoVisible) and ("No." = '') then
                    SetSellToCustomerFromFilter;
                  SetControlAppearance;
                END;

    OnInsertRecord=BEGIN
                     if DocNoVisible then
                       CheckCreditMaxBeforeInsert;
                   END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     exit(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       if not DocumentIsPosted then
                         exit(ConfirmCloseUnposted);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           CurrPage.ApprovalFactBox.PAGE.UpdateApprovalEntriesFromSourceRecord(RECORDID);
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                           SetControlAppearance;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 49      ;1   ;ActionGroup;
                      Name=&Credit Memo;
                      CaptionML=ENU=&Credit Memo;
                      Image=CreditMemo }
      { 51      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      ToolTipML=ENU=View statistical information, such as the value of posted entries, for the record.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled="No." <> '';
                      Image=Statistics;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 Handled@1000 : Boolean;
                               BEGIN
                                 OnBeforeStatisticsAction(Rec,Handled);
                                 if not Handled then begin
                                   CalcInvDiscForHeader;
                                   COMMIT;
                                   PAGE.RUNMODAL(PAGE::"Sales Statistics",Rec);
                                   SalesCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                                 end
                               END;
                                }
      { 52      ;2   ;Action    ;
                      Name=CreditMemo_CustomerCard;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Customer;
                      ToolTipML=ENU=View or edit detailed information about the customer on the sales document.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Customer Card";
                      RunPageLink="No."=FIELD("Sell-to Customer No.");
                      Enabled=IsCustomerOrContactNotEmpty;
                      Image=EditLines }
      { 53      ;2   ;Action    ;
                      Name=Co&mments;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Sales Comment Sheet";
                      RunPageLink="Document Type"=FIELD("Document Type"),
                                  "No."=FIELD("No."),
                                  "Document Line No."=CONST(0);
                      Promoted=true;
                      Image=ViewComments;
                      PromotedCategory=Category8 }
      { 121     ;2   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData "Approval Entry"=R;
                      CaptionML=ENU=Approvals;
                      ToolTipML=ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      Image=Approvals;
                      PromotedCategory=Category9;
                      OnAction=VAR
                                 WorkflowsEntriesBuffer@1001 : Record "Workflows Entries Buffer";
                               BEGIN
                                 WorkflowsEntriesBuffer.RunWorkflowEntriesPage(RECORDID,DATABASE::"Sales Header","Document Type","No.");
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 73      ;1   ;ActionGroup;
                      Name=Credit Memo;
                      CaptionML=ENU=&Credit Memo;
                      Image=CreditMemo }
      { 72      ;2   ;Action    ;
                      Name=Customer;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Customer;
                      ToolTipML=ENU=View or edit detailed information about the customer.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Customer Card";
                      RunPageLink="No."=FIELD("Sell-to Customer No.");
                      Promoted=true;
                      Enabled=IsCustomerOrContactNotEmpty;
                      PromotedIsBig=true;
                      Image=Customer;
                      PromotedCategory=Category8 }
      { 64      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Dimensions;
                      PromotedCategory=Category8;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 29      ;1   ;ActionGroup;
                      Name=Approval;
                      CaptionML=ENU=Approval }
      { 27      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=ENU=Approve;
                      ToolTipML=ENU=Approve the requested changes.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=true;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 25      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=ENU=Reject;
                      ToolTipML=ENU=Reject the approval request.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=true;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 23      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=ENU=Delegate;
                      ToolTipML=ENU=Delegate the approval to a substitute approver.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 31      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=ENU=Comments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 7       ;1   ;ActionGroup;
                      Name=ActionGroup7;
                      CaptionML=ENU=Release;
                      Image=ReleaseDoc }
      { 122     ;2   ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=Re&lease;
                      ToolTipML=ENU=Release the document to the next stage of processing. When a document is released, it will be included in all availability calculations from the expected receipt date of the items. You must reopen the document before you can make changes to it.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      Enabled=IsCustomerOrContactNotEmpty;
                      PromotedIsBig=true;
                      Image=ReleaseDoc;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ReleaseSalesDoc@1000 : Codeunit "Release Sales Document";
                               BEGIN
                                 ReleaseSalesDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 123     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=ENU=Re&open;
                      ToolTipML=ENU=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      Enabled=Status <> Status::Open;
                      PromotedIsBig=true;
                      Image=ReOpen;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ReleaseSalesDoc@1001 : Codeunit "Release Sales Document";
                               BEGIN
                                 ReleaseSalesDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 58      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 120     ;2   ;Action    ;
                      Name=GetPostedDocumentLinesToReverse;
                      Ellipsis=true;
                      CaptionML=ENU=Get Posted Doc&ument Lines to Reverse;
                      ToolTipML=ENU=Copy one or more posted sales document lines in order to reverse the original order.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      Image=ReverseLines;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 GetPstdDocLinesToRevere;
                               END;
                                }
      { 114     ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      AccessByPermission=TableData "Cust. Invoice Disc."=R;
                      CaptionML=ENU=Calculate &Invoice Discount;
                      ToolTipML=ENU=Calculate the invoice discount that applies to the sales credit memo.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=IsCustomerOrContactNotEmpty;
                      Image=CalculateInvoiceDiscount;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 SalesCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 113     ;2   ;Separator ;
                      Name=Separator113 }
      { 150     ;2   ;Action    ;
                      Name=ApplyEntries;
                      ShortCutKey=Shift+F11;
                      Ellipsis=true;
                      CaptionML=ENU=Apply Entries;
                      ToolTipML=ENU=Select one or more ledger entries that you want to apply this record to so that the related posted documents are closed as paid or refunded.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled="No." <> '';
                      Image=ApplyEntries;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Sales Header Apply",Rec);
                               END;
                                }
      { 126     ;2   ;Separator ;
                      Name=Separator126 }
      { 112     ;2   ;Action    ;
                      Name=GetStdCustSalesCodes;
                      Ellipsis=true;
                      CaptionML=ENU=Get St&d. Cust. Sales Codes;
                      ToolTipML=ENU=View a list of the standard sales lines that have been assigned to the customer to be used for recurring sales.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      Enabled=IsCustomerOrContactNotEmpty;
                      Image=CustomerCode;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 StdCustSalesCode@1000 : Record "Standard Customer Sales Code";
                               BEGIN
                                 StdCustSalesCode.InsertSalesLines(Rec);
                               END;
                                }
      { 128     ;2   ;Separator ;
                      Name=Separator128 }
      { 115     ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=true;
                      CaptionML=ENU=Copy Document;
                      ToolTipML=ENU=Copy document lines and header information from another sales document to this document. You can copy a posted sales invoice into a new sales invoice to quickly create a similar document.;
                      ApplicationArea=#Suite;
                      Promoted=true;
                      Image=CopyDocument;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CopySalesDoc.SetSalesHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                                 CLEAR(CopySalesDoc);
                                 if GET("Document Type","No.") then;
                               END;
                                }
      { 56      ;2   ;Action    ;
                      Name=Move Negative Lines;
                      Ellipsis=true;
                      CaptionML=ENU=Move Negative Lines;
                      ToolTipML=ENU=Prepare to create a replacement sales order in a sales return process.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      Image=MoveNegativeLines;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CLEAR(MoveNegSalesLines);
                                 MoveNegSalesLines.SetSalesHeader(Rec);
                                 MoveNegSalesLines.RUNMODAL;
                                 MoveNegSalesLines.ShowDocument;
                               END;
                                }
      { 47      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=ENU=Incoming Document;
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 45      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=ENU=View Incoming Document;
                      ToolTipML=ENU=View any incoming document records and file attachments that exist for the entry or document.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record "Incoming Document";
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 43      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData "Incoming Document"=R;
                      CaptionML=ENU=Select Incoming Document;
                      ToolTipML=ENU=Select an incoming document record and file attachment that you want to link to the entry or document.;
                      ApplicationArea=#Basic,#Suite;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record "Incoming Document";
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No.",RECORDID));
                               END;
                                }
      { 41      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=true;
                      CaptionML=ENU=Create Incoming Document from File;
                      ToolTipML=ENU=Create an incoming document record by selecting a file to attach, and then link the incoming document record to the entry or document.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NOT HasIncomingDocument;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record "Incoming Document Attachment";
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromSalesDocument(Rec);
                               END;
                                }
      { 37      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=ENU=Remove Incoming Document;
                      ToolTipML=ENU=Remove any incoming document records and file attachments.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=HasIncomingDocument;
                      Image=RemoveLine;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record "Incoming Document";
                               BEGIN
                                 if IncomingDocument.GET("Incoming Document Entry No.") then
                                   IncomingDocument.RemoveLinkToRelatedRecord;
                                 "Incoming Document Entry No." := 0;
                                 MODIFY(true);
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      Name=Request Approval;
                      CaptionML=ENU=Request Approval;
                      Image=Approval }
      { 139     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=ENU=Send A&pproval Request;
                      ToolTipML=ENU=Request approval of the document.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=NOT OpenApprovalEntriesExist AND CanRequestApprovalForFlow;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit "Approvals Mgmt.";
                               BEGIN
                                 if ApprovalsMgmt.CheckSalesApprovalPossible(Rec) then
                                   ApprovalsMgmt.OnSendSalesDocForApproval(Rec);
                               END;
                                }
      { 140     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=ENU=Cancel Approval Re&quest;
                      ToolTipML=ENU=Cancel the approval request.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=CanCancelApprovalForRecord OR CanCancelApprovalForFlow;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=true;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit "Approvals Mgmt.";
                                 WorkflowWebhookMgt@1000 : Codeunit "Workflow Webhook Management";
                               BEGIN
                                 ApprovalsMgmt.OnCancelSalesApprovalRequest(Rec);
                                 WorkflowWebhookMgt.FindAndCancel(RECORDID);
                               END;
                                }
      { 215     ;2   ;ActionGroup;
                      Name=Flow;
                      CaptionML=ENU=Flow;
                      Image=Flow }
      { 216     ;3   ;Action    ;
                      Name=CreateFlow;
                      CaptionML=ENU=Create a Flow;
                      ToolTipML=ENU=Create a new Flow from a list of relevant Flow templates.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Image=Flow;
                      PromotedCategory=Category9;
                      PromotedOnly=true;
                      OnAction=VAR
                                 FlowServiceManagement@1001 : Codeunit "Flow Service Management";
                                 FlowTemplateSelector@1000 : Page "Flow Template Selector";
                               BEGIN
                                 // Opens page 6400 where the user can use filtered templates to create new flows.
                                 FlowTemplateSelector.SetSearchText(FlowServiceManagement.GetSalesTemplateFilter);
                                 FlowTemplateSelector.RUN;
                               END;
                                }
      { 217     ;3   ;Action    ;
                      Name=SeeFlows;
                      CaptionML=ENU=See my Flows;
                      ToolTipML=ENU=View and configure Flows that you created.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "Flow Selector";
                      Promoted=true;
                      Image=Flow;
                      PromotedCategory=Category9;
                      PromotedOnly=true }
      { 59      ;1   ;ActionGroup;
                      Name=P&osting;
                      CaptionML=ENU=P&osting;
                      Image=Post }
      { 61      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=ENU=P&ost;
                      ToolTipML=ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostOrder;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post (Yes/No)");
                               END;
                                }
      { 71      ;2   ;Action    ;
                      Name=TestReport;
                      Ellipsis=true;
                      CaptionML=ENU=Test Report;
                      ToolTipML=ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      Enabled="No." <> '';
                      Image=TestReport;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ReportPrint.PrintSalesHeader(Rec);
                               END;
                                }
      { 68      ;2   ;Action    ;
                      Name=PostAndSend;
                      Ellipsis=true;
                      CaptionML=ENU=Post and &Send;
                      ToolTipML=ENU=Finalize and prepare to send the document according to the customer's sending profile, such as attached to an email. The Send document to window opens first so you can confirm or select a sending profile.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=PostSendTo;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post and Send");
                               END;
                                }
      { 3       ;2   ;Action    ;
                      Name=Remove From Job Queue;
                      CaptionML=ENU=Remove From Job Queue;
                      ToolTipML=ENU=Remove the scheduled processing of this record from the job queue.;
                      ApplicationArea=#All;
                      Visible=JobQueueVisible;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
      { 35      ;2   ;Action    ;
                      Name=Preview Posting;
                      CaptionML=ENU=Preview Posting;
                      ToolTipML=ENU=Review the different types of entries that will be created when you post the document or journal.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewPostedOrder;
                      OnAction=BEGIN
                                 ShowPreview;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the sales document. The field can be filled automatically or manually and can be set up to be invisible.;
                ApplicationArea=#All;
                SourceExpr="No.";
                Importance=Additional;
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               if AssistEdit(xRec) then
                                 CurrPage.UPDATE;
                             END;

                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Sell-to Customer No.;
                CaptionML=ENU=Customer No.;
                ToolTipML=ENU=Specifies the number of the customer who will receive the products and be billed by default.;
                ApplicationArea=#Basic,#Suite;
                NotBlank=true;
                SourceExpr="Sell-to Customer No.";
                Importance=Additional;
                OnValidate=BEGIN
                             SelltoCustomerNoOnAfterValidate(Rec,xRec);
                             CurrPage.UPDATE;
                           END;

                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name=Sell-to Customer Name;
                CaptionML=ENU=Customer Name;
                ToolTipML=ENU=Specifies the name of the customer who will receive the products and be billed by default.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Customer Name";
                Importance=Promoted;
                OnValidate=BEGIN
                             if "No." = '' then
                               InitRecord;

                             SelltoCustomerNoOnAfterValidate(Rec,xRec);

                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;

                ImplicitType=Text50;
                ShowMandatory=TRUE }

    { 79  ;2   ;Group     ;
                Name=Sell-to;
                CaptionML=ENU=Sell-to;
                GroupType=Group }

    { 65  ;3   ;Field     ;
                Name=Sell-to Address;
                CaptionML=ENU=Address;
                ToolTipML=ENU=Specifies the address where the customer is located.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Address";
                Importance=Additional;
                ImplicitType=Text50 }

    { 67  ;3   ;Field     ;
                Name=Sell-to Address 2;
                CaptionML=ENU=Address 2;
                ToolTipML=ENU=Specifies additional address information.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Address 2";
                Importance=Additional;
                ImplicitType=Text50 }

    { 70  ;3   ;Field     ;
                Name=Sell-to Post Code;
                CaptionML=ENU=Post Code;
                ToolTipML=ENU=Specifies the postal code.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Post Code";
                Importance=Additional;
                ImplicitType=Code20 }

    { 69  ;3   ;Field     ;
                Name=Sell-to City;
                CaptionML=ENU=City;
                ToolTipML=ENU=Specifies the city of the customer on the sales document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to City";
                Importance=Additional;
                ImplicitType=Text30 }

    { 57  ;3   ;Field     ;
                Name=Sell-to Contact No.;
                CaptionML=ENU=Contact No.;
                ToolTipML=ENU=Specifies the number of the contact that the sales document will be sent to.;
                ApplicationArea=#Advanced;
                SourceExpr="Sell-to Contact No.";
                Importance=Additional;
                OnValidate=BEGIN
                             if GETFILTER("Sell-to Contact No.") = xRec."Sell-to Contact No." then
                               if "Sell-to Contact No." <> xRec."Sell-to Contact No." then
                                 SETRANGE("Sell-to Contact No.");
                           END;

                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name=Sell-to Contact;
                CaptionML=ENU=Contact;
                ToolTipML=ENU=Specifies the name of the person to contact at the customer.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Contact";
                Editable="Sell-to Customer No." <> '';
                ImplicitType=Text50 }

    { 21  ;2   ;Field     ;
                Name=Your Reference;
                ToolTipML=ENU=Specifies the customer's reference. The contents will be printed on sales documents.;
                ApplicationArea=#Advanced;
                SourceExpr="Your Reference";
                Importance=Additional;
                ImplicitType=Text35 }

    { 12  ;2   ;Field     ;
                Name=Posting Date;
                ToolTipML=ENU=Specifies the date when the posting of the sales document will be recorded.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                Importance=Promoted;
                ImplicitType=Date }

    { 39  ;2   ;Field     ;
                Name=Document Date;
                ToolTipML=ENU=Specifies the date on which you created the sales document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Importance=Additional;
                ImplicitType=Date }

    { 133 ;2   ;Field     ;
                Name=Due Date;
                ToolTipML=ENU=Specifies when the related sales invoice must be paid.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                Importance=Promoted;
                ImplicitType=Date }

    { 11  ;2   ;Field     ;
                Name=Incoming Document Entry No.;
                ToolTipML=ENU=Specifies the number of the incoming document that this sales document is created for.;
                ApplicationArea=#Advanced;
                SourceExpr="Incoming Document Entry No.";
                Importance=Additional;
                Visible=FALSE;
                ImplicitType=Integer }

    { 54  ;2   ;Field     ;
                Name=External Document No.;
                ToolTipML=ENU=Specifies the number that the customer uses in their own system to refer to this sales document.;
                ApplicationArea=#Advanced;
                SourceExpr="External Document No.";
                Importance=Additional;
                ImplicitType=Code35;
                ShowMandatory=ExternalDocNoMandatory }

    { 10  ;2   ;Field     ;
                Name=Salesperson Code;
                ToolTipML=ENU=Specifies the name of the salesperson who is assigned to the customer.;
                ApplicationArea=#Suite;
                SourceExpr="Salesperson Code";
                Importance=Additional;
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 104 ;2   ;Field     ;
                Name=Campaign No.;
                ToolTipML=ENU=Specifies the campaign number the document is linked to.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Campaign No.";
                Importance=Additional;
                ImplicitType=Code20 }

    { 107 ;2   ;Field     ;
                Name=Responsibility Center;
                ToolTipML=ENU=Specifies the code of the responsibility center that is associated with the user, company, or vendor.;
                ApplicationArea=#Advanced;
                SourceExpr="Responsibility Center";
                Importance=Additional;
                ImplicitType=Code10 }

    { 119 ;2   ;Field     ;
                Name=Assigned User ID;
                ToolTipML=ENU=Specifies the ID of the user who is responsible for the document.;
                ApplicationArea=#Advanced;
                SourceExpr="Assigned User ID";
                Importance=Additional;
                ImplicitType=Code50 }

    { 5   ;2   ;Field     ;
                Name=Job Queue Status;
                ToolTipML=ENU=Specifies the status of a job queue entry or task that handles the posting of sales credit memos.;
                ApplicationArea=#All;
                SourceExpr="Job Queue Status";
                Importance=Additional;
                Visible=JobQueueUsed;
                ImplicitType=Option }

    { 110 ;2   ;Field     ;
                Name=Status;
                ToolTipML=ENU=Specifies whether the document is open, waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.;
                ApplicationArea=#Suite;
                SourceExpr=Status;
                Importance=Additional;
                ImplicitType=Option }

    { 14  ;2   ;Field     ;
                Name=Applies-to Doc. Type;
                ToolTipML=ENU=Specifies the type of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Doc. Type";
                Importance=Additional;
                ImplicitType=Option }

    { 16  ;2   ;Field     ;
                Name=Applies-to Doc. No.;
                ToolTipML=ENU=Specifies the number of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Doc. No.";
                Importance=Additional;
                ImplicitType=Code20 }

    { 94  ;2   ;Field     ;
                Name=Applies-to ID;
                ToolTipML=ENU=Specifies the ID of entries that will be applied to when you choose the Apply Entries action.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to ID";
                Importance=Additional;
                ImplicitType=Code50 }

    { 48  ;1   ;Part      ;
                Name=SalesLines;
                ApplicationArea=#Basic,#Suite;
                SubPageLink="Document No."=FIELD("No.");
                PagePartID="Sales Cr. Memo Subform";
                Enabled="Sell-to Customer No." <> '';
                Editable="Sell-to Customer No." <> '';
                UpdatePropagation=Both }

    { 1906801201;1;Group  ;
                Name=Credit Memo Details;
                CaptionML=ENU=Credit Memo Details;
                GroupType=Group }

    { 91  ;2   ;Field     ;
                Name=Currency Code;
                ToolTipML=ENU=Specifies the currency of amounts on the sales document.;
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               if "Posting Date" <> 0D then
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               else
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               if ChangeExchangeRate.RUNMODAL = ACTION::OK then begin
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               end;
                               CLEAR(ChangeExchangeRate);
                             END;

                ImplicitType=Code10 }

    { 96  ;2   ;Field     ;
                Name=Shipment Date;
                ToolTipML=ENU=Specifies when items on the document are shipped or were shipped. A shipment date is usually calculated from a requested delivery date plus lead time.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipment Date";
                Importance=Promoted;
                ImplicitType=Date }

    { 100 ;2   ;Field     ;
                Name=Prices Including VAT;
                ToolTipML=ENU=Specifies if the Unit Price and Line Amount fields on document lines should be shown with or without VAT.;
                ApplicationArea=#Advanced;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;

                ImplicitType=Boolean }

    { 30  ;2   ;Field     ;
                Name=VAT Bus. Posting Group;
                ToolTipML=ENU=Specifies the customer's VAT specification to link transactions made for this customer to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=VAR
                             TempApplicationAreaSetup@1000 : TEMPORARY Record "Application Area Setup";
                           BEGIN
                             if TempApplicationAreaSetup.IsFoundationEnabled then
                               SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                ImplicitType=Code20 }

    { 131 ;2   ;Field     ;
                Name=Payment Terms Code;
                ToolTipML=ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the sales document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Terms Code";
                Importance=Promoted;
                ImplicitType=Code10 }

    { 142 ;2   ;Field     ;
                Name=Payment Method Code;
                ToolTipML=ENU=Specifies how the customer must pay for products on the sales document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Method Code";
                Importance=Additional;
                ImplicitType=Code10 }

    { 44  ;2   ;Field     ;
                Name=Transaction Type;
                ToolTipML=ENU=Specifies the type of transaction that the sales document represents, for the purpose of reporting to Intrastat.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Transaction Type";
                ImplicitType=Code10 }

    { 74  ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;

                ImplicitType=Code20 }

    { 78  ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;

                ImplicitType=Code20 }

    { 135 ;2   ;Field     ;
                Name=Payment Discount %;
                ToolTipML=ENU=Specifies the payment discount percentage granted if the customer pays on or before the date entered in the Pmt. Discount Date field.;
                ApplicationArea=#Advanced;
                SourceExpr="Payment Discount %";
                ImplicitType=Decimal }

    { 137 ;2   ;Field     ;
                Name=Pmt. Discount Date;
                ToolTipML=ENU=Specifies the date on which the amount in the entry must be paid for a payment discount to be granted.;
                ApplicationArea=#Advanced;
                SourceExpr="Pmt. Discount Date";
                Importance=Additional;
                ImplicitType=Date }

    { 80  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the location from where inventory items to the customer on the sales document are to be shipped by default.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Importance=Additional;
                ImplicitType=Code10 }

    { 13  ;2   ;Field     ;
                Name=EU 3-Party Trade;
                ToolTipML=ENU=Specifies if the sales document is part of a three-party trade.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="EU 3-Party Trade";
                ImplicitType=Boolean }

    { 1905885101;1;Group  ;
                Name=Billing;
                CaptionML=ENU=Billing;
                GroupType=Group }

    { 77  ;2   ;Group     ;
                Name=Bill-to;
                CaptionML=ENU=Bill-to;
                GroupType=Group }

    { 20  ;3   ;Field     ;
                Name=Bill-to Name;
                CaptionML=ENU=Name;
                ToolTipML=ENU=Specifies the customer to whom you will send the sales invoice, when different from the customer that you are selling to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Name";
                Importance=Promoted;
                OnValidate=BEGIN
                             if GETFILTER("Bill-to Customer No.") = xRec."Bill-to Customer No." then
                               if "Bill-to Customer No." <> xRec."Bill-to Customer No." then
                                 SETRANGE("Bill-to Customer No.");

                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;

                ImplicitType=Text50 }

    { 22  ;3   ;Field     ;
                Name=Bill-to Address;
                CaptionML=ENU=Address;
                ToolTipML=ENU=Specifies the address of the customer that you will send the invoice to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Address";
                Importance=Additional;
                ImplicitType=Text50 }

    { 24  ;3   ;Field     ;
                Name=Bill-to Address 2;
                CaptionML=ENU=Address 2;
                ToolTipML=ENU=Specifies additional address information.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Address 2";
                Importance=Additional;
                ImplicitType=Text50 }

    { 75  ;3   ;Field     ;
                Name=Bill-to Post Code;
                CaptionML=ENU=Post Code;
                ToolTipML=ENU=Specifies the postal code.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Post Code";
                Importance=Additional;
                ImplicitType=Code20 }

    { 26  ;3   ;Field     ;
                Name=Bill-to City;
                CaptionML=ENU=City;
                ToolTipML=ENU=Specifies the city of the customer on the sales document.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to City";
                Importance=Additional;
                ImplicitType=Text30 }

    { 124 ;3   ;Field     ;
                Name=Bill-to Contact No.;
                CaptionML=ENU=Contact No;
                ToolTipML=ENU=Specifies the number of the contact the invoice will be sent to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Contact No.";
                Importance=Additional;
                ImplicitType=Code20 }

    { 28  ;3   ;Field     ;
                Name=Bill-to Contact;
                CaptionML=ENU=Contact;
                ToolTipML=ENU=Specifies the name of the person you should contact at the customer who you are sending the invoice to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Contact";
                ImplicitType=Text50 }

    { 1907468901;1;Group  ;
                Name=Foreign Trade;
                CaptionML=ENU=Foreign Trade }

    { 89  ;2   ;Field     ;
                Name=Transaction Specification;
                ToolTipML=ENU=Specifies a code for the sales document's transaction specification, for the purpose of reporting to INTRASTAT.;
                ApplicationArea=#Advanced;
                SourceExpr="Transaction Specification";
                ImplicitType=Code10 }

    { 46  ;2   ;Field     ;
                Name=Transport Method;
                ToolTipML=ENU=Specifies the transport method, for the purpose of reporting to INTRASTAT.;
                ApplicationArea=#Advanced;
                SourceExpr="Transport Method";
                ImplicitType=Code10 }

    { 85  ;2   ;Field     ;
                Name=Exit Point;
                ToolTipML=ENU=Specifies the point of exit through which you ship the items out of your country/region, for reporting to Intrastat.;
                ApplicationArea=#Advanced;
                SourceExpr="Exit Point";
                ImplicitType=Code10 }

    { 87  ;2   ;Field     ;
                Name=Area;
                ToolTipML=ENU=Specifies the area of the customer's address, for the purpose of reporting to INTRASTAT.;
                ApplicationArea=#Advanced;
                SourceExpr=Area;
                ImplicitType=Code10 }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 19  ;1   ;Part      ;
                Name=Part19;
                ApplicationArea=#All;
                SubPageLink="Table ID"=CONST(36),
                            "Document Type"=FIELD("Document Type"),
                            "Document No."=FIELD("No.");
                PagePartID="Pending Approval FactBox";
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1903720907;1;Part   ;
                Name=Part1903720907;
                ApplicationArea=#Advanced;
                SubPageLink="No."=FIELD("Sell-to Customer No.");
                PagePartID="Sales Hist. Sell-to FactBox";
                Visible=FALSE;
                PartType=Page }

    { 1907234507;1;Part   ;
                Name=Part1907234507;
                ApplicationArea=#Advanced;
                SubPageLink="No."=FIELD("Sell-to Customer No.");
                PagePartID="Sales Hist. Bill-to FactBox";
                Visible=FALSE;
                PartType=Page }

    { 1902018507;1;Part   ;
                Name=Part1902018507;
                ApplicationArea=#Advanced;
                SubPageLink="No."=FIELD("Bill-to Customer No.");
                PagePartID="Customer Statistics FactBox";
                PartType=Page }

    { 1900316107;1;Part   ;
                Name=Part1900316107;
                ApplicationArea=#Advanced;
                SubPageLink="No."=FIELD("Sell-to Customer No.");
                PagePartID="Customer Details FactBox";
                PartType=Page }

    { 1906127307;1;Part   ;
                Name=Part1906127307;
                ApplicationArea=#Advanced;
                SubPageLink="Document Type"=FIELD("Document Type"),
                            "Document No."=FIELD("Document No."),
                            "Line No."=FIELD("Line No.");
                PagePartID="Sales Line FactBox";
                ProviderID=48;
                Visible=FALSE;
                PartType=Page }

    { 1906354007;1;Part   ;
                Name=ApprovalFactBox;
                ApplicationArea=#Advanced;
                PagePartID="Approval FactBox";
                Visible=FALSE;
                PartType=Page }

    { 33  ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                ApplicationArea=#Advanced;
                PagePartID="Incoming Doc. Attach. FactBox";
                Visible=FALSE;
                PartType=Page;
                ShowFilter=false }

    { 1907012907;1;Part   ;
                Name=Part1907012907;
                ApplicationArea=#Advanced;
                SubPageLink="No."=FIELD("No.");
                PagePartID="Resource Details FactBox";
                ProviderID=48;
                Visible=FALSE;
                PartType=Page }

    { 50  ;1   ;Part      ;
                Name=WorkflowStatus;
                ApplicationArea=#All;
                PagePartID="Workflow Status FactBox";
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=false }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      CopySalesDoc@1003 : Report "Copy Sales Document";
      MoveNegSalesLines@1008 : Report "Move Negative Sales Lines";
      ReportPrint@1004 : Codeunit "Test Report-Print";
      UserMgt@1005 : Codeunit "User Setup Management";
      SalesCalcDiscByType@1006 : Codeunit "Sales - Calc Discount By Type";
      LinesInstructionMgt@1017 : Codeunit "Lines Instruction Mgt.";
      ChangeExchangeRate@1002 : Page "Change Exchange Rate";
      JobQueueVisible@1000 : Boolean INDATASET;
      JobQueueUsed@1014 : Boolean INDATASET;
      HasIncomingDocument@1012 : Boolean;
      DocNoVisible@1001 : Boolean;
      ExternalDocNoMandatory@1007 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1016 : Boolean;
      OpenApprovalEntriesExist@1015 : Boolean;
      ShowWorkflowStatus@1009 : Boolean;
      OpenPostedSalesCrMemoQst@1018 : TextConst 'ENU=The credit memo has been posted and archived.\\Do you want to open the posted credit memo from the Posted Sales Credit Memos window?';
      CanCancelApprovalForRecord@1010 : Boolean;
      DocumentIsPosted@1011 : Boolean;
      IsCustomerOrContactNotEmpty@1013 : Boolean;
      CanRequestApprovalForFlow@1020 : Boolean;
      CanCancelApprovalForFlow@1019 : Boolean;

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    VAR
      SalesHeader@1003 : Record "Sales Header";
      SalesCrMemoHeader@1004 : Record "Sales Cr.Memo Header";
      OfficeMgt@1005 : Codeunit "Office Management";
      InstructionMgt@1006 : Codeunit "Instruction Mgt.";
      PreAssignedNo@1001 : Code[20];
      IsScheduledPosting@1002 : Boolean;
    BEGIN
      CheckSalesCheckAllLinesHaveQuantityAssigned;
      PreAssignedNo := "No.";

      SendToPosting(PostingCodeunitID);

      IsScheduledPosting := "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting";
      DocumentIsPosted := (not SalesHeader.GET("Document Type","No.")) or IsScheduledPosting;

      if IsScheduledPosting then
        CurrPage.CLOSE;
      CurrPage.UPDATE(false);

      if PostingCodeunitID <> CODEUNIT::"Sales-Post (Yes/No)" then
        exit;

      if OfficeMgt.IsAvailable then begin
        SalesCrMemoHeader.SETRANGE("Pre-Assigned No.",PreAssignedNo);
        if SalesCrMemoHeader.FINDFIRST then
          PAGE.RUN(PAGE::"Posted Sales Credit Memo",SalesCrMemoHeader);
      end else
        if InstructionMgt.IsEnabled(InstructionMgt.ShowPostedConfirmationMessageCode) then
          ShowPostedConfirmationMessage(PreAssignedNo);
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.SalesLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@19011896();
    BEGIN
      CurrPage.SalesLines.PAGE.UpdateForm(true);
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SetDocNoVisible@2();
    VAR
      DocumentNoVisibility@1000 : Codeunit DocumentNoVisibility;
      DocType@1003 : 'Quote,Order,Invoice,"Credit Memo","Blanket Order","Return Order",Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.SalesDocumentNoIsVisible(DocType::"Credit Memo","No.");
    END;

    LOCAL PROCEDURE SetExtDocNoMandatoryCondition@3();
    VAR
      SalesReceivablesSetup@1000 : Record "Sales & Receivables Setup";
    BEGIN
      SalesReceivablesSetup.GET;
      ExternalDocNoMandatory := SalesReceivablesSetup."Ext. Doc. No. Mandatory"
    END;

    [Internal]
    PROCEDURE ShowPreview@5();
    VAR
      SalesPostYesNo@1000 : Codeunit "Sales-Post (Yes/No)";
    BEGIN
      SalesPostYesNo.Preview(Rec);
    END;

    LOCAL PROCEDURE SetControlAppearance@8();
    VAR
      ApprovalsMgmt@1002 : Codeunit "Approvals Mgmt.";
      WorkflowWebhookMgt@1000 : Codeunit "Workflow Webhook Management";
    BEGIN
      JobQueueVisible := "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting";
      HasIncomingDocument := "Incoming Document Entry No." <> 0;
      SetExtDocNoMandatoryCondition;

      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
      IsCustomerOrContactNotEmpty := ("Sell-to Customer No." <> '') or ("Sell-to Contact No." <> '');

      WorkflowWebhookMgt.GetCanRequestAndCanCancel(RECORDID,CanRequestApprovalForFlow,CanCancelApprovalForFlow);
    END;

    LOCAL PROCEDURE CheckSalesCheckAllLinesHaveQuantityAssigned@6();
    VAR
      ApplicationAreaSetup@1000 : Record "Application Area Setup";
    BEGIN
      if ApplicationAreaSetup.IsFoundationEnabled then
        LinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@7(PreAssignedNo@1001 : Code[20]);
    VAR
      SalesCrMemoHeader@1000 : Record "Sales Cr.Memo Header";
      InstructionMgt@1002 : Codeunit "Instruction Mgt.";
    BEGIN
      SalesCrMemoHeader.SETRANGE("Pre-Assigned No.",PreAssignedNo);
      if SalesCrMemoHeader.FINDFIRST then
        if InstructionMgt.ShowConfirm(OpenPostedSalesCrMemoQst,InstructionMgt.ShowPostedConfirmationMessageCode) then
          PAGE.RUN(PAGE::"Posted Sales Credit Memo",SalesCrMemoHeader);
    END;

    [Integration]
    [External]
    LOCAL PROCEDURE OnBeforeStatisticsAction@9(VAR SalesHeader@1000 : Record "Sales Header";VAR Handled@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

