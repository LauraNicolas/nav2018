OBJECT Table 1524 Workflow Rule
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Workflow Rule;
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Integer       ;AutoIncrement=true;
                                                   CaptionML=ENU=ID }
    { 2   ;   ;Table ID            ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE ("Object Type"=FILTER(Table));
                                                   CaptionML=ENU=Table ID }
    { 3   ;   ;Field No.           ;Integer       ;TableRelation=Field."No." WHERE (TableNo=FIELD("Table ID"));
                                                   CaptionML=ENU=Field No. }
    { 4   ;   ;Operator            ;Option        ;InitValue=Changed;
                                                   CaptionML=ENU=Operator;
                                                   OptionCaptionML=ENU=Increased,Decreased,Changed;
                                                   OptionString=Increased,Decreased,Changed }
    { 8   ;   ;Workflow Code       ;Code20        ;TableRelation=Workflow.Code;
                                                   CaptionML=ENU=Workflow Code }
    { 9   ;   ;Workflow Step ID    ;Integer       ;TableRelation="Workflow Step".ID WHERE ("Workflow Code"=FIELD("Workflow Code"));
                                                   CaptionML=ENU=Workflow Step ID }
    { 10  ;   ;Field Caption       ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD("Table ID"),
                                                                                                   "No."=FIELD("Field No.")));
                                                   CaptionML=ENU=Field Caption }
    { 11  ;   ;Workflow Step Instance ID;GUID     ;TableRelation="Workflow Step Instance".ID;
                                                   CaptionML=ENU=Workflow Step Instance ID }
  }
  KEYS
  {
    {    ;"Workflow Code","Workflow Step ID",ID   ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      RuleDisplayTxt@1000 : TextConst '@@@="%1 = The field; %2 = type of operation; (Amount is Increased)";ENU=%1 is %2';

    [External]
    PROCEDURE EvaluateRule@3(RecRef@1000 : RecordRef;xRecRef@1004 : RecordRef) : Boolean;
    VAR
      FieldRef@1001 : FieldRef;
      xFieldRef@1005 : FieldRef;
      Value@1002 : Variant;
      xValue@1003 : Variant;
    BEGIN
      if not RecRef.FIELDEXIST("Field No.") then
        exit(false);

      FieldRef := RecRef.FIELD("Field No.");
      xFieldRef := xRecRef.FIELD("Field No.");

      Value := FieldRef.VALUE;
      xValue := xFieldRef.VALUE;

      exit(CompareValues(xValue,Value));
    END;

    [External]
    PROCEDURE CompareValues@7(xValue@1000 : Variant;Value@1001 : Variant) : Boolean;
    BEGIN
      if Value.ISINTEGER or Value.ISBIGINTEGER or Value.ISDECIMAL or Value.ISDURATION then
        exit(CompareNumbers(xValue,Value));

      if Value.ISDATE then
        exit(CompareDates(xValue,Value));

      if Value.ISTIME then
        exit(CompareTimes(xValue,Value));

      if Value.ISDATETIME then
        exit(CompareDateTimes(xValue,Value));

      exit(CompareText(FORMAT(xValue,0,2),FORMAT(Value,0,2)));
    END;

    LOCAL PROCEDURE CompareNumbers@1(xValue@1000 : Decimal;Value@1002 : Decimal) : Boolean;
    BEGIN
      case Operator of
        Operator::Increased:
          exit(xValue < Value);
        Operator::Decreased:
          exit(xValue > Value);
        Operator::Changed:
          exit(xValue <> Value);
        else
          exit(false);
      end;
    END;

    LOCAL PROCEDURE CompareDates@5(xValue@1000 : Date;Value@1002 : Date) : Boolean;
    BEGIN
      exit(CompareDateTimes(CREATEDATETIME(xValue,000000T),CREATEDATETIME(Value,000000T)));
    END;

    LOCAL PROCEDURE CompareTimes@6(xValue@1000 : Time;Value@1002 : Time) : Boolean;
    VAR
      ReferenceDate@1001 : Date;
    BEGIN
      ReferenceDate := TODAY;
      exit(CompareDateTimes(CREATEDATETIME(ReferenceDate,xValue),CREATEDATETIME(ReferenceDate,Value)));
    END;

    LOCAL PROCEDURE CompareDateTimes@11(xValue@1000 : DateTime;Value@1002 : DateTime) : Boolean;
    BEGIN
      case Operator of
        Operator::Increased:
          exit(xValue - Value < 0);
        Operator::Decreased:
          exit(xValue - Value > 0);
        Operator::Changed:
          exit(xValue <> Value);
        else
          exit(false);
      end;
    END;

    LOCAL PROCEDURE CompareText@4(xValue@1000 : Text;Value@1002 : Text) : Boolean;
    BEGIN
      case Operator of
        Operator::Increased:
          exit(xValue < Value);
        Operator::Decreased:
          exit(xValue > Value);
        Operator::Changed:
          exit(xValue <> Value);
        else
          exit(false);
      end;
    END;

    [External]
    PROCEDURE GetDisplayText@2() : Text;
    BEGIN
      CALCFIELDS("Field Caption");
      exit(STRSUBSTNO(RuleDisplayTxt,"Field Caption",Operator));
    END;

    BEGIN
    END.
  }
}

