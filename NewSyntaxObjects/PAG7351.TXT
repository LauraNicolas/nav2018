OBJECT Page 7351 Movement Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Movement Worksheet;
    SaveValues=true;
    SourceTable="Whse. Worksheet Line";
    DelayedInsert=true;
    SourceTableView=SORTING("Worksheet Template Name",Name,"Location Code","Sorting Sequence No.");
    DataCaptionFields=Name;
    PageType=Worksheet;
    RefreshOnActivate=true;
    OnOpenPage=VAR
                 WhseWkshSelected@1000 : Boolean;
               BEGIN
                 OpenedFromBatch := (Name <> '') and ("Worksheet Template Name" = '');
                 if OpenedFromBatch then begin
                   CurrentWkshName := Name;
                   CurrentLocationCode := "Location Code";
                   OpenWhseWksh(Rec,CurrentWkshTemplateName,CurrentWkshName,CurrentLocationCode);
                   exit;
                 end;
                 TemplateSelection(PAGE::"Movement Worksheet",2,Rec,WhseWkshSelected);
                 if not WhseWkshSelected then
                   ERROR('');
                 OpenWhseWksh(Rec,CurrentWkshTemplateName,CurrentWkshName,CurrentLocationCode);
               END;

    OnAfterGetRecord=BEGIN
                       if not ItemUOM.GET("Item No.","From Unit of Measure Code") then
                         ItemUOM.INIT;
                     END;

    OnNewRecord=BEGIN
                  SetUpNewLine(
                    CurrentWkshTemplateName,CurrentWkshName,
                    CurrentLocationCode,CurrentSortingMethod,xRec."Line No.");
                END;

    OnInsertRecord=BEGIN
                     "Sorting Sequence No." := GetSortSeqNo(CurrentSortingMethod);
                   END;

    OnModifyRecord=BEGIN
                     "Sorting Sequence No." := GetSortSeqNo(CurrentSortingMethod);
                   END;

    OnDeleteRecord=BEGIN
                     ItemDescription := '';
                   END;

    OnAfterGetCurrRecord=BEGIN
                           GetItem("Item No.",ItemDescription);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 41      ;1   ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 42      ;2   ;Action    ;
                      Name=ItemTrackingLines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      ToolTipML=ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 29      ;1   ;ActionGroup;
                      Name=&Item;
                      CaptionML=ENU=&Item;
                      Image=Item }
      { 30      ;2   ;Action    ;
                      Name=Card;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Card;
                      ToolTipML=ENU=View or change detailed information about the record on the document or journal line.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Item Card";
                      RunPageLink="No."=FIELD("Item No.");
                      Image=EditLines }
      { 4       ;2   ;Action    ;
                      Name=Warehouse Entries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Warehouse Entries;
                      ToolTipML=ENU=View completed warehouse activities related to the document.;
                      ApplicationArea=#Warehouse;
                      RunObject=Page "Warehouse Entries";
                      RunPageView=SORTING("Item No.","Location Code","Variant Code");
                      RunPageLink="Item No."=FIELD("Item No."),
                                  "Variant Code"=FIELD("Variant Code"),
                                  "Location Code"=FIELD("Location Code");
                      Promoted=true;
                      Image=BinLedger;
                      PromotedCategory=Process }
      { 31      ;2   ;Action    ;
                      Name=Ledger E&ntries;
                      CaptionML=ENU=Ledger E&ntries;
                      ToolTipML=ENU=View the history of transactions that have been posted for the selected record.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Item Ledger Entries";
                      RunPageView=SORTING("Item No.");
                      RunPageLink="Item No."=FIELD("Item No."),
                                  "Variant Code"=FIELD("Variant Code"),
                                  "Location Code"=FIELD("Location Code");
                      Promoted=true;
                      Image=ItemLedger;
                      PromotedCategory=Process }
      { 44      ;2   ;Action    ;
                      Name=Bin Contents;
                      CaptionML=ENU=Bin Contents;
                      ToolTipML=ENU=View items in the bin if the selected line contains a bin code.;
                      ApplicationArea=#Warehouse;
                      RunObject=Page "Bin Contents List";
                      RunPageView=SORTING("Location Code","Item No.","Variant Code");
                      RunPageLink="Location Code"=FIELD("Location Code"),
                                  "Item No."=FIELD("Item No."),
                                  "Variant Code"=FIELD("Variant Code");
                      Promoted=true;
                      Image=BinContent;
                      PromotedCategory=Process }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 32      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 5       ;2   ;Action    ;
                      Name=Autofill Qty. to Handle;
                      CaptionML=ENU=Autofill Qty. to Handle;
                      ToolTipML=ENU=Have the system enter the outstanding quantity in the Qty. to Handle field.;
                      ApplicationArea=#Warehouse;
                      Promoted=true;
                      Image=AutofillQtyToHandle;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 WhseWkshLine@1000 : Record "Whse. Worksheet Line";
                               BEGIN
                                 WhseWkshLine.COPY(Rec);
                                 AutofillQtyToHandle(WhseWkshLine);
                               END;
                                }
      { 6       ;2   ;Action    ;
                      Name=Delete Qty. to Handle;
                      CaptionML=ENU=Delete Qty. to Handle;
                      ToolTipML=ENU="Have the system clear the value in the Qty. To Handle field. ";
                      ApplicationArea=#Warehouse;
                      Promoted=true;
                      Image=DeleteQtyToHandle;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 WhseWkshLine@1000 : Record "Whse. Worksheet Line";
                               BEGIN
                                 WhseWkshLine.COPY(Rec);
                                 DeleteQtyToHandle(WhseWkshLine);
                               END;
                                }
      { 54      ;2   ;Separator ;
                      Name=Separator54 }
      { 2       ;2   ;Action    ;
                      Name=Calculate Bin &Replenishment;
                      Ellipsis=true;
                      CaptionML=ENU=Calculate Bin &Replenishment;
                      ApplicationArea=#Warehouse;
                      Promoted=true;
                      Image=CalculateBinReplenishment;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Location@1001 : Record Location;
                                 BinContent@1003 : Record "Bin Content";
                                 ReplenishBinContent@1000 : Report "Calculate Bin Replenishment";
                               BEGIN
                                 Location.GET("Location Code");
                                 ReplenishBinContent.InitializeRequest(
                                   "Worksheet Template Name",Name,"Location Code",
                                   Location."Allow Breakbulk",false,false);

                                 BinContent.SETRANGE("Location Code",Location.Code);
                                 ReplenishBinContent.SETTABLEVIEW(BinContent);
                                 ReplenishBinContent.RUN;
                                 CLEAR(ReplenishBinContent);
                               END;
                                }
      { 27      ;2   ;Action    ;
                      Name=Get Bin Content;
                      AccessByPermission=TableData "Bin Content"=R;
                      Ellipsis=true;
                      CaptionML=ENU=Get Bin Content;
                      ToolTipML=ENU=Use a function to create transfer lines with items to put away or pick based on the actual content in the specified bin.;
                      ApplicationArea=#Warehouse;
                      Promoted=true;
                      Image=GetBinContent;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 BinContent@1001 : Record "Bin Content";
                                 DummyRec@1000 : Record "Whse. Internal Put-away Header";
                                 GetBinContent@1002 : Report "Whse. Get Bin Content";
                               BEGIN
                                 BinContent.SETRANGE("Location Code","Location Code");
                                 GetBinContent.SETTABLEVIEW(BinContent);
                                 GetBinContent.InitializeReport(Rec,DummyRec,0);
                                 GetBinContent.RUN;
                               END;
                                }
      { 3       ;2   ;Separator ;
                      Name=Separator3 }
      { 55      ;2   ;Action    ;
                      Name=Create Movement;
                      Ellipsis=true;
                      CaptionML=ENU=Create Movement;
                      ApplicationArea=#Warehouse;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=CreateMovement;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 WhseWkshLine@1002 : Record "Whse. Worksheet Line";
                               BEGIN
                                 WhseWkshLine.SETFILTER(Quantity,'>0');
                                 WhseWkshLine.COPYFILTERS(Rec);
                                 if WhseWkshLine.FINDFIRST then
                                   MovementCreate(WhseWkshLine)
                                 else
                                   ERROR(Text001);

                                 WhseWkshLine.RESET;
                                 COPYFILTERS(WhseWkshLine);
                                 FILTERGROUP(2);
                                 SETRANGE("Worksheet Template Name","Worksheet Template Name");
                                 SETRANGE(Name,Name);
                                 SETRANGE("Location Code",CurrentLocationCode);
                                 FILTERGROUP(0);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 25  ;1   ;Field     ;
                Name=CurrentWkshName;
                Lookup=true;
                CaptionML=ENU=Name;
                ToolTipML=ENU=Specifies the name of the worksheet in which you plan movements of inventory in the warehouse.;
                ApplicationArea=#Warehouse;
                SourceExpr=CurrentWkshName;
                OnValidate=BEGIN
                             CheckWhseWkshName(CurrentWkshName,CurrentLocationCode,Rec);
                             CurrentWkshNameOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           LookupWhseWkshName(Rec,CurrentWkshName,CurrentLocationCode);
                           CurrPage.UPDATE(false);
                         END;

                ImplicitType=Code10 }

    { 9   ;1   ;Field     ;
                Name=CurrentLocationCode;
                CaptionML=ENU=Location Code;
                ToolTipML=ENU=Specifies the location where you plan to move inventory in the warehouse.;
                ApplicationArea=#Warehouse;
                SourceExpr=CurrentLocationCode;
                Editable=FALSE;
                ImplicitType=Code10 }

    { 56  ;1   ;Field     ;
                Name=CurrentSortingMethod;
                CaptionML=ENU=Sorting Method;
                ToolTipML=ENU=Specifies the method by which the movement worksheet lines are sorted.;
                OptionCaptionML=ENU=" ,Item,,To Bin Code,Due Date";
                ApplicationArea=#Warehouse;
                SourceExpr=CurrentSortingMethod;
                OnValidate=BEGIN
                             CurrentSortingMethodOnAfterVal;
                           END;

                ImplicitType=Option }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 39  ;2   ;Field     ;
                Name=Item No.;
                ToolTipML=ENU=Specifies the number of the item that the line concerns.;
                ApplicationArea=#Warehouse;
                SourceExpr="Item No.";
                OnValidate=BEGIN
                             GetItem("Item No.",ItemDescription);
                             ItemNoOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 63  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 10  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the description of the item on the line.;
                ApplicationArea=#Warehouse;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 16  ;2   ;Field     ;
                Name=From Zone Code;
                ToolTipML=ENU=Specifies the zone from which the items should be taken.;
                ApplicationArea=#Warehouse;
                SourceExpr="From Zone Code";
                ImplicitType=Code10 }

    { 14  ;2   ;Field     ;
                Name=From Bin Code;
                ToolTipML=ENU=Specifies the code of the bin from which the items should be taken.;
                ApplicationArea=#Warehouse;
                SourceExpr="From Bin Code";
                ImplicitType=Code20 }

    { 7   ;2   ;Field     ;
                Name=To Zone Code;
                ToolTipML=ENU=Specifies the code of the zone in which the items should be placed.;
                ApplicationArea=#Warehouse;
                SourceExpr="To Zone Code";
                ImplicitType=Code10 }

    { 35  ;2   ;Field     ;
                Name=To Bin Code;
                ToolTipML=ENU=Specifies the code of the bin into which the items should be placed.;
                ApplicationArea=#Warehouse;
                SourceExpr="To Bin Code";
                OnValidate=BEGIN
                             ToBinCodeOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 12  ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies how many units of the item you want to move.;
                ApplicationArea=#Warehouse;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 47  ;2   ;Field     ;
                Name=Qty. (Base);
                ToolTipML=ENU=Specifies the quantity that should be handled in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. (Base)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 48  ;2   ;Field     ;
                Name=Qty. Outstanding;
                ToolTipML=ENU=Specifies the quantity that still needs to be handled.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Outstanding";
                ImplicitType=Decimal }

    { 28  ;2   ;Field     ;
                Name=Qty. Outstanding (Base);
                ToolTipML=ENU=Specifies the quantity that still needs to be handled, expressed in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Outstanding (Base)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 18  ;2   ;Field     ;
                Name=Qty. to Handle;
                ToolTipML=ENU=Specifies how many units of the item you want to move.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. to Handle";
                OnValidate=BEGIN
                             QtytoHandleOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 51  ;2   ;Field     ;
                Name=Qty. to Handle (Base);
                ToolTipML=ENU=Specifies the quantity you want to handle, in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. to Handle (Base)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 53  ;2   ;Field     ;
                Name=Qty. Handled;
                ToolTipML=ENU=Specifies the quantity that has been handled and registered.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Handled";
                ImplicitType=Decimal }

    { 59  ;2   ;Field     ;
                Name=Qty. Handled (Base);
                ToolTipML=ENU=Specifies the quantity that has been handled and registered, in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Handled (Base)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 33  ;2   ;Field     ;
                Name=Due Date;
                ToolTipML=ENU=Specifies the due date of the line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Due Date";
                OnValidate=BEGIN
                             DueDateOnAfterValidate;
                           END;

                ImplicitType=Date }

    { 67  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Warehouse;
                SourceExpr="Unit of Measure Code";
                ImplicitType=Code10 }

    { 20  ;2   ;Field     ;
                Name=Available Qty. to Move;
                CaptionML=ENU=Available Qty. to Move;
                ToolTipML=ENU=Specifies how many item units are available to be moved from the From bin, taking into account other warehouse movements for the item.;
                ApplicationArea=#Warehouse;
                DecimalPlaces=0:5;
                SourceExpr=ROUND(CheckAvailQtytoMove / ItemUOM."Qty. per Unit of Measure",0.00001);
                Editable=FALSE }

    { 22  ;1   ;Group     ;
                Name=Group22 }

    { 1900669001;2;Group  ;
                Name=Group1900669001;
                GroupType=FixedLayout }

    { 1901652601;3;Group  ;
                Name=Item Description;
                CaptionML=ENU=Item Description }

    { 23  ;4   ;Field     ;
                Name=ItemDescription;
                ApplicationArea=#Warehouse;
                SourceExpr=ItemDescription;
                Editable=FALSE;
                ImplicitType=Text50;
                ShowCaption=false }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 8   ;1   ;Part      ;
                Name=Part8;
                ApplicationArea=#ItemTracking;
                SubPageLink="Item No."=FIELD("Item No."),
                            "Variant Code"=FIELD("Variant Code"),
                            "Location Code"=FIELD("Location Code");
                PagePartID="Lot Numbers by Bin FactBox";
                Visible=FALSE;
                PartType=Page }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ItemUOM@1007 : Record "Item Unit of Measure";
      CurrentWkshTemplateName@1005 : Code[10];
      CurrentWkshName@1006 : Code[10];
      CurrentLocationCode@1003 : Code[10];
      CurrentSortingMethod@1000 : '" ",Item,,"Shelf/Bin No.","Due Date"';
      ItemDescription@1004 : Text[50];
      Text001@1002 : TextConst 'ENU=There is nothing to handle.';
      OpenedFromBatch@1001 : Boolean;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      if CurrentSortingMethod = CurrentSortingMethod::Item then
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ToBinCodeOnAfterValidate@19037373();
    BEGIN
      if CurrentSortingMethod = CurrentSortingMethod::"Shelf/Bin No." then
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE QtytoHandleOnAfterValidate@19067087();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DueDateOnAfterValidate@19011747();
    BEGIN
      if CurrentSortingMethod = CurrentSortingMethod::"Due Date" then
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CurrentWkshNameOnAfterValidate@19009494();
    BEGIN
      CurrPage.SAVERECORD;
      SetWhseWkshName(CurrentWkshName,CurrentLocationCode,Rec);
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE CurrentSortingMethodOnAfterVal@19078525();
    BEGIN
      SortWhseWkshLines(
        CurrentWkshTemplateName,CurrentWkshName,
        CurrentLocationCode,CurrentSortingMethod);
      CurrPage.UPDATE(false);
      SETCURRENTKEY("Worksheet Template Name",Name,"Location Code","Sorting Sequence No.");
    END;

    BEGIN
    END.
  }
}

