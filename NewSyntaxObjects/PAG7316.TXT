OBJECT Page 7316 Warehouse Movement Subform
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    InsertAllowed=false;
    LinksAllowed=false;
    SourceTable="Warehouse Activity Line";
    SourceTableView=SORTING("Activity Type","No.","Sorting Sequence No.")
                    WHERE("Activity Type"=CONST(Movement));
    PageType=ListPart;
    OnDeleteRecord=BEGIN
                     CurrPage.UPDATE(false);
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 1900724104;2 ;Action    ;
                      Name=&Split Line;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=&Split Line;
                      ToolTipML=ENU=Enable that the items can be taken or placed in more than one bin, for example, because the quantity in the suggested bin is insufficient to pick or move or there is not enough room to put away the required quantity.;
                      ApplicationArea=#Warehouse;
                      Image=Split;
                      OnAction=BEGIN
                                 CallSplitLine;
                               END;
                                }
      { 1903867104;2 ;Action    ;
                      Name=ChangeUnitOfMeasure;
                      Ellipsis=true;
                      CaptionML=ENU=&Change Unit Of Measure;
                      ToolTipML=ENU=Specify which unit of measure you want to change during the warehouse activity, for example, because you want to ship an item in boxes although you store it in pallets.;
                      ApplicationArea=#Advanced;
                      Image=UnitConversions;
                      OnAction=BEGIN
                                 ChangeUOM;
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1900206104;2 ;Action    ;
                      Name=Bin Contents List;
                      CaptionML=ENU=Bin Contents List;
                      ToolTipML=ENU=View the contents of the selected bin and the parameters that define how items are routed through the bin.;
                      ApplicationArea=#Warehouse;
                      Image=BinContent;
                      OnAction=BEGIN
                                 ShowBinContents;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                Name=Action Type;
                ToolTipML=ENU=Specifies the action type for the warehouse activity line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Action Type";
                ImplicitType=Option }

    { 22  ;2   ;Field     ;
                Name=Item No.;
                ToolTipML=ENU=Specifies the item number of the item to be handled, such as picked or put away.;
                ApplicationArea=#Warehouse;
                SourceExpr="Item No.";
                ImplicitType=Code20 }

    { 24  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 30  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the item on the line.;
                ApplicationArea=#Warehouse;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 14  ;2   ;Field     ;
                Name=Serial No.;
                ToolTipML=ENU=Specifies the serial number to handle in the document.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Serial No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             SerialNoOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 18  ;2   ;Field     ;
                Name=Lot No.;
                ToolTipML=ENU=Specifies the lot number to handle in the document.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Lot No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             LotNoOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 1106000000;2;Field  ;
                Name=Expiration Date;
                ToolTipML=ENU=Specifies the expiration date of the serial/lot numbers if you are putting items away.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Expiration Date";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Date }

    { 2   ;2   ;Field     ;
                Name=Zone Code;
                CaptionML=ENU=Zone Code;
                ToolTipML=ENU=Specifies the zone code where the bin on this line is located.;
                ApplicationArea=#Warehouse;
                SourceExpr="Zone Code";
                ImplicitType=Code10 }

    { 6   ;2   ;Field     ;
                Name=Bin Code;
                CaptionML=ENU=Bin Code;
                ToolTipML=ENU=Specifies the bin where items on the line are handled.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                OnValidate=BEGIN
                             BinCodeOnAfterValidate;
                           END;

                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name=Special Equipment Code;
                CaptionML=ENU=Special Equipment Code;
                ToolTipML=ENU=Specifies the code of the equipment required when you perform the action on the line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Special Equipment Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 10  ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the quantity of the item to be handled, such as received, put-away, or assigned.;
                ApplicationArea=#Warehouse;
                SourceExpr=Quantity;
                ImplicitType=Decimal }

    { 36  ;2   ;Field     ;
                Name=Qty. (Base);
                ToolTipML=ENU=Specifies the quantity of the item to be handled, in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. (Base)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 46  ;2   ;Field     ;
                Name=Qty. to Handle;
                ToolTipML=ENU=Specifies how many units to handle in this warehouse activity.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. to Handle";
                OnValidate=BEGIN
                             QtytoHandleOnAfterValidate;
                           END;

                ImplicitType=Decimal }

    { 16  ;2   ;Field     ;
                Name=Qty. to Handle (Base);
                ToolTipML=ENU=Specifies the quantity of items to be handled in this warehouse activity.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. to Handle (Base)";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 12  ;2   ;Field     ;
                Name=Qty. Outstanding;
                ToolTipML=ENU=Specifies the number of items that have not yet been handled for this warehouse activity line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Outstanding";
                ImplicitType=Decimal }

    { 38  ;2   ;Field     ;
                Name=Qty. Outstanding (Base);
                ToolTipML=ENU=Specifies the number of items, expressed in the base unit of measure, that have not yet been handled for this warehouse activity line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Outstanding (Base)";
                ImplicitType=Decimal }

    { 50  ;2   ;Field     ;
                Name=Due Date;
                ToolTipML=ENU=Specifies the date when the warehouse activity must be completed.;
                ApplicationArea=#Warehouse;
                SourceExpr="Due Date";
                ImplicitType=Date }

    { 26  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Warehouse;
                SourceExpr="Unit of Measure Code";
                ImplicitType=Code10 }

    { 34  ;2   ;Field     ;
                Name=Qty. per Unit of Measure;
                ToolTipML=ENU=Specifies the quantity per unit of measure of the item on the line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. per Unit of Measure";
                ImplicitType=Decimal }

    { 32  ;2   ;Field     ;
                Name=Weight;
                ToolTipML=ENU=Specifies the weight of one item unit when measured in the specified unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr=Weight;
                Visible=FALSE;
                ImplicitType=Decimal }

    { 28  ;2   ;Field     ;
                Name=Cubage;
                ToolTipML=ENU=Specifies the total cubage of items on the line, calculated based on the Quantity field.;
                ApplicationArea=#Warehouse;
                SourceExpr=Cubage;
                Visible=FALSE;
                ImplicitType=Decimal }

  }
  CODE
  {

    [External]
    PROCEDURE AutofillQtyToHandle@10();
    VAR
      WhseActivLine@1000 : Record "Warehouse Activity Line";
    BEGIN
      WhseActivLine.COPY(Rec);
      AutofillQtyToHandle(WhseActivLine);
    END;

    [External]
    PROCEDURE DeleteQtyToHandle@4();
    VAR
      WhseActivLine@1001 : Record "Warehouse Activity Line";
    BEGIN
      WhseActivLine.COPY(Rec);
      DeleteQtyToHandle(WhseActivLine);
    END;

    LOCAL PROCEDURE CallSplitLine@6();
    VAR
      WhseActivLine@1000 : Record "Warehouse Activity Line";
    BEGIN
      WhseActivLine.COPY(Rec);
      SplitLine(WhseActivLine);
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE ChangeUOM@1();
    VAR
      WhseActLine@1001 : Record "Warehouse Activity Line";
      WhseChangeOUM@1000 : Report "Whse. Change Unit of Measure";
    BEGIN
      TESTFIELD("Action Type");
      TESTFIELD("Breakbulk No.",0);
      TESTFIELD("Qty. to Handle");
      WhseChangeOUM.DefWhseActLine(Rec);
      WhseChangeOUM.RUNMODAL;
      if WhseChangeOUM.ChangeUOMCode(WhseActLine) = true then
        ChangeUOMCode(Rec,WhseActLine);
      CLEAR(WhseChangeOUM);
      CurrPage.UPDATE(false);
    END;

    [External]
    PROCEDURE RegisterActivityYesNo@2();
    VAR
      WhseActivLine@1001 : Record "Warehouse Activity Line";
    BEGIN
      WhseActivLine.COPY(Rec);
      WhseActivLine.FILTERGROUP(3);
      WhseActivLine.SETRANGE(Breakbulk);
      WhseActivLine.FILTERGROUP(0);
      CODEUNIT.RUN(CODEUNIT::"Whse.-Act.-Register (Yes/No)",WhseActivLine);
      RESET;
      SETCURRENTKEY("Activity Type","No.","Sorting Sequence No.");
      FILTERGROUP(4);
      SETRANGE("Activity Type","Activity Type");
      SETRANGE("No.","No.");
      FILTERGROUP(3);
      SETRANGE(Breakbulk,false);
      FILTERGROUP(0);
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE ShowBinContents@7300();
    VAR
      BinContent@1000 : Record "Bin Content";
    BEGIN
      BinContent.ShowBinContents("Location Code","Item No.","Variant Code",'');
    END;

    LOCAL PROCEDURE SerialNoOnAfterValidate@19074494();
    VAR
      ItemTrackingMgt@1000 : Codeunit "Item Tracking Management";
      ExpDate@1106000002 : Date;
      EntriesExist@1106000000 : Boolean;
    BEGIN
      if "Serial No." <> '' then
        ExpDate := ItemTrackingMgt.ExistingExpirationDate("Item No.","Variant Code",
            "Lot No.","Serial No.",false,EntriesExist);

      if ExpDate <> 0D then
        "Expiration Date" := ExpDate;
    END;

    LOCAL PROCEDURE LotNoOnAfterValidate@19045288();
    VAR
      ItemTrackingMgt@1000 : Codeunit "Item Tracking Management";
      ExpDate@1106000002 : Date;
      EntriesExist@1106000000 : Boolean;
    BEGIN
      if "Lot No." <> '' then
        ExpDate := ItemTrackingMgt.ExistingExpirationDate("Item No.","Variant Code",
            "Lot No.","Serial No.",false,EntriesExist);

      if ExpDate <> 0D then
        "Expiration Date" := ExpDate;
    END;

    LOCAL PROCEDURE BinCodeOnAfterValidate@19073508();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE QtytoHandleOnAfterValidate@19067087();
    BEGIN
      CurrPage.SAVERECORD;
    END;

    BEGIN
    END.
  }
}

