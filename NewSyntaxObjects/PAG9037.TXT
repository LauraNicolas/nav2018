OBJECT Page 9037 Accountant Activities
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Activities;
    SourceTable="Finance Cue";
    PageType=CardPart;
    RefreshOnActivate=true;
    OnInit=VAR
             PermissionManager@1000 : Codeunit "Permission Manager";
           BEGIN
             ReplayGettingStartedVisible := false;
             if PermissionManager.SoftwareAsAService then
               ReplayGettingStartedVisible := true;
           END;

    OnOpenPage=VAR
                 RoleCenterNotificationMgt@1000 : Codeunit "Role Center Notification Mgt.";
               BEGIN
                 RESET;
                 if not GET then begin
                   INIT;
                   INSERT;
                 end;

                 SETFILTER("Due Date Filter",'<=%1',WORKDATE);
                 SETFILTER("Overdue Date Filter",'<%1',WORKDATE);
                 SETFILTER("Due Next Week Filter",'%1..%2',CALCDATE('<1D>',WORKDATE),CALCDATE('<1W>',WORKDATE));
                 SETRANGE("User ID Filter",USERID);

                 ShowProductVideosActivities := true;

                 RoleCenterNotificationMgt.ShowNotifications;

                 if PageNotifier.IsAvailable then begin
                   PageNotifier := PageNotifier.Create;
                   PageNotifier.NotifyPageReady;
                 end;
               END;

    OnAfterGetRecord=BEGIN
                       CalculateCueFieldValues;
                       SetActivityGroupVisibility;
                     END;

    OnAfterGetCurrRecord=VAR
                           RoleCenterNotificationMgt@1000 : Codeunit "Role Center Notification Mgt.";
                           PermissionManager@1001 : Codeunit "Permission Manager";
                         BEGIN
                           ReplayGettingStartedVisible := false;
                           if PermissionManager.SoftwareAsAService then
                             ReplayGettingStartedVisible := true;
                           RoleCenterNotificationMgt.HideEvaluationNotificationAfterStartingTrial;
                         END;

    ActionList=ACTIONS
    {
      { 22      ;    ;ActionContainer;
                      Name=ActionContainer22;
                      ActionContainerType=ActionItems }
      { 24      ;1   ;Action    ;
                      Name=Set Up Cues;
                      CaptionML=ENU=Set Up Cues;
                      ToolTipML=ENU=Set up the cues (status tiles) related to the role.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Setup;
                      OnAction=VAR
                                 CueSetup@1001 : Codeunit "Cue Setup";
                                 CueRecordRef@1000 : RecordRef;
                               BEGIN
                                 CueRecordRef.GETTABLE(Rec);
                                 CueSetup.OpenCustomizePageForCurrentUser(CueRecordRef.NUMBER);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 6   ;1   ;Group     ;
                Name=Payments;
                CaptionML=ENU=Payments;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 1       ;0   ;Action    ;
                                  Name=Edit Cash Receipt Journal;
                                  CaptionML=ENU=Edit Cash Receipt Journal;
                                  ToolTipML=ENU=Register received payments in a cash receipt journal that may already contain journal lines.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Cash Receipt Journal" }
                  { 3       ;0   ;Action    ;
                                  Name=New Sales Credit Memo;
                                  CaptionML=ENU=New Sales Credit Memo;
                                  ToolTipML=ENU=Process a return or refund by creating a new sales credit memo.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Sales Credit Memo";
                                  RunPageMode=Create }
                  { 4       ;0   ;Action    ;
                                  Name=Edit Payment Journal;
                                  CaptionML=ENU=Edit Payment Journal;
                                  ToolTipML=ENU=Pay your vendors by filling the payment journal automatically according to payments due, and potentially export all payment to your bank for automatic processing.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Payment Journal" }
                  { 5       ;0   ;Action    ;
                                  Name=New Purchase Credit Memo;
                                  CaptionML=ENU=New Purchase Credit Memo;
                                  ToolTipML=ENU=Create a new purchase credit memo so you can manage returned items to a vendor.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Purchase Credit Memo";
                                  RunPageMode=Create }
                }
                 }

    { 7   ;2   ;Field     ;
                Name=Overdue Purchase Documents;
                ToolTipML=ENU=Specifies the number of purchase invoices where your payment is late.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Overdue Purchase Documents";
                DrillDownPageID="Vendor Ledger Entries";
                ImplicitType=Integer }

    { 9   ;2   ;Field     ;
                Name=Purchase Documents Due Today;
                ToolTipML=ENU=Specifies the number of purchase invoices that are due for payment today.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Purchase Documents Due Today";
                DrillDownPageID="Vendor Ledger Entries";
                ImplicitType=Integer }

    { 16  ;2   ;Field     ;
                Name=Purch. Invoices Due Next Week;
                ToolTipML=ENU=Specifies the number of payments to vendors that are due next week.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Purch. Invoices Due Next Week";
                ImplicitType=Integer }

    { 17  ;2   ;Field     ;
                Name=Purchase Discounts Next Week;
                ToolTipML=ENU=Specifies the number of purchase discounts that are available next week, for example, because the discount expires after next week.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Purchase Discounts Next Week";
                ImplicitType=Integer }

    { 19  ;1   ;Group     ;
                Name=Document Approvals;
                CaptionML=ENU=Document Approvals;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 25      ;0   ;Action    ;
                                  Name=Create Reminders...;
                                  CaptionML=ENU=Create Reminders...;
                                  ToolTipML=ENU=Remind your customers of late payments.;
                                  ApplicationArea=#Advanced;
                                  RunObject=Report "Create Reminders";
                                  Image=CreateReminders }
                  { 26      ;0   ;Action    ;
                                  Name=Create Finance Charge Memos...;
                                  CaptionML=ENU=Create Finance Charge Memos...;
                                  ToolTipML=ENU=Issue finance charge memos to your customers as a consequence of late payment.;
                                  ApplicationArea=#Advanced;
                                  RunObject=Report "Create Finance Charge Memos";
                                  Image=CreateFinanceChargememo }
                }
                 }

    { 23  ;2   ;Field     ;
                Name=POs Pending Approval;
                ToolTipML=ENU=Specifies the number of purchase orders that are pending approval.;
                ApplicationArea=#Suite;
                SourceExpr="POs Pending Approval";
                DrillDownPageID="Purchase Order List";
                ImplicitType=Integer }

    { 20  ;2   ;Field     ;
                Name=SOs Pending Approval;
                ToolTipML=ENU=Specifies the number of sales orders that are pending approval.;
                ApplicationArea=#Suite;
                SourceExpr="SOs Pending Approval";
                DrillDownPageID="Sales Order List";
                ImplicitType=Integer }

    { 14  ;1   ;Group     ;
                Name=Financials;
                CaptionML=ENU=Financials;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 15      ;    ;Action    ;
                                  Name=New Payment Reconciliation Journal;
                                  CaptionML=ENU=New Payment Reconciliation Journal;
                                  ToolTipML=ENU=Reconcile unpaid documents automatically with their related bank transactions by importing bank a bank statement feed or file.;
                                  ApplicationArea=#Basic,#Suite;
                                  OnAction=VAR
                                             BankAccReconciliation@1000 : Record "Bank Acc. Reconciliation";
                                           BEGIN
                                             BankAccReconciliation.OpenNewWorksheet
                                           END;
                                            }
                }
                 }

    { 29  ;2   ;Field     ;
                Name=Cash Accounts Balance;
                ToolTipML=ENU=Specifies the sum of the accounts that have the cash account category.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cash Accounts Balance";
                Image=Cash;
                DrillDownPageID="Chart of Accounts";
                OnDrillDown=VAR
                              ActivitiesMgt@1000 : Codeunit "Activities Mgt.";
                            BEGIN
                              ActivitiesMgt.DrillDownCalcCashAccountsBalances;
                            END;

                ImplicitType=Decimal }

    { 11  ;2   ;Field     ;
                Name=Non-Applied Payments;
                CaptionML=ENU=Payment Reconciliation Journals;
                ToolTipML=ENU=Specifies journals where you can reconcile unpaid documents automatically with their related bank transactions by importing bank a bank statement feed or file.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Non-Applied Payments";
                Image=Cash;
                DrillDownPageID="Pmt. Reconciliation Journals";
                ImplicitType=Integer }

    { 2   ;1   ;Group     ;
                Name=Incoming Documents;
                CaptionML=ENU=Incoming Documents;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 12      ;    ;Action    ;
                                  Name=CheckForOCR;
                                  CaptionML=ENU=Receive from OCR Service;
                                  ToolTipML=ENU=Process new incoming electronic documents that have been created by the OCR service and that you can convert to, for example, purchase invoices in Dynamics 365.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Codeunit "OCR - Receive from Service";
                                  RunPageMode=View }
                }
                 }

    { 8   ;2   ;Field     ;
                Name=New Incoming Documents;
                ToolTipML=ENU=Specifies the number of new incoming documents in the company. The documents are filtered by today's date.;
                ApplicationArea=#Advanced;
                SourceExpr="New Incoming Documents";
                DrillDownPageID="Incoming Documents";
                ImplicitType=Integer }

    { 10  ;2   ;Field     ;
                Name=Approved Incoming Documents;
                ToolTipML=ENU=Specifies the number of approved incoming documents in the company. The documents are filtered by today's date.;
                ApplicationArea=#Advanced;
                SourceExpr="Approved Incoming Documents";
                DrillDownPageID="Incoming Documents";
                ImplicitType=Integer }

    { 13  ;2   ;Field     ;
                Name=OCR Completed;
                ToolTipML=ENU=Specifies that incoming document records that have been created by the OCR service.;
                ApplicationArea=#Advanced;
                SourceExpr="OCR Completed";
                DrillDownPageID="Incoming Documents";
                ImplicitType=Integer }

    { 35  ;1   ;Group     ;
                Name=My User Tasks;
                CaptionML=ENU=My User Tasks;
                GroupType=CueGroup }

    { 34  ;2   ;Field     ;
                Name=Pending Tasks;
                CaptionML=ENU=Pending User Tasks;
                ToolTipML=ENU=Specifies the number of pending tasks that are assigned to you.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pending Tasks";
                DrillDownPageID="User Task List";
                ImplicitType=Integer }

    { 18  ;1   ;Group     ;
                Name=New Journal Entries;
                CaptionML=ENU=New Journal Entries;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 21      ;    ;Action    ;
                                  Name=New G/L Journal Entry;
                                  CaptionML=ENU=New G/L Journal Entry;
                                  ToolTipML=ENU=Prepare to post any transaction to the company books.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "General Journal";
                                  Image=TileNew }
                  { 28      ;    ;Action    ;
                                  Name=New Payment Journal Entry;
                                  CaptionML=ENU=New Payment Journal Entry;
                                  ToolTipML=ENU=Pay your vendors by filling the payment journal automatically according to payments due, and potentially export all payment to your bank for automatic processing.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Payment Journal";
                                  Image=TileNew }
                }
                 }

    { 33  ;1   ;Group     ;
                Name=Product Videos;
                CaptionML=ENU=Product Videos;
                Visible=ShowProductVideosActivities;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 32      ;    ;Action    ;
                                  Name=Product Videos;
                                  CaptionML=ENU=Product Videos;
                                  ToolTipML=ENU=Open a list of videos that showcase some of the product capabilities.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page "Product Videos";
                                  Image=TileVideo }
                }
                 }

    { 31  ;1   ;Group     ;
                Name=Get started;
                CaptionML=ENU=Get started;
                Visible=ReplayGettingStartedVisible;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 27      ;    ;Action    ;
                                  Name=ShowStartInMyCompany;
                                  CaptionML=ENU=Try with my own data;
                                  ToolTipML=ENU=Set up My Company with the settings you choose. We'll show you how, it's easy.;
                                  ApplicationArea=#Basic,#Suite;
                                  Visible=FALSE;
                                  Image=TileSettings;
                                  OnAction=BEGIN
                                             if UserTours.IsAvailable and O365GettingStartedMgt.AreUserToursEnabled then
                                               UserTours.StartUserTour(O365GettingStartedMgt.GetChangeCompanyTourID);
                                           END;
                                            }
                  { 30      ;    ;Action    ;
                                  Name=ReplayGettingStarted;
                                  CaptionML=ENU=Play Getting Started;
                                  ToolTipML=ENU=Show the Getting Started guide again.;
                                  ApplicationArea=#Basic,#Suite;
                                  Image=TileVideo;
                                  OnAction=VAR
                                             O365GettingStarted@1000 : Record "O365 Getting Started";
                                           BEGIN
                                             if O365GettingStarted.GET(USERID,CURRENTCLIENTTYPE) then begin
                                               O365GettingStarted."Tour in Progress" := false;
                                               O365GettingStarted."Current Page" := 1;
                                               O365GettingStarted.MODIFY;
                                               COMMIT;
                                             end;

                                             O365GettingStartedMgt.LaunchWizard(true,false);
                                           END;
                                            }
                }
                 }

  }
  CODE
  {
    VAR
      O365GettingStartedMgt@1002 : Codeunit "O365 Getting Started Mgt.";
      PageNotifier@1000 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.PageNotifier" WITHEVENTS RUNONCLIENT;
      UserTours@1003 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=11.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.UserTours" WITHEVENTS RUNONCLIENT;
      ShowProductVideosActivities@1005 : Boolean;
      HideNpsDialog@1006 : Boolean;
      ReplayGettingStartedVisible@1001 : Boolean;
      WhatIsNewTourVisible@1007 : Boolean;

    LOCAL PROCEDURE CalculateCueFieldValues@1();
    VAR
      ActivitiesMgt@1000 : Codeunit "Activities Mgt.";
    BEGIN
      if FIELDACTIVE("Cash Accounts Balance") then
        "Cash Accounts Balance" := ActivitiesMgt.CalcCashAccountsBalances;
    END;

    LOCAL PROCEDURE SetActivityGroupVisibility@12();
    VAR
      ProductVideosActivitiesMgt@1000 : Codeunit "Product Videos Activities Mgt.";
    BEGIN
      ShowProductVideosActivities := ProductVideosActivitiesMgt.IsActivitiesVisible;
    END;

    LOCAL PROCEDURE StartWhatIsNewTour@45(hasTourCompleted@1000 : Boolean);
    VAR
      O365UserTours@1001 : Record "User Tours";
      TourID@1003 : Integer;
    BEGIN
      TourID := O365GettingStartedMgt.GetWhatIsNewTourID;

      if O365UserTours.AlreadyCompleted(TourID) then
        exit;

      if not hasTourCompleted then begin
        UserTours.StartUserTour(TourID);
        WhatIsNewTourVisible := true;
        exit;
      end;

      if WhatIsNewTourVisible then begin
        O365UserTours.MarkAsCompleted(TourID);
        WhatIsNewTourVisible := false;
      end;
    END;

    EVENT PageNotifier@1000::PageReady@9();
    VAR
      NetPromoterScoreMgt@1000 : Codeunit "Net Promoter Score Mgt.";
    BEGIN
      NetPromoterScoreMgt.ShowNpsDialog;
    END;

    EVENT UserTours@1003::ShowTourWizard@15(hasTourCompleted@1000 : Boolean);
    VAR
      NetPromoterScoreMgt@1001 : Codeunit "Net Promoter Score Mgt.";
    BEGIN
      if O365GettingStartedMgt.IsGettingStartedSupported then
        if O365GettingStartedMgt.LaunchWizard(false,hasTourCompleted) then
          exit;

      if (not hasTourCompleted) and (not HideNpsDialog) then
        if NetPromoterScoreMgt.ShowNpsDialog then begin
          HideNpsDialog := true;
          exit;
        end;

      StartWhatIsNewTour(hasTourCompleted);
    END;

    EVENT UserTours@1003::IsTourInProgressResultReady@16(isInProgress@1000 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

