OBJECT Page 198 Acc. Sched. KPI WS Dimensions
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Account Schedule KPI WS Dimensions;
    SourceTable="Acc. Sched. KPI Buffer";
    PageType=List;
    SourceTableTemporary=true;
    OnOpenPage=BEGIN
                 Initialize;
                 PrecalculateData;
               END;

    OnAfterGetRecord=BEGIN
                       Number := "No.";
                     END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 20  ;2   ;Field     ;
                Name=Number;
                ToolTipML=ENU=Specifies the number of the dimension.;
                ApplicationArea=#Advanced;
                SourceExpr=Number;
                Visible=FALSE;
                ImplicitType=Integer }

    { 3   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the account schedule.;
                ApplicationArea=#Advanced;
                SourceExpr="No.";
                Visible=FALSE;
                ImplicitType=Integer }

    { 4   ;2   ;Field     ;
                Name=Date;
                ToolTipML=ENU=Specifies the date on which the KPI figures are calculated.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Date;
                ImplicitType=Date }

    { 5   ;2   ;Field     ;
                Name=Closed Period;
                ToolTipML=ENU=Specifies if the accounting period is closed or locked. KPI data for periods that are not closed or locked will be forecasted values from the general ledger budget.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Closed Period";
                ImplicitType=Boolean }

    { 6   ;2   ;Field     ;
                Name=Account Schedule Name;
                ToolTipML=ENU=Specifies the name of the account schedule that the KPI web service is based on.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account Schedule Name";
                ImplicitType=Code10 }

    { 7   ;2   ;Field     ;
                Name=KPI Code;
                ToolTipML=ENU=Specifies a code for the account-schedule KPI web service.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="KPI Code";
                ImplicitType=Code10 }

    { 8   ;2   ;Field     ;
                Name=KPI Name;
                ToolTipML=ENU=Specifies a name of the account-schedule KPI web service.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="KPI Name";
                ImplicitType=Text50 }

    { 9   ;2   ;Field     ;
                Name=Net Change Actual;
                ToolTipML=ENU=Specifies changes in the actual general ledger amount, for closed accounting periods, up until the date in the Date field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Net Change Actual";
                ImplicitType=Decimal }

    { 10  ;2   ;Field     ;
                Name=Balance at Date Actual;
                ToolTipML=ENU=Specifies the actual general ledger balance, based on closed accounting periods, on the date in the Date field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Balance at Date Actual";
                ImplicitType=Decimal }

    { 11  ;2   ;Field     ;
                Name=Net Change Budget;
                ToolTipML=ENU=Specifies changes in the budgeted general ledger amount, based on the general ledger budget, up until the date in the Date field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Net Change Budget";
                ImplicitType=Decimal }

    { 12  ;2   ;Field     ;
                Name=Balance at Date Budget;
                ToolTipML=ENU=Specifies the budgeted general ledger balance, based on the general ledger budget, on the date in the Date field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Balance at Date Budget";
                ImplicitType=Decimal }

    { 13  ;2   ;Field     ;
                Name=Net Change Actual Last Year;
                ToolTipML=ENU=Specifies actual changes in the general ledger amount, based on closed accounting periods, up until the date in the Date field in the previous accounting year.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Net Change Actual Last Year";
                ImplicitType=Decimal }

    { 14  ;2   ;Field     ;
                Name=Balance at Date Actual Last Year;
                ToolTipML=ENU=Specifies the actual general ledger balance, based on closed accounting periods, on the date in the Date field in the previous accounting year.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Balance at Date Act. Last Year";
                ImplicitType=Decimal }

    { 15  ;2   ;Field     ;
                Name=Net Change Budget Last Year;
                ToolTipML=ENU=Specifies budgeted changes in the general ledger amount, based on the general ledger budget, up until the date in the Date field in the previous year.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Net Change Budget Last Year";
                ImplicitType=Decimal }

    { 16  ;2   ;Field     ;
                Name=Balance at Date Budget Last Year;
                ToolTipML=ENU=Specifies the budgeted general ledger balance, based on the general ledger budget, on the date in the Date field in the previous accounting year.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Balance at Date Bud. Last Year";
                ImplicitType=Decimal }

    { 17  ;2   ;Field     ;
                Name=Net Change Forecast;
                ToolTipML=ENU=Specifies forecasted changes in the general ledger amount, based on open accounting periods, up until the date in the Date field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Net Change Forecast";
                ImplicitType=Decimal }

    { 18  ;2   ;Field     ;
                Name=Balance at Date Forecast;
                ToolTipML=ENU=Specifies the forecasted general ledger balance, based on open accounting periods, on the date in the Date field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Balance at Date Forecast";
                ImplicitType=Decimal }

    { 19  ;2   ;Field     ;
                Name=Dimension Set ID;
                ToolTipML=ENU=Specifies a reference to a combination of dimension values. The actual values are stored in the Dimension Set Entry table.;
                ApplicationArea=#Suite;
                SourceExpr="Dimension Set ID";
                ImplicitType=Integer }

  }
  CODE
  {
    VAR
      AccSchedKPIWebSrvSetup@1002 : Record "Acc. Sched. KPI Web Srv. Setup";
      TempAccScheduleLine@1000 : TEMPORARY Record "Acc. Schedule Line";
      AccSchedKPIDimensions@1014 : Codeunit "Acc. Sched. KPI Dimensions";
      Number@1001 : Integer;

    LOCAL PROCEDURE Initialize@1();
    VAR
      LogInManagement@1002 : Codeunit LogInManagement;
    BEGIN
      if not GUIALLOWED then
        WORKDATE := LogInManagement.GetDefaultWorkDate;

      SetupActiveAccSchedLines;
    END;

    LOCAL PROCEDURE SetupColumnLayout@11(VAR TempColumnLayout@1000 : TEMPORARY Record "Column Layout");
    BEGIN
      with TempColumnLayout do begin
        InsertTempColumn(TempColumnLayout,"Column Type"::"Net Change","Ledger Entry Type"::Entries,false);
        InsertTempColumn(TempColumnLayout,"Column Type"::"Balance at Date","Ledger Entry Type"::Entries,false);
        InsertTempColumn(TempColumnLayout,"Column Type"::"Net Change","Ledger Entry Type"::"Budget Entries",false);
        InsertTempColumn(TempColumnLayout,"Column Type"::"Balance at Date","Ledger Entry Type"::"Budget Entries",false);
        InsertTempColumn(TempColumnLayout,"Column Type"::"Net Change","Ledger Entry Type"::Entries,true);
        InsertTempColumn(TempColumnLayout,"Column Type"::"Balance at Date","Ledger Entry Type"::Entries,true);
        InsertTempColumn(TempColumnLayout,"Column Type"::"Net Change","Ledger Entry Type"::"Budget Entries",true);
        InsertTempColumn(TempColumnLayout,"Column Type"::"Balance at Date","Ledger Entry Type"::"Budget Entries",true);
      end;
    END;

    LOCAL PROCEDURE SetupActiveAccSchedLines@17();
    VAR
      AccScheduleLine@1000 : Record "Acc. Schedule Line";
      AccSchedKPIWebSrvLine@1002 : Record "Acc. Sched. KPI Web Srv. Line";
      LineNo@1003 : Integer;
    BEGIN
      AccSchedKPIWebSrvSetup.GET;
      AccSchedKPIWebSrvLine.FINDSET;
      AccScheduleLine.SETRANGE(Show,AccScheduleLine.Show::Yes);
      AccScheduleLine.SETFILTER(Totaling,'<>%1','');
      repeat
        AccScheduleLine.SETRANGE("Schedule Name",AccSchedKPIWebSrvLine."Acc. Schedule Name");
        AccScheduleLine.FINDSET;
        repeat
          LineNo += 1;
          TempAccScheduleLine := AccScheduleLine;
          TempAccScheduleLine."Line No." := LineNo;
          TempAccScheduleLine.INSERT;
        until AccScheduleLine.NEXT = 0;
      until AccSchedKPIWebSrvLine.NEXT = 0;
    END;

    LOCAL PROCEDURE InsertTempColumn@9(VAR TempColumnLayout@1003 : TEMPORARY Record "Column Layout";ColumnType@1000 : Option;EntryType@1001 : Option;LastYear@1002 : Boolean);
    BEGIN
      with TempColumnLayout do begin
        if FINDLAST then;
        INIT;
        "Line No." += 10000;
        "Column Type" := ColumnType;
        "Ledger Entry Type" := EntryType;
        if LastYear then
          EVALUATE("Comparison Date Formula",'<-1Y>');
        INSERT;
      end;
    END;

    LOCAL PROCEDURE PrecalculateData@21();
    VAR
      TempAccSchedKPIBuffer@1003 : TEMPORARY Record "Acc. Sched. KPI Buffer";
      TempColumnLayout@1005 : TEMPORARY Record "Column Layout";
      StartDate@1008 : Date;
      EndDate@1007 : Date;
      FromDate@1000 : Date;
      ToDate@1001 : Date;
      LastClosedDate@1010 : Date;
      C@1002 : Integer;
      NoOfPeriods@1009 : Integer;
      ForecastFromBudget@1004 : Boolean;
    BEGIN
      SetupColumnLayout(TempColumnLayout);

      AccSchedKPIWebSrvSetup.GetPeriodLength(NoOfPeriods,StartDate,EndDate);
      LastClosedDate := AccSchedKPIWebSrvSetup.GetLastClosedAccDate;

      for C := 1 to NoOfPeriods do begin
        FromDate := AccSchedKPIWebSrvSetup.CalcNextStartDate(StartDate,C - 1);
        ToDate := AccSchedKPIWebSrvSetup.CalcNextStartDate(FromDate,1) - 1;
        with TempAccSchedKPIBuffer do begin
          INIT;
          Date := FromDate;
          "Closed Period" := (FromDate <= LastClosedDate);
          ForecastFromBudget :=
            ((AccSchedKPIWebSrvSetup."Forecasted Values Start" =
              AccSchedKPIWebSrvSetup."Forecasted Values Start"::"After Latest Closed Period") and
             not "Closed Period") or
            ((AccSchedKPIWebSrvSetup."Forecasted Values Start" =
              AccSchedKPIWebSrvSetup."Forecasted Values Start"::"After Current Date") and
             (Date > WORKDATE));
        end;

        with TempAccScheduleLine do begin
          FINDSET;
          repeat
            if TempAccSchedKPIBuffer."Account Schedule Name" <> "Schedule Name" then begin
              InsertAccSchedulePeriod(TempAccSchedKPIBuffer,ForecastFromBudget);
              TempAccSchedKPIBuffer."Account Schedule Name" := "Schedule Name";
            end;
            TempAccSchedKPIBuffer."KPI Code" := "Row No.";
            TempAccSchedKPIBuffer."KPI Name" :=
              COPYSTR(Description,1,MAXSTRLEN(TempAccSchedKPIBuffer."KPI Name"));
            SETRANGE("Date Filter",FromDate,ToDate);
            SETRANGE("G/L Budget Filter",AccSchedKPIWebSrvSetup."G/L Budget Name");
            AccSchedKPIDimensions.GetCellDataWithDimensions(TempAccScheduleLine,TempColumnLayout,TempAccSchedKPIBuffer);
          until NEXT = 0;
        end;
        InsertAccSchedulePeriod(TempAccSchedKPIBuffer,ForecastFromBudget);
      end;
      RESET;
      FINDFIRST;
    END;

    LOCAL PROCEDURE InsertAccSchedulePeriod@14(VAR TempAccSchedKPIBuffer@1000 : TEMPORARY Record "Acc. Sched. KPI Buffer";ForecastFromBudget@1001 : Boolean);
    BEGIN
      with TempAccSchedKPIBuffer do begin
        RESET;
        if FINDSET then
          repeat
            InsertData(TempAccSchedKPIBuffer,ForecastFromBudget);
          until NEXT = 0;
        DELETEALL;
      end;
    END;

    LOCAL PROCEDURE InsertData@3(AccSchedKPIBuffer@1000 : Record "Acc. Sched. KPI Buffer";ForecastFromBudget@1001 : Boolean);
    VAR
      TempAccScheduleLine2@1002 : TEMPORARY Record "Acc. Schedule Line";
    BEGIN
      INIT;
      "No." += 1;
      TRANSFERFIELDS(AccSchedKPIBuffer,false);

      with TempAccScheduleLine2 do begin
        COPY(TempAccScheduleLine,true);
        SETRANGE("Schedule Name",AccSchedKPIBuffer."Account Schedule Name");
        SETRANGE("Row No.",AccSchedKPIBuffer."KPI Code");
        FINDFIRST;
      end;

      "Net Change Actual" :=
        AccSchedKPIDimensions.PostProcessAmount(TempAccScheduleLine2,"Net Change Actual");
      "Balance at Date Actual" :=
        AccSchedKPIDimensions.PostProcessAmount(TempAccScheduleLine2,"Balance at Date Actual");
      "Net Change Budget" :=
        AccSchedKPIDimensions.PostProcessAmount(TempAccScheduleLine2,"Net Change Budget");
      "Balance at Date Budget" :=
        AccSchedKPIDimensions.PostProcessAmount(TempAccScheduleLine2,"Balance at Date Budget");
      "Net Change Actual Last Year" :=
        AccSchedKPIDimensions.PostProcessAmount(TempAccScheduleLine2,"Net Change Actual Last Year");
      "Balance at Date Act. Last Year" :=
        AccSchedKPIDimensions.PostProcessAmount(TempAccScheduleLine2,"Balance at Date Act. Last Year");
      "Net Change Budget Last Year" :=
        AccSchedKPIDimensions.PostProcessAmount(TempAccScheduleLine2,"Net Change Budget Last Year");
      "Balance at Date Bud. Last Year" :=
        AccSchedKPIDimensions.PostProcessAmount(TempAccScheduleLine2,"Balance at Date Bud. Last Year");

      if ForecastFromBudget then begin
        "Net Change Forecast" := "Net Change Budget";
        "Balance at Date Forecast" := "Balance at Date Budget";
      end else begin
        "Net Change Forecast" := "Net Change Actual";
        "Balance at Date Forecast" := "Balance at Date Actual";
      end;
      INSERT;
    END;

    BEGIN
    END.
  }
}

