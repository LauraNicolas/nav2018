OBJECT Page 99000817 Prod. Order Routing
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Prod. Order Routing;
    SourceTable="Prod. Order Routing Line";
    DataCaptionExpr=Caption;
    PageType=List;
    OnInit=BEGIN
             ProdOrderNoVisible := true;
           END;

    OnOpenPage=BEGIN
                 ProdOrderNoVisible := true;
                 if GETFILTER("Prod. Order No.") <> '' then
                   ProdOrderNoVisible := GETRANGEMIN("Prod. Order No.") <> GETRANGEMAX("Prod. Order No.");
               END;

    OnDeleteRecord=BEGIN
                     CheckPreviousAndNext;
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 30      ;1   ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 21      ;2   ;Action    ;
                      Name=Co&mments;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Manufacturing;
                      RunObject=Page "Prod. Order Rtng. Cmt. Sh.";
                      RunPageLink=Status=FIELD(Status),
                                  "Prod. Order No."=FIELD("Prod. Order No."),
                                  "Routing Reference No."=FIELD("Routing Reference No."),
                                  "Routing No."=FIELD("Routing No."),
                                  "Operation No."=FIELD("Operation No.");
                      Image=ViewComments }
      { 29      ;2   ;Action    ;
                      Name=Tools;
                      CaptionML=ENU=Tools;
                      ApplicationArea=#Manufacturing;
                      RunObject=Page "Prod. Order Routing Tools";
                      RunPageLink=Status=FIELD(Status),
                                  "Prod. Order No."=FIELD("Prod. Order No."),
                                  "Routing Reference No."=FIELD("Routing Reference No."),
                                  "Routing No."=FIELD("Routing No."),
                                  "Operation No."=FIELD("Operation No.");
                      Image=Tools }
      { 37      ;2   ;Action    ;
                      Name=Personnel;
                      CaptionML=ENU=Personnel;
                      ApplicationArea=#Manufacturing;
                      RunObject=Page "Prod. Order Routing Personnel";
                      RunPageLink=Status=FIELD(Status),
                                  "Prod. Order No."=FIELD("Prod. Order No."),
                                  "Routing Reference No."=FIELD("Routing Reference No."),
                                  "Routing No."=FIELD("Routing No."),
                                  "Operation No."=FIELD("Operation No.");
                      Image=User }
      { 38      ;2   ;Action    ;
                      Name=Quality Measures;
                      CaptionML=ENU=Quality Measures;
                      ApplicationArea=#Manufacturing;
                      RunObject=Page "Prod. Order Rtng Qlty Meas.";
                      RunPageLink=Status=FIELD(Status),
                                  "Prod. Order No."=FIELD("Prod. Order No."),
                                  "Routing Reference No."=FIELD("Routing Reference No."),
                                  "Routing No."=FIELD("Routing No."),
                                  "Operation No."=FIELD("Operation No.");
                      Image=TaskQualityMeasure }
      { 57      ;2   ;Action    ;
                      Name=Allocated Capacity;
                      CaptionML=ENU=Allocated Capacity;
                      ApplicationArea=#Manufacturing;
                      Image=AllocatedCapacity;
                      OnAction=VAR
                                 ProdOrderCapNeed@1001 : Record "Prod. Order Capacity Need";
                               BEGIN
                                 if Status = Status::Finished then
                                   exit;
                                 ProdOrderCapNeed.SETCURRENTKEY(Type,"No.","Starting Date-Time");
                                 ProdOrderCapNeed.SETRANGE(Type,Type);
                                 ProdOrderCapNeed.SETRANGE("No.","No.");
                                 ProdOrderCapNeed.SETRANGE(Date,"Starting Date","Ending Date");
                                 ProdOrderCapNeed.SETRANGE("Prod. Order No.","Prod. Order No.");
                                 ProdOrderCapNeed.SETRANGE(Status,Status);
                                 ProdOrderCapNeed.SETRANGE("Routing Reference No.","Routing Reference No.");
                                 ProdOrderCapNeed.SETRANGE("Operation No.","Operation No.");

                                 PAGE.RUNMODAL(0,ProdOrderCapNeed);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 20      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 39      ;2   ;Action    ;
                      Name=Order &Tracking;
                      CaptionML=ENU=Order &Tracking;
                      ToolTipML=ENU=Tracks the connection of a supply to its corresponding demand. This can help you find the original demand that created a specific production order or purchase order.;
                      ApplicationArea=#Manufacturing;
                      Image=OrderTracking;
                      OnAction=VAR
                                 ProdOrderLine@1001 : Record "Prod. Order Line";
                                 TrackingForm@1002 : Page "Order Tracking";
                               BEGIN
                                 ProdOrderLine.SETRANGE(Status,Status);
                                 ProdOrderLine.SETRANGE("Prod. Order No.","Prod. Order No.");
                                 ProdOrderLine.SETRANGE("Routing No.","Routing No.");
                                 if ProdOrderLine.FINDFIRST then begin
                                   TrackingForm.SetProdOrderLine(ProdOrderLine);
                                   TrackingForm.RUNMODAL;
                                 end;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 68  ;2   ;Field     ;
                Name=Prod. Order No.;
                ToolTipML=ENU=Specifies the number of the related production order.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Prod. Order No.";
                Visible=ProdOrderNoVisible;
                ImplicitType=Code20 }

    { 58  ;2   ;Field     ;
                Name=Schedule Manually;
                ToolTipML=ENU=Specifies that the underlying capacity need is recalculated each time a change is made in the schedule of the routing.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Schedule Manually";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 2   ;2   ;Field     ;
                Name=Operation No.;
                ToolTipML=ENU=Specifies the operation number.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Operation No.";
                ImplicitType=Code10 }

    { 22  ;2   ;Field     ;
                Name=Previous Operation No.;
                ToolTipML=ENU=Specifies the previous operation number.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Previous Operation No.";
                Visible=FALSE;
                ImplicitType=Code30 }

    { 18  ;2   ;Field     ;
                Name=Next Operation No.;
                ToolTipML=ENU=Specifies the next operation number.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Next Operation No.";
                Visible=FALSE;
                ImplicitType=Code30 }

    { 4   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the type of operation.;
                ApplicationArea=#Manufacturing;
                SourceExpr=Type;
                ImplicitType=Option }

    { 6   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies a work center number or a machine number, depending on the entry in the Type field.;
                ApplicationArea=#Manufacturing;
                SourceExpr="No.";
                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the description of the operation.;
                ApplicationArea=#Manufacturing;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 48  ;2   ;Field     ;
                Name=Flushing Method;
                ToolTipML=ENU=Specifies how consumption of the item (component) is calculated and handled in production processes. Manual: Enter and post consumption in the consumption journal manually. Forward: Automatically posts consumption according to the production order component lines when the first operation starts. Backward: Automatically calculates and posts consumption according to the production order component lines when the production order is finished. Pick + Forward / Pick + Backward: Variations with warehousing.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Flushing Method";
                Visible=FALSE;
                ImplicitType=Option }

    { 42  ;2   ;Field     ;
                Name=Starting Date-Time;
                ToolTipML=ENU=Specifies the starting date and the starting time, which are combined in a format called "starting date-time".;
                ApplicationArea=#Manufacturing;
                SourceExpr="Starting Date-Time";
                ImplicitType=DateTime }

    { 10  ;2   ;Field     ;
                Name=Starting Time;
                ToolTipML=ENU=Specifies the starting time of the routing line (operation).;
                ApplicationArea=#Manufacturing;
                SourceExpr="Starting Time";
                Visible=FALSE;
                OnValidate=BEGIN
                             StartingTimeOnAfterValidate;
                           END;

                ImplicitType=Time }

    { 12  ;2   ;Field     ;
                Name=Starting Date;
                ToolTipML=ENU=Specifies the starting date of the routing line (operation).;
                ApplicationArea=#Manufacturing;
                SourceExpr="Starting Date";
                Visible=FALSE;
                OnValidate=BEGIN
                             StartingDateOnAfterValidate;
                           END;

                ImplicitType=Date }

    { 50  ;2   ;Field     ;
                Name=Ending Date-Time;
                ToolTipML=ENU=Specifies the ending date and the ending time, which are combined in a format called "ending date-time".;
                ApplicationArea=#Manufacturing;
                SourceExpr="Ending Date-Time";
                ImplicitType=DateTime }

    { 14  ;2   ;Field     ;
                Name=Ending Time;
                ToolTipML=ENU=Specifies the ending time of the routing line (operation).;
                ApplicationArea=#Manufacturing;
                SourceExpr="Ending Time";
                Visible=FALSE;
                OnValidate=BEGIN
                             EndingTimeOnAfterValidate;
                           END;

                ImplicitType=Time }

    { 16  ;2   ;Field     ;
                Name=Ending Date;
                ToolTipML=ENU=Specifies the ending date of the routing line (operation).;
                ApplicationArea=#Manufacturing;
                SourceExpr="Ending Date";
                Visible=FALSE;
                OnValidate=BEGIN
                             EndingDateOnAfterValidate;
                           END;

                ImplicitType=Date }

    { 24  ;2   ;Field     ;
                Name=Setup Time;
                ToolTipML=ENU=Specifies the setup time of the operation.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Setup Time";
                ImplicitType=Decimal }

    { 31  ;2   ;Field     ;
                Name=Run Time;
                ToolTipML=ENU=Specifies the run time of the operation.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Run Time";
                ImplicitType=Decimal }

    { 33  ;2   ;Field     ;
                Name=Wait Time;
                ToolTipML=ENU=Specifies the wait time after processing.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Wait Time";
                ImplicitType=Decimal }

    { 35  ;2   ;Field     ;
                Name=Move Time;
                ToolTipML=ENU=Specifies the move time.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Move Time";
                ImplicitType=Decimal }

    { 40  ;2   ;Field     ;
                Name=Fixed Scrap Quantity;
                ToolTipML=ENU=Specifies the fixed scrap quantity.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Fixed Scrap Quantity";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 70  ;2   ;Field     ;
                Name=Routing Link Code;
                ToolTipML=ENU=Specifies a routing link code.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Routing Link Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 43  ;2   ;Field     ;
                Name=Scrap Factor %;
                ToolTipML=ENU=Specifies the scrap factor in percent.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Scrap Factor %";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 54  ;2   ;Field     ;
                Name=Send-Ahead Quantity;
                ToolTipML=ENU=Specifies the send-ahead quantity of the operation.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Send-Ahead Quantity";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 52  ;2   ;Field     ;
                Name=Concurrent Capacities;
                ToolTipML=ENU=Specifies the con capacity of the operation.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Concurrent Capacities";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 60  ;2   ;Field     ;
                Name=Unit Cost per;
                ToolTipML=ENU=Specifies the unit cost for this operation if it is different than the unit cost on the work center or machine center card.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Unit Cost per";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 62  ;2   ;Field     ;
                Name=Expected Operation Cost Amt.;
                ToolTipML=ENU=Specifies the total cost of operations. It is automatically calculated from the capacity need, when a production order is refreshed or replanned.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Expected Operation Cost Amt.";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 64  ;2   ;Field     ;
                Name=Expected Capacity Ovhd. Cost;
                ToolTipML=ENU=Specifies the capacity overhead. It is automatically calculated from the capacity need, when a production order is refreshed or replanned.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Expected Capacity Ovhd. Cost";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 66  ;2   ;Field     ;
                Name=Expected Capacity Need;
                CaptionML=ENU=Expected Capacity Need;
                ToolTipML=ENU=Specifies the expected capacity need for the production order.;
                ApplicationArea=#Manufacturing;
                DecimalPlaces=0:5;
                SourceExpr="Expected Capacity Need" / ExpCapacityNeed;
                Visible=FALSE }

    { 45  ;2   ;Field     ;
                Name=Routing Status;
                ToolTipML=ENU=Specifies the status of the routing line, such as Planned, In Progress, or Finished.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Routing Status";
                Visible=FALSE;
                ImplicitType=Option }

    { 78  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the location where the machine or work center on the production order routing line operates.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 72  ;2   ;Field     ;
                Name=Open Shop Floor Bin Code;
                ToolTipML=ENU=Specifies the corresponding bin at the machine or work center, if the location code matches the setup of that machine or work center.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Open Shop Floor Bin Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 74  ;2   ;Field     ;
                Name=To-Production Bin Code;
                ToolTipML=ENU=Specifies the bin that holds components with a flushing method, that involves a warehouse activity to bring the items to the bin.;
                ApplicationArea=#Manufacturing;
                SourceExpr="To-Production Bin Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 76  ;2   ;Field     ;
                Name=From-Production Bin Code;
                ToolTipML=ENU=Specifies the corresponding bin at the machine or work center if the location code matches the setup of that machine or work center.;
                ApplicationArea=#Manufacturing;
                SourceExpr="From-Production Bin Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ProdOrderNoVisible@19039876 : Boolean INDATASET;

    LOCAL PROCEDURE ExpCapacityNeed@2() : Decimal;
    VAR
      WorkCenter@1001 : Record "Work Center";
      CalendarMgt@1000 : Codeunit CalendarManagement;
    BEGIN
      if "Work Center No." = '' then
        exit(1);
      WorkCenter.GET("Work Center No.");
      exit(CalendarMgt.TimeFactor(WorkCenter."Unit of Measure Code"));
    END;

    LOCAL PROCEDURE StartingTimeOnAfterValidate@19008557();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE StartingDateOnAfterValidate@19020273();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE EndingTimeOnAfterValidate@19075483();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE EndingDateOnAfterValidate@19076447();
    BEGIN
      CurrPage.UPDATE;
    END;

    [External]
    PROCEDURE Initialize@1(NewCaption@1000 : Text);
    BEGIN
      CurrPage.CAPTION(NewCaption);
    END;

    BEGIN
    END.
  }
}

