OBJECT Page 521 Application Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Application Worksheet;
    SaveValues=true;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=true;
    SourceTable="Item Ledger Entry";
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 Apply.SetCalledFromApplicationWorksheet(true);
                 ReapplyTouchedEntries; // in case OnQueryClosePage trigger was not executed due to a sudden crash

                 InventoryPeriod.IsValidDate(InventoryOpenedFrom);
                 if InventoryOpenedFrom <> 0D then
                   if GETFILTER("Posting Date") = '' then
                     SETFILTER("Posting Date",'%1..',CALCDATE('<+1D>',InventoryOpenedFrom))
                   else begin
                     if GETFILTER("Posting Date") <> STRSUBSTNO('%1..',CALCDATE('<+1D>',InventoryOpenedFrom)) then
                       SETFILTER("Posting Date",
                         STRSUBSTNO('%2&%1..',CALCDATE('<+1D>',InventoryOpenedFrom),GETFILTER("Posting Date")))
                   end;

                 UpdateFilterFields;
               END;

    OnFindRecord=VAR
                   Found@1000 : Boolean;
                 BEGIN
                   Found := FIND(Which);
                   if not Found then ;
                   exit(Found);
                 END;

    OnQueryClosePage=BEGIN
                       if Apply.AnyTouchedEntries then begin
                         if not CONFIRM(Text003) then
                           exit(false);

                         UnblockItems;
                         Reapplyall;
                       end;

                       exit(true);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateFilterFields;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 15      ;1   ;ActionGroup;
                      Name=V&iew;
                      CaptionML=ENU=V&iew;
                      Image=View }
      { 28      ;2   ;Action    ;
                      Name=AppliedEntries;
                      ShortCutKey=F9;
                      CaptionML=ENU=Applied Entries;
                      ToolTipML=ENU=View the ledger entries that have been applied to this record.;
                      ApplicationArea=#Advanced;
                      Image=Approve;
                      OnAction=BEGIN
                                 CLEAR(ApplicationsForm);
                                 ApplicationsForm.SetRecordToShow(Rec,Apply,true);
                                 ApplicationsForm.RUN;
                                 InsertUnapplyItem("Item No.");
                                 CurrPage.UPDATE;
                               END;
                                }
      { 16      ;2   ;Action    ;
                      Name=UnappliedEntries;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=Unapplied Entries;
                      ToolTipML=ENU=View entries that you have unapplied.;
                      ApplicationArea=#Advanced;
                      Image=Entries;
                      OnAction=BEGIN
                                 CLEAR(ApplicationsForm);
                                 ApplicationsForm.SetRecordToShow(Rec,Apply,false);
                                 ApplicationsForm.LOOKUPMODE := true;
                                 if ApplicationsForm.RUNMODAL = ACTION::LookupOK then
                                   ApplicationsForm.ApplyRec;

                                 CurrPage.UPDATE;
                               END;
                                }
      { 36      ;1   ;ActionGroup;
                      Name=Ent&ry;
                      CaptionML=ENU=Ent&ry;
                      Image=Entry }
      { 37      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 48      ;2   ;Action    ;
                      Name=&Value Entries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=&Value Entries;
                      ToolTipML=ENU=View the history of posted amounts that affect the value of the item. Value entries are created for every transaction with the item.;
                      ApplicationArea=#Advanced;
                      RunObject=Page "Value Entries";
                      RunPageView=SORTING("Item Ledger Entry No.");
                      RunPageLink="Item Ledger Entry No."=FIELD("Entry No.");
                      Image=ValueLedger }
      { 38      ;2   ;Action    ;
                      Name=Reservation Entries;
                      AccessByPermission=TableData Item=R;
                      CaptionML=ENU=Reservation Entries;
                      ToolTipML=ENU=View the entries for every reservation that is made, either manually or automatically.;
                      ApplicationArea=#Advanced;
                      Image=ReservationLedger;
                      OnAction=BEGIN
                                 ShowReservationEntries(true);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 30      ;1   ;ActionGroup;
                      Name=Functions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 42      ;2   ;Action    ;
                      Name=Rea&pply;
                      CaptionML=ENU=Rea&pply;
                      ToolTipML=ENU=Reapply entries that you have removed.;
                      ApplicationArea=#Advanced;
                      Image=Action;
                      OnAction=BEGIN
                                 Reapplyall;
                               END;
                                }
      { 3       ;2   ;Action    ;
                      Name=UndoApplications;
                      CaptionML=ENU=Undo Manual Changes;
                      ToolTipML=ENU=Undo your previous application change.;
                      ApplicationArea=#Advanced;
                      Image=Restore;
                      OnAction=BEGIN
                                 if Apply.ApplicationLogIsEmpty then begin
                                   MESSAGE(NothingToRevertMsg);
                                   exit;
                                 end;

                                 if CONFIRM(RevertAllQst) then begin
                                   Apply.UndoApplications;
                                   MESSAGE(RevertCompletedMsg);
                                 end
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 59  ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 68  ;2   ;Field     ;
                Name=DateFilter;
                CaptionML=ENU=Date Filter;
                ToolTipML=ENU=Specifies the date interval by which values are filtered.;
                ApplicationArea=#Advanced;
                SourceExpr=DateFilter;
                OnValidate=VAR
                             ApplicationManagement@1002 : Codeunit ApplicationManagement;
                           BEGIN
                             if ApplicationManagement.MakeDateFilter(DateFilter) = 0 then;
                             SETFILTER("Posting Date",DateFilter);
                             DateFilter := GETFILTER("Posting Date");
                             DateFilterOnAfterValidate;
                           END;

                ImplicitType=Text }

    { 73  ;2   ;Field     ;
                Name=Item Filter;
                CaptionML=ENU=Item Filter;
                ToolTipML=ENU=Specifies a filter to limit the item ledger entries in the first table of the application worksheet to those that have item numbers.;
                ApplicationArea=#Advanced;
                SourceExpr=ItemFilter;
                TableRelation=Item;
                OnValidate=BEGIN
                             ItemFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           ItemList@1002 : Page "Item List";
                         BEGIN
                           ItemList.LOOKUPMODE(true);
                           if ItemList.RUNMODAL = ACTION::LookupOK then begin
                             Text := ItemList.GetSelectionFilter;
                             exit(true);
                           end;
                         END;

                ImplicitType=Text }

    { 64  ;2   ;Field     ;
                Name=DocumentFilter;
                CaptionML=ENU=Document No. Filter;
                ToolTipML=ENU=Specifies a filter to limit the item ledger entries in the first table of the application worksheet, to those that have document numbers.;
                ApplicationArea=#Advanced;
                SourceExpr=DocumentFilter;
                OnValidate=BEGIN
                             SETFILTER("Document No.",DocumentFilter);
                             DocumentFilter := GETFILTER("Document No.");
                             DocumentFilterOnAfterValidate;
                           END;

                ImplicitType=Text }

    { 78  ;2   ;Field     ;
                Name=LocationFilter;
                CaptionML=ENU=Location Filter;
                ToolTipML=ENU=Specifies a filter to limit the item ledger entries in the first table of the application worksheet to those that have locations.;
                ApplicationArea=#Advanced;
                SourceExpr=LocationFilter;
                TableRelation=Location;
                OnValidate=BEGIN
                             SETFILTER("Location Code",LocationFilter);
                             LocationFilter := GETFILTER("Location Code");
                             LocationFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           LocationList@1002 : Page "Location List";
                         BEGIN
                           LocationList.LOOKUPMODE(true);
                           if LocationList.RUNMODAL = ACTION::LookupOK then begin
                             Text := LocationList.GetSelectionFilter;
                             exit(true);
                           end;
                         END;

                ImplicitType=Text }

    { 1   ;1   ;Group     ;
                Name=Group1;
                Enabled=TRUE;
                Editable=FALSE;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                Name=Item No.;
                ToolTipML=ENU=Specifies the number of the item in the entry.;
                ApplicationArea=#Advanced;
                SourceExpr="Item No.";
                ImplicitType=Code20 }

    { 62  ;2   ;Field     ;
                Name=Document No.;
                ToolTipML=ENU=Specifies the document number on the entry. The document is the voucher that the entry was based on, for example, a receipt.;
                ApplicationArea=#Advanced;
                SourceExpr="Document No.";
                ImplicitType=Code20 }

    { 26  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the code for the location that the entry is linked to.;
                ApplicationArea=#Advanced;
                SourceExpr="Location Code";
                ImplicitType=Code10 }

    { 6   ;2   ;Field     ;
                Name=Posting Date;
                ToolTipML=ENU=Specifies the entry's posting date.;
                ApplicationArea=#Advanced;
                SourceExpr="Posting Date";
                ImplicitType=Date }

    { 8   ;2   ;Field     ;
                Name=Entry Type;
                ToolTipML=ENU=Specifies which type of transaction that the entry is created from.;
                ApplicationArea=#Advanced;
                SourceExpr="Entry Type";
                ImplicitType=Option }

    { 31  ;2   ;Field     ;
                Name=Source Type;
                ToolTipML=ENU=Specifies the source type that applies to the source number, shown in the Source No. field.;
                ApplicationArea=#Advanced;
                SourceExpr="Source Type";
                ImplicitType=Option }

    { 44  ;2   ;Field     ;
                Name=Document Type;
                ToolTipML=ENU=Specifies what type of document was posted to create the item ledger entry.;
                ApplicationArea=#Advanced;
                SourceExpr="Document Type";
                ImplicitType=Option }

    { 46  ;2   ;Field     ;
                Name=Document Line No.;
                ToolTipML=ENU=Specifies the number of the line on the posted document that corresponds to the item ledger entry.;
                ApplicationArea=#Advanced;
                SourceExpr="Document Line No.";
                Visible=FALSE;
                ImplicitType=Integer }

    { 76  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 70  ;2   ;Field     ;
                Name=Serial No.;
                ToolTipML=ENU=Specifies a serial number if the posted item carries such a number.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Serial No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 72  ;2   ;Field     ;
                Name=Lot No.;
                ToolTipML=ENU=Specifies a lot number if the posted item carries such a number.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Lot No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 10  ;2   ;Field     ;
                Name=Source No.;
                ToolTipML=ENU=Specifies where the entry originated.;
                ApplicationArea=#Advanced;
                SourceExpr="Source No.";
                ImplicitType=Code20 }

    { 39  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the entry.;
                ApplicationArea=#Advanced;
                SourceExpr=Description;
                Visible=FALSE;
                ImplicitType=Text50 }

    { 18  ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the number of units of the item in the item entry.;
                ApplicationArea=#Advanced;
                SourceExpr=Quantity;
                ImplicitType=Decimal }

    { 20  ;2   ;Field     ;
                Name=Remaining Quantity;
                ToolTipML=ENU=Specifies the quantity in the Quantity field that remains to be processed.;
                ApplicationArea=#Advanced;
                SourceExpr="Remaining Quantity";
                ImplicitType=Decimal }

    { 22  ;2   ;Field     ;
                Name=Invoiced Quantity;
                ToolTipML=ENU=Specifies how many units of the item on the line have been invoiced.;
                ApplicationArea=#Advanced;
                SourceExpr="Invoiced Quantity";
                ImplicitType=Decimal }

    { 40  ;2   ;Field     ;
                Name=Reserved Quantity;
                ToolTipML=ENU=Specifies how many units of the item on the line have been reserved.;
                ApplicationArea=#Advanced;
                SourceExpr="Reserved Quantity";
                ImplicitType=Decimal }

    { 52  ;2   ;Field     ;
                Name=Shipped Qty. Not Returned;
                ToolTipML=ENU=Specifies the quantity for this item ledger entry that was shipped and has not yet been returned.;
                ApplicationArea=#Advanced;
                SourceExpr="Shipped Qty. Not Returned";
                ImplicitType=Decimal }

    { 50  ;2   ;Field     ;
                Name=Cost Amount (Actual);
                ToolTipML=ENU=Specifies the adjusted cost, in LCY, of the quantity posting.;
                ApplicationArea=#Advanced;
                SourceExpr="Cost Amount (Actual)";
                ImplicitType=Decimal }

    { 66  ;2   ;Field     ;
                Name=Unit Cost(LCY);
                CaptionML=ENU=Unit Cost(LCY);
                ToolTipML=ENU="Specifies the cost of one unit of the item. ";
                ApplicationArea=#Advanced;
                SourceExpr=GetUnitCostLCY;
                Visible=FALSE;
                ImplicitType=Decimal }

    { 25  ;2   ;Field     ;
                Name=Open;
                ToolTipML=ENU=Specifies whether the entry has been fully applied to.;
                ApplicationArea=#Advanced;
                SourceExpr=Open;
                ImplicitType=Boolean }

    { 34  ;2   ;Field     ;
                Name=Positive;
                ToolTipML=ENU=Specifies whether the item in the item ledge entry is positive.;
                ApplicationArea=#Advanced;
                SourceExpr=Positive;
                ImplicitType=Boolean }

    { 54  ;2   ;Field     ;
                Name=Applies-to Entry;
                ToolTipML=ENU=Specifies the item entry number that was applied to when the entry was posted, if an already-posted document was designated to be applied.;
                ApplicationArea=#Advanced;
                SourceExpr="Applies-to Entry";
                Visible=FALSE;
                ImplicitType=Integer }

    { 57  ;2   ;Field     ;
                Name=Applied Entry to Adjust;
                ToolTipML=ENU=Specifies whether there is one or more applied entries, which need to be adjusted.;
                ApplicationArea=#Advanced;
                SourceExpr="Applied Entry to Adjust";
                Visible=FALSE;
                ImplicitType=Boolean }

    { 2   ;2   ;Field     ;
                Name=Entry No.;
                ToolTipML=ENU=Specifies the entry number for the entry.;
                ApplicationArea=#Advanced;
                SourceExpr="Entry No.";
                ImplicitType=Integer }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1903523907;1;Part   ;
                Name=Part1903523907;
                ApplicationArea=#Advanced;
                SubPageLink="Entry No."=FIELD("Entry No.");
                PagePartID="Item Application FactBox";
                Visible=FALSE;
                PartType=Page }

  }
  CODE
  {
    VAR
      InventoryPeriod@1010 : Record "Inventory Period";
      TempUnapplyItem@1001 : TEMPORARY Record Item;
      Apply@1003 : Codeunit "Item Jnl.-Post Line";
      ApplicationsForm@1000 : Page "View Applied Entries";
      InventoryOpenedFrom@1011 : Date;
      DateFilter@1015 : Text;
      ItemFilter@1017 : Text;
      LocationFilter@1018 : Text;
      DocumentFilter@1020 : Text;
      Text003@1021 : TextConst 'ENU=After the window is closed, the system will check for and reapply open entries.\Do you want to close the window?';
      RevertAllQst@1002 : TextConst 'ENU=Are you sure that you want to undo all changes?';
      NothingToRevertMsg@1004 : TextConst 'ENU=Nothing to undo.';
      RevertCompletedMsg@1006 : TextConst 'ENU=The changes have been undone.';

    LOCAL PROCEDURE UpdateFilterFields@8();
    BEGIN
      ItemFilter := GETFILTER("Item No.");
      LocationFilter := GETFILTER("Location Code");
      DateFilter := GETFILTER("Posting Date");
      DocumentFilter := GETFILTER("Document No.");
    END;

    LOCAL PROCEDURE Reapplyall@1();
    BEGIN
      Apply.RedoApplications;
      Apply.CostAdjust;
      Apply.ClearApplicationLog;
    END;

    LOCAL PROCEDURE ReapplyTouchedEntries@2();
    BEGIN
      Apply.RestoreTouchedEntries(TempUnapplyItem);

      if Apply.AnyTouchedEntries then begin
        UnblockItems;
        Reapplyall;
      end;
    END;

    [External]
    PROCEDURE SetRecordToShow@7(RecordToSet@1000 : Record "Item Ledger Entry");
    BEGIN
      Rec := RecordToSet;
    END;

    LOCAL PROCEDURE LocationFilterOnAfterValidate@19070361();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DateFilterOnAfterValidate@19006009();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ItemFilterOnAfterValidate@19051257();
    BEGIN
      SETFILTER("Item No.",ItemFilter);
      ItemFilter := GETFILTER("Item No.");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE InsertUnapplyItem@3(ItemNo@1000 : Code[20]);
    BEGIN
      with TempUnapplyItem do
        if not GET(ItemNo) then begin
          INIT;
          "No." := ItemNo;
          INSERT;
        end;
    END;

    LOCAL PROCEDURE UnblockItems@6();
    VAR
      Item@1000 : Record Item;
    BEGIN
      with TempUnapplyItem do begin
        if FINDSET then
          repeat
            Item.GET("No.");
            if Item."Application Wksh. User ID" = UPPERCASE(USERID) then begin
              Item."Application Wksh. User ID" := '';
              Item.MODIFY;
            end;
          until NEXT = 0;

        DELETEALL;
      end;
    END;

    LOCAL PROCEDURE DocumentFilterOnAfterValidate@19003250();
    BEGIN
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

