OBJECT Page 9192 Company Creation Wizard
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create New Company;
    PageType=NavigatePage;
    OnInit=VAR
             ApplicationAreaSetup@1000 : Record "Application Area Setup";
           BEGIN
             LoadTopBanners;
             IsAdvancedSaaS := ApplicationAreaSetup.IsAdvancedSaaSEnabled;
           END;

    OnOpenPage=BEGIN
                 Step := Step::Start;
                 NewCompanyData := NewCompanyData::"Standard Data";
                 UpdateDataDescription;
                 EnableControls;
               END;

    OnQueryClosePage=BEGIN
                       if CloseAction = ACTION::OK then
                         if not CompanyCreated then
                           if not CONFIRM(SetupNotCompletedQst,false) then
                             ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 2       ;    ;ActionContainer;
                      Name=ActionContainer2;
                      ActionContainerType=ActionItems }
      { 3       ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=BackActionEnabled;
                      InFooterBar=true;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(true);
                               END;
                                }
      { 4       ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NextActionEnabled;
                      InFooterBar=true;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextStep(false);
                               END;
                                }
      { 5       ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FinishActionEnabled;
                      InFooterBar=true;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 6   ;1   ;Group     ;
                Name=Group6;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 7   ;2   ;Field     ;
                Name=MediaResourcesStandard;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 8   ;1   ;Group     ;
                Name=Group8;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 9   ;2   ;Field     ;
                Name=MediaResourcesDone;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=false }

    { 10  ;1   ;Group     ;
                Name=Group10;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 11  ;2   ;Group     ;
                Name=Welcome to assisted setup for creating a company;
                CaptionML=ENU=Welcome to assisted setup for creating a company;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 12  ;3   ;Group     ;
                Name=Group12;
                Visible=FirstStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=This guide will help you create a new company. }

    { 24  ;2   ;Group     ;
                Name=Let's go!;
                CaptionML=ENU=Let's go!;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next to get started. }

    { 13  ;1   ;Group     ;
                Name=Group13;
                Visible=CreationStepVisible;
                GroupType=Group }

    { 14  ;2   ;Group     ;
                Name=Specify some basic information;
                CaptionML=ENU=Specify some basic information;
                Visible=CreationStepVisible;
                GroupType=Group }

    { 20  ;3   ;Group     ;
                Name=Group20;
                GroupType=Group;
                InstructionalTextML=ENU=Enter a name for the company. }

    { 21  ;4   ;Field     ;
                Name=CompanyName;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewCompanyName;
                OnValidate=VAR
                             Company@1000 : Record Company;
                           BEGIN
                             NewCompanyName := DELCHR(NewCompanyName,'<>');
                             if Company.GET(NewCompanyName) then
                               ERROR(CompanyAlreadyExistsErr);
                           END;

                ShowMandatory=TRUE;
                ShowCaption=false }

    { 16  ;3   ;Group     ;
                Name=Select the data and setup to get started.;
                CaptionML=ENU=Select the data and setup to get started.;
                GroupType=Group }

    { 26  ;4   ;Group     ;
                Name=Group26;
                Visible=NOT IsAdvancedSaaS;
                GroupType=Group }

    { 15  ;5   ;Field     ;
                Name=CompanyData;
                OptionCaptionML=ENU=Suite Evaluation - Complete Sample Data,Suite Production - Setup Data Only,Create New - No Data;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewCompanyData;
                Visible=NOT IsAdvancedSaaS;
                OnValidate=BEGIN
                             UpdateDataDescription;
                           END;

                ShowCaption=false }

    { 27  ;4   ;Group     ;
                Name=Group27;
                Visible=IsAdvancedSaaS;
                GroupType=Group }

    { 25  ;5   ;Field     ;
                Name=CompanyFullData;
                OptionCaptionML=ENU=Suite Evaluation - Complete Sample Data,Suite Production - Setup Data Only,,Full Evaluation - Complete Sample Data,Create New - No Data;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewCompanyData;
                Visible=IsAdvancedSaaS;
                OnValidate=BEGIN
                             UpdateDataDescription;
                           END;

                ShowCaption=false }

    { 23  ;4   ;Field     ;
                Name=NewCompanyDataDescription;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewCompanyDataDescription;
                Editable=FALSE;
                MultiLine=true;
                ShowCaption=false }

    { 17  ;1   ;Group     ;
                Name=Group17;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 18  ;2   ;Group     ;
                Name=That's it!;
                CaptionML=ENU=That's it!;
                GroupType=Group }

    { 19  ;3   ;Group     ;
                Name=Group19;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Finish to create the company. This can take a few minutes to complete. }

    { 22  ;3   ;Group     ;
                Name=Group22;
                Visible=ConfigurationPackageExists;
                GroupType=Group;
                InstructionalTextML=ENU=The company is created and included in the companies list, but before you use it we need time to set up some data and settings for you. }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1000 : Record "Media Repository";
      MediaRepositoryDone@1001 : Record "Media Repository";
      MediaResourcesStandard@1030 : Record "Media Resources";
      MediaResourcesDone@1029 : Record "Media Resources";
      AssistedCompanySetup@1021 : Codeunit "Assisted Company Setup";
      Step@1002 : 'Start,Creation,Finish';
      TopBannerVisible@1003 : Boolean;
      FirstStepVisible@1004 : Boolean;
      CreationStepVisible@1005 : Boolean;
      FinalStepVisible@1006 : Boolean;
      FinishActionEnabled@1007 : Boolean;
      BackActionEnabled@1008 : Boolean;
      NextActionEnabled@1009 : Boolean;
      SetupNotCompletedQst@1013 : TextConst 'ENU=The company has not yet been created.\\Are you sure that you want to exit?';
      ConfigurationPackageExists@1022 : Boolean;
      NewCompanyName@1010 : Text[30];
      NewCompanyData@1011 : '"Evaluation Data","Standard Data",None,"Extended Data","Full No Data"';
      CompanyAlreadyExistsErr@1014 : TextConst 'ENU=A company with that name already exists. Try a different name.';
      NewCompanyDataDescription@1012 : Text;
      CompanyCreated@1015 : Boolean;
      SpecifyCompanyNameErr@1016 : TextConst 'ENU=To continue, you must specify a name for the company.';
      NoConfigurationPackageFileDefinedMsg@1020 : TextConst 'ENU=No configuration package file is defined for this company type. An empty company will be created.';
      EvaluationDataTxt@1023 : TextConst 'ENU=\Suite Experience / Cronus Company Sample Data / Setup Data\\Create a company with the Suite functionality scope containing everything you need to evaluate the product for companies with standard processes. For example, sample invoices and ledger entries allow you to view charts and reports.';
      StandardDataTxt@1024 : TextConst 'ENU=\Suite Experience / Setup Data Only\\Create a company with the Suite functionality scope containing data and setup, such as a chart of accounts and payment methods ready for use by companies with standard processes. Set up your own items and customers, and start posting right away.';
      NoDataTxt@1025 : TextConst 'ENU=\Any Experience / No Sample Data / No Setup Data\\Create a company with the desired experience for companies with any process complexity, and set it up manually.';
      ExtendedDataTxt@1019 : TextConst 'ENU=\Full Experience / Cronus Company Sample Data / Setup Data\\Create a company with the Full functionality scope containing everything you need to evaluate the product for companies with advanced processes. For example, sample items and customers allow you to start posting right away.';
      TrialPeriodTxt@1026 : TextConst 'ENU=\\You will be able to use this company for a 30-day trial period.';
      EvalPeriodTxt@1027 : TextConst 'ENU="\\You will be able to use the company to try out the product for as long as you want. "';
      IsAdvancedSaaS@1018 : Boolean;

    LOCAL PROCEDURE EnableControls@1();
    BEGIN
      ResetControls;

      case Step of
        Step::Start:
          ShowStartStep;
        Step::Creation:
          ShowCreationStep;
        Step::Finish:
          ShowFinalStep;
      end;
    END;

    LOCAL PROCEDURE FinishAction@2();
    VAR
      AssistedCompanySetup@1000 : Codeunit "Assisted Company Setup";
    BEGIN
      AssistedCompanySetup.CreateNewCompany(NewCompanyName);
      AssistedCompanySetup.SetUpNewCompany(NewCompanyName,NewCompanyData);
      CompanyCreated := true;
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@3(Backwards@1000 : Boolean);
    BEGIN
      if (Step = Step::Creation) and not Backwards then
        if NewCompanyName = '' then
          ERROR(SpecifyCompanyNameErr);
      if (Step = Step::Creation) and not Backwards then
        ValidateCompanyType;

      if Backwards then
        Step := Step - 1
      else
        Step := Step + 1;

      EnableControls;
    END;

    LOCAL PROCEDURE ShowStartStep@4();
    BEGIN
      FirstStepVisible := true;

      FinishActionEnabled := false;
      BackActionEnabled := false;
    END;

    LOCAL PROCEDURE ShowCreationStep@5();
    BEGIN
      CreationStepVisible := true;

      FinishActionEnabled := false;
    END;

    LOCAL PROCEDURE ShowFinalStep@6();
    BEGIN
      FinalStepVisible := true;
      NextActionEnabled := false;
    END;

    LOCAL PROCEDURE ResetControls@7();
    BEGIN
      FinishActionEnabled := true;
      BackActionEnabled := true;
      NextActionEnabled := true;

      FirstStepVisible := false;
      CreationStepVisible := false;
      FinalStepVisible := false;
    END;

    LOCAL PROCEDURE LoadTopBanners@8();
    BEGIN
      if MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE)) and
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE))
      then
        if MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") and
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        then
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE ValidateCompanyType@11();
    BEGIN
      ConfigurationPackageExists := false;
      if NewCompanyData in [NewCompanyData::None,NewCompanyData::"Full No Data"] then
        exit;
      ConfigurationPackageExists := AssistedCompanySetup.ExistsConfigurationPackageFile(NewCompanyData);
      if not ConfigurationPackageExists then
        MESSAGE(NoConfigurationPackageFileDefinedMsg)
    END;

    LOCAL PROCEDURE UpdateDataDescription@17();
    VAR
      TenantLicenseState@1000 : Record "Tenant License State";
    BEGIN
      case NewCompanyData of
        NewCompanyData::"Evaluation Data":
          NewCompanyDataDescription := EvaluationDataTxt;
        NewCompanyData::"Standard Data":
          NewCompanyDataDescription := StandardDataTxt;
        NewCompanyData::"Extended Data":
          NewCompanyDataDescription := ExtendedDataTxt;
        NewCompanyData::None,NewCompanyData::"Full No Data":
          NewCompanyDataDescription := NoDataTxt;
      end;

      if IsAdvancedSaaS then
        exit;
      if not TenantLicenseState.FINDLAST then
        exit;
      if TenantLicenseState.State = TenantLicenseState.State::Paid then
        exit;

      case NewCompanyData of
        NewCompanyData::"Evaluation Data":
          NewCompanyDataDescription += EvalPeriodTxt;
        NewCompanyData::"Standard Data",
        NewCompanyData::None:
          NewCompanyDataDescription += TrialPeriodTxt;
      end;
    END;

    BEGIN
    END.
  }
}

