OBJECT Codeunit 5626 FA General Report
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Fixed Asset"=rm;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Posting Date Filter';
      Text001@1001 : TextConst 'ENU=You must specify the Starting Date and the Ending Date.';
      Text002@1002 : TextConst 'ENU=The Starting Date is later than the Ending Date.';
      Text003@1003 : TextConst 'ENU=You must not specify closing dates.';
      Text004@1004 : TextConst 'ENU=You must specify the First Depreciation Date and the Last Depreciation Date.';
      Text005@1005 : TextConst 'ENU=The First Depreciation Date is later than the Last Depreciation Date.';
      Text006@1006 : TextConst 'ENU=Sorting fixed assets';
      FADeprBook@1007 : Record "FA Depreciation Book";
      FALedgEntry@1008 : Record "FA Ledger Entry";
      DepreciationCalc@1009 : Codeunit "Depreciation Calculation";

    [External]
    PROCEDURE GetLastDate@2(FANo@1000 : Code[20];PostingType@1001 : Integer;EndingDate@1002 : Date;DeprBookCode@1003 : Code[10];GLEntry@1004 : Boolean) : Date;
    VAR
      FirstLast@1005 : Text[1];
    BEGIN
      CLEARALL;
      if PostingType = 0 then
        exit(0D);
      if EndingDate = 0D then
        EndingDate := DMY2DATE(31,12,9999);
      with FALedgEntry do begin
        RESET;
        if GLEntry then begin
          SETCURRENTKEY(
            "FA No.","Depreciation Book Code","FA Posting Category","FA Posting Type","Posting Date");
          SETRANGE("Depreciation Book Code",DeprBookCode);
          SETRANGE("FA No.",FANo);
          SETRANGE("FA Posting Category","FA Posting Category"::" ");
          SETRANGE("Posting Date",0D,EndingDate);
        end else begin
          DepreciationCalc.SetFAFilter(FALedgEntry,FANo,DeprBookCode,true);
          SETRANGE("FA Posting Date",0D,EndingDate);
        end;
        FirstLast := '+';
        case PostingType of
          FADeprBook.FIELDNO("Last Acquisition Cost Date"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Acquisition Cost");
          FADeprBook.FIELDNO("Last Depreciation Date"):
            SETRANGE("FA Posting Type","FA Posting Type"::Depreciation);
          FADeprBook.FIELDNO("Last Write-Down Date"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Write-Down");
          FADeprBook.FIELDNO("Last Appreciation Date"):
            SETRANGE("FA Posting Type","FA Posting Type"::Appreciation);
          FADeprBook.FIELDNO("Last Custom 1 Date"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Custom 1");
          FADeprBook.FIELDNO("Last Custom 2 Date"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Custom 2");
          FADeprBook.FIELDNO("Last Salvage Value Date"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Salvage Value");
          FADeprBook.FIELDNO("Acquisition Date"),
          FADeprBook.FIELDNO("G/L Acquisition Date"):
            begin
              SETRANGE("FA Posting Type","FA Posting Type"::"Acquisition Cost");
              FirstLast := '-';
            end;
          FADeprBook.FIELDNO("Disposal Date"):
            begin
              SETRANGE("FA Posting Type","FA Posting Type"::"Proceeds on Disposal");
              FirstLast := '-';
            end;
        end;

        if FIND(FirstLast) then begin
          if GLEntry then
            exit("Posting Date");

          exit("FA Posting Date");
        end;
        exit(0D);
      end;
    END;

    [External]
    PROCEDURE CalcFAPostedAmount@1(FANo@1000 : Code[20];PostingType@1001 : Integer;Period@1002 : '"Before Starting Date","Net Change","at Ending Date"';StartingDate@1003 : Date;EndingDate@1004 : Date;DeprBookCode@1005 : Code[10];BeforeAmount@1006 : Decimal;UntilAmount@1007 : Decimal;OnlyReclassified@1008 : Boolean;OnlyBookValue@1009 : Boolean) : Decimal;
    BEGIN
      CLEARALL;
      if PostingType = 0 then
        exit(0);
      if EndingDate = 0D then
        EndingDate := DMY2DATE(31,12,9999);
      with FALedgEntry do begin
        case PostingType of
          FADeprBook.FIELDNO("Book Value"):
            SETCURRENTKEY("FA No.","Depreciation Book Code","Part of Book Value");
          FADeprBook.FIELDNO("Depreciable Basis"):
            SETCURRENTKEY("FA No.","Depreciation Book Code","Part of Depreciable Basis");
          else begin
            SETCURRENTKEY(
              "FA No.","Depreciation Book Code",
              "FA Posting Category","FA Posting Type","FA Posting Date");
            SETRANGE("FA Posting Category","FA Posting Category"::" ");
          end;
        end;
        SETRANGE("FA No.",FANo);
        SETRANGE("Depreciation Book Code",DeprBookCode);
        if OnlyReclassified then
          SETRANGE("Reclassification Entry",true);
        if OnlyBookValue then
          SETRANGE("Part of Book Value",true);
        case PostingType of
          FADeprBook.FIELDNO("Acquisition Cost"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Acquisition Cost");
          FADeprBook.FIELDNO(Depreciation):
            SETRANGE("FA Posting Type","FA Posting Type"::Depreciation);
          FADeprBook.FIELDNO("Write-Down"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Write-Down");
          FADeprBook.FIELDNO(Appreciation):
            SETRANGE("FA Posting Type","FA Posting Type"::Appreciation);
          FADeprBook.FIELDNO("Custom 1"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Custom 1");
          FADeprBook.FIELDNO("Custom 2"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Custom 2");
          FADeprBook.FIELDNO("Proceeds on Disposal"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Proceeds on Disposal");
          FADeprBook.FIELDNO("Gain/Loss"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Gain/Loss");
          FADeprBook.FIELDNO("Salvage Value"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Salvage Value");
          FADeprBook.FIELDNO("Book Value"):
            SETRANGE("Part of Book Value",true);
          FADeprBook.FIELDNO("Depreciable Basis"):
            SETRANGE("Part of Depreciable Basis",true);
        end;
        case Period of
          Period::"Before Starting Date":
            SETRANGE("FA Posting Date",0D,StartingDate - 1);
          Period::"Net Change":
            SETRANGE("FA Posting Date",StartingDate,EndingDate);
          Period::"at Ending Date":
            SETRANGE("FA Posting Date",0D,EndingDate);
        end;
        CALCSUMS(Amount);

        if (PostingType = FADeprBook.FIELDNO("Book Value")) or
           (PostingType = FADeprBook.FIELDNO(Depreciation))
        then
          case Period of
            Period::"Before Starting Date":
              Amount := Amount + BeforeAmount;
            Period::"Net Change":
              Amount := Amount - BeforeAmount + UntilAmount;
            Period::"at Ending Date":
              Amount := Amount + UntilAmount;
          end;
        exit(Amount);
      end;
    END;

    [External]
    PROCEDURE CalcGLPostedAmount@5(FANo@1000 : Code[20];PostingType@1001 : Integer;Period@1002 : '" ",Disposal,"Bal. Disposal"';StartingDate@1003 : Date;EndingDate@1004 : Date;DeprBookCode@1005 : Code[10]) : Decimal;
    BEGIN
      CLEARALL;
      if PostingType = 0 then
        exit(0);
      if EndingDate = 0D then
        EndingDate := DMY2DATE(31,12,9999);
      with FALedgEntry do begin
        SETCURRENTKEY(
          "FA No.","Depreciation Book Code",
          "FA Posting Category","FA Posting Type","Posting Date");
        SETRANGE("FA No.",FANo);
        SETRANGE("Depreciation Book Code",DeprBookCode);
        SETRANGE("FA Posting Category",Period);
        SETRANGE("Posting Date",StartingDate,EndingDate);
        case PostingType of
          FADeprBook.FIELDNO("Acquisition Cost"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Acquisition Cost");
          FADeprBook.FIELDNO(Depreciation):
            SETRANGE("FA Posting Type","FA Posting Type"::Depreciation);
          FADeprBook.FIELDNO("Write-Down"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Write-Down");
          FADeprBook.FIELDNO(Appreciation):
            SETRANGE("FA Posting Type","FA Posting Type"::Appreciation);
          FADeprBook.FIELDNO("Custom 1"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Custom 1");
          FADeprBook.FIELDNO("Custom 2"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Custom 2");
          FADeprBook.FIELDNO("Proceeds on Disposal"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Proceeds on Disposal");
          FADeprBook.FIELDNO("Gain/Loss"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Gain/Loss");
          FADeprBook.FIELDNO("Book Value on Disposal"):
            SETRANGE("FA Posting Type","FA Posting Type"::"Book Value on Disposal");
        end;
        CALCSUMS(Amount);
        exit(Amount);
      end;
    END;

    [External]
    PROCEDURE AppendFAPostingFilter@4(VAR FA@1000 : Record "Fixed Asset";StartingDate@1001 : Date;EndingDate@1002 : Date);
    BEGIN
      if (StartingDate = 0D) and (EndingDate = 0D) then
        exit;
      if StartingDate = 0D then
        FA.SETFILTER("FA Posting Date Filter",'..%1',EndingDate)
      else
        if EndingDate = 0D then
          FA.SETFILTER("FA Posting Date Filter",'%1..',StartingDate)
        else
          FA.SETFILTER("FA Posting Date Filter",'%1..%2',StartingDate,EndingDate);
    END;

    [External]
    PROCEDURE AppendPostingDateFilter@7(VAR FAFilter@1000 : Text;StartingDate@1001 : Date;EndingDate@1002 : Date);
    VAR
      PostingDateFilter@1003 : Text[50];
    BEGIN
      PostingDateFilter := STRSUBSTNO('%1: %2..%3',Text000,StartingDate,EndingDate);
      if FAFilter = '' then
        FAFilter := PostingDateFilter
      else
        FAFilter := FAFilter + STRSUBSTNO('%1 %2',',',PostingDateFilter);
    END;

    [External]
    PROCEDURE ValidateDates@3(StartingDate@1000 : Date;EndingDate@1001 : Date);
    BEGIN
      if (EndingDate = 0D) or (StartingDate <= 00000101D) then
        ERROR(Text001);

      if StartingDate > EndingDate then
        ERROR(Text002);

      if (NORMALDATE(StartingDate) <> StartingDate) or (NORMALDATE(EndingDate) <> EndingDate) then
        ERROR(Text003);
    END;

    [External]
    PROCEDURE ValidateDeprDates@6(StartingDate@1000 : Date;EndingDate@1001 : Date);
    BEGIN
      if (EndingDate = 0D) or (StartingDate <= 00000101D) then
        ERROR(Text004);

      if StartingDate > EndingDate then
        ERROR(Text005);

      if (NORMALDATE(StartingDate) <> StartingDate) or (NORMALDATE(EndingDate) <> EndingDate) then
        ERROR(Text003);
    END;

    [External]
    PROCEDURE SetFAPostingGroup@8(VAR FA2@1000 : Record "Fixed Asset";DeprBookCode@1001 : Code[10]);
    VAR
      FA@1002 : Record "Fixed Asset";
      FADeprBook@1003 : Record "FA Depreciation Book";
      Window@1004 : Dialog;
    BEGIN
      Window.OPEN(Text006);
      FA.LOCKTABLE;
      FA.COPY(FA2);
      FA.SETRANGE("FA Posting Group");
      if FA.FIND('-') then
        repeat
          if FADeprBook.GET(FA."No.",DeprBookCode) then
            if FA."FA Posting Group" <> FADeprBook."FA Posting Group" then begin
              FA."FA Posting Group" := FADeprBook."FA Posting Group";
              FA.MODIFY;
            end;
        until FA.NEXT = 0;
      COMMIT;
      Window.CLOSE;
    END;

    BEGIN
    END.
  }
}

