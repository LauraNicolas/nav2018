OBJECT Page 6520 Item Tracing
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Item Tracing;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    SourceTable="Item Tracing Buffer";
    PageType=Worksheet;
    SourceTableTemporary=true;
    OnInit=BEGIN
             NavigateEnable := true;
             PrintEnable := true;
             FunctionsEnable := true;
           END;

    OnOpenPage=BEGIN
                 InitButtons;
                 TraceMethod := TraceMethod::"Usage->Origin";
                 ShowComponents := ShowComponents::"Item-tracked Only";
               END;

    OnAfterGetRecord=BEGIN
                       DescriptionIndent := 0;
                       ItemTracingMgt.SetExpansionStatus(Rec,TempTrackEntry,Rec,ActualExpansionStatus);
                       DescriptionOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 34      ;1   ;ActionGroup;
                      Name=Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 60      ;2   ;Action    ;
                      Name=ShowDocument;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Show Document;
                      ToolTipML=ENU=Open the document that the selected line exists on.;
                      ApplicationArea=#ItemTracking;
                      Image=View;
                      OnAction=BEGIN
                                 ItemTracingMgt.ShowDocument("Record Identifier");
                               END;
                                }
      { 10      ;1   ;ActionGroup;
                      Name=Item;
                      CaptionML=ENU=&Item;
                      Image=Item }
      { 17      ;2   ;Action    ;
                      Name=Card;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Card;
                      ToolTipML=ENU=View or change detailed information about the record on the document or journal line.;
                      ApplicationArea=#ItemTracking;
                      RunObject=Page "Item Card";
                      RunPageLink="No."=FIELD("Item No.");
                      Image=EditLines }
      { 19      ;2   ;Action    ;
                      Name=LedgerEntries;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Ledger E&ntries;
                      ToolTipML=ENU=View the history of transactions that have been posted for the selected record.;
                      ApplicationArea=#ItemTracking;
                      RunObject=Page "Item Ledger Entries";
                      RunPageView=SORTING("Item No.");
                      RunPageLink="Item No."=FIELD("Item No.");
                      Promoted=false;
                      Image=CustomerLedger;
                      PromotedCategory=Process }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 36      ;1   ;ActionGroup;
                      Name=Functions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 59      ;2   ;Action    ;
                      Name=TraceOppositeFromLine;
                      CaptionML=ENU=&Trace Opposite - from Line;
                      ToolTipML=ENU=Repeat the previous trace, but going the opposite direction.;
                      ApplicationArea=#ItemTracking;
                      Promoted=true;
                      Enabled=FunctionsEnable;
                      Image=TraceOppositeLine;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 if TraceMethod = TraceMethod::"Origin->Usage" then
                                   TraceMethod := TraceMethod::"Usage->Origin"
                                 else
                                   TraceMethod := TraceMethod::"Origin->Usage";
                                 OppositeTraceFromLine;
                               END;
                                }
      { 26      ;2   ;Action    ;
                      Name=SetFiltersWithLineValues;
                      CaptionML=ENU=Set &Filters with Line Values;
                      ApplicationArea=#ItemTracking;
                      Enabled=FunctionsEnable;
                      Image=FilterLines;
                      OnAction=BEGIN
                                 ItemTracingMgt.InitSearchParm(Rec,SerialNoFilter,LotNoFilter,ItemNoFilter,VariantFilter);
                               END;
                                }
      { 7       ;2   ;Action    ;
                      Name=Go to Already-Traced History;
                      CaptionML=ENU=Go to Already-Traced History;
                      ToolTipML=ENU=View the item tracing history.;
                      ApplicationArea=#ItemTracking;
                      Enabled=FunctionsEnable;
                      Image=MoveUp;
                      OnAction=BEGIN
                                 SetFocus("Item Ledger Entry No.");
                               END;
                                }
      { 37      ;2   ;Action    ;
                      Name=NextTraceResult;
                      CaptionML=ENU=Next Trace Result;
                      ToolTipML=ENU="View the next item transaction in the tracing direction. ";
                      ApplicationArea=#ItemTracking;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 RecallHistory(1);
                               END;
                                }
      { 38      ;2   ;Action    ;
                      Name=PreviousTraceResult;
                      CaptionML=ENU=Previous Trace Result;
                      ToolTipML=ENU=View the previous item transaction in the tracing direction.;
                      ApplicationArea=#ItemTracking;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 RecallHistory(-1);
                               END;
                                }
      { 16      ;1   ;Action    ;
                      Name=Print;
                      Ellipsis=true;
                      CaptionML=ENU=&Print;
                      ToolTipML=ENU=Prepare to print the document. A report request window for the document opens where you can specify what to include on the print-out.;
                      ApplicationArea=#ItemTracking;
                      Promoted=true;
                      Enabled=PrintEnable;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 xItemTracingBuffer@1002 : Record "Item Tracing Buffer";
                                 PrintTracking@1000 : Report "Item Tracing Specification";
                               BEGIN
                                 CLEAR(PrintTracking);
                                 xItemTracingBuffer.COPY(Rec);
                                 PrintTracking.TransferEntries(Rec);
                                 COPY(xItemTracingBuffer);
                                 PrintTracking.RUN;
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=Navigate;
                      CaptionML=ENU=&Navigate;
                      ToolTipML=ENU=Find all entries and documents that exist for the document number and posting date on the selected entry or document.;
                      ApplicationArea=#ItemTracking;
                      Promoted=true;
                      Enabled=NavigateEnable;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Navigate@1000 : Page Navigate;
                               BEGIN
                                 Navigate.SetTracking("Serial No.","Lot No.");
                                 Navigate.RUN;
                               END;
                                }
      { 20      ;1   ;Action    ;
                      Name=Trace;
                      CaptionML=ENU=&Trace;
                      ToolTipML=ENU=Trace where a lot or serial number assigned to the item was used, for example, to find which lot a defective component came from or to find all the customers that have received items containing the defective component.;
                      ApplicationArea=#ItemTracking;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=Trace;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindRecords;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=General;
                CaptionML=ENU=General }

    { 18  ;2   ;Field     ;
                Name=SerialNoFilter;
                CaptionML=ENU=Serial No. Filter;
                ToolTipML=ENU=Specifies the serial number or a filter on the serial numbers that you would like to trace.;
                ApplicationArea=#ItemTracking;
                SourceExpr=SerialNoFilter;
                OnLookup=VAR
                           SerialNoInfo@1003 : Record "Serial No. Information";
                           SerialNoList@1002 : Page "Serial No. Information List";
                         BEGIN
                           SerialNoInfo.RESET;

                           CLEAR(SerialNoList);
                           SerialNoList.SETTABLEVIEW(SerialNoInfo);
                           if SerialNoList.RUNMODAL = ACTION::LookupOK then
                             SerialNoFilter := SerialNoList.GetSelectionFilter;
                         END;

                ImplicitType=Text }

    { 13  ;2   ;Field     ;
                Name=LotNoFilter;
                CaptionML=ENU=Lot No. Filter;
                ToolTipML=ENU=Specifies the lot number or a filter on the lot numbers that you would like to trace.;
                ApplicationArea=#ItemTracking;
                SourceExpr=LotNoFilter;
                OnLookup=VAR
                           LotNoInfo@1002 : Record "Lot No. Information";
                           LotNoList@1003 : Page "Lot No. Information List";
                         BEGIN
                           LotNoInfo.RESET;

                           CLEAR(LotNoList);
                           LotNoList.SETTABLEVIEW(LotNoInfo);
                           if LotNoList.RUNMODAL = ACTION::LookupOK then
                             LotNoFilter := LotNoList.GetSelectionFilter;
                         END;

                ImplicitType=Text }

    { 1000000013;2;Field  ;
                Name=ItemNoFilter;
                CaptionML=ENU=Item Filter;
                ToolTipML=ENU=Specifies the item number or a filter on the item numbers that you would like to trace.;
                ApplicationArea=#ItemTracking;
                SourceExpr=ItemNoFilter;
                OnValidate=BEGIN
                             if ItemNoFilter = '' then
                               VariantFilter := '';
                           END;

                OnLookup=VAR
                           Item@1002 : Record Item;
                           ItemList@1003 : Page "Item List";
                         BEGIN
                           Item.RESET;

                           CLEAR(ItemList);
                           ItemList.SETTABLEVIEW(Item);
                           ItemList.LOOKUPMODE(true);
                           if ItemList.RUNMODAL = ACTION::LookupOK then
                             ItemNoFilter := ItemList.GetSelectionFilter;
                         END;

                ImplicitType=Text }

    { 4   ;2   ;Field     ;
                Name=VariantFilter;
                CaptionML=ENU=Variant Filter;
                ToolTipML=ENU=Specifies the variant code or a filter on the variant codes that you would like to trace.;
                ApplicationArea=#Advanced;
                SourceExpr=VariantFilter;
                OnValidate=BEGIN
                             if ItemNoFilter = '' then
                               ERROR(Text001);
                           END;

                OnLookup=VAR
                           ItemVariant@1003 : Record "Item Variant";
                           ItemVariants@1002 : Page "Item Variants";
                         BEGIN
                           if ItemNoFilter = '' then
                             ERROR(Text001);

                           ItemVariant.RESET;

                           CLEAR(ItemVariants);
                           ItemVariant.SETFILTER("Item No.",ItemNoFilter);
                           ItemVariants.SETTABLEVIEW(ItemVariant);
                           ItemVariants.LOOKUPMODE(true);
                           if ItemVariants.RUNMODAL = ACTION::LookupOK then begin
                             ItemVariants.GETRECORD(ItemVariant);
                             VariantFilter := ItemVariant.Code;
                           end;
                         END;

                ImplicitType=Text }

    { 25  ;2   ;Field     ;
                Name=ShowComponents;
                CaptionML=ENU=Show Components;
                ToolTipML=ENU=Specifies if you would like to see the components of the item that you are tracing.;
                OptionCaptionML=ENU=No,Item-tracked Only,All;
                ApplicationArea=#ItemTracking;
                SourceExpr=ShowComponents;
                ImplicitType=Option }

    { 21  ;2   ;Field     ;
                Name=TraceMethod;
                CaptionML=ENU=Trace Method;
                ToolTipML=ENU=Specifies posted serial/lot numbers that can be traced either forward or backward in a supply chain.;
                OptionCaptionML=ENU=Origin -> Usage,Usage -> Origin;
                ApplicationArea=#ItemTracking;
                SourceExpr=TraceMethod;
                ImplicitType=Option }

    { 35  ;1   ;Field     ;
                Name=Field35;
                ToolTipML=ENU=Specifies the text that is used to trace the item.;
                ApplicationArea=#ItemTracking;
                CaptionClass=FORMAT(TraceText);
                Editable=FALSE }

    { 1   ;1   ;Group     ;
                Name=Group1;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                ShowAsTree=true;
                GroupType=Repeater }

    { 1000000015;2;Field  ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of the traced item.;
                ApplicationArea=#ItemTracking;
                SourceExpr=Description;
                ImplicitType=Text100 }

    { 8   ;2   ;Field     ;
                Name=Entry Type;
                ToolTipML=ENU=Specifies the type of the traced entry.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Entry Type";
                Visible=FALSE;
                ImplicitType=Option }

    { 1000000034;2;Field  ;
                Name=Serial No.;
                ToolTipML=ENU=Specifies the serial number to be traced.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Serial No.";
                Editable=FALSE;
                Style=Strong;
                ImplicitType=Code20 }

    { 27  ;2   ;Field     ;
                Name=Lot No.;
                ToolTipML=ENU=Specifies the traced lot number.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Lot No.";
                Editable=FALSE;
                Style=Strong;
                ImplicitType=Code20 }

    { 1000000030;2;Field  ;
                Name=Item No.;
                ToolTipML=ENU=Specifies the number of the traced item.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Item No.";
                Editable=FALSE;
                Style=Strong;
                ImplicitType=Code20 }

    { 32  ;2   ;Field     ;
                Name=Item Description;
                ToolTipML=ENU=Specifies a description of the item.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Item Description";
                Editable=FALSE;
                ImplicitType=Text50 }

    { 2   ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 1000000032;2;Field  ;
                Name=Document No.;
                ToolTipML=ENU=Specifies the number of the traced document.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Document No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 1000000043;2;Field  ;
                Name=Posting Date;
                ToolTipML=ENU=Specifies the date when the traced item was posted.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Posting Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 1000000017;2;Field  ;
                Name=Source Type;
                ToolTipML=ENU=Specifies the type of record, such as Sales Header, that the item is traced from.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Source Type";
                Visible=FALSE;
                ImplicitType=Option }

    { 6   ;2   ;Field     ;
                Name=Source No.;
                ToolTipML=ENU=Specifies the number of the record that the item is traced from.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Source No.";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Code20 }

    { 1000000003;2;Field  ;
                Name=Source Name;
                ToolTipML=ENU=Specifies the name of the record that the item is traced from.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Source Name";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Text50 }

    { 23  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the location of the traced item.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Location Code";
                Editable=FALSE;
                ImplicitType=Code10 }

    { 1000000021;2;Field  ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the quantity of the traced item in the line.;
                ApplicationArea=#ItemTracking;
                SourceExpr=Quantity;
                OnDrillDown=VAR
                              ItemLedgerEntry@1000000000 : Record "Item Ledger Entry";
                            BEGIN
                              ItemLedgerEntry.RESET;
                              ItemLedgerEntry.SETRANGE("Entry No.","Item Ledger Entry No.");
                              PAGE.RUNMODAL(0,ItemLedgerEntry);
                            END;

                ImplicitType=Decimal }

    { 1000000019;2;Field  ;
                Name=Remaining Quantity;
                ToolTipML=ENU=Specifies the quantity in the Quantity field that remains to be processed.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Remaining Quantity";
                ImplicitType=Decimal }

    { 1000000023;2;Field  ;
                Name=Created by;
                Lookup=true;
                ToolTipML=ENU=Specifies the user who created the traced record.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Created by";
                Visible=FALSE;
                ImplicitType=Code50 }

    { 1000000025;2;Field  ;
                Name=Created on;
                ToolTipML=ENU=Specifies the date when the traced record was created.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Created on";
                Visible=FALSE;
                ImplicitType=Date }

    { 3   ;2   ;Field     ;
                Name=Already Traced;
                ToolTipML=ENU=Specifies if additional transaction history under this line has already been traced by other lines above it.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Already Traced";
                ImplicitType=Boolean }

    { 9   ;2   ;Field     ;
                Name=Item Ledger Entry No.;
                ToolTipML=ENU=Specifies the number of the traced item ledger entry.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Item Ledger Entry No.";
                Visible=FALSE;
                ImplicitType=Integer }

    { 5   ;2   ;Field     ;
                Name=Parent Item Ledger Entry No.;
                ToolTipML=ENU=Specifies the parent of the traced item ledger entry.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Parent Item Ledger Entry No.";
                Visible=FALSE;
                ImplicitType=Integer }

  }
  CODE
  {
    VAR
      TempTrackEntry@1000 : TEMPORARY Record "Item Tracing Buffer";
      ItemTracingMgt@1017 : Codeunit "Item Tracing Mgt.";
      TraceMethod@1004 : '"Origin->Usage","Usage->Origin"';
      ShowComponents@1000000002 : 'No,"Item-tracked Only",All';
      ActualExpansionStatus@1009 : '"Has Children",Expanded,"No Children"';
      SerialNoFilter@1000000009 : Text;
      LotNoFilter@1006 : Text;
      ItemNoFilter@1000000007 : Text;
      VariantFilter@1001 : Text;
      Text001@1002 : TextConst 'ENU=Item No. Filter is required.';
      TraceText@1005 : Text;
      Text002@1007 : TextConst 'ENU=Serial No.: %1, Lot No.: %2, Item: %3, Variant: %4, Trace Method: %5, Show Components: %6';
      PreviousExists@1010 : Boolean;
      NextExists@1012 : Boolean;
      Text003@1008 : TextConst 'ENU=Filters are too large to show.';
      Text004@1003 : TextConst 'ENU=Origin->Usage,Usage->Origin';
      Text005@1013 : TextConst 'ENU=No,Item-tracked Only,All';
      DescriptionIndent@19057867 : Integer INDATASET;
      FunctionsEnable@19066687 : Boolean INDATASET;
      PrintEnable@19037407 : Boolean INDATASET;
      NavigateEnable@19005834 : Boolean INDATASET;

    [External]
    PROCEDURE FindRecords@1000000001();
    BEGIN
      ItemTracingMgt.FindRecords(TempTrackEntry,Rec,
        SerialNoFilter,LotNoFilter,ItemNoFilter,VariantFilter,
        TraceMethod,ShowComponents);
      InitButtons;

      ItemTracingMgt.GetHistoryStatus(PreviousExists,NextExists);

      UpdateTraceText;

      ItemTracingMgt.ExpandAll(TempTrackEntry,Rec);
      CurrPage.UPDATE(false)
    END;

    LOCAL PROCEDURE OppositeTraceFromLine@1();
    BEGIN
      ItemTracingMgt.InitSearchParm(Rec,SerialNoFilter,LotNoFilter,ItemNoFilter,VariantFilter);
      FindRecords;
    END;

    [External]
    PROCEDURE InitButtons@7();
    BEGIN
      if not TempTrackEntry.FINDFIRST then begin
        FunctionsEnable := false;
        PrintEnable := false;
        NavigateEnable := false;
      end else begin
        FunctionsEnable := true;
        PrintEnable := true;
        NavigateEnable := true;
      end;
    END;

    [External]
    PROCEDURE InitFilters@4(VAR ItemTrackingEntry@1000 : Record "Item Tracing Buffer");
    BEGIN
      SerialNoFilter := ItemTrackingEntry.GETFILTER("Serial No.");
      LotNoFilter := ItemTrackingEntry.GETFILTER("Lot No.");
      ItemNoFilter := ItemTrackingEntry.GETFILTER("Item No.");
      VariantFilter := ItemTrackingEntry.GETFILTER("Variant Code");
      TraceMethod := TraceMethod::"Usage->Origin";
      ShowComponents := ShowComponents::"Item-tracked Only";
    END;

    LOCAL PROCEDURE RecallHistory@2(Steps@1000 : Integer);
    BEGIN
      ItemTracingMgt.RecallHistory(Steps,TempTrackEntry,Rec,SerialNoFilter,
        LotNoFilter,ItemNoFilter,VariantFilter,TraceMethod,ShowComponents);
      UpdateTraceText;
      InitButtons;
      ItemTracingMgt.GetHistoryStatus(PreviousExists,NextExists);

      ItemTracingMgt.ExpandAll(TempTrackEntry,Rec);
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE UpdateTraceText@3();
    VAR
      LengthOfText@1001 : Integer;
      Overflow@1000 : Boolean;
    BEGIN
      LengthOfText := (STRLEN(Text002 + SerialNoFilter + LotNoFilter + ItemNoFilter + VariantFilter) +
                       STRLEN(FORMAT(TraceMethod)) + STRLEN(FORMAT(ShowComponents)) - 6); // 6 = number of positions in Text002

      Overflow := LengthOfText > 512;

      if Overflow then
        TraceText := Text003
      else
        TraceText := STRSUBSTNO(Text002,SerialNoFilter,LotNoFilter,ItemNoFilter,VariantFilter,
            SELECTSTR(TraceMethod + 1,Text004) ,SELECTSTR(ShowComponents + 1,Text005));
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      DescriptionIndent := Level;
    END;

    LOCAL PROCEDURE SetFocus@5(ItemLedgerEntryNo@1000 : Integer);
    BEGIN
      if "Already Traced" then begin
        TempTrackEntry.SETCURRENTKEY("Item Ledger Entry No.");
        TempTrackEntry.SETRANGE("Item Ledger Entry No.",ItemLedgerEntryNo);
        TempTrackEntry.FINDFIRST;
        CurrPage.SETRECORD(TempTrackEntry);
      end;
    END;

    BEGIN
    END.
  }
}

