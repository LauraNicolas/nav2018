OBJECT Table 1207 Direct Debit Collection
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    DataCaptionFields=Identifier,"Created Date-Time";
    CaptionML=ENU=Direct Debit Collection;
    LookupPageID="Direct Debit Collections";
    DrillDownPageID="Direct Debit Collections";
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Integer       ;CaptionML=ENU=No. }
    { 2   ;   ;Identifier          ;Code20        ;CaptionML=ENU=Identifier }
    { 3   ;   ;Created Date-Time   ;DateTime      ;CaptionML=ENU=Created Date-Time }
    { 4   ;   ;Created by User     ;Code50        ;TableRelation=User."User Name";
                                                   CaptionML=ENU=Created by User }
    { 5   ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=New,Canceled,File Created,Posted,Closed;
                                                   OptionString=New,Canceled,"File Created",Posted,Closed }
    { 6   ;   ;No. of Transfers    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Direct Debit Collection Entry" WHERE ("Direct Debit Collection No."=FIELD("No.")));
                                                   CaptionML=ENU=No. of Transfers }
    { 7   ;   ;To Bank Account No. ;Code20        ;TableRelation="Bank Account";
                                                   CaptionML=ENU=To Bank Account No. }
    { 8   ;   ;To Bank Account Name;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Bank Account".Name WHERE ("No."=FIELD("To Bank Account No.")));
                                                   CaptionML=ENU=To Bank Account Name }
    { 9   ;   ;Message ID          ;Code35        ;CaptionML=ENU=Message ID }
    { 10  ;   ;Partner Type        ;Option        ;CaptionML=ENU=Partner Type;
                                                   OptionCaptionML=ENU=" ,Company,Person";
                                                   OptionString=" ",Company,Person;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CloseQst@1000 : TextConst 'ENU=If you close the collection, you will not be able to register the payments from the collection. Do you want to close the collection anyway?';

    [External]
    PROCEDURE CreateNew@1(NewIdentifier@1000 : Code[20];NewBankAccountNo@1001 : Code[20];PartnerType@1002 : Option);
    BEGIN
      RESET;
      LOCKTABLE;
      if FINDLAST then;
      INIT;
      "No." += 1;
      Identifier := NewIdentifier;
      "Message ID" := Identifier;
      "Created Date-Time" := CURRENTDATETIME;
      "Created by User" := USERID;
      "To Bank Account No." := NewBankAccountNo;
      "Partner Type" := PartnerType;
      INSERT;
    END;

    [External]
    PROCEDURE CloseCollection@2();
    VAR
      DirectDebitCollectionEntry@1000 : Record "Direct Debit Collection Entry";
    BEGIN
      if Status in [Status::Closed,Status::Canceled] then
        exit;
      if not CONFIRM(CloseQst) then
        exit;

      if Status = Status::New then
        Status := Status::Canceled
      else
        Status := Status::Closed;
      MODIFY;

      DirectDebitCollectionEntry.SETRANGE("Direct Debit Collection No.","No.");
      DirectDebitCollectionEntry.SETRANGE(Status,DirectDebitCollectionEntry.Status::New);
      DirectDebitCollectionEntry.MODIFYALL(Status,DirectDebitCollectionEntry.Status::Rejected);
    END;

    [Internal]
    PROCEDURE Export@5();
    VAR
      DirectDebitCollectionEntry@1000 : Record "Direct Debit Collection Entry";
    BEGIN
      DirectDebitCollectionEntry.SETRANGE("Direct Debit Collection No.","No.");
      if DirectDebitCollectionEntry.FINDFIRST then
        DirectDebitCollectionEntry.ExportSEPA;
    END;

    [External]
    PROCEDURE HasPaymentFileErrors@4() : Boolean;
    VAR
      GenJnlLine@1000 : Record "Gen. Journal Line";
    BEGIN
      GenJnlLine."Document No." := COPYSTR(FORMAT("No."),1,MAXSTRLEN(GenJnlLine."Document No."));
      exit(GenJnlLine.HasPaymentFileErrorsInBatch);
    END;

    [External]
    PROCEDURE SetStatus@3(NewStatus@1000 : Option);
    BEGIN
      LOCKTABLE;
      FIND;
      Status := NewStatus;
      MODIFY;
    END;

    [External]
    PROCEDURE DeletePaymentFileErrors@6();
    VAR
      DirectDebitCollectionEntry@1000 : Record "Direct Debit Collection Entry";
    BEGIN
      DirectDebitCollectionEntry.SETRANGE("Direct Debit Collection No.","No.");
      if DirectDebitCollectionEntry.FINDSET then
        repeat
          DirectDebitCollectionEntry.DeletePaymentFileErrors;
        until DirectDebitCollectionEntry.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

