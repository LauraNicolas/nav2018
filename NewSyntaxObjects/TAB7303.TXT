OBJECT Table 7303 Bin Type
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckCombination(0);
             END;

    OnModify=BEGIN
               CheckCombination(0);
             END;

    OnDelete=VAR
               Zone@1000 : Record Zone;
               Bin@1001 : Record Bin;
               BinContent@1002 : Record "Bin Content";
             BEGIN
               Zone.SETRANGE("Bin Type Code",Code);
               if Zone.FINDFIRST then
                 ERROR(
                   Text000,
                   TABLECAPTION,Zone.TABLECAPTION,Zone."Location Code",Zone.Code);

               Bin.SETCURRENTKEY("Bin Type Code");
               Bin.SETRANGE("Bin Type Code",Code);
               if Bin.FINDFIRST then
                 ERROR(
                   Text001,
                   TABLECAPTION,Bin.TABLECAPTION,Bin."Location Code",Bin."Zone Code",Bin.Code);

               BinContent.SETCURRENTKEY("Bin Type Code");
               BinContent.SETRANGE("Bin Type Code",Code);
               if BinContent.FINDFIRST then
                 ERROR(
                   Text001,
                   TABLECAPTION,BinContent.TABLECAPTION,BinContent."Location Code",
                   BinContent."Zone Code",BinContent."Bin Code");
             END;

    CaptionML=ENU=Bin Type;
    LookupPageID="Bin Type List";
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=ENU=Code;
                                                   NotBlank=true }
    { 5   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 10  ;   ;Receive             ;Boolean       ;OnValidate=BEGIN
                                                                CheckCombination(CurrFieldNo);
                                                              END;

                                                   CaptionML=ENU=Receive }
    { 11  ;   ;Ship                ;Boolean       ;OnValidate=BEGIN
                                                                CheckCombination(CurrFieldNo);
                                                              END;

                                                   CaptionML=ENU=Ship }
    { 12  ;   ;Put Away            ;Boolean       ;OnValidate=BEGIN
                                                                CheckCombination(CurrFieldNo);
                                                              END;

                                                   CaptionML=ENU=Put Away }
    { 13  ;   ;Pick                ;Boolean       ;OnValidate=BEGIN
                                                                CheckCombination(CurrFieldNo);
                                                              END;

                                                   CaptionML=ENU=Pick }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot delete the %1 because there is %2 %3 %4 with this %1.';
      Text001@1001 : TextConst 'ENU=You cannot delete the %1 because there is %2 %3 %4 %5 with this %1.';
      Text002@1002 : TextConst 'ENU=This combination already exists for %1 %2.';
      Text003@1003 : TextConst 'ENU=The %1 filter expression is too long.\Please use less Bin Types or shorter %1 Codes.';

    LOCAL PROCEDURE CheckCombination@2(CalledByFieldNo@1000 : Integer);
    VAR
      BinType@1001 : Record "Bin Type";
    BEGIN
      case CalledByFieldNo of
        0:
          begin
            BinType.SETFILTER(Code,'<>%1',Code);
            BinType.SETRANGE(Receive,Receive);
            BinType.SETRANGE(Ship,Ship);
            BinType.SETRANGE("Put Away","Put Away");
            BinType.SETRANGE(Pick,Pick);
            if BinType.FINDFIRST then
              ERROR(Text002,TABLECAPTION,BinType.Code);
          end;
        FIELDNO(Receive):
          begin
            TESTFIELD("Put Away",false);
            TESTFIELD(Pick,false);
            TESTFIELD(Ship,false);
          end;
        FIELDNO(Ship):
          begin
            TESTFIELD(Receive,false);
            TESTFIELD("Put Away",false);
            TESTFIELD(Pick,false);
          end;
        FIELDNO("Put Away"):
          begin
            TESTFIELD(Receive,false);
            TESTFIELD(Ship,false);
          end;
        FIELDNO(Pick):
          begin
            TESTFIELD(Receive,false);
            TESTFIELD(Ship,false);
          end;
      end;
    END;

    [External]
    PROCEDURE CreateBinTypeFilter@13(VAR BinTypeFilter@1000 : Text[250];Type@1001 : 'Receive,Ship,"Put-away",Pick');
    VAR
      BinType@1002 : Record "Bin Type";
    BEGIN
      BinTypeFilter := '';
      case Type of
        Type::Receive:
          BinType.SETRANGE(Receive,true);
        Type::Ship:
          BinType.SETRANGE(Ship,true);
        Type::"Put-away":
          BinType.SETRANGE("Put Away",true);
        Type::Pick:
          BinType.SETRANGE(Pick,true);
      end;
      if BinType.FIND('-') then
        repeat
          if STRLEN(BinTypeFilter) + STRLEN(BinType.Code) + 1 <=
             MAXSTRLEN(BinTypeFilter)
          then begin
            if BinTypeFilter = '' then
              BinTypeFilter := BinType.Code
            else
              BinTypeFilter := BinTypeFilter + '|' + BinType.Code;
          end else
            ERROR(Text003,BinType.TABLECAPTION);
        until BinType.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

