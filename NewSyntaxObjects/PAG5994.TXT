OBJECT Page 5994 Get Service Shipment Lines
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Get Service Shipment Lines;
    SourceTable="Service Shipment Line";
    PageType=List;
    OnAfterGetRecord=BEGIN
                       StyleIsStrong := IsFirstDocLine;
                       DocumentNoHideValue := not IsFirstDocLine;
                     END;

    OnQueryClosePage=BEGIN
                       if CloseAction in [ACTION::OK,ACTION::LookupOK] then
                         OKOnPush;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 47      ;1   ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 48      ;2   ;Action    ;
                      Name=Show Document;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Show Document;
                      ToolTipML=ENU=Open the document that the selected line exists on.;
                      ApplicationArea=#Service;
                      Image=View;
                      OnAction=BEGIN
                                 ServiceShptHeader.GET("Document No.");
                                 PAGE.RUN(PAGE::"Posted Service Shipment",ServiceShptHeader);
                               END;
                                }
      { 49      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 28      ;2   ;Action    ;
                      Name=Item &Tracking Entries;
                      CaptionML=ENU=Item &Tracking Entries;
                      ToolTipML=ENU=View serial or lot numbers that are assigned to items.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLedger;
                      OnAction=BEGIN
                                 ShowItemTrackingLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Document No.;
                ToolTipML=ENU=Specifies the number of this shipment.;
                ApplicationArea=#Service;
                SourceExpr="Document No.";
                HideValue=DocumentNoHideValue;
                Style=Strong;
                StyleExpr=StyleIsStrong;
                ImplicitType=Code20 }

    { 50  ;2   ;Field     ;
                Name=Bill-to Customer No.;
                ToolTipML=ENU=Specifies the number of the customer that you send or sent the invoice or credit memo to.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Customer No.";
                Visible=TRUE;
                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Customer No.;
                ToolTipML=ENU=Specifies the number of the customer who owns the items on the service order.;
                ApplicationArea=#Service;
                SourceExpr="Customer No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 6   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the type of this shipment line.;
                ApplicationArea=#Service;
                SourceExpr=Type;
                ImplicitType=Option }

    { 8   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the item, general ledger account, resource code, or cost on the line.;
                ApplicationArea=#Service;
                SourceExpr="No.";
                ImplicitType=Code20 }

    { 10  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 12  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the description of an item, resource, cost, or a standard text on the service line.;
                ApplicationArea=#Service;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 29  ;2   ;Field     ;
                Name=Currency Code;
                Lookup=false;
                DrillDown=false;
                ToolTipML=ENU=Specifies the currency code for various amounts on the shipment.;
                ApplicationArea=#Service;
                SourceExpr="Currency Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 14  ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 16  ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 18  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies the location from where inventory items to the customer on the sales document are to be shipped by default.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 24  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Service;
                SourceExpr="Unit of Measure Code";
                ImplicitType=Code10 }

    { 22  ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the number of item units, resource hours, general ledger account payments, or cost that have been shipped to the customer.;
                ApplicationArea=#Service;
                SourceExpr=Quantity;
                ImplicitType=Decimal }

    { 52  ;2   ;Field     ;
                Name=Qty. Shipped Not Invoiced;
                ToolTipML=ENU=Specifies the quantity of the shipped item that has been posted as shipped but that has not yet been posted as invoiced.;
                ApplicationArea=#Service;
                SourceExpr="Qty. Shipped Not Invoiced";
                ImplicitType=Decimal }

    { 45  ;2   ;Field     ;
                Name=Quantity Invoiced;
                ToolTipML=ENU=Specifies how many units of the item on the line have been posted as invoiced.;
                ApplicationArea=#Service;
                SourceExpr="Quantity Invoiced";
                ImplicitType=Decimal }

    { 26  ;2   ;Field     ;
                Name=Unit of Measure;
                ToolTipML=ENU=Specifies the name of the unit of measure for the item, resource, or cost on the service line.;
                ApplicationArea=#Service;
                SourceExpr="Unit of Measure";
                Visible=FALSE;
                ImplicitType=Text10 }

    { 32  ;2   ;Field     ;
                Name=Appl.-to Item Entry;
                ToolTipML=ENU=Specifies the number of the item ledger entry that the document or journal line is applied -to.;
                ApplicationArea=#Service;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE;
                ImplicitType=Integer }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ServiceShptHeader@1000 : Record "Service Shipment Header";
      ServiceHeader@1001 : Record "Service Header";
      TempServiceShptLine@1002 : TEMPORARY Record "Service Shipment Line";
      ServiceGetShpt@1003 : Codeunit "Service-Get Shipment";
      StyleIsStrong@1004 : Boolean INDATASET;
      DocumentNoHideValue@1005 : Boolean INDATASET;

    [External]
    PROCEDURE SetServiceHeader@1(VAR ServiceHeader2@1000 : Record "Service Header");
    BEGIN
      ServiceHeader.GET(ServiceHeader2."Document Type",ServiceHeader2."No.");
      ServiceHeader.TESTFIELD("Document Type",ServiceHeader."Document Type"::Invoice);
    END;

    LOCAL PROCEDURE IsFirstDocLine@2() : Boolean;
    VAR
      ServiceShptLine@1000 : Record "Service Shipment Line";
    BEGIN
      TempServiceShptLine.RESET;
      TempServiceShptLine.COPYFILTERS(Rec);
      TempServiceShptLine.SETRANGE("Document No.","Document No.");
      if not TempServiceShptLine.FINDFIRST then begin
        ServiceShptLine.COPYFILTERS(Rec);
        ServiceShptLine.SETRANGE("Document No.","Document No.");
        if not ServiceShptLine.FINDFIRST then
          exit(false);
        TempServiceShptLine := ServiceShptLine;
        TempServiceShptLine.INSERT;
      end;
      if "Line No." = TempServiceShptLine."Line No." then
        exit(true);
    END;

    LOCAL PROCEDURE OKOnPush@19066895();
    BEGIN
      GetShipmentLines;
      CurrPage.CLOSE;
    END;

    [External]
    PROCEDURE GetShipmentLines@3();
    BEGIN
      CurrPage.SETSELECTIONFILTER(Rec);
      ServiceGetShpt.SetServiceHeader(ServiceHeader);
      ServiceGetShpt.CreateInvLines(Rec);
    END;

    BEGIN
    END.
  }
}

