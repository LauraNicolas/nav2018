OBJECT Report 189 Suggest Reminder Lines
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Suggest Reminder Lines;
    ProcessingOnly=true;
    OnPreReport=BEGIN
                  CustLedgEntry.COPY(CustLedgEntry2)
                END;

  }
  DATASET
  {
    { 4775;    ;DataItem;Reminder Header     ;
               DataItemTable="Reminder Header";
               DataItemTableView=SORTING("No.");
               ReqFilterHeadingML=ENU=Reminder;
               OnPreDataItem=BEGIN
                               NoOfRecords := COUNT;
                               if NoOfRecords = 1 then
                                 Window.OPEN(Text000)
                               else begin
                                 Window.OPEN(Text001);
                                 OldTime := TIME;
                               end;
                             END;

               OnAfterGetRecord=BEGIN
                                  RecordNo := RecordNo + 1;
                                  CLEAR(MakeReminder);
                                  MakeReminder.SuggestLines("Reminder Header",CustLedgEntry,OverdueEntriesOnly,IncludeEntriesOnHold,CustLedgEntryLineFeeOn);
                                  if NoOfRecords = 1 then begin
                                    MakeReminder.Code;
                                    MARK := false;
                                  end else begin
                                    NewTime := TIME;
                                    if (NewTime - OldTime > 100) or (NewTime < OldTime) then begin
                                      NewProgress := ROUND(RecordNo / NoOfRecords * 100,1);
                                      if NewProgress <> OldProgress then begin
                                        Window.UPDATE(1,NewProgress * 100);
                                        OldProgress := NewProgress;
                                      end;
                                      OldTime := TIME;
                                    end;
                                    MARK := not MakeReminder.RUN;
                                  end;
                                END;

               OnPostDataItem=BEGIN
                                COMMIT;
                                Window.CLOSE;
                                MARKEDONLY := true;
                                if FIND('-') then
                                  if CONFIRM(Text002,true) then
                                    PAGE.RUNMODAL(0,"Reminder Header");
                              END;

               ReqFilterFields="No." }

    { 9065;    ;DataItem;CustLedgEntry2      ;
               DataItemTable="Cust. Ledger Entry";
               DataItemTableView=SORTING("Customer No.");
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               ReqFilterFields="Document Type" }

    { 1000;    ;DataItem;CustLedgEntryLineFeeOn;
               DataItemTable="Cust. Ledger Entry";
               DataItemTableView=SORTING("Entry No.") ORDER(Ascending);
               ReqFilterHeadingML=ENU=Apply Fee per Line On;
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               ReqFilterFields="Document Type" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=Only Entries with Overdue Amounts;
                  CaptionML=ENU=Only Entries with Overdue Amounts;
                  ToolTipML=ENU=Specifies if the batch job will only insert open entries that are overdue, meaning they have a due date earlier than the document date on the reminder header.;
                  ApplicationArea=#Advanced;
                  SourceExpr=OverdueEntriesOnly;
                  MultiLine=true }

      { 1102601000;2;Field  ;
                  Name=Include Entries On Hold;
                  CaptionML=ENU=Include Entries On Hold;
                  ToolTipML=ENU=Specifies if the batch job will also insert overdue open entries that are on hold.;
                  ApplicationArea=#Advanced;
                  SourceExpr=IncludeEntriesOnHold }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Suggesting lines...';
      Text001@1001 : TextConst 'ENU=Suggesting lines @1@@@@@@@@@@@@@';
      Text002@1002 : TextConst 'ENU=It was not possible to process some of the selected reminders.\Do you want to see these reminders?';
      CustLedgEntry@1004 : Record "Cust. Ledger Entry";
      MakeReminder@1005 : Codeunit "Reminder-Make";
      Window@1006 : Dialog;
      NoOfRecords@1007 : Integer;
      RecordNo@1008 : Integer;
      NewProgress@1009 : Integer;
      OldProgress@1010 : Integer;
      NewTime@1011 : Time;
      OldTime@1012 : Time;
      OverdueEntriesOnly@1013 : Boolean;
      IncludeEntriesOnHold@1102601000 : Boolean;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

