OBJECT Codeunit 1251 Record Match Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [External]
    PROCEDURE GetLongestCommonSubstring@12(FirstString@1000 : Text;SecondString@1001 : Text) : Text;
    VAR
      Result@1002 : Text;
      Buffer@1006 : Text;
      i@1004 : Integer;
      j@1003 : Integer;
    BEGIN
      FirstString := UPPERCASE(FirstString);
      SecondString := UPPERCASE(SecondString);
      Result := '';

      i := 1;
      while i + STRLEN(Result) - 1 <= STRLEN(FirstString) do begin
        j := 1;
        while (j + i - 1 <= STRLEN(FirstString)) and (j <= STRLEN(SecondString)) do begin
          if STRPOS(SecondString,COPYSTR(FirstString,i,j)) > 0 then
            Buffer := COPYSTR(FirstString,i,j);

          if STRLEN(Buffer) > STRLEN(Result) then
            Result := Buffer;
          Buffer := '';
          j += 1;
        end;
        i += 1;
      end;

      exit(Result);
    END;

    [External]
    PROCEDURE CalculateStringNearness@15(FirstString@1002 : Text;SecondString@1001 : Text;Threshold@1004 : Integer;NormalizingFactor@1000 : Integer) : Integer;
    VAR
      Result@1006 : Text;
      TotalMatchedChars@1003 : Integer;
      MinLength@1005 : Integer;
    BEGIN
      FirstString := UPPERCASE(FirstString);
      SecondString := UPPERCASE(SecondString);

      MinLength := (STRLEN(FirstString) + STRLEN(SecondString) - ABS(STRLEN(FirstString) - STRLEN(SecondString))) / 2;
      if MinLength = 0 then
        MinLength := 1;

      TotalMatchedChars := 0;
      Result := GetLongestCommonSubstring(FirstString,SecondString);
      while STRLEN(Result) >= Threshold do begin
        TotalMatchedChars += STRLEN(Result);
        FirstString := DELSTR(FirstString,STRPOS(FirstString,Result),STRLEN(Result));
        SecondString := DELSTR(SecondString,STRPOS(SecondString,Result),STRLEN(Result));
        Result := GetLongestCommonSubstring(FirstString,SecondString);
      end;

      exit(NormalizingFactor * TotalMatchedChars div MinLength);
    END;

    [External]
    PROCEDURE Trim@1060(InputString@1061 : Text) : Text;
    BEGIN
      exit(DELCHR(DELCHR(InputString,'<'),'>'));
    END;

    BEGIN
    END.
  }
}

