OBJECT Codeunit 1213 Pmt. Export Cust. Ledger Check
{
  OBJECT-PROPERTIES
  {
    Date=20130923D;
    Time=120000T;
    Version List=NAVW17.10;
  }
  PROPERTIES
  {
    TableNo="Cust. Ledger Entry";
    OnRun=BEGIN
            CheckDocumentType(Rec);
            CheckRefundInfo(Rec);
            CheckPaymentMethod(Rec);
            CheckBalAccountType(Rec);
            CheckBankAccount(Rec);
            CheckBalAccountNo(Rec);
          END;

  }
  CODE
  {
    VAR
      RecipientBankAccMissingErr@1000 : TextConst '@@@="%1=Field;%2=Table";ENU=%1 for one or more %2 is not specified.';
      WrongFieldValueErr@1001 : TextConst '@@@="%1=Field;%2=Table;%3=Value";ENU=%1 for one or more %2 is different from %3.';
      MissingPmtMethodErr@1002 : TextConst 'ENU=%1 must be used for payments.';

    LOCAL PROCEDURE CheckDocumentType@5(VAR CustLedgEntry@1000 : Record "Cust. Ledger Entry");
    VAR
      CustLedgEntry2@1001 : Record "Cust. Ledger Entry";
    BEGIN
      CustLedgEntry2.COPY(CustLedgEntry);
      CustLedgEntry2.SETFILTER("Document Type",'<>%1',CustLedgEntry2."Document Type"::Refund);

      if not CustLedgEntry2.ISEMPTY then
        ERROR(WrongFieldValueErr,
          CustLedgEntry2.FIELDCAPTION("Document Type"),CustLedgEntry2.TABLECAPTION,CustLedgEntry2."Document Type"::Refund);
    END;

    LOCAL PROCEDURE CheckRefundInfo@1(VAR CustLedgEntry@1000 : Record "Cust. Ledger Entry");
    VAR
      CustLedgEntry2@1001 : Record "Cust. Ledger Entry";
    BEGIN
      CustLedgEntry2.COPY(CustLedgEntry);
      CustLedgEntry2.SETRANGE("Recipient Bank Account",'');

      if not CustLedgEntry2.ISEMPTY then
        ERROR(RecipientBankAccMissingErr,CustLedgEntry2.FIELDCAPTION("Recipient Bank Account"),CustLedgEntry2.TABLECAPTION);
    END;

    LOCAL PROCEDURE CheckPaymentMethod@4(VAR CustLedgEntry@1000 : Record "Cust. Ledger Entry");
    VAR
      CustLedgEntry2@1001 : Record "Cust. Ledger Entry";
    BEGIN
      CustLedgEntry2.COPY(CustLedgEntry);
      CustLedgEntry2.SETRANGE("Payment Method Code",'');

      if not CustLedgEntry2.ISEMPTY then
        ERROR(MissingPmtMethodErr,CustLedgEntry2.FIELDCAPTION("Payment Method Code"));
    END;

    LOCAL PROCEDURE CheckBalAccountType@2(VAR CustLedgEntry@1000 : Record "Cust. Ledger Entry");
    VAR
      CustLedgEntry2@1001 : Record "Cust. Ledger Entry";
    BEGIN
      CustLedgEntry2.COPY(CustLedgEntry);
      CustLedgEntry2.SETFILTER("Bal. Account Type",'<>%1',CustLedgEntry2."Bal. Account Type"::"Bank Account");

      if not CustLedgEntry2.ISEMPTY then
        ERROR(WrongFieldValueErr,CustLedgEntry2.FIELDCAPTION("Bal. Account Type"),
          CustLedgEntry2.TABLECAPTION,CustLedgEntry2."Bal. Account Type"::"Bank Account");
    END;

    LOCAL PROCEDURE CheckBalAccountNo@3(VAR CustLedgEntry@1000 : Record "Cust. Ledger Entry");
    VAR
      CustLedgEntry2@1001 : Record "Cust. Ledger Entry";
    BEGIN
      CustLedgEntry2.COPY(CustLedgEntry);
      CustLedgEntry2.SETRANGE("Bal. Account Type",CustLedgEntry2."Bal. Account Type"::"Bank Account");
      CustLedgEntry2.SETFILTER("Bal. Account No.",'<>%1',CustLedgEntry."Bal. Account No.");

      if not CustLedgEntry2.ISEMPTY then
        ERROR(WrongFieldValueErr,CustLedgEntry2.FIELDCAPTION("Bal. Account No."),
          CustLedgEntry2.TABLECAPTION,CustLedgEntry."Bal. Account No.");
    END;

    LOCAL PROCEDURE CheckBankAccount@7(VAR CustLedgEntry@1000 : Record "Cust. Ledger Entry");
    VAR
      BankAccount@1001 : Record "Bank Account";
    BEGIN
      BankAccount.GET(CustLedgEntry."Bal. Account No.");
      BankAccount.TESTFIELD("Payment Export Format");
    END;

    BEGIN
    END.
  }
}

