OBJECT Codeunit 260 Document-Mailing
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    TableNo="Job Queue Entry";
    Permissions=TableData "O365 Document Sent History"=imd;
    OnRun=VAR
            ReportSelections@1005 : Record "Report Selections";
            O365DocumentSentHistory@1007 : Record "O365 Document Sent History";
          BEGIN
            O365DocumentSentHistory.NewInProgressFromJobQueue(Rec);

            ReportSelections.SendEmailInBackground(Rec);
          END;

  }
  CODE
  {
    VAR
      EmailSubjectCapTxt@1001 : TextConst '@@@="%1 = Customer Name. %2 = Document Type %3 = Invoice No.";ENU=%1 - %2 %3';
      ReportAsPdfFileNameMsg@1000 : TextConst '@@@="%1 = Document Type %2 = Invoice No.";ENU=Sales %1 %2.pdf';
      EmailSubjectPluralCapTxt@1003 : TextConst '@@@="%1 = Customer Name. %2 = Document Type in plural form";ENU=%1 - %2';
      ReportAsPdfFileNamePluralMsg@1002 : TextConst '@@@="%1 = Document Type in plural form";ENU=Sales %1.pdf';
      JobsReportAsPdfFileNameMsg@1004 : TextConst '@@@="%1 = Document Type %2 = Job Number";ENU=%1 %2.pdf';
      PdfFileNamePluralMsg@1005 : TextConst '@@@="%1 = Document Type in plural form";ENU=%1.pdf';
      IdentityManagement@1006 : Codeunit "Identity Management";
      InvoiceEmailSubjectTxt@1008 : TextConst '@@@="%1 = name of the company";ENU=Invoice from %1';
      QuoteEmailSubjectTxt@1007 : TextConst '@@@="%1 = name of the company";ENU=Estimate from %1';

    [Internal]
    PROCEDURE EmailFile@3(AttachmentFilePath@1001 : Text[250];AttachmentFileName@1005 : Text[250];HtmlBodyFilePath@1007 : Text[250];PostedDocNo@1000 : Code[20];ToEmailAddress@1006 : Text[250];EmailDocName@1008 : Text[250];HideDialog@1003 : Boolean;ReportUsage@1010 : Integer) : Boolean;
    VAR
      TempEmailItem@1002 : TEMPORARY Record "Email Item";
      OfficeMgt@1009 : Codeunit "Office Management";
    BEGIN
      GetAttachmentFileName(AttachmentFileName,PostedDocNo,EmailDocName,ReportUsage);

      with TempEmailItem do begin
        "Send to" := ToEmailAddress;
        AddCcBcc;
        AttachIncomingDocuments(PostedDocNo);
        Subject := GetEmailSubject(PostedDocNo,EmailDocName,ReportUsage);
        "Attachment File Path" := AttachmentFilePath;
        "Attachment Name" := AttachmentFileName;
        if HtmlBodyFilePath <> '' then begin
          VALIDATE("Plaintext Formatted",false);
          VALIDATE("Body File Path",HtmlBodyFilePath);
        end;
        if OfficeMgt.AttachAvailable then
          OfficeMgt.AttachDocument(AttachmentFilePath,AttachmentFileName,GetBodyText,Subject)
        else
          exit(Send(HideDialog));
      end;
    END;

    [Internal]
    PROCEDURE EmailFileWithSubject@1(AttachmentFilePath@1001 : Text;AttachmentFileName@1005 : Text;HtmlBodyFilePath@1007 : Text;EmailSubject@1000 : Text;ToEmailAddress@1006 : Text;HideDialog@1003 : Boolean) : Boolean;
    VAR
      TempEmailItem@1002 : TEMPORARY Record "Email Item";
      OfficeMgt@1004 : Codeunit "Office Management";
    BEGIN
      with TempEmailItem do begin
        "Send to" := COPYSTR(ToEmailAddress,1,MAXSTRLEN("Send to"));
        Subject := COPYSTR(EmailSubject,1,MAXSTRLEN(Subject));
        "Attachment File Path" := COPYSTR(AttachmentFilePath,1,MAXSTRLEN("Attachment File Path"));
        "Attachment Name" := COPYSTR(AttachmentFileName,1,MAXSTRLEN("Attachment Name"));

        VALIDATE("Plaintext Formatted",false);
        VALIDATE("Body File Path",COPYSTR(HtmlBodyFilePath,1,MAXSTRLEN("Body File Path")));
        if OfficeMgt.AttachAvailable then
          OfficeMgt.AttachDocument(AttachmentFilePath,AttachmentFileName,GetBodyText,Subject)
        else
          exit(Send(HideDialog));
      end;
    END;

    [External]
    PROCEDURE GetToAddressFromCustomer@16(BillToCustomerNo@1000 : Code[20]) : Text[250];
    VAR
      Customer@1002 : Record Customer;
      ToAddress@1001 : Text;
    BEGIN
      if Customer.GET(BillToCustomerNo) then
        ToAddress := Customer."E-Mail";

      exit(ToAddress);
    END;

    [External]
    PROCEDURE GetToAddressFromVendor@2(BuyFromVendorNo@1000 : Code[20]) : Text[250];
    VAR
      Vendor@1002 : Record Vendor;
      ToAddress@1001 : Text;
    BEGIN
      if Vendor.GET(BuyFromVendorNo) then
        ToAddress := Vendor."E-Mail";

      exit(ToAddress);
    END;

    [External]
    PROCEDURE GetAttachmentFileName@4(VAR AttachmentFileName@1000 : Text[250];PostedDocNo@1001 : Code[20];EmailDocumentName@1004 : Text[250];ReportUsage@1002 : Integer);
    VAR
      ReportSelections@1003 : Record "Report Selections";
    BEGIN
      if AttachmentFileName = '' then
        if PostedDocNo = '' then begin
          if ReportUsage = ReportSelections.Usage::"P.Order" then
            AttachmentFileName := STRSUBSTNO(PdfFileNamePluralMsg,EmailDocumentName)
          else
            AttachmentFileName := STRSUBSTNO(ReportAsPdfFileNamePluralMsg,EmailDocumentName);
        end else
          case ReportUsage of
            ReportSelections.Usage::JQ,ReportSelections.Usage::"P.Order":
              AttachmentFileName := STRSUBSTNO(JobsReportAsPdfFileNameMsg,EmailDocumentName,PostedDocNo);
            else
              AttachmentFileName := STRSUBSTNO(ReportAsPdfFileNameMsg,EmailDocumentName,PostedDocNo)
          end;
    END;

    [External]
    PROCEDURE GetEmailSubject@5(PostedDocNo@1000 : Code[20];EmailDocumentName@1001 : Text[250];ReportUsage@1004 : Integer) Subject : Text[250];
    VAR
      EmailParameter@1003 : Record "Email Parameter";
      CompanyInformation@1002 : Record "Company Information";
      ReportSelections@1005 : Record "Report Selections";
      SalesHeader@1007 : Record "Sales Header";
      DocumentType@1006 : Option;
    BEGIN
      if EmailParameter.GetEntryWithReportUsage(PostedDocNo,ReportUsage,EmailParameter."Parameter Type"::Subject) then
        exit(EmailParameter.GetParameterValue);
      CompanyInformation.GET;
      if IdentityManagement.IsInvAppId then begin
        ReportSelections.ReportUsageToDocumentType(DocumentType,ReportUsage);
        case DocumentType of
          SalesHeader."Document Type"::Invoice:
            exit(STRSUBSTNO(InvoiceEmailSubjectTxt,CompanyInformation.Name));
          SalesHeader."Document Type"::Quote:
            exit(STRSUBSTNO(QuoteEmailSubjectTxt,CompanyInformation.Name));
        end;
      end;
      if PostedDocNo = '' then
        Subject := COPYSTR(
            STRSUBSTNO(EmailSubjectPluralCapTxt,CompanyInformation.Name,EmailDocumentName),1,MAXSTRLEN(Subject))
      else
        Subject := COPYSTR(
            STRSUBSTNO(EmailSubjectCapTxt,CompanyInformation.Name,EmailDocumentName,PostedDocNo),1,MAXSTRLEN(Subject))
    END;

    PROCEDURE SendQuoteInForeground@6(SalesHeader@1002 : Record "Sales Header") : Boolean;
    VAR
      O365DocumentSentHistory@1000 : Record "O365 Document Sent History";
      ReportSelections@1001 : Record "Report Selections";
      O365SalesEmailManagement@1026 : Codeunit "O365 Sales Email Management";
    BEGIN
      if not O365SalesEmailManagement.ShowEmailDialog(SalesHeader."No.") then
        exit;

      O365DocumentSentHistory.NewFailedFromQuote(SalesHeader);
      // 0 is the option number for ReportSelections.Usage::"S.Quote", which is renamed in RU
      if ReportSelections.SendEmailInForeground(
           SalesHeader.RECORDID,SalesHeader."No.",SalesHeader.GetDocTypeTxt,0,
           true,SalesHeader."Bill-to Customer No.")
      then begin
        O365DocumentSentHistory.VALIDATE("Job Last Status",O365DocumentSentHistory."Job Last Status"::Finished);
        O365DocumentSentHistory.MODIFY(true);
        exit(true);
      end;
    END;

    PROCEDURE SendPostedInvoiceInForeground@8(SalesInvoiceHeader@1002 : Record "Sales Invoice Header") : Boolean;
    VAR
      O365DocumentSentHistory@1000 : Record "O365 Document Sent History";
      ReportSelections@1001 : Record "Report Selections";
      O365SalesEmailManagement@1028 : Codeunit "O365 Sales Email Management";
    BEGIN
      if not O365SalesEmailManagement.ShowEmailDialog(SalesInvoiceHeader."No.") then
        exit;

      O365DocumentSentHistory.NewFailedFromPostedinvoice(SalesInvoiceHeader);
      // 2 is the option number for ReportSelections.Usage::"S.Invoice", which is renamed in RU
      if ReportSelections.SendEmailInForeground(
           SalesInvoiceHeader.RECORDID,SalesInvoiceHeader."No.",'Invoice',2,
           true,SalesInvoiceHeader."Bill-to Customer No.")
      then begin
        O365DocumentSentHistory.VALIDATE("Job Last Status",O365DocumentSentHistory."Job Last Status"::Finished);
        O365DocumentSentHistory.MODIFY(true);
        exit(true);
      end;
    END;

    BEGIN
    END.
  }
}

