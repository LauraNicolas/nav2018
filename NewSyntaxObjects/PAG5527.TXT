OBJECT Page 5527 Purchase Invoice Entity
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=[@@@={Locked};
               ENU=purchaseInvoices];
    SourceTable="Purch. Inv. Entity Aggregate";
    DelayedInsert=true;
    PageType=API;
    OnAfterGetRecord=VAR
                       PurchInvAggregator@1000 : Codeunit "Purch. Inv. Aggregator";
                     BEGIN
                       SetCalculatedFields;
                       PurchInvAggregator.RedistributeInvoiceDiscounts(Rec);
                     END;

    OnNewRecord=BEGIN
                  ClearCalculatedFields;
                END;

    OnInsertRecord=VAR
                     PurchInvAggregator@1000 : Codeunit "Purch. Inv. Aggregator";
                   BEGIN
                     CheckVendor;
                     ProcessBillingPostalAddress;

                     PurchInvAggregator.PropagateOnInsert(Rec,TempFieldBuffer);
                     SetCalculatedFields;

                     PurchInvAggregator.RedistributeInvoiceDiscounts(Rec);

                     exit(false);
                   END;

    OnModifyRecord=VAR
                     PurchInvAggregator@1000 : Codeunit "Purch. Inv. Aggregator";
                   BEGIN
                     if xRec.Id <> Id then
                       ERROR(CannotChangeIDErr);

                     ProcessBillingPostalAddress;

                     PurchInvAggregator.PropagateOnModify(Rec,TempFieldBuffer);

                     SetCalculatedFields;

                     PurchInvAggregator.RedistributeInvoiceDiscounts(Rec);

                     exit(false);
                   END;

    OnDeleteRecord=VAR
                     PurchInvAggregator@1000 : Codeunit "Purch. Inv. Aggregator";
                   BEGIN
                     PurchInvAggregator.PropagateOnDelete(Rec);

                     exit(false);
                   END;

    ODataKeyFields=Id;
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=id;
                CaptionML=[@@@={Locked};
                           ENU=id];
                ApplicationArea=#All;
                SourceExpr=Id;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO(Id));
                           END;

                ImplicitType=GUID }

    { 4   ;2   ;Field     ;
                Name=number;
                CaptionML=[@@@={Locked};
                           ENU=Number];
                ApplicationArea=#All;
                SourceExpr="No.";
                Editable=FALSE;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("No."));
                           END;

                ImplicitType=Code20 }

    { 5   ;2   ;Field     ;
                Name=invoiceDate;
                CaptionML=[@@@={Locked};
                           ENU=invoiceDate];
                ApplicationArea=#All;
                SourceExpr="Document Date";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Document Date"));
                             WORKDATE("Document Date"); // TODO: replicate page logic and set other dates appropriately
                           END;

                ImplicitType=Date }

    { 6   ;2   ;Field     ;
                Name=dueDate;
                CaptionML=[@@@={Locked};
                           ENU=dueDate];
                ApplicationArea=#All;
                SourceExpr="Due Date";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Due Date"));
                           END;

                ImplicitType=Date }

    { 18  ;2   ;Field     ;
                Name=vendorInvoiceNumber;
                CaptionML=[@@@={Locked};
                           ENU=vendorInvoiceNumber];
                ApplicationArea=#All;
                SourceExpr="Vendor Invoice No.";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Vendor Invoice No."));
                           END;

                ImplicitType=Code35 }

    { 7   ;2   ;Field     ;
                Name=vendorId;
                CaptionML=[@@@={Locked};
                           ENU=vendorId];
                ApplicationArea=#All;
                SourceExpr="Vendor Id";
                OnValidate=BEGIN
                             Vendor.SETRANGE(Id,"Vendor Id");
                             if not Vendor.FINDFIRST then
                               ERROR(CouldNotFindVendorErr);

                             "Buy-from Vendor No." := Vendor."No.";
                             RegisterFieldSet(FIELDNO("Vendor Id"));
                             RegisterFieldSet(FIELDNO("Buy-from Vendor No."));
                           END;

                ImplicitType=GUID }

    { 19  ;2   ;Field     ;
                Name=vendorNumber;
                CaptionML=[@@@={Locked};
                           ENU=vendorNumber];
                ApplicationArea=#All;
                SourceExpr="Buy-from Vendor No.";
                OnValidate=BEGIN
                             if Vendor."No." <> '' then
                               exit;

                             if not Vendor.GET("Buy-from Vendor No.") then
                               ERROR(CouldNotFindVendorErr);

                             "Vendor Id" := Vendor.Id;
                             RegisterFieldSet(FIELDNO("Vendor Id"));
                             RegisterFieldSet(FIELDNO("Buy-from Vendor No."));
                           END;

                ImplicitType=Code20 }

    { 20  ;2   ;Field     ;
                Name=vendorName;
                CaptionML=[@@@={Locked};
                           ENU=vendorName];
                ApplicationArea=#All;
                SourceExpr="Buy-from Vendor Name";
                ImplicitType=Text50 }

    { 21  ;2   ;Field     ;
                Name=buyFromAddress;
                CaptionML=[@@@={Locked};
                           ENU=buyFromAddress];
                ToolTipML=ENU=Specifies the billing address of the Purchase Invoice.;
                ApplicationArea=#All;
                SourceExpr=BillingPostalAddressJSONText;
                OnValidate=BEGIN
                             BillingPostalAddressSet := true;
                           END;

                ODataEDMType=POSTALADDRESS;
                ImplicitType=Text }

    { 8   ;2   ;Field     ;
                Name=currencyCode;
                CaptionML=[@@@={Locked};
                           ENU=currencyCode];
                ApplicationArea=#All;
                SourceExpr=CurrencyCodeTxt;
                OnValidate=BEGIN
                             "Currency Code" :=
                               GraphMgtGeneralTools.TranslateCurrencyCodeToNAVCurrencyCode(
                                 LCYCurrencyCode,COPYSTR(CurrencyCodeTxt,1,MAXSTRLEN(LCYCurrencyCode)));
                             RegisterFieldSet(FIELDNO("Currency Code"));
                           END;

                ImplicitType=Text }

    { 9   ;2   ;Field     ;
                Name=paymentTerms;
                CaptionML=[@@@={Locked};
                           ENU=paymentTerms];
                ApplicationArea=#All;
                SourceExpr="Payment Terms Code";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Payment Terms Code"));
                           END;

                ImplicitType=Code10 }

    { 10  ;2   ;Field     ;
                Name=shipmentMethod;
                CaptionML=[@@@={Locked};
                           ENU=shipmentMethod];
                ApplicationArea=#All;
                SourceExpr="Shipment Method Code";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Shipment Method Code"));
                           END;

                ImplicitType=Code10 }

    { 22  ;2   ;Field     ;
                Name=pricesIncludeTax;
                CaptionML=[@@@={Locked};
                           ENU=pricesIncludeTax];
                ApplicationArea=#All;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Prices Including VAT"));
                           END;

                ImplicitType=Boolean }

    { 23  ;2   ;Part      ;
                Name=purchaseInvoiceLines;
                CaptionML=[@@@={Locked};
                           ENU=Lines];
                ApplicationArea=#All;
                SubPageLink="Document Id"=FIELD(Id);
                PagePartID="Purchase Invoice Line Entity";
                PartType=Page }

    { 12  ;2   ;Field     ;
                Name=discountAmount;
                CaptionML=[@@@={Locked};
                           ENU=discountAmount];
                ApplicationArea=#All;
                SourceExpr="Invoice Discount Amount";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Invoice Discount Amount"));
                           END;

                ImplicitType=Decimal }

    { 13  ;2   ;Field     ;
                Name=discountAppliedBeforeTax;
                CaptionML=[@@@={Locked};
                           ENU=discountAppliedBeforeTax];
                ApplicationArea=#All;
                SourceExpr="Discount Applied Before Tax";
                ImplicitType=Boolean }

    { 11  ;2   ;Field     ;
                Name=totalAmountExcludingTax;
                CaptionML=[@@@={Locked};
                           ENU=totalAmountExcludingTax];
                ApplicationArea=#All;
                SourceExpr=Amount;
                Editable=FALSE;
                ImplicitType=Decimal }

    { 14  ;2   ;Field     ;
                Name=totalTaxAmount;
                CaptionML=[@@@={Locked};
                           ENU=totalTaxAmount];
                ApplicationArea=#All;
                SourceExpr="Total Tax Amount";
                Editable=FALSE;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Total Tax Amount"));
                           END;

                ImplicitType=Decimal }

    { 17  ;2   ;Field     ;
                Name=totalAmountIncludingTax;
                CaptionML=[@@@={Locked};
                           ENU=totalAmountIncludingTax];
                ApplicationArea=#All;
                SourceExpr="Amount Including VAT";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Amount Including VAT"));
                           END;

                ImplicitType=Decimal }

    { 15  ;2   ;Field     ;
                Name=status;
                CaptionML=[@@@={Locked};
                           ENU=status];
                ApplicationArea=#All;
                SourceExpr=Status;
                Editable=FALSE;
                ImplicitType=Option }

    { 16  ;2   ;Field     ;
                Name=lastModifiedDateTime;
                CaptionML=[@@@={Locked};
                           ENU=lastModifiedDateTime];
                ApplicationArea=#All;
                SourceExpr="Last Modified Date Time";
                ImplicitType=DateTime }

  }
  CODE
  {
    VAR
      TempFieldBuffer@1006 : TEMPORARY Record "Field Buffer";
      Vendor@1005 : Record Vendor;
      GraphMgtGeneralTools@1004 : Codeunit "Graph Mgt - General Tools";
      LCYCurrencyCode@1003 : Code[10];
      CurrencyCodeTxt@1002 : Text;
      BillingPostalAddressJSONText@1001 : Text;
      BillingPostalAddressSet@1000 : Boolean;
      CannotChangeIDErr@1010 : TextConst '@@@={Locked};ENU=The id cannot be changed.';
      VendorNotProvidedErr@1009 : TextConst '@@@={Locked};ENU=A vendorNumber or a vendorID must be provided.';
      CouldNotFindVendorErr@1008 : TextConst '@@@={Locked};ENU=The vendor cannot be found.';

    LOCAL PROCEDURE SetCalculatedFields@6();
    VAR
      GraphMgtPurchaseInvoice@1000 : Codeunit "Graph Mgt - Purchase Invoice";
    BEGIN
      BillingPostalAddressJSONText := GraphMgtPurchaseInvoice.PayToVendorAddressToJSON(Rec);
      CurrencyCodeTxt := GraphMgtGeneralTools.TranslateNAVCurrencyCodeToCurrencyCode(LCYCurrencyCode,"Currency Code");
    END;

    LOCAL PROCEDURE ClearCalculatedFields@10();
    BEGIN
      CLEAR(BillingPostalAddressJSONText);
      TempFieldBuffer.DELETEALL;
    END;

    LOCAL PROCEDURE RegisterFieldSet@11(FieldNo@1000 : Integer);
    VAR
      LastOrderNo@1001 : Integer;
    BEGIN
      LastOrderNo := 1;
      if TempFieldBuffer.FINDLAST then
        LastOrderNo := TempFieldBuffer.Order + 1;

      CLEAR(TempFieldBuffer);
      TempFieldBuffer.Order := LastOrderNo;
      TempFieldBuffer."Table ID" := DATABASE::"Purch. Inv. Entity Aggregate";
      TempFieldBuffer."Field ID" := FieldNo;
      TempFieldBuffer.INSERT;
    END;

    LOCAL PROCEDURE CheckVendor@1();
    VAR
      BlankGUID@1000 : GUID;
    BEGIN
      if ("Buy-from Vendor No." = '') and
         ("Vendor Id" = BlankGUID)
      then
        ERROR(VendorNotProvidedErr);
    END;

    LOCAL PROCEDURE ProcessBillingPostalAddress@5();
    VAR
      GraphMgtPurchaseInvoice@1000 : Codeunit "Graph Mgt - Purchase Invoice";
    BEGIN
      if not BillingPostalAddressSet then
        exit;

      GraphMgtPurchaseInvoice.ProcessComplexTypes(Rec,BillingPostalAddressJSONText);

      if xRec."Buy-from Address" <> "Buy-from Address" then
        RegisterFieldSet(FIELDNO("Buy-from Address"));

      if xRec."Buy-from Address 2" <> "Buy-from Address 2" then
        RegisterFieldSet(FIELDNO("Buy-from Address 2"));

      if xRec."Buy-from City" <> "Buy-from City" then
        RegisterFieldSet(FIELDNO("Buy-from City"));

      if xRec."Buy-from Country/Region Code" <> "Buy-from Country/Region Code" then
        RegisterFieldSet(FIELDNO("Buy-from Country/Region Code"));

      if xRec."Buy-from Post Code" <> "Buy-from Post Code" then
        RegisterFieldSet(FIELDNO("Buy-from Post Code"));

      if xRec."Buy-from County" <> "Buy-from County" then
        RegisterFieldSet(FIELDNO("Buy-from County"));
    END;

    BEGIN
    END.
  }
}

