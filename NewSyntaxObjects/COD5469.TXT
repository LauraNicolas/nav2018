OBJECT Codeunit 5469 Library API - General Journal
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GenJnlManagement@1001 : Codeunit GenJnlManagement;
      NoSeriesMgt@1000 : Codeunit NoSeriesManagement;

    PROCEDURE InitializeLine@17(VAR GenJournalLine@1003 : Record "Gen. Journal Line";LineNo@1004 : Integer;DocumentNo@1005 : Code[20];ExternalDocumentNo@1008 : Code[35]);
    VAR
      GenJournalBatch@1001 : Record "Gen. Journal Batch";
      CopyValuesFromGenJnlLine@1007 : Record "Gen. Journal Line";
      CopyValuesFromGenJnlLineSpecified@1002 : Boolean;
      BottomLine@1000 : Boolean;
    BEGIN
      GenJournalBatch.GET(GenJournalLine."Journal Template Name",GenJournalLine."Journal Batch Name");

      GenJournalLine."Line No." := LineNo;
      GetCopyValuesFromLine(GenJournalLine,CopyValuesFromGenJnlLine,CopyValuesFromGenJnlLineSpecified,BottomLine);

      if BottomLine and
         (LineNo <> 0)
      then begin
        GenJournalLine."Line No." := 0;
        SetUpNewLine(GenJournalLine,CopyValuesFromGenJnlLine,CopyValuesFromGenJnlLineSpecified,BottomLine);
        GenJournalLine."Line No." := LineNo;
      end else
        SetUpNewLine(GenJournalLine,CopyValuesFromGenJnlLine,CopyValuesFromGenJnlLineSpecified,BottomLine);

      GenJournalLine."External Document No." := ExternalDocumentNo;
      if DocumentNo <> '' then
        GenJournalLine."Document No." := DocumentNo
      else
        AlterDocNoBasedOnExternalDocNo(GenJournalLine,CopyValuesFromGenJnlLine,GenJournalBatch,CopyValuesFromGenJnlLineSpecified);
    END;

    PROCEDURE EnsureGenJnlBatchExists@1(TemplateNameTxt@1000 : Text[10];BatchNameTxt@1001 : Text[10]);
    VAR
      GenJournalBatch@1002 : Record "Gen. Journal Batch";
    BEGIN
      if not GenJournalBatch.GET(TemplateNameTxt,BatchNameTxt) then begin
        GenJournalBatch.VALIDATE("Journal Template Name",TemplateNameTxt);
        GenJournalBatch.SetupNewBatch;
        GenJournalBatch.VALIDATE(Name,BatchNameTxt);
        GenJournalBatch.VALIDATE(Description,GenJournalBatch.Name);
        GenJournalBatch.INSERT(true);
        COMMIT;
      end;
    END;

    LOCAL PROCEDURE GetCopyValuesFromLine@6(VAR GenJournalLine@1002 : Record "Gen. Journal Line";VAR CopyValuesFromGenJnlLine@1001 : Record "Gen. Journal Line";VAR CopyValuesFromGenJnlLineSpecified@1000 : Boolean;VAR BottomLine@1003 : Boolean);
    BEGIN
      // This function is replicating the behavior of the page
      // If line is at the bottom, we will copy values from previous line
      // If line is in the middle, we will copy values from next line
      BottomLine := true;
      CopyValuesFromGenJnlLineSpecified := false;

      if GenJournalLine."Line No." <> 0 then begin
        CopyValuesFromGenJnlLine.RESET;
        CopyValuesFromGenJnlLine.COPYFILTERS(GenJournalLine);
        CopyValuesFromGenJnlLine.SETFILTER("Line No.",'>%1',GenJournalLine."Line No.");
        if CopyValuesFromGenJnlLine.FINDFIRST then begin
          CopyValuesFromGenJnlLineSpecified := true;
          BottomLine := false;
          exit;
        end;
      end;

      if not CopyValuesFromGenJnlLineSpecified then begin
        CopyValuesFromGenJnlLine.RESET;
        CopyValuesFromGenJnlLine.COPYFILTERS(GenJournalLine);
        if CopyValuesFromGenJnlLine.FINDLAST then
          CopyValuesFromGenJnlLineSpecified := true;
      end;
    END;

    LOCAL PROCEDURE SetUpNewLine@7(VAR GenJournalLine@1003 : Record "Gen. Journal Line";CopyValuesFromGenJnlLine@1002 : Record "Gen. Journal Line";CopyValuesFromGenJnlLineSpecified@1001 : Boolean;BottomLine@1000 : Boolean);
    VAR
      Balance@1007 : Decimal;
      TotalBalance@1006 : Decimal;
      ShowBalance@1005 : Boolean;
      ShowTotalBalance@1004 : Boolean;
    BEGIN
      if CopyValuesFromGenJnlLineSpecified then
        GenJnlManagement.CalcBalance(
          GenJournalLine,CopyValuesFromGenJnlLine,Balance,TotalBalance,ShowBalance,ShowTotalBalance);

      GenJournalLine.SetUpNewLine(CopyValuesFromGenJnlLine,Balance,BottomLine);

      if GenJournalLine."Line No." = 0 then
        GenJournalLine.VALIDATE(
          "Line No.",GenJournalLine.GetNewLineNo(GenJournalLine."Journal Template Name",GenJournalLine."Journal Batch Name"));
    END;

    LOCAL PROCEDURE AlterDocNoBasedOnExternalDocNo@5(VAR GenJournalLine@1001 : Record "Gen. Journal Line";CopyValuesFromGenJnlLine@1002 : Record "Gen. Journal Line";GenJnlBatch@1003 : Record "Gen. Journal Batch";CopyValuesFromGenJnlLineSpecified@1000 : Boolean);
    VAR
      NoSeriesLine@1004 : Record "No. Series Line";
    BEGIN
      if CopyValuesFromGenJnlLineSpecified and
         (CopyValuesFromGenJnlLine."Document No." = GenJournalLine."Document No.") and
         (CopyValuesFromGenJnlLine."External Document No." <> GenJournalLine."External Document No.")
      then begin
        if GenJnlBatch."No. Series" <> '' then begin
          NoSeriesMgt.SetNoSeriesLineFilter(NoSeriesLine,GenJnlBatch."No. Series",GenJournalLine."Posting Date");
          if NoSeriesLine."Increment-by No." > 1 then
            NoSeriesMgt.IncrementNoText(GenJournalLine."Document No.",NoSeriesLine."Increment-by No.")
          else
            GenJournalLine."Document No." := INCSTR(GenJournalLine."Document No.");
        end else
          GenJournalLine."Document No." := INCSTR(GenJournalLine."Document No.");
      end;
    END;

    PROCEDURE GetBatchNameFromId@2(JournalBatchId@1001 : GUID) : Code[10];
    VAR
      GenJournalBatch@1000 : Record "Gen. Journal Batch";
    BEGIN
      GenJournalBatch.SETRANGE(Id,JournalBatchId);
      GenJournalBatch.FINDFIRST;

      exit(GenJournalBatch.Name);
    END;

    BEGIN
    END.
  }
}

