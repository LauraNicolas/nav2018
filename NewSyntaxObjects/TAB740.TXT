OBJECT Table 740 VAT Report Header
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               if "No." = '' then
                 NoSeriesMgt.InitSeries(GetNoSeriesCode,xRec."No. Series",WORKDATE,"No.","No. Series");

               InitRecord;
             END;

    OnModify=BEGIN
               CheckDates;
             END;

    OnDelete=VAR
               VATStatementReportLine@1000 : Record "VAT Statement Report Line";
               VATReportLineRelation@1001 : Record "VAT Report Line Relation";
             BEGIN
               TESTFIELD(Status,Status::Open);
               VATStatementReportLine.SETRANGE("VAT Report No.","No.");
               VATStatementReportLine.SETRANGE("VAT Report Config. Code","VAT Report Config. Code");
               VATStatementReportLine.DELETEALL;
               VATReportLineRelation.SETRANGE("VAT Report No.","No.");
               VATReportLineRelation.DELETEALL;
             END;

    OnRename=BEGIN
               ERROR(Text004);
             END;

    CaptionML=ENU=VAT Report Header;
    LookupPageID="VAT Report List";
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                if "No." <> xRec."No." then begin
                                                                  NoSeriesMgt.TestManual(GetNoSeriesCode);
                                                                  "No. Series" := '';
                                                                end;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 2   ;   ;VAT Report Config. Code;Option     ;TableRelation="VAT Reports Configuration"."VAT Report Type";
                                                   OnValidate=BEGIN
                                                                CheckEditingAllowed;
                                                              END;

                                                   CaptionML=ENU=VAT Report Config. Code;
                                                   OptionCaptionML=ENU=EC Sales List,VAT Return;
                                                   OptionString="EC Sales List","VAT Return";
                                                   Editable=true }
    { 3   ;   ;VAT Report Type     ;Option        ;OnValidate=BEGIN
                                                                CheckEditingAllowed;

                                                                case "VAT Report Type" of
                                                                  "VAT Report Type"::Standard:
                                                                    "Original Report No." := '';
                                                                  "VAT Report Type"::Corrective,"VAT Report Type"::Supplementary:
                                                                    begin
                                                                      VATReportSetup.GET;
                                                                      if VATReportSetup."Modify Submitted Reports" then
                                                                        ERROR(Text001,VATReportSetup.FIELDCAPTION("Modify Submitted Reports"),VATReportSetup.TABLECAPTION);
                                                                    end;
                                                                end;
                                                              END;

                                                   CaptionML=ENU=VAT Report Type;
                                                   OptionCaptionML=ENU=Standard,Corrective,Supplementary;
                                                   OptionString=Standard,Corrective,Supplementary }
    { 4   ;   ;Start Date          ;Date          ;OnValidate=BEGIN
                                                                CheckEditingAllowed;
                                                                TESTFIELD("Start Date");
                                                                HandleDateInput;
                                                              END;

                                                   CaptionML=ENU=Start Date }
    { 5   ;   ;End Date            ;Date          ;OnValidate=BEGIN
                                                                CheckEditingAllowed;
                                                                TESTFIELD("End Date");
                                                                CheckEndDate;
                                                                HandleDateInput;
                                                              END;

                                                   CaptionML=ENU=End Date }
    { 6   ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Open,Released,Submitted,Accepted,Closed,Rejected,Canceled;
                                                   OptionString=Open,Released,Submitted,Accepted,Closed,Rejected,Canceled;
                                                   Editable=false }
    { 8   ;   ;No. Series          ;Code20        ;OnValidate=BEGIN
                                                                CheckEditingAllowed;
                                                              END;

                                                   CaptionML=ENU=No. Series }
    { 9   ;   ;Original Report No. ;Code20        ;OnValidate=VAR
                                                                VATReportHeader@1000 : Record "VAT Report Header";
                                                              BEGIN
                                                                CheckEditingAllowed;

                                                                case "VAT Report Type" of
                                                                  "VAT Report Type"::Standard:
                                                                    begin
                                                                      if "Original Report No." <> '' then
                                                                        ERROR(Text006,"VAT Report Type");
                                                                    end;
                                                                  "VAT Report Type"::Corrective,"VAT Report Type"::Supplementary:
                                                                    begin
                                                                      TESTFIELD("Original Report No.");
                                                                      if "Original Report No." = "No." then
                                                                        ERROR(Text005);
                                                                      VATReportHeader.GET("Original Report No.");
                                                                      "Start Date" := VATReportHeader."Start Date";
                                                                      "End Date" := VATReportHeader."End Date";
                                                                    end;
                                                                end;
                                                              END;

                                                   OnLookup=VAR
                                                              LookupVATReportHeader@1001 : Record "VAT Report Header";
                                                              VATReportList@1000 : Page "VAT Report List";
                                                              ShowLookup@1002 : Boolean;
                                                              TypeFilterText@1004 : Text[1024];
                                                            BEGIN
                                                              TypeFilterText := '';
                                                              ShowLookup := false;

                                                              case "VAT Report Type" of
                                                                "VAT Report Type"::Corrective,"VAT Report Type"::Supplementary:
                                                                  ShowLookup := true;
                                                              end;

                                                              if ShowLookup then begin
                                                                LookupVATReportHeader.SETFILTER("No.",'<>' + "No.");
                                                                LookupVATReportHeader.SETRANGE(Status,Status::Accepted);
                                                                LookupVATReportHeader.SETFILTER("VAT Report Type",TypeFilterText);
                                                                VATReportList.SETTABLEVIEW(LookupVATReportHeader);
                                                                VATReportList.LOOKUPMODE(true);
                                                                if VATReportList.RUNMODAL = ACTION::LookupOK then begin
                                                                  VATReportList.GETRECORD(LookupVATReportHeader);
                                                                  VALIDATE("Original Report No.",LookupVATReportHeader."No.");
                                                                end;
                                                              end;
                                                            END;

                                                   CaptionML=ENU=Original Report No. }
    { 10  ;   ;Period Type         ;Option        ;OnValidate=BEGIN
                                                                if "Period Type" = "Period Type"::Year then
                                                                  "Period No." := 1;

                                                                HandlePeriodInput;
                                                              END;

                                                   CaptionML=ENU=Period Type;
                                                   OptionCaptionML=ENU=" ,,Month,Quarter,Year";
                                                   OptionString=" ",,Month,Quarter,Year }
    { 11  ;   ;Period No.          ;Integer       ;TableRelation="Date Lookup Buffer"."Period No." WHERE ("Period Type"=FIELD("Period Type"));
                                                   OnValidate=BEGIN
                                                                HandlePeriodInput;
                                                              END;

                                                   ValidateTableRelation=false;
                                                   CaptionML=ENU=Period No. }
    { 12  ;   ;Period Year         ;Integer       ;OnValidate=BEGIN
                                                                HandlePeriodInput;
                                                              END;

                                                   CaptionML=ENU=Period Year }
    { 13  ;   ;Message Id          ;Text250       ;CaptionML=ENU=Message Id }
    { 14  ;   ;Statement Template Name;Code10     ;TableRelation="VAT Statement Template";
                                                   CaptionML=ENU=Statement Template Name }
    { 15  ;   ;Statement Name      ;Code10        ;TableRelation="VAT Statement Name".Name WHERE ("Statement Template Name"=FIELD("Statement Template Name"));
                                                   CaptionML=ENU=Statement Name }
    { 16  ;   ;VAT Report Version  ;Code10        ;TableRelation="VAT Reports Configuration"."VAT Report Version" WHERE ("VAT Report Type"=FIELD("VAT Report Config. Code"));
                                                   CaptionML=ENU=VAT Report Version }
    { 17  ;   ;Submitted By        ;GUID          ;TableRelation=User."User Security ID";
                                                   CaptionML=ENU=Submitted By }
    { 18  ;   ;Submitted Date      ;Date          ;CaptionML=ENU=Submitted Date }
  }
  KEYS
  {
    {    ;"VAT Report Config. Code","No."         ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      VATReportSetup@1000 : Record "VAT Report Setup";
      Text001@1002 : TextConst 'ENU=The value of %1 field in the %2 window does not allow this option.';
      Text002@1001 : TextConst 'ENU=Editing is not allowed because the report is marked as %1.';
      Text003@1003 : TextConst 'ENU=The end date cannot be earlier than the start date.';
      NoSeriesMgt@1004 : Codeunit NoSeriesManagement;
      Text004@1005 : TextConst 'ENU=You cannot rename the report because it has been assigned a report number.';
      Text005@1006 : TextConst 'ENU=You cannot specify the same report as the reference report.';
      Text006@1007 : TextConst 'ENU=You cannot specify an original report for a report of type %1.';
      Text007@1008 : TextConst 'ENU=This is not allowed because of the setup in the %1 window.';
      Text008@1010 : TextConst 'ENU=You must specify an original report for a report of type %1.';

    [External]
    PROCEDURE GetNoSeriesCode@1() : Code[10];
    BEGIN
      VATReportSetup.GET;
      if "VAT Report Config. Code" = "VAT Report Config. Code"::"VAT Return" then begin
        VATReportSetup.TESTFIELD("VAT Return No. Series");
        exit(VATReportSetup."VAT Return No. Series");
      end;

      VATReportSetup.TESTFIELD("No. Series");
      exit(VATReportSetup."No. Series");
    END;

    [External]
    PROCEDURE AssistEdit@2(OldVATReportHeader@1001 : Record "VAT Report Header") : Boolean;
    BEGIN
      if NoSeriesMgt.SelectSeries(GetNoSeriesCode,OldVATReportHeader."No. Series","No. Series") then begin
        NoSeriesMgt.SetSeries("No.");
        exit(true);
      end;
    END;

    [External]
    PROCEDURE InitRecord@3();
    VAR
      VATReportsConfiguration@1011 : Record "VAT Reports Configuration";
      date@1000 : Date;
    BEGIN
      if ("VAT Report Config. Code" = "VAT Report Config. Code"::"EC Sales List") or
         ("VAT Report Config. Code" = "VAT Report Config. Code"::"VAT Return")
      then begin
        date := CALCDATE('<-1M>',WORKDATE);
        VALIDATE("Period Year",DATE2DMY(date,3));
        VALIDATE("Period Type","Period Type"::Month);
        VALIDATE("Period No.",DATE2DMY(date,2));
      end else begin
        "Start Date" := WORKDATE;
        "End Date" := WORKDATE;
      end;

      VATReportsConfiguration.SETRANGE("VAT Report Type","VAT Report Config. Code");
      if VATReportsConfiguration.FINDFIRST and (VATReportsConfiguration.COUNT = 1) then
        "VAT Report Version" := VATReportsConfiguration."VAT Report Version";
    END;

    [External]
    PROCEDURE CheckEditingAllowed@4();
    BEGIN
      if Status <> Status::Open then
        ERROR(Text002,FORMAT(Status));
    END;

    [External]
    PROCEDURE CheckDates@5();
    BEGIN
      TESTFIELD("Start Date");
      TESTFIELD("End Date");
      CheckEndDate;
    END;

    [External]
    PROCEDURE CheckEndDate@6();
    BEGIN
      if "End Date" < "Start Date" then
        ERROR(Text003);
    END;

    [External]
    PROCEDURE CheckIfCanBeSubmitted@7();
    BEGIN
      TESTFIELD(Status,Status::Released);
    END;

    [External]
    PROCEDURE CheckIfCanBeReopened@8(VATReportHeader@1000 : Record "VAT Report Header");
    BEGIN
      if VATReportHeader.Status <> VATReportHeader.Status::Released then
        ERROR(Text007,VATReportSetup.TABLECAPTION);
    END;

    [External]
    PROCEDURE CheckIfCanBeReleased@9(VATReportHeader@1000 : Record "VAT Report Header");
    BEGIN
      VATReportHeader.TESTFIELD(Status,VATReportHeader.Status::Open);

      if VATReportHeader."VAT Report Type" in ["VAT Report Type"::Corrective,"VAT Report Type"::Supplementary] then
        if VATReportHeader."Original Report No." = '' then
          ERROR(Text008,FORMAT(VATReportHeader."VAT Report Type"));
    END;

    [External]
    PROCEDURE PeriodToDate@10();
    BEGIN
      if not IsPeriodValid then
        exit;

      if "Period Type" = "Period Type"::Month then begin
        "Start Date" := DMY2DATE(1,"Period No.","Period Year");
        "End Date" := CALCDATE('<1M-1D>',"Start Date");
      end;

      if "Period Type" = "Period Type"::Quarter then begin
        "Start Date" := DMY2DATE(1,1 + ("Period No." - 1) * 3,"Period Year");
        "End Date" := CALCDATE('<+3M-1D>',"Start Date");
      end;

      if "Period Type" = "Period Type"::Year then begin
        "Start Date" := DMY2DATE(1,1,"Period Year");
        "End Date" := DMY2DATE(31,12,"Period Year");
      end;
    END;

    LOCAL PROCEDURE HandleDateInput@11();
    BEGIN
      CLEAR("Period No.");
      CLEAR("Period Type");
      CLEAR("Period Year");
    END;

    LOCAL PROCEDURE HandlePeriodInput@12();
    BEGIN
      CLEAR("Start Date");
      CLEAR("End Date");

      if not IsPeriodValid then
        exit;

      PeriodToDate;
    END;

    [External]
    PROCEDURE IsPeriodValid@13() : Boolean;
    BEGIN
      if ("Period Year" = 0) or ("Period Type" = "Period Type"::" ") or ("Period No." = 0) then
        exit(false);

      if ("Period Type" = "Period Type"::Quarter) and
         (("Period No." < 1) or ("Period No." > 4))
      then
        exit(false);

      if ("Period Type" = "Period Type"::Month) and
         (("Period No." < 1) or ("Period No." > 12))
      then
        exit(false);

      exit(true);
    END;

    BEGIN
    END.
  }
}

