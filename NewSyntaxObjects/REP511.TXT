OBJECT Report 511 Complete IC Inbox Action
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Complete IC Inbox Action;
    ProcessingOnly=true;
  }
  DATASET
  {
    { 1153;    ;DataItem;IC Inbox Transaction;
               DataItemTable="IC Inbox Transaction";
               DataItemTableView=SORTING("Transaction No.","IC Partner Code","Transaction Source","Document Type");
               OnPreDataItem=BEGIN
                               if TempGenJnlLine."Journal Template Name" <> '' then begin
                                 GenJnlTemplate.GET(TempGenJnlLine."Journal Template Name");
                                 GenJnlTemplate.TESTFIELD(Type,GenJnlTemplate.Type::Intercompany);
                                 TempGenJnlLine.SETRANGE("Journal Template Name",GenJnlTemplate.Name);
                                 TempGenJnlLine.SETRANGE("Journal Batch Name",GenJnlBatch.Name);
                               end;
                               GetGLSetup;
                             END;

               OnAfterGetRecord=VAR
                                  InboxTransaction2@1000 : Record "IC Inbox Transaction";
                                  HandledInboxTransaction2@1001 : Record "Handled IC Inbox Trans.";
                                  ICCommentLine@1002 : Record "IC Comment Line";
                                  ICPartner@1003 : Record "IC Partner";
                                BEGIN
                                  if "Line Action" = "Line Action"::"No Action" then
                                    CurrReport.SKIP;
                                  InboxTransaction2 := "IC Inbox Transaction";
                                  if ("Source Type" = "Source Type"::Journal) and
                                     (InboxTransaction2."Line Action" <> InboxTransaction2."Line Action"::Cancel) and
                                     (InboxTransaction2."Line Action" <> InboxTransaction2."Line Action"::"Return to IC Partner")
                                  then begin
                                    TempGenJnlLine.TESTFIELD("Journal Template Name");
                                    TempGenJnlLine.TESTFIELD("Journal Batch Name");
                                  end;
                                  if (InboxTransaction2."Line Action" <> InboxTransaction2."Line Action"::Cancel) and
                                     ICPartner.GET(InboxTransaction2."IC Partner Code")
                                  then
                                    ICPartner.TESTFIELD(Blocked,false);
                                  HandledInboxTransaction2.TRANSFERFIELDS(InboxTransaction2);
                                  case InboxTransaction2."Line Action" of
                                    InboxTransaction2."Line Action"::Accept:
                                      HandledInboxTransaction2.Status := HandledInboxTransaction2.Status::Accepted;
                                    InboxTransaction2."Line Action"::"Return to IC Partner":
                                      HandledInboxTransaction2.Status := HandledInboxTransaction2.Status::"Returned to IC Partner";
                                    InboxTransaction2."Line Action"::Cancel:
                                      HandledInboxTransaction2.Status := HandledInboxTransaction2.Status::Cancelled;
                                  end;
                                  if not HandledInboxTransaction2.INSERT then
                                    ERROR(
                                      Text001,InboxTransaction2.FIELDCAPTION("Transaction No."),
                                      InboxTransaction2."Transaction No.",InboxTransaction2."IC Partner Code",
                                      HandledInboxTransaction2.TABLECAPTION);
                                  InboxTransaction2.DELETE;

                                  ICIOMgt.HandleICComments(ICCommentLine."Table Name"::"IC Inbox Transaction",
                                    ICCommentLine."Table Name"::"Handled IC Inbox Transaction","Transaction No.",
                                    "IC Partner Code","Transaction Source");

                                  Forward := false;
                                END;

               ReqFilterFields="IC Partner Code","Transaction Source","Line Action" }

    { 1687;1   ;DataItem;IC Inbox Jnl. Line  ;
               DataItemTable="IC Inbox Jnl. Line";
               DataItemTableView=SORTING("Transaction No.","IC Partner Code","Transaction Source","Line No.");
               OnAfterGetRecord=VAR
                                  InboxJnlLine2@1001 : Record "IC Inbox Jnl. Line";
                                  HandledInboxJnlLine@1000 : Record "Handled IC Inbox Jnl. Line";
                                BEGIN
                                  InboxJnlLine2 := "IC Inbox Jnl. Line";
                                  case "IC Inbox Transaction"."Line Action" of
                                    "IC Inbox Transaction"."Line Action"::Accept:
                                      ICIOMgt.CreateJournalLines("IC Inbox Transaction","IC Inbox Jnl. Line",TempGenJnlLine,GenJnlTemplate);
                                    "IC Inbox Transaction"."Line Action"::"Return to IC Partner":
                                      if not Forward then begin
                                        ICIOMgt.ForwardToOutBox("IC Inbox Transaction");
                                        Forward := true;
                                      end;
                                    "IC Inbox Transaction"."Line Action"::Cancel:
                                      begin
                                        HandledInboxJnlLine.TRANSFERFIELDS(InboxJnlLine2);
                                        HandledInboxJnlLine.INSERT;
                                      end;
                                  end;

                                  ICIOMgt.MoveICJnlDimToHandled(DATABASE::"IC Inbox Jnl. Line",DATABASE::"Handled IC Inbox Jnl. Line",
                                    "IC Inbox Transaction"."Transaction No.","IC Inbox Transaction"."IC Partner Code",
                                    true,InboxJnlLine2."Line No.");
                                  InboxJnlLine2.DELETE(true);
                                END;

               OnPostDataItem=BEGIN
                                TempGenJnlLine."Document No." := INCSTR(TempGenJnlLine."Document No.");
                              END;

               DataItemLink="Transaction No."=FIELD("Transaction No."),"IC Partner Code"=FIELD("IC Partner Code"),"Transaction Source"=FIELD("Transaction Source") }

    { 2880;1   ;DataItem;IC Inbox Sales Header;
               DataItemTable="IC Inbox Sales Header";
               DataItemTableView=SORTING("IC Transaction No.","IC Partner Code","Transaction Source");
               OnAfterGetRecord=VAR
                                  InboxSalesHeader2@1000 : Record "IC Inbox Sales Header";
                                  HandledInboxSalesHeader@1005 : Record "Handled IC Inbox Sales Header";
                                  InboxSalesLine@1004 : Record "IC Inbox Sales Line";
                                  HandledInboxSalesLine@1003 : Record "Handled IC Inbox Sales Line";
                                  ICDocDim@1002 : Record "IC Document Dimension";
                                  ICDocDim2@1001 : Record "IC Document Dimension";
                                BEGIN
                                  InboxSalesHeader2 := "IC Inbox Sales Header";
                                  case "IC Inbox Transaction"."Line Action" of
                                    "IC Inbox Transaction"."Line Action"::Accept:
                                      ICIOMgt.CreateSalesDocument("IC Inbox Sales Header",
                                        ReplaceDocPostingDate,DocPostingDate);
                                    "IC Inbox Transaction"."Line Action"::"Return to IC Partner":
                                      ICIOMgt.ForwardToOutBox("IC Inbox Transaction");
                                    "IC Inbox Transaction"."Line Action"::Cancel:
                                      begin
                                        HandledInboxSalesHeader.TRANSFERFIELDS(InboxSalesHeader2);
                                        HandledInboxSalesHeader.INSERT;
                                        DimMgt.SetICDocDimFilters(
                                          ICDocDim,DATABASE::"IC Inbox Sales Header","IC Transaction No.","IC Partner Code","Transaction Source",0);
                                        if ICDocDim.FINDFIRST then
                                          DimMgt.MoveICDocDimtoICDocDim(ICDocDim,ICDocDim2,DATABASE::"Handled IC Inbox Sales Header","Transaction Source");
                                        with InboxSalesLine do  begin
                                          SETRANGE("IC Transaction No.",InboxSalesHeader2."IC Transaction No.");
                                          SETRANGE("IC Partner Code",InboxSalesHeader2."IC Partner Code");
                                          SETRANGE("Transaction Source",InboxSalesHeader2."Transaction Source");
                                          if FIND('-') then
                                            repeat
                                              HandledInboxSalesLine.TRANSFERFIELDS(InboxSalesLine);
                                              HandledInboxSalesLine.INSERT;
                                              DimMgt.SetICDocDimFilters(
                                                ICDocDim,DATABASE::"IC Inbox Sales Line","IC Transaction No.","IC Partner Code","Transaction Source","Line No.");
                                              if ICDocDim.FINDFIRST then
                                                DimMgt.MoveICDocDimtoICDocDim(ICDocDim,ICDocDim2,DATABASE::"Handled IC Inbox Sales Line","Transaction Source");
                                            until NEXT = 0;
                                        end;
                                      end;
                                  end;
                                  InboxSalesHeader2.DELETE(true);
                                END;

               DataItemLink="IC Transaction No."=FIELD("Transaction No."),"IC Partner Code"=FIELD("IC Partner Code"),"Transaction Source"=FIELD("Transaction Source") }

    { 3959;1   ;DataItem;IC Inbox Purchase Header;
               DataItemTable="IC Inbox Purchase Header";
               DataItemTableView=SORTING("IC Transaction No.","IC Partner Code","Transaction Source");
               OnAfterGetRecord=VAR
                                  InboxPurchHeader2@1001 : Record "IC Inbox Purchase Header";
                                  HandledInboxPurchHeader@1005 : Record "Handled IC Inbox Purch. Header";
                                  InboxPurchLine@1004 : Record "IC Inbox Purchase Line";
                                  HandledInboxPurchLine@1003 : Record "Handled IC Inbox Purch. Line";
                                  ICDocDim@1002 : Record "IC Document Dimension";
                                  ICDocDim2@1000 : Record "IC Document Dimension";
                                BEGIN
                                  InboxPurchHeader2 := "IC Inbox Purchase Header";
                                  case "IC Inbox Transaction"."Line Action" of
                                    "IC Inbox Transaction"."Line Action"::Accept:
                                      ICIOMgt.CreatePurchDocument("IC Inbox Purchase Header",
                                        ReplaceDocPostingDate,DocPostingDate);
                                    "IC Inbox Transaction"."Line Action"::"Return to IC Partner":
                                      ICIOMgt.ForwardToOutBox("IC Inbox Transaction");
                                    "IC Inbox Transaction"."Line Action"::Cancel:
                                      begin
                                        HandledInboxPurchHeader.TRANSFERFIELDS(InboxPurchHeader2);
                                        HandledInboxPurchHeader.INSERT;
                                        DimMgt.SetICDocDimFilters(
                                          ICDocDim,DATABASE::"IC Inbox Purchase Header","IC Transaction No.","IC Partner Code","Transaction Source",0);
                                        if ICDocDim.FINDFIRST then
                                          DimMgt.MoveICDocDimtoICDocDim(ICDocDim,ICDocDim2,DATABASE::"Handled IC Inbox Purch. Header","Transaction Source");
                                        with InboxPurchLine do  begin
                                          SETRANGE("IC Transaction No.",InboxPurchHeader2."IC Transaction No.");
                                          SETRANGE("IC Partner Code",InboxPurchHeader2."IC Partner Code");
                                          SETRANGE("Transaction Source",InboxPurchHeader2."Transaction Source");
                                          if FIND('-') then
                                            repeat
                                              HandledInboxPurchLine.TRANSFERFIELDS(InboxPurchLine);
                                              HandledInboxPurchLine.INSERT;
                                              DimMgt.SetICDocDimFilters(
                                                ICDocDim,DATABASE::"IC Inbox Purchase Line","IC Transaction No.","IC Partner Code",
                                                "Transaction Source","Line No.");
                                              if ICDocDim.FINDFIRST then
                                                DimMgt.MoveICDocDimtoICDocDim(ICDocDim,ICDocDim2,DATABASE::"Handled IC Inbox Purch. Line","Transaction Source");
                                            until NEXT = 0;
                                        end;
                                      end;
                                  end;
                                  InboxPurchHeader2.DELETE(true);
                                END;

               DataItemLink="IC Transaction No."=FIELD("Transaction No."),"IC Partner Code"=FIELD("IC Partner Code"),"Transaction Source"=FIELD("Transaction Source") }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnInit=BEGIN
               PostingDateEditable := true;
               DocPostingDateEditable := true;
             END;

      OnOpenPage=BEGIN
                   ValidateJnl;
                   if ReplaceDocPostingDate then
                     DocPostingDateEditable := true
                   else
                     DocPostingDateEditable := false;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 17  ;2   ;Group     ;
                  Name=Journals;
                  CaptionML=ENU=Journals }

      { 4   ;3   ;Field     ;
                  Name=IC Gen. Journal Template;
                  CaptionML=ENU=IC Gen. Journal Template;
                  ToolTipML=ENU=Specifies the journal template in which you want to create the journal lines.;
                  ApplicationArea=#Intercompany;
                  SourceExpr=TempGenJnlLine."Journal Template Name";
                  TableRelation="Gen. Journal Template";
                  OnValidate=BEGIN
                               TempGenJnlLine."Journal Batch Name" := '';
                               ValidateJnl;
                             END;

                  OnLookup=BEGIN
                             if PAGE.RUNMODAL(0,GenJnlTemplate) = ACTION::LookupOK then begin
                               TempGenJnlLine."Journal Template Name" := GenJnlTemplate.Name;
                               ValidateJnl;
                             end;
                           END;
                            }

      { 6   ;3   ;Field     ;
                  Name=Gen. Journal Batch;
                  Lookup=true;
                  CaptionML=ENU=Gen. Journal Batch;
                  ToolTipML=ENU=Specifies the journal batch in which you want to create the journal lines.;
                  ApplicationArea=#Intercompany;
                  SourceExpr=TempGenJnlLine."Journal Batch Name";
                  OnValidate=BEGIN
                               if TempGenJnlLine."Journal Batch Name" <> '' then begin
                                 TempGenJnlLine.TESTFIELD("Journal Template Name");
                                 GenJnlBatch.GET(TempGenJnlLine."Journal Template Name",TempGenJnlLine."Journal Batch Name");
                               end;
                               ValidateJnl;
                             END;

                  OnLookup=BEGIN
                             TempGenJnlLine.TESTFIELD("Journal Template Name");
                             GenJnlTemplate.GET(TempGenJnlLine."Journal Template Name");
                             GenJnlBatch.FILTERGROUP(2);
                             GenJnlBatch.SETRANGE("Journal Template Name",TempGenJnlLine."Journal Template Name");
                             GenJnlBatch.FILTERGROUP(0);
                             GenJnlBatch."Journal Template Name" := TempGenJnlLine."Journal Template Name";
                             GenJnlBatch.Name := TempGenJnlLine."Journal Batch Name";
                             if PAGE.RUNMODAL(0,GenJnlBatch) = ACTION::LookupOK then begin
                               Text := GenJnlBatch.Name;
                               exit(true);
                             end;
                           END;
                            }

      { 1   ;3   ;Field     ;
                  Name=Starting Document No.;
                  CaptionML=ENU=Starting Document No.;
                  ToolTipML=ENU="Specifies the next available number in the number series for the journal batch that is linked to the payment journal. When you run the batch job, this is the document number that appears on the first payment journal line. The batch job automatically fills in this field, but you can also fill in this field manually. ";
                  ApplicationArea=#Intercompany;
                  SourceExpr=TempGenJnlLine."Document No." }

      { 9   ;3   ;Field     ;
                  Name=Replace Posting Date;
                  CaptionML=ENU=Replace Posting Date;
                  ToolTipML=ENU=Specifies if you want to replace the journals' posting date with the date that is entered in the Posting Date field.;
                  ApplicationArea=#Intercompany;
                  SourceExpr=ReplacePostingDate;
                  OnValidate=BEGIN
                               if ReplacePostingDate then
                                 PostingDateEditable := true
                               else begin
                                 TempGenJnlLine."Posting Date" := 0D;
                                 PostingDateEditable := false;
                               end;
                             END;
                              }

      { 3   ;3   ;Field     ;
                  Name=Posting Date;
                  CaptionML=ENU=Posting Date;
                  ToolTipML=ENU="Specifies the date that will be used when you post, if you have selected the Replace Posting Date field. If the posting date on a document is blank, the date in the Posting Date field is used even if you have not selected it. ";
                  ApplicationArea=#Intercompany;
                  SourceExpr=TempGenJnlLine."Posting Date";
                  Editable=PostingDateEditable;
                  OnValidate=BEGIN
                               ValidateJnl;
                             END;
                              }

      { 15  ;2   ;Group     ;
                  Name=Documents;
                  CaptionML=ENU=Documents }

      { 11  ;3   ;Field     ;
                  Name=ReplaceDocPostingDate;
                  CaptionML=ENU=Replace Posting Date;
                  ToolTipML=ENU=Specifies if you want to replace the journals' posting date with the date that is entered in the Posting Date field.;
                  ApplicationArea=#Intercompany;
                  SourceExpr=ReplaceDocPostingDate;
                  OnValidate=BEGIN
                               if ReplaceDocPostingDate then begin
                                 DocPostingDateEditable := true
                               end else begin
                                 DocPostingDate := 0D;
                                 DocPostingDateEditable := false;
                               end;
                             END;
                              }

      { 14  ;3   ;Field     ;
                  Name=Doc Posting Date;
                  CaptionML=ENU=Posting Date;
                  ToolTipML=ENU=Specifies Posting Date.;
                  ApplicationArea=#Intercompany;
                  SourceExpr=DocPostingDate;
                  Editable=DocPostingDateEditable }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      TempGenJnlLine@1003 : TEMPORARY Record "Gen. Journal Line";
      GenJnlTemplate@1001 : Record "Gen. Journal Template";
      GenJnlBatch@1002 : Record "Gen. Journal Batch";
      GLSetup@1007 : Record "General Ledger Setup";
      NoSeriesMgt@1006 : Codeunit NoSeriesManagement;
      ICIOMgt@1009 : Codeunit ICInboxOutboxMgt;
      DimMgt@1000 : Codeunit DimensionManagement;
      GLSetupFound@1005 : Boolean;
      ReplacePostingDate@1014 : Boolean;
      ReplaceDocPostingDate@1015 : Boolean;
      DocPostingDate@1016 : Date;
      Forward@1017 : Boolean;
      Text001@1004 : TextConst 'ENU=%1 %2 from IC Partner %3 already exists in the %4 window. You have to delete %1 %2 in the %4 window before you complete the line action.';
      DocPostingDateEditable@19025509 : Boolean INDATASET;
      PostingDateEditable@19008133 : Boolean INDATASET;

    LOCAL PROCEDURE ValidateJnl@3();
    BEGIN
      PageValidateJnl;
    END;

    LOCAL PROCEDURE GetGLSetup@1();
    BEGIN
      if not GLSetupFound then
        GLSetup.GET;
      GLSetupFound := true;
    END;

    LOCAL PROCEDURE PageValidateJnl@19046080();
    VAR
      GenJnlLine@1000 : Record "Gen. Journal Line";
    BEGIN
      TempGenJnlLine."Document No." := '';
      GenJnlLine.SETRANGE("Journal Template Name",TempGenJnlLine."Journal Template Name");
      GenJnlLine.SETRANGE("Journal Batch Name",TempGenJnlLine."Journal Batch Name");
      if GenJnlLine.FINDLAST then begin
        TempGenJnlLine."Document No." := INCSTR(GenJnlLine."Document No.");
        TempGenJnlLine."Line No." := GenJnlLine."Line No.";
      end else
        if GenJnlBatch.GET(TempGenJnlLine."Journal Template Name",TempGenJnlLine."Journal Batch Name") then
          if GenJnlBatch."No. Series" = '' then
            TempGenJnlLine."Document No." := ''
          else begin
            TempGenJnlLine."Document No." := NoSeriesMgt.GetNextNo(GenJnlBatch."No. Series",TempGenJnlLine."Posting Date",false);
            CLEAR(NoSeriesMgt);
          end;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

