OBJECT Page 70009210 G/L Source Name Setup Wizard
{
  OBJECT-PROPERTIES
  {
    Date=20170222D;
    Time=205537T;
    Version List=GLSN10.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=G/L Source Name Setup;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable="G/L Source Name Setup";
    PageType=NavigatePage;
    SourceTableTemporary=true;
    OnInit=BEGIN
             LoadTopBanners;
           END;

    OnOpenPage=VAR
                 Setup@1000 : Record "G/L Source Name Setup";
                 PermissionMgt@1000000000 : Codeunit "G/L Source Name Permission Mgt";
                 AssistedSetupMgt@70009200 : Codeunit "G/L Source Name Assisted Setup";
               BEGIN
                 AssistedSetupMgt.VerifyUserAccess;
                 INIT;
                 if not Setup.GET then begin
                   Setup.INIT;
                   Setup.INSERT;
                 end;
                 TRANSFERFIELDS(Setup);
                 INSERT;

                 PermissionMgt.GetAccessControl(TempUserAccess,TempGroupAccess);
                 CurrPage.GroupsWithReadAccess.PAGE.Set(TempGroupAccess,TempUserAccess);
                 CurrPage.GroupsWithUpdateAccess.PAGE.Set(TempGroupAccess,TempUserAccess);
                 CurrPage.UsersWithReadAccess.PAGE.Set(TempUserAccess);
                 CurrPage.UsersWithUpdateAccess.PAGE.Set(TempUserAccess);

                 Step := Step::Start;
                 EnableControls;
               END;

    OnQueryClosePage=BEGIN
                       if CloseAction = ACTION::OK then
                         if Status = Status::"Not Completed" then
                           if not CONFIRM(NAVNotSetUpQst,false) then
                             ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      Name=ActionContainer10;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=BackActionEnabled;
                      InFooterBar=true;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(true);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NextActionEnabled;
                      InFooterBar=true;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 case Step of
                                   Step::Registration:
                                     if "Registration E-Mail Address" = '' then
                                       ERROR(RegistrationEMailAddressMissingErr);
                                 end;

                                 NextStep(false);
                               END;
                                }
      { 70009200;1   ;Action    ;
                      Name=ActionDefault;
                      CaptionML=ENU=Set Defaults;
                      ToolTipML=ENU=Updates Permissions to all users and user groups as suggested;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FirstStepVisible;
                      InFooterBar=true;
                      Image=Default;
                      OnAction=VAR
                                 CompanyInformation@70009201 : Record "Company Information";
                                 PermissionMgt@70009200 : Codeunit "G/L Source Name Permission Mgt";
                               BEGIN
                                 PermissionMgt.SuggestAccessControl(TempUserAccess,TempGroupAccess);
                                 if "Registration E-Mail Address" = '' then
                                   if CompanyInformation.GET then
                                     "Registration E-Mail Address" := CompanyInformation."E-Mail";

                                 if "Registration E-Mail Address" = '' then
                                   Step := Step::Registration
                                 else
                                   Step := Step::Finish;
                                 EnableControls;
                               END;
                                }
      { 1000000008;1 ;Action    ;
                      Name=ActionUpdateSourceLookup;
                      CaptionML=ENU=Update G/L Source Names;
                      ToolTipML=ENU=This action will update the G/L Source Names lookup table;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FinishActionEnabled;
                      InFooterBar=true;
                      Image=Card;
                      OnAction=VAR
                                 GLSourceNameMgt@1000000000 : Codeunit "G/L Source Name Mgt";
                               BEGIN
                                 GLSourceNameMgt.Refresh(false);
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FinishActionEnabled;
                      InFooterBar=true;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Name=Group96;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                Name=MediaRepositoryStandard;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaRepositoryStandard.Image;
                Editable=FALSE;
                ShowCaption=false }

    { 98  ;1   ;Group     ;
                Name=Group98;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                Name=MediaRepositoryDone;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaRepositoryDone.Image;
                Editable=FALSE;
                ShowCaption=false }

    { 20  ;1   ;Group     ;
                Name=Group20;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 13  ;2   ;Group     ;
                Name=Welcome to G/L Source Name Setup;
                CaptionML=ENU=Welcome to G/L Source Name Setup;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 18  ;3   ;Group     ;
                Name=Group18;
                GroupType=Group;
                InstructionalTextML=ENU=To be able to use Source Names on G/L Entries, users must have required permissions. }

    { 19  ;3   ;Group     ;
                Name=Group19;
                GroupType=Group;
                InstructionalTextML=[ENU="Users that can update master tables, like; Customer, Vendor, Bank Account and Fixed Asset, must be able to update the G/L Source Name lookup table."] }

    { 21  ;2   ;Group     ;
                Name=Let's go!;
                CaptionML=ENU=Let's go!;
                GroupType=Group }

    { 70009201;3;Group    ;
                Name=Group70009201;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Set Defaults and all required permissions will be automatically assigned to user group members and users based on current permissions to the G/L Entries and the above master tables. }

    { 22  ;3   ;Group     ;
                Name=Group22;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next so you can manually set up permissions for users and groups. }

    { 2   ;1   ;Group     ;
                Name=Group2;
                Visible=UserGroupReadVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Check the Assign or Remove Permisson Box to change read permission for the user group members }

    { 1000000000;2;Part   ;
                Name=GroupsWithReadAccess;
                CaptionML=ENU=User Groups requiring read access;
                ApplicationArea=#Basic,#Suite;
                SubPageView=WHERE("Permission Level"=CONST(Read));
                PagePartID="G/L Source Name Group ListPart";
                PartType=Page }

    { 1000000002;1;Group  ;
                Name=Group1000000002;
                Visible=UserGroupUpdateVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Check the Assign or Remove Permisson Box to change both read and update permission for the user group members }

    { 1000000001;2;Part   ;
                Name=GroupsWithUpdateAccess;
                CaptionML=ENU=User Groups requiring update access;
                ApplicationArea=#Basic,#Suite;
                SubPageView=WHERE("Permission Level"=CONST(Update));
                PagePartID="G/L Source Name Group ListPart";
                PartType=Page }

    { 1000000007;1;Group  ;
                Name=Group1000000007;
                Visible=UserReadVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Check the Assign or Remove Permisson Box to change read permission for the user.  User Group members should be managed through the user group only. }

    { 1000000006;2;Part   ;
                Name=UsersWithReadAccess;
                CaptionML=ENU=Users requiring read access;
                ApplicationArea=#Basic,#Suite;
                SubPageView=WHERE("Permission Level"=CONST(Read));
                PagePartID="G/L Source Name Users ListPart";
                PartType=Page }

    { 1000000005;1;Group  ;
                Name=Group1000000005;
                Visible=UserUpdateVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Check the Assign or Remove Permisson Box to change both read and update permission for the user.  User Group members should be managed through the user group only }

    { 1000000004;2;Part   ;
                Name=UsersWithUpdateAccess;
                CaptionML=ENU=Users requiring update access;
                ApplicationArea=#Basic,#Suite;
                SubPageView=WHERE("Permission Level"=CONST(Update));
                PagePartID="G/L Source Name Users ListPart";
                PartType=Page }

    { 12  ;1   ;Group     ;
                Name=Group12;
                Visible=RegistrationVisible;
                GroupType=Group }

    { 27  ;2   ;Group     ;
                Name=Group27;
                GroupType=Group;
                InstructionalTextML=ENU=Enter the Registration details. }

    { 1000000003;3;Field  ;
                Name=Registration E-Mail Address;
                ToolTipML=ENU=Your registration will only be stored in Dynamics365.  Your E-Mail Address is not shared with anyone.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Registration E-Mail Address";
                ImplicitType=Text50 }

    { 17  ;1   ;Group     ;
                Name=Group17;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 70009203;2;Group    ;
                Name=Group70009203;
                GroupType=Group;
                InstructionalTextML=ENU=We suggest that you refresh the data in G/L Source Names lookup table before finishing this wizard.  You can come back here any time to refresh the lookup table again }

    { 24  ;2   ;Group     ;
                Name=That's it!;
                CaptionML=ENU=That's it!;
                GroupType=Group }

    { 23  ;3   ;Group     ;
                Name=Group23;
                GroupType=Group;
                InstructionalTextML=ENU=To refresh the data in the G/L Source Name lookup table, choose Update G/L Source Names. }

    { 25  ;3   ;Group     ;
                Name=Group25;
                GroupType=Group;
                InstructionalTextML=ENU=To enable Source Names in G/L Entries, choose Finish. }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1040 : Record "Media Repository";
      MediaRepositoryDone@1041 : Record "Media Repository";
      TempUserAccess@1000000001 : TEMPORARY Record "G/L Source Name User Access";
      TempGroupAccess@1000000000 : TEMPORARY Record "G/L Source Name Group Access";
      Step@1012 : 'Start,UserGroupRead,UserGroupUpdate,UserRead,UserUpdate,Registration,Finish';
      TopBannerVisible@1042 : Boolean;
      FirstStepVisible@1000 : Boolean;
      UserGroupReadVisible@1010 : Boolean;
      UserGroupUpdateVisible@1011 : Boolean;
      UserReadVisible@1003 : Boolean;
      UserUpdateVisible@1002 : Boolean;
      RegistrationVisible@1000000002 : Boolean;
      FinalStepVisible@1015 : Boolean;
      UserGroupReadEnabled@1000000007 : Boolean;
      UserGroupUpdateEnabled@1000000006 : Boolean;
      UserReadEnabled@1000000005 : Boolean;
      UserUpdateEnabled@1000000004 : Boolean;
      FinishActionEnabled@1009 : Boolean;
      BackActionEnabled@1013 : Boolean;
      NextActionEnabled@1014 : Boolean;
      NAVNotSetUpQst@1004 : TextConst 'ENU=G/L Source Names have not been set up.\\Are you sure you want to exit?';
      RegistrationEMailAddressMissingErr@1000000003 : TextConst 'ENU=Registration E-Mail Address is missing';

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      ResetControls;

      case Step of
        Step::Start:
          ShowStartStep;
        Step::UserGroupRead:
          ShowUserGroupReadStep;
        Step::UserGroupUpdate:
          ShowUserGroupUpdateStup;
        Step::UserRead:
          ShowUserReadStep;
        Step::UserUpdate:
          ShowUserUpdateSetup;
        Step::Registration:
          ShowRegistrationStep;
        Step::Finish:
          ShowFinishStep;
      end;
    END;

    LOCAL PROCEDURE FinishAction@12();
    BEGIN
      StoreSetup;
      StoreAccessControl;
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@41(Backwards@1000 : Boolean);
    BEGIN
      if Backwards then begin
        Step := Step - 1;
        if not StepEnabled then
          NextStep(Backwards);
      end else begin
        Step := Step + 1;
        if not StepEnabled then
          NextStep(Backwards);
      end;

      EnableControls;
    END;

    LOCAL PROCEDURE StepEnabled@1000000007() : Boolean;
    BEGIN
      case Step of
        Step::Start:
          exit(true);
        Step::UserGroupRead:
          exit(UserGroupReadEnabled);
        Step::UserGroupUpdate:
          exit(UserGroupUpdateEnabled);
        Step::UserRead:
          exit(UserReadEnabled);
        Step::UserUpdate:
          exit(UserUpdateEnabled);
        Step::Registration:
          exit(true);
        Step::Finish:
          exit(true);
      end;
    END;

    LOCAL PROCEDURE ShowStartStep@24();
    BEGIN
      FirstStepVisible := true;
      FinishActionEnabled := false;
      BackActionEnabled := false;
    END;

    LOCAL PROCEDURE ShowUserGroupReadStep@1000000000();
    BEGIN
      UserGroupReadVisible := true;
      BackActionEnabled := true;
    END;

    LOCAL PROCEDURE ShowUserGroupUpdateStup@1000000001();
    BEGIN
      UserGroupUpdateVisible := true;
      BackActionEnabled := true;
    END;

    LOCAL PROCEDURE ShowUserReadStep@1000000002();
    BEGIN
      UserReadVisible := true;
      BackActionEnabled := true;
    END;

    LOCAL PROCEDURE ShowUserUpdateSetup@1000000003();
    BEGIN
      UserUpdateVisible := true;
      BackActionEnabled := true;
    END;

    LOCAL PROCEDURE ShowRegistrationStep@1000000006();
    BEGIN
      RegistrationVisible := true;
      BackActionEnabled := true;
    END;

    LOCAL PROCEDURE ShowFinishStep@35();
    BEGIN
      FinalStepVisible := true;
      NextActionEnabled := false;
    END;

    LOCAL PROCEDURE ResetControls@1();
    BEGIN
      FinishActionEnabled := "Registration E-Mail Address" <> '';
      BackActionEnabled := true;
      NextActionEnabled := true;

      FirstStepVisible := false;
      UserGroupReadVisible := false;
      UserGroupUpdateVisible := false;
      UserReadVisible := false;
      UserUpdateVisible := false;
      RegistrationVisible := false;
      FinalStepVisible := false;

      with TempUserAccess do begin
        SETRANGE("Permission Level","Permission Level"::Read);
        UserReadEnabled := not ISEMPTY;
        SETRANGE("Permission Level","Permission Level"::Update);
        UserUpdateEnabled := not ISEMPTY;
        SETRANGE("Permission Level");
      end;

      with TempGroupAccess do begin
        SETRANGE("Permission Level","Permission Level"::Read);
        UserGroupReadEnabled := not ISEMPTY;
        SETRANGE("Permission Level","Permission Level"::Update);
        UserGroupUpdateEnabled := not ISEMPTY;
        SETRANGE("Permission Level");
      end;
    END;

    LOCAL PROCEDURE StoreSetup@1000000004();
    VAR
      Setup@1000000000 : Record "G/L Source Name Setup";
    BEGIN
      Status := Status::Completed;
      Setup.GET;
      Setup.TRANSFERFIELDS(Rec);
      Setup.MODIFY;
    END;

    LOCAL PROCEDURE StoreAccessControl@1000000005();
    VAR
      PermissionMgt@1000000000 : Codeunit "G/L Source Name Permission Mgt";
    BEGIN
      PermissionMgt.SetAccessControl(TempUserAccess,TempGroupAccess);
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      if MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE)) and
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE))
      then
        TopBannerVisible := MediaRepositoryDone.Image.HASVALUE;
    END;

    BEGIN
    END.
  }
}

