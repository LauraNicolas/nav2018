OBJECT Table 760 Trailing Sales Orders Setup
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Trailing Sales Orders Setup;
  }
  FIELDS
  {
    { 1   ;   ;User ID             ;Text132       ;CaptionML=ENU=User ID }
    { 2   ;   ;Period Length       ;Option        ;CaptionML=ENU=Period Length;
                                                   OptionCaptionML=ENU=Day,Week,Month,Quarter,Year;
                                                   OptionString=Day,Week,Month,Quarter,Year }
    { 3   ;   ;Show Orders         ;Option        ;CaptionML=ENU=Show Orders;
                                                   OptionCaptionML=ENU=All Orders,Orders Until Today,Delayed Orders;
                                                   OptionString="All Orders","Orders Until Today","Delayed Orders" }
    { 4   ;   ;Use Work Date as Base;Boolean      ;CaptionML=ENU=Use Work Date as Base }
    { 5   ;   ;Value to Calculate  ;Option        ;CaptionML=ENU=Value to Calculate;
                                                   OptionCaptionML=ENU=Amount Excl. VAT,No. of Orders;
                                                   OptionString="Amount Excl. VAT","No. of Orders" }
    { 6   ;   ;Chart Type          ;Option        ;CaptionML=ENU=Chart Type;
                                                   OptionCaptionML=ENU=Stacked Area,Stacked Area (%),Stacked Column,Stacked Column (%);
                                                   OptionString="Stacked Area","Stacked Area (%)","Stacked Column","Stacked Column (%)" }
    { 7   ;   ;Latest Order Document Date;Date    ;FieldClass=FlowField;
                                                   CalcFormula=Max("Sales Header"."Document Date" WHERE ("Document Type"=CONST(Order)));
                                                   AccessByPermission=TableData "Sales Shipment Header"=R;
                                                   CaptionML=ENU=Latest Order Document Date }
  }
  KEYS
  {
    {    ;"User ID"                               ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1000 : TextConst 'ENU=Updated at %1.';

    [External]
    PROCEDURE GetCurrentSelectionText@3() : Text[100];
    BEGIN
      exit(FORMAT("Show Orders") + '|' +
        FORMAT("Period Length") + '|' +
        FORMAT("Value to Calculate") + '|. (' +
        STRSUBSTNO(Text001,TIME) + ')');
    END;

    [External]
    PROCEDURE GetStartDate@2() : Date;
    VAR
      StartDate@1000 : Date;
    BEGIN
      if "Use Work Date as Base" then
        StartDate := WORKDATE
      else
        StartDate := TODAY;
      if "Show Orders" = "Show Orders"::"All Orders" then begin
        CALCFIELDS("Latest Order Document Date");
        StartDate := "Latest Order Document Date";
      end;

      exit(StartDate);
    END;

    [External]
    PROCEDURE GetChartType@1() : Integer;
    VAR
      BusinessChartBuf@1000 : Record "Business Chart Buffer";
    BEGIN
      case "Chart Type" of
        "Chart Type"::"Stacked Area":
          exit(BusinessChartBuf."Chart Type"::StackedArea);
        "Chart Type"::"Stacked Area (%)":
          exit(BusinessChartBuf."Chart Type"::StackedArea100);
        "Chart Type"::"Stacked Column":
          exit(BusinessChartBuf."Chart Type"::StackedColumn);
        "Chart Type"::"Stacked Column (%)":
          exit(BusinessChartBuf."Chart Type"::StackedColumn100);
      end;
    END;

    [External]
    PROCEDURE SetPeriodLength@7(PeriodLength@1000 : Option);
    BEGIN
      "Period Length" := PeriodLength;
      MODIFY;
    END;

    [External]
    PROCEDURE SetShowOrders@6(ShowOrders@1000 : Integer);
    BEGIN
      "Show Orders" := ShowOrders;
      MODIFY;
    END;

    [External]
    PROCEDURE SetValueToCalcuate@8(ValueToCalc@1000 : Integer);
    BEGIN
      "Value to Calculate" := ValueToCalc;
      MODIFY;
    END;

    [External]
    PROCEDURE SetChartType@9(ChartType@1000 : Integer);
    BEGIN
      "Chart Type" := ChartType;
      MODIFY;
    END;

    BEGIN
    END.
  }
}

