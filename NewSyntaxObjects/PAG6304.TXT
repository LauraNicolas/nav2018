OBJECT Page 6304 Power BI Report Selection
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Power BI Reports Selection;
    InsertAllowed=false;
    DeleteAllowed=false;
    SourceTable="Power BI Report Buffer";
    PageType=List;
    SourceTableTemporary=true;
    OnOpenPage=BEGIN
                 // Set sort order, scrollbar position, and filters.
                 SETCURRENTKEY(ReportName);
                 FINDFIRST;
                 FilterReports;
               END;

    OnQueryClosePage=BEGIN
                       SaveAndClose;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           // On selection change, updates the Enable/Disable buttons so only the appropriate action is clickable.
                           IsRowEnabled := Enabled;
                         END;

    ActionList=ACTIONS
    {
      { 5       ;    ;ActionContainer;
                      Name=ActionContainer5;
                      ActionContainerType=Reports }
      { 7       ;1   ;Action    ;
                      Name=EnableReport;
                      CaptionML=ENU=Enable;
                      ToolTipML=ENU=Enables the report selection.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Enabled=NOT IsRowEnabled;
                      PromotedCategory=Report;
                      PromotedOnly=true;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 Enabled := true;
                                 CurrPage.UPDATE;
                               END;

                      Gesture=LeftSwipe }
      { 8       ;1   ;Action    ;
                      Name=DisableReport;
                      CaptionML=ENU=Disable;
                      ToolTipML=ENU=Disables the report selection.;
                      ApplicationArea=#All;
                      Promoted=true;
                      Enabled=IsRowEnabled;
                      PromotedCategory=Report;
                      PromotedOnly=true;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 Enabled := false;
                                 CurrPage.UPDATE;
                               END;

                      Gesture=RightSwipe }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=ReportName;
                CaptionML=ENU=Report Name;
                ToolTipML=ENU=Specifies the name of the report.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ReportName;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              // Throw an error if the selected report is disabled
                              if not Enabled then
                                ERROR(DisabledReportSelectedErr);

                              // OnDrillDown returns a LookupCancel Action when the page closes.
                              // IsPgclosedOkay is used to tell the caller of this page that inspite of the LookupCancel
                              // the action should be treated like a LookupOk
                              IsPgClosedOkay := true;
                              SaveAndClose;
                            END;

                ImplicitType=Text100 }

    { 4   ;2   ;Field     ;
                Name=Enabled;
                ToolTipML=ENU=Specifies that the report selection is enabled.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Enabled;
                ImplicitType=Boolean }

  }
  CODE
  {
    VAR
      DisabledReportSelectedErr@1000 : TextConst 'ENU=The report that you selected is disabled and cannot be opened on the role center. Enable the selected report or select another report.';
      Context@1001 : Text[30];
      NameFilter@1004 : Text;
      IsRowEnabled@1002 : Boolean;
      IsPgClosedOkay@1003 : Boolean;

    [External]
    PROCEDURE SetContext@2(ParentContext@1000 : Text[30]);
    BEGIN
      // Sets the ID of the parent page that reports are being selected for.
      Context := ParentContext;
    END;

    [External]
    PROCEDURE SetNameFilter@10(ParentFilter@1000 : Text);
    BEGIN
      // Sets the value to filter report names by.
      // This should be called by the parent page before opening this page.
      NameFilter := ParentFilter;
    END;

    [External]
    PROCEDURE SetReportBuffer@1(VAR TempPowerBiReportBuffer@1000 : TEMPORARY Record "Power BI Report Buffer");
    BEGIN
      // clear the current record and shallow copy the buffer to it
      DELETEALL;
      COPY(TempPowerBiReportBuffer,true);
      RESET;
    END;

    LOCAL PROCEDURE FilterReports@21();
    BEGIN
      // Filters the report collection by name, if the parent page has provided a value to filter by.
      // This filter will display any report that has the value anywhere in the name, case insensitive.
      if NameFilter <> '' then
        SETFILTER(ReportName,'%1','@*' + NameFilter + '*');
    END;

    LOCAL PROCEDURE SaveAndClose@5();
    VAR
      PowerBiReportConfiguration@1001 : Record "Power BI Report Configuration";
      TempPowerBiReportBuffer@1000 : TEMPORARY Record "Power BI Report Buffer";
    BEGIN
      // use a temp buffer record for saving to not disturb the position, filters, etc. of the source table
      // ShareTable = TRUE makes a shallow copy of the record, which is OK since no modifications are made to the records themselves
      TempPowerBiReportBuffer.COPY(Rec,true);

      if TempPowerBiReportBuffer.FIND('-') then
        repeat
          if PowerBiReportConfiguration.GET(USERSECURITYID,TempPowerBiReportBuffer.ReportID,Context) then begin
            if not TempPowerBiReportBuffer.Enabled then
              PowerBiReportConfiguration.DELETE;
          end else
            if TempPowerBiReportBuffer.Enabled then begin
              PowerBiReportConfiguration.INIT;
              PowerBiReportConfiguration."User Security ID" := USERSECURITYID;
              PowerBiReportConfiguration."Report ID" := TempPowerBiReportBuffer.ReportID;
              PowerBiReportConfiguration.Context := Context;
              PowerBiReportConfiguration.INSERT;
            end;
        until TempPowerBiReportBuffer.NEXT = 0;

      IsPgClosedOkay := true;
      CurrPage.CLOSE;
    END;

    [External]
    PROCEDURE IsPageClosedOkay@3() : Boolean;
    BEGIN
      exit(IsPgClosedOkay);
    END;

    BEGIN
    END.
  }
}

