OBJECT Report 901 Copy Assembly Document
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Copy Assembly Document;
    ProcessingOnly=true;
    OnPreReport=BEGIN
                  case DocType of
                    DocType::Quote,
                    DocType::Order,
                    DocType::"Blanket Order":
                      begin
                        FromAsmHeader.GET(DocType,DocNo);
                        CopyDocMgt.CopyAsmHeaderToAsmHeader(FromAsmHeader,ToAsmHeader,IncludeHeader);
                      end;
                    DocType::"Posted Order":
                      begin
                        FromPostedAsmHeader.GET(DocNo);
                        CopyDocMgt.CopyPostedAsmHeaderToAsmHeader(FromPostedAsmHeader,ToAsmHeader,IncludeHeader);
                      end;
                  end;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnOpenPage=BEGIN
                   if DocNo <> '' then
                     case DocType of
                       DocType::Quote:
                         if FromAsmHeader.GET(FromAsmHeader."Document Type"::Quote,DocNo) then;
                       DocType::"Blanket Order":
                         if FromAsmHeader.GET(FromAsmHeader."Document Type"::"Blanket Order",DocNo) then;
                       DocType::Order:
                         if FromAsmHeader.GET(FromAsmHeader."Document Type"::Order,DocNo) then;
                       DocType::"Posted Order":
                         if FromPostedAsmHeader.GET(DocNo) then;
                     end;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 3   ;2   ;Field     ;
                  Name=Document Type;
                  CaptionML=ENU=Document Type;
                  ToolTipML=ENU=Specifies the type of assembly document that you want to copy.;
                  OptionCaptionML=ENU=Quote,Order,,,Blanket Order,Posted Order;
                  ApplicationArea=#Advanced;
                  SourceExpr=DocType;
                  OnValidate=BEGIN
                               DocNo := '';
                             END;
                              }

      { 8   ;2   ;Field     ;
                  Name=Document No.;
                  CaptionML=ENU=Document No.;
                  ToolTipML=ENU=Specifies the document that you want to copy. The contents of the Document Type field determines which document numbers you can choose from.;
                  ApplicationArea=#Advanced;
                  SourceExpr=DocNo;
                  OnLookup=BEGIN
                             LookupDocNo;
                           END;
                            }

      { 1   ;2   ;Field     ;
                  Name=Include Header;
                  CaptionML=ENU=Include Header;
                  ToolTipML=ENU=Specifies if you also want to copy the header information from the existing assembly document.;
                  ApplicationArea=#Advanced;
                  SourceExpr=IncludeHeader }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FromAsmHeader@1003 : Record "Assembly Header";
      FromPostedAsmHeader@1005 : Record "Posted Assembly Header";
      ToAsmHeader@1006 : Record "Assembly Header";
      CopyDocMgt@1008 : Codeunit "Copy Document Mgt.";
      DocType@1026 : 'Quote,Order,,,"Blanket Order","Posted Order"';
      DocNo@1027 : Code[20];
      IncludeHeader@1007 : Boolean;

    LOCAL PROCEDURE LookupDocNo@3();
    BEGIN
      case DocType of
        DocType::Quote,
        DocType::Order,
        DocType::"Blanket Order":
          begin
            FromAsmHeader.RESET;
            FromAsmHeader.SETRANGE("Document Type",DocType);
            if DocType = ToAsmHeader."Document Type" then
              FromAsmHeader.SETFILTER("No.",'<>%1',ToAsmHeader."No.");
            if PAGE.RUNMODAL(PAGE::"Assembly List",FromAsmHeader) = ACTION::LookupOK then
              DocNo := FromAsmHeader."No.";
          end;
        DocType::"Posted Order":
          if PAGE.RUNMODAL(0,FromPostedAsmHeader) = ACTION::LookupOK then
            DocNo := FromPostedAsmHeader."No.";
      end;
    END;

    [External]
    PROCEDURE SetAssemblyHeader@1(AsmHeader@1000 : Record "Assembly Header");
    BEGIN
      AsmHeader.TESTFIELD("No.");
      ToAsmHeader := AsmHeader;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

