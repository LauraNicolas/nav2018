OBJECT Page 8639 Copy Company Data
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Copy Company Data;
    SaveValues=true;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable="Config. Line";
    SourceTableView=SORTING("Line No.");
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 FILTERGROUP := 2;
                 SETRANGE("Company Filter",COMPANYNAME);
                 FILTERGROUP := 0;
                 SETRANGE("Line Type","Line Type"::Table);
                 SETRANGE("Copying Available",true);
                 SETRANGE("Licensed Table",true);
                 SETRANGE("No. of Records",0);
                 SETFILTER("No. of Records (Source Table)",'<>0');
                 if NewCompanyName <> '' then
                   if NewCompanyName = COMPANYNAME then
                     NewCompanyName := ''
                   else
                     if not Company.GET(NewCompanyName) then
                       NewCompanyName := '';
                 SetCompanyFilter;
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 3       ;1   ;Action    ;
                      Name=Copy Data;
                      CaptionML=ENU=Copy Data;
                      ToolTipML=ENU=Copy data from the selected company. This is useful, when you want to move from a test environment to a production environment, and want to copy data between the versions of the company.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Image=Copy;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 GetData;
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 6   ;1   ;Field     ;
                Name=NewCompanyName;
                CaptionML=ENU=Copy from;
                ToolTipML=ENU=Specifies the company to copy data from.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewCompanyName;
                OnValidate=BEGIN
                             ValidateCompanyName;
                           END;

                OnLookup=BEGIN
                           CLEAR(Company);
                           Company.SETFILTER(Name,'<>%1',COMPANYNAME);
                           Company.Name := NewCompanyName;
                           if PAGE.RUNMODAL(PAGE::Companies,Company) = ACTION::LookupOK then begin
                             NewCompanyName := Company.Name;
                             ValidateCompanyName;
                           end;
                           CurrPage.UPDATE(false);
                         END;

                ImplicitType=Text30 }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 5   ;2   ;Field     ;
                Name=Package Code;
                ToolTipML=ENU=Specifies the code of the package associated with the configuration. The code is filled in when you use the Assign Package function to select the package for the line type.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Package Code";
                Enabled=FALSE;
                ImplicitType=Code20 }

    { 2   ;2   ;Field     ;
                Name=Table ID;
                ToolTipML=ENU=Specifies the ID of the table that you want to use for the line type. After you select a table ID from the list of objects in the lookup table, the name of the table is automatically filled in the Name field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Table ID";
                Editable=FALSE;
                ImplicitType=Integer }

    { 10  ;2   ;Field     ;
                Name=Name;
                DrillDown=false;
                ToolTipML=ENU=Specifies the name of the line type.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name;
                Editable=FALSE;
                ImplicitType=Text250 }

    { 4   ;2   ;Field     ;
                Name=NoOfRecordsSourceTable;
                DrillDown=false;
                CaptionML=ENU=No. of Records (Source Table);
                ToolTipML=ENU=Specifies how many records exist in the source table.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetNoOfRecordsSourceTable;
                ImplicitType=Integer }

  }
  CODE
  {
    VAR
      Company@1000 : Record Company;
      ConfigMgt@1001 : Codeunit "Config. Management";
      NewCompanyName@1002 : Text[30];

    LOCAL PROCEDURE ValidateCompanyName@4();
    BEGIN
      if NewCompanyName <> '' then begin
        CLEAR(Company);
        Company.SETFILTER(Name,'<>%1',COMPANYNAME);
        Company.Name := NewCompanyName;
        Company.FIND;
      end;
      SetCompanyFilter;
    END;

    LOCAL PROCEDURE GetData@1();
    VAR
      ConfigLine@1000 : Record "Config. Line";
    BEGIN
      CurrPage.SETSELECTIONFILTER(ConfigLine);
      FILTERGROUP := 2;
      ConfigLine.FILTERGROUP := 2;
      COPYFILTER("Company Filter (Source Table)",ConfigLine."Company Filter (Source Table)");
      COPYFILTER("Company Filter",ConfigLine."Company Filter");
      FILTERGROUP := 0;
      ConfigLine.FILTERGROUP := 0;
      ConfigLine := Rec;
      ConfigMgt.CopyDataDialog(NewCompanyName,ConfigLine);
    END;

    [External]
    PROCEDURE SetCompanyFilter@3();
    BEGIN
      FILTERGROUP := 2;
      SETRANGE("Company Filter (Source Table)",NewCompanyName);
      FILTERGROUP := 0;
    END;

    BEGIN
    END.
  }
}

