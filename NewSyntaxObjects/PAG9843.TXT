OBJECT Page 9843 User Lookup
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Users;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    LinksAllowed=false;
    SourceTable=User;
    PageType=List;
    ShowFilter=false;
    OnOpenPage=BEGIN
                 HideExternalUsers;
               END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=User Name;
                ToolTipML=ENU=Specifies the user's name. If the user is required to present credentials when starting the client, this is the name that the user must present.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="User Name";
                ImplicitType=Code50 }

    { 4   ;2   ;Field     ;
                Name=User Security ID;
                ToolTipML=ENU=Specifies an ID that uniquely identifies the user. This value is generated automatically and should not be changed.;
                ApplicationArea=#Advanced;
                SourceExpr="User Security ID";
                Visible=FALSE;
                ImplicitType=GUID }

    { 5   ;2   ;Field     ;
                Name=Windows Security ID;
                ToolTipML=ENU=Specifies the Windows Security ID of the user. This is only relevant for Windows authentication.;
                ApplicationArea=#Advanced;
                SourceExpr="Windows Security ID";
                Visible=FALSE;
                ImplicitType=Text119 }

    { 6   ;2   ;Field     ;
                Name=Authentication Email;
                ExtendedDatatype=E-Mail;
                ToolTipML=ENU=Specifies the Microsoft account that this user signs into Office 365 or SharePoint Online with.;
                ApplicationArea=#Advanced;
                SourceExpr="Authentication Email";
                Visible=FALSE;
                ImplicitType=Text250 }

  }
  CODE
  {

    [Internal]
    PROCEDURE GetSelectionFilter@2(VAR User@1000 : Record User);
    BEGIN
      CurrPage.SETSELECTIONFILTER(User);
    END;

    LOCAL PROCEDURE HideExternalUsers@1();
    VAR
      PermissionManager@1001 : Codeunit "Permission Manager";
      OriginalFilterGroup@1000 : Integer;
    BEGIN
      if not PermissionManager.SoftwareAsAService then
        exit;

      OriginalFilterGroup := FILTERGROUP;
      FILTERGROUP := 2;
      SETFILTER("License Type",'<>%1',"License Type"::"External User");
      FILTERGROUP := OriginalFilterGroup;
    END;

    BEGIN
    END.
  }
}

