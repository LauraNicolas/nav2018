OBJECT Table 4 Currency
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
               "Last Modified Date Time" := CURRENTDATETIME;
             END;

    OnDelete=VAR
               CustLedgEntry@1000 : Record "Cust. Ledger Entry";
               VendLedgEntry@1001 : Record "Vendor Ledger Entry";
             BEGIN
               CustLedgEntry.SETRANGE(Open,true);
               CustLedgEntry.SETRANGE("Currency Code",Code);
               if not CustLedgEntry.ISEMPTY then
                 ERROR(Text002,CustLedgEntry.TABLECAPTION,TABLECAPTION,Code);

               VendLedgEntry.SETRANGE(Open,true);
               VendLedgEntry.SETRANGE("Currency Code",Code);
               if not VendLedgEntry.ISEMPTY then
                 ERROR(Text002,VendLedgEntry.TABLECAPTION,TABLECAPTION,Code);

               CurrExchRate.SETRANGE("Currency Code",Code);
               CurrExchRate.DELETEALL;
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;
               "Last Modified Date Time" := CURRENTDATETIME;
             END;

    CaptionML=ENU=Currency;
    LookupPageID=Currencies;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;OnValidate=BEGIN
                                                                if Symbol = '' then
                                                                  Symbol := ResolveCurrencySymbol(Code);
                                                              END;

                                                   CaptionML=ENU=Code;
                                                   NotBlank=true }
    { 2   ;   ;Last Date Modified  ;Date          ;CaptionML=ENU=Last Date Modified;
                                                   Editable=false }
    { 3   ;   ;Last Date Adjusted  ;Date          ;CaptionML=ENU=Last Date Adjusted;
                                                   Editable=false }
    { 6   ;   ;Unrealized Gains Acc.;Code20       ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Unrealized Gains Acc.");
                                                              END;

                                                   CaptionML=ENU=Unrealized Gains Acc. }
    { 7   ;   ;Realized Gains Acc. ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Realized Gains Acc.");
                                                              END;

                                                   CaptionML=ENU=Realized Gains Acc. }
    { 8   ;   ;Unrealized Losses Acc.;Code20      ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Unrealized Losses Acc.");
                                                              END;

                                                   CaptionML=ENU=Unrealized Losses Acc. }
    { 9   ;   ;Realized Losses Acc.;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Realized Losses Acc.");
                                                              END;

                                                   CaptionML=ENU=Realized Losses Acc. }
    { 10  ;   ;Invoice Rounding Precision;Decimal ;InitValue=0,01;
                                                   OnValidate=BEGIN
                                                                if "Amount Rounding Precision" <> 0 then
                                                                  if "Invoice Rounding Precision" <> ROUND("Invoice Rounding Precision","Amount Rounding Precision") then
                                                                    FIELDERROR(
                                                                      "Invoice Rounding Precision",
                                                                      STRSUBSTNO(Text000,"Amount Rounding Precision"));
                                                              END;

                                                   CaptionML=ENU=Invoice Rounding Precision;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 12  ;   ;Invoice Rounding Type;Option       ;CaptionML=ENU=Invoice Rounding Type;
                                                   OptionCaptionML=ENU=Nearest,Up,Down;
                                                   OptionString=Nearest,Up,Down }
    { 13  ;   ;Amount Rounding Precision;Decimal  ;InitValue=0,01;
                                                   OnValidate=BEGIN
                                                                if "Amount Rounding Precision" <> 0 then begin
                                                                  "Invoice Rounding Precision" := ROUND("Invoice Rounding Precision","Amount Rounding Precision");
                                                                  if "Amount Rounding Precision" > "Invoice Rounding Precision" then
                                                                    "Invoice Rounding Precision" := "Amount Rounding Precision";
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Amount Rounding Precision;
                                                   DecimalPlaces=2:5;
                                                   MinValue=0 }
    { 14  ;   ;Unit-Amount Rounding Precision;Decimal;
                                                   InitValue=0,00001;
                                                   CaptionML=ENU=Unit-Amount Rounding Precision;
                                                   DecimalPlaces=0:9;
                                                   MinValue=0 }
    { 15  ;   ;Description         ;Text30        ;CaptionML=ENU=Description }
    { 17  ;   ;Amount Decimal Places;Text5        ;InitValue=2:2;
                                                   OnValidate=BEGIN
                                                                GLSetup.CheckDecimalPlacesFormat("Amount Decimal Places");
                                                              END;

                                                   CaptionML=ENU=Amount Decimal Places;
                                                   NotBlank=true }
    { 18  ;   ;Unit-Amount Decimal Places;Text5   ;InitValue=2:5;
                                                   OnValidate=BEGIN
                                                                GLSetup.CheckDecimalPlacesFormat("Unit-Amount Decimal Places");
                                                              END;

                                                   CaptionML=ENU=Unit-Amount Decimal Places;
                                                   NotBlank=true }
    { 19  ;   ;Customer Filter     ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Customer;
                                                   CaptionML=ENU=Customer Filter }
    { 20  ;   ;Vendor Filter       ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Vendor;
                                                   CaptionML=ENU=Vendor Filter }
    { 21  ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Filter;
                                                   CaptionClass='1,3,1' }
    { 22  ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   CaptionML=ENU=Global Dimension 2 Filter;
                                                   CaptionClass='1,3,2' }
    { 23  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 24  ;   ;Cust. Ledg. Entries in Filter;Boolean;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Exist("Cust. Ledger Entry" WHERE ("Customer No."=FIELD("Customer Filter"),
                                                                                                 "Currency Code"=FIELD(Code)));
                                                   CaptionML=ENU=Cust. Ledg. Entries in Filter;
                                                   Editable=false }
    { 25  ;   ;Customer Balance    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE ("Customer No."=FIELD("Customer Filter"),
                                                                                                              "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                              "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                              "Posting Date"=FIELD("Date Filter"),
                                                                                                              "Currency Code"=FIELD(Code)));
                                                   CaptionML=ENU=Customer Balance;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 26  ;   ;Customer Outstanding Orders;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line"."Outstanding Amount" WHERE ("Document Type"=CONST(Order),
                                                                                                            "Bill-to Customer No."=FIELD("Customer Filter"),
                                                                                                            "Currency Code"=FIELD(Code),
                                                                                                            "Shortcut Dimension 1 Code"=FIELD("Global Dimension 1 Filter"),
                                                                                                            "Shortcut Dimension 2 Code"=FIELD("Global Dimension 2 Filter")));
                                                   AccessByPermission=TableData "Sales Shipment Header"=R;
                                                   CaptionML=ENU=Customer Outstanding Orders;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 27  ;   ;Customer Shipped Not Invoiced;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line"."Shipped Not Invoiced" WHERE ("Document Type"=CONST(Order),
                                                                                                              "Bill-to Customer No."=FIELD("Customer Filter"),
                                                                                                              "Currency Code"=FIELD(Code),
                                                                                                              "Shortcut Dimension 1 Code"=FIELD("Global Dimension 1 Filter"),
                                                                                                              "Shortcut Dimension 2 Code"=FIELD("Global Dimension 2 Filter")));
                                                   AccessByPermission=TableData "Sales Shipment Header"=R;
                                                   CaptionML=ENU=Customer Shipped Not Invoiced;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 28  ;   ;Customer Balance Due;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE ("Customer No."=FIELD("Customer Filter"),
                                                                                                              "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                              "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                              "Initial Entry Due Date"=FIELD("Date Filter"),
                                                                                                              "Posting Date"=FIELD(UPPERLIMIT("Date Filter")),
                                                                                                              "Currency Code"=FIELD(Code)));
                                                   CaptionML=ENU=Customer Balance Due;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 29  ;   ;Vendor Ledg. Entries in Filter;Boolean;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Exist("Vendor Ledger Entry" WHERE ("Vendor No."=FIELD("Vendor Filter"),
                                                                                                  "Currency Code"=FIELD(Code)));
                                                   CaptionML=ENU=Vendor Ledg. Entries in Filter;
                                                   Editable=false }
    { 30  ;   ;Vendor Balance      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE ("Vendor No."=FIELD("Vendor Filter"),
                                                                                                                "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                "Posting Date"=FIELD("Date Filter"),
                                                                                                                "Currency Code"=FIELD(Code)));
                                                   CaptionML=ENU=Vendor Balance;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 31  ;   ;Vendor Outstanding Orders;Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Amount" WHERE ("Document Type"=CONST(Order),
                                                                                                               "Pay-to Vendor No."=FIELD("Vendor Filter"),
                                                                                                               "Currency Code"=FIELD(Code),
                                                                                                               "Shortcut Dimension 1 Code"=FIELD("Global Dimension 1 Filter"),
                                                                                                               "Shortcut Dimension 2 Code"=FIELD("Global Dimension 2 Filter")));
                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=Vendor Outstanding Orders;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 32  ;   ;Vendor Amt. Rcd. Not Invoiced;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Amt. Rcd. Not Invoiced" WHERE ("Document Type"=CONST(Order),
                                                                                                                   "Pay-to Vendor No."=FIELD("Vendor Filter"),
                                                                                                                   "Currency Code"=FIELD(Code),
                                                                                                                   "Shortcut Dimension 1 Code"=FIELD("Global Dimension 1 Filter"),
                                                                                                                   "Shortcut Dimension 2 Code"=FIELD("Global Dimension 2 Filter")));
                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=Vendor Amt. Rcd. Not Invoiced;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 33  ;   ;Vendor Balance Due  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE ("Vendor No."=FIELD("Vendor Filter"),
                                                                                                                "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                "Initial Entry Due Date"=FIELD("Date Filter"),
                                                                                                                "Posting Date"=FIELD(UPPERLIMIT("Date Filter")),
                                                                                                                "Currency Code"=FIELD(Code)));
                                                   CaptionML=ENU=Vendor Balance Due;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 34  ;   ;Customer Balance (LCY);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE ("Customer No."=FIELD("Customer Filter"),
                                                                                                                      "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                      "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                      "Posting Date"=FIELD("Date Filter"),
                                                                                                                      "Currency Code"=FIELD(Code)));
                                                   CaptionML=ENU=Customer Balance (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 35  ;   ;Vendor Balance (LCY);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE ("Vendor No."=FIELD("Vendor Filter"),
                                                                                                                        "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                        "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                        "Posting Date"=FIELD("Date Filter"),
                                                                                                                        "Currency Code"=FIELD(Code)));
                                                   CaptionML=ENU=Vendor Balance (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 40  ;   ;Realized G/L Gains Account;Code20  ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Realized G/L Gains Account");
                                                              END;

                                                   CaptionML=ENU=Realized G/L Gains Account }
    { 41  ;   ;Realized G/L Losses Account;Code20 ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Realized G/L Losses Account");
                                                              END;

                                                   CaptionML=ENU=Realized G/L Losses Account }
    { 44  ;   ;Appln. Rounding Precision;Decimal  ;CaptionML=ENU=Appln. Rounding Precision;
                                                   MinValue=0;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 45  ;   ;EMU Currency        ;Boolean       ;CaptionML=ENU=EMU Currency }
    { 46  ;   ;Currency Factor     ;Decimal       ;CaptionML=ENU=Currency Factor;
                                                   DecimalPlaces=0:5;
                                                   Editable=false }
    { 47  ;   ;Residual Gains Account;Code20      ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Residual Gains Account }
    { 48  ;   ;Residual Losses Account;Code20     ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Residual Losses Account }
    { 50  ;   ;Conv. LCY Rndg. Debit Acc.;Code20  ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Conv. LCY Rndg. Debit Acc. }
    { 51  ;   ;Conv. LCY Rndg. Credit Acc.;Code20 ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Conv. LCY Rndg. Credit Acc. }
    { 52  ;   ;Max. VAT Difference Allowed;Decimal;OnValidate=BEGIN
                                                                if "Max. VAT Difference Allowed" <> ROUND("Max. VAT Difference Allowed","Amount Rounding Precision") then
                                                                  ERROR(
                                                                    Text001,
                                                                    FIELDCAPTION("Max. VAT Difference Allowed"),"Amount Rounding Precision");

                                                                "Max. VAT Difference Allowed" := ABS("Max. VAT Difference Allowed");
                                                              END;

                                                   CaptionML=ENU=Max. VAT Difference Allowed;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 53  ;   ;VAT Rounding Type   ;Option        ;CaptionML=ENU=VAT Rounding Type;
                                                   OptionCaptionML=ENU=Nearest,Up,Down;
                                                   OptionString=Nearest,Up,Down }
    { 54  ;   ;Payment Tolerance % ;Decimal       ;CaptionML=ENU=Payment Tolerance %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=false }
    { 55  ;   ;Max. Payment Tolerance Amount;Decimal;
                                                   CaptionML=ENU=Max. Payment Tolerance Amount;
                                                   MinValue=0;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 56  ;   ;Symbol              ;Text10        ;CaptionML=ENU=Symbol }
    { 57  ;   ;Last Modified Date Time;DateTime   ;CaptionML=ENU=Last Modified Date Time;
                                                   Editable=false }
    { 8000;   ;Id                  ;GUID          ;CaptionML=ENU=Id }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=true }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Code,Description                         }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=must be rounded to the nearest %1';
      Text001@1001 : TextConst 'ENU=%1 must be rounded to the nearest %2.';
      CurrExchRate@1002 : Record "Currency Exchange Rate";
      GLSetup@1003 : Record "General Ledger Setup";
      Text002@1004 : TextConst '@@@=1 either customer or vendor ledger entry table 2 name co currency table 3 currencency code;ENU=There is one or more opened entries in the %1 table using %2 %3.';
      IncorrectEntryTypeErr@1005 : TextConst 'ENU=Incorrect Entry Type %1.';
      EuroDescriptionTxt@1006 : TextConst '@@@=Currency Description;ENU=Euro';
      CanadiandollarDescriptionTxt@1007 : TextConst '@@@=Currency Description;ENU=Canadian dollar';
      BritishpoundDescriptionTxt@1008 : TextConst '@@@=Currency Description;ENU=Pound Sterling';
      USdollarDescriptionTxt@1009 : TextConst '@@@=Currency Description;ENU=US dollar';

    [External]
    PROCEDURE InitRoundingPrecision@2();
    BEGIN
      GLSetup.GET;
      if GLSetup."Amount Rounding Precision" <> 0 then
        "Amount Rounding Precision" := GLSetup."Amount Rounding Precision"
      else
        "Amount Rounding Precision" := 0.01;
      if GLSetup."Unit-Amount Rounding Precision" <> 0 then
        "Unit-Amount Rounding Precision" := GLSetup."Unit-Amount Rounding Precision"
      else
        "Unit-Amount Rounding Precision" := 0.00001;
      "Max. VAT Difference Allowed" := GLSetup."Max. VAT Difference Allowed";
      "VAT Rounding Type" := GLSetup."VAT Rounding Type";
      "Invoice Rounding Precision" := GLSetup."Inv. Rounding Precision (LCY)";
      "Invoice Rounding Type" := GLSetup."Inv. Rounding Type (LCY)";
    END;

    LOCAL PROCEDURE CheckGLAcc@1(AccNo@1000 : Code[20]);
    VAR
      GLAcc@1001 : Record "G/L Account";
    BEGIN
      if AccNo <> '' then begin
        GLAcc.GET(AccNo);
        GLAcc.CheckGLAcc;
      end;
    END;

    [External]
    PROCEDURE VATRoundingDirection@3() : Text[1];
    BEGIN
      case "VAT Rounding Type" of
        "VAT Rounding Type"::Nearest:
          exit('=');
        "VAT Rounding Type"::Up:
          exit('>');
        "VAT Rounding Type"::Down:
          exit('<');
      end;
    END;

    [External]
    PROCEDURE InvoiceRoundingDirection@4() : Text[1];
    BEGIN
      case "Invoice Rounding Type" of
        "Invoice Rounding Type"::Nearest:
          exit('=');
        "Invoice Rounding Type"::Up:
          exit('>');
        "Invoice Rounding Type"::Down:
          exit('<');
      end;
    END;

    [External]
    PROCEDURE CheckAmountRoundingPrecision@5();
    BEGIN
      TESTFIELD("Unit-Amount Rounding Precision");
      TESTFIELD("Amount Rounding Precision");
    END;

    [External]
    PROCEDURE GetGainLossAccount@6(DtldCVLedgEntryBuf@1000 : Record "Detailed CV Ledg. Entry Buffer") : Code[20];
    BEGIN
      case DtldCVLedgEntryBuf."Entry Type" of
        DtldCVLedgEntryBuf."Entry Type"::"Unrealized Loss":
          exit(GetUnrealizedLossesAccount);
        DtldCVLedgEntryBuf."Entry Type"::"Unrealized Gain":
          exit(GetUnrealizedGainsAccount);
        DtldCVLedgEntryBuf."Entry Type"::"Realized Loss":
          exit(GetRealizedLossesAccount);
        DtldCVLedgEntryBuf."Entry Type"::"Realized Gain":
          exit(GetRealizedGainsAccount);
        else
          ERROR(IncorrectEntryTypeErr,DtldCVLedgEntryBuf."Entry Type");
      end;
    END;

    [External]
    PROCEDURE GetRealizedGainsAccount@12() : Code[20];
    BEGIN
      TESTFIELD("Realized Gains Acc.");
      exit("Realized Gains Acc.");
    END;

    [External]
    PROCEDURE GetRealizedLossesAccount@14() : Code[20];
    BEGIN
      TESTFIELD("Realized Losses Acc.");
      exit("Realized Losses Acc.");
    END;

    [External]
    PROCEDURE GetRealizedGLGainsAccount@18() : Code[20];
    BEGIN
      TESTFIELD("Realized G/L Gains Account");
      exit("Realized G/L Gains Account");
    END;

    [External]
    PROCEDURE GetRealizedGLLossesAccount@19() : Code[20];
    BEGIN
      TESTFIELD("Realized G/L Losses Account");
      exit("Realized G/L Losses Account");
    END;

    [External]
    PROCEDURE GetResidualGainsAccount@20() : Code[20];
    BEGIN
      TESTFIELD("Residual Gains Account");
      exit("Residual Gains Account");
    END;

    [External]
    PROCEDURE GetResidualLossesAccount@21() : Code[20];
    BEGIN
      TESTFIELD("Residual Losses Account");
      exit("Residual Losses Account");
    END;

    [External]
    PROCEDURE GetUnrealizedGainsAccount@16() : Code[20];
    BEGIN
      TESTFIELD("Unrealized Gains Acc.");
      exit("Unrealized Gains Acc.");
    END;

    [External]
    PROCEDURE GetUnrealizedLossesAccount@15() : Code[20];
    BEGIN
      TESTFIELD("Unrealized Losses Acc.");
      exit("Unrealized Losses Acc.");
    END;

    [External]
    PROCEDURE GetConvLCYRoundingDebitAccount@22() : Code[20];
    BEGIN
      TESTFIELD("Conv. LCY Rndg. Debit Acc.");
      exit("Conv. LCY Rndg. Debit Acc.");
    END;

    [External]
    PROCEDURE GetConvLCYRoundingCreditAccount@23() : Code[20];
    BEGIN
      TESTFIELD("Conv. LCY Rndg. Credit Acc.");
      exit("Conv. LCY Rndg. Credit Acc.");
    END;

    [External]
    PROCEDURE GetCurrencySymbol@8() : Text[10];
    BEGIN
      if Symbol <> '' then
        exit(Symbol);

      exit(Code);
    END;

    [External]
    PROCEDURE ResolveCurrencySymbol@9(CurrencyCode@1000 : Code[10]) : Text[10];
    VAR
      Currency@1001 : Record Currency;
      PoundChar@1002 : Char;
      EuroChar@1003 : Char;
      YenChar@1004 : Char;
    BEGIN
      if Currency.GET(CurrencyCode) then
        if Currency.Symbol <> '' then
          exit(Currency.Symbol);

      PoundChar := 163;
      YenChar := 165;
      EuroChar := 8364;

      case CurrencyCode of
        'AUD','BND','CAD','FJD','HKD','MXN','NZD','SBD','SGD','USD':
          exit('$');
        'GBP':
          exit(FORMAT(PoundChar));
        'DKK','ISK','NOK','SEK':
          exit('kr');
        'EUR':
          exit(FORMAT(EuroChar));
        'CNY','JPY':
          exit(FORMAT(YenChar));
      end;

      exit('');
    END;

    [External]
    PROCEDURE ResolveCurrencyDescription@10(CurrencyCode@1000 : Code[10]) : Text;
    VAR
      Currency@1001 : Record Currency;
    BEGIN
      if Currency.GET(CurrencyCode) then
        if Currency.Description <> '' then
          exit(Currency.Description);

      case CurrencyCode of
        'CAD':
          exit(CanadiandollarDescriptionTxt);
        'GBP':
          exit(BritishpoundDescriptionTxt);
        'USD':
          exit(USdollarDescriptionTxt);
        'EUR':
          exit(EuroDescriptionTxt);
      end;

      exit('');
    END;

    [External]
    PROCEDURE ResolveGLCurrencySymbol@11(CurrencyCode@1000 : Code[10]) : Text[10];
    VAR
      Currency@1001 : Record Currency;
    BEGIN
      if CurrencyCode <> '' then
        exit(Currency.ResolveCurrencySymbol(CurrencyCode));

      GLSetup.GET;
      exit(GLSetup.GetCurrencySymbol);
    END;

    [External]
    PROCEDURE Initialize@7(CurrencyCode@1000 : Code[10]);
    BEGIN
      if CurrencyCode <> '' then
        GET(CurrencyCode)
      else
        InitRoundingPrecision;
    END;

    [External]
    PROCEDURE SuggestSetupAccounts@26();
    VAR
      RecRef@1000 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      SuggestGainLossAccounts(RecRef);
      SuggestOtherAccounts(RecRef);
      RecRef.MODIFY;
    END;

    LOCAL PROCEDURE SuggestGainLossAccounts@30(VAR RecRef@1000 : RecordRef);
    BEGIN
      if "Unrealized Gains Acc." = '' then
        SuggestAccount(RecRef,FIELDNO("Unrealized Gains Acc."));
      if "Realized Gains Acc." = '' then
        SuggestAccount(RecRef,FIELDNO("Realized Gains Acc."));
      if "Unrealized Losses Acc." = '' then
        SuggestAccount(RecRef,FIELDNO("Unrealized Losses Acc."));
      if "Realized Losses Acc." = '' then
        SuggestAccount(RecRef,FIELDNO("Realized Losses Acc."));
    END;

    LOCAL PROCEDURE SuggestOtherAccounts@13(VAR RecRef@1000 : RecordRef);
    BEGIN
      if "Realized G/L Gains Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Realized G/L Gains Account"));
      if "Realized G/L Losses Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Realized G/L Losses Account"));
      if "Residual Gains Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Residual Gains Account"));
      if "Residual Losses Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Residual Losses Account"));
      if "Conv. LCY Rndg. Debit Acc." = '' then
        SuggestAccount(RecRef,FIELDNO("Conv. LCY Rndg. Debit Acc."));
      if "Conv. LCY Rndg. Credit Acc." = '' then
        SuggestAccount(RecRef,FIELDNO("Conv. LCY Rndg. Credit Acc."));
    END;

    LOCAL PROCEDURE SuggestAccount@34(VAR RecRef@1000 : RecordRef;AccountFieldNo@1001 : Integer);
    VAR
      TempAccountUseBuffer@1002 : TEMPORARY Record "Account Use Buffer";
      RecFieldRef@1003 : FieldRef;
      CurrencyRecRef@1005 : RecordRef;
      CurrencyFieldRef@1006 : FieldRef;
    BEGIN
      CurrencyRecRef.OPEN(DATABASE::Currency);

      CurrencyRecRef.RESET;
      CurrencyFieldRef := CurrencyRecRef.FIELD(FIELDNO(Code));
      CurrencyFieldRef.SETFILTER('<>%1',Code);
      TempAccountUseBuffer.UpdateBuffer(CurrencyRecRef,AccountFieldNo);
      CurrencyRecRef.CLOSE;

      TempAccountUseBuffer.RESET;
      TempAccountUseBuffer.SETCURRENTKEY("No. of Use");
      if TempAccountUseBuffer.FINDLAST then begin
        RecFieldRef := RecRef.FIELD(AccountFieldNo);
        RecFieldRef.VALUE(TempAccountUseBuffer."Account No.");
      end;
    END;

    BEGIN
    END.
  }
}

