OBJECT Page 6057 Contract Line Selection
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Contract Line Selection;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    SourceTable="Service Item";
    DataCaptionFields="Customer No.";
    PageType=Worksheet;
    OnInit=BEGIN
             CurrPage.LOOKUPMODE := true;
           END;

    OnOpenPage=BEGIN
                 OKButton := false;
                 SETCURRENTKEY("Customer No.","Ship-to Code");
                 FILTERGROUP(2);
                 SETRANGE("Customer No.",CustomerNo);
                 SETFILTER(Status,'<>%1',Status::Defective);
                 FILTERGROUP(0);
                 SETRANGE("Ship-to Code",ShipToCode);
                 SetSelectionFilter;
               END;

    OnQueryClosePage=BEGIN
                       if CloseAction = ACTION::LookupOK then
                         LookupOKOnPush;
                       if OKButton then begin
                         ServContract.GET(ContractType,ContractNo);
                         CurrPage.SETSELECTIONFILTER(Rec);
                         ServContractLine.HideDialogBox(true);
                         if FIND('-') then
                           repeat
                             CheckServContractLine;
                           until NEXT = 0;
                         CreateServContractLines;
                         COMMIT;
                       end;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 32      ;1   ;ActionGroup;
                      Name=&Serv. Item;
                      CaptionML=ENU=&Serv. Item;
                      Image=ServiceItem }
      { 33      ;2   ;Action    ;
                      Name=&Card;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=&Card;
                      ToolTipML=ENU=View or edit detailed information for the service contract.;
                      ApplicationArea=#Service;
                      RunObject=Page "Service Item Card";
                      RunPageOnRec=true;
                      RunPageLink="No."=FIELD("No.");
                      Image=EditLines }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 2   ;1   ;Field     ;
                Name=SelectionFilter;
                CaptionML=ENU=Selection Filter;
                ToolTipML=ENU=Specifies a selection filter.;
                OptionCaptionML=ENU=All Service Items,Service Items without Contract;
                ApplicationArea=#Service;
                SourceExpr=SelectionFilter;
                OnValidate=BEGIN
                             SelectionFilterOnAfterValidate;
                           END;

                ImplicitType=Option }

    { 1   ;1   ;Group     ;
                Name=Group1;
                Editable=FALSE;
                GroupType=Repeater }

    { 6   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the item.;
                ApplicationArea=#Service;
                SourceExpr="No.";
                ImplicitType=Code20 }

    { 18  ;2   ;Field     ;
                Name=Item No.;
                CaptionML=ENU=Item No.;
                ToolTipML=ENU=Specifies the item number linked to the service item.;
                ApplicationArea=#Service;
                SourceExpr="Item No.";
                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Serial No.;
                ToolTipML=ENU=Specifies the serial number of this item.;
                ApplicationArea=#ItemTracking;
                SourceExpr="Serial No.";
                ImplicitType=Code20 }

    { 22  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies a description of this item.;
                ApplicationArea=#Service;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 28  ;2   ;Field     ;
                Name=Customer No.;
                ToolTipML=ENU=Specifies the number of the customer who owns this item.;
                ApplicationArea=#Service;
                SourceExpr="Customer No.";
                ImplicitType=Code20 }

    { 10  ;2   ;Field     ;
                Name=Ship-to Code;
                ToolTipML=ENU=Specifies a code for an alternate shipment address if you want to ship to another address than the one that has been entered automatically. This field is also used in case of drop shipment.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Code";
                ImplicitType=Code10 }

    { 14  ;2   ;Field     ;
                Name=Vendor No.;
                ToolTipML=ENU=Specifies the number of the vendor for this item.;
                ApplicationArea=#Service;
                SourceExpr="Vendor No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name=Vendor Item No.;
                ToolTipML=ENU=Specifies the number that the vendor uses for this item.;
                ApplicationArea=#Service;
                SourceExpr="Vendor Item No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ServContract@1000 : Record "Service Contract Header";
      ServContractLine@1008 : Record "Service Contract Line";
      TempServItem@1001 : TEMPORARY Record "Service Item";
      OKButton@1002 : Boolean;
      CustomerNo@1004 : Code[20];
      ShipToCode@1005 : Code[10];
      ContractNo@1006 : Code[20];
      ContractType@1007 : Integer;
      LineNo@1009 : Integer;
      Text000@1010 : TextConst '@@@=Service Item 1 already exists in this service contract.;ENU=%1 %2 already exists in this service contract.';
      Text001@1012 : TextConst '@@@=Service Item 1 already belongs to one or more service contracts/quotes.\\Do you want to include this service item into the document?;ENU=%1 %2 already belongs to one or more service contracts/quotes.\\Do you want to include this service item into the document?';
      Text002@1011 : TextConst '@@@=Service Item 1 has a different ship-to code for this customer.\\Do you want to include this service item into the document?;ENU=%1 %2 has a different ship-to code for this customer.\\Do you want to include this service item into the document?';
      SelectionFilter@1013 : '"All Service Items","Service Items without Contract"';

    [External]
    PROCEDURE SetSelection@1(CustNo@1000 : Code[20];ShipNo@1001 : Code[10];CtrType@1004 : Integer;CtrNo@1002 : Code[20]);
    BEGIN
      CustomerNo := CustNo;
      ShipToCode := ShipNo;
      ContractType := CtrType;
      ContractNo := CtrNo;
    END;

    LOCAL PROCEDURE FindlineNo@2() : Integer;
    BEGIN
      ServContractLine.RESET;
      ServContractLine.SETRANGE("Contract Type",ContractType);
      ServContractLine.SETRANGE("Contract No.",ContractNo);
      if ServContractLine.FINDLAST then
        exit(ServContractLine."Line No.");

      exit(0);
    END;

    LOCAL PROCEDURE CheckServContractLine@3();
    BEGIN
      TempServItem := Rec;

      ServContractLine.RESET;
      ServContractLine.SETCURRENTKEY("Service Item No.");
      ServContractLine.SETRANGE("Contract No.",ServContract."Contract No.");
      ServContractLine.SETRANGE("Contract Type",ServContract."Contract Type");
      ServContractLine.SETRANGE("Service Item No.",TempServItem."No.");
      if ServContractLine.FINDFIRST then begin
        MESSAGE(Text000,TempServItem.TABLECAPTION,TempServItem."No.");
        exit;
      end;

      ServContractLine.RESET;
      ServContractLine.SETCURRENTKEY("Service Item No.","Contract Status");
      ServContractLine.SETRANGE("Service Item No.",TempServItem."No.");
      ServContractLine.SETFILTER("Contract Status",'<>%1',ServContractLine."Contract Status"::Cancelled);
      ServContractLine.SETRANGE("Contract Type",ServContractLine."Contract Type"::Contract);
      ServContractLine.SETFILTER("Contract No.",'<>%1',ServContract."Contract No.");
      if ServContractLine.FINDFIRST then begin
        if not CONFIRM(Text001,true,TempServItem.TABLECAPTION,TempServItem."No.") then
          exit;
      end else begin
        ServContractLine.RESET;
        ServContractLine.SETCURRENTKEY("Service Item No.");
        ServContractLine.SETRANGE("Service Item No.",TempServItem."No.");
        ServContractLine.SETRANGE("Contract Type",ServContractLine."Contract Type"::Quote);
        ServContractLine.SETFILTER("Contract No.",'<>%1',ServContract."Contract No.");
        if ServContractLine.FINDFIRST then
          if not CONFIRM(Text001,true,TempServItem.TABLECAPTION,TempServItem."No.") then
            exit;
      end;

      if TempServItem."Ship-to Code" <> ServContract."Ship-to Code" then
        if not CONFIRM(Text002,false,TempServItem.TABLECAPTION,TempServItem."No.") then
          exit;

      TempServItem.INSERT;
    END;

    LOCAL PROCEDURE CreateServContractLines@4();
    BEGIN
      ServContractLine.LOCKTABLE;
      LineNo := FindlineNo + 10000;
      if TempServItem.FIND('-') then
        repeat
          ServContractLine.INIT;
          ServContractLine.HideDialogBox(true);
          ServContractLine."Contract Type" := ServContract."Contract Type";
          ServContractLine."Contract No." := ServContract."Contract No.";
          ServContractLine."Line No." := LineNo;
          ServContractLine.SetupNewLine;
          ServContractLine.VALIDATE("Service Item No.",TempServItem."No.");
          ServContractLine.VALIDATE("Line Value",TempServItem."Default Contract Value");
          ServContractLine.VALIDATE("Line Discount %",TempServItem."Default Contract Discount %");
          ServContractLine.INSERT(true);
          LineNo := LineNo + 10000;
        until TempServItem.NEXT = 0
    END;

    [External]
    PROCEDURE SetSelectionFilter@5();
    BEGIN
      case SelectionFilter of
        SelectionFilter::"All Service Items":
          SETRANGE("No. of Active Contracts");
        SelectionFilter::"Service Items without Contract":
          SETRANGE("No. of Active Contracts",0);
      end;
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE SelectionFilterOnAfterValidate@19033692();
    BEGIN
      CurrPage.UPDATE;
      SetSelectionFilter;
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    BEGIN
      OKButton := "No." <> '';
    END;

    BEGIN
    END.
  }
}

