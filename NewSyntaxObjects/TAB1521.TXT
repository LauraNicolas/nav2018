OBJECT Table 1521 Workflow Response
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               ClearSupportedCombinations;
             END;

    CaptionML=ENU=Workflow Response;
    LookupPageID="Workflow Responses";
  }
  FIELDS
  {
    { 1   ;   ;Function Name       ;Code128       ;CaptionML=ENU=Function Name;
                                                   NotBlank=true }
    { 2   ;   ;Table ID            ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE ("Object Type"=CONST(Table));
                                                   CaptionML=ENU=Table ID }
    { 3   ;   ;Description         ;Text250       ;CaptionML=ENU=Then }
    { 4   ;   ;Response Option Group;Code20       ;InitValue=GROUP 0;
                                                   CaptionML=ENU=Response Option Group }
    { 5   ;   ;Independent         ;Boolean       ;CaptionML=ENU=Independent }
  }
  KEYS
  {
    {    ;"Function Name"                         ;Clustered=true }
    {    ;Independent,Description                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE HasPredecessors@1() : Boolean;
    VAR
      WFEventResponseCombination@1000 : Record "WF Event/Response Combination";
    BEGIN
      WFEventResponseCombination.SETRANGE(Type,WFEventResponseCombination.Type::Response);
      WFEventResponseCombination.SETRANGE("Function Name","Function Name");
      exit(not WFEventResponseCombination.ISEMPTY);
    END;

    [External]
    PROCEDURE MakeDependentOnAllEvents@2();
    VAR
      WorkflowEvent@1001 : Record "Workflow Event";
      WorkflowResponseHandling@1000 : Codeunit "Workflow Response Handling";
    BEGIN
      if WorkflowEvent.FINDSET then
        repeat
          WorkflowResponseHandling.AddResponsePredecessor("Function Name",WorkflowEvent."Function Name");
        until WorkflowEvent.NEXT = 0;
    END;

    LOCAL PROCEDURE ClearSupportedCombinations@7();
    VAR
      WFEventResponseCombination@1000 : Record "WF Event/Response Combination";
    BEGIN
      WFEventResponseCombination.SETRANGE(Type,WFEventResponseCombination.Type::Response);
      WFEventResponseCombination.SETRANGE("Function Name","Function Name");
      WFEventResponseCombination.DELETEALL(true);

      WFEventResponseCombination.RESET;
      WFEventResponseCombination.SETRANGE("Predecessor Type",WFEventResponseCombination.Type::Response);
      WFEventResponseCombination.SETRANGE("Predecessor Function Name","Function Name");
      WFEventResponseCombination.DELETEALL(true);
    END;

    [External]
    PROCEDURE MakeIndependent@8();
    VAR
      WFEventResponseCombination@1002 : Record "WF Event/Response Combination";
    BEGIN
      if not HasPredecessors then
        exit;

      WFEventResponseCombination.MakeEventResponseIndependent(WFEventResponseCombination.Type::Response,"Function Name");
    END;

    BEGIN
    END.
  }
}

