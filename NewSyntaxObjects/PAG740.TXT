OBJECT Page 740 VAT Report
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=VAT Return;
    LinksAllowed=false;
    SourceTable="VAT Report Header";
    DataCaptionExpr="No.";
    SourceTableView=WHERE("VAT Report Config. Code"=CONST("VAT Return"));
    PageType=Document;
    PromotedActionCategoriesML=ENU=New,Process,Report,VAT Settlement;
    OnOpenPage=BEGIN
                 if "No." <> '' then
                   InitPageControllers;
                 IsEditable := Status = Status::Open;
                 DeleteErrors;
               END;

    OnClosePage=BEGIN
                  DeleteErrors;
                END;

    OnAfterGetRecord=BEGIN
                       InitPageControllers;
                     END;

    OnInsertRecord=BEGIN
                     InitPageControllers;
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 16      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 22      ;2   ;Action    ;
                      Name=SuggestLines;
                      CaptionML=ENU=Suggest Lines;
                      ToolTipML=ENU="Create VAT Report entries based on information gathered from documents related to sales and purchases. ";
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=SuggestLinesControllerStatus;
                      Image=SuggestLines;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 VATReportMediator.GetLines(Rec);
                                 CurrPage.VATReportLines.PAGE.SelectFirst;
                                 CheckForErrors;
                               END;
                                }
      { 50      ;2   ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=ENU=Release;
                      ToolTipML=ENU=Verify that the report includes all of the required information, and prepare it for submission.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=ReleaseControllerStatus;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 VATReportMediator.Release(Rec);
                                 CheckForErrors;
                               END;
                                }
      { 27      ;2   ;Action    ;
                      Name=Submit;
                      CaptionML=ENU=Submit;
                      ToolTipML=ENU=Submits the VAT Report to the tax authority's reporting service.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=SubmitControllerStatus;
                      Image=SendElectronicDocument;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 VATReportMediator.Export(Rec);
                                 if not CheckForErrors then
                                   MESSAGE(ReportSubmittedMsg);
                               END;
                                }
      { 19      ;2   ;Action    ;
                      Name=Mark as Submitted;
                      CaptionML=ENU=Mark as Submitted;
                      ToolTipML=ENU=Indicate that you submitted the report to the tax authority manually.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=MarkAsSubmitControllerStatus;
                      Image=Approve;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 VATReportMediator.Submit(Rec);
                                 if not CheckForErrors then
                                   MESSAGE(MarkAsSubmittedMsg);
                               END;
                                }
      { 17      ;2   ;Action    ;
                      Name=Cancel Submission;
                      CaptionML=ENU=Cancel Submission;
                      ToolTipML=ENU=Cancels previously submitted report.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=FALSE;
                      Image=Cancel;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 VATReportMediator.Reopen(Rec);
                                 MESSAGE(CancelReportSentMsg);
                               END;
                                }
      { 25      ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=ENU=Reopen;
                      ToolTipML=ENU=Open the report again to make changes.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=ReopenControllerStatus;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      PromotedOnly=true;
                      OnAction=BEGIN
                                 VATReportMediator.Reopen(Rec);
                               END;
                                }
      { 20      ;2   ;Action    ;
                      Name=Download Submission Message;
                      CaptionML=ENU=Download Submission Message;
                      ToolTipML=ENU=Open the report again to make changes.;
                      ApplicationArea=#Basic,#Suite;
                      Visible=FALSE;
                      Enabled=DownloadSubmissionControllerStatus;
                      Image=MoveDown;
                      OnAction=VAR
                                 VATReportArchive@1000 : Record "VAT Report Archive";
                               BEGIN
                                 VATReportArchive.DownloadSubmissionMessage("VAT Report Config. Code","No.");
                               END;
                                }
      { 21      ;2   ;Action    ;
                      Name=Download Response Message;
                      CaptionML=ENU=Download Response Message;
                      ToolTipML=ENU=Open the report again to make changes.;
                      ApplicationArea=#Basic,#Suite;
                      Visible=FALSE;
                      Enabled=DownloadResponseControllerStatus;
                      Image=MoveDown;
                      OnAction=VAR
                                 VATReportArchive@1000 : Record "VAT Report Archive";
                               BEGIN
                                 VATReportArchive.DownloadResponseMessage("VAT Report Config. Code","No.");
                               END;
                                }
      { 3       ;2   ;Action    ;
                      Name=Calc. and Post VAT Settlement;
                      CaptionML=ENU=Calc. and Post VAT Settlement;
                      ToolTipML=ENU=Close open VAT entries and transfers purchase and sales VAT amounts to the VAT settlement account. For every VAT posting group, the batch job finds all the VAT entries in the VAT Entry table that are included in the filters in the definition window.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=CalcAndPostVATStatus;
                      PromotedIsBig=true;
                      Image=Report;
                      PromotedCategory=Category4;
                      PromotedOnly=true;
                      OnAction=VAR
                                 CalcAndPostVATSettlement@1000 : Report "Calc. and Post VAT Settlement";
                               BEGIN
                                 CalcAndPostVATSettlement.InitializeRequest("Start Date","End Date",WORKDATE,"No.",'',false,false);
                                 CalcAndPostVATSettlement.RUN;
                               END;
                                }
      { 33      ;1   ;Action    ;
                      Name=Print;
                      CaptionML=ENU=Print;
                      ToolTipML=ENU=Print the information in the window. A print request window opens where you can specify what to include on the print-out.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Visible=FALSE;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 VATReportMediator.Print(Rec);
                               END;
                                }
      { 12      ;1   ;Action    ;
                      Name=Report Setup;
                      CaptionML=ENU=Report Setup;
                      ToolTipML=ENU=Specifies the setup that will be used for the VAT reports submission.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page "VAT Report Setup";
                      Visible=FALSE;
                      Image=Setup }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General;
                Editable=IsEditable }

    { 2   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the unique identifier for the report.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               if AssistEdit(xRec) then
                                 CurrPage.UPDATE;
                             END;

                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=VAT Report Version;
                CaptionML=ENU=Version;
                ToolTipML=ENU=Specifies version of the report.;
                ApplicationArea=#Basic,#Suite;
                NotBlank=true;
                SourceExpr="VAT Report Version";
                ImplicitType=Code10 }

    { 14  ;2   ;Field     ;
                Name=Status;
                ToolTipML=ENU=Specifies whether the report is in progress, is completed, or contains errors.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Status;
                Editable=FALSE;
                OnValidate=BEGIN
                             InitPageControllers;
                           END;

                ImplicitType=Option }

    { 23  ;2   ;Group     ;
                Name=Group23;
                Editable=False;
                GroupType=Group }

    { 35  ;3   ;Field     ;
                Name=Period Year;
                ToolTipML=ENU=Specifies the year of the reporting period.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Period Year";
                LookupPageID="Date Lookup";
                ImplicitType=Integer }

    { 34  ;3   ;Field     ;
                Name=Period Type;
                ToolTipML=ENU=Specifies the length of the reporting period.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Period Type";
                ImplicitType=Option }

    { 15  ;3   ;Field     ;
                Name=Period No.;
                ToolTipML=ENU=Specifies the specific reporting period to use.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Period No.";
                ImplicitType=Integer }

    { 8   ;3   ;Field     ;
                Name=Start Date;
                ToolTipML=ENU=Specifies the first date of the reporting period.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Start Date";
                Importance=Additional;
                ImplicitType=Date }

    { 10  ;3   ;Field     ;
                Name=End Date;
                ToolTipML=ENU=Specifies the last date of the reporting period.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="End Date";
                Importance=Additional;
                ImplicitType=Date }

    { 13  ;1   ;Part      ;
                Name=VATReportLines;
                CaptionML=ENU=Report Lines;
                ApplicationArea=#Basic,#Suite;
                SubPageLink="VAT Report No."=FIELD("No."),
                            "VAT Report Config. Code"=FIELD("VAT Report Config. Code");
                PagePartID="VAT Report Statement Subform";
                PartType=Page }

    { 7   ;1   ;Part      ;
                Name=ErrorMessagesPart;
                CaptionML=ENU=Messages;
                ApplicationArea=#Basic,#Suite;
                PagePartID="Error Messages Part";
                Visible=ErrorsExist;
                PartType=Page }

  }
  CODE
  {
    VAR
      DummyCompanyInformation@1090 : Record "Company Information";
      VATReportMediator@1000 : Codeunit "VAT Report Mediator";
      ErrorsExist@1001 : Boolean;
      ReportSubmittedMsg@1006 : TextConst 'ENU=The report has been successfully submitted.';
      CancelReportSentMsg@1005 : TextConst 'ENU=The cancel request has been sent.';
      MarkAsSubmittedMsg@1004 : TextConst 'ENU=The report has been marked as submitted.';
      SuggestLinesControllerStatus@1015 : Boolean;
      SubmitControllerStatus@1014 : Boolean;
      MarkAsSubmitControllerStatus@1013 : Boolean;
      ReleaseControllerStatus@1012 : Boolean;
      ReopenControllerStatus@1011 : Boolean;
      IsEditable@1009 : Boolean;
      DownloadSubmissionControllerStatus@1008 : Boolean;
      DownloadResponseControllerStatus@1007 : Boolean;
      CalcAndPostVATStatus@1010 : Boolean;

    LOCAL PROCEDURE InitPageControllers@5();
    BEGIN
      SuggestLinesControllerStatus := Status = Status::Open;
      ReleaseControllerStatus := Status = Status::Open;
      SubmitControllerStatus := Status = Status::Released;
      MarkAsSubmitControllerStatus := Status = Status::Released;
      DownloadSubmissionControllerStatus := (Status = Status::Submitted) or
        (Status = Status::Rejected) or
        (Status = Status::Accepted) or
        (Status = Status::Closed);
      DownloadResponseControllerStatus := (Status = Status::Rejected) or
        (Status = Status::Accepted) or
        (Status = Status::Closed);
      CalcAndPostVATStatus := Status = Status::Accepted;
      ReopenControllerStatus := Status = Status::Released;
    END;

    LOCAL PROCEDURE CheckForErrors@1096() : Boolean;
    VAR
      ErrorMessage@1001 : Record "Error Message";
      TempErrorMessage@1000 : TEMPORARY Record "Error Message";
    BEGIN
      ErrorMessage.SETRANGE("Context Record ID",DummyCompanyInformation.RECORDID);
      ErrorMessage.CopyToTemp(TempErrorMessage);
      ErrorMessage.SETRANGE("Context Record ID",RECORDID);
      ErrorMessage.CopyToTemp(TempErrorMessage);

      CurrPage.ErrorMessagesPart.PAGE.SetRecords(TempErrorMessage);
      CurrPage.ErrorMessagesPart.PAGE.UPDATE;
      ErrorsExist := not TempErrorMessage.ISEMPTY;

      exit(ErrorsExist);
    END;

    LOCAL PROCEDURE DeleteErrors@11();
    VAR
      ErrorMessage@1001 : Record "Error Message";
    BEGIN
      ErrorMessage.SETRANGE("Context Record ID",DummyCompanyInformation.RECORDID);
      if ErrorMessage.FINDFIRST then
        ErrorMessage.DELETEALL(true);
      COMMIT;
    END;

    BEGIN
    END.
  }
}

