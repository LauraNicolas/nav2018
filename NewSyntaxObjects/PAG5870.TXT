OBJECT Page 5870 BOM Structure
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=BOM Structure;
    InsertAllowed=false;
    DeleteAllowed=false;
    SourceTable="BOM Buffer";
    PageType=Worksheet;
    SourceTableTemporary=true;
    OnOpenPage=BEGIN
                 RefreshPage;
               END;

    OnAfterGetRecord=VAR
                       DummyBOMWarningLog@1000 : Record "BOM Warning Log";
                     BEGIN
                       IsParentExpr := not "Is Leaf";

                       HasWarning := not IsLineOk(false,DummyBOMWarningLog);
                     END;

    ActionList=ACTIONS
    {
      { 29      ;    ;ActionContainer;
                      Name=ActionContainer29;
                      ActionContainerType=RelatedInformation }
      { 28      ;1   ;ActionGroup;
                      Name=&Item Availability by;
                      CaptionML=ENU=&Item Availability by;
                      Image=ItemAvailability }
      { 27      ;2   ;Action    ;
                      Name=Event;
                      CaptionML=ENU=Event;
                      ToolTipML=ENU=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.;
                      ApplicationArea=#Advanced;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 26      ;2   ;Action    ;
                      Name=Period;
                      CaptionML=ENU=Period;
                      ToolTipML=ENU=View the projected quantity of the item over time according to time periods, such as day, week, or month.;
                      ApplicationArea=#Advanced;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByPeriod);
                               END;
                                }
      { 18      ;2   ;Action    ;
                      Name=Variant;
                      CaptionML=ENU=Variant;
                      ToolTipML=ENU=View or edit the item's variants. Instead of setting up each color of an item as a separate item, you can set up the various colors as variants of the item.;
                      ApplicationArea=#Advanced;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByVariant);
                               END;
                                }
      { 15      ;2   ;Action    ;
                      Name=Location;
                      AccessByPermission=TableData Location=R;
                      CaptionML=ENU=Location;
                      ToolTipML=ENU=View the actual and projected quantity of the item per location.;
                      ApplicationArea=#Advanced;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByLocation);
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Name=BOM Level;
                      CaptionML=ENU=BOM Level;
                      ToolTipML=ENU=View availability figures for items on bills of materials that show how many units of a parent item you can make based on the availability of child items.;
                      ApplicationArea=#Advanced;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByBOM);
                               END;
                                }
      { 5       ;0   ;ActionContainer;
                      Name=ActionContainer5;
                      ActionContainerType=ActionItems }
      { 30      ;1   ;Action    ;
                      Name=Show Warnings;
                      CaptionML=ENU=Show Warnings;
                      ToolTipML=ENU=View details about bottlenecks.;
                      ApplicationArea=#Advanced;
                      Promoted=true;
                      PromotedIsBig=true;
                      Image=ErrorLog;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowWarningsForAllLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 20  ;1   ;Group     ;
                Name=Option;
                CaptionML=ENU=Option;
                GroupType=GridLayout }

    { 19  ;2   ;Field     ;
                Name=ItemFilter;
                CaptionML=ENU=Item Filter;
                ToolTipML=ENU=Specifies the items that are shown in the BOM Structure window.;
                ApplicationArea=#Assembly;
                SourceExpr=ItemFilter;
                OnValidate=BEGIN
                             RefreshPage;
                           END;

                OnLookup=VAR
                           Item@1001 : Record Item;
                           ItemList@1000 : Page "Item List";
                         BEGIN
                           ItemList.SETTABLEVIEW(Item);
                           ItemList.LOOKUPMODE := true;
                           if ItemList.RUNMODAL = ACTION::LookupOK then begin
                             ItemList.GETRECORD(Item);
                             Text := Item."No.";
                             exit(true);
                           end;
                           exit(false);
                         END;

                ImplicitType=Code250 }

    { 2   ;1   ;Group     ;
                Name=Group;
                CaptionML=ENU=Lines;
                IndentationColumnName=Indentation;
                ShowAsTree=true;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the item's position in the BOM structure. Lower-level items are indented under their parents.;
                ApplicationArea=#Assembly;
                SourceExpr=Type;
                ImplicitType=Option }

    { 4   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the item.;
                ApplicationArea=#Assembly;
                SourceExpr="No.";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=IsParentExpr;
                ImplicitType=Code20 }

    { 8   ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies the item's description.;
                ApplicationArea=#Assembly;
                SourceExpr=Description;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=IsParentExpr;
                ImplicitType=Text50 }

    { 7   ;2   ;Field     ;
                Name=HasWarning;
                CaptionML=ENU=Warning;
                ToolTipML=ENU=Specifies if the BOM line has setup or data issues.;
                ApplicationArea=#Assembly;
                BlankZero=true;
                SourceExpr=HasWarning;
                Editable=FALSE;
                Style=Attention;
                StyleExpr=HasWarning;
                OnDrillDown=BEGIN
                              if HasWarning then
                                ShowWarnings;
                            END;

                ImplicitType=Boolean }

    { 14  ;2   ;Field     ;
                Name=Low-Level Code;
                ToolTipML=ENU=Specifies the item's level in the BOM structure.;
                ApplicationArea=#Advanced;
                SourceExpr="Low-Level Code";
                Visible=FALSE;
                ImplicitType=Integer }

    { 6   ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant code that you entered in the Variant Filter field in the Item Availability by BOM Level window.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 21  ;2   ;Field     ;
                Name=Qty. per Parent;
                ToolTipML=ENU=Specifies how many units of the component are required to assemble or produce one unit of the parent.;
                ApplicationArea=#Assembly;
                DecimalPlaces=0:5;
                SourceExpr="Qty. per Parent";
                Editable=FALSE;
                ImplicitType=Decimal }

    { 22  ;2   ;Field     ;
                Name=Qty. per Top Item;
                ToolTipML=ENU=Specifies how many units of the component are required to assemble or produce one unit of the top item.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr="Qty. per Top Item";
                Visible=FALSE;
                Editable=FALSE;
                ImplicitType=Decimal }

    { 23  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Assembly;
                SourceExpr="Unit of Measure Code";
                Editable=FALSE;
                ImplicitType=Code10 }

    { 24  ;2   ;Field     ;
                Name=Replenishment System;
                ToolTipML=ENU=Specifies the item's replenishment system.;
                ApplicationArea=#Assembly;
                SourceExpr="Replenishment System";
                Editable=FALSE;
                ImplicitType=Option }

    { 25  ;2   ;Field     ;
                Name=Lead-Time Offset;
                ToolTipML=ENU=Specifies the total number of days that are required to assemble or produce the item.;
                ApplicationArea=#Advanced;
                SourceExpr="Lead-Time Offset";
                Visible=FALSE;
                ImplicitType=DateFormula }

    { 9   ;2   ;Field     ;
                Name=Safety Lead Time;
                ToolTipML=ENU=Specifies any safety lead time that is defined for the item.;
                ApplicationArea=#Advanced;
                SourceExpr="Safety Lead Time";
                Visible=FALSE;
                ImplicitType=DateFormula }

    { 10  ;2   ;Field     ;
                Name=Lead Time Calculation;
                ToolTipML=ENU=Specifies how long it takes to replenish the item, by purchase, assembly, or production.;
                ApplicationArea=#Advanced;
                SourceExpr="Lead Time Calculation";
                Visible=FALSE;
                ImplicitType=DateFormula }

  }
  CODE
  {
    VAR
      Item@1004 : Record Item;
      AsmHeader@1009 : Record "Assembly Header";
      ProdOrderLine@1002 : Record "Prod. Order Line";
      ItemAvailFormsMgt@1001 : Codeunit "Item Availability Forms Mgt";
      IsParentExpr@1010 : Boolean INDATASET;
      ItemFilter@1008 : Code[250];
      ShowBy@1005 : 'Item,Assembly,Production';
      Text000@1012 : TextConst 'ENU=Could not find items with BOM levels.';
      HasWarning@1011 : Boolean INDATASET;
      Text001@1003 : TextConst 'ENU=There are no warnings.';

    [External]
    PROCEDURE InitItem@1(VAR NewItem@1000 : Record Item);
    BEGIN
      Item.COPY(NewItem);
      ItemFilter := Item."No.";
      ShowBy := ShowBy::Item;
    END;

    [External]
    PROCEDURE InitAsmOrder@5(NewAsmHeader@1000 : Record "Assembly Header");
    BEGIN
      AsmHeader := NewAsmHeader;
      ShowBy := ShowBy::Assembly;
    END;

    [External]
    PROCEDURE InitProdOrder@6(NewProdOrderLine@1000 : Record "Prod. Order Line");
    BEGIN
      ProdOrderLine := NewProdOrderLine;
      ShowBy := ShowBy::Production;
    END;

    LOCAL PROCEDURE RefreshPage@2();
    VAR
      CalcBOMTree@1000 : Codeunit "Calculate BOM Tree";
    BEGIN
      Item.SETFILTER("No.",ItemFilter);
      CalcBOMTree.SetItemFilter(Item);
      case ShowBy of
        ShowBy::Item:
          begin
            Item.FINDFIRST;
            if (not Item.HasBOM) and (Item."Routing No." = '') then
              ERROR(Text000);
            CalcBOMTree.GenerateTreeForItems(Item,Rec,0);
          end;
        ShowBy::Production:
          CalcBOMTree.GenerateTreeForProdLine(ProdOrderLine,Rec,0);
        ShowBy::Assembly:
          CalcBOMTree.GenerateTreeForAsm(AsmHeader,Rec,0);
      end;

      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE ShowWarnings@10();
    VAR
      TempBOMWarningLog@1001 : TEMPORARY Record "BOM Warning Log";
    BEGIN
      if IsLineOk(true,TempBOMWarningLog) then
        MESSAGE(Text001)
      else
        PAGE.RUNMODAL(PAGE::"BOM Warning Log",TempBOMWarningLog);
    END;

    LOCAL PROCEDURE ShowWarningsForAllLines@27();
    VAR
      TempBOMWarningLog@1001 : TEMPORARY Record "BOM Warning Log";
    BEGIN
      if AreAllLinesOk(TempBOMWarningLog) then
        MESSAGE(Text001)
      else
        PAGE.RUNMODAL(PAGE::"BOM Warning Log",TempBOMWarningLog);
    END;

    LOCAL PROCEDURE ItemAvail@32(AvailType@1000 : Option);
    VAR
      Item@1001 : Record Item;
    BEGIN
      TESTFIELD(Type,Type::Item);

      Item.GET("No.");
      Item.SETFILTER("No.","No.");
      Item.SETRANGE("Date Filter",0D,"Needed by Date");
      Item.SETFILTER("Variant Filter","Variant Code");
      if ShowBy <> ShowBy::Item then
        Item.SETFILTER("Location Filter","Location Code");

      ItemAvailFormsMgt.ShowItemAvailFromItem(Item,AvailType);
    END;

    BEGIN
    END.
  }
}

