OBJECT Report 5691 Index Insurance
{
  OBJECT-PROPERTIES
  {
    Date=20161025D;
    Time=120000T;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Index Insurance;
    ProcessingOnly=true;
    OnPreReport=BEGIN
                  if PostingDate = 0D then
                    ERROR(Text000,InsuranceJnlLine.FIELDCAPTION("Posting Date"));
                  if PostingDate <> NORMALDATE(PostingDate) then
                    ERROR(Text001);
                  if IndexFigure = 100 then
                    ERROR(Text002);
                  if IndexFigure <= 0 then
                    ERROR(Text003);
                  FASetup.GET;
                  FASetup.TESTFIELD("Insurance Depr. Book");
                  DeprBook.GET(FASetup."Insurance Depr. Book");
                  InsuranceJnlLine.LOCKTABLE;
                  FAJnlSetup.InsuranceJnlName(DeprBook,InsuranceJnlLine,NextLineNo);
                  NoSeries := FAJnlSetup.GetInsuranceNoSeries(InsuranceJnlLine);
                  if DocumentNo = '' then
                    DocumentNo := FAJnlSetup.GetInsuranceJnlDocumentNo(InsuranceJnlLine,PostingDate);
                  InsuranceJnlLine."Posting Date" := PostingDate;
                  Window.OPEN(Text004);
                END;

  }
  DATASET
  {
    { 3794;    ;DataItem;Fixed Asset         ;
               DataItemTable="Fixed Asset";
               OnPreDataItem=BEGIN
                               InsCoverageLedgEntry.SETCURRENTKEY("FA No.","Insurance No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  if Blocked or Inactive then
                                    CurrReport.SKIP;
                                  Window.UPDATE(1,"No.");
                                  InsuranceTmp.DELETEALL;
                                  InsCoverageLedgEntry.SETRANGE("FA No.","No.");
                                  InsCoverageLedgEntry.SETRANGE("Posting Date",0D,PostingDate);
                                  if InsCoverageLedgEntry.FIND('-') then
                                    repeat
                                      InsuranceTmp."No." := InsCoverageLedgEntry."Insurance No.";
                                      if InsuranceTmp.INSERT then begin
                                        InsCoverageLedgEntry.SETRANGE("Insurance No.",InsCoverageLedgEntry."Insurance No.");
                                        InsCoverageLedgEntry.CALCSUMS(Amount);
                                        InsCoverageLedgEntry.SETRANGE("Insurance No.");
                                        if InsCoverageLedgEntry.Amount <> 0 then begin
                                          if Insurance.GET(InsCoverageLedgEntry."Insurance No.") then begin
                                            if Insurance.Blocked then
                                              CurrReport.SKIP;
                                          end else
                                            CurrReport.SKIP;
                                          InsuranceJnlLine."Line No." := 0;
                                          FAJnlSetup.SetInsuranceJnlTrailCodes(InsuranceJnlLine);
                                          InsuranceJnlLine.VALIDATE("Insurance No.",InsCoverageLedgEntry."Insurance No.");
                                          InsuranceJnlLine.VALIDATE("FA No.","No.");
                                          InsuranceJnlLine.VALIDATE(
                                            Amount,ROUND(InsCoverageLedgEntry.Amount * (IndexFigure / 100 - 1)));
                                          InsuranceJnlLine."Document No." := DocumentNo;
                                          InsuranceJnlLine."Posting No. Series" := NoSeries;
                                          InsuranceJnlLine.Description := PostingDescription;
                                          InsuranceJnlLine."Index Entry" := true;
                                          NextLineNo := NextLineNo + 10000;
                                          InsuranceJnlLine."Line No." := NextLineNo;
                                          InsuranceJnlLine.INSERT(true);
                                        end;
                                      end;
                                    until InsCoverageLedgEntry.NEXT = 0;
                                END;

               ReqFilterFields="No.","FA Class Code","FA Subclass Code" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 5   ;2   ;Field     ;
                  Name=Index Figure;
                  CaptionML=ENU=Index Figure;
                  ToolTipML=[ENU="Specifies an index figure that is to calculate the index amounts entered in the journal. For example, if you want to index by 2%, enter 102 in this field; if you want to index by -3% percent, enter 97 in this field."];
                  ApplicationArea=#FixedAssets;
                  DecimalPlaces=0:8;
                  SourceExpr=IndexFigure }

      { 3   ;2   ;Field     ;
                  Name=Posting Date;
                  CaptionML=ENU=Posting Date;
                  ToolTipML=ENU=Specifies the posting date to be used by the batch job. This date appears in the Posting Date field on the insurance journal lines.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=PostingDate }

      { 8   ;2   ;Field     ;
                  Name=Document No.;
                  CaptionML=ENU=Document No.;
                  ToolTipML=ENU=Specifies, if you leave the field empty, the next available number on the resulting journal line. If a number series is not set up, enter the document number that you want assigned to the resulting journal line.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=DocumentNo }

      { 1   ;2   ;Field     ;
                  Name=Posting Description;
                  CaptionML=ENU=Posting Description;
                  ToolTipML=ENU=Specifies a posting description to appear on the resulting journal lines.;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=PostingDescription }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You must specify %1.';
      Text001@1001 : TextConst 'ENU=Posting Date must not be a closing date.';
      Text002@1002 : TextConst 'ENU=Index Figure must not be 100.';
      Text003@1003 : TextConst 'ENU=Index Figure must be positive.';
      Text004@1004 : TextConst 'ENU=Indexing insurance    #1##########';
      FASetup@1005 : Record "FA Setup";
      DeprBook@1006 : Record "Depreciation Book";
      Insurance@1007 : Record Insurance;
      FAJnlSetup@1008 : Record "FA Journal Setup";
      InsuranceTmp@1009 : TEMPORARY Record Insurance;
      InsCoverageLedgEntry@1010 : Record "Ins. Coverage Ledger Entry";
      InsuranceJnlLine@1011 : Record "Insurance Journal Line";
      Window@1012 : Dialog;
      PostingDate@1013 : Date;
      IndexFigure@1014 : Decimal;
      DocumentNo@1015 : Code[20];
      NoSeries@1016 : Code[10];
      PostingDescription@1017 : Text[50];
      NextLineNo@1018 : Integer;

    PROCEDURE InitializeRequest@1(DocumentNoFrom@1003 : Code[20];PostingDescriptionFrom@1002 : Text[50];PostingDateFrom@1001 : Date;IndexFigureFrom@1000 : Decimal);
    BEGIN
      DocumentNo := DocumentNoFrom;
      PostingDescription := PostingDescriptionFrom;
      PostingDate := PostingDateFrom;
      IndexFigure := IndexFigureFrom;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

