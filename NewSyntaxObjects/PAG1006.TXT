OBJECT Page 1006 Job Task Dimensions Multiple
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Job Task Dimensions Multiple;
    SourceTable="Job Task Dimension";
    PageType=List;
    SourceTableTemporary=true;
    OnInit=BEGIN
             CurrPage.LOOKUPMODE := true;
           END;

    OnOpenPage=BEGIN
                 GetDefaultDim;
               END;

    OnAfterGetRecord=BEGIN
                       DimensionValueCodeOnFormat(FORMAT("Dimension Value Code"));
                     END;

    OnInsertRecord=BEGIN
                     SETRANGE("Dimension Code","Dimension Code");
                     if not FIND('-') and ("Dimension Code" <> '') then begin
                       "Multiple Selection Action" := "Multiple Selection Action"::Change;
                       INSERT;
                     end;
                     SETRANGE("Dimension Code");
                     exit(false);
                   END;

    OnModifyRecord=BEGIN
                     "Multiple Selection Action" := "Multiple Selection Action"::Change;
                     MODIFY;
                     exit(false);
                   END;

    OnDeleteRecord=BEGIN
                     "Multiple Selection Action" := "Multiple Selection Action"::Delete;
                     MODIFY;
                     exit(false);
                   END;

    OnQueryClosePage=BEGIN
                       if CloseAction = ACTION::LookupOK then
                         LookupOKOnPush;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Dimension Code;
                ToolTipML=ENU=Specifies the code for the dimension that the dimension value filter will be linked to. To select a dimension codes, which are set up in the Dimensions window, click the drop-down arrow in the field.;
                ApplicationArea=#Jobs;
                SourceExpr="Dimension Code";
                OnValidate=BEGIN
                             if (xRec."Dimension Code" <> '') and (xRec."Dimension Code" <> "Dimension Code") then
                               ERROR(Text000,TABLECAPTION);
                           END;

                ImplicitType=Code20 }

    { 4   ;2   ;Field     ;
                Name=Dimension Value Code;
                ToolTipML=ENU=Specifies the code for the dimension value that the dimension value filter will be linked to. To select a value code, which are set up in the Dimensions window, choose the drop-down arrow in the field.;
                ApplicationArea=#Jobs;
                SourceExpr="Dimension Value Code";
                ImplicitType=Code20 }

  }
  CODE
  {
    VAR
      TempJobTaskDim2@1000 : TEMPORARY Record "Job Task Dimension";
      TempJobTaskDim3@1001 : TEMPORARY Record "Job Task Dimension";
      TempJobTask@1002 : TEMPORARY Record "Job Task";
      TotalRecNo@1003 : Integer;
      Text000@1004 : TextConst 'ENU=You cannot rename a %1.';
      Text001@1005 : TextConst 'ENU=(Conflict)';

    LOCAL PROCEDURE SetCommonJobTaskDim@1006();
    VAR
      JobTaskDim@1000 : Record "Job Task Dimension";
    BEGIN
      SETRANGE(
        "Multiple Selection Action","Multiple Selection Action"::Delete);
      if FIND('-') then
        repeat
          if TempJobTaskDim3.FIND('-') then
            repeat
              if JobTaskDim.GET(TempJobTaskDim3."Job No.",TempJobTaskDim3."Job Task No.","Dimension Code")
              then
                JobTaskDim.DELETE(true);
            until TempJobTaskDim3.NEXT = 0;
        until NEXT = 0;
      SETRANGE(
        "Multiple Selection Action","Multiple Selection Action"::Change);
      if FIND('-') then
        repeat
          if TempJobTaskDim3.FIND('-') then
            repeat
              if JobTaskDim.GET(TempJobTaskDim3."Job No.",TempJobTaskDim3."Job Task No.","Dimension Code")
              then begin
                JobTaskDim."Dimension Code" := "Dimension Code";
                JobTaskDim."Dimension Value Code" := "Dimension Value Code";
                JobTaskDim.MODIFY(true);
              end else begin
                JobTaskDim.INIT;
                JobTaskDim."Job No." := TempJobTaskDim3."Job No.";
                JobTaskDim."Job Task No." := TempJobTaskDim3."Job Task No.";
                JobTaskDim."Dimension Code" := "Dimension Code";
                JobTaskDim."Dimension Value Code" := "Dimension Value Code";
                JobTaskDim.INSERT(true);
              end;
            until TempJobTaskDim3.NEXT = 0;
        until NEXT = 0;
    END;

    [External]
    PROCEDURE SetMultiJobTask@1007(VAR JobTask@1000 : Record "Job Task");
    BEGIN
      TempJobTaskDim2.DELETEALL;
      TempJobTask.DELETEALL;
      with JobTask do
        if FIND('-') then
          repeat
            CopyJobTaskDimToJobTaskDim("Job No.","Job Task No.");
            TempJobTask.TRANSFERFIELDS(JobTask);
            TempJobTask.INSERT;
          until NEXT = 0;
    END;

    LOCAL PROCEDURE CopyJobTaskDimToJobTaskDim@1008(JobNo@1000 : Code[20];JobTaskNo@1001 : Code[20]);
    VAR
      JobTaskDim@1002 : Record "Job Task Dimension";
    BEGIN
      TotalRecNo := TotalRecNo + 1;
      TempJobTaskDim3."Job No." := JobNo;
      TempJobTaskDim3."Job Task No." := JobTaskNo;
      TempJobTaskDim3.INSERT;

      JobTaskDim.SETRANGE("Job No.",JobNo);
      JobTaskDim.SETRANGE("Job Task No.",JobTaskNo);
      if JobTaskDim.FIND('-') then
        repeat
          TempJobTaskDim2 := JobTaskDim;
          TempJobTaskDim2.INSERT;
        until JobTaskDim.NEXT = 0;
    END;

    LOCAL PROCEDURE GetDefaultDim@1009();
    VAR
      Dim@1000 : Record Dimension;
      RecNo@1001 : Integer;
    BEGIN
      RESET;
      DELETEALL;
      if Dim.FIND('-') then
        repeat
          RecNo := 0;
          TempJobTaskDim2.SETRANGE("Dimension Code",Dim.Code);
          SETRANGE("Dimension Code",Dim.Code);
          if TempJobTaskDim2.FIND('-') then
            repeat
              if FIND('-') then begin
                if "Dimension Value Code" <> TempJobTaskDim2."Dimension Value Code" then
                  if ("Multiple Selection Action" <> 10) and
                     ("Multiple Selection Action" <> 21)
                  then begin
                    "Multiple Selection Action" :=
                      "Multiple Selection Action" + 10;
                    "Dimension Value Code" := '';
                  end;
                MODIFY;
                RecNo := RecNo + 1;
              end else begin
                Rec := TempJobTaskDim2;
                INSERT;
                RecNo := RecNo + 1;
              end;
            until TempJobTaskDim2.NEXT = 0;

          if FIND('-') and (RecNo <> TotalRecNo) then
            if ("Multiple Selection Action" <> 10) and
               ("Multiple Selection Action" <> 21)
            then begin
              "Multiple Selection Action" :=
                "Multiple Selection Action" + 10;
              "Dimension Value Code" := '';
              MODIFY;
            end;
        until Dim.NEXT = 0;

      RESET;
      SETCURRENTKEY("Dimension Code");
      SETFILTER(
        "Multiple Selection Action",'<>%1',"Multiple Selection Action"::Delete)
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    BEGIN
      SetCommonJobTaskDim;
    END;

    LOCAL PROCEDURE DimensionValueCodeOnFormat@19000225(Text@19073275 : Text[1024]);
    BEGIN
      if "Dimension Code" <> '' then
        if ("Multiple Selection Action" = 10) or
           ("Multiple Selection Action" = 21)
        then
          Text := Text001;
    END;

    BEGIN
    END.
  }
}

