OBJECT Table 252 General Posting Setup
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               CheckSetupUsage;
             END;

    CaptionML=ENU=General Posting Setup;
    LookupPageID="General Posting Setup";
    DrillDownPageID="General Posting Setup";
  }
  FIELDS
  {
    { 1   ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 2   ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=ENU=Gen. Prod. Posting Group;
                                                   NotBlank=true }
    { 10  ;   ;Sales Account       ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Sales Account");
                                                              END;

                                                   OnLookup=BEGIN
                                                              GLAccountCategoryMgt.LookupGLAccount(
                                                                "Sales Account",GLAccountCategory."Account Category"::Income,
                                                                STRSUBSTNO('%1|%2',GLAccountCategoryMgt.GetIncomeProdSales,GLAccountCategoryMgt.GetIncomeService));
                                                            END;

                                                   CaptionML=ENU=Sales Account }
    { 11  ;   ;Sales Line Disc. Account;Code20    ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Sales Line Disc. Account");
                                                              END;

                                                   OnLookup=BEGIN
                                                              GLAccountCategoryMgt.LookupGLAccount(
                                                                "Sales Line Disc. Account",GLAccountCategory."Account Category"::Income,
                                                                GLAccountCategoryMgt.GetIncomeSalesDiscounts);
                                                            END;

                                                   CaptionML=ENU=Sales Line Disc. Account }
    { 12  ;   ;Sales Inv. Disc. Account;Code20    ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Sales Inv. Disc. Account");
                                                              END;

                                                   OnLookup=BEGIN
                                                              GLAccountCategoryMgt.LookupGLAccount(
                                                                "Sales Inv. Disc. Account",GLAccountCategory."Account Category"::Income,
                                                                GLAccountCategoryMgt.GetIncomeSalesDiscounts);
                                                            END;

                                                   CaptionML=ENU=Sales Inv. Disc. Account }
    { 13  ;   ;Sales Pmt. Disc. Debit Acc.;Code20 ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Sales Pmt. Disc. Debit Acc.");
                                                                if "Sales Pmt. Disc. Debit Acc." <> '' then begin
                                                                  GLSetup.GET;
                                                                  GLSetup.TESTFIELD("Adjust for Payment Disc.",true);
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Sales Pmt. Disc. Debit Acc. }
    { 14  ;   ;Purch. Account      ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Purch. Account");
                                                              END;

                                                   OnLookup=BEGIN
                                                              GLAccountCategoryMgt.LookupGLAccount(
                                                                "Purch. Account",GLAccountCategory."Account Category"::"Cost of Goods Sold",
                                                                STRSUBSTNO('%1|%2',GLAccountCategoryMgt.GetCOGSMaterials,GLAccountCategoryMgt.GetCOGSLabor));
                                                            END;

                                                   CaptionML=ENU=Purch. Account }
    { 15  ;   ;Purch. Line Disc. Account;Code20   ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Purch. Line Disc. Account");
                                                              END;

                                                   OnLookup=BEGIN
                                                              GLAccountCategoryMgt.LookupGLAccount(
                                                                "Purch. Line Disc. Account",GLAccountCategory."Account Category"::"Cost of Goods Sold",
                                                                GLAccountCategoryMgt.GetCOGSDiscountsGranted);
                                                            END;

                                                   CaptionML=ENU=Purch. Line Disc. Account }
    { 16  ;   ;Purch. Inv. Disc. Account;Code20   ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Purch. Inv. Disc. Account");
                                                              END;

                                                   OnLookup=BEGIN
                                                              GLAccountCategoryMgt.LookupGLAccount(
                                                                "Purch. Inv. Disc. Account",GLAccountCategory."Account Category"::Income,
                                                                GLAccountCategoryMgt.GetCOGSDiscountsGranted);
                                                            END;

                                                   CaptionML=ENU=Purch. Inv. Disc. Account }
    { 17  ;   ;Purch. Pmt. Disc. Credit Acc.;Code20;
                                                   TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Purch. Pmt. Disc. Credit Acc.");
                                                                if "Purch. Pmt. Disc. Credit Acc." <> '' then begin
                                                                  GLSetup.GET;
                                                                  GLSetup.TESTFIELD("Adjust for Payment Disc.",true);
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Purch. Pmt. Disc. Credit Acc. }
    { 18  ;   ;COGS Account        ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("COGS Account");
                                                              END;

                                                   OnLookup=BEGIN
                                                              GLAccountCategoryMgt.LookupGLAccount(
                                                                "COGS Account",GLAccountCategory."Account Category"::"Cost of Goods Sold",
                                                                STRSUBSTNO('%1|%2',GLAccountCategoryMgt.GetCOGSMaterials,GLAccountCategoryMgt.GetCOGSLabor));
                                                            END;

                                                   CaptionML=ENU=COGS Account }
    { 19  ;   ;Inventory Adjmt. Account;Code20    ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Inventory Adjmt. Account");
                                                              END;

                                                   CaptionML=ENU=Inventory Adjmt. Account }
    { 27  ;   ;Sales Credit Memo Account;Code20   ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Sales Credit Memo Account");
                                                              END;

                                                   CaptionML=ENU=Sales Credit Memo Account }
    { 28  ;   ;Purch. Credit Memo Account;Code20  ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Purch. Credit Memo Account");
                                                              END;

                                                   CaptionML=ENU=Purch. Credit Memo Account }
    { 30  ;   ;Sales Pmt. Disc. Credit Acc.;Code20;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Sales Pmt. Disc. Credit Acc.");
                                                                if "Sales Pmt. Disc. Credit Acc." <> '' then begin
                                                                  GLSetup.GET;
                                                                  GLSetup.TESTFIELD("Adjust for Payment Disc.",true);
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Sales Pmt. Disc. Credit Acc. }
    { 31  ;   ;Purch. Pmt. Disc. Debit Acc.;Code20;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Purch. Pmt. Disc. Debit Acc.");
                                                                if "Purch. Pmt. Disc. Debit Acc." <> '' then begin
                                                                  GLSetup.GET;
                                                                  GLSetup.TESTFIELD("Adjust for Payment Disc.",true);
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Purch. Pmt. Disc. Debit Acc. }
    { 32  ;   ;Sales Pmt. Tol. Debit Acc.;Code20  ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Sales Pmt. Tol. Debit Acc.");
                                                                if "Purch. Pmt. Disc. Debit Acc." <> '' then begin
                                                                  GLSetup.GET;
                                                                  GLSetup.TESTFIELD("Adjust for Payment Disc.",true);
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Sales Pmt. Tol. Debit Acc. }
    { 33  ;   ;Sales Pmt. Tol. Credit Acc.;Code20 ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Sales Pmt. Tol. Credit Acc.");
                                                                if "Purch. Pmt. Disc. Debit Acc." <> '' then begin
                                                                  GLSetup.GET;
                                                                  GLSetup.TESTFIELD("Adjust for Payment Disc.",true);
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Sales Pmt. Tol. Credit Acc. }
    { 34  ;   ;Purch. Pmt. Tol. Debit Acc.;Code20 ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Purch. Pmt. Tol. Debit Acc.");
                                                                if "Purch. Pmt. Disc. Debit Acc." <> '' then begin
                                                                  GLSetup.GET;
                                                                  GLSetup.TESTFIELD("Adjust for Payment Disc.",true);
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Purch. Pmt. Tol. Debit Acc. }
    { 35  ;   ;Purch. Pmt. Tol. Credit Acc.;Code20;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Purch. Pmt. Tol. Credit Acc.");
                                                                if "Purch. Pmt. Disc. Debit Acc." <> '' then begin
                                                                  GLSetup.GET;
                                                                  GLSetup.TESTFIELD("Adjust for Payment Disc.",true);
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Purch. Pmt. Tol. Credit Acc. }
    { 36  ;   ;Sales Prepayments Account;Code20   ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Sales Prepayments Account");
                                                              END;

                                                   CaptionML=ENU=Sales Prepayments Account }
    { 37  ;   ;Purch. Prepayments Account;Code20  ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Purch. Prepayments Account");
                                                              END;

                                                   CaptionML=ENU=Purch. Prepayments Account }
    { 40  ;   ;Used in Ledger Entries;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("G/L Entry" WHERE ("Gen. Bus. Posting Group"=FIELD("Gen. Bus. Posting Group"),
                                                                                        "Gen. Prod. Posting Group"=FIELD("Gen. Prod. Posting Group")));
                                                   CaptionML=ENU=Used in Ledger Entries;
                                                   BlankZero=true;
                                                   Editable=false }
    { 50  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 5600;   ;Purch. FA Disc. Account;Code20     ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Purch. FA Disc. Account");
                                                              END;

                                                   CaptionML=ENU=Purch. FA Disc. Account }
    { 5801;   ;Invt. Accrual Acc. (Interim);Code20;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Invt. Accrual Acc. (Interim)");
                                                              END;

                                                   CaptionML=ENU=Invt. Accrual Acc. (Interim) }
    { 5803;   ;COGS Account (Interim);Code20      ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("COGS Account (Interim)");
                                                              END;

                                                   CaptionML=ENU=COGS Account (Interim) }
    { 99000752;;Direct Cost Applied Account;Code20;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Direct Cost Applied Account");
                                                              END;

                                                   CaptionML=ENU=Direct Cost Applied Account }
    { 99000753;;Overhead Applied Account;Code20   ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Overhead Applied Account");
                                                              END;

                                                   CaptionML=ENU=Overhead Applied Account }
    { 99000754;;Purchase Variance Account;Code20  ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Purchase Variance Account");
                                                              END;

                                                   CaptionML=ENU=Purchase Variance Account }
  }
  KEYS
  {
    {    ;"Gen. Bus. Posting Group","Gen. Prod. Posting Group";
                                                   Clustered=true }
    {    ;"Gen. Prod. Posting Group","Gen. Bus. Posting Group" }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLSetup@1000 : Record "General Ledger Setup";
      GLAccountCategory@1001 : Record "G/L Account Category";
      GLAccountCategoryMgt@1002 : Codeunit "G/L Account Category Mgt.";
      YouCannotDeleteErr@1003 : TextConst '@@@="%1 = Location Code; %2 = Posting Group";ENU=You cannot delete %1 %2.';
      PostingSetupMgt@1004 : Codeunit PostingSetupManagement;

    LOCAL PROCEDURE CheckGLAcc@2(AccNo@1000 : Code[20]);
    VAR
      GLAcc@1001 : Record "G/L Account";
    BEGIN
      if AccNo <> '' then begin
        GLAcc.GET(AccNo);
        GLAcc.CheckGLAcc;
      end;
    END;

    LOCAL PROCEDURE CheckSetupUsage@24();
    BEGIN
      CALCFIELDS("Used in Ledger Entries");
      if "Used in Ledger Entries" > 0 then
        ERROR(YouCannotDeleteErr,"Gen. Bus. Posting Group","Gen. Prod. Posting Group");
    END;

    [External]
    PROCEDURE GetCOGSAccount@11() : Code[20];
    BEGIN
      if "COGS Account" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("COGS Account"));
      TESTFIELD("COGS Account");
      exit("COGS Account");
    END;

    [External]
    PROCEDURE GetCOGSInterimAccount@13() : Code[20];
    BEGIN
      if "COGS Account (Interim)" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("COGS Account (Interim)"));
      TESTFIELD("COGS Account (Interim)");
      exit("COGS Account (Interim)");
    END;

    [External]
    PROCEDURE GetInventoryAdjmtAccount@17() : Code[20];
    BEGIN
      if "Inventory Adjmt. Account" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Inventory Adjmt. Account"));
      TESTFIELD("Inventory Adjmt. Account");
      exit("Inventory Adjmt. Account");
    END;

    [External]
    PROCEDURE GetInventoryAccrualAccount@12() : Code[20];
    BEGIN
      if "Invt. Accrual Acc. (Interim)" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Invt. Accrual Acc. (Interim)"));
      TESTFIELD("Invt. Accrual Acc. (Interim)");
      exit("Invt. Accrual Acc. (Interim)");
    END;

    [External]
    PROCEDURE GetSalesAccount@7() : Code[20];
    BEGIN
      if "Sales Account" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Sales Account"));
      TESTFIELD("Sales Account");
      exit("Sales Account");
    END;

    [External]
    PROCEDURE GetSalesCrMemoAccount@9() : Code[20];
    BEGIN
      if "Sales Credit Memo Account" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Sales Credit Memo Account"));
      TESTFIELD("Sales Credit Memo Account");
      exit("Sales Credit Memo Account");
    END;

    [External]
    PROCEDURE GetSalesInvDiscAccount@14() : Code[20];
    BEGIN
      if "Sales Inv. Disc. Account" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Sales Inv. Disc. Account"));
      TESTFIELD("Sales Inv. Disc. Account");
      exit("Sales Inv. Disc. Account");
    END;

    [External]
    PROCEDURE GetSalesLineDiscAccount@6() : Code[20];
    BEGIN
      if "Sales Line Disc. Account" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Sales Line Disc. Account"));
      TESTFIELD("Sales Line Disc. Account");
      exit("Sales Line Disc. Account");
    END;

    [External]
    PROCEDURE GetSalesPmtDiscountAccount@1(Debit@1000 : Boolean) : Code[20];
    BEGIN
      if Debit then begin
        if "Sales Pmt. Disc. Debit Acc." = '' then
          PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Sales Pmt. Disc. Debit Acc."));
        TESTFIELD("Sales Pmt. Disc. Debit Acc.");
        exit("Sales Pmt. Disc. Debit Acc.");
      end;
      if "Sales Pmt. Disc. Credit Acc." = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Sales Pmt. Disc. Credit Acc."));
      TESTFIELD("Sales Pmt. Disc. Credit Acc.");
      exit("Sales Pmt. Disc. Credit Acc.");
    END;

    [External]
    PROCEDURE GetSalesPmtToleranceAccount@3(Debit@1000 : Boolean) : Code[20];
    BEGIN
      if Debit then begin
        if "Sales Pmt. Tol. Debit Acc." = '' then
          PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Sales Pmt. Tol. Debit Acc."));
        TESTFIELD("Sales Pmt. Tol. Debit Acc.");
        exit("Sales Pmt. Tol. Debit Acc.");
      end;
      if "Sales Pmt. Tol. Credit Acc." = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Sales Pmt. Tol. Credit Acc."));
      TESTFIELD("Sales Pmt. Tol. Credit Acc.");
      exit("Sales Pmt. Tol. Credit Acc.");
    END;

    [External]
    PROCEDURE GetSalesPrepmtAccount@15() : Code[20];
    BEGIN
      if "Sales Prepayments Account" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Sales Prepayments Account"));
      TESTFIELD("Sales Prepayments Account");
      exit("Sales Prepayments Account");
    END;

    [External]
    PROCEDURE GetPurchAccount@8() : Code[20];
    BEGIN
      if "Purch. Account" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Purch. Account"));
      TESTFIELD("Purch. Account");
      exit("Purch. Account");
    END;

    [External]
    PROCEDURE GetPurchCrMemoAccount@10() : Code[20];
    BEGIN
      if "Purch. Credit Memo Account" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Purch. Credit Memo Account"));
      TESTFIELD("Purch. Credit Memo Account");
      exit("Purch. Credit Memo Account");
    END;

    [External]
    PROCEDURE GetPurchInvDiscAccount@23() : Code[20];
    BEGIN
      if "Purch. Inv. Disc. Account" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Purch. Inv. Disc. Account"));
      TESTFIELD("Purch. Inv. Disc. Account");
      exit("Purch. Inv. Disc. Account");
    END;

    [External]
    PROCEDURE GetPurchLineDiscAccount@22() : Code[20];
    BEGIN
      if "Purch. Line Disc. Account" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Purch. Line Disc. Account"));
      TESTFIELD("Purch. Line Disc. Account");
      exit("Purch. Line Disc. Account");
    END;

    [External]
    PROCEDURE GetPurchPmtDiscountAccount@5(Debit@1000 : Boolean) : Code[20];
    BEGIN
      if Debit then begin
        if "Purch. Pmt. Disc. Debit Acc." = '' then
          PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Purch. Pmt. Disc. Debit Acc."));
        TESTFIELD("Purch. Pmt. Disc. Debit Acc.");
        exit("Purch. Pmt. Disc. Debit Acc.");
      end;
      if "Purch. Pmt. Disc. Credit Acc." = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Purch. Pmt. Disc. Credit Acc."));
      TESTFIELD("Purch. Pmt. Disc. Credit Acc.");
      exit("Purch. Pmt. Disc. Credit Acc.");
    END;

    [External]
    PROCEDURE GetPurchPmtToleranceAccount@4(Debit@1000 : Boolean) : Code[20];
    BEGIN
      if Debit then begin
        if "Purch. Pmt. Tol. Debit Acc." = '' then
          PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Purch. Pmt. Tol. Debit Acc."));
        TESTFIELD("Purch. Pmt. Tol. Debit Acc.");
        exit("Purch. Pmt. Tol. Debit Acc.");
      end;
      if "Purch. Pmt. Tol. Credit Acc." = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Purch. Pmt. Tol. Credit Acc."));
      TESTFIELD("Purch. Pmt. Tol. Credit Acc.");
      exit("Purch. Pmt. Tol. Credit Acc.");
    END;

    [External]
    PROCEDURE GetPurchPrepmtAccount@16() : Code[20];
    BEGIN
      if "Purch. Prepayments Account" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Purch. Prepayments Account"));
      TESTFIELD("Purch. Prepayments Account");
      exit("Purch. Prepayments Account");
    END;

    [External]
    PROCEDURE GetPurchFADiscAccount@18() : Code[20];
    BEGIN
      if "Purch. FA Disc. Account" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Purch. FA Disc. Account"));
      TESTFIELD("Purch. FA Disc. Account");
      exit("Purch. FA Disc. Account");
    END;

    [External]
    PROCEDURE GetDirectCostAppliedAccount@19() : Code[20];
    BEGIN
      if "Direct Cost Applied Account" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Direct Cost Applied Account"));
      TESTFIELD("Direct Cost Applied Account");
      exit("Direct Cost Applied Account");
    END;

    [External]
    PROCEDURE GetOverheadAppliedAccount@20() : Code[20];
    BEGIN
      if "Overhead Applied Account" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Overhead Applied Account"));
      TESTFIELD("Overhead Applied Account");
      exit("Overhead Applied Account");
    END;

    [External]
    PROCEDURE GetPurchaseVarianceAccount@21() : Code[20];
    BEGIN
      if "Purchase Variance Account" = '' then
        PostingSetupMgt.SendGenPostingSetupNotification(Rec,FIELDCAPTION("Purchase Variance Account"));
      TESTFIELD("Purchase Variance Account");
      exit("Purchase Variance Account");
    END;

    PROCEDURE SetAccountsVisibility@25(VAR PmtToleranceVisible@1000 : Boolean;VAR PmtDiscountVisible@1007 : Boolean;VAR SalesInvDiscVisible@1001 : Boolean;VAR SalesLineDiscVisible@1002 : Boolean;VAR PurchInvDiscVisible@1003 : Boolean;VAR PurchLineDiscVisible@1004 : Boolean);
    VAR
      SalesSetup@1005 : Record "Sales & Receivables Setup";
      PurchSetup@1006 : Record "Purchases & Payables Setup";
      PaymentTerms@1008 : Record "Payment Terms";
    BEGIN
      GLSetup.GET;
      PmtToleranceVisible := GLSetup."Payment Tolerance %" > 0;

      PmtDiscountVisible := PaymentTerms.UsePaymentDiscount;

      SalesSetup.GET;
      SalesLineDiscVisible :=
        SalesSetup."Discount Posting" in [SalesSetup."Discount Posting"::"All Discounts",
                                          SalesSetup."Discount Posting"::"Line Discounts"];
      SalesInvDiscVisible :=
        SalesSetup."Discount Posting" in [SalesSetup."Discount Posting"::"All Discounts",
                                          SalesSetup."Discount Posting"::"Invoice Discounts"];

      PurchSetup.GET;
      PurchLineDiscVisible :=
        PurchSetup."Discount Posting" in [PurchSetup."Discount Posting"::"All Discounts",
                                          PurchSetup."Discount Posting"::"Line Discounts"];
      PurchInvDiscVisible :=
        PurchSetup."Discount Posting" in [PurchSetup."Discount Posting"::"All Discounts",
                                          PurchSetup."Discount Posting"::"Invoice Discounts"];
    END;

    PROCEDURE SuggestSetupAccounts@26();
    VAR
      RecRef@1000 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      SuggestSalesAccounts(RecRef);
      SuggestPurchAccounts(RecRef);
      SuggestInvtAccounts(RecRef);
      RecRef.MODIFY;
    END;

    LOCAL PROCEDURE SuggestSalesAccounts@30(VAR RecRef@1000 : RecordRef);
    BEGIN
      if "Sales Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Sales Account"));
      if "Sales Credit Memo Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Sales Credit Memo Account"));
      if "Sales Inv. Disc. Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Sales Inv. Disc. Account"));
      if "Sales Line Disc. Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Sales Line Disc. Account"));
      if "Sales Pmt. Disc. Credit Acc." = '' then
        SuggestAccount(RecRef,FIELDNO("Sales Pmt. Disc. Credit Acc."));
      if "Sales Pmt. Disc. Debit Acc." = '' then
        SuggestAccount(RecRef,FIELDNO("Sales Pmt. Disc. Debit Acc."));
      if "Sales Pmt. Tol. Credit Acc." = '' then
        SuggestAccount(RecRef,FIELDNO("Sales Pmt. Tol. Credit Acc."));
      if "Sales Pmt. Tol. Debit Acc." = '' then
        SuggestAccount(RecRef,FIELDNO("Sales Pmt. Tol. Debit Acc."));
      if "Sales Prepayments Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Sales Prepayments Account"));
    END;

    LOCAL PROCEDURE SuggestPurchAccounts@31(VAR RecRef@1000 : RecordRef);
    BEGIN
      if "Purch. Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Purch. Account"));
      if "Purch. Credit Memo Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Purch. Credit Memo Account"));
      if "Purch. Inv. Disc. Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Purch. Inv. Disc. Account"));
      if "Purch. Line Disc. Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Purch. Line Disc. Account"));
      if "Purch. Pmt. Disc. Credit Acc." = '' then
        SuggestAccount(RecRef,FIELDNO("Purch. Pmt. Disc. Credit Acc."));
      if "Purch. Pmt. Disc. Debit Acc." = '' then
        SuggestAccount(RecRef,FIELDNO("Purch. Pmt. Disc. Debit Acc."));
      if "Purch. Pmt. Tol. Credit Acc." = '' then
        SuggestAccount(RecRef,FIELDNO("Purch. Pmt. Tol. Credit Acc."));
      if "Purch. Pmt. Tol. Debit Acc." = '' then
        SuggestAccount(RecRef,FIELDNO("Purch. Pmt. Tol. Debit Acc."));
      if "Purch. Prepayments Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Purch. Prepayments Account"));
    END;

    LOCAL PROCEDURE SuggestInvtAccounts@32(VAR RecRef@1000 : RecordRef);
    BEGIN
      if "COGS Account" = '' then
        SuggestAccount(RecRef,FIELDNO("COGS Account"));
      if "COGS Account (Interim)" = '' then
        SuggestAccount(RecRef,FIELDNO("COGS Account (Interim)"));
      if "Inventory Adjmt. Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Inventory Adjmt. Account"));
      if "Invt. Accrual Acc. (Interim)" = '' then
        SuggestAccount(RecRef,FIELDNO("Invt. Accrual Acc. (Interim)"));
      if "Direct Cost Applied Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Direct Cost Applied Account"));
      if "Overhead Applied Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Overhead Applied Account"));
      if "Purchase Variance Account" = '' then
        SuggestAccount(RecRef,FIELDNO("Purchase Variance Account"));
    END;

    LOCAL PROCEDURE SuggestAccount@34(VAR RecRef@1000 : RecordRef;AccountFieldNo@1001 : Integer);
    VAR
      TempAccountUseBuffer@1002 : TEMPORARY Record "Account Use Buffer";
      RecFieldRef@1003 : FieldRef;
      GenPostingSetupRecRef@1005 : RecordRef;
      GenPostingSetupFieldRef@1006 : FieldRef;
    BEGIN
      GenPostingSetupRecRef.OPEN(DATABASE::"General Posting Setup");

      GenPostingSetupRecRef.RESET;
      GenPostingSetupFieldRef := GenPostingSetupRecRef.FIELD(FIELDNO("Gen. Bus. Posting Group"));
      GenPostingSetupFieldRef.SETRANGE("Gen. Bus. Posting Group");
      GenPostingSetupFieldRef := GenPostingSetupRecRef.FIELD(FIELDNO("Gen. Prod. Posting Group"));
      GenPostingSetupFieldRef.SETFILTER('<>%1',"Gen. Prod. Posting Group");
      TempAccountUseBuffer.UpdateBuffer(GenPostingSetupRecRef,AccountFieldNo);

      GenPostingSetupRecRef.RESET;
      GenPostingSetupFieldRef := GenPostingSetupRecRef.FIELD(FIELDNO("Gen. Bus. Posting Group"));
      GenPostingSetupFieldRef.SETFILTER('<>%1',"Gen. Bus. Posting Group");
      GenPostingSetupFieldRef := GenPostingSetupRecRef.FIELD(FIELDNO("Gen. Prod. Posting Group"));
      GenPostingSetupFieldRef.SETRANGE("Gen. Prod. Posting Group");
      TempAccountUseBuffer.UpdateBuffer(GenPostingSetupRecRef,AccountFieldNo);

      GenPostingSetupRecRef.CLOSE;

      TempAccountUseBuffer.RESET;
      TempAccountUseBuffer.SETCURRENTKEY("No. of Use");
      if TempAccountUseBuffer.FINDLAST then begin
        RecFieldRef := RecRef.FIELD(AccountFieldNo);
        RecFieldRef.VALUE(TempAccountUseBuffer."Account No.");
      end;
    END;

    BEGIN
    END.
  }
}

