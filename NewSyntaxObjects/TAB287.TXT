OBJECT Table 287 Customer Bank Account
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    DataCaptionFields="Customer No.",Code,Name;
    OnDelete=VAR
               CustLedgerEntry@1000 : Record "Cust. Ledger Entry";
               Customer@1001 : Record Customer;
             BEGIN
               CustLedgerEntry.SETRANGE("Customer No.","Customer No.");
               CustLedgerEntry.SETRANGE("Recipient Bank Account",Code);
               CustLedgerEntry.SETRANGE(Open,true);
               if not CustLedgerEntry.ISEMPTY then
                 ERROR(BankAccDeleteErr);
               if Customer.GET("Customer No.") and (Customer."Preferred Bank Account Code" = Code) then begin
                 Customer."Preferred Bank Account Code" := '';
                 Customer.MODIFY;
               end;
             END;

    CaptionML=ENU=Customer Bank Account;
    LookupPageID="Customer Bank Account List";
    DrillDownPageID="Customer Bank Account List";
  }
  FIELDS
  {
    { 1   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Customer No.;
                                                   NotBlank=true }
    { 2   ;   ;Code                ;Code10        ;CaptionML=ENU=Code;
                                                   NotBlank=true }
    { 3   ;   ;Name                ;Text50        ;CaptionML=ENU=Name }
    { 5   ;   ;Name 2              ;Text50        ;CaptionML=ENU=Name 2 }
    { 6   ;   ;Address             ;Text50        ;CaptionML=ENU=Address }
    { 7   ;   ;Address 2           ;Text50        ;CaptionML=ENU=Address 2 }
    { 8   ;   ;City                ;Text30        ;TableRelation=IF ("Country/Region Code"=CONST('')) "Post Code".City
                                                                 ELSE IF ("Country/Region Code"=FILTER(<>'')) "Post Code".City WHERE ("Country/Region Code"=FIELD("Country/Region Code"));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) and GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=City }
    { 9   ;   ;Post Code           ;Code20        ;TableRelation=IF ("Country/Region Code"=CONST('')) "Post Code"
                                                                 ELSE IF ("Country/Region Code"=FILTER(<>'')) "Post Code" WHERE ("Country/Region Code"=FIELD("Country/Region Code"));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) and GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Post Code }
    { 10  ;   ;Contact             ;Text50        ;CaptionML=ENU=Contact }
    { 11  ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Phone No. }
    { 12  ;   ;Telex No.           ;Text20        ;CaptionML=ENU=Telex No. }
    { 13  ;   ;Bank Branch No.     ;Text20        ;CaptionML=ENU=Bank Branch No. }
    { 14  ;   ;Bank Account No.    ;Text30        ;CaptionML=ENU=Bank Account No. }
    { 15  ;   ;Transit No.         ;Text20        ;CaptionML=ENU=Transit No. }
    { 16  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code }
    { 17  ;   ;Country/Region Code ;Code10        ;TableRelation="Country/Region";
                                                   CaptionML=ENU=Country/Region Code }
    { 18  ;   ;County              ;Text30        ;CaptionML=ENU=County }
    { 19  ;   ;Fax No.             ;Text30        ;CaptionML=ENU=Fax No. }
    { 20  ;   ;Telex Answer Back   ;Text20        ;CaptionML=ENU=Telex Answer Back }
    { 21  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=ENU=Language Code }
    { 22  ;   ;E-Mail              ;Text80        ;OnValidate=VAR
                                                                MailManagement@1000 : Codeunit "Mail Management";
                                                              BEGIN
                                                                MailManagement.ValidateEmailAddressField("E-Mail");
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=ENU=Email }
    { 23  ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=ENU=Home Page }
    { 24  ;   ;IBAN                ;Code50        ;OnValidate=VAR
                                                                CompanyInfo@1000 : Record "Company Information";
                                                              BEGIN
                                                                CompanyInfo.CheckIBAN(IBAN);
                                                              END;

                                                   CaptionML=ENU=IBAN }
    { 25  ;   ;SWIFT Code          ;Code20        ;CaptionML=ENU=SWIFT Code }
    { 1211;   ;Bank Clearing Code  ;Text50        ;CaptionML=ENU=Bank Clearing Code }
    { 1212;   ;Bank Clearing Standard;Text50      ;TableRelation="Bank Clearing Standard";
                                                   CaptionML=ENU=Bank Clearing Standard }
  }
  KEYS
  {
    {    ;"Customer No.",Code                     ;Clustered=true }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Code,Name,"Phone No.",Contact            }
  }
  CODE
  {
    VAR
      PostCode@1000 : Record "Post Code";
      BankAccIdentifierIsEmptyErr@1001 : TextConst 'ENU=You must specify either a Bank Account No. or an IBAN.';
      BankAccDeleteErr@1002 : TextConst 'ENU=You cannot delete this bank account because it is associated with one or more open ledger entries.';

    [External]
    PROCEDURE GetBankAccountNoWithCheck@14() AccountNo : Text;
    BEGIN
      AccountNo := GetBankAccountNo;
      if AccountNo = '' then
        ERROR(BankAccIdentifierIsEmptyErr);
    END;

    [External]
    PROCEDURE GetBankAccountNo@1() : Text;
    BEGIN
      if IBAN <> '' then
        exit(DELCHR(IBAN,'=<>'));

      if "Bank Account No." <> '' then
        exit("Bank Account No.");
    END;

    BEGIN
    END.
  }
}

