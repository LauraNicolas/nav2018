OBJECT Codeunit 1269 Export Mapping
{
  OBJECT-PROPERTIES
  {
    Date=20150915D;
    Time=120000T;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    TableNo="Data Exch.";
    Permissions=TableData "Data Exch."=rimd;
    OnRun=VAR
            DataExchMapping@1002 : Record "Data Exch. Mapping";
            PaymentExportMgt@1000 : Codeunit "Payment Export Mgt";
            SourceRecRef@1001 : RecordRef;
            Window@1005 : Dialog;
            LineNo@1006 : Integer;
          BEGIN
            FindMapping(DataExchMapping,"Data Exch. Def Code","Data Exch. Line Def Code");

            SetTableFilters(SourceRecRef,DataExchMapping."Table ID",ReadTableFilters(Rec));

            Window.OPEN(ProgressMsg);

            repeat
              LineNo += 1;
              Window.UPDATE(1,LineNo);

              PaymentExportMgt.ProcessColumnMapping(Rec,SourceRecRef,LineNo,"Data Exch. Line Def Code",SourceRecRef.NUMBER);
            until SourceRecRef.NEXT = 0;

            Window.CLOSE;
          END;

  }
  CODE
  {
    VAR
      ProgressMsg@1000 : TextConst 'ENU=Processing line no. #1######.';
      MappingNotFoundErr@1002 : TextConst 'ENU=No mapping was found for format definition %1 and line definition %2.';
      RecordsNotFoundErr@1001 : TextConst 'ENU=No records were found for source table %1 using the filters: %2.';

    LOCAL PROCEDURE FindMapping@3(VAR DataExchMapping@1000 : Record "Data Exch. Mapping";DataExchDefCode@1001 : Code[20];DataExchLineDefCode@1002 : Code[20]);
    BEGIN
      DataExchMapping.SETRANGE("Data Exch. Def Code",DataExchDefCode);
      DataExchMapping.SETRANGE("Data Exch. Line Def Code",DataExchLineDefCode);

      if not DataExchMapping.FINDFIRST then
        ERROR(MappingNotFoundErr,DataExchDefCode,DataExchLineDefCode);
    END;

    LOCAL PROCEDURE SetTableFilters@5(RecRef@1000 : RecordRef;TableID@1001 : Integer;Filters@1002 : Text);
    BEGIN
      RecRef.OPEN(TableID);
      RecRef.SETVIEW(Filters);

      if not RecRef.FINDSET then
        ERROR(RecordsNotFoundErr,TableID,RecRef.GETVIEW);
    END;

    LOCAL PROCEDURE ReadTableFilters@1(DataExch@1000 : Record "Data Exch.") TableFilters : Text;
    VAR
      TableFiltersInStream@1001 : InStream;
    BEGIN
      if not DataExch."Table Filters".HASVALUE then
        exit('');

      DataExch.CALCFIELDS("Table Filters");
      DataExch."Table Filters".CREATEINSTREAM(TableFiltersInStream);
      TableFiltersInStream.READTEXT(TableFilters);
    END;

    BEGIN
    END.
  }
}

