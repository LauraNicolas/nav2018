OBJECT Table 23 Vendor
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Vendor Ledger Entry"=r;
    DataCaptionFields="No.",Name;
    OnInsert=BEGIN
               if "No." = '' then begin
                 PurchSetup.GET;
                 PurchSetup.TESTFIELD("Vendor Nos.");
                 NoSeriesMgt.InitSeries(PurchSetup."Vendor Nos.",xRec."No. Series",0D,"No.","No. Series");
               end;

               if "Invoice Disc. Code" = '' then
                 "Invoice Disc. Code" := "No.";

               if not (InsertFromContact or (InsertFromTemplate and (Contact <> ''))) then
                 UpdateContFromVend.OnInsert(Rec);

               if "Purchaser Code" = '' then
                 SetDefaultPurchaser;

               DimMgt.UpdateDefaultDim(
                 DATABASE::Vendor,"No.",
                 "Global Dimension 1 Code","Global Dimension 2 Code");

               SetLastModifiedDateTime;
             END;

    OnModify=BEGIN
               SetLastModifiedDateTime;

               if (Name <> xRec.Name) or
                  ("Search Name" <> xRec."Search Name") or
                  ("Name 2" <> xRec."Name 2") or
                  (Address <> xRec.Address) or
                  ("Address 2" <> xRec."Address 2") or
                  (City <> xRec.City) or
                  ("Phone No." <> xRec."Phone No.") or
                  ("Telex No." <> xRec."Telex No.") or
                  ("Territory Code" <> xRec."Territory Code") or
                  ("Currency Code" <> xRec."Currency Code") or
                  ("Language Code" <> xRec."Language Code") or
                  ("Purchaser Code" <> xRec."Purchaser Code") or
                  ("Country/Region Code" <> xRec."Country/Region Code") or
                  ("Fax No." <> xRec."Fax No.") or
                  ("Telex Answer Back" <> xRec."Telex Answer Back") or
                  ("VAT Registration No." <> xRec."VAT Registration No.") or
                  ("Post Code" <> xRec."Post Code") or
                  (County <> xRec.County) or
                  ("E-Mail" <> xRec."E-Mail") or
                  ("Home Page" <> xRec."Home Page")
               then begin
                 MODIFY;
                 UpdateContFromVend.OnModify(Rec);
                 if not FIND then begin
                   RESET;
                   if FIND then;
                 end;
               end;
             END;

    OnDelete=VAR
               ItemVendor@1000 : Record "Item Vendor";
               PurchPrice@1001 : Record "Purchase Price";
               PurchLineDiscount@1002 : Record "Purchase Line Discount";
               PurchPrepmtPct@1003 : Record "Purchase Prepayment %";
               SocialListeningSearchTopic@1005 : Record "Social Listening Search Topic";
               CustomReportSelection@1006 : Record "Custom Report Selection";
               PurchOrderLine@1007 : Record "Purchase Line";
               VATRegistrationLogMgt@1004 : Codeunit "VAT Registration Log Mgt.";
             BEGIN
               ApprovalsMgmt.OnCancelVendorApprovalRequest(Rec);

               MoveEntries.MoveVendorEntries(Rec);

               CommentLine.SETRANGE("Table Name",CommentLine."Table Name"::Vendor);
               CommentLine.SETRANGE("No.","No.");
               CommentLine.DELETEALL;

               VendBankAcc.SETRANGE("Vendor No.","No.");
               VendBankAcc.DELETEALL;

               OrderAddr.SETRANGE("Vendor No.","No.");
               OrderAddr.DELETEALL;

               ItemCrossReference.SETCURRENTKEY("Cross-Reference Type","Cross-Reference Type No.");
               ItemCrossReference.SETRANGE("Cross-Reference Type",ItemCrossReference."Cross-Reference Type"::Vendor);
               ItemCrossReference.SETRANGE("Cross-Reference Type No.","No.");
               ItemCrossReference.DELETEALL;

               PurchOrderLine.SETCURRENTKEY("Document Type","Pay-to Vendor No.");
               PurchOrderLine.SETFILTER(
                 "Document Type",'%1|%2',
                 PurchOrderLine."Document Type"::Order,
                 PurchOrderLine."Document Type"::"Return Order");
               PurchOrderLine.SETRANGE("Pay-to Vendor No.","No.");
               if PurchOrderLine.FINDFIRST then
                 ERROR(
                   Text000,
                   TABLECAPTION,"No.",
                   PurchOrderLine."Document Type");

               PurchOrderLine.SETRANGE("Pay-to Vendor No.");
               PurchOrderLine.SETRANGE("Buy-from Vendor No.","No.");
               if not PurchOrderLine.ISEMPTY then
                 ERROR(
                   Text000,
                   TABLECAPTION,"No.");

               UpdateContFromVend.OnDelete(Rec);

               DimMgt.DeleteDefaultDim(DATABASE::Vendor,"No.");

               ServiceItem.SETRANGE("Vendor No.","No.");
               ServiceItem.MODIFYALL("Vendor No.",'');

               ItemVendor.SETRANGE("Vendor No.","No.");
               ItemVendor.DELETEALL(true);

               if not SocialListeningSearchTopic.ISEMPTY then begin
                 SocialListeningSearchTopic.FindSearchTopic(SocialListeningSearchTopic."Source Type"::Vendor,"No.");
                 SocialListeningSearchTopic.DELETEALL;
               end;

               PurchPrice.SETCURRENTKEY("Vendor No.");
               PurchPrice.SETRANGE("Vendor No.","No.");
               PurchPrice.DELETEALL(true);

               PurchLineDiscount.SETCURRENTKEY("Vendor No.");
               PurchLineDiscount.SETRANGE("Vendor No.","No.");
               PurchLineDiscount.DELETEALL(true);

               CustomReportSelection.SETRANGE("Source Type",DATABASE::Vendor);
               CustomReportSelection.SETRANGE("Source No.","No.");
               CustomReportSelection.DELETEALL;

               PurchPrepmtPct.SETCURRENTKEY("Vendor No.");
               PurchPrepmtPct.SETRANGE("Vendor No.","No.");
               PurchPrepmtPct.DELETEALL(true);

               VATRegistrationLogMgt.DeleteVendorLog(Rec);
             END;

    OnRename=BEGIN
               ApprovalsMgmt.OnRenameRecordInApprovalRequest(xRec.RECORDID,RECORDID);
               SetLastModifiedDateTime;
               if xRec."Invoice Disc. Code" = xRec."No." then
                 "Invoice Disc. Code" := "No.";
             END;

    CaptionML=ENU=Vendor;
    LookupPageID="Vendor List";
    DrillDownPageID="Vendor List";
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Name;
                                                   OnValidate=BEGIN
                                                                if "No." <> xRec."No." then begin
                                                                  PurchSetup.GET;
                                                                  NoSeriesMgt.TestManual(PurchSetup."Vendor Nos.");
                                                                  "No. Series" := '';
                                                                end;
                                                                if "Invoice Disc. Code" = '' then
                                                                  "Invoice Disc. Code" := "No.";
                                                              END;

                                                   CaptionML=ENU=No. }
    { 2   ;   ;Name                ;Text50        ;OnValidate=BEGIN
                                                                if ("Search Name" = UPPERCASE(xRec.Name)) or ("Search Name" = '') then
                                                                  "Search Name" := Name;
                                                              END;

                                                   CaptionML=ENU=Name }
    { 3   ;   ;Search Name         ;Code50        ;CaptionML=ENU=Search Name }
    { 4   ;   ;Name 2              ;Text50        ;CaptionML=ENU=Name 2 }
    { 5   ;   ;Address             ;Text50        ;CaptionML=ENU=Address }
    { 6   ;   ;Address 2           ;Text50        ;CaptionML=ENU=Address 2 }
    { 7   ;   ;City                ;Text30        ;TableRelation=IF ("Country/Region Code"=CONST('')) "Post Code".City
                                                                 ELSE IF ("Country/Region Code"=FILTER(<>'')) "Post Code".City WHERE ("Country/Region Code"=FIELD("Country/Region Code"));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) and GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=City }
    { 8   ;   ;Contact             ;Text50        ;OnValidate=VAR
                                                                Cont@1000 : Record Contact;
                                                              BEGIN
                                                                if RMSetup.GET then
                                                                  if RMSetup."Bus. Rel. Code for Vendors" <> '' then begin
                                                                    if (xRec.Contact = '') and (xRec."Primary Contact No." = '') and (Contact <> '') then begin
                                                                      MODIFY;
                                                                      UpdateContFromVend.OnModify(Rec);
                                                                      UpdateContFromVend.InsertNewContactPerson(Rec,false);
                                                                      MODIFY(true);
                                                                    end;
                                                                    exit;
                                                                  end;

                                                                if Cont.GET("Primary Contact No.") then
                                                                  if Cont.Name = Contact then
                                                                    exit;

                                                                VALIDATE("Primary Contact No.",'');
                                                              END;

                                                   OnLookup=VAR
                                                              ContactBusinessRelation@1001 : Record "Contact Business Relation";
                                                              Cont@1000 : Record Contact;
                                                            BEGIN
                                                              if ContactBusinessRelation.FindByRelation(ContactBusinessRelation."Link to Table"::Vendor,"No.") then
                                                                Cont.SETRANGE("Company No.",ContactBusinessRelation."Contact No.")
                                                              else
                                                                Cont.SETRANGE("Company No.",'');

                                                              if "Primary Contact No." <> '' then
                                                                if Cont.GET("Primary Contact No.") then ;
                                                              if PAGE.RUNMODAL(0,Cont) = ACTION::LookupOK then
                                                                VALIDATE("Primary Contact No.",Cont."No.");
                                                            END;

                                                   CaptionML=ENU=Contact }
    { 9   ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Phone No. }
    { 10  ;   ;Telex No.           ;Text20        ;CaptionML=ENU=Telex No. }
    { 14  ;   ;Our Account No.     ;Text20        ;CaptionML=ENU=Our Account No. }
    { 15  ;   ;Territory Code      ;Code10        ;TableRelation=Territory;
                                                   CaptionML=ENU=Territory Code }
    { 16  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 17  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 19  ;   ;Budgeted Amount     ;Decimal       ;CaptionML=ENU=Budgeted Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 21  ;   ;Vendor Posting Group;Code20        ;TableRelation="Vendor Posting Group";
                                                   CaptionML=ENU=Vendor Posting Group }
    { 22  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                UpdateCurrencyId;
                                                              END;

                                                   CaptionML=ENU=Currency Code }
    { 24  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=ENU=Language Code }
    { 26  ;   ;Statistics Group    ;Integer       ;CaptionML=ENU=Statistics Group }
    { 27  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   OnValidate=BEGIN
                                                                UpdatePaymentTermsId;
                                                              END;

                                                   CaptionML=ENU=Payment Terms Code }
    { 28  ;   ;Fin. Charge Terms Code;Code10      ;TableRelation="Finance Charge Terms";
                                                   CaptionML=ENU=Fin. Charge Terms Code }
    { 29  ;   ;Purchaser Code      ;Code20        ;TableRelation="Salesperson/Purchaser";
                                                   CaptionML=ENU=Purchaser Code }
    { 30  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=ENU=Shipment Method Code }
    { 31  ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   CaptionML=ENU=Shipping Agent Code }
    { 33  ;   ;Invoice Disc. Code  ;Code20        ;TableRelation=Vendor;
                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Invoice Disc. Code }
    { 35  ;   ;Country/Region Code ;Code10        ;TableRelation="Country/Region";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCountryCode(City,"Post Code",County,"Country/Region Code");
                                                                if "Country/Region Code" <> xRec."Country/Region Code" then
                                                                  VATRegistrationValidation;
                                                              END;

                                                   CaptionML=ENU=Country/Region Code }
    { 38  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE ("Table Name"=CONST(Vendor),
                                                                                           "No."=FIELD("No.")));
                                                   CaptionML=ENU=Comment;
                                                   Editable=false }
    { 39  ;   ;Blocked             ;Option        ;CaptionML=ENU=Blocked;
                                                   OptionCaptionML=ENU=" ,Payment,All";
                                                   OptionString=" ",Payment,All }
    { 45  ;   ;Pay-to Vendor No.   ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=ENU=Pay-to Vendor No. }
    { 46  ;   ;Priority            ;Integer       ;CaptionML=ENU=Priority }
    { 47  ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   OnValidate=BEGIN
                                                                UpdatePaymentMethodId;
                                                              END;

                                                   CaptionML=ENU=Payment Method Code }
    { 53  ;   ;Last Modified Date Time;DateTime   ;CaptionML=ENU=Last Modified Date Time;
                                                   Editable=false }
    { 54  ;   ;Last Date Modified  ;Date          ;CaptionML=ENU=Last Date Modified;
                                                   Editable=false }
    { 55  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 56  ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Filter;
                                                   CaptionClass='1,3,1' }
    { 57  ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   CaptionML=ENU=Global Dimension 2 Filter;
                                                   CaptionClass='1,3,2' }
    { 58  ;   ;Balance             ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE ("Vendor No."=FIELD("No."),
                                                                                                                "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Balance;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 59  ;   ;Balance (LCY)       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE ("Vendor No."=FIELD("No."),
                                                                                                                        "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                        "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                        "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Balance (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 60  ;   ;Net Change          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE ("Vendor No."=FIELD("No."),
                                                                                                                "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                "Posting Date"=FIELD("Date Filter"),
                                                                                                                "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Net Change;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Net Change (LCY)    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE ("Vendor No."=FIELD("No."),
                                                                                                                        "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                        "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                        "Posting Date"=FIELD("Date Filter"),
                                                                                                                        "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Net Change (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 62  ;   ;Purchases (LCY)     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Vendor Ledger Entry"."Purchase (LCY)" WHERE ("Vendor No."=FIELD("No."),
                                                                                                                  "Global Dimension 1 Code"=FIELD("Global Dimension 1 Filter"),
                                                                                                                  "Global Dimension 2 Code"=FIELD("Global Dimension 2 Filter"),
                                                                                                                  "Posting Date"=FIELD("Date Filter"),
                                                                                                                  "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Purchases (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 64  ;   ;Inv. Discounts (LCY);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Vendor Ledger Entry"."Inv. Discount (LCY)" WHERE ("Vendor No."=FIELD("No."),
                                                                                                                       "Global Dimension 1 Code"=FIELD("Global Dimension 1 Filter"),
                                                                                                                       "Global Dimension 2 Code"=FIELD("Global Dimension 2 Filter"),
                                                                                                                       "Posting Date"=FIELD("Date Filter"),
                                                                                                                       "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Inv. Discounts (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 65  ;   ;Pmt. Discounts (LCY);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE ("Vendor No."=FIELD("No."),
                                                                                                                       "Entry Type"=FILTER("Payment Discount"..'"Payment Discount (VAT Adjustment)"'),
                                                                                                                       "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                       "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                       "Posting Date"=FIELD("Date Filter"),
                                                                                                                       "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Pmt. Discounts (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 66  ;   ;Balance Due         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE ("Vendor No."=FIELD("No."),
                                                                                                                "Posting Date"=FIELD(UPPERLIMIT("Date Filter")),
                                                                                                                "Initial Entry Due Date"=FIELD(UPPERLIMIT("Date Filter")),
                                                                                                                "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Balance Due;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 67  ;   ;Balance Due (LCY)   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE ("Vendor No."=FIELD("No."),
                                                                                                                        "Posting Date"=FIELD(UPPERLIMIT("Date Filter")),
                                                                                                                        "Initial Entry Due Date"=FIELD(UPPERLIMIT("Date Filter")),
                                                                                                                        "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                        "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                        "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Balance Due (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 69  ;   ;Payments            ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry".Amount WHERE ("Initial Document Type"=CONST(Payment),
                                                                                                               "Entry Type"=CONST("Initial Entry"),
                                                                                                               "Vendor No."=FIELD("No."),
                                                                                                               "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                               "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                               "Posting Date"=FIELD("Date Filter"),
                                                                                                               "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Payments;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 70  ;   ;Invoice Amounts     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE ("Initial Document Type"=CONST(Invoice),
                                                                                                                "Entry Type"=CONST("Initial Entry"),
                                                                                                                "Vendor No."=FIELD("No."),
                                                                                                                "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                "Posting Date"=FIELD("Date Filter"),
                                                                                                                "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Invoice Amounts;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 71  ;   ;Cr. Memo Amounts    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry".Amount WHERE ("Initial Document Type"=CONST("Credit Memo"),
                                                                                                               "Entry Type"=CONST("Initial Entry"),
                                                                                                               "Vendor No."=FIELD("No."),
                                                                                                               "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                               "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                               "Posting Date"=FIELD("Date Filter"),
                                                                                                               "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Cr. Memo Amounts;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 72  ;   ;Finance Charge Memo Amounts;Decimal;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE ("Initial Document Type"=CONST("Finance Charge Memo"),
                                                                                                                "Entry Type"=CONST("Initial Entry"),
                                                                                                                "Vendor No."=FIELD("No."),
                                                                                                                "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                "Posting Date"=FIELD("Date Filter"),
                                                                                                                "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Finance Charge Memo Amounts;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 74  ;   ;Payments (LCY)      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE ("Initial Document Type"=CONST(Payment),
                                                                                                                       "Entry Type"=CONST("Initial Entry"),
                                                                                                                       "Vendor No."=FIELD("No."),
                                                                                                                       "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                       "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                       "Posting Date"=FIELD("Date Filter"),
                                                                                                                       "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Payments (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 75  ;   ;Inv. Amounts (LCY)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE ("Initial Document Type"=CONST(Invoice),
                                                                                                                        "Entry Type"=CONST("Initial Entry"),
                                                                                                                        "Vendor No."=FIELD("No."),
                                                                                                                        "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                        "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                        "Posting Date"=FIELD("Date Filter"),
                                                                                                                        "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Inv. Amounts (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 76  ;   ;Cr. Memo Amounts (LCY);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE ("Initial Document Type"=CONST("Credit Memo"),
                                                                                                                       "Entry Type"=CONST("Initial Entry"),
                                                                                                                       "Vendor No."=FIELD("No."),
                                                                                                                       "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                       "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                       "Posting Date"=FIELD("Date Filter"),
                                                                                                                       "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Cr. Memo Amounts (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 77  ;   ;Fin. Charge Memo Amounts (LCY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE ("Initial Document Type"=CONST("Finance Charge Memo"),
                                                                                                                        "Entry Type"=CONST("Initial Entry"),
                                                                                                                        "Vendor No."=FIELD("No."),
                                                                                                                        "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                        "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                        "Posting Date"=FIELD("Date Filter"),
                                                                                                                        "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Fin. Charge Memo Amounts (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 78  ;   ;Outstanding Orders  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Amount" WHERE ("Document Type"=CONST(Order),
                                                                                                               "Pay-to Vendor No."=FIELD("No."),
                                                                                                               "Shortcut Dimension 1 Code"=FIELD("Global Dimension 1 Filter"),
                                                                                                               "Shortcut Dimension 2 Code"=FIELD("Global Dimension 2 Filter"),
                                                                                                               "Currency Code"=FIELD("Currency Filter")));
                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=Outstanding Orders;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 79  ;   ;Amt. Rcd. Not Invoiced;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Amt. Rcd. Not Invoiced" WHERE ("Document Type"=CONST(Order),
                                                                                                                   "Pay-to Vendor No."=FIELD("No."),
                                                                                                                   "Shortcut Dimension 1 Code"=FIELD("Global Dimension 1 Filter"),
                                                                                                                   "Shortcut Dimension 2 Code"=FIELD("Global Dimension 2 Filter"),
                                                                                                                   "Currency Code"=FIELD("Currency Filter")));
                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=Amt. Rcd. Not Invoiced;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 80  ;   ;Application Method  ;Option        ;CaptionML=ENU=Application Method;
                                                   OptionCaptionML=ENU=Manual,Apply to Oldest;
                                                   OptionString=Manual,"Apply to Oldest" }
    { 82  ;   ;Prices Including VAT;Boolean       ;OnValidate=VAR
                                                                PurchPrice@1000 : Record "Purchase Price";
                                                                Item@1001 : Record Item;
                                                                VATPostingSetup@1002 : Record "VAT Posting Setup";
                                                                Currency@1003 : Record Currency;
                                                              BEGIN
                                                                PurchPrice.SETCURRENTKEY("Vendor No.");
                                                                PurchPrice.SETRANGE("Vendor No.","No.");
                                                                if PurchPrice.FIND('-') then begin
                                                                  if VATPostingSetup.GET('','') then;
                                                                  if CONFIRM(
                                                                       STRSUBSTNO(
                                                                         Text002,
                                                                         FIELDCAPTION("Prices Including VAT"),"Prices Including VAT",PurchPrice.TABLECAPTION),true)
                                                                  then
                                                                    repeat
                                                                      if PurchPrice."Item No." <> Item."No." then
                                                                        Item.GET(PurchPrice."Item No.");
                                                                      if ("VAT Bus. Posting Group" <> VATPostingSetup."VAT Bus. Posting Group") or
                                                                         (Item."VAT Prod. Posting Group" <> VATPostingSetup."VAT Prod. Posting Group")
                                                                      then
                                                                        VATPostingSetup.GET("VAT Bus. Posting Group",Item."VAT Prod. Posting Group");
                                                                      if PurchPrice."Currency Code" = '' then
                                                                        Currency.InitRoundingPrecision
                                                                      else
                                                                        if PurchPrice."Currency Code" <> Currency.Code then
                                                                          Currency.GET(PurchPrice."Currency Code");
                                                                      if VATPostingSetup."VAT %" <> 0 then begin
                                                                        if "Prices Including VAT" then
                                                                          PurchPrice."Direct Unit Cost" :=
                                                                            ROUND(
                                                                              PurchPrice."Direct Unit Cost" * (1 + VATPostingSetup."VAT %" / 100),
                                                                              Currency."Unit-Amount Rounding Precision")
                                                                        else
                                                                          PurchPrice."Direct Unit Cost" :=
                                                                            ROUND(
                                                                              PurchPrice."Direct Unit Cost" / (1 + VATPostingSetup."VAT %" / 100),
                                                                              Currency."Unit-Amount Rounding Precision");
                                                                        PurchPrice.MODIFY;
                                                                      end;
                                                                    until PurchPrice.NEXT = 0;
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Prices Including VAT }
    { 84  ;   ;Fax No.             ;Text30        ;CaptionML=ENU=Fax No. }
    { 85  ;   ;Telex Answer Back   ;Text20        ;CaptionML=ENU=Telex Answer Back }
    { 86  ;   ;VAT Registration No.;Text20        ;OnValidate=BEGIN
                                                                "VAT Registration No." := UPPERCASE("VAT Registration No.");
                                                                if "VAT Registration No." <> xRec."VAT Registration No." then
                                                                  VATRegistrationValidation;
                                                              END;

                                                   CaptionML=ENU=VAT Registration No. }
    { 88  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   OnValidate=BEGIN
                                                                if xRec."Gen. Bus. Posting Group" <> "Gen. Bus. Posting Group" then
                                                                  if GenBusPostingGrp.ValidateVatBusPostingGroup(GenBusPostingGrp,"Gen. Bus. Posting Group") then
                                                                    VALIDATE("VAT Bus. Posting Group",GenBusPostingGrp."Def. VAT Bus. Posting Group");
                                                              END;

                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 89  ;   ;Picture             ;BLOB          ;CaptionML=ENU=Picture;
                                                   SubType=Bitmap }
    { 90  ;   ;GLN                 ;Code13        ;OnValidate=VAR
                                                                GLNCalculator@1000 : Codeunit "GLN Calculator";
                                                              BEGIN
                                                                if GLN <> '' then
                                                                  GLNCalculator.AssertValidCheckDigit13(GLN);
                                                              END;

                                                   CaptionML=ENU=GLN;
                                                   Numeric=true }
    { 91  ;   ;Post Code           ;Code20        ;TableRelation=IF ("Country/Region Code"=CONST('')) "Post Code"
                                                                 ELSE IF ("Country/Region Code"=FILTER(<>'')) "Post Code" WHERE ("Country/Region Code"=FIELD("Country/Region Code"));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) and GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=false;
                                                   TestTableRelation=false;
                                                   CaptionML=ENU=Post Code }
    { 92  ;   ;County              ;Text30        ;CaptionML=ENU=County }
    { 97  ;   ;Debit Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Debit Amount" WHERE ("Vendor No."=FIELD("No."),
                                                                                                                       "Entry Type"=FILTER(<>Application),
                                                                                                                       "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                       "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                       "Posting Date"=FIELD("Date Filter"),
                                                                                                                       "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Debit Amount;
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 98  ;   ;Credit Amount       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Credit Amount" WHERE ("Vendor No."=FIELD("No."),
                                                                                                                        "Entry Type"=FILTER(<>Application),
                                                                                                                        "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                        "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                        "Posting Date"=FIELD("Date Filter"),
                                                                                                                        "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Credit Amount;
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 99  ;   ;Debit Amount (LCY)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Debit Amount (LCY)" WHERE ("Vendor No."=FIELD("No."),
                                                                                                                             "Entry Type"=FILTER(<>Application),
                                                                                                                             "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                             "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                             "Posting Date"=FIELD("Date Filter"),
                                                                                                                             "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Debit Amount (LCY);
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 100 ;   ;Credit Amount (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Credit Amount (LCY)" WHERE ("Vendor No."=FIELD("No."),
                                                                                                                              "Entry Type"=FILTER(<>Application),
                                                                                                                              "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                              "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                              "Posting Date"=FIELD("Date Filter"),
                                                                                                                              "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Credit Amount (LCY);
                                                   BlankZero=true;
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 102 ;   ;E-Mail              ;Text80        ;OnValidate=VAR
                                                                MailManagement@1000 : Codeunit "Mail Management";
                                                              BEGIN
                                                                MailManagement.ValidateEmailAddressField("E-Mail");
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=ENU=Email }
    { 103 ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=ENU=Home Page }
    { 104 ;   ;Reminder Amounts    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE ("Initial Document Type"=CONST(Reminder),
                                                                                                                "Entry Type"=CONST("Initial Entry"),
                                                                                                                "Vendor No."=FIELD("No."),
                                                                                                                "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                "Posting Date"=FIELD("Date Filter"),
                                                                                                                "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Reminder Amounts;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 105 ;   ;Reminder Amounts (LCY);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE ("Initial Document Type"=CONST(Reminder),
                                                                                                                        "Entry Type"=CONST("Initial Entry"),
                                                                                                                        "Vendor No."=FIELD("No."),
                                                                                                                        "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                        "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                        "Posting Date"=FIELD("Date Filter"),
                                                                                                                        "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Reminder Amounts (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 107 ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=false }
    { 108 ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=ENU=Tax Area Code }
    { 109 ;   ;Tax Liable          ;Boolean       ;CaptionML=ENU=Tax Liable }
    { 110 ;   ;VAT Bus. Posting Group;Code20      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=VAT Bus. Posting Group }
    { 111 ;   ;Currency Filter     ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Currency;
                                                   CaptionML=ENU=Currency Filter }
    { 113 ;   ;Outstanding Orders (LCY);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Amount (LCY)" WHERE ("Document Type"=CONST(Order),
                                                                                                                     "Pay-to Vendor No."=FIELD("No."),
                                                                                                                     "Shortcut Dimension 1 Code"=FIELD("Global Dimension 1 Filter"),
                                                                                                                     "Shortcut Dimension 2 Code"=FIELD("Global Dimension 2 Filter"),
                                                                                                                     "Currency Code"=FIELD("Currency Filter")));
                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=Outstanding Orders (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 114 ;   ;Amt. Rcd. Not Invoiced (LCY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Amt. Rcd. Not Invoiced (LCY)" WHERE ("Document Type"=CONST(Order),
                                                                                                                         "Pay-to Vendor No."=FIELD("No."),
                                                                                                                         "Shortcut Dimension 1 Code"=FIELD("Global Dimension 1 Filter"),
                                                                                                                         "Shortcut Dimension 2 Code"=FIELD("Global Dimension 2 Filter"),
                                                                                                                         "Currency Code"=FIELD("Currency Filter")));
                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=Amt. Rcd. Not Invoiced (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 116 ;   ;Block Payment Tolerance;Boolean    ;CaptionML=ENU=Block Payment Tolerance }
    { 117 ;   ;Pmt. Disc. Tolerance (LCY);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE ("Vendor No."=FIELD("No."),
                                                                                                                       "Entry Type"=FILTER("Payment Discount Tolerance"|'"Payment Discount Tolerance (VAT Adjustment)"'|'"Payment Discount Tolerance (VAT Excl.)"'),
                                                                                                                       "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                       "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                       "Posting Date"=FIELD("Date Filter"),
                                                                                                                       "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Pmt. Disc. Tolerance (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 118 ;   ;Pmt. Tolerance (LCY);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE ("Vendor No."=FIELD("No."),
                                                                                                                       "Entry Type"=FILTER("Payment Tolerance"|'"Payment Tolerance (VAT Adjustment)"'|'"Payment Tolerance (VAT Excl.)"'),
                                                                                                                       "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                       "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                       "Posting Date"=FIELD("Date Filter"),
                                                                                                                       "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Pmt. Tolerance (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 119 ;   ;IC Partner Code     ;Code20        ;TableRelation="IC Partner";
                                                   OnValidate=VAR
                                                                VendLedgEntry@1001 : Record "Vendor Ledger Entry";
                                                                AccountingPeriod@1000 : Record "Accounting Period";
                                                                ICPartner@1002 : Record "IC Partner";
                                                              BEGIN
                                                                if xRec."IC Partner Code" <> "IC Partner Code" then begin
                                                                  if not VendLedgEntry.SETCURRENTKEY("Vendor No.",Open) then
                                                                    VendLedgEntry.SETCURRENTKEY("Vendor No.");
                                                                  VendLedgEntry.SETRANGE("Vendor No.","No.");
                                                                  VendLedgEntry.SETRANGE(Open,true);
                                                                  if VendLedgEntry.FINDLAST then
                                                                    ERROR(Text010,FIELDCAPTION("IC Partner Code"),TABLECAPTION);

                                                                  VendLedgEntry.RESET;
                                                                  VendLedgEntry.SETCURRENTKEY("Vendor No.","Posting Date");
                                                                  VendLedgEntry.SETRANGE("Vendor No.","No.");
                                                                  AccountingPeriod.SETRANGE(Closed,false);
                                                                  if AccountingPeriod.FINDFIRST then begin
                                                                    VendLedgEntry.SETFILTER("Posting Date",'>=%1',AccountingPeriod."Starting Date");
                                                                    if VendLedgEntry.FINDFIRST then
                                                                      if not CONFIRM(Text009,false,TABLECAPTION) then
                                                                        "IC Partner Code" := xRec."IC Partner Code";
                                                                  end;
                                                                end;

                                                                if "IC Partner Code" <> '' then begin
                                                                  ICPartner.GET("IC Partner Code");
                                                                  if (ICPartner."Vendor No." <> '') and (ICPartner."Vendor No." <> "No.") then
                                                                    ERROR(Text008,FIELDCAPTION("IC Partner Code"),"IC Partner Code",TABLECAPTION,ICPartner."Vendor No.");
                                                                  ICPartner."Vendor No." := "No.";
                                                                  ICPartner.MODIFY;
                                                                end;

                                                                if (xRec."IC Partner Code" <> "IC Partner Code") and ICPartner.GET(xRec."IC Partner Code") then begin
                                                                  ICPartner."Vendor No." := '';
                                                                  ICPartner.MODIFY;
                                                                end;
                                                              END;

                                                   CaptionML=ENU=IC Partner Code }
    { 120 ;   ;Refunds             ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE ("Initial Document Type"=CONST(Refund),
                                                                                                                "Entry Type"=CONST("Initial Entry"),
                                                                                                                "Vendor No."=FIELD("No."),
                                                                                                                "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                "Posting Date"=FIELD("Date Filter"),
                                                                                                                "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Refunds }
    { 121 ;   ;Refunds (LCY)       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE ("Initial Document Type"=CONST(Refund),
                                                                                                                        "Entry Type"=CONST("Initial Entry"),
                                                                                                                        "Vendor No."=FIELD("No."),
                                                                                                                        "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                        "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                        "Posting Date"=FIELD("Date Filter"),
                                                                                                                        "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Refunds (LCY) }
    { 122 ;   ;Other Amounts       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE ("Initial Document Type"=CONST(" "),
                                                                                                                "Entry Type"=CONST("Initial Entry"),
                                                                                                                "Vendor No."=FIELD("No."),
                                                                                                                "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                "Posting Date"=FIELD("Date Filter"),
                                                                                                                "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Other Amounts }
    { 123 ;   ;Other Amounts (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE ("Initial Document Type"=CONST(" "),
                                                                                                                        "Entry Type"=CONST("Initial Entry"),
                                                                                                                        "Vendor No."=FIELD("No."),
                                                                                                                        "Initial Entry Global Dim. 1"=FIELD("Global Dimension 1 Filter"),
                                                                                                                        "Initial Entry Global Dim. 2"=FIELD("Global Dimension 2 Filter"),
                                                                                                                        "Posting Date"=FIELD("Date Filter"),
                                                                                                                        "Currency Code"=FIELD("Currency Filter")));
                                                   CaptionML=ENU=Other Amounts (LCY) }
    { 124 ;   ;Prepayment %        ;Decimal       ;CaptionML=ENU=Prepayment %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 125 ;   ;Outstanding Invoices;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Amount" WHERE ("Document Type"=CONST(Invoice),
                                                                                                               "Pay-to Vendor No."=FIELD("No."),
                                                                                                               "Shortcut Dimension 1 Code"=FIELD("Global Dimension 1 Filter"),
                                                                                                               "Shortcut Dimension 2 Code"=FIELD("Global Dimension 2 Filter"),
                                                                                                               "Currency Code"=FIELD("Currency Filter")));
                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=Outstanding Invoices;
                                                   Editable=false;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 126 ;   ;Outstanding Invoices (LCY);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Amount (LCY)" WHERE ("Document Type"=CONST(Invoice),
                                                                                                                     "Pay-to Vendor No."=FIELD("No."),
                                                                                                                     "Shortcut Dimension 1 Code"=FIELD("Global Dimension 1 Filter"),
                                                                                                                     "Shortcut Dimension 2 Code"=FIELD("Global Dimension 2 Filter"),
                                                                                                                     "Currency Code"=FIELD("Currency Filter")));
                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=Outstanding Invoices (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 130 ;   ;Pay-to No. Of Archived Doc.;Integer;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header Archive" WHERE ("Document Type"=CONST(Order),
                                                                                                      "Pay-to Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=Pay-to No. Of Archived Doc. }
    { 131 ;   ;Buy-from No. Of Archived Doc.;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header Archive" WHERE ("Document Type"=CONST(Order),
                                                                                                      "Buy-from Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=Buy-from No. Of Archived Doc. }
    { 132 ;   ;Partner Type        ;Option        ;CaptionML=ENU=Partner Type;
                                                   OptionCaptionML=ENU=" ,Company,Person";
                                                   OptionString=" ",Company,Person }
    { 140 ;   ;Image               ;Media         ;ExtendedDatatype=Person;
                                                   CaptionML=ENU=Image }
    { 170 ;   ;Creditor No.        ;Code20        ;CaptionML=ENU=Creditor No.;
                                                   Numeric=true }
    { 288 ;   ;Preferred Bank Account Code;Code10 ;TableRelation="Vendor Bank Account".Code WHERE ("Vendor No."=FIELD("No."));
                                                   CaptionML=ENU=Preferred Bank Account Code }
    { 840 ;   ;Cash Flow Payment Terms Code;Code10;TableRelation="Payment Terms";
                                                   CaptionML=ENU=Cash Flow Payment Terms Code }
    { 5049;   ;Primary Contact No. ;Code20        ;TableRelation=Contact;
                                                   OnValidate=VAR
                                                                Cont@1001 : Record Contact;
                                                                ContBusRel@1000 : Record "Contact Business Relation";
                                                              BEGIN
                                                                Contact := '';
                                                                if "Primary Contact No." <> '' then begin
                                                                  Cont.GET("Primary Contact No.");

                                                                  ContBusRel.SETCURRENTKEY("Link to Table","No.");
                                                                  ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Vendor);
                                                                  ContBusRel.SETRANGE("No.","No.");
                                                                  ContBusRel.FINDFIRST;

                                                                  if Cont."Company No." <> ContBusRel."Contact No." then
                                                                    ERROR(Text004,Cont."No.",Cont.Name,"No.",Name);

                                                                  if Cont.Type = Cont.Type::Person then
                                                                    Contact := Cont.Name;

                                                                  if Cont."Phone No." <> '' then
                                                                    "Phone No." := Cont."Phone No.";
                                                                  if Cont."E-Mail" <> '' then
                                                                    "E-Mail" := Cont."E-Mail";
                                                                end;
                                                              END;

                                                   OnLookup=VAR
                                                              Cont@1001 : Record Contact;
                                                              ContBusRel@1000 : Record "Contact Business Relation";
                                                              TempVend@1002 : TEMPORARY Record Vendor;
                                                            BEGIN
                                                              ContBusRel.SETCURRENTKEY("Link to Table","No.");
                                                              ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Vendor);
                                                              ContBusRel.SETRANGE("No.","No.");
                                                              if ContBusRel.FINDFIRST then
                                                                Cont.SETRANGE("Company No.",ContBusRel."Contact No.")
                                                              else
                                                                Cont.SETRANGE("No.",'');

                                                              if "Primary Contact No." <> '' then
                                                                if Cont.GET("Primary Contact No.") then ;
                                                              if PAGE.RUNMODAL(0,Cont) = ACTION::LookupOK then begin
                                                                TempVend.COPY(Rec);
                                                                FIND;
                                                                TRANSFERFIELDS(TempVend,false);
                                                                VALIDATE("Primary Contact No.",Cont."No.");
                                                              end;
                                                            END;

                                                   CaptionML=ENU=Primary Contact No. }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=ENU=Responsibility Center }
    { 5701;   ;Location Code       ;Code10        ;TableRelation=Location WHERE ("Use As In-Transit"=CONST(false));
                                                   CaptionML=ENU=Location Code }
    { 5790;   ;Lead Time Calculation;DateFormula  ;OnValidate=BEGIN
                                                                LeadTimeMgt.CheckLeadTimeIsNotNegative("Lead Time Calculation");
                                                              END;

                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=Lead Time Calculation }
    { 7177;   ;No. of Pstd. Receipts;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Rcpt. Header" WHERE ("Buy-from Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=No. of Pstd. Receipts;
                                                   Editable=false }
    { 7178;   ;No. of Pstd. Invoices;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Inv. Header" WHERE ("Buy-from Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=No. of Pstd. Invoices;
                                                   Editable=false }
    { 7179;   ;No. of Pstd. Return Shipments;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Return Shipment Header" WHERE ("Buy-from Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=No. of Pstd. Return Shipments;
                                                   Editable=false }
    { 7180;   ;No. of Pstd. Credit Memos;Integer  ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Cr. Memo Hdr." WHERE ("Buy-from Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=No. of Pstd. Credit Memos;
                                                   Editable=false }
    { 7181;   ;Pay-to No. of Orders;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE ("Document Type"=CONST(Order),
                                                                                              "Pay-to Vendor No."=FIELD("No.")));
                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=Pay-to No. of Orders;
                                                   Editable=false }
    { 7182;   ;Pay-to No. of Invoices;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE ("Document Type"=CONST(Invoice),
                                                                                              "Pay-to Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=Pay-to No. of Invoices;
                                                   Editable=false }
    { 7183;   ;Pay-to No. of Return Orders;Integer;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE ("Document Type"=CONST("Return Order"),
                                                                                              "Pay-to Vendor No."=FIELD("No.")));
                                                   AccessByPermission=TableData "Return Shipment Header"=R;
                                                   CaptionML=ENU=Pay-to No. of Return Orders;
                                                   Editable=false }
    { 7184;   ;Pay-to No. of Credit Memos;Integer ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE ("Document Type"=CONST("Credit Memo"),
                                                                                              "Pay-to Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=Pay-to No. of Credit Memos;
                                                   Editable=false }
    { 7185;   ;Pay-to No. of Pstd. Receipts;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Rcpt. Header" WHERE ("Pay-to Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=Pay-to No. of Pstd. Receipts;
                                                   Editable=false }
    { 7186;   ;Pay-to No. of Pstd. Invoices;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Inv. Header" WHERE ("Pay-to Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=Pay-to No. of Pstd. Invoices;
                                                   Editable=false }
    { 7187;   ;Pay-to No. of Pstd. Return S.;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Return Shipment Header" WHERE ("Pay-to Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=Pay-to No. of Pstd. Return S.;
                                                   Editable=false }
    { 7188;   ;Pay-to No. of Pstd. Cr. Memos;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Cr. Memo Hdr." WHERE ("Pay-to Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=Pay-to No. of Pstd. Cr. Memos;
                                                   Editable=false }
    { 7189;   ;No. of Quotes       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE ("Document Type"=CONST(Quote),
                                                                                              "Buy-from Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=No. of Quotes;
                                                   Editable=false }
    { 7190;   ;No. of Blanket Orders;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE ("Document Type"=CONST("Blanket Order"),
                                                                                              "Buy-from Vendor No."=FIELD("No.")));
                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=No. of Blanket Orders;
                                                   Editable=false }
    { 7191;   ;No. of Orders       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE ("Document Type"=CONST(Order),
                                                                                              "Buy-from Vendor No."=FIELD("No.")));
                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=No. of Orders }
    { 7192;   ;No. of Invoices     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE ("Document Type"=CONST(Invoice),
                                                                                              "Buy-from Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=No. of Invoices;
                                                   Editable=false }
    { 7193;   ;No. of Return Orders;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE ("Document Type"=CONST("Return Order"),
                                                                                              "Buy-from Vendor No."=FIELD("No.")));
                                                   AccessByPermission=TableData "Return Shipment Header"=R;
                                                   CaptionML=ENU=No. of Return Orders;
                                                   Editable=false }
    { 7194;   ;No. of Credit Memos ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE ("Document Type"=CONST("Credit Memo"),
                                                                                              "Buy-from Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=No. of Credit Memos;
                                                   Editable=false }
    { 7195;   ;No. of Order Addresses;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("Order Address" WHERE ("Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=No. of Order Addresses;
                                                   Editable=false }
    { 7196;   ;Pay-to No. of Quotes;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE ("Document Type"=CONST(Quote),
                                                                                              "Pay-to Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=Pay-to No. of Quotes;
                                                   Editable=false }
    { 7197;   ;Pay-to No. of Blanket Orders;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE ("Document Type"=CONST("Blanket Order"),
                                                                                              "Pay-to Vendor No."=FIELD("No.")));
                                                   AccessByPermission=TableData "Purch. Rcpt. Header"=R;
                                                   CaptionML=ENU=Pay-to No. of Blanket Orders }
    { 7198;   ;No. of Incoming Documents;Integer  ;FieldClass=FlowField;
                                                   CalcFormula=Count("Incoming Document" WHERE ("Vendor No."=FIELD("No.")));
                                                   CaptionML=ENU=No. of Incoming Documents;
                                                   Editable=false }
    { 7600;   ;Base Calendar Code  ;Code10        ;TableRelation="Base Calendar";
                                                   CaptionML=ENU=Base Calendar Code }
    { 7601;   ;Document Sending Profile;Code20    ;TableRelation="Document Sending Profile".Code;
                                                   CaptionML=ENU=Document Sending Profile }
    { 7602;   ;Validate EU Vat Reg. No.;Boolean   ;CaptionML=ENU=Validate EU Vat Reg. No. }
    { 8000;   ;Id                  ;GUID          ;CaptionML=ENU=Id }
    { 8001;   ;Currency Id         ;GUID          ;TableRelation=Currency.Id;
                                                   OnValidate=BEGIN
                                                                UpdateCurrencyCode;
                                                              END;

                                                   CaptionML=ENU=Currency Id }
    { 8002;   ;Payment Terms Id    ;GUID          ;TableRelation="Payment Terms".Id;
                                                   OnValidate=BEGIN
                                                                UpdatePaymentTermsCode;
                                                              END;

                                                   CaptionML=ENU=Payment Terms Id }
    { 8003;   ;Payment Method Id   ;GUID          ;TableRelation="Payment Method".Id;
                                                   OnValidate=BEGIN
                                                                UpdatePaymentMethodCode;
                                                              END;

                                                   CaptionML=ENU=Payment Method Id }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
    {    ;"Search Name"                            }
    {    ;"Vendor Posting Group"                   }
    {    ;"Currency Code"                          }
    {    ;Priority                                 }
    {    ;"Country/Region Code"                    }
    {    ;"Gen. Bus. Posting Group"                }
    {    ;"VAT Registration No."                   }
    {    ;Name                                     }
    {    ;City                                     }
    {    ;"Post Code"                              }
    {    ;"Phone No."                              }
    {    ;Contact                                  }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;"No.",Name,City,"Post Code","Phone No.",Contact }
    { 2   ;Brick               ;"No.",Name,"Balance (LCY)",Contact,"Balance Due (LCY)",Image }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot delete %1 %2 because there is at least one outstanding Purchase %3 for this vendor.';
      Text002@1001 : TextConst 'ENU=You have set %1 to %2. Do you want to update the %3 price list accordingly?';
      Text003@1002 : TextConst 'ENU=Do you wish to create a contact for %1 %2?';
      PurchSetup@1003 : Record "Purchases & Payables Setup";
      CommentLine@1005 : Record "Comment Line";
      PostCode@1007 : Record "Post Code";
      VendBankAcc@1008 : Record "Vendor Bank Account";
      OrderAddr@1009 : Record "Order Address";
      GenBusPostingGrp@1010 : Record "Gen. Business Posting Group";
      ItemCrossReference@1016 : Record "Item Cross Reference";
      RMSetup@1020 : Record "Marketing Setup";
      ServiceItem@1024 : Record "Service Item";
      NoSeriesMgt@1011 : Codeunit NoSeriesManagement;
      MoveEntries@1012 : Codeunit MoveEntries;
      UpdateContFromVend@1013 : Codeunit "VendCont-Update";
      DimMgt@1014 : Codeunit DimensionManagement;
      LeadTimeMgt@1006 : Codeunit "Lead-Time Management";
      ApprovalsMgmt@1028 : Codeunit "Approvals Mgmt.";
      InsertFromContact@1015 : Boolean;
      Text004@1019 : TextConst 'ENU=Contact %1 %2 is not related to vendor %3 %4.';
      Text005@1021 : TextConst 'ENU=post';
      Text006@1022 : TextConst 'ENU=create';
      Text007@1023 : TextConst 'ENU=You cannot %1 this type of document when Vendor %2 is blocked with type %3';
      Text008@1025 : TextConst 'ENU=The %1 %2 has been assigned to %3 %4.\The same %1 cannot be entered on more than one %3.';
      Text009@1027 : TextConst 'ENU=Reconciling IC transactions may be difficult if you change IC Partner Code because this %1 has ledger entries in a fiscal year that has not yet been closed.\ Do you still want to change the IC Partner Code?';
      Text010@1026 : TextConst 'ENU=You cannot change the contents of the %1 field because this %2 has one or more open ledger entries.';
      Text011@1004 : TextConst 'ENU=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.';
      SelectVendorErr@1017 : TextConst 'ENU=You must select an existing vendor.';
      CreateNewVendTxt@1129 : TextConst '@@@="%1 is the name to be used to create the customer. ";ENU=Create a new vendor card for %1.';
      VendNotRegisteredTxt@1128 : TextConst 'ENU=This vendor is not registered. To continue, choose one of the following options:';
      SelectVendTxt@1118 : TextConst 'ENU=Select an existing vendor.';
      InsertFromTemplate@1018 : Boolean;

    [External]
    PROCEDURE AssistEdit@2(OldVend@1000 : Record Vendor) : Boolean;
    VAR
      Vend@1001 : Record Vendor;
    BEGIN
      with Vend do begin
        Vend := Rec;
        PurchSetup.GET;
        PurchSetup.TESTFIELD("Vendor Nos.");
        if NoSeriesMgt.SelectSeries(PurchSetup."Vendor Nos.",OldVend."No. Series","No. Series") then begin
          PurchSetup.GET;
          PurchSetup.TESTFIELD("Vendor Nos.");
          NoSeriesMgt.SetSeries("No.");
          Rec := Vend;
          exit(true);
        end;
      end;
    END;

    LOCAL PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::Vendor,"No.",FieldNumber,ShortcutDimCode);
      MODIFY;
    END;

    [External]
    PROCEDURE ShowContact@1();
    VAR
      ContBusRel@1000 : Record "Contact Business Relation";
      Cont@1001 : Record Contact;
      OfficeContact@1003 : Record Contact;
      OfficeMgt@1002 : Codeunit "Office Management";
    BEGIN
      if OfficeMgt.GetContact(OfficeContact,"No.") and (OfficeContact.COUNT = 1) then
        PAGE.RUN(PAGE::"Contact Card",OfficeContact)
      else begin
        if "No." = '' then
          exit;

        ContBusRel.SETCURRENTKEY("Link to Table","No.");
        ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Vendor);
        ContBusRel.SETRANGE("No.","No.");
        if not ContBusRel.FINDFIRST then begin
          if not CONFIRM(Text003,false,TABLECAPTION,"No.") then
            exit;
          UpdateContFromVend.InsertNewContact(Rec,false);
          ContBusRel.FINDFIRST;
        end;
        COMMIT;

        Cont.FILTERGROUP(2);
        Cont.SETRANGE("Company No.",ContBusRel."Contact No.");
        PAGE.RUN(PAGE::"Contact List",Cont);
      end;
    END;

    [External]
    PROCEDURE SetInsertFromContact@3(FromContact@1000 : Boolean);
    BEGIN
      InsertFromContact := FromContact;
    END;

    [External]
    PROCEDURE CheckBlockedVendOnDocs@4(Vend2@1003 : Record Vendor;Transaction@1000 : Boolean);
    BEGIN
      if Vend2.Blocked = Vend2.Blocked::All then
        VendBlockedErrorMessage(Vend2,Transaction);
    END;

    [External]
    PROCEDURE CheckBlockedVendOnJnls@5(Vend2@1005 : Record Vendor;DocType@1004 : '" ",Payment,Invoice,"Credit Memo","Finance Charge Memo",Reminder,Refund';Transaction@1003 : Boolean);
    BEGIN
      with Vend2 do begin
        if (Blocked = Blocked::All) or
           (Blocked = Blocked::Payment) and (DocType = DocType::Payment)
        then
          VendBlockedErrorMessage(Vend2,Transaction);
      end;
    END;

    [External]
    PROCEDURE CreateAndShowNewInvoice@21();
    VAR
      PurchaseHeader@1000 : Record "Purchase Header";
    BEGIN
      PurchaseHeader."Document Type" := PurchaseHeader."Document Type"::Invoice;
      PurchaseHeader.SETRANGE("Buy-from Vendor No.","No.");
      PurchaseHeader.INSERT(true);
      COMMIT;
      PAGE.RUN(PAGE::"Purchase Invoice",PurchaseHeader)
    END;

    [External]
    PROCEDURE CreateAndShowNewCreditMemo@22();
    VAR
      PurchaseHeader@1000 : Record "Purchase Header";
    BEGIN
      PurchaseHeader."Document Type" := PurchaseHeader."Document Type"::"Credit Memo";
      PurchaseHeader.SETRANGE("Buy-from Vendor No.","No.");
      PurchaseHeader.INSERT(true);
      COMMIT;
      PAGE.RUN(PAGE::"Purchase Credit Memo",PurchaseHeader)
    END;

    [External]
    PROCEDURE CreateAndShowNewPurchaseOrder@12();
    VAR
      PurchaseHeader@1000 : Record "Purchase Header";
    BEGIN
      PurchaseHeader."Document Type" := PurchaseHeader."Document Type"::Order;
      PurchaseHeader.SETRANGE("Buy-from Vendor No.","No.");
      PurchaseHeader.INSERT(true);
      COMMIT;
      PAGE.RUN(PAGE::"Purchase Order",PurchaseHeader);
    END;

    [External]
    PROCEDURE VendBlockedErrorMessage@6(Vend2@1001 : Record Vendor;Transaction@1002 : Boolean);
    VAR
      Action@1000 : Text[30];
    BEGIN
      if Transaction then
        Action := Text005
      else
        Action := Text006;
      ERROR(Text007,Action,Vend2."No.",Vend2.Blocked);
    END;

    [Internal]
    PROCEDURE DisplayMap@7();
    VAR
      MapPoint@1001 : Record "Online Map Setup";
      MapMgt@1000 : Codeunit "Online Map Management";
    BEGIN
      if MapPoint.FINDFIRST then
        MapMgt.MakeSelection(DATABASE::Vendor,GETPOSITION)
      else
        MESSAGE(Text011);
    END;

    [External]
    PROCEDURE CalcOverDueBalance@8() OverDueBalance : Decimal;
    VAR
      VendLedgEntryRemainAmtQuery@1001 : Query "Vend. Ledg. Entry Remain. Amt." SECURITYFILTERING(Filtered);
    BEGIN
      VendLedgEntryRemainAmtQuery.SETRANGE(Vendor_No,"No.");
      VendLedgEntryRemainAmtQuery.SETRANGE(IsOpen,true);
      VendLedgEntryRemainAmtQuery.SETFILTER(Due_Date,'<%1',WORKDATE);
      VendLedgEntryRemainAmtQuery.OPEN;

      if VendLedgEntryRemainAmtQuery.READ then
        OverDueBalance := -VendLedgEntryRemainAmtQuery.Sum_Remaining_Amt_LCY;
    END;

    [External]
    PROCEDURE GetInvoicedPrepmtAmountLCY@18() : Decimal;
    VAR
      PurchLine@1000 : Record "Purchase Line";
    BEGIN
      PurchLine.SETCURRENTKEY("Document Type","Pay-to Vendor No.");
      PurchLine.SETRANGE("Document Type",PurchLine."Document Type"::Order);
      PurchLine.SETRANGE("Pay-to Vendor No.","No.");
      PurchLine.CALCSUMS("Prepmt. Amount Inv. (LCY)","Prepmt. VAT Amount Inv. (LCY)");
      exit(PurchLine."Prepmt. Amount Inv. (LCY)" + PurchLine."Prepmt. VAT Amount Inv. (LCY)");
    END;

    [External]
    PROCEDURE GetTotalAmountLCY@10() : Decimal;
    BEGIN
      CALCFIELDS(
        "Balance (LCY)","Outstanding Orders (LCY)","Amt. Rcd. Not Invoiced (LCY)","Outstanding Invoices (LCY)");

      exit(
        "Balance (LCY)" + "Outstanding Orders (LCY)" +
        "Amt. Rcd. Not Invoiced (LCY)" + "Outstanding Invoices (LCY)" - GetInvoicedPrepmtAmountLCY);
    END;

    [External]
    PROCEDURE HasAddress@25() : Boolean;
    BEGIN
      case true of
        Address <> '':
          exit(true);
        "Address 2" <> '':
          exit(true);
        City <> '':
          exit(true);
        "Country/Region Code" <> '':
          exit(true);
        County <> '':
          exit(true);
        "Post Code" <> '':
          exit(true);
        Contact <> '':
          exit(true);
      end;

      exit(false);
    END;

    [External]
    PROCEDURE GetVendorNo@19(VendorText@1000 : Text[50]) : Code[20];
    BEGIN
      exit(GetVendorNoOpenCard(VendorText,true));
    END;

    [External]
    PROCEDURE GetVendorNoOpenCard@56(VendorText@1000 : Text[50];ShowVendorCard@1006 : Boolean) : Code[20];
    VAR
      Vendor@1001 : Record Vendor;
      VendorNo@1002 : Code[20];
      VendorWithoutQuote@1003 : Text;
      VendorFilterFromStart@1004 : Text;
      VendorFilterContains@1005 : Text;
    BEGIN
      if VendorText = '' then
        exit('');

      if STRLEN(VendorText) <= MAXSTRLEN(Vendor."No.") then
        if Vendor.GET(VendorText) then
          exit(Vendor."No.");

      VendorWithoutQuote := CONVERTSTR(VendorText,'''','?');

      Vendor.SETFILTER(Name,'''@' + VendorWithoutQuote + '''');
      if Vendor.FINDFIRST then
        exit(Vendor."No.");
      Vendor.SETRANGE(Name);

      VendorFilterFromStart := '''@' + VendorWithoutQuote + '*''';

      Vendor.FILTERGROUP := -1;
      Vendor.SETFILTER("No.",VendorFilterFromStart);
      Vendor.SETFILTER(Name,VendorFilterFromStart);
      if Vendor.FINDFIRST then
        exit(Vendor."No.");

      VendorFilterContains := '''@*' + VendorWithoutQuote + '*''';

      Vendor.SETFILTER("No.",VendorFilterContains);
      Vendor.SETFILTER(Name,VendorFilterContains);
      Vendor.SETFILTER(City,VendorFilterContains);
      Vendor.SETFILTER(Contact,VendorFilterContains);
      Vendor.SETFILTER("Phone No.",VendorFilterContains);
      Vendor.SETFILTER("Post Code",VendorFilterContains);

      if Vendor.COUNT = 0 then
        MarkVendorsWithSimilarName(Vendor,VendorText);

      if Vendor.COUNT = 1 then begin
        Vendor.FINDFIRST;
        exit(Vendor."No.");
      end;

      if not GUIALLOWED then
        ERROR(SelectVendorErr);

      if Vendor.COUNT = 0 then begin
        if Vendor.WRITEPERMISSION then
          case STRMENU(STRSUBSTNO('%1,%2',STRSUBSTNO(CreateNewVendTxt,VendorText),SelectVendTxt),1,VendNotRegisteredTxt) of
            0:
              ERROR(SelectVendorErr);
            1:
              exit(CreateNewVendor(COPYSTR(VendorText,1,MAXSTRLEN(Vendor.Name)),ShowVendorCard));
          end;
        Vendor.RESET;
      end;

      if ShowVendorCard then
        VendorNo := PickVendor(Vendor)
      else
        exit('');

      if VendorNo <> '' then
        exit(VendorNo);

      ERROR(SelectVendorErr);
    END;

    LOCAL PROCEDURE MarkVendorsWithSimilarName@33(VAR Vendor@1001 : Record Vendor;VendorText@1000 : Text);
    VAR
      TypeHelper@1002 : Codeunit "Type Helper";
      VendorCount@1003 : Integer;
      VendorTextLenght@1004 : Integer;
      Treshold@1005 : Integer;
    BEGIN
      if VendorText = '' then
        exit;
      if STRLEN(VendorText) > MAXSTRLEN(Vendor.Name) then
        exit;
      VendorTextLenght := STRLEN(VendorText);
      Treshold := VendorTextLenght div 5;
      if Treshold = 0 then
        exit;
      Vendor.RESET;
      Vendor.ASCENDING(false); // most likely to search for newest Vendors
      if Vendor.FINDSET then
        repeat
          VendorCount += 1;
          if ABS(VendorTextLenght - STRLEN(Vendor.Name)) <= Treshold then
            if TypeHelper.TextDistance(UPPERCASE(VendorText),UPPERCASE(Vendor.Name)) <= Treshold then
              Vendor.MARK(true);
        until Vendor.MARK or (Vendor.NEXT = 0) or (VendorCount > 1000);
      Vendor.MARKEDONLY(true);
    END;

    LOCAL PROCEDURE CreateNewVendor@59(VendorName@1000 : Text[50];ShowVendorCard@1001 : Boolean) : Code[20];
    VAR
      Vendor@1005 : Record Vendor;
      MiniVendorTemplate@1006 : Record "Mini Vendor Template";
      VendorCard@1002 : Page "Vendor Card";
    BEGIN
      if not MiniVendorTemplate.NewVendorFromTemplate(Vendor) then
        ERROR(SelectVendorErr);

      Vendor.Name := VendorName;
      Vendor.MODIFY(true);
      COMMIT;
      if not ShowVendorCard then
        exit(Vendor."No.");
      Vendor.SETRANGE("No.",Vendor."No.");
      VendorCard.SETTABLEVIEW(Vendor);
      if not (VendorCard.RUNMODAL = ACTION::OK) then
        ERROR(SelectVendorErr);

      exit(Vendor."No.");
    END;

    LOCAL PROCEDURE PickVendor@58(VAR Vendor@1000 : Record Vendor) : Code[20];
    VAR
      VendorList@1001 : Page "Vendor List";
    BEGIN
      if Vendor.FINDSET then
        repeat
          Vendor.MARK(true);
        until Vendor.NEXT = 0;
      if Vendor.FINDFIRST then;
      Vendor.MARKEDONLY := true;

      VendorList.SETTABLEVIEW(Vendor);
      VendorList.SETRECORD(Vendor);
      VendorList.LOOKUPMODE := true;
      if VendorList.RUNMODAL = ACTION::LookupOK then
        VendorList.GETRECORD(Vendor)
      else
        CLEAR(Vendor);

      exit(Vendor."No.");
    END;

    [External]
    PROCEDURE OpenVendorLedgerEntries@9(FilterOnDueEntries@1002 : Boolean);
    VAR
      DetailedVendorLedgEntry@1001 : Record "Detailed Vendor Ledg. Entry";
      VendorLedgerEntry@1000 : Record "Vendor Ledger Entry";
    BEGIN
      DetailedVendorLedgEntry.SETRANGE("Vendor No.","No.");
      COPYFILTER("Global Dimension 1 Filter",DetailedVendorLedgEntry."Initial Entry Global Dim. 1");
      COPYFILTER("Global Dimension 2 Filter",DetailedVendorLedgEntry."Initial Entry Global Dim. 2");
      if FilterOnDueEntries and (GETFILTER("Date Filter") <> '') then begin
        COPYFILTER("Date Filter",DetailedVendorLedgEntry."Initial Entry Due Date");
        DetailedVendorLedgEntry.SETFILTER("Posting Date",'<=%1',GETRANGEMAX("Date Filter"));
      end;
      COPYFILTER("Currency Filter",DetailedVendorLedgEntry."Currency Code");
      VendorLedgerEntry.DrillDownOnEntries(DetailedVendorLedgEntry);
    END;

    [External]
    PROCEDURE SetInsertFromTemplate@11(FromTemplate@1000 : Boolean);
    BEGIN
      InsertFromTemplate := FromTemplate;
    END;

    PROCEDURE SetAddress@40(VendorAddress@1001 : Text[50];VendorAddress2@1002 : Text[50];VendorPostCode@1003 : Code[20];VendorCity@1000 : Text[30];VendorCounty@1004 : Text[30];VendorCountryCode@1005 : Code[10];VendorContact@1006 : Text[50]);
    BEGIN
      Address := VendorAddress;
      "Address 2" := VendorAddress2;
      "Post Code" := VendorPostCode;
      City := VendorCity;
      County := VendorCounty;
      "Country/Region Code" := VendorCountryCode;
      UpdateContFromVend.OnModify(Rec);
      Contact := VendorContact;
    END;

    LOCAL PROCEDURE SetDefaultPurchaser@13();
    VAR
      UserSetup@1000 : Record "User Setup";
    BEGIN
      if not UserSetup.GET(USERID) then
        exit;

      if UserSetup."Salespers./Purch. Code" <> '' then
        VALIDATE("Purchaser Code",UserSetup."Salespers./Purch. Code");
    END;

    LOCAL PROCEDURE SetLastModifiedDateTime@47();
    BEGIN
      "Last Modified Date Time" := CURRENTDATETIME;
      "Last Date Modified" := TODAY;
    END;

    LOCAL PROCEDURE VATRegistrationValidation@14();
    VAR
      VATRegistrationLog@1005 : Record "VAT Registration Log";
      VATRegistrationNoFormat@1004 : Record "VAT Registration No. Format";
      VATRegNoSrvConfig@1003 : Record "VAT Reg. No. Srv Config";
      VATRegistrationLogMgt@1002 : Codeunit "VAT Registration Log Mgt.";
      ResultRecordRef@1001 : RecordRef;
      ApplicableCountryCode@1000 : Code[10];
    BEGIN
      if not VATRegistrationNoFormat.Test("VAT Registration No.","Country/Region Code","No.",DATABASE::Vendor) then
        exit;
      VATRegistrationLogMgt.LogVendor(Rec);

      if ("Country/Region Code" = '') and (VATRegistrationNoFormat."Country/Region Code" = '') then
        exit;
      ApplicableCountryCode := "Country/Region Code";
      if ApplicableCountryCode = '' then
        ApplicableCountryCode := VATRegistrationNoFormat."Country/Region Code";
      if VATRegNoSrvConfig.VATRegNoSrvIsEnabled then begin
        VATRegistrationLogMgt.ValidateVATRegNoWithVIES(ResultRecordRef,Rec,"No.",
          VATRegistrationLog."Account Type"::Vendor,ApplicableCountryCode);
        ResultRecordRef.SETTABLE(Rec);
      end;
    END;

    PROCEDURE UpdateCurrencyId@55();
    VAR
      Currency@1000 : Record Currency;
    BEGIN
      if "Currency Code" = '' then begin
        CLEAR("Currency Id");
        exit;
      end;

      if not Currency.GET("Currency Code") then
        exit;

      "Currency Id" := Currency.Id;
    END;

    LOCAL PROCEDURE UpdateCurrencyCode@54();
    VAR
      Currency@1001 : Record Currency;
    BEGIN
      if ISNULLGUID("Currency Id") then
        exit;

      Currency.SETRANGE(Id,"Currency Id");
      if not Currency.FINDFIRST then
        exit;

      "Currency Code" := Currency.Code;
    END;

    PROCEDURE UpdatePaymentTermsId@57();
    VAR
      PaymentTerms@1000 : Record "Payment Terms";
    BEGIN
      if "Payment Terms Code" = '' then begin
        CLEAR("Payment Terms Id");
        exit;
      end;

      if not PaymentTerms.GET("Payment Terms Code") then
        exit;

      "Payment Terms Id" := PaymentTerms.Id;
    END;

    LOCAL PROCEDURE UpdatePaymentTermsCode@15();
    VAR
      PaymentTerms@1001 : Record "Payment Terms";
    BEGIN
      if ISNULLGUID("Payment Terms Id") then
        exit;

      PaymentTerms.SETRANGE(Id,"Payment Terms Id");
      if not PaymentTerms.FINDFIRST then
        exit;

      "Payment Terms Code" := PaymentTerms.Code;
    END;

    PROCEDURE UpdatePaymentMethodId@17();
    VAR
      PaymentMethod@1000 : Record "Payment Method";
    BEGIN
      if "Payment Method Code" = '' then begin
        CLEAR("Payment Method Id");
        exit;
      end;

      if not PaymentMethod.GET("Payment Method Code") then
        exit;

      "Payment Method Id" := PaymentMethod.Id;
    END;

    LOCAL PROCEDURE UpdatePaymentMethodCode@16();
    VAR
      PaymentMethod@1001 : Record "Payment Method";
    BEGIN
      if ISNULLGUID("Payment Method Id") then
        exit;

      PaymentMethod.SETRANGE(Id,"Payment Method Id");
      if not PaymentMethod.FINDFIRST then
        exit;

      "Payment Method Code" := PaymentMethod.Code;
    END;

    BEGIN
    END.
  }
}

