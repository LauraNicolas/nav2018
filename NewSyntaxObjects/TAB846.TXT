OBJECT Table 846 Cash Flow Worksheet Line
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               LOCKTABLE;
               ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
               ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
             END;

    CaptionML=ENU=Cash Flow Worksheet Line;
  }
  FIELDS
  {
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 3   ;   ;Cash Flow Forecast No.;Code20      ;TableRelation="Cash Flow Forecast";
                                                   OnValidate=VAR
                                                                CashFlowForecast@1000 : Record "Cash Flow Forecast";
                                                              BEGIN
                                                                if "Cash Flow Forecast No." = '' then
                                                                  exit;

                                                                CashFlowForecast.GET("Cash Flow Forecast No.");
                                                                Description := CashFlowForecast.Description;
                                                              END;

                                                   CaptionML=ENU=Cash Flow Forecast No. }
    { 4   ;   ;Cash Flow Date      ;Date          ;CaptionML=ENU=Cash Flow Date }
    { 5   ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 6   ;   ;Cash Flow Account No.;Code20       ;TableRelation="Cash Flow Account";
                                                   OnValidate=VAR
                                                                CFAccount@1000 : Record "Cash Flow Account";
                                                              BEGIN
                                                                if "Cash Flow Account No." <> '' then begin
                                                                  CFAccount.GET("Cash Flow Account No.");
                                                                  CFAccount.TESTFIELD("Account Type",CFAccount."Account Type"::Entry);
                                                                  CFAccount.TESTFIELD(Blocked,false);
                                                                  if "Cash Flow Account No." <> xRec."Cash Flow Account No." then begin
                                                                    Description := CFAccount.Name;
                                                                    "Source Type" := CFAccount."Source Type";
                                                                  end;
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Cash Flow Account No. }
    { 7   ;   ;Source Type         ;Option        ;OnValidate=BEGIN
                                                                if "Source Type" <> "Source Type"::"G/L Budget" then
                                                                  "G/L Budget Name" := '';
                                                              END;

                                                   CaptionML=ENU=Source Type;
                                                   OptionCaptionML=ENU=" ,Receivables,Payables,Liquid Funds,Cash Flow Manual Expense,Cash Flow Manual Revenue,Sales Orders,Purchase Orders,Fixed Assets Budget,Fixed Assets Disposal,Service Orders,G/L Budget,,,Job,Tax,Cortana Intelligence";
                                                   OptionString=" ",Receivables,Payables,"Liquid Funds","Cash Flow Manual Expense","Cash Flow Manual Revenue","Sales Orders","Purchase Orders","Fixed Assets Budget","Fixed Assets Disposal","Service Orders","G/L Budget",,,Job,Tax,"Cortana Intelligence" }
    { 8   ;   ;Description         ;Text250       ;CaptionML=ENU=Description }
    { 9   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=" ",Payment,Invoice,"Credit Memo","Finance Charge Memo",Reminder,Refund }
    { 10  ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 11  ;   ;Pmt. Discount Date  ;Date          ;CaptionML=ENU=Pmt. Discount Date }
    { 12  ;   ;Pmt. Disc. Tolerance Date;Date     ;CaptionML=ENU=Pmt. Disc. Tolerance Date }
    { 13  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=ENU=Payment Terms Code }
    { 14  ;   ;Payment Discount    ;Decimal       ;CaptionML=ENU=Payment Discount }
    { 15  ;   ;Associated Entry No.;Integer       ;CaptionML=ENU=Associated Entry No. }
    { 16  ;   ;Overdue             ;Boolean       ;CaptionML=ENU=Overdue;
                                                   Editable=false }
    { 17  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 18  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 30  ;   ;Amount (LCY)        ;Decimal       ;CaptionML=ENU=Amount (LCY) }
    { 34  ;   ;Source No.          ;Code20        ;TableRelation=IF ("Source Type"=CONST("Liquid Funds")) "G/L Account"
                                                                 ELSE IF ("Source Type"=CONST(Receivables)) "Cust. Ledger Entry"."Document No."
                                                                 ELSE IF ("Source Type"=CONST(Payables)) "Vendor Ledger Entry"."Document No."
                                                                 ELSE IF ("Source Type"=CONST("Fixed Assets Budget")) "Fixed Asset"
                                                                 ELSE IF ("Source Type"=CONST("Fixed Assets Disposal")) "Fixed Asset"
                                                                 ELSE IF ("Source Type"=CONST("Sales Orders")) "Sales Header"."No." WHERE ("Document Type"=CONST(Order))
                                                                 ELSE IF ("Source Type"=CONST("Purchase Orders")) "Purchase Header"."No." WHERE ("Document Type"=CONST(Order))
                                                                 ELSE IF ("Source Type"=CONST("Service Orders")) "Service Header"."No." WHERE ("Document Type"=CONST(Order))
                                                                 ELSE IF ("Source Type"=CONST("Cash Flow Manual Expense")) "Cash Flow Manual Expense"
                                                                 ELSE IF ("Source Type"=CONST("Cash Flow Manual Revenue")) "Cash Flow Manual Revenue"
                                                                 ELSE IF ("Source Type"=CONST("G/L Budget")) "G/L Account"
                                                                 ELSE IF ("Source Type"=CONST(Job)) Job."No.";
                                                   OnValidate=VAR
                                                                CustLedgEntry@1000 : Record "Cust. Ledger Entry";
                                                                VendLedgEntry@1001 : Record "Vendor Ledger Entry";
                                                              BEGIN
                                                                case "Source Type" of
                                                                  "Source Type"::"Liquid Funds":
                                                                    MoveDefualtDimToJnlLineDim(DATABASE::"G/L Account","Source No.","Dimension Set ID");
                                                                  "Source Type"::Receivables:
                                                                    begin
                                                                      CustLedgEntry.SETRANGE("Document No.","Source No.");
                                                                      if CustLedgEntry.FINDFIRST then
                                                                        "Dimension Set ID" := CustLedgEntry."Dimension Set ID";
                                                                    end;
                                                                  "Source Type"::Payables:
                                                                    begin
                                                                      VendLedgEntry.SETRANGE("Document No.","Source No.");
                                                                      if VendLedgEntry.FINDFIRST then
                                                                        "Dimension Set ID" := VendLedgEntry."Dimension Set ID";
                                                                    end;
                                                                  "Source Type"::"Fixed Assets Disposal",
                                                                  "Source Type"::"Fixed Assets Budget":
                                                                    MoveDefualtDimToJnlLineDim(DATABASE::"Fixed Asset","Source No.","Dimension Set ID");
                                                                end;
                                                              END;

                                                   ValidateTableRelation=false;
                                                   CaptionML=ENU=Source No. }
    { 35  ;   ;G/L Budget Name     ;Code10        ;TableRelation="G/L Budget Name";
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Source Type","Source Type"::"G/L Budget");
                                                              END;

                                                   CaptionML=ENU=G/L Budget Name }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnValidate=BEGIN
                                                                DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
                                                              END;

                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"Line No."                              ;Clustered=true }
    {    ;"Cash Flow Forecast No.","Document No." ;SumIndexFields="Amount (LCY)" }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimMgt@1001 : Codeunit DimensionManagement;

    [External]
    PROCEDURE EmptyLine@1002() : Boolean;
    BEGIN
      exit(("Cash Flow Forecast No." = '') and ("Cash Flow Account No." = ''));
    END;

    [External]
    PROCEDURE ValidateShortcutDimCode@1004(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    [External]
    PROCEDURE LookupShortcutDimCode@1005(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    [External]
    PROCEDURE ShowShortcutDimCode@1006(VAR ShortcutDimCode@1000 : ARRAY [8] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    [External]
    PROCEDURE ShowDimensions@1007();
    BEGIN
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1',"Line No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    [External]
    PROCEDURE MoveDefualtDimToJnlLineDim@2(TableID@1004 : Integer;No@1005 : Code[20];VAR DimensionSetID@1003 : Integer);
    VAR
      TableID2@1000 : ARRAY [10] OF Integer;
      No2@1002 : ARRAY [10] OF Code[20];
      Dimension@1001 : Code[10];
    BEGIN
      TableID2[1] := TableID;
      No2[1] := No;
      Dimension := '';
      DimensionSetID :=
        DimMgt.GetRecDefaultDimID(
          Rec,CurrFieldNo,TableID2,No2,'',Dimension,Dimension,0,0);
    END;

    [External]
    PROCEDURE CalculateCFAmountAndCFDate@4();
    VAR
      GeneralLedgerSetup@1004 : Record "General Ledger Setup";
      PaymentTerms@1001 : Record "Payment Terms";
      CashFlowForecast@1006 : Record "Cash Flow Forecast";
      PaymentTermsToApply@1000 : Code[10];
      CFDiscountDate@1002 : Date;
      CheckCrMemo@1003 : Boolean;
      ApplyCFPaymentTerm@1007 : Boolean;
      DiscountDateCalculation@1005 : DateFormula;
    BEGIN
      if "Document Date" = 0D then
        "Document Date" := WORKDATE;
      if "Cash Flow Date" = 0D then
        "Cash Flow Date" := "Document Date";
      if "Amount (LCY)" = 0 then
        exit;

      case "Document Type" of
        "Document Type"::Invoice:
          CheckCrMemo := false;
        "Document Type"::"Credit Memo":
          CheckCrMemo := true;
        else
          exit;
      end;

      if not CashFlowForecast.GET("Cash Flow Forecast No.") then
        exit;

      PaymentTermsToApply := "Payment Terms Code";
      ApplyCFPaymentTerm := CashFlowForecast."Consider CF Payment Terms" and PaymentTerms.GET(PaymentTermsToApply);
      if "Source Type" in ["Source Type"::"Sales Orders","Source Type"::"Purchase Orders","Source Type"::"Service Orders",
                           "Source Type"::Job]
      then
        ApplyCFPaymentTerm := true;

      if not ApplyCFPaymentTerm then begin
        if not CashFlowForecast."Consider Discount" then
          exit;

        if CashFlowForecast."Consider Pmt. Disc. Tol. Date" then
          CFDiscountDate := "Pmt. Disc. Tolerance Date"
        else
          CFDiscountDate := "Pmt. Discount Date";

        if CFDiscountDate <> 0D then begin
          if CFDiscountDate >= WORKDATE then begin
            "Cash Flow Date" := CFDiscountDate;
            "Amount (LCY)" := "Amount (LCY)" - "Payment Discount";
          end else
            "Payment Discount" := 0;
        end;

        exit;
      end;

      if not PaymentTerms.GET(PaymentTermsToApply) then
        exit;

      if CheckCrMemo and not PaymentTerms."Calc. Pmt. Disc. on Cr. Memos" then
        exit;

      if CashFlowForecast."Consider Discount" then begin
        GeneralLedgerSetup.GET;

        DiscountDateCalculation := PaymentTerms."Discount Date Calculation";
        if FORMAT(DiscountDateCalculation) = '' then
          DiscountDateCalculation := PaymentTerms."Due Date Calculation";
        CFDiscountDate := CALCDATE(DiscountDateCalculation,"Document Date");
        if CashFlowForecast."Consider Pmt. Disc. Tol. Date" then
          CFDiscountDate := CALCDATE(GeneralLedgerSetup."Payment Discount Grace Period",CFDiscountDate);

        if CFDiscountDate >= WORKDATE then begin
          "Cash Flow Date" := CFDiscountDate;
          "Payment Discount" := ROUND("Amount (LCY)" * PaymentTerms."Discount %" / 100);
          "Amount (LCY)" := "Amount (LCY)" - "Payment Discount";
        end else begin
          "Cash Flow Date" := CALCDATE(PaymentTerms."Due Date Calculation","Document Date");
          "Payment Discount" := 0;
        end;
      end else
        "Cash Flow Date" := CALCDATE(PaymentTerms."Due Date Calculation","Document Date");
    END;

    [Internal]
    PROCEDURE ShowSource@3();
    VAR
      CFManagement@1000 : Codeunit "Cash Flow Management";
    BEGIN
      CFManagement.ShowSource(Rec);
    END;

    [External]
    PROCEDURE GetNumberOfSourceTypes@1() : Integer;
    BEGIN
      exit(16);
    END;

    BEGIN
    END.
  }
}

