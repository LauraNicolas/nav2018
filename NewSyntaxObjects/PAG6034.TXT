OBJECT Page 6034 Service Credit Memo Statistics
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Service Credit Memo Statistics;
    LinksAllowed=false;
    SourceTable="Service Cr.Memo Header";
    PageType=ListPlus;
    OnAfterGetRecord=VAR
                       CostCalcMgt@1000 : Codeunit "Cost Calculation Management";
                     BEGIN
                       CLEARALL;

                       if "Currency Code" = '' then
                         Currency.InitRoundingPrecision
                       else
                         Currency.GET("Currency Code");

                       ServCrMemoLine.SETRANGE("Document No.","No.");

                       if ServCrMemoLine.FIND('-') then
                         repeat
                           CustAmount := CustAmount + ServCrMemoLine.Amount;
                           AmountInclVAT := AmountInclVAT + ServCrMemoLine."Amount Including VAT";
                           if "Prices Including VAT" then
                             InvDiscAmount := InvDiscAmount + ServCrMemoLine."Inv. Discount Amount" / (1 + ServCrMemoLine."VAT %" / 100)
                           else
                             InvDiscAmount := InvDiscAmount + ServCrMemoLine."Inv. Discount Amount";
                           CostLCY := CostLCY + (ServCrMemoLine.Quantity * ServCrMemoLine."Unit Cost (LCY)");
                           LineQty := LineQty + ServCrMemoLine.Quantity;
                           TotalNetWeight := TotalNetWeight + (ServCrMemoLine.Quantity * ServCrMemoLine."Net Weight");
                           TotalGrossWeight := TotalGrossWeight + (ServCrMemoLine.Quantity * ServCrMemoLine."Gross Weight");
                           TotalVolume := TotalVolume + (ServCrMemoLine.Quantity * ServCrMemoLine."Unit Volume");
                           if ServCrMemoLine."Units per Parcel" > 0 then
                             TotalParcels := TotalParcels + ROUND(ServCrMemoLine.Quantity / ServCrMemoLine."Units per Parcel",1,'>');
                           if ServCrMemoLine."VAT %" <> VATpercentage then
                             if VATpercentage = 0 then
                               VATpercentage := ServCrMemoLine."VAT %"
                             else
                               VATpercentage := -1;
                           TotalAdjCostLCY := TotalAdjCostLCY + CostCalcMgt.CalcServCrMemoLineCostLCY(ServCrMemoLine);
                         until ServCrMemoLine.NEXT = 0;
                       VATAmount := AmountInclVAT - CustAmount;
                       InvDiscAmount := ROUND(InvDiscAmount,Currency."Amount Rounding Precision");

                       if VATpercentage <= 0 then
                         VATAmountText := Text000
                       else
                         VATAmountText := STRSUBSTNO(Text001,VATpercentage);

                       if "Currency Code" = '' then
                         AmountLCY := CustAmount
                       else
                         AmountLCY :=
                           CurrExchRate.ExchangeAmtFCYToLCY(
                             WORKDATE,"Currency Code",CustAmount,"Currency Factor");

                       ProfitLCY := AmountLCY - CostLCY;
                       if AmountLCY <> 0 then
                         ProfitPct := ROUND(100 * ProfitLCY / AmountLCY,0.1);

                       AdjProfitLCY := AmountLCY - TotalAdjCostLCY;
                       if AmountLCY <> 0 then
                         AdjProfitPct := ROUND(100 * AdjProfitLCY / AmountLCY,0.1);

                       if Cust.GET("Bill-to Customer No.") then
                         Cust.CALCFIELDS("Balance (LCY)")
                       else
                         CLEAR(Cust);

                       case true of
                         Cust."Credit Limit (LCY)" = 0:
                           CreditLimitLCYExpendedPct := 0;
                         Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" < 0:
                           CreditLimitLCYExpendedPct := 0;
                         Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" > 1:
                           CreditLimitLCYExpendedPct := 10000;
                         else
                           CreditLimitLCYExpendedPct := ROUND(Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" * 10000,1);
                       end;

                       ServCrMemoLine.CalcVATAmountLines(Rec,TempVATAmountLine);
                       CurrPage.Subform.PAGE.SetTempVATAmountLine(TempVATAmountLine);
                       CurrPage.Subform.PAGE.InitGlobals("Currency Code",false,false,false,false,"VAT Base Discount %");
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 35  ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                Name=Amount;
                CaptionML=ENU=Amount;
                ToolTipML=ENU="Specifies the net amount of all the lines in the posted service credit memo. ";
                ApplicationArea=#Service;
                SourceExpr=CustAmount + InvDiscAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 6   ;2   ;Field     ;
                Name=InvDiscAmount;
                CaptionML=ENU=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount for the entire service credit memo. If there is a check mark in the Calc. Inv. Discount field in the Sales & Receivables Setup window, the discount was calculated automatically.;
                ApplicationArea=#Service;
                SourceExpr=InvDiscAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                ImplicitType=Decimal }

    { 12  ;2   ;Field     ;
                Name=CustAmount;
                CaptionML=ENU=Total;
                ToolTipML=ENU=Specifies the total net amount less any invoice discount amount for the posted service invoice. The amount does not include VAT.;
                ApplicationArea=#Service;
                SourceExpr=CustAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                ImplicitType=Decimal }

    { 16  ;2   ;Field     ;
                Name=VATAmount;
                CaptionML=ENU=VAT Amount;
                ToolTipML=ENU=Specifies the total VAT amount on the posted service invoice.;
                ApplicationArea=#Service;
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT(VATAmountText);
                ImplicitType=Decimal }

    { 20  ;2   ;Field     ;
                Name=AmountInclVAT;
                CaptionML=ENU=Total Incl. VAT;
                ToolTipML=ENU=Specifies the total amount on the service credit memo, including VAT, which has been posted to the customer's account.;
                ApplicationArea=#Service;
                SourceExpr=AmountInclVAT;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                ImplicitType=Decimal }

    { 26  ;2   ;Field     ;
                Name=AmountLCY;
                CaptionML=ENU=Sales (LCY);
                ToolTipML=ENU=Specifies your total service sales turnover in the fiscal year. It is calculated from amounts excluding VAT on all completed and open service sales invoices and credit memos.;
                ApplicationArea=#Service;
                SourceExpr=AmountLCY;
                AutoFormatType=1;
                ImplicitType=Decimal }

    { 30  ;2   ;Field     ;
                Name=ProfitLCY;
                CaptionML=ENU=Original Profit (LCY);
                ToolTipML=ENU=Specifies the amount of profit for the posted service credit memo (in LCY), prior to any item cost adjustment. The program calculates the amount as the difference between the values in the Amount and the Original Cost (LCY) fields.;
                ApplicationArea=#Service;
                SourceExpr=ProfitLCY;
                AutoFormatType=1;
                ImplicitType=Decimal }

    { 36  ;2   ;Field     ;
                Name=AdjProfitLCY;
                CaptionML=ENU=Adjusted Profit (LCY);
                ToolTipML=ENU=Specifies the total cost, in LCY, of the items in the posted service credit memo, adjusted for any changes in the original costs of these items.;
                ApplicationArea=#Service;
                SourceExpr=AdjProfitLCY;
                AutoFormatType=1;
                ImplicitType=Decimal }

    { 32  ;2   ;Field     ;
                Name=ProfitPct;
                CaptionML=ENU=Original Profit %;
                ToolTipML=ENU=Specifies the original profit amount expressed in percentage.;
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct;
                ImplicitType=Decimal }

    { 39  ;2   ;Field     ;
                Name=AdjProfitPct;
                CaptionML=ENU=Adjusted Profit %;
                ToolTipML=ENU="Specifies the amount of profit for the service credit memo, in LCY, adjusted for any changes in the original item costs. ";
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=AdjProfitPct;
                ImplicitType=Decimal }

    { 3   ;2   ;Field     ;
                Name=LineQty;
                CaptionML=ENU=Quantity;
                ToolTipML=ENU=Specifies the quantity of all G/L account entries, costs, items and/or resource hours in the posted service credit memo.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=LineQty;
                ImplicitType=Decimal }

    { 13  ;2   ;Field     ;
                Name=TotalParcels;
                CaptionML=ENU=Parcels;
                ToolTipML=ENU=Specifies the total number of parcels in the posted service credit memo.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalParcels;
                ImplicitType=Decimal }

    { 7   ;2   ;Field     ;
                Name=TotalNetWeight;
                CaptionML=ENU=Net Weight;
                ToolTipML=ENU=Specifies the total net weight of the items in the posted service credit memo.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalNetWeight;
                ImplicitType=Decimal }

    { 10  ;2   ;Field     ;
                Name=TotalGrossWeight;
                CaptionML=ENU=Gross Weight;
                ToolTipML=ENU=Specifies the total gross weight of the items in the posted service credit memo.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalGrossWeight;
                ImplicitType=Decimal }

    { 17  ;2   ;Field     ;
                Name=TotalVolume;
                CaptionML=ENU=Volume;
                ToolTipML=ENU=Specifies the total volume of the items in the posted service credit memo.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalVolume;
                ImplicitType=Decimal }

    { 28  ;2   ;Field     ;
                Name=CostLCY;
                CaptionML=ENU=Original Cost (LCY);
                ToolTipML=ENU=Specifies the total cost (in LCY) of the G/L account entries, costs, items and/or resources on the posted service credit memo. The cost was calculated as a product of unit cost multiplied by quantity of the relevant items, resources and/or costs on the posted credit memo.;
                ApplicationArea=#Service;
                SourceExpr=CostLCY;
                AutoFormatType=1;
                ImplicitType=Decimal }

    { 43  ;2   ;Field     ;
                Name=TotalAdjCostLCY;
                CaptionML=ENU=Adjusted Cost (LCY);
                ToolTipML=ENU=Specifies the total cost, in LCY, of the items in the posted service credit memo, adjusted for any changes in the original costs of these items.;
                ApplicationArea=#Service;
                SourceExpr=TotalAdjCostLCY;
                AutoFormatType=1;
                ImplicitType=Decimal }

    { 41  ;2   ;Field     ;
                Name=CostAdjmtAmountLCY;
                CaptionML=ENU=Cost Adjmt. Amount (LCY);
                ToolTipML=ENU=Specifies the difference between the original cost and the total adjusted cost of the items in the posted service credit memo.;
                ApplicationArea=#Service;
                SourceExpr=TotalAdjCostLCY - CostLCY;
                AutoFormatType=1;
                OnLookup=BEGIN
                           LookupAdjmtValueEntries;
                         END;
                          }

    { 18  ;1   ;Part      ;
                Name=Subform;
                ApplicationArea=#Service;
                PagePartID="VAT Specification Subform";
                Editable=FALSE;
                PartType=Page }

    { 1903289601;1;Group  ;
                Name=Customer;
                CaptionML=ENU=Customer }

    { 24  ;2   ;Field     ;
                Name=Balance (LCY);
                CaptionML=ENU=Balance (LCY);
                ToolTipML=ENU=Specifies the balance in LCY on the customer's account.;
                ApplicationArea=#Service;
                SourceExpr=Cust."Balance (LCY)";
                AutoFormatType=1 }

    { 21  ;2   ;Field     ;
                Name=CreditLimitLCY;
                CaptionML=ENU=Credit Limit (LCY);
                ToolTipML=ENU=Specifies information about the customer's credit limit.;
                ApplicationArea=#Service;
                SourceExpr=Cust."Credit Limit (LCY)";
                AutoFormatType=1 }

    { 1   ;2   ;Field     ;
                Name=CreditLimitLCYExpendedPct;
                ExtendedDatatype=Ratio;
                CaptionML=ENU=Expended % of Credit Limit (LCY);
                ToolTipML=ENU=Specifies the expended percentage of the credit limit in (LCY).;
                ApplicationArea=#Service;
                SourceExpr=CreditLimitLCYExpendedPct;
                ImplicitType=Decimal }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=VAT Amount';
      Text001@1001 : TextConst 'ENU=%1% VAT';
      CurrExchRate@1002 : Record "Currency Exchange Rate";
      ServCrMemoLine@1003 : Record "Service Cr.Memo Line";
      Cust@1004 : Record Customer;
      TempVATAmountLine@1005 : TEMPORARY Record "VAT Amount Line";
      Currency@1022 : Record Currency;
      CustAmount@1006 : Decimal;
      AmountInclVAT@1007 : Decimal;
      InvDiscAmount@1008 : Decimal;
      VATAmount@1009 : Decimal;
      CostLCY@1010 : Decimal;
      ProfitLCY@1011 : Decimal;
      ProfitPct@1012 : Decimal;
      AdjProfitLCY@1024 : Decimal;
      AdjProfitPct@1023 : Decimal;
      TotalAdjCostLCY@1025 : Decimal;
      LineQty@1013 : Decimal;
      TotalNetWeight@1014 : Decimal;
      TotalGrossWeight@1015 : Decimal;
      TotalVolume@1016 : Decimal;
      TotalParcels@1017 : Decimal;
      AmountLCY@1018 : Decimal;
      CreditLimitLCYExpendedPct@1019 : Decimal;
      VATpercentage@1020 : Decimal;
      VATAmountText@1021 : Text[30];

    BEGIN
    END.
  }
}

