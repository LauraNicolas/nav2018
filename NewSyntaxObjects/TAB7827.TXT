OBJECT Table 7827 MS-QBO Failed Syncs
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=MS-QBO Failed Syncs;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Customer,Item,SalesInvoice;
                                                   OptionString=Customer,Item,SalesInvoice }
    { 2   ;   ;No.                 ;Code20        ;CaptionML=ENU=No. }
    { 3   ;   ;Short Error         ;Text250       ;CaptionML=ENU=Short Error }
    { 4   ;   ;Detailed Error      ;BLOB          ;CaptionML=ENU=Detailed Error }
  }
  KEYS
  {
    {    ;Type,"No."                              ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE Log@1(RecordIdToLog@1000 : RecordID;ErrorMessage@1001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String");
    BEGIN
      INIT;
      SetKeyFields(RecordIdToLog);
      WriteError(ErrorMessage);
      INSERT;
    END;

    LOCAL PROCEDURE WriteError@4(ErrorMessage@1000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String");
    VAR
      TypeHelper@1002 : Codeunit "Type Helper";
      RecordRef@1001 : RecordRef;
      FieldRef@1003 : FieldRef;
    BEGIN
      if ErrorMessage.Length > 250 then
        "Short Error" := ErrorMessage.Substring(0,250)
      else
        "Short Error" := ErrorMessage;
      RecordRef.GETTABLE(Rec);
      FieldRef := RecordRef.FIELD(FIELDNO("Detailed Error"));
      TypeHelper.WriteBlob(FieldRef,FORMAT(ErrorMessage));
      RecordRef.SETTABLE(Rec);
    END;

    PROCEDURE Clear@3(RecordIdToClear@1000 : RecordID);
    BEGIN
      SetKeyFields(RecordIdToClear);

      SETRANGE(Type,Type);
      SETRANGE("No.","No.");
      DELETEALL;
      RESET;
    END;

    PROCEDURE FoundFromRecordId@2(RecordIdToSearch@1001 : RecordID) : Boolean;
    VAR
      MSQBOFailedSyncs@1000 : Record "MS-QBO Failed Syncs";
    BEGIN
      SetKeyFields(RecordIdToSearch);
      exit(MSQBOFailedSyncs.FoundFromKeyValues(Type,"No."));
    END;

    PROCEDURE FoundFromKeyValues@8(TypeParam@1000 : Option;NumberParam@1001 : Code[20]) Result : Boolean;
    BEGIN
      SETRANGE(Type,TypeParam);
      SETRANGE("No.",NumberParam);
      Result := FINDFIRST;
      RESET;
    END;

    LOCAL PROCEDURE SetKeyFields@5(RecordIdToGetKeyValuesFrom@1000 : RecordID);
    VAR
      Item@1004 : Record Item;
      Customer@1003 : Record Customer;
      SalesInvoiceHeader@1002 : Record "Sales Invoice Header";
      RecordRef@1001 : RecordRef;
    BEGIN
      RecordRef.OPEN(RecordIdToGetKeyValuesFrom.TABLENO);
      RecordRef.GET(RecordIdToGetKeyValuesFrom);
      case RecordIdToGetKeyValuesFrom.TABLENO of
        DATABASE::Item:
          begin
            Type := Type::Item;
            RecordRef.SETTABLE(Item);
            "No." := Item."No.";
          end;
        DATABASE::Customer:
          begin
            Type := Type::Customer;
            RecordRef.SETTABLE(Customer);
            "No." := Customer."No.";
          end;
        DATABASE::"Sales Invoice Header":
          begin
            Type := Type::SalesInvoice;
            RecordRef.SETTABLE(SalesInvoiceHeader);
            "No." := SalesInvoiceHeader."No.";
          end;
      end;
    END;

    BEGIN
    END.
  }
}

