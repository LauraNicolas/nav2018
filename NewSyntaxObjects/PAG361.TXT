OBJECT Page 361 Res. Availability Lines
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Lines;
    SaveValues=true;
    InsertAllowed=false;
    DeleteAllowed=false;
    LinksAllowed=false;
    SourceTable=Date;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 RESET;
               END;

    OnFindRecord=BEGIN
                   exit(PeriodFormMgt.FindDate(Which,Rec,PeriodType));
                 END;

    OnNextRecord=BEGIN
                   exit(PeriodFormMgt.NextDate(Steps,Rec,PeriodType));
                 END;

    OnAfterGetRecord=BEGIN
                       SetDateFilter;
                       Res.CALCFIELDS(Capacity,"Qty. on Order (Job)","Qty. Quoted (Job)","Qty. on Service Order","Qty. on Assembly Order");
                       CapacityAfterOrders := Res.Capacity - Res."Qty. on Order (Job)";
                       CapacityAfterQuotes := CapacityAfterOrders - Res."Qty. Quoted (Job)";
                       NetAvailability := CapacityAfterQuotes - Res."Qty. on Service Order" - Res."Qty. on Assembly Order";
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Period Start;
                CaptionML=ENU=Period Start;
                ToolTipML=ENU=Specifies a series of dates according to the selected time interval.;
                ApplicationArea=#Jobs;
                SourceExpr="Period Start";
                ImplicitType=Date }

    { 14  ;2   ;Field     ;
                Name=Period Name;
                CaptionML=ENU=Period Name;
                ToolTipML=ENU=Specifies the name of the period shown in the line.;
                ApplicationArea=#Jobs;
                SourceExpr="Period Name";
                ImplicitType=Text31 }

    { 4   ;2   ;Field     ;
                Name=Capacity;
                CaptionML=ENU=Capacity;
                ToolTipML=ENU=Specifies the total capacity for the corresponding time period.;
                ApplicationArea=#Jobs;
                DecimalPlaces=0:5;
                SourceExpr=Res.Capacity }

    { 6   ;2   ;Field     ;
                Name=Qty. on Order (Job);
                CaptionML=ENU=Qty. on Order (Job);
                ToolTipML=ENU=Specifies the amount of measuring units allocated to jobs with the status order.;
                ApplicationArea=#Jobs;
                DecimalPlaces=0:5;
                SourceExpr=Res."Qty. on Order (Job)" }

    { 8   ;2   ;Field     ;
                Name=CapacityAfterOrders;
                CaptionML=ENU=Availability After Orders;
                ToolTipML=ENU=Specifies capacity minus the quantity on order.;
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr=CapacityAfterOrders;
                ImplicitType=Decimal }

    { 10  ;2   ;Field     ;
                Name=Job Quotes Allocation;
                CaptionML=ENU=Job Quotes Allocation;
                ToolTipML=ENU=Specifies the amount of measuring units allocated to jobs with the status quote.;
                ApplicationArea=#Jobs;
                DecimalPlaces=0:5;
                SourceExpr=Res."Qty. Quoted (Job)" }

    { 12  ;2   ;Field     ;
                Name=CapacityAfterQuotes;
                CaptionML=ENU=Availability After Quotes;
                ToolTipML=ENU="Specifies capacity, minus quantity on order (Job), minus quantity on service order, minus job quotes allocation. ";
                ApplicationArea=#Advanced;
                DecimalPlaces=0:5;
                SourceExpr=CapacityAfterQuotes;
                ImplicitType=Decimal }

    { 16  ;2   ;Field     ;
                Name=Qty. on Service Order;
                CaptionML=ENU=Qty. on Service Order;
                ToolTipML=ENU=Specifies how many units of the item are allocated to service orders, meaning listed on outstanding service order lines.;
                ApplicationArea=#Service;
                SourceExpr=Res."Qty. on Service Order" }

    { 3   ;2   ;Field     ;
                Name=QtyOnAssemblyOrder;
                CaptionML=ENU=Qty. on Assembly Order;
                ToolTipML=ENU=Specifies how many units of the item are allocated to assembly orders, which is how many are listed on outstanding assembly order headers.;
                ApplicationArea=#Jobs;
                SourceExpr=Res."Qty. on Assembly Order" }

    { 18  ;2   ;Field     ;
                Name=NetAvailability;
                CaptionML=ENU=Net Availability;
                ToolTipML=ENU=Specifies capacity, minus the quantity on order, minus the jobs quotes allocation.;
                ApplicationArea=#Jobs;
                SourceExpr=NetAvailability;
                AutoFormatType=1;
                ImplicitType=Decimal }

  }
  CODE
  {
    VAR
      Res@1006 : Record Resource;
      PeriodFormMgt@1003 : Codeunit PeriodFormManagement;
      CapacityAfterOrders@1002 : Decimal;
      CapacityAfterQuotes@1001 : Decimal;
      NetAvailability@1000 : Decimal;
      PeriodType@1004 : 'Day,Week,Month,Quarter,Year,"Accounting Period"';
      AmountType@1005 : '"Net Change","Balance at Date"';

    [External]
    PROCEDURE Set@1(VAR NewRes@1000 : Record Resource;NewPeriodType@1001 : Integer;NewAmountType@1002 : '"Net Change","Balance at Date"');
    BEGIN
      Res.COPY(NewRes);
      PeriodType := NewPeriodType;
      AmountType := NewAmountType;
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE SetDateFilter@4();
    BEGIN
      if AmountType = AmountType::"Net Change" then
        Res.SETRANGE("Date Filter","Period Start","Period End")
      else
        Res.SETRANGE("Date Filter",0D,"Period End");
    END;

    BEGIN
    END.
  }
}

