OBJECT Page 7504 Item Attribute Value List
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Item Attribute Values;
    LinksAllowed=false;
    SourceTable="Item Attribute Value Selection";
    DelayedInsert=true;
    PageType=ListPart;
    SourceTableTemporary=true;
    OnOpenPage=BEGIN
                 CurrPage.EDITABLE(true);
               END;

    OnDeleteRecord=BEGIN
                     DeleteItemAttributeValueMapping("Attribute ID");
                   END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=Attribute Name;
                AssistEdit=false;
                CaptionML=ENU=Attribute;
                ToolTipML=ENU=Specifies the item attribute.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Attribute Name";
                TableRelation="Item Attribute".Name WHERE (Blocked=CONST(false));
                OnValidate=VAR
                             ItemAttributeValue@1003 : Record "Item Attribute Value";
                             ItemAttributeValueMapping@1001 : Record "Item Attribute Value Mapping";
                           BEGIN
                             if xRec."Attribute Name" <> '' then
                               DeleteItemAttributeValueMapping(xRec."Attribute ID");

                             if not FindAttributeValue(ItemAttributeValue) then
                               InsertItemAttributeValue(ItemAttributeValue,Rec);

                             if ItemAttributeValue.GET(ItemAttributeValue."Attribute ID",ItemAttributeValue.ID) then begin
                               ItemAttributeValueMapping.RESET;
                               ItemAttributeValueMapping.INIT;
                               ItemAttributeValueMapping."Table ID" := DATABASE::Item;
                               ItemAttributeValueMapping."No." := RelatedRecordCode;
                               ItemAttributeValueMapping."Item Attribute ID" := ItemAttributeValue."Attribute ID";
                               ItemAttributeValueMapping."Item Attribute Value ID" := ItemAttributeValue.ID;
                               ItemAttributeValueMapping.INSERT;
                             end;
                           END;

                ImplicitType=Text250 }

    { 4   ;2   ;Field     ;
                Name=Value;
                CaptionML=ENU=Value;
                ToolTipML=ENU=Specifies the value of the item attribute.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Value;
                TableRelation=IF ("Attribute Type"=CONST(Option)) "Item Attribute Value".Value WHERE ("Attribute ID"=FIELD("Attribute ID"),
                                                                                                      Blocked=CONST(false));
                OnValidate=VAR
                             ItemAttributeValue@1003 : Record "Item Attribute Value";
                             ItemAttributeValueMapping@1002 : Record "Item Attribute Value Mapping";
                             ItemAttribute@1001 : Record "Item Attribute";
                           BEGIN
                             if not FindAttributeValue(ItemAttributeValue) then
                               InsertItemAttributeValue(ItemAttributeValue,Rec);

                             ItemAttributeValueMapping.SETRANGE("Table ID",DATABASE::Item);
                             ItemAttributeValueMapping.SETRANGE("No.",RelatedRecordCode);
                             ItemAttributeValueMapping.SETRANGE("Item Attribute ID",ItemAttributeValue."Attribute ID");

                             if ItemAttributeValueMapping.FINDFIRST then begin
                               ItemAttributeValueMapping."Item Attribute Value ID" := ItemAttributeValue.ID;
                               ItemAttributeValueMapping.MODIFY;

                               ItemAttribute.GET("Attribute ID");
                               ItemAttribute.RemoveUnusedArbitraryValues;
                             end;
                           END;

                ImplicitType=Text250 }

    { 2   ;2   ;Field     ;
                Name=Unit of Measure;
                ToolTipML=ENU=Specifies the unit of measure for the item attribute.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure";
                ImplicitType=Text30 }

  }
  CODE
  {
    VAR
      RelatedRecordCode@1000 : Code[20];

    [External]
    PROCEDURE LoadAttributes@1(ItemNo@1006 : Code[20]);
    VAR
      ItemAttributeValueMapping@1005 : Record "Item Attribute Value Mapping";
      TempItemAttributeValue@1004 : TEMPORARY Record "Item Attribute Value";
      ItemAttributeValue@1001 : Record "Item Attribute Value";
    BEGIN
      RelatedRecordCode := ItemNo;
      ItemAttributeValueMapping.SETRANGE("Table ID",DATABASE::Item);
      ItemAttributeValueMapping.SETRANGE("No.",ItemNo);
      if ItemAttributeValueMapping.FINDSET then
        repeat
          ItemAttributeValue.GET(ItemAttributeValueMapping."Item Attribute ID",ItemAttributeValueMapping."Item Attribute Value ID");
          TempItemAttributeValue.TRANSFERFIELDS(ItemAttributeValue);
          TempItemAttributeValue.INSERT;
        until ItemAttributeValueMapping.NEXT = 0;

      PopulateItemAttributeValueSelection(TempItemAttributeValue);
    END;

    LOCAL PROCEDURE DeleteItemAttributeValueMapping@2(AttributeToDeleteID@1002 : Integer);
    VAR
      ItemAttributeValueMapping@1001 : Record "Item Attribute Value Mapping";
      ItemAttribute@1000 : Record "Item Attribute";
    BEGIN
      ItemAttributeValueMapping.SETRANGE("Table ID",DATABASE::Item);
      ItemAttributeValueMapping.SETRANGE("No.",RelatedRecordCode);
      ItemAttributeValueMapping.SETRANGE("Item Attribute ID",AttributeToDeleteID);
      if ItemAttributeValueMapping.FINDFIRST then
        ItemAttributeValueMapping.DELETE;

      ItemAttribute.GET(AttributeToDeleteID);
      ItemAttribute.RemoveUnusedArbitraryValues;
    END;

    BEGIN
    END.
  }
}

