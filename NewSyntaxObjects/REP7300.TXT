OBJECT Report 7300 Calculate Bin Replenishment
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Calculate Bin Replenishment;
    ProcessingOnly=true;
  }
  DATASET
  {
    { 4810;    ;DataItem;Bin Content         ;
               DataItemTable="Bin Content";
               DataItemTableView=SORTING("Location Code","Item No.","Variant Code","Warehouse Class Code",Fixed,"Bin Ranking") ORDER(Descending) WHERE(Fixed=FILTER(true));
               OnPreDataItem=BEGIN
                               if GETFILTER("Location Code") <> '' then begin
                                 if GETFILTER("Location Code") <> LocationCode then
                                   ERROR(Text001,FIELDCAPTION("Location Code"),LocationCode);
                               end else
                                 SETRANGE("Location Code",LocationCode);

                               Replenishmt.SetWhseWorksheet(
                                 WhseWkshTemplateName,WhseWkshName,LocationCode,DoNotFillQtytoHandle);
                             END;

               OnAfterGetRecord=BEGIN
                                  Replenishmt.ReplenishBin("Bin Content",AllowBreakbulk);
                                END;

               OnPostDataItem=BEGIN
                                if not Replenishmt.InsertWhseWkshLine then
                                  if not HideDialog then
                                    MESSAGE(Text000);
                              END;

               ReqFilterFields="Bin Code","Item No." }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 5   ;2   ;Field     ;
                  Name=Allow Breakbulk;
                  CaptionML=ENU=Allow Breakbulk;
                  ToolTipML=ENU=Specifies that the bin will be replenished from bin content that is stored in another unit of measure if the item is not found in the original unit of measure.;
                  ApplicationArea=#Warehouse;
                  SourceExpr=AllowBreakbulk }

      { 7   ;2   ;Field     ;
                  Name=Do Not Fill Qty. to Handle;
                  CaptionML=ENU=Do Not Fill Qty. to Handle;
                  ToolTipML=ENU="Specifies that the Quantity to Handle field on each worksheet line must be filled manually. ";
                  ApplicationArea=#Warehouse;
                  SourceExpr=DoNotFillQtytoHandle }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Replenishmt@1000 : Codeunit Replenishment;
      WhseWkshTemplateName@1005 : Code[10];
      WhseWkshName@1004 : Code[10];
      LocationCode@1003 : Code[10];
      AllowBreakbulk@1001 : Boolean;
      HideDialog@1002 : Boolean;
      Text000@1006 : TextConst 'ENU=There is nothing to replenish.';
      DoNotFillQtytoHandle@1007 : Boolean;
      Text001@1008 : TextConst 'ENU=If you want to set a filter to field %1, it must be %2.';

    [External]
    PROCEDURE InitializeRequest@1(WhseWkshTemplateName2@1004 : Code[10];WhseWkshName2@1003 : Code[10];LocationCode2@1002 : Code[10];AllowBreakbulk2@1000 : Boolean;HideDialog2@1001 : Boolean;DoNotFillQtytoHandle2@1005 : Boolean);
    BEGIN
      WhseWkshTemplateName := WhseWkshTemplateName2;
      WhseWkshName := WhseWkshName2;
      LocationCode := LocationCode2;
      AllowBreakbulk := AllowBreakbulk2;
      HideDialog := HideDialog2;
      DoNotFillQtytoHandle := DoNotFillQtytoHandle2;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

