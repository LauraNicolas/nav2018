OBJECT Table 99000771 Production BOM Header
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    DataCaptionFields="No.",Description;
    OnInsert=BEGIN
               MfgSetup.GET;
               if "No." = '' then begin
                 MfgSetup.TESTFIELD("Production BOM Nos.");
                 NoSeriesMgt.InitSeries(MfgSetup."Production BOM Nos.",xRec."No. Series",0D,"No.","No. Series");
               end;

               "Creation Date" := TODAY;
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
             END;

    OnDelete=VAR
               Item@1000 : Record Item;
             BEGIN
               Item.SETRANGE("Production BOM No.","No.");
               if not Item.ISEMPTY then
                 ERROR(Text000);

               ProdBOMLine.SETRANGE("Production BOM No.","No.");
               ProdBOMLine.DELETEALL(true);

               ProdBOMVersion.SETRANGE("Production BOM No.","No.");
               ProdBOMVersion.DELETEALL;

               MfgComment.SETRANGE("Table Name",MfgComment."Table Name"::"Production BOM Header");
               MfgComment.SETRANGE("No.","No.");
               MfgComment.DELETEALL;
             END;

    OnRename=BEGIN
               if Status = Status::Certified then
                 ERROR(Text002,TABLECAPTION,FIELDCAPTION(Status),FORMAT(Status));
             END;

    CaptionML=ENU=Production BOM Header;
    LookupPageID="Production BOM List";
    DrillDownPageID="Production BOM List";
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=ENU=No. }
    { 10  ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                "Search Name" := Description;
                                                              END;

                                                   CaptionML=ENU=Description }
    { 11  ;   ;Description 2       ;Text50        ;CaptionML=ENU=Description 2 }
    { 12  ;   ;Search Name         ;Code50        ;CaptionML=ENU=Search Name }
    { 21  ;   ;Unit of Measure Code;Code10        ;TableRelation="Unit of Measure";
                                                   OnValidate=VAR
                                                                Item@1000 : Record Item;
                                                                ItemUnitOfMeasure@1001 : Record "Item Unit of Measure";
                                                              BEGIN
                                                                if Status = Status::Certified then
                                                                  FIELDERROR(Status);
                                                                Item.SETCURRENTKEY("Production BOM No.");
                                                                Item.SETRANGE("Production BOM No.","No.");
                                                                if Item.FINDSET then
                                                                  repeat
                                                                    ItemUnitOfMeasure.GET(Item."No.","Unit of Measure Code");
                                                                  until Item.NEXT = 0;
                                                              END;

                                                   CaptionML=ENU=Unit of Measure Code }
    { 22  ;   ;Low-Level Code      ;Integer       ;CaptionML=ENU=Low-Level Code;
                                                   Editable=false }
    { 25  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Manufacturing Comment Line" WHERE ("Table Name"=CONST("Production BOM Header"),
                                                                                                         "No."=FIELD("No.")));
                                                   CaptionML=ENU=Comment;
                                                   Editable=false }
    { 40  ;   ;Creation Date       ;Date          ;CaptionML=ENU=Creation Date;
                                                   Editable=false }
    { 43  ;   ;Last Date Modified  ;Date          ;CaptionML=ENU=Last Date Modified;
                                                   Editable=false }
    { 45  ;   ;Status              ;Option        ;OnValidate=VAR
                                                                PlanningAssignment@1000 : Record "Planning Assignment";
                                                                MfgSetup@1004 : Record "Manufacturing Setup";
                                                                ProdBOMCheck@1001 : Codeunit "Production BOM-Check";
                                                              BEGIN
                                                                if (Status <> xRec.Status) and (Status = Status::Certified) then begin
                                                                  MfgSetup.LOCKTABLE;
                                                                  MfgSetup.GET;
                                                                  ProdBOMCheck.ProdBOMLineCheck("No.",'');
                                                                  "Low-Level Code" := 0;
                                                                  ProdBOMCheck.RUN(Rec);
                                                                  PlanningAssignment.NewBOM("No.");
                                                                end;
                                                                if Status = Status::Closed then begin
                                                                  if CONFIRM(
                                                                       Text001,false)
                                                                  then begin
                                                                    ProdBOMVersion.SETRANGE("Production BOM No.","No.");
                                                                    if ProdBOMVersion.FIND('-') then
                                                                      repeat
                                                                        ProdBOMVersion.Status := ProdBOMVersion.Status::Closed;
                                                                        ProdBOMVersion.MODIFY;
                                                                      until ProdBOMVersion.NEXT = 0;
                                                                  end else
                                                                    Status := xRec.Status;
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=New,Certified,Under Development,Closed;
                                                   OptionString=New,Certified,"Under Development",Closed }
    { 50  ;   ;Version Nos.        ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Version Nos. }
    { 51  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
    {    ;"Search Name"                            }
    {    ;Description                              }
    {    ;Status                                   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=This Production BOM is being used on Items.';
      Text001@1001 : TextConst 'ENU=All versions attached to the BOM will be closed. Close BOM?';
      MfgSetup@1002 : Record "Manufacturing Setup";
      ProdBOMHeader@1004 : Record "Production BOM Header";
      ProdBOMVersion@1005 : Record "Production BOM Version";
      ProdBOMLine@1006 : Record "Production BOM Line";
      MfgComment@1007 : Record "Manufacturing Comment Line";
      NoSeriesMgt@1008 : Codeunit NoSeriesManagement;
      Text002@1009 : TextConst 'ENU=You cannot rename the %1 when %2 is %3.';

    [External]
    PROCEDURE AssistEdit@2(OldProdBOMHeader@1000 : Record "Production BOM Header") : Boolean;
    BEGIN
      with ProdBOMHeader do begin
        ProdBOMHeader := Rec;
        MfgSetup.GET;
        MfgSetup.TESTFIELD("Production BOM Nos.");
        if NoSeriesMgt.SelectSeries(MfgSetup."Production BOM Nos.",OldProdBOMHeader."No. Series","No. Series") then begin
          NoSeriesMgt.SetSeries("No.");
          Rec := ProdBOMHeader;
          exit(true);
        end;
      end;
    END;

    BEGIN
    END.
  }
}

