OBJECT Codeunit 5901 ServLoanerManagement
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "Loaner Entry"=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The %1 field is empty.';
      Text001@1001 : TextConst 'ENU=You cannot receive loaner %1 because it has not been lent.';
      Text002@1002 : TextConst 'ENU=Loaner no. %1 has not been lent connection with %2 no. %3.';
      Text003@1003 : TextConst 'ENU=There is no %1 to receive.';
      Text004@1004 : TextConst 'ENU="There is no loaner to receive on the service shipment item line document no.=%1,line no.=%2."';
      Text005@1005 : TextConst 'ENU=Do you want to receive loaner %1?';
      Text006@1006 : TextConst 'ENU=There is no service shipment header within the filter.\Filters: order no.: %1\Do you want to receive the loaner anyway?';

    [External]
    PROCEDURE LendLoaner@10(ServItemLine@1000 : Record "Service Item Line");
    VAR
      Loaner@1001 : Record Loaner;
      ServHeader@1003 : Record "Service Header";
      LoanerEntry@1002 : Record "Loaner Entry";
      ServLogMgt@1004 : Codeunit ServLogManagement;
    BEGIN
      if ServItemLine."Loaner No." <> '' then begin
        Loaner.GET(ServItemLine."Loaner No.");
        Loaner.CALCFIELDS(Lent);
        Loaner.TESTFIELD(Lent,false);
        Loaner.TESTFIELD(Blocked,false);

        LoanerEntry.LOCKTABLE;
        LoanerEntry.INIT;
        LoanerEntry."Entry No." := LoanerEntry.GetNextEntryNo;
        LoanerEntry."Loaner No." := ServItemLine."Loaner No.";
        LoanerEntry."Document Type" := ServItemLine."Document Type" + 1;
        LoanerEntry."Document No." := ServItemLine."Document No.";
        LoanerEntry."Service Item Line No." := ServItemLine."Line No.";
        LoanerEntry."Service Item No." := ServItemLine."Service Item No.";
        LoanerEntry."Service Item Group Code" := ServItemLine."Service Item Group Code";
        if ServHeader.GET(ServItemLine."Document Type",ServItemLine."Document No.") then
          LoanerEntry."Customer No." := ServHeader."Customer No.";
        LoanerEntry."Date Lent" := WORKDATE;
        LoanerEntry."Time Lent" := TIME;
        LoanerEntry."Date Received" := 0D;
        LoanerEntry."Time Received" := 000000T;
        LoanerEntry.Lent := true;
        LoanerEntry.INSERT;
        CLEAR(ServLogMgt);
        ServLogMgt.LoanerLent(LoanerEntry);
      end else
        ERROR(Text000,ServItemLine.FIELDCAPTION("Loaner No."));
    END;

    [External]
    PROCEDURE ReceiveLoaner@11(VAR ServItemLine@1000 : Record "Service Item Line");
    VAR
      Loaner@1001 : Record Loaner;
      LoanerEntry@1002 : Record "Loaner Entry";
      ServLogMgt@1003 : Codeunit ServLogManagement;
    BEGIN
      if ServItemLine."Loaner No." <> '' then begin
        if not CONFIRM(Text005,true,ServItemLine."Loaner No.") then
          exit;
        LoanerEntry.RESET;
        LoanerEntry.SETCURRENTKEY("Document Type","Document No.","Loaner No.",Lent);
        LoanerEntry.SETRANGE("Document Type",ServItemLine."Document Type" + 1);
        LoanerEntry.SETRANGE("Document No.",ServItemLine."Document No.");
        LoanerEntry.SETRANGE("Loaner No.",ServItemLine."Loaner No.");
        LoanerEntry.SETRANGE(Lent,true);
        if LoanerEntry.FINDFIRST then begin
          LoanerEntry."Date Received" := WORKDATE;
          LoanerEntry."Time Received" := TIME;
          LoanerEntry.Lent := false;
          LoanerEntry.MODIFY;
          ServItemLine."Loaner No." := '';
          ServItemLine.MODIFY;
          CLEAR(ServLogMgt);
          ServLogMgt.LoanerReceived(LoanerEntry);
          ClearLoanerField(ServItemLine."Document No.",ServItemLine."Line No.",LoanerEntry."Loaner No.");
        end else
          ERROR(
            Text002,ServItemLine."Loaner No.",
            FORMAT(ServItemLine."Document Type"),ServItemLine."Document No.");
      end else
        ERROR(Text003,Loaner.TABLECAPTION);
    END;

    [External]
    PROCEDURE ReceiveLoanerShipment@2(ServShipmentItemLine@1000 : Record "Service Shipment Item Line");
    VAR
      LoanerEntry@1002 : Record "Loaner Entry";
      ServShptHeader@1004 : Record "Service Shipment Header";
      ServLogMgt@1003 : Codeunit ServLogManagement;
    BEGIN
      with ServShipmentItemLine do
        if "Loaner No." = '' then
          ERROR(Text004,"No.","Line No.");

      if not CONFIRM(Text005,true,ServShipmentItemLine."Loaner No.") then
        exit;
      ServShptHeader.GET(ServShipmentItemLine."No.");
      LoanerEntry.RESET;
      LoanerEntry.SETCURRENTKEY("Document Type","Document No.","Loaner No.",Lent);
      LoanerEntry.SETRANGE("Document Type",LoanerEntry."Document Type"::Order);
      LoanerEntry.SETRANGE("Document No.",ServShptHeader."Order No.");
      LoanerEntry.SETRANGE("Loaner No.",ServShipmentItemLine."Loaner No.");
      LoanerEntry.SETRANGE(Lent,true);
      if LoanerEntry.FINDFIRST then begin
        LoanerEntry."Date Received" := WORKDATE;
        LoanerEntry."Time Received" := TIME;
        LoanerEntry.Lent := false;
        LoanerEntry.MODIFY;
        ServShipmentItemLine."Loaner No." := '';
        ServShipmentItemLine.MODIFY;
        CLEAR(ServLogMgt);
        ServLogMgt.LoanerReceived(LoanerEntry);
        ClearLoanerField(ServShptHeader."Order No.",ServShipmentItemLine."Line No.",LoanerEntry."Loaner No.");
      end else
        ERROR(
          Text002,ServShipmentItemLine."Loaner No.",
          ServShipmentItemLine.FIELDCAPTION("No."),ServShipmentItemLine."No.");
    END;

    LOCAL PROCEDURE ClearLoanerField@4(OrderNo@1000 : Code[20];LineNo@1001 : Integer;LoanerNo@1006 : Code[20]);
    VAR
      ServShptHeader@1002 : Record "Service Shipment Header";
      ServShptItemLine@1003 : Record "Service Shipment Item Line";
      ServiceHeader@1004 : Record "Service Header";
      ServItemLine@1005 : Record "Service Item Line";
    BEGIN
      if ServItemLine.GET(ServiceHeader."Document Type"::Order,OrderNo,LineNo) then
        if ServItemLine."Loaner No." = LoanerNo then begin
          ServItemLine."Loaner No." := '';
          ServItemLine.MODIFY;
        end;

      ServShptHeader.RESET;
      ServShptHeader.SETCURRENTKEY("Order No.");
      ServShptHeader.SETRANGE("Order No.",OrderNo);
      if ServShptHeader.FIND('-') then
        repeat
          ServShptItemLine.RESET;
          if ServShptItemLine.GET(ServShptHeader."No.",LineNo) then
            if ServShptItemLine."Loaner No." = LoanerNo then begin
              ServShptItemLine."Loaner No." := '';
              ServShptItemLine.MODIFY;
            end;
        until ServShptHeader.NEXT = 0;
    END;

    [External]
    PROCEDURE Receive@3(VAR Loaner@1000 : Record Loaner);
    VAR
      ServItemLine@1002 : Record "Service Item Line";
      LoanerEntry@1001 : Record "Loaner Entry";
      ServShptItemLine@1004 : Record "Service Shipment Item Line";
      ServShptHeader@1003 : Record "Service Shipment Header";
    BEGIN
      with Loaner do
        if Lent then begin
          CLEAR(LoanerEntry);
          LoanerEntry.SETCURRENTKEY("Document Type","Document No.","Loaner No.",Lent);
          LoanerEntry.SETRANGE("Document Type","Document Type");
          LoanerEntry.SETRANGE("Document No.","Document No.");
          LoanerEntry.SETRANGE("Loaner No.","No.");
          LoanerEntry.SETRANGE(Lent,true);

          if LoanerEntry.FINDFIRST then
            if ServItemLine.GET(LoanerEntry."Document Type" - 1,LoanerEntry."Document No.",LoanerEntry."Service Item Line No.") then
              ReceiveLoaner(ServItemLine)
            else begin
              ServShptHeader.RESET;
              ServShptHeader.SETCURRENTKEY("Order No.");
              ServShptHeader.SETRANGE("Order No.",LoanerEntry."Document No.");
              if ServShptHeader.FINDLAST then begin
                ServShptItemLine.GET(ServShptHeader."No.",LoanerEntry."Service Item Line No.");
                ReceiveLoanerShipment(ServShptItemLine);
              end else
                if CONFIRM(Text006,false,LoanerEntry."Document No.") then begin
                  // receive loaner anyway
                  LoanerEntry."Date Received" := WORKDATE;
                  LoanerEntry."Time Received" := TIME;
                  LoanerEntry.Lent := false;
                  LoanerEntry.MODIFY;
                end;
            end;
        end else
          ERROR(Text001,"No.");
    END;

    BEGIN
    END.
  }
}

