OBJECT Codeunit 1309 O365 Getting Started Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [External]
    PROCEDURE LaunchWizard@4(UserInitiated@1000 : Boolean;TourCompleted@1003 : Boolean) : Boolean;
    BEGIN
      exit(CheckOrLaunchWizard(UserInitiated,TourCompleted,true));
    END;

    [External]
    PROCEDURE WizardHasToBeLaunched@19(UserInitiated@1000 : Boolean) : Boolean;
    BEGIN
      exit(CheckOrLaunchWizard(UserInitiated,false,false));
    END;

    LOCAL PROCEDURE CheckOrLaunchWizard@25(UserInitiated@1000 : Boolean;TourCompleted@1003 : Boolean;Launch@1007 : Boolean) : Boolean;
    VAR
      O365GettingStarted@1001 : Record "O365 Getting Started";
      CompanyInformationMgt@1004 : Codeunit "Company Information Mgt.";
      PermissionManager@1006 : Codeunit "Permission Manager";
      WizardHasBeenShownToUser@1002 : Boolean;
      PageToStart@1005 : Integer;
    BEGIN
      if not UserHasPermissionsToRunGettingStarted then
        exit(false);

      if not CompanyInformationMgt.IsDemoCompany then
        exit(false);

      PageToStart := GetPageToStart;
      if PageToStart <= 0 then
        exit(false);

      WizardHasBeenShownToUser := O365GettingStarted.GET(USERID,CURRENTCLIENTTYPE);

      if not WizardHasBeenShownToUser then begin
        EnsurePayPalDemoAccountExists;
        O365GettingStarted.OnO365DemoCompanyInitialize;
        if Launch then begin
          COMMIT;
          PAGE.RUNMODAL(PageToStart);
        end;
        exit(true);
      end;

      if (not O365GettingStarted."Tour in Progress") and (not UserInitiated) then
        exit(false);

      if UserInitiated then begin
        if Launch then begin
          COMMIT;
          PAGE.RUNMODAL(PageToStart);
        end;
        exit(true);
      end;

      if O365GettingStarted."Tour in Progress" then begin
        if CURRENTCLIENTTYPE in [CLIENTTYPE::Phone,CLIENTTYPE::Tablet,CLIENTTYPE::Desktop] then
          exit(false);

        if Launch then begin
          COMMIT;
          if TourCompleted and not PermissionManager.IsSandboxConfiguration then
            PAGE.RUNMODAL(PAGE::"O365 Tour Complete")
          else
            PAGE.RUNMODAL(PageToStart);
        end;
        exit(true);
      end;

      exit(false);
    END;

    [External]
    PROCEDURE UpdateGettingStartedVisible@2(VAR TileGettingStartedVisible@1003 : Boolean;VAR TileRestartGettingStartedVisible@1004 : Boolean);
    VAR
      O365GettingStarted@1001 : Record "O365 Getting Started";
      PermissionManager@1000 : Codeunit "Permission Manager";
    BEGIN
      TileGettingStartedVisible := false;
      TileRestartGettingStartedVisible := false;

      if not UserHasPermissionsToRunGettingStarted then
        exit;

      if not IsGettingStartedSupported then
        exit;

      if PermissionManager.IsSandboxConfiguration then
        exit;

      TileRestartGettingStartedVisible := true;

      if not O365GettingStarted.GET(USERID,CURRENTCLIENTTYPE) then
        exit;

      TileGettingStartedVisible := O365GettingStarted."Tour in Progress";
      TileRestartGettingStartedVisible := not TileGettingStartedVisible;
    END;

    [External]
    PROCEDURE IsGettingStartedSupported@9() : Boolean;
    VAR
      CompanyInformationMgt@1000 : Codeunit "Company Information Mgt.";
    BEGIN
      exit((CURRENTCLIENTTYPE in [CLIENTTYPE::Web,CLIENTTYPE::Phone,CLIENTTYPE::Tablet,CLIENTTYPE::Desktop]) and
        CompanyInformationMgt.IsDemoCompany);
    END;

    [External]
    PROCEDURE AreUserToursEnabled@22() : Boolean;
    BEGIN
      exit(CURRENTCLIENTTYPE = CLIENTTYPE::Web);
    END;

    [External]
    PROCEDURE GetGettingStartedTourID@3() : Integer;
    BEGIN
      exit(173706);
    END;

    [External]
    PROCEDURE GetInvoicingTourID@5() : Integer;
    BEGIN
      exit(174204);
    END;

    [External]
    PROCEDURE GetReportingTourID@6() : Integer;
    BEGIN
      exit(174207);
    END;

    [External]
    PROCEDURE GetChangeCompanyTourID@7() : Integer;
    BEGIN
      exit(174206);
    END;

    [External]
    PROCEDURE GetWizardDoneTourID@1() : Integer;
    BEGIN
      exit(176849);
    END;

    [External]
    PROCEDURE GetReturnToGettingStartedTourID@8() : Integer;
    BEGIN
      exit(176291);
    END;

    [External]
    PROCEDURE GetDevJourneyTourID@10() : Integer;
    BEGIN
      exit(195457);
    END;

    [External]
    PROCEDURE GetWhatIsNewTourID@18() : Integer;
    BEGIN
      exit(199410);
    END;

    LOCAL PROCEDURE EnsurePayPalDemoAccountExists@12();
    VAR
      AllObj@1000 : Record AllObj;
    BEGIN
      AllObj.SETRANGE("Object Type",AllObj."Object Type"::Codeunit);
      AllObj.SETRANGE("Object ID",1072);
      if not AllObj.FINDFIRST then
        exit;

      if CODEUNIT.RUN(AllObj."Object ID") then
        COMMIT;
    END;

    [External]
    PROCEDURE GetAddItemTourID@11() : Integer;
    BEGIN
      exit(237373);
    END;

    [External]
    PROCEDURE GetAddCustomerTourID@14() : Integer;
    BEGIN
      exit(239510);
    END;

    [External]
    PROCEDURE GetCreateSalesOrderTourID@15() : Integer;
    BEGIN
      exit(240566);
    END;

    [External]
    PROCEDURE GetCreateSalesInvoiceTourID@16() : Integer;
    BEGIN
      exit(240561);
    END;

    [External]
    PROCEDURE WizardShouldBeOpenedForDevices@17() : Boolean;
    VAR
      O365GettingStarted@1002 : Record "O365 Getting Started";
      PermissionManager@1001 : Codeunit "Permission Manager";
      CompanyInformationMgt@1000 : Codeunit "Company Information Mgt.";
    BEGIN
      if not (CURRENTCLIENTTYPE in [CLIENTTYPE::Tablet,CLIENTTYPE::Phone,CLIENTTYPE::Desktop]) then
        exit(false);

      if not UserHasPermissionsToRunGettingStarted then
        exit(false);

      if not PermissionManager.SoftwareAsAService then
        exit(false);

      if not CompanyInformationMgt.IsDemoCompany then
        exit(false);

      exit(not O365GettingStarted.GET(USERID,CURRENTCLIENTTYPE));
    END;

    [External]
    PROCEDURE GetAccountantTourID@20() : Integer;
    BEGIN
      exit(363941);
    END;

    LOCAL PROCEDURE GetPageToStart@13() : Integer;
    VAR
      PermissionManager@1001 : Codeunit "Permission Manager";
    BEGIN
      if PermissionManager.IsSandboxConfiguration then begin
        if CURRENTCLIENTTYPE = CLIENTTYPE::Web then
          exit(PAGE::"O365 Developer Welcome");
        exit(-1)
      end;

      if CURRENTCLIENTTYPE in [CLIENTTYPE::Phone,CLIENTTYPE::Tablet,CLIENTTYPE::Desktop] then begin
        if PermissionManager.SoftwareAsAService then
          exit(PAGE::"O365 Getting Started Device");
        exit(-1);
      end;
      exit(PAGE::"O365 Getting Started");
    END;

    LOCAL PROCEDURE UserHasPermissionsToRunGettingStarted@21() : Boolean;
    VAR
      DummyO365GettingStarted@1001 : Record "O365 Getting Started";
    BEGIN
      if not DummyO365GettingStarted.READPERMISSION then
        exit(false);

      if not DummyO365GettingStarted.WRITEPERMISSION then
        exit(false);

      exit(true);
    END;

    BEGIN
    END.
  }
}

