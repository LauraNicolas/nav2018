OBJECT Table 750 Standard General Journal
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnDelete=VAR
               StdGenJnlLine@1000 : Record "Standard General Journal Line";
             BEGIN
               StdGenJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
               StdGenJnlLine.SETRANGE("Standard Journal Code",Code);

               StdGenJnlLine.DELETEALL(true);
             END;

    CaptionML=ENU=Standard General Journal;
    LookupPageID="Standard General Journals";
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="Gen. Journal Template";
                                                   CaptionML=ENU=Journal Template Name;
                                                   NotBlank=true }
    { 2   ;   ;Code                ;Code10        ;CaptionML=ENU=Code;
                                                   NotBlank=true }
    { 3   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
  }
  KEYS
  {
    {    ;"Journal Template Name",Code            ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GenJnlBatch@1008 : Record "Gen. Journal Batch";
      LastGenJnlLine@1007 : Record "Gen. Journal Line";
      GenJnlLine@1006 : Record "Gen. Journal Line";
      Window@1003 : Dialog;
      WindowUpdateDateTime@1002 : DateTime;
      NoOfJournalsToBeCreated@1001 : Integer;
      Text000@1004 : TextConst 'ENU=Getting Standard General Journal Lines @1@@@@@@@';
      NoOfJournalsCreated@1005 : Integer;

    [External]
    PROCEDURE CreateGenJnlFromStdJnl@1(StdGenJnl@1005 : Record "Standard General Journal";JnlBatchName@1003 : Code[10]);
    VAR
      StdGenJnlLine@1000 : Record "Standard General Journal Line";
    BEGIN
      Initialize(StdGenJnl,JnlBatchName);

      StdGenJnlLine.SETRANGE("Journal Template Name",StdGenJnl."Journal Template Name");
      StdGenJnlLine.SETRANGE("Standard Journal Code",StdGenJnl.Code);
      OpenWindow(Text000,StdGenJnlLine.COUNT);
      if StdGenJnlLine.FIND('-') then
        repeat
          UpdateWindow;
          CopyGenJnlFromStdJnl(StdGenJnlLine);
        until StdGenJnlLine.NEXT = 0;
    END;

    [External]
    PROCEDURE Initialize@15(VAR StdGenJnl@1001 : Record "Standard General Journal";JnlBatchName@1000 : Code[10]);
    BEGIN
      GenJnlLine."Journal Template Name" := StdGenJnl."Journal Template Name";
      GenJnlLine."Journal Batch Name" := JnlBatchName;
      GenJnlLine.SETRANGE("Journal Template Name",StdGenJnl."Journal Template Name");
      GenJnlLine.SETRANGE("Journal Batch Name",JnlBatchName);

      LastGenJnlLine.SETRANGE("Journal Template Name",StdGenJnl."Journal Template Name");
      LastGenJnlLine.SETRANGE("Journal Batch Name",JnlBatchName);

      if LastGenJnlLine.FINDLAST then;

      GenJnlBatch.SETRANGE("Journal Template Name",StdGenJnl."Journal Template Name");
      GenJnlBatch.SETRANGE(Name,JnlBatchName);

      if GenJnlBatch.FINDFIRST then;
    END;

    LOCAL PROCEDURE CopyGenJnlFromStdJnl@3(StdGenJnlLine@1001 : Record "Standard General Journal Line");
    VAR
      GenJnlManagement@1000 : Codeunit GenJnlManagement;
      Balance@1007 : Decimal;
      TotalBalance@1006 : Decimal;
      ShowBalance@1005 : Boolean;
      ShowTotalBalance@1004 : Boolean;
    BEGIN
      GenJnlLine.INIT;
      GenJnlLine."Line No." := 0;
      GenJnlManagement.CalcBalance(GenJnlLine,LastGenJnlLine,Balance,TotalBalance,ShowBalance,ShowTotalBalance);
      GenJnlLine.SetUpNewLine(LastGenJnlLine,Balance,true);
      if LastGenJnlLine."Line No." <> 0 then
        GenJnlLine."Line No." := LastGenJnlLine."Line No." + 10000
      else
        GenJnlLine."Line No." := 10000;

      GenJnlLine.TRANSFERFIELDS(StdGenJnlLine,false);
      GenJnlLine.UpdateLineBalance;
      GenJnlLine."Currency Factor" := 0;
      GenJnlLine.VALIDATE("Currency Code");

      if GenJnlLine."VAT Prod. Posting Group" <> '' then
        GenJnlLine.VALIDATE("VAT Prod. Posting Group");
      if (GenJnlLine."VAT %" <> 0) and GenJnlBatch."Allow VAT Difference" then
        GenJnlLine.VALIDATE("VAT Amount",StdGenJnlLine."VAT Amount");
      GenJnlLine.VALIDATE("Bal. VAT Prod. Posting Group");
      GenJnlLine."Dimension Set ID" := StdGenJnlLine."Dimension Set ID";
      if GenJnlBatch."Allow VAT Difference" then
        GenJnlLine.VALIDATE("Bal. VAT Amount",StdGenJnlLine."Bal. VAT Amount");
      GenJnlLine.INSERT(true);

      LastGenJnlLine := GenJnlLine;
    END;

    LOCAL PROCEDURE OpenWindow@12(DisplayText@1001 : Text[250];NoOfJournalsToBeCreated2@1000 : Integer);
    BEGIN
      NoOfJournalsCreated := 0;
      NoOfJournalsToBeCreated := NoOfJournalsToBeCreated2;
      WindowUpdateDateTime := CURRENTDATETIME;
      Window.OPEN(DisplayText);
    END;

    LOCAL PROCEDURE UpdateWindow@4();
    BEGIN
      NoOfJournalsCreated := NoOfJournalsCreated + 1;
      if CURRENTDATETIME - WindowUpdateDateTime >= 300 then begin
        WindowUpdateDateTime := CURRENTDATETIME;
        Window.UPDATE(1,ROUND(NoOfJournalsCreated / NoOfJournalsToBeCreated * 10000,1));
      end;
    END;

    BEGIN
    END.
  }
}

