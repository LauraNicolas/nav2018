OBJECT Report 6034 Remove Lines from Contract
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Remove Lines from Contract;
    ProcessingOnly=true;
    OnInitReport=BEGIN
                   DelToDate := WORKDATE;
                   ServMgtSetup.GET;
                 END;

    OnPreReport=BEGIN
                  CreateCreditfromContractLines.InitVariables;
                END;

    OnPostReport=BEGIN
                   if DeleteLines = DeleteLines::"Delete Lines" then
                     if LinesRemoved > 1 then
                       MESSAGE(Text000,LinesRemoved)
                     else
                       MESSAGE(Text001,LinesRemoved);

                   if CreditMemoCreated = 1 then
                     MESSAGE(Text006);

                   if CreditMemoCreated > 1 then
                     MESSAGE(Text007);
                   CreateCreditfromContractLines.InitVariables;
                 END;

  }
  DATASET
  {
    { 6062;    ;DataItem;Service Contract Line;
               DataItemTable="Service Contract Line";
               DataItemTableView=SORTING("Contract Type","Contract No.",Credited,"New Line") WHERE("Contract Type"=CONST(Contract),"Contract Status"=CONST(Signed),"New Line"=CONST(false));
               OnPreDataItem=BEGIN
                               if DeleteLines = DeleteLines::"Print Only" then begin
                                 CLEAR(ExpiredContractLinesTest);
                                 ExpiredContractLinesTest.InitVariables(DelToDate,ReasonCode);
                                 ExpiredContractLinesTest.SETTABLEVIEW("Service Contract Line");
                                 ExpiredContractLinesTest.RUNMODAL;
                                 CurrReport.BREAK;
                               end;

                               if DelToDate = 0D then
                                 ERROR(Text002);
                               ServMgtSetup.GET;
                               if ServMgtSetup."Use Contract Cancel Reason" then
                                 if ReasonCode = '' then
                                   ERROR(Text003);
                               SETFILTER("Contract Expiration Date",'<>%1&<=%2',0D,DelToDate);

                               Window.OPEN(
                                 Text004 +
                                 '@1@@@@@@@@@@@@@@@@@@@@@@@@@@@');
                               i := COUNT;
                               j := 0;
                               LinesRemoved := 0;
                               LastContractNo := '';
                               CreditMemoCreated := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  j := j + 1;
                                  Window.UPDATE(1,ROUND(j / i * 10000,1));

                                  if LastContractNo <> "Contract No." then begin
                                    LastContractNo := "Contract No.";
                                    ServContract.GET("Contract Type","Contract No.");
                                    FiledServContract.FileContract(ServContract);
                                    if ServContract."Automatic Credit Memos" and
                                       ("Credit Memo Date" > 0D) and
                                       CreditMemoBaseExists
                                    then
                                      CreditMemoCreated := CreditMemoCreated + 1;
                                  end;
                                  SuspendStatusCheck(true);
                                  DELETE(true);

                                  LinesRemoved := LinesRemoved + 1;
                                END;

               ReqFilterFields="Contract No.","Service Item No." }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 5   ;2   ;Field     ;
                  Name=Remove Lines to;
                  CaptionML=ENU=Remove Lines to;
                  ToolTipML=ENU=Specifies the date up to which you want to remove contract lines. The batch job includes contract lines with contract expiration dates on or before this date.;
                  ApplicationArea=#Service;
                  SourceExpr=DelToDate }

      { 1   ;2   ;Field     ;
                  Name=ReasonCode;
                  CaptionML=ENU=Reason Code;
                  ToolTipML=ENU=Specifies the reason code for the removal of lines from the contract. To see the existing reason codes, choose the Filter field.;
                  ApplicationArea=#Service;
                  SourceExpr=ReasonCode;
                  OnValidate=BEGIN
                               ReasonCode2.GET(ReasonCode);
                             END;

                  OnLookup=BEGIN
                             ReasonCode2.RESET;
                             ReasonCode2.Code := ReasonCode;
                             if PAGE.RUNMODAL(0,ReasonCode2) = ACTION::LookupOK then begin
                               ReasonCode2.GET(ReasonCode2.Code);
                               ReasonCode := ReasonCode2.Code;
                             end;
                           END;
                            }

      { 7   ;2   ;Field     ;
                  Name=Reason Code;
                  CaptionML=ENU=Reason Code Description;
                  ToolTipML=ENU=Specifies a description of the Reason Code.;
                  ApplicationArea=#Service;
                  SourceExpr=ReasonCode2.Description;
                  Editable=FALSE }

      { 10  ;2   ;Field     ;
                  Name=Action;
                  CaptionML=ENU=Action;
                  ToolTipML=ENU=Specifies the desired action relating to removing expired contract lines from service contracts.;
                  OptionCaptionML=ENU=Delete Lines,Print Only;
                  ApplicationArea=#Service;
                  SourceExpr=DeleteLines }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 contract lines were removed.';
      Text001@1001 : TextConst 'ENU=%1 contract line was removed.';
      Text002@1002 : TextConst 'ENU=You must fill in the Remove Lines to field.';
      Text003@1003 : TextConst 'ENU=You must fill in the Reason Code field.';
      Text004@1004 : TextConst 'ENU=Removing contract lines... \\';
      ServMgtSetup@1006 : Record "Service Mgt. Setup";
      ServContract@1007 : Record "Service Contract Header";
      FiledServContract@1008 : Record "Filed Service Contract Header";
      ReasonCode2@1009 : Record "Reason Code";
      ExpiredContractLinesTest@1022 : Report "Expired Contract Lines - Test";
      CreateCreditfromContractLines@1010 : Codeunit CreateCreditfromContractLines;
      Window@1012 : Dialog;
      i@1013 : Integer;
      j@1014 : Integer;
      LinesRemoved@1015 : Integer;
      DelToDate@1017 : Date;
      DeleteLines@1018 : '"Delete Lines","Print Only"';
      ReasonCode@1019 : Code[10];
      LastContractNo@1020 : Code[20];
      Text006@1023 : TextConst 'ENU=A credit memo was created/updated.';
      CreditMemoCreated@1011 : Integer;
      Text007@1016 : TextConst 'ENU=Credit memos were created/updated.';

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

