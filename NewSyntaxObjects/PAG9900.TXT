OBJECT Page 9900 Import Data
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=true;
    CaptionML=ENU=Import Data;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    SourceTable=Company;
    PageType=StandardDialog;
    SourceTableTemporary=true;
    OnInit=VAR
             PermissionManager@1000 : Codeunit "Permission Manager";
           BEGIN
             OriginalTenantId := '';
             ContainsApplication := false;
             ContainsApplicationData := false;
             ContainsGlobalData := false;
             IncludeApplicationDataVisible := not PermissionManager.SoftwareAsAService;
           END;

    OnAfterGetRecord=BEGIN
                       Selected := SelectedCompany.GET(Name);
                     END;

    OnQueryClosePage=BEGIN
                       if CloseAction = ACTION::OK then begin
                         if IncludeApplicationData or IncludeGlobalData then begin
                           if not CONFIRM(OverwriteQst,false) then
                             exit(false);
                         end;
                         if IMPORTDATA(
                              false,
                              FileName,
                              IncludeApplicationData,
                              IncludeGlobalData,
                              SelectedCompany)
                         then begin
                           MESSAGE(CompletedMsg);
                           exit(true)
                         end;
                         exit(false);
                       end;
                     END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=General;
                CaptionML=ENU=General;
                GroupType=Group }

    { 12  ;2   ;Field     ;
                Name=FileName;
                Lookup=false;
                DrillDown=false;
                AssistEdit=true;
                CaptionML=ENU=File Name;
                ToolTipML=ENU=Specifies the name and location of the .navdata file that you want to import data from.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=FileName;
                Editable=TRUE;
                OnValidate=VAR
                             Companies@1000 : TEMPORARY Record Company;
                           BEGIN
                             if not DATAFILEINFORMATION(
                                  false,
                                  FileName,
                                  Description,
                                  ContainsApplication,
                                  ContainsApplicationData,
                                  ContainsGlobalData,
                                  OriginalTenantId,
                                  ExportDate,
                                  Companies)
                             then
                               exit;

                             DELETEALL;
                             ContainsCompanies := Companies.FINDSET;
                             if ContainsCompanies then
                               repeat
                                 Rec := Companies;
                                 INSERT;
                               until Companies.NEXT = 0;

                             IncludeApplicationData := false;
                             IncludeGlobalData := false;
                             IncludeAllCompanies := ContainsCompanies;

                             MarkAll;
                           END;

                OnAssistEdit=VAR
                               Companies@1000 : TEMPORARY Record Company;
                             BEGIN
                               if not DATAFILEINFORMATION(
                                    true,
                                    FileName,
                                    Description,
                                    ContainsApplication,
                                    ContainsApplicationData,
                                    ContainsGlobalData,
                                    OriginalTenantId,
                                    ExportDate,
                                    Companies)
                               then
                                 exit;

                               DELETEALL;
                               ContainsCompanies := Companies.FINDSET;
                               if ContainsCompanies then
                                 repeat
                                   Rec := Companies;
                                   INSERT;
                                 until Companies.NEXT = 0;

                               IncludeApplicationData := false;
                               IncludeGlobalData := false;
                               IncludeAllCompanies := ContainsCompanies;

                               MarkAll;
                             END;

                ImplicitType=Text }

    { 6   ;2   ;Field     ;
                Name=TenantId;
                CaptionML=ENU=Tenant ID;
                ToolTipML=ENU=Specifies the ID of the tenant that is accessed when you run objects from the development environment. If your solution is not set up to deploy in a multitenant deployment architecture, leave the parameter empty.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TENANTID;
                Editable=FALSE }

    { 3   ;2   ;Field     ;
                Name=Description;
                CaptionML=ENU=Description;
                ToolTipML=ENU=Specifies a description of the data to be imported.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Editable=FALSE;
                ImplicitType=Text }

    { 7   ;2   ;Field     ;
                Name=ExportDate;
                CaptionML=ENU=Date of Export;
                ToolTipML=ENU=Specifies when the data was exported.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ExportDate;
                Editable=FALSE;
                ImplicitType=DateTime }

    { 13  ;2   ;Group     ;
                Name=Import;
                CaptionML=ENU=Import;
                GroupType=Group }

    { 14  ;3   ;Field     ;
                Name=IncludeAllCompanies;
                CaptionML=ENU=All Companies;
                ToolTipML=ENU=Specifies that data in all the companies will be imported into the database.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=IncludeAllCompanies;
                Editable=ContainsCompanies;
                OnValidate=BEGIN
                             MarkAll;
                           END;

                ImplicitType=Boolean }

    { 11  ;3   ;Field     ;
                Name=IncludeGlobalData;
                CaptionML=ENU=Global Data;
                ToolTipML=ENU=Specifies that data that is common to all companies will be imported into the database. This includes the report list, user IDs, and printer selections, but no company-specific business data.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=IncludeGlobalData;
                Editable=ContainsGlobalData;
                ImplicitType=Boolean }

    { 4   ;3   ;Field     ;
                Name=IncludeApplicationData;
                CaptionML=ENU=Application Data;
                ToolTipML=ENU=Specifies that the data that defines the application in the database is imported. This includes the permissions, permission sets, profiles, and style sheets.;
                ApplicationArea=#Advanced;
                SourceExpr=IncludeApplicationData;
                Visible=IncludeApplicationDataVisible;
                Editable=ContainsApplicationData;
                ImplicitType=Boolean }

    { 8   ;2   ;Group     ;
                Name=Group8;
                GroupType=Repeater }

    { 10  ;3   ;Field     ;
                Name=Selected;
                CaptionML=ENU=Import;
                ToolTipML=ENU=Specifies that data will be imported.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Selected;
                OnValidate=BEGIN
                             if Selected then begin
                               SelectedCompany := Rec;
                               if SelectedCompany.INSERT then;
                             end else begin
                               IncludeAllCompanies := false;
                               if SelectedCompany.GET(Name) then
                                 SelectedCompany.DELETE;
                             end;
                           END;

                ImplicitType=Boolean }

    { 9   ;3   ;Field     ;
                Name=Name;
                Width=30;
                CaptionML=ENU=Company Name;
                ToolTipML=ENU=Specifies the name of a company that has been created in the current database.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name;
                ImplicitType=Text30 }

  }
  CODE
  {
    VAR
      SelectedCompany@1002 : TEMPORARY Record Company;
      FileName@1007 : Text;
      Description@1008 : Text;
      OriginalTenantId@1009 : Text;
      ExportDate@1012 : DateTime;
      Selected@1001 : Boolean;
      ContainsApplication@1006 : Boolean;
      ContainsApplicationData@1004 : Boolean;
      ContainsGlobalData@1003 : Boolean;
      ContainsCompanies@1005 : Boolean;
      IncludeAllCompanies@1000 : Boolean;
      IncludeApplicationData@1010 : Boolean;
      IncludeGlobalData@1011 : Boolean;
      OverwriteQst@1013 : TextConst 'ENU=Application data, global data, or both types of data will be overwritten. Are you sure that you want to continue?';
      CompletedMsg@1014 : TextConst 'ENU=The data was imported successfully.';
      IncludeApplicationDataVisible@1015 : Boolean;

    LOCAL PROCEDURE MarkAll@2();
    BEGIN
      SelectedCompany.DELETEALL;

      if IncludeAllCompanies then
        if FINDSET then
          repeat
            SelectedCompany := Rec;
            SelectedCompany.INSERT;
          until NEXT = 0;

      CurrPage.UPDATE(false);
    END;

    BEGIN
    END.
  }
}

