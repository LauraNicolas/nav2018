OBJECT Codeunit 1212 Pmt. Export Vend. Ledger Check
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    TableNo="Vendor Ledger Entry";
    OnRun=BEGIN
            CheckDocumentType(Rec);
            CheckPaymentMethod(Rec);
            CheckSimultaneousPmtInfoCreditorNo(Rec);
            CheckEmptyPmtInfo(Rec);
            CheckBalAccountType(Rec);
            CheckBankAccount(Rec);
            CheckBalAccountNo(Rec);

            OnPmtExportVendorLedgerCheck;
          END;

  }
  CODE
  {
    VAR
      EmptyPaymentDetailsErr@1003 : TextConst '@@@="%1=Field;%2=Field";ENU=%1 or %2 must be used for payments.';
      SimultaneousPaymentDetailsErr@1000 : TextConst '@@@="%1=Field;%2=Field";ENU=%1 and %2 cannot be used simultaneously for payments.';
      WrongFieldValueErr@1001 : TextConst '@@@="%1=Field;%2=Table;%3=Value";ENU=%1 for one or more %2 is different from %3.';
      MissingPmtMethodErr@1002 : TextConst 'ENU=%1 must be used for payments.';

    LOCAL PROCEDURE CheckDocumentType@5(VAR VendLedgEntry@1000 : Record "Vendor Ledger Entry");
    VAR
      VendLedgEntry2@1001 : Record "Vendor Ledger Entry";
    BEGIN
      VendLedgEntry2.COPY(VendLedgEntry);
      VendLedgEntry2.SETFILTER("Document Type",'<>%1',VendLedgEntry2."Document Type"::Payment);

      if not VendLedgEntry2.ISEMPTY then
        ERROR(WrongFieldValueErr,
          VendLedgEntry2.FIELDCAPTION("Document Type"),VendLedgEntry2.TABLECAPTION,VendLedgEntry2."Document Type"::Payment);
    END;

    LOCAL PROCEDURE CheckPaymentMethod@4(VAR VendLedgEntry@1000 : Record "Vendor Ledger Entry");
    VAR
      VendLedgEntry2@1001 : Record "Vendor Ledger Entry";
    BEGIN
      VendLedgEntry2.COPY(VendLedgEntry);
      VendLedgEntry2.SETRANGE("Payment Method Code",'');

      if not VendLedgEntry2.ISEMPTY then
        ERROR(MissingPmtMethodErr,VendLedgEntry2.FIELDCAPTION("Payment Method Code"));
    END;

    LOCAL PROCEDURE CheckSimultaneousPmtInfoCreditorNo@1(VAR VendLedgEntry@1000 : Record "Vendor Ledger Entry");
    VAR
      VendLedgEntry2@1001 : Record "Vendor Ledger Entry";
    BEGIN
      VendLedgEntry2.COPY(VendLedgEntry);
      VendLedgEntry2.SETFILTER("Recipient Bank Account",'<>%1','');
      VendLedgEntry2.SETFILTER("Creditor No.",'<>%1','');

      if not VendLedgEntry2.ISEMPTY then
        ERROR(SimultaneousPaymentDetailsErr,
          VendLedgEntry2.FIELDCAPTION("Recipient Bank Account"),VendLedgEntry2.FIELDCAPTION("Creditor No."));
    END;

    LOCAL PROCEDURE CheckEmptyPmtInfo@6(VAR VendLedgEntry@1000 : Record "Vendor Ledger Entry");
    VAR
      VendLedgEntry2@1001 : Record "Vendor Ledger Entry";
      Handled@1213 : Boolean;
    BEGIN
      VendLedgEntry2.COPY(VendLedgEntry);
      VendLedgEntry2.SETRANGE("Recipient Bank Account",'');
      VendLedgEntry2.SETRANGE("Creditor No.",'');

      OnCheckEmptyPmtInfoVendorLedgerEntry(VendLedgEntry2,Handled);

      if not Handled then
        if not VendLedgEntry2.ISEMPTY then
          ERROR(EmptyPaymentDetailsErr,
            VendLedgEntry2.FIELDCAPTION("Recipient Bank Account"),VendLedgEntry2.FIELDCAPTION("Creditor No."));
    END;

    LOCAL PROCEDURE CheckBalAccountType@2(VAR VendLedgEntry@1000 : Record "Vendor Ledger Entry");
    VAR
      VendLedgEntry2@1001 : Record "Vendor Ledger Entry";
    BEGIN
      VendLedgEntry2.COPY(VendLedgEntry);
      VendLedgEntry2.SETFILTER("Bal. Account Type",'<>%1',VendLedgEntry2."Bal. Account Type"::"Bank Account");

      if not VendLedgEntry2.ISEMPTY then
        ERROR(WrongFieldValueErr,VendLedgEntry2.FIELDCAPTION("Bal. Account Type"),
          VendLedgEntry2.TABLECAPTION,VendLedgEntry2."Bal. Account Type"::"Bank Account");
    END;

    LOCAL PROCEDURE CheckBalAccountNo@3(VAR VendLedgEntry@1000 : Record "Vendor Ledger Entry");
    VAR
      VendLedgEntry2@1001 : Record "Vendor Ledger Entry";
    BEGIN
      VendLedgEntry2.COPY(VendLedgEntry);
      VendLedgEntry2.SETRANGE("Bal. Account Type",VendLedgEntry2."Bal. Account Type"::"Bank Account");
      VendLedgEntry2.SETFILTER("Bal. Account No.",'<>%1',VendLedgEntry."Bal. Account No.");

      if not VendLedgEntry2.ISEMPTY then
        ERROR(WrongFieldValueErr,VendLedgEntry2.FIELDCAPTION("Bal. Account No."),
          VendLedgEntry2.TABLECAPTION,VendLedgEntry."Bal. Account No.");
    END;

    LOCAL PROCEDURE CheckBankAccount@7(VAR VendLedgEntry@1000 : Record "Vendor Ledger Entry");
    VAR
      BankAccount@1001 : Record "Bank Account";
    BEGIN
      BankAccount.GET(VendLedgEntry."Bal. Account No.");
      BankAccount.TESTFIELD("Payment Export Format");
    END;

    [Integration]
    LOCAL PROCEDURE OnPmtExportVendorLedgerCheck@1213();
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnCheckEmptyPmtInfoVendorLedgerEntry@1214(VAR VendorLedgerEntry@1213 : Record "Vendor Ledger Entry";VAR Handled@1214 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

