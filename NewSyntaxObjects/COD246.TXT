OBJECT Codeunit 246 Item Jnl.-Explode BOM
{
  OBJECT-PROPERTIES
  {
    Date=20120907D;
    Time=120000T;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    TableNo="Item Journal Line";
    OnRun=VAR
            Selection@1004 : Integer;
          BEGIN
            TESTFIELD("Item No.");
            CALCFIELDS("Reserved Qty. (Base)");
            TESTFIELD("Reserved Qty. (Base)",0);
            FromBOMComp.SETRANGE("Parent Item No.","Item No.");
            FromBOMComp.SETRANGE(Type,FromBOMComp.Type::Item);
            NoOfBOMComp := FromBOMComp.COUNT;
            if NoOfBOMComp = 0 then
              ERROR(
                Text000,
                "Item No.");

            Selection := STRMENU(Text003,2);
            if Selection = 0 then
              exit;

            ToItemJnlLine.RESET;
            ToItemJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
            ToItemJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
            ToItemJnlLine.SETRANGE("Document No.","Document No.");
            ToItemJnlLine.SETRANGE("Posting Date","Posting Date");
            ToItemJnlLine.SETRANGE("Entry Type","Entry Type");
            ToItemJnlLine := Rec;
            if ToItemJnlLine.FIND('>') then begin
              LineSpacing := (ToItemJnlLine."Line No." - "Line No.") div (1 + NoOfBOMComp);
              if LineSpacing = 0 then
                ERROR(Text002);
            end else
              LineSpacing := 10000;

            ToItemJnlLine := Rec;
            FromBOMComp.SETFILTER("No.",'<>%1','');
            if FromBOMComp.FIND('-') then
              repeat
                Item.GET(FromBOMComp."No.");
                ToItemJnlLine."Line No." := 0;
                ToItemJnlLine."Item No." := FromBOMComp."No.";
                ToItemJnlLine."Variant Code" := FromBOMComp."Variant Code";
                ToItemJnlLine."Unit of Measure Code" := FromBOMComp."Unit of Measure Code";
                ToItemJnlLine."Qty. per Unit of Measure" :=
                  UOMMgt.GetQtyPerUnitOfMeasure(Item,FromBOMComp."Unit of Measure Code");
                ToItemJnlLine.Quantity := ROUND("Quantity (Base)" * FromBOMComp."Quantity per",0.00001);
                if ToItemJnlLine.Quantity > 0 then
                  if ItemCheckAvail.ItemJnlCheckLine(ToItemJnlLine) then
                    ItemCheckAvail.RaiseUpdateInterruptedError;
              until FromBOMComp.NEXT = 0;

            ToItemJnlLine := Rec;
            ToItemJnlLine.INIT;
            ToItemJnlLine.Description := Description;
            ToItemJnlLine.MODIFY;

            FromBOMComp.RESET;
            FromBOMComp.SETRANGE("Parent Item No.","Item No.");
            FromBOMComp.SETRANGE(Type,FromBOMComp.Type::Item);
            FromBOMComp.FIND('-');
            NextLineNo := "Line No.";

            repeat
              ToItemJnlLine.INIT;
              ToItemJnlLine."Journal Template Name" := "Journal Template Name";
              ToItemJnlLine."Document No." := "Document No.";
              ToItemJnlLine."Document Date" := "Document Date";
              ToItemJnlLine."Posting Date" := "Posting Date";
              ToItemJnlLine."External Document No." := "External Document No.";
              ToItemJnlLine."Entry Type" := "Entry Type";
              ToItemJnlLine."Location Code" := "Location Code";
              NextLineNo := NextLineNo + LineSpacing;
              ToItemJnlLine."Line No." := NextLineNo;
              ToItemJnlLine."Drop Shipment" := "Drop Shipment";
              ToItemJnlLine."Source Code" := "Source Code";
              ToItemJnlLine."Reason Code" := "Reason Code";
              ToItemJnlLine.VALIDATE("Item No.",FromBOMComp."No.");
              ToItemJnlLine.VALIDATE("Variant Code",FromBOMComp."Variant Code");
              ToItemJnlLine.VALIDATE("Unit of Measure Code",FromBOMComp."Unit of Measure Code");
              ToItemJnlLine.VALIDATE(
                Quantity,
                ROUND("Quantity (Base)" * FromBOMComp."Quantity per",0.00001));
              ToItemJnlLine.Description := FromBOMComp.Description;
              ToItemJnlLine.INSERT;

              if Selection = 1 then begin
                ToItemJnlLine."Shortcut Dimension 1 Code" := "Shortcut Dimension 1 Code";
                ToItemJnlLine."Shortcut Dimension 2 Code" := "Shortcut Dimension 2 Code";
                ToItemJnlLine."Dimension Set ID" := "Dimension Set ID";
                ToItemJnlLine.MODIFY;
              end;
            until FromBOMComp.NEXT = 0;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Item %1 is not a BOM.';
      Text002@1001 : TextConst 'ENU=There is not enough space to explode the BOM.';
      Text003@1002 : TextConst 'ENU=&Copy dimensions from BOM,&Retrieve dimensions from components';
      ToItemJnlLine@1003 : Record "Item Journal Line";
      FromBOMComp@1004 : Record "BOM Component";
      Item@1005 : Record Item;
      ItemCheckAvail@1006 : Codeunit "Item-Check Avail.";
      UOMMgt@1007 : Codeunit "Unit of Measure Management";
      LineSpacing@1008 : Integer;
      NextLineNo@1009 : Integer;
      NoOfBOMComp@1010 : Integer;

    BEGIN
    END.
  }
}

