OBJECT Codeunit 1400 DocumentNoVisibility
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [External]
    PROCEDURE SalesDocumentNoIsVisible@2(DocType@1000 : 'Quote,Order,Invoice,"Credit Memo","Blanket Order","Return Order",Reminder,FinChMemo';DocNo@1003 : Code[20]) : Boolean;
    VAR
      NoSeries@1002 : Record "No. Series";
      SalesNoSeriesSetup@1001 : Page "Sales No. Series Setup";
      DocNoSeries@1004 : Code[20];
    BEGIN
      if DocNo <> '' then
        exit(false);

      DocNoSeries := DetermineSalesSeriesNo(DocType);

      if not NoSeries.GET(DocNoSeries) then begin
        SalesNoSeriesSetup.SetFieldsVisibility(DocType);
        SalesNoSeriesSetup.RUNMODAL;
        DocNoSeries := DetermineSalesSeriesNo(DocType);
      end;

      exit(ForceShowNoSeriesForDocNo(DocNoSeries));
    END;

    [External]
    PROCEDURE PurchaseDocumentNoIsVisible@6(DocType@1000 : 'Quote,Order,Invoice,"Credit Memo","Blanket Order","Return Order"';DocNo@1003 : Code[20]) : Boolean;
    VAR
      NoSeries@1002 : Record "No. Series";
      PurchaseNoSeriesSetup@1001 : Page "Purchase No. Series Setup";
      DocNoSeries@1004 : Code[20];
    BEGIN
      if DocNo <> '' then
        exit(false);

      DocNoSeries := DeterminePurchaseSeriesNo(DocType);

      if not NoSeries.GET(DocNoSeries) then begin
        PurchaseNoSeriesSetup.SetFieldsVisibility(DocType);
        PurchaseNoSeriesSetup.RUNMODAL;
        DocNoSeries := DeterminePurchaseSeriesNo(DocType);
      end;

      exit(ForceShowNoSeriesForDocNo(DocNoSeries));
    END;

    [External]
    PROCEDURE TransferOrderNoIsVisible@24() : Boolean;
    VAR
      NoSeriesCode@1004 : Code[20];
    BEGIN
      NoSeriesCode := DetermineTransferOrderSeriesNo;
      exit(ForceShowNoSeriesForDocNo(NoSeriesCode));
    END;

    [External]
    PROCEDURE CustomerNoIsVisible@4() : Boolean;
    VAR
      NoSeriesCode@1004 : Code[20];
    BEGIN
      NoSeriesCode := DetermineCustomerSeriesNo;
      exit(ForceShowNoSeriesForDocNo(NoSeriesCode));
    END;

    [External]
    PROCEDURE VendorNoIsVisible@21() : Boolean;
    VAR
      NoSeriesCode@1004 : Code[20];
    BEGIN
      NoSeriesCode := DetermineVendorSeriesNo;
      exit(ForceShowNoSeriesForDocNo(NoSeriesCode));
    END;

    [External]
    PROCEDURE ItemNoIsVisible@22() : Boolean;
    VAR
      NoSeriesCode@1004 : Code[20];
    BEGIN
      NoSeriesCode := DetermineItemSeriesNo;
      exit(ForceShowNoSeriesForDocNo(NoSeriesCode));
    END;

    [External]
    PROCEDURE FixedAssetNoIsVisible@8() : Boolean;
    VAR
      NoSeriesCode@1004 : Code[20];
    BEGIN
      NoSeriesCode := DetermineFixedAssetSeriesNo;
      exit(ForceShowNoSeriesForDocNo(NoSeriesCode));
    END;

    [External]
    PROCEDURE EmployeeNoIsVisible@18() : Boolean;
    VAR
      NoSeriesCode@1004 : Code[20];
    BEGIN
      NoSeriesCode := DetermineEmployeeSeriesNo;
      exit(ForceShowNoSeriesForDocNo(NoSeriesCode));
    END;

    [External]
    PROCEDURE BankAccountNoIsVisible@23() : Boolean;
    VAR
      NoSeriesCode@1004 : Code[20];
    BEGIN
      NoSeriesCode := DetermineBankAccountSeriesNo;
      exit(ForceShowNoSeriesForDocNo(NoSeriesCode));
    END;

    [External]
    PROCEDURE ResourceNoIsVisible@26() : Boolean;
    VAR
      NoSeriesCode@1004 : Code[20];
    BEGIN
      NoSeriesCode := DetermineResourceSeriesNo;
      exit(ForceShowNoSeriesForDocNo(NoSeriesCode));
    END;

    [External]
    PROCEDURE JobNoIsVisible@27() : Boolean;
    VAR
      NoSeriesCode@1004 : Code[20];
    BEGIN
      NoSeriesCode := DetermineJobSeriesNo;
      exit(ForceShowNoSeriesForDocNo(NoSeriesCode));
    END;

    [External]
    PROCEDURE ContactNoIsVisible@28() : Boolean;
    VAR
      NoSeriesCode@1004 : Code[20];
    BEGIN
      NoSeriesCode := DetermineContactSeriesNo;
      exit(ForceShowNoSeriesForDocNo(NoSeriesCode));
    END;

    [External]
    PROCEDURE CustomerNoSeriesIsDefault@10() : Boolean;
    VAR
      NoSeries@1000 : Record "No. Series";
    BEGIN
      if NoSeries.GET(DetermineCustomerSeriesNo) then
        exit(NoSeries."Default Nos.");

      exit(false);
    END;

    [External]
    PROCEDURE VendorNoSeriesIsDefault@15() : Boolean;
    VAR
      NoSeries@1000 : Record "No. Series";
    BEGIN
      if NoSeries.GET(DetermineVendorSeriesNo) then
        exit(NoSeries."Default Nos.");

      exit(false);
    END;

    [External]
    PROCEDURE ItemNoSeriesIsDefault@16() : Boolean;
    VAR
      NoSeries@1000 : Record "No. Series";
    BEGIN
      if NoSeries.GET(DetermineItemSeriesNo) then
        exit(NoSeries."Default Nos.");
    END;

    [External]
    PROCEDURE TransferOrderNoSeriesIsDefault@20() : Boolean;
    VAR
      NoSeries@1000 : Record "No. Series";
    BEGIN
      if NoSeries.GET(DetermineTransferOrderSeriesNo) then
        exit(NoSeries."Default Nos.");
    END;

    [External]
    PROCEDURE FixedAssetNoSeriesIsDefault@11() : Boolean;
    VAR
      NoSeries@1000 : Record "No. Series";
    BEGIN
      if NoSeries.GET(DetermineFixedAssetSeriesNo) then
        exit(NoSeries."Default Nos.");
    END;

    [External]
    PROCEDURE EmployeeNoSeriesIsDefault@19() : Boolean;
    VAR
      NoSeries@1000 : Record "No. Series";
    BEGIN
      if NoSeries.GET(DetermineEmployeeSeriesNo) then
        exit(NoSeries."Default Nos.");
    END;

    LOCAL PROCEDURE DetermineSalesSeriesNo@5(DocType@1000 : 'Quote,Order,Invoice,"Credit Memo","Blanket Order","Return Order",Reminder,FinChMemo') : Code[20];
    VAR
      SalesReceivablesSetup@1001 : Record "Sales & Receivables Setup";
      SalesHeader@1002 : Record "Sales Header";
    BEGIN
      SalesReceivablesSetup.GET;
      SalesHeader.SETRANGE("Document Type",DocType);
      case DocType of
        DocType::Quote:
          begin
            CheckNumberSeries(SalesHeader,SalesReceivablesSetup."Quote Nos.",SalesHeader.FIELDNO("No."));
            exit(SalesReceivablesSetup."Quote Nos.");
          end;
        DocType::Order:
          begin
            CheckNumberSeries(SalesHeader,SalesReceivablesSetup."Order Nos.",SalesHeader.FIELDNO("No."));
            exit(SalesReceivablesSetup."Order Nos.");
          end;
        DocType::Invoice:
          begin
            CheckNumberSeries(SalesHeader,SalesReceivablesSetup."Invoice Nos.",SalesHeader.FIELDNO("No."));
            exit(SalesReceivablesSetup."Invoice Nos.");
          end;
        DocType::"Credit Memo":
          begin
            CheckNumberSeries(SalesHeader,SalesReceivablesSetup."Credit Memo Nos.",SalesHeader.FIELDNO("No."));
            exit(SalesReceivablesSetup."Credit Memo Nos.");
          end;
        DocType::"Blanket Order":
          begin
            CheckNumberSeries(SalesHeader,SalesReceivablesSetup."Blanket Order Nos.",SalesHeader.FIELDNO("No."));
            exit(SalesReceivablesSetup."Blanket Order Nos.");
          end;
        DocType::"Return Order":
          begin
            CheckNumberSeries(SalesHeader,SalesReceivablesSetup."Return Order Nos.",SalesHeader.FIELDNO("No."));
            exit(SalesReceivablesSetup."Return Order Nos.");
          end;
        DocType::Reminder:
          begin
            CheckNumberSeries(SalesHeader,SalesReceivablesSetup."Reminder Nos.",SalesHeader.FIELDNO("No."));
            exit(SalesReceivablesSetup."Reminder Nos.");
          end;
        DocType::FinChMemo:
          begin
            CheckNumberSeries(SalesHeader,SalesReceivablesSetup."Fin. Chrg. Memo Nos.",SalesHeader.FIELDNO("No."));
            exit(SalesReceivablesSetup."Fin. Chrg. Memo Nos.");
          end;
      end;
    END;

    LOCAL PROCEDURE DeterminePurchaseSeriesNo@1(DocType@1000 : 'Quote,Order,Invoice,"Credit Memo","Blanket Order","Return Order"') : Code[20];
    VAR
      PurchasesPayablesSetup@1001 : Record "Purchases & Payables Setup";
      PurchaseHeader@1002 : Record "Purchase Header";
    BEGIN
      PurchasesPayablesSetup.GET;
      PurchaseHeader.SETRANGE("Document Type",DocType);
      case DocType of
        DocType::Quote:
          begin
            CheckNumberSeries(PurchaseHeader,PurchasesPayablesSetup."Quote Nos.",PurchaseHeader.FIELDNO("No."));
            exit(PurchasesPayablesSetup."Quote Nos.");
          end;
        DocType::Order:
          begin
            CheckNumberSeries(PurchaseHeader,PurchasesPayablesSetup."Order Nos.",PurchaseHeader.FIELDNO("No."));
            exit(PurchasesPayablesSetup."Order Nos.");
          end;
        DocType::Invoice:
          begin
            CheckNumberSeries(PurchaseHeader,PurchasesPayablesSetup."Invoice Nos.",PurchaseHeader.FIELDNO("No."));
            exit(PurchasesPayablesSetup."Invoice Nos.");
          end;
        DocType::"Credit Memo":
          begin
            CheckNumberSeries(PurchaseHeader,PurchasesPayablesSetup."Credit Memo Nos.",PurchaseHeader.FIELDNO("No."));
            exit(PurchasesPayablesSetup."Credit Memo Nos.");
          end;
        DocType::"Blanket Order":
          begin
            CheckNumberSeries(PurchaseHeader,PurchasesPayablesSetup."Blanket Order Nos.",PurchaseHeader.FIELDNO("No."));
            exit(PurchasesPayablesSetup."Blanket Order Nos.");
          end;
        DocType::"Return Order":
          begin
            CheckNumberSeries(PurchaseHeader,PurchasesPayablesSetup."Return Order Nos.",PurchaseHeader.FIELDNO("No."));
            exit(PurchasesPayablesSetup."Return Order Nos.");
          end;
      end;
    END;

    LOCAL PROCEDURE DetermineTransferOrderSeriesNo@14() : Code[20];
    VAR
      InventorySetup@1000 : Record "Inventory Setup";
      TransferHeader@1001 : Record "Transfer Header";
    BEGIN
      InventorySetup.GET;
      CheckNumberSeries(TransferHeader,InventorySetup."Transfer Order Nos.",TransferHeader.FIELDNO("No."));
      exit(InventorySetup."Transfer Order Nos.");
    END;

    LOCAL PROCEDURE DetermineCustomerSeriesNo@7() : Code[20];
    VAR
      SalesReceivablesSetup@1001 : Record "Sales & Receivables Setup";
      Customer@1000 : Record Customer;
    BEGIN
      SalesReceivablesSetup.GET;
      CheckNumberSeries(Customer,SalesReceivablesSetup."Customer Nos.",Customer.FIELDNO("No."));
      exit(SalesReceivablesSetup."Customer Nos.");
    END;

    LOCAL PROCEDURE DetermineVendorSeriesNo@12() : Code[20];
    VAR
      PurchasesPayablesSetup@1001 : Record "Purchases & Payables Setup";
      Vendor@1000 : Record Vendor;
    BEGIN
      PurchasesPayablesSetup.GET;
      CheckNumberSeries(Vendor,PurchasesPayablesSetup."Vendor Nos.",Vendor.FIELDNO("No."));
      exit(PurchasesPayablesSetup."Vendor Nos.");
    END;

    LOCAL PROCEDURE DetermineItemSeriesNo@17() : Code[20];
    VAR
      InventorySetup@1001 : Record "Inventory Setup";
      Item@1000 : Record Item;
    BEGIN
      InventorySetup.GET;
      CheckNumberSeries(Item,InventorySetup."Item Nos.",Item.FIELDNO("No."));
      exit(InventorySetup."Item Nos.");
    END;

    LOCAL PROCEDURE DetermineFixedAssetSeriesNo@9() : Code[20];
    VAR
      FASetup@1001 : Record "FA Setup";
      FixedAsset@1000 : Record "Fixed Asset";
    BEGIN
      FASetup.GET;
      CheckNumberSeries(FixedAsset,FASetup."Fixed Asset Nos.",FixedAsset.FIELDNO("No."));
      exit(FASetup."Fixed Asset Nos.");
    END;

    LOCAL PROCEDURE DetermineEmployeeSeriesNo@13() : Code[20];
    VAR
      HumanResourcesSetup@1001 : Record "Human Resources Setup";
      Employee@1000 : Record Employee;
    BEGIN
      HumanResourcesSetup.GET;
      CheckNumberSeries(Employee,HumanResourcesSetup."Employee Nos.",Employee.FIELDNO("No."));
      exit(HumanResourcesSetup."Employee Nos.");
    END;

    LOCAL PROCEDURE DetermineBankAccountSeriesNo@25() : Code[20];
    VAR
      GeneralLedgerSetup@1001 : Record "General Ledger Setup";
      BankAccount@1000 : Record "Bank Account";
    BEGIN
      GeneralLedgerSetup.GET;
      CheckNumberSeries(BankAccount,GeneralLedgerSetup."Bank Account Nos.",BankAccount.FIELDNO("No."));
      exit(GeneralLedgerSetup."Bank Account Nos.");
    END;

    LOCAL PROCEDURE DetermineResourceSeriesNo@29() : Code[20];
    VAR
      ResourcesSetup@1001 : Record "Resources Setup";
      Resource@1000 : Record Resource;
    BEGIN
      ResourcesSetup.GET;
      CheckNumberSeries(Resource,ResourcesSetup."Resource Nos.",Resource.FIELDNO("No."));
      exit(ResourcesSetup."Resource Nos.");
    END;

    LOCAL PROCEDURE DetermineJobSeriesNo@30() : Code[20];
    VAR
      JobsSetup@1001 : Record "Jobs Setup";
      Job@1000 : Record Job;
    BEGIN
      JobsSetup.GET;
      CheckNumberSeries(Job,JobsSetup."Job Nos.",Job.FIELDNO("No."));
      exit(JobsSetup."Job Nos.");
    END;

    LOCAL PROCEDURE DetermineContactSeriesNo@31() : Code[20];
    VAR
      MarketingSetup@1001 : Record "Marketing Setup";
      Contact@1000 : Record Contact;
    BEGIN
      MarketingSetup.GET;
      CheckNumberSeries(Contact,MarketingSetup."Contact Nos.",Contact.FIELDNO("No."));
      exit(MarketingSetup."Contact Nos.");
    END;

    LOCAL PROCEDURE ForceShowNoSeriesForDocNo@3(NoSeriesCode@1004 : Code[20]) : Boolean;
    VAR
      NoSeries@1005 : Record "No. Series";
      NoSeriesRelationship@1001 : Record "No. Series Relationship";
      NoSeriesMgt@1000 : Codeunit NoSeriesManagement;
      SeriesDate@1002 : Date;
    BEGIN
      if not NoSeries.GET(NoSeriesCode) then
        exit(true);

      SeriesDate := WORKDATE;
      NoSeriesRelationship.SETRANGE(Code,NoSeriesCode);
      if not NoSeriesRelationship.ISEMPTY then
        exit(true);

      if NoSeries."Manual Nos." or (NoSeries."Default Nos." = false) then
        exit(true);

      exit(NoSeriesMgt.GetNextNo3(NoSeriesCode,SeriesDate,false,true) = '');
    END;

    LOCAL PROCEDURE CheckNumberSeries@32(RecVariant@1000 : Variant;NoSeriesCode@1001 : Code[20];FieldNo@1002 : Integer);
    VAR
      NoSeries@1007 : Record "No. Series";
      NoSeriesMgt@1003 : Codeunit NoSeriesManagement;
      RecRef@1004 : RecordRef;
      FieldRef@1005 : FieldRef;
      NewNo@1006 : Code[20];
    BEGIN
      if RecVariant.ISRECORD and (NoSeriesCode <> '') and NoSeries.GET(NoSeriesCode) then begin
        NewNo := NoSeriesMgt.GetNextNo3(NoSeriesCode,0D,false,true);
        RecRef.GETTABLE(RecVariant);
        FieldRef := RecRef.FIELD(FieldNo);
        FieldRef.SETRANGE(NewNo);
        if RecRef.FINDFIRST then begin
          NoSeriesMgt.SaveNoSeries;
          CheckNumberSeries(RecRef,NoSeriesCode,FieldNo);
        end;
      end;
    END;

    BEGIN
    END.
  }
}

