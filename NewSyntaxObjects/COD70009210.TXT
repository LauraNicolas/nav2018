OBJECT Codeunit 70009210 G/L Source Name Notifications
{
  OBJECT-PROPERTIES
  {
    Date=20170501D;
    Time=182329T;
    Version List=GLSN10.0.0.1;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GLSourceName@1000 : Record "G/L Source Name";
      NewFeatuerNotificationIdTxt@1001 : TextConst '@@@={Locked};ENU=1dd20373-27f8-4c68-a7b4-aab7ca199b98';
      NewFeatureMessageTxt@1002 : TextConst 'ENU=We have added a new feature to the General Ledger Entries.  Now you can see the Source Name column!';
      NewFeatureLinkTxt@1003 : TextConst 'ENU=Show me the details';
      MissingPermissionNotificationIdTxt@1004 : TextConst '@@@={Locked};ENU=4fa8230a-53e5-4182-8423-373dc6f23f9d';
      MissingPermissionMessageText@1005 : TextConst 'ENU=You don''t have permissions to use our new feature that will show Source Names.  Please contact your administrator.';
      MissingPermissionLinkTxt@1006 : TextConst 'ENU=What should I show?';
      GLSourceNameUserSetup@1007 : Record "G/L Source Name User Setup";

    [EventSubscriber(Page,20,OnOpenPageEvent,"",Skip,Skip)]
    LOCAL PROCEDURE CatchGLEntriesOpenPage@1(VAR Rec@1000 : Record "G/L Entry");
    BEGIN
      if not GLSourceNameUserSetup.WRITEPERMISSION then exit;
      if not GLSourceName.READPERMISSION then
        NotifyOnMissingPermission(Rec)
      else
        NotifyOnNewFeature(Rec);
    END;

    LOCAL PROCEDURE NotifyOnMissingPermission@1000000000(VAR Rec@1000 : Record "G/L Entry");
    VAR
      MissingPermissionNotification@1001 : Notification;
    BEGIN
      if GetNotificationHasBeenShown(GetMissingPermissionNotificationId) then exit;
      with MissingPermissionNotification do begin
        ID := GetMissingPermissionNotificationId;
        MESSAGE := MissingPermissionMessageText;
        SCOPE := NOTIFICATIONSCOPE::LocalScope;
        ADDACTION(MissingPermissionLinkTxt,CODEUNIT::"G/L Source Name Perm. Notif.",'ShowAssistedSetupToUser');
        SEND;
      end;
      SetNotificationHasBeenShown(GetMissingPermissionNotificationId);
    END;

    LOCAL PROCEDURE NotifyOnNewFeature@1000000001(VAR Rec@1000 : Record "G/L Entry");
    VAR
      NewFeatureNotification@1000000000 : Notification;
    BEGIN
      if GetNotificationHasBeenShown(GetNewFeatuerNotificationId) then exit;
      with NewFeatureNotification do begin
        ID := GetNewFeatuerNotificationId;
        MESSAGE := NewFeatureMessageTxt;
        SCOPE := NOTIFICATIONSCOPE::LocalScope;
        ADDACTION(NewFeatureLinkTxt,CODEUNIT::"G/L Source Name Feature Notif.",'ShowDetailsToUser');
        SEND;
      end;
      SetNotificationHasBeenShown(GetNewFeatuerNotificationId);
    END;

    PROCEDURE GetMissingPermissionNotificationId@19() : GUID;
    VAR
      MissingPermissionNotificationId@1000 : GUID;
    BEGIN
      EVALUATE(MissingPermissionNotificationId,MissingPermissionNotificationIdTxt);
      exit(MissingPermissionNotificationId);
    END;

    PROCEDURE GetNewFeatuerNotificationId@8() : GUID;
    VAR
      NewFeatuerNotificationId@1000 : GUID;
    BEGIN
      EVALUATE(NewFeatuerNotificationId,NewFeatuerNotificationIdTxt);
      exit(NewFeatuerNotificationId);
    END;

    LOCAL PROCEDURE GetNotificationHasBeenShown@12(NotificationId@1000 : GUID) : Boolean;
    BEGIN
      with GLSourceNameUserSetup do
        exit(GET(USERSECURITYID,NotificationId));
    END;

    LOCAL PROCEDURE SetNotificationHasBeenShown@13(NotificationId@1000 : GUID);
    BEGIN
      with GLSourceNameUserSetup do begin
        "User Security ID" := USERSECURITYID;
        "Notification Id" := NotificationId;
        INSERT;
      end;
    END;

    BEGIN
    END.
  }
}

