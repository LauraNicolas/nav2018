OBJECT Page 701 Error Messages Part
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Error Messages;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    LinksAllowed=false;
    SourceTable="Error Message";
    SourceTableView=SORTING("Message Type",ID)
                    ORDER(Ascending);
    PageType=ListPart;
    SourceTableTemporary=true;
    OnAfterGetRecord=BEGIN
                       SetStyle;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           EnableActions;
                         END;

    ActionList=ACTIONS
    {
      { 9       ;    ;ActionContainer;
                      Name=ActionContainer9;
                      ActionContainerType=ActionItems }
      { 10      ;1   ;Action    ;
                      Name=OpenRelatedRecord;
                      CaptionML=ENU=Open Related Record;
                      ToolTipML=ENU=Open the record that is associated with this error message.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=EnableOpenRelatedEntity;
                      Image=View;
                      OnAction=BEGIN
                                 PageManagement.PageRun("Record ID");
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ViewDetails;
                      CaptionML=ENU=View Details;
                      ToolTipML=ENU=Show more information about this error message.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewDetails;
                      OnAction=BEGIN
                                 PAGE.RUN(PAGE::"Error Messages",Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 5   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=Message Type;
                ToolTipML=ENU=Specifies if the message is an error, a warning, or information.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Message Type";
                ImplicitType=Option }

    { 6   ;2   ;Field     ;
                Name=Table Name;
                ToolTipML=ENU=Specifies error messages that occur during data processing.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Table Name";
                Visible=FALSE;
                ImplicitType=Text80 }

    { 4   ;2   ;Field     ;
                Name=Field Name;
                Width=10;
                ToolTipML=ENU=Specifies the field where the error occurred.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Field Name";
                ImplicitType=Text80 }

    { 2   ;2   ;Field     ;
                Name=Description;
                DrillDown=true;
                ToolTipML=ENU=Specifies the message.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Enabled=EnableOpenRelatedEntity;
                StyleExpr=StyleText;
                OnDrillDown=BEGIN
                              if not DisableOpenRelatedEntity then
                                PageManagement.PageRun("Record ID");
                            END;

                ImplicitType=Text250 }

  }
  CODE
  {
    VAR
      PageManagement@1000 : Codeunit "Page Management";
      RecordIDToHighlight@1001 : RecordID;
      StyleText@1002 : Text[20] INDATASET;
      EnableOpenRelatedEntity@1003 : Boolean;
      DisableOpenRelatedEntity@1004 : Boolean;

    [External]
    PROCEDURE SetRecords@1(VAR TempErrorMessage@1000 : TEMPORARY Record "Error Message");
    BEGIN
      RESET;
      DELETEALL;

      TempErrorMessage.RESET;
      if TempErrorMessage.FINDFIRST then
        COPY(TempErrorMessage,true);
    END;

    PROCEDURE SetRecordID@6(recordID@1000 : RecordID);
    VAR
      ErrorMessage@1001 : Record "Error Message";
      TempErrorMessage@1002 : TEMPORARY Record "Error Message";
    BEGIN
      ErrorMessage.SETRANGE("Record ID",recordID);
      ErrorMessage.CopyToTemp(TempErrorMessage);
      SetRecords(TempErrorMessage);
      CurrPage.UPDATE;
    END;

    [External]
    PROCEDURE GetStyleOfRecord@2(RecordVariant@1000 : Variant;VAR StyleExpression@1002 : Text);
    VAR
      RecordRef@1001 : RecordRef;
    BEGIN
      if not RecordVariant.ISRECORD then
        exit;

      RecordRef.GETTABLE(RecordVariant);
      RecordIDToHighlight := RecordRef.RECORDID;

      if HasErrorMessagesRelatedTo(RecordVariant) then
        StyleExpression := 'Attention'
      else
        StyleExpression := 'None';
    END;

    LOCAL PROCEDURE SetStyle@4();
    VAR
      RecID@1001 : RecordID;
    BEGIN
      RecID := "Record ID";

      case "Message Type" of
        "Message Type"::Error:
          if RecID = RecordIDToHighlight then
            StyleText := 'Unfavorable'
          else
            StyleText := 'Attention';
        "Message Type"::Warning,
        "Message Type"::Information:
          if RecID = RecordIDToHighlight then
            StyleText := 'Strong'
          else
            StyleText := 'None';
      end;
    END;

    LOCAL PROCEDURE EnableActions@3();
    VAR
      RecID@1000 : RecordID;
    BEGIN
      RecID := "Record ID";
      if DisableOpenRelatedEntity then
        EnableOpenRelatedEntity := false
      else
        EnableOpenRelatedEntity := RecID.TABLENO <> 0;
    END;

    [External]
    PROCEDURE DisableActions@5();
    BEGIN
      DisableOpenRelatedEntity := true;
    END;

    BEGIN
    END.
  }
}

