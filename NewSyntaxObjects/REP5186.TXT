OBJECT Report 5186 Remove Contacts
{
  OBJECT-PROPERTIES
  {
    Date=20161025D;
    Time=120000T;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Remove Contacts;
    ProcessingOnly=true;
    OnPreReport=BEGIN
                  ItemFilters := "Value Entry".HASFILTER;

                  SegCriteriaManagement.InsertCriteriaAction(
                    "Segment Header".GETFILTER("No."),MainReportNo,
                    false,false,false,false,EntireCompanies);
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::Contact,
                    Contact.GETFILTERS,Contact.GETVIEW(false));
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::"Contact Profile Answer",
                    "Contact Profile Answer".GETFILTERS,"Contact Profile Answer".GETVIEW(false));
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::"Contact Mailing Group",
                    "Contact Mailing Group".GETFILTERS,"Contact Mailing Group".GETVIEW(false));
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::"Interaction Log Entry",
                    "Interaction Log Entry".GETFILTERS,"Interaction Log Entry".GETVIEW(false));
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::"Contact Job Responsibility","Contact Job Responsibility".GETFILTERS,
                    "Contact Job Responsibility".GETVIEW(false));
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::"Contact Industry Group",
                    "Contact Industry Group".GETFILTERS,"Contact Industry Group".GETVIEW(false));
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::"Contact Business Relation",
                    "Contact Business Relation".GETFILTERS,"Contact Business Relation".GETVIEW(false));
                  SegCriteriaManagement.InsertCriteriaFilter(
                    "Segment Header".GETFILTER("No."),DATABASE::"Value Entry",
                    "Value Entry".GETFILTERS,"Value Entry".GETVIEW(false));
                END;

    OnPostReport=BEGIN
                   if EntireCompanies then
                     AddPeople;

                   UpdateSegLines;
                 END;

    UseRequestPage=false;
  }
  DATASET
  {
    { 7133;    ;DataItem;Segment Header      ;
               DataItemTable="Segment Header";
               DataItemTableView=SORTING("No.") }

    { 5030;1   ;DataItem;Segment Line        ;
               DataItemTable="Segment Line";
               DataItemTableView=SORTING("Segment No.","Line No.");
               OnAfterGetRecord=BEGIN
                                  RecordNo := RecordNo + 1;
                                  if RecordNo = 1 then begin
                                    OldTime := TIME;
                                    case MainReportNo of
                                      REPORT::"Remove Contacts - Reduce":
                                        Window.OPEN(Text000);
                                      REPORT::"Remove Contacts - Refine":
                                        Window.OPEN(Text001);
                                    end;
                                    NoOfRecords := COUNT;
                                  end;
                                  NewTime := TIME;
                                  if (NewTime - OldTime > 100) or (NewTime < OldTime) then begin
                                    NewProgress := ROUND(RecordNo / NoOfRecords * 100,1);
                                    if NewProgress <> OldProgress then begin
                                      Window.UPDATE(1,NewProgress * 100);
                                      OldProgress := NewProgress;
                                    end;
                                    OldTime := TIME;
                                  end;
                                END;

               DataItemLink="Segment No."=FIELD("No.") }

    { 6698;2   ;DataItem;Contact             ;
               DataItemTable=Contact;
               DataItemTableView=SORTING("No.");
               OnPreDataItem=BEGIN
                               FILTERGROUP(4);
                               SETRANGE("Company No.","Segment Line"."Contact Company No.");
                               if not EntireCompanies then
                                 SETRANGE("No.","Segment Line"."Contact No.");
                               FILTERGROUP(0);
                             END;

               OnAfterGetRecord=BEGIN
                                  if EntireCompanies then begin
                                    if TempCheckCont.GET("No.") then
                                      CurrReport.SKIP;
                                    TempCheckCont := Contact;
                                    TempCheckCont.INSERT;
                                  end;

                                  ContactOK := true;
                                END;

               ReqFilterFields="No.","Search Name",Type,"Salesperson Code","Post Code","Country/Region Code","Territory Code" }

    { 3762;3   ;DataItem;Contact Profile Answer;
               DataItemTable="Contact Profile Answer";
               ReqFilterHeadingML=ENU=Profile;
               OnPreDataItem=BEGIN
                               if ContactOK and (GETFILTERS <> '') then
                                 ContactOK := false
                               else
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  ContactOK := true;
                                  CurrReport.BREAK;
                                END;

               DataItemLink="Contact No."=FIELD("No.") }

    { 6043;3   ;DataItem;Contact Mailing Group;
               DataItemTable="Contact Mailing Group";
               DataItemTableView=SORTING("Contact No.","Mailing Group Code");
               ReqFilterHeadingML=ENU=Mailing Group;
               OnPreDataItem=BEGIN
                               if ContactOK and (GETFILTERS <> '') then
                                 ContactOK := false
                               else
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  ContactOK := true;
                                  CurrReport.BREAK;
                                END;

               ReqFilterFields="Mailing Group Code";
               DataItemLink="Contact No."=FIELD("No.") }

    { 3056;3   ;DataItem;Interaction Log Entry;
               DataItemTable="Interaction Log Entry";
               DataItemTableView=SORTING("Contact Company No.","Contact No.",Date);
               OnPreDataItem=BEGIN
                               if ContactOK and (GETFILTERS <> '') then
                                 ContactOK := false
                               else
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  ContactOK := true;
                                  CurrReport.BREAK;
                                END;

               ReqFilterFields=Date,"Segment No.","Campaign No.",Evaluation,"Interaction Template Code","Salesperson Code";
               DataItemLink="Contact Company No."=FIELD("Company No."),"Contact No."=FIELD("No.") }

    { 6030;3   ;DataItem;Contact Job Responsibility;
               DataItemTable="Contact Job Responsibility";
               DataItemTableView=SORTING("Contact No.","Job Responsibility Code");
               ReqFilterHeadingML=ENU=Job Responsibility;
               OnPreDataItem=BEGIN
                               if ContactOK and (GETFILTERS <> '') then
                                 ContactOK := false
                               else
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  ContactOK := true;
                                  CurrReport.BREAK;
                                END;

               ReqFilterFields="Job Responsibility Code";
               DataItemLink="Contact No."=FIELD("No.") }

    { 4008;3   ;DataItem;Contact Industry Group;
               DataItemTable="Contact Industry Group";
               DataItemTableView=SORTING("Contact No.","Industry Group Code");
               ReqFilterHeadingML=ENU=Industry Group;
               OnPreDataItem=BEGIN
                               if ContactOK and (GETFILTERS <> '') then
                                 ContactOK := false
                               else
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  ContactOK := true;
                                  CurrReport.BREAK;
                                END;

               ReqFilterFields="Industry Group Code";
               DataItemLink="Contact No."=FIELD("Company No.") }

    { 8768;3   ;DataItem;Contact Business Relation;
               DataItemTable="Contact Business Relation";
               DataItemTableView=SORTING("Contact No.","Business Relation Code");
               ReqFilterHeadingML=ENU=Business Relation;
               OnPreDataItem=BEGIN
                               if ContactOK and ((GETFILTERS <> '') or ItemFilters) then
                                 ContactOK := false
                               else
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  SkipItemLedgerEntry := false;
                                  if not ItemFilters then begin
                                    ContactOK := true;
                                    SkipItemLedgerEntry := true;
                                    CurrReport.BREAK;
                                  end;
                                END;

               ReqFilterFields="Business Relation Code";
               DataItemLink="Contact No."=FIELD("Company No.") }

    { 8894;4   ;DataItem;Value Entry         ;
               DataItemTable="Value Entry";
               DataItemTableView=SORTING("Source Type","Source No.","Item No.","Posting Date");
               OnPreDataItem=BEGIN
                               if SkipItemLedgerEntry then
                                 CurrReport.BREAK;

                               case "Contact Business Relation"."Link to Table" of
                                 "Contact Business Relation"."Link to Table"::Customer:
                                   begin
                                     SETRANGE("Source Type","Source Type"::Customer);
                                     SETRANGE("Source No.","Contact Business Relation"."No.");
                                   end;
                                 "Contact Business Relation"."Link to Table"::Vendor:
                                   begin
                                     SETRANGE("Source Type","Source Type"::Vendor);
                                     SETRANGE("Source No.","Contact Business Relation"."No.");
                                   end
                                 else
                                   CurrReport.BREAK;
                               end;
                             END;

               OnAfterGetRecord=BEGIN
                                  ContactOK := true;
                                  CurrReport.BREAK;
                                END;

               ReqFilterFields="Item No.","Variant Code","Posting Date","Inventory Posting Group" }

    { 5444;3   ;DataItem;Integer             ;
               DataItemTable=Integer;
               DataItemTableView=SORTING(Number) WHERE(Number=CONST(1));
               OnAfterGetRecord=BEGIN
                                  if ContactOK then
                                    InsertContact(Contact);
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Reducing Contacts @1@@@@@@@@@@@@@';
      Text001@1001 : TextConst 'ENU=Refining Contacts @1@@@@@@@@@@@@@';
      TempCont@1002 : TEMPORARY Record Contact;
      TempCont2@1003 : TEMPORARY Record Contact;
      TempCheckCont@1004 : TEMPORARY Record Contact;
      Cont@1005 : Record Contact;
      SegLine@1006 : Record "Segment Line";
      SegmentHistoryMgt@1007 : Codeunit SegHistoryManagement;
      SegCriteriaManagement@1008 : Codeunit SegCriteriaManagement;
      Window@1014 : Dialog;
      MainReportNo@1009 : Integer;
      ItemFilters@1010 : Boolean;
      ContactOK@1011 : Boolean;
      EntireCompanies@1012 : Boolean;
      SkipItemLedgerEntry@1013 : Boolean;
      NoOfRecords@1015 : Integer;
      RecordNo@1016 : Integer;
      OldTime@1017 : Time;
      NewTime@1018 : Time;
      OldProgress@1019 : Integer;
      NewProgress@1020 : Integer;

    PROCEDURE SetOptions@4(CalledFromReportNo@1000 : Integer;OptionEntireCompanies@1001 : Boolean);
    BEGIN
      MainReportNo := CalledFromReportNo;
      EntireCompanies := OptionEntireCompanies;
    END;

    LOCAL PROCEDURE InsertContact@9(VAR CheckedCont@1000 : Record Contact);
    BEGIN
      TempCont := CheckedCont;
      if TempCont.INSERT then;
    END;

    LOCAL PROCEDURE AddPeople@2();
    BEGIN
      TempCont.RESET;
      if TempCont.FIND('-') then
        repeat
          if TempCont."Company No." <> '' then begin
            Cont.SETCURRENTKEY("Company No.");
            Cont.SETRANGE("Company No.",TempCont."Company No.");
            if Cont.FIND('-') then
              repeat
                TempCont2 := Cont;
                if TempCont2.INSERT then;
              until Cont.NEXT = 0
          end else begin
            TempCont2 := TempCont;
            TempCont2.INSERT;
          end;
        until TempCont.NEXT = 0;

      TempCont.DELETEALL;
      if TempCont2.FIND('-') then
        repeat
          TempCont := TempCont2;
          TempCont.INSERT;
        until TempCont2.NEXT = 0;
      TempCont2.DELETEALL;
    END;

    LOCAL PROCEDURE UpdateSegLines@1();
    BEGIN
      SegLine.RESET;
      SegLine.SETRANGE("Segment No.","Segment Header"."No.");
      if SegLine.FIND('-') then
        repeat
          case MainReportNo of
            REPORT::"Remove Contacts - Reduce":
              if TempCont.GET(SegLine."Contact No.") then begin
                SegLine.DELETE(true);
                SegmentHistoryMgt.DeleteLine(
                  SegLine."Segment No.",SegLine."Contact No.",SegLine."Line No.");
              end;
            REPORT::"Remove Contacts - Refine":
              if not TempCont.GET(SegLine."Contact No.") then begin
                SegLine.DELETE(true);
                SegmentHistoryMgt.DeleteLine(
                  SegLine."Segment No.",SegLine."Contact No.",SegLine."Line No.");
              end;
          end;
        until SegLine.NEXT = 0;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

