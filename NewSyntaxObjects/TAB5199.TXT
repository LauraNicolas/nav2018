OBJECT Table 5199 Attendee
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=VAR
               Task2@1005 : Record "To-do";
             BEGIN
               ValidateAttendee(Rec,Attendee);
               Task2.GET("To-do No.");
               Task2.CreateSubTask(Rec,Task2);
             END;

    OnModify=VAR
               Task@1000 : Record "To-do";
             BEGIN
               ValidateAttendee(Rec,Attendee);
               if xRec."Attendance Type" = "Attendance Type"::"To-do Organizer" then begin
                 if "Attendance Type" <> xRec."Attendance Type" then
                   ERROR(CannotChangeForTaskOrgErr,FIELDCAPTION("Attendance Type"));
                 if "Attendee No." <> xRec."Attendee No." then
                   ERROR(Text008);
               end else
                 if "Attendee No." <> xRec."Attendee No." then begin
                   Task.DeleteAttendeeTask(xRec);
                   Task.GET("To-do No.");
                   Task.CreateSubTask(Rec,Task);
                 end else
                   if (xRec."Invitation Response Type" <> "Invitation Response Type") or
                      (xRec."Invitation Sent" <> "Invitation Sent")
                   then
                     exit;
             END;

    OnDelete=BEGIN
               if "Attendance Type" = "Attendance Type"::"To-do Organizer" then
                 ERROR(Text005);
               Task.DeleteAttendeeTask(Rec);

               Task.GET("To-do No.");
             END;

    CaptionML=ENU=Attendee;
  }
  FIELDS
  {
    { 1   ;   ;To-do No.           ;Code20        ;TableRelation="To-do";
                                                   CaptionML=ENU=Task No. }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 3   ;   ;Attendance Type     ;Option        ;OnValidate=VAR
                                                                Cont@1001 : Record Contact;
                                                                Salesperson@1000 : Record "Salesperson/Purchaser";
                                                              BEGIN
                                                                if "Attendance Type" = "Attendance Type"::"To-do Organizer" then
                                                                  "Send Invitation" := true
                                                                else begin
                                                                  if "Attendee Type" = "Attendee Type"::Contact then begin
                                                                    if Cont.GET("Attendee No.") then
                                                                      "Send Invitation" := Cont."E-Mail" <> '';
                                                                  end else
                                                                    if Salesperson.GET("Attendee No.") then
                                                                      "Send Invitation" := Salesperson."E-Mail" <> '';
                                                                end
                                                              END;

                                                   CaptionML=ENU=Attendance Type;
                                                   OptionCaptionML=ENU=Required,Optional,To-do Organizer;
                                                   OptionString=Required,Optional,"To-do Organizer" }
    { 4   ;   ;Attendee Type       ;Option        ;OnValidate=BEGIN
                                                                if "Attendee Type" <> xRec."Attendee Type" then begin
                                                                  "Attendee No." := '';
                                                                  "Attendee Name" := '';
                                                                  "Send Invitation" := false;
                                                                  if "Attendance Type" = "Attendance Type"::"To-do Organizer" then
                                                                    "Send Invitation" := true;
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Attendee Type;
                                                   OptionCaptionML=ENU=Contact,Salesperson;
                                                   OptionString=Contact,Salesperson }
    { 5   ;   ;Attendee No.        ;Code20        ;TableRelation=IF ("Attendee Type"=CONST(Contact)) Contact WHERE ("No."=FIELD("Attendee No."))
                                                                 ELSE IF ("Attendee Type"=CONST(Salesperson)) "Salesperson/Purchaser" WHERE (Code=FIELD("Attendee No."));
                                                   OnValidate=VAR
                                                                Cont@1000 : Record Contact;
                                                                Salesperson@1001 : Record "Salesperson/Purchaser";
                                                              BEGIN
                                                                TESTFIELD("Attendee No.");
                                                                if "Attendee Type" = "Attendee Type"::Contact then begin
                                                                  Cont.GET("Attendee No.");
                                                                  "Attendee Name" := Cont.Name;
                                                                  if CurrFieldNo <> 0 then
                                                                    "Send Invitation" := Cont."E-Mail" <> '';
                                                                end else begin
                                                                  Salesperson.GET("Attendee No.");
                                                                  "Attendee Name" := Salesperson.Name;
                                                                  if CurrFieldNo <> 0 then
                                                                    if "Attendance Type" <> "Attendance Type"::"To-do Organizer" then
                                                                      "Send Invitation" := Salesperson."E-Mail" <> '';
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Attendee No. }
    { 6   ;   ;Attendee Name       ;Text50        ;CaptionML=ENU=Attendee Name;
                                                   Editable=false }
    { 7   ;   ;Send Invitation     ;Boolean       ;OnValidate=VAR
                                                                Cont@1000 : Record Contact;
                                                                Salesperson@1001 : Record "Salesperson/Purchaser";
                                                                Task@1002 : Record "To-do";
                                                              BEGIN
                                                                if not "Send Invitation" and
                                                                   ("Attendance Type" = "Attendance Type"::"To-do Organizer")
                                                                then
                                                                  ERROR(SendInvitationIsNotAvailableErr);

                                                                Task.INIT;
                                                                if Task.GET("To-do No.") then;
                                                                if "Send Invitation" and (Task.Type <> Task.Type::"Phone Call") then
                                                                  if "Attendee Type" = "Attendee Type"::Salesperson then begin
                                                                    if Salesperson.GET("Attendee No.") and (Salesperson."E-Mail" = '') then
                                                                      ERROR(Text004,FIELDCAPTION("Send Invitation"),Salesperson.Name);
                                                                  end else
                                                                    if Cont.GET("Attendee No.") and (Cont."E-Mail" = '') then
                                                                      ERROR(Text004,FIELDCAPTION("Send Invitation"),Cont.Name);
                                                              END;

                                                   CaptionML=ENU=Send Invitation }
    { 8   ;   ;Invitation Response Type;Option    ;CaptionML=ENU=Invitation Response Type;
                                                   OptionCaptionML=ENU=None,Accepted,Declined,Tentative;
                                                   OptionString=None,Accepted,Declined,Tentative }
    { 9   ;   ;Invitation Sent     ;Boolean       ;CaptionML=ENU=Invitation Sent }
  }
  KEYS
  {
    {    ;"To-do No.","Line No."                  ;Clustered=true }
    {    ;"To-do No.","Attendee Type","Attendee No." }
    {    ;"To-do No.","Attendance Type"            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1002 : TextConst 'ENU=A task organizer must always be a salesperson.';
      Text002@1001 : TextConst 'ENU=You cannot have more than one task organizer.';
      Text003@1000 : TextConst 'ENU=This attendee already exists.';
      Attendee@1003 : Record Attendee;
      Task@1004 : Record "To-do";
      Text004@1005 : TextConst '@@@="%1 = field caption for Send Invitation, %2 = Salesperson Name";ENU=You cannot select the %1 for %2 because he/she does not have an email address.';
      Text005@1006 : TextConst 'ENU=You cannot delete a task organizer.';
      CannotChangeForTaskOrgErr@1007 : TextConst '@@@="%1 = Attendance Type";ENU=You cannot change an %1 for a task organizer.';
      SendInvitationIsNotAvailableErr@1008 : TextConst 'ENU=The Send Invitation option is not available for a task organizer.';
      Text008@1010 : TextConst 'ENU=You cannot change the task organizer.';
      Text011@1009 : TextConst '@@@="%1 = Sales / Purchaseer person name";ENU=You cannot set %1 as organizer because he/she does not have email address.';

    [External]
    PROCEDURE ValidateAttendee@4(AttendeeRec@1000 : Record Attendee;VAR Attendee@1001 : Record Attendee);
    BEGIN
      AttendeeRec.TESTFIELD("Attendee No.");
      ValidateOrganizer(AttendeeRec."Attendee No.",AttendeeRec."Attendance Type",AttendeeRec."Attendee Type",AttendeeRec."To-do No.");

      if AttendeeRec."Attendance Type" = "Attendance Type"::"To-do Organizer" then begin
        if AttendeeRec."Attendee Type" = "Attendee Type"::Contact then
          ERROR(Text001);

        Attendee.SETRANGE("To-do No.",AttendeeRec."To-do No.");
        Attendee.SETRANGE("Attendance Type","Attendance Type"::"To-do Organizer");
        if Attendee.FIND('-') then
          if Attendee."Line No." <> AttendeeRec."Line No." then begin
            Attendee.RESET;
            ERROR(Text002);
          end;
        Attendee.RESET;
      end;

      Attendee.SETRANGE("To-do No.",AttendeeRec."To-do No.");
      Attendee.SETFILTER("Attendee No.",AttendeeRec."Attendee No.");
      if Attendee.FIND('-') then
        if Attendee."Line No." <> AttendeeRec."Line No." then begin
          Attendee.RESET;
          ERROR(Text003);
        end;
      Attendee.RESET;
    END;

    [External]
    PROCEDURE CreateAttendee@5(VAR Attendee@1005 : Record Attendee;TaskNo@1006 : Code[20];LineNo@1003 : Integer;AttendanceType@1002 : Integer;AttendeeType@1001 : Integer;AttendeeNo@1000 : Code[20];SendInvitation@1004 : Boolean);
    BEGIN
      ValidateOrganizer(AttendeeNo,AttendanceType,AttendeeType,TaskNo);

      Attendee.INIT;
      Attendee."To-do No." := TaskNo;
      Attendee."Line No." := LineNo;
      Attendee."Attendance Type" := AttendanceType;
      Attendee.VALIDATE("Attendee Type",AttendeeType);
      Attendee.VALIDATE("Attendee No.",AttendeeNo);
      if Attendee."Attendance Type" <> Attendee."Attendance Type"::"To-do Organizer" then
        Attendee.VALIDATE("Send Invitation",SendInvitation)
      else
        Attendee.VALIDATE("Send Invitation",true);
      if not Attendee.GET(Attendee."To-do No.",Attendee."Line No.") then
        Attendee.INSERT;
    END;

    LOCAL PROCEDURE ValidateOrganizer@1(AttendeeNo@1001 : Code[20];AttendanceType@1002 : Integer;AttendeeType@1003 : Integer;TodoNo@1004 : Code[20]);
    VAR
      SalesPurchPerson@1000 : Record "Salesperson/Purchaser";
      Task@1005 : Record "To-do";
    BEGIN
      if AttendanceType <> Attendee."Attendance Type"::"To-do Organizer" then
        exit;

      if AttendeeType = "Attendee Type"::Contact then
        ERROR(Text001);

      SalesPurchPerson.GET(AttendeeNo);
      Task.INIT;
      if Task.GET(TodoNo) then;
      if (SalesPurchPerson."E-Mail" = '') and (Task.Type <> Task.Type::"Phone Call") then
        ERROR(Text011,SalesPurchPerson.Name);
    END;

    BEGIN
    END.
  }
}

