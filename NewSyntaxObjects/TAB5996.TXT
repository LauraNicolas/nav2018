OBJECT Table 5996 Standard Service Code
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Description;
    OnInsert=BEGIN
               if not StdServItemGroup.GET('',Code) then begin
                 StdServItemGroup.INIT;
                 StdServItemGroup.Code := Code;
                 StdServItemGroup.INSERT;
               end;
             END;

    OnDelete=BEGIN
               StdServiceLine.RESET;
               StdServiceLine.SETRANGE("Standard Service Code",Code);
               StdServiceLine.DELETEALL(true);

               StdServItemGroup.RESET;
               StdServItemGroup.SETRANGE(Code,Code);
               StdServItemGroup.DELETEALL;
             END;

    CaptionML=ENU=Standard Service Code;
    LookupPageID="Standard Service Codes";
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=ENU=Code;
                                                   NotBlank=true }
    { 2   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 3   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=VAR
                                                                Currency@1000 : Record Currency;
                                                                Currency2@1001 : Record Currency;
                                                              BEGIN
                                                                if not Currency.GET("Currency Code") then
                                                                  Currency.InitRoundingPrecision;
                                                                if not Currency2.GET(xRec."Currency Code") then
                                                                  Currency2.InitRoundingPrecision;

                                                                if Currency."Amount Rounding Precision" <> Currency2."Amount Rounding Precision" then begin
                                                                  StdServiceLine.RESET;
                                                                  StdServiceLine.SETRANGE("Standard Service Code",Code);
                                                                  StdServiceLine.SETRANGE(Type,StdServiceLine.Type::"G/L Account");
                                                                  StdServiceLine.SETFILTER("Amount Excl. VAT",'<>%1',0);
                                                                  if StdServiceLine.FIND('-') then begin
                                                                    if not CONFIRM(
                                                                         STRSUBSTNO(
                                                                           Text001,FIELDCAPTION("Currency Code"),StdServiceLine.FIELDCAPTION("Amount Excl. VAT"),
                                                                           FIELDCAPTION("Currency Code")),true)
                                                                    then
                                                                      ERROR(Text002);
                                                                    repeat
                                                                      StdServiceLine."Amount Excl. VAT" :=
                                                                        ROUND(StdServiceLine."Amount Excl. VAT",Currency."Amount Rounding Precision");
                                                                      StdServiceLine.MODIFY;
                                                                    until StdServiceLine.NEXT = 0;
                                                                  end;
                                                                end;
                                                                MODIFY;
                                                              END;

                                                   CaptionML=ENU=Currency Code }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      StdServItemGroup@1001 : Record "Standard Service Item Gr. Code";
      StdServiceLine@1000 : Record "Standard Service Line";
      Text001@1002 : TextConst 'ENU=If you change the %1, the %2 will be rounded according to the new %3.';
      Text002@1003 : TextConst 'ENU=The update has been interrupted to respect the warning.';
      Text003@1004 : TextConst 'ENU=%1 of the standard service code must be equal to %2 on the %3.';

    [External]
    PROCEDURE InsertServiceLines@1(ServiceHeader@1000 : Record "Service Header");
    VAR
      Currency@1001 : Record Currency;
      ServHeader@1003 : Record "Service Header";
      ServLine@1004 : Record "Service Line";
      StdServCode@1005 : Record "Standard Service Code";
      StdServLine@1006 : Record "Standard Service Line";
      StdServItemGrCode@1009 : Record "Standard Service Item Gr. Code";
      StdServItemGrCodesForm@1007 : Page "Standard Serv. Item Gr. Codes";
      Factor@1008 : Integer;
    BEGIN
      ServiceHeader.TESTFIELD("No.");
      ServiceHeader.TESTFIELD("Document Type");

      CLEAR(StdServItemGrCodesForm);
      StdServItemGrCode.RESET;
      StdServItemGrCodesForm.SETRECORD(StdServItemGrCode);
      StdServItemGrCodesForm.SETTABLEVIEW(StdServItemGrCode);
      StdServItemGrCodesForm.LOOKUPMODE := true;

      if not (StdServItemGrCodesForm.RUNMODAL = ACTION::LookupOK) then
        exit;
      StdServItemGrCodesForm.GETRECORD(StdServItemGrCode);

      if StdServCode.GET(StdServItemGrCode.Code) then begin
        StdServCode.TESTFIELD(Code);
        if StdServCode."Currency Code" <> ServiceHeader."Currency Code" then
          ERROR(
            Text003,
            StdServCode.FIELDCAPTION("Currency Code"),
            ServiceHeader.FIELDCAPTION("Currency Code"),ServiceHeader.TABLECAPTION);
        StdServLine.SETRANGE("Standard Service Code",StdServCode.Code);
        Currency.Initialize(StdServCode."Currency Code");
        ServLine."Document Type" := ServiceHeader."Document Type";
        ServLine."Document No." := ServiceHeader."No.";
        ServLine.SETRANGE("Document Type",ServiceHeader."Document Type");
        ServLine.SETRANGE("Document No.",ServiceHeader."No.");
        if ServHeader."Prices Including VAT" then
          Factor := 1
        else
          Factor := 0;
        ServLine.LOCKTABLE;
        StdServLine.LOCKTABLE;
        if StdServLine.FIND('-') then
          repeat
            ServLine.INIT;
            ServLine."Line No." := 0;
            ServLine.VALIDATE(Type,StdServLine.Type);
            if StdServLine.Type = StdServLine.Type::" " then begin
              ServLine.VALIDATE("No.",StdServLine."No.");
              ServLine.Description := StdServLine.Description
            end else
              if not StdServLine.EmptyLine then begin
                StdServLine.TESTFIELD("No.");
                ServLine.VALIDATE("No.",StdServLine."No.");
                if StdServLine."Variant Code" <> '' then
                  ServLine.VALIDATE("Variant Code",StdServLine."Variant Code");
                ServLine.VALIDATE(Quantity,StdServLine.Quantity);
                if StdServLine."Unit of Measure Code" <> '' then
                  ServLine.VALIDATE("Unit of Measure Code",StdServLine."Unit of Measure Code");
                ServLine.Description := StdServLine.Description;
                if StdServLine.Type = StdServLine.Type::"G/L Account" then
                  ServLine.VALIDATE(
                    "Unit Price",
                    ROUND(
                      StdServLine."Amount Excl. VAT" *
                      (ServLine."VAT %" / 100 * Factor + 1),Currency."Unit-Amount Rounding Precision"));
              end;
            ServLine."Dimension Set ID" := StdServLine."Dimension Set ID";
            if StdServLine.InsertLine then begin
              ServLine."Line No." := GetNextLineNo(ServLine);
              ServLine.INSERT(true);
              InsertExtendedText(ServLine);
            end;
          until StdServLine.NEXT = 0;
      end;
    END;

    LOCAL PROCEDURE GetNextLineNo@2(ServLine@1001 : Record "Service Line") : Integer;
    BEGIN
      ServLine.SETRANGE("Document Type",ServLine."Document Type");
      ServLine.SETRANGE("Document No.",ServLine."Document No.");
      if ServLine.FINDLAST then
        exit(ServLine."Line No." + 10000);
      exit(10000);
    END;

    LOCAL PROCEDURE InsertExtendedText@4(ServLine@1000 : Record "Service Line");
    VAR
      TransferExtendedText@1001 : Codeunit "Transfer Extended Text";
    BEGIN
      if TransferExtendedText.ServCheckIfAnyExtText(ServLine,false) then
        TransferExtendedText.InsertServExtText(ServLine);
    END;

    BEGIN
    END.
  }
}

