OBJECT Report 95 Date Compress VAT Entries
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData "G/L Entry"=rimd,
                TableData "G/L Register"=rimd,
                TableData "Date Compr. Register"=rimd,
                TableData "G/L Entry - VAT Entry Link"=rimd,
                TableData "VAT Entry"=rimd;
    CaptionML=ENU=Date Compress VAT Entries;
    ProcessingOnly=true;
    OnPreReport=BEGIN
                  VATEntryFilter := COPYSTR("VAT Entry".GETFILTERS,1,MAXSTRLEN(DateComprReg.Filter));
                END;

  }
  DATASET
  {
    { 7612;    ;DataItem;VAT Entry           ;
               DataItemTable="VAT Entry";
               DataItemTableView=SORTING(Type,Closed);
               OnPreDataItem=BEGIN
                               if not
                                  CONFIRM(
                                    Text000 +
                                    Text002,false)
                               then
                                 CurrReport.BREAK;

                               if EntrdDateComprReg."Ending Date" = 0D then
                                 ERROR(STRSUBSTNO(Text003,EntrdDateComprReg.FIELDCAPTION("Ending Date")));

                               Window.OPEN(
                                 Text004 +
                                 Text005 +
                                 Text006 +
                                 Text007 +
                                 Text008 +
                                 Text009 +
                                 Text010 +
                                 Text011 +
                                 Text012);

                               SourceCodeSetup.GET;
                               SourceCodeSetup.TESTFIELD("Compress VAT Entries");

                               GLEntry.LOCKTABLE;
                               NewVATEntry.LOCKTABLE;
                               GLReg.LOCKTABLE;
                               DateComprReg.LOCKTABLE;

                               if GLEntry.FINDLAST then;
                               LastGLEntryNo := GLEntry."Entry No.";
                               NextTransactionNo := GLEntry."Transaction No." + 1;
                               if NewVATEntry.FINDLAST then;
                               LastVATEntryNo := NewVATEntry."Entry No.";
                               SETRANGE("Entry No.",0,LastVATEntryNo);
                               SETRANGE("Posting Date",EntrdDateComprReg."Starting Date",EntrdDateComprReg."Ending Date");

                               InitRegisters;
                             END;

               OnAfterGetRecord=BEGIN
                                  VATEntry2 := "VAT Entry";
                                  with VATEntry2 do begin
                                    if not
                                       SETCURRENTKEY(
                                         Type,Closed,"VAT Bus. Posting Group","VAT Prod. Posting Group","Posting Date")
                                    then
                                      SETCURRENTKEY(
                                        Type,Closed,"Tax Jurisdiction Code","Use Tax","Posting Date");
                                    COPYFILTERS("VAT Entry");
                                    SETRANGE(Type,Type);
                                    SETRANGE(Closed,Closed);
                                    SETRANGE("VAT Bus. Posting Group","VAT Bus. Posting Group");
                                    SETRANGE("VAT Prod. Posting Group","VAT Prod. Posting Group");
                                    SETRANGE("Tax Jurisdiction Code","Tax Jurisdiction Code");
                                    SETRANGE("Use Tax","Use Tax");
                                    SETFILTER("Posting Date",DateComprMgt.GetDateFilter("Posting Date",EntrdDateComprReg,true));
                                    SETRANGE("Document Type","Document Type");

                                    LastVATEntryNo := LastVATEntryNo + 1;

                                    NewVATEntry.INIT;
                                    NewVATEntry."Entry No." := LastVATEntryNo;
                                    NewVATEntry.Type := Type;
                                    NewVATEntry.Closed := Closed;
                                    NewVATEntry."VAT Bus. Posting Group" := "VAT Bus. Posting Group";
                                    NewVATEntry."VAT Prod. Posting Group" := "VAT Prod. Posting Group";
                                    NewVATEntry."Tax Jurisdiction Code" := "Tax Jurisdiction Code";
                                    NewVATEntry."Use Tax" := "Use Tax";
                                    NewVATEntry."Posting Date" := GETRANGEMIN("Posting Date");
                                    NewVATEntry."Document Type" := "Document Type";
                                    NewVATEntry."Source Code" := SourceCodeSetup."Compress VAT Entries";
                                    NewVATEntry."User ID" := USERID;
                                    NewVATEntry."Transaction No." := NextTransactionNo;
                                    Window.UPDATE(1,NewVATEntry.Type);
                                    Window.UPDATE(2,NewVATEntry."VAT Bus. Posting Group");
                                    Window.UPDATE(3,NewVATEntry."VAT Prod. Posting Group");
                                    Window.UPDATE(4,NewVATEntry."Tax Jurisdiction Code");
                                    Window.UPDATE(5,NewVATEntry."Use Tax");
                                    Window.UPDATE(6,NewVATEntry."Posting Date");
                                    DateComprReg."No. of New Records" := DateComprReg."No. of New Records" + 1;
                                    Window.UPDATE(7,DateComprReg."No. of New Records");

                                    if RetainNo(FIELDNO("Document No.")) then begin
                                      SETRANGE("Document No.","Document No.");
                                      NewVATEntry."Document No." := "Document No.";
                                    end;
                                    if RetainNo(FIELDNO("Bill-to/Pay-to No.")) then begin
                                      SETRANGE("Bill-to/Pay-to No.","Bill-to/Pay-to No.");
                                      NewVATEntry."Bill-to/Pay-to No." := "Bill-to/Pay-to No.";
                                    end;
                                    if RetainNo(FIELDNO("EU 3-Party Trade")) then begin
                                      SETRANGE("EU 3-Party Trade","EU 3-Party Trade");
                                      NewVATEntry."EU 3-Party Trade" := "EU 3-Party Trade";
                                    end;
                                    if RetainNo(FIELDNO("Country/Region Code")) then begin
                                      SETRANGE("Country/Region Code","Country/Region Code");
                                      NewVATEntry."Country/Region Code" := "Country/Region Code";
                                    end;
                                    if RetainNo(FIELDNO("Internal Ref. No.")) then begin
                                      SETRANGE("Internal Ref. No.","Internal Ref. No.");
                                      NewVATEntry."Internal Ref. No." := "Internal Ref. No.";
                                    end;
                                    if Base >= 0 then
                                      SETFILTER(Base,'>=0')
                                    else
                                      SETFILTER(Base,'<0');
                                    repeat
                                      NewVATEntry.Base := NewVATEntry.Base + Base;
                                      NewVATEntry.Amount := NewVATEntry.Amount + Amount;
                                      NewVATEntry."Unrealized Amount" := NewVATEntry."Unrealized Amount" + "Unrealized Amount";
                                      NewVATEntry."Unrealized Base" := NewVATEntry."Unrealized Base" + "Unrealized Base";
                                      NewVATEntry."Additional-Currency Base" :=
                                        NewVATEntry."Additional-Currency Base" + "Additional-Currency Base";
                                      NewVATEntry."Additional-Currency Amount" :=
                                        NewVATEntry."Additional-Currency Amount" + "Additional-Currency Amount";
                                      NewVATEntry."Add.-Currency Unrealized Amt." :=
                                        NewVATEntry."Add.-Currency Unrealized Amt." + "Add.-Currency Unrealized Amt.";
                                      NewVATEntry."Add.-Currency Unrealized Base" :=
                                        NewVATEntry."Add.-Currency Unrealized Base" + "Add.-Currency Unrealized Base";
                                      NewVATEntry."Remaining Unrealized Amount" :=
                                        NewVATEntry."Remaining Unrealized Amount" + "Remaining Unrealized Amount";
                                      NewVATEntry."Remaining Unrealized Base" :=
                                        NewVATEntry."Remaining Unrealized Base" + "Remaining Unrealized Base";
                                      DELETE;
                                      GLEntryVATEntryLink.SETRANGE("VAT Entry No.","Entry No.");
                                      if GLEntryVATEntryLink.FINDSET then
                                        repeat
                                          GLEntryVATEntryLink2 := GLEntryVATEntryLink;
                                          GLEntryVATEntryLink2.DELETE;
                                          GLEntryVATEntryLink2."VAT Entry No." := NewVATEntry."Entry No.";
                                          if GLEntryVATEntryLink2.INSERT then;
                                        until GLEntryVATEntryLink.NEXT = 0;
                                      DateComprReg."No. Records Deleted" := DateComprReg."No. Records Deleted" + 1;
                                      Window.UPDATE(8,DateComprReg."No. Records Deleted");
                                    until NEXT = 0;
                                    NewVATEntry.INSERT;
                                  end;

                                  if DateComprReg."No. Records Deleted" >= NoOfDeleted + 10 then begin
                                    NoOfDeleted := DateComprReg."No. Records Deleted";
                                    InsertRegisters(GLReg,DateComprReg);
                                  end;
                                END;

               OnPostDataItem=BEGIN
                                if DateComprReg."No. Records Deleted" > NoOfDeleted then
                                  InsertRegisters(GLReg,DateComprReg);
                              END;

               ReqFilterFields=Type,"VAT Bus. Posting Group","VAT Prod. Posting Group","Tax Jurisdiction Code","Use Tax",Closed }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
      OnOpenPage=BEGIN
                   if EntrdDateComprReg."Ending Date" = 0D then
                     EntrdDateComprReg."Ending Date" := TODAY;

                   with "VAT Entry" do begin
                     InsertField(FIELDNO("Document No."),FIELDCAPTION("Document No."));
                     InsertField(FIELDNO("Bill-to/Pay-to No."),FIELDCAPTION("Bill-to/Pay-to No."));
                     InsertField(FIELDNO("EU 3-Party Trade"),FIELDCAPTION("EU 3-Party Trade"));
                     InsertField(FIELDNO("Country/Region Code"),FIELDCAPTION("Country/Region Code"));
                     InsertField(FIELDNO("Internal Ref. No."),FIELDCAPTION("Internal Ref. No."));
                   end;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=Starting Date;
                  CaptionML=ENU=Starting Date;
                  ToolTipML=ENU=Specifies the first date to be included in the date compression. The compression affects all VAT entries from this date to the Ending Date field.;
                  ApplicationArea=#Advanced;
                  SourceExpr=EntrdDateComprReg."Starting Date" }

      { 2   ;2   ;Field     ;
                  Name=Ending Date;
                  CaptionML=ENU=Ending Date;
                  ToolTipML=ENU=Specifies the last date to be included in the date compression. The compression affects all VAT entries from the Starting Date field.;
                  ApplicationArea=#Advanced;
                  SourceExpr=EntrdDateComprReg."Ending Date" }

      { 3   ;2   ;Field     ;
                  Name=Period Length;
                  CaptionML=ENU=Period Length;
                  ToolTipML=ENU=Specifies the length of the period whose entries will be combined. To see the options, choose the field.;
                  OptionCaptionML=ENU=Day,Week,Month,Quarter,Year,Period;
                  ApplicationArea=#Advanced;
                  SourceExpr=EntrdDateComprReg."Period Length" }

      { 1907651001;2;Group  ;
                  Name=Retain Field Contents;
                  CaptionML=ENU=Retain Field Contents }

      { 4   ;3   ;Field     ;
                  Name=Document No.;
                  CaptionML=ENU=Document No.;
                  ToolTipML=ENU="Specifies if you want to retain the contents of the Document No. field. ";
                  ApplicationArea=#Advanced;
                  SourceExpr=Retain[1] }

      { 5   ;3   ;Field     ;
                  Name=Bill-to/Pay-to No.;
                  CaptionML=ENU=Bill-to/Pay-to No.;
                  ToolTipML=ENU="Specifies whether you want to retain the contents of the Bill-to/Pay-to No. field. ";
                  ApplicationArea=#Advanced;
                  SourceExpr=Retain[2] }

      { 6   ;3   ;Field     ;
                  Name=EU 3-Party Trade;
                  CaptionML=ENU=EU 3-Party Trade;
                  ToolTipML=ENU="Specifies if you want to retain the contents of the EU 3-Party Trade field. ";
                  ApplicationArea=#Advanced;
                  SourceExpr=Retain[3] }

      { 7   ;3   ;Field     ;
                  Name=Country/Region Code;
                  CaptionML=ENU=Country/Region Code;
                  ToolTipML=ENU=Specifies if you want to retain the address country/region field contents.;
                  ApplicationArea=#Advanced;
                  SourceExpr=Retain[4] }

      { 8   ;3   ;Field     ;
                  Name=Internal Ref. No.;
                  CaptionML=ENU=Internal Ref. No.;
                  ToolTipML=ENU=Specifies if you want to retain the contents of the Internal Ref. No. field.;
                  ApplicationArea=#Advanced;
                  SourceExpr=Retain[5] }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=This batch job deletes entries. Therefore, it is important that you make a backup of the database before you run the batch job.\\';
      Text002@1002 : TextConst 'ENU=Do you want to date compress the entries?';
      Text003@1003 : TextConst 'ENU=%1 must be specified.';
      Text004@1004 : TextConst 'ENU=Date compressing VAT entries...\\';
      Text005@1005 : TextConst 'ENU=Type                     #1##########\';
      Text006@1006 : TextConst 'ENU=VAT Bus. Posting Group   #2##########\';
      Text007@1007 : TextConst 'ENU=VAT Prod. Posting Group  #3##########\';
      Text008@1008 : TextConst 'ENU=Tax Jurisdiction         #4##########\';
      Text009@1009 : TextConst 'ENU=Use Tax                  #5##########\';
      Text010@1010 : TextConst 'ENU=Date                     #6######\\';
      Text011@1011 : TextConst 'ENU=No. of new entries       #7######\';
      Text012@1012 : TextConst 'ENU=No. of entries deleted   #8######';
      SourceCodeSetup@1013 : Record "Source Code Setup";
      EntrdDateComprReg@1014 : Record "Date Compr. Register";
      DateComprReg@1015 : Record "Date Compr. Register";
      GLReg@1016 : Record "G/L Register";
      NewVATEntry@1017 : Record "VAT Entry";
      VATEntry2@1018 : Record "VAT Entry";
      GLEntry@1019 : Record "G/L Entry";
      GLEntryVATEntryLink@1033 : Record "G/L Entry - VAT Entry Link";
      GLEntryVATEntryLink2@1034 : Record "G/L Entry - VAT Entry Link";
      DateComprMgt@1020 : Codeunit DateComprMgt;
      Window@1021 : Dialog;
      VATEntryFilter@1022 : Text[250];
      NoOfFields@1023 : Integer;
      Retain@1024 : ARRAY [10] OF Boolean;
      FieldNumber@1025 : ARRAY [10] OF Integer;
      FieldNameArray@1026 : ARRAY [10] OF Text[100];
      LastGLEntryNo@1027 : Integer;
      LastVATEntryNo@1028 : Integer;
      NextTransactionNo@1029 : Integer;
      NoOfDeleted@1030 : Integer;
      GLRegExists@1031 : Boolean;
      i@1032 : Integer;

    LOCAL PROCEDURE InitRegisters@4();
    BEGIN
      if GLReg.FIND('+') then;
      GLReg.INIT;
      GLReg."No." := GLReg."No." + 1;
      GLReg."Creation Date" := TODAY;
      GLReg."Source Code" := SourceCodeSetup."Compress VAT Entries";
      GLReg."User ID" := USERID;
      GLReg."From Entry No." := LastGLEntryNo + 1;
      GLReg."From VAT Entry No." := LastVATEntryNo + 1;

      if DateComprReg.FINDLAST then;
      DateComprReg.INIT;
      DateComprReg."No." := DateComprReg."No." + 1;
      DateComprReg."Table ID" := DATABASE::"VAT Entry";
      DateComprReg."Creation Date" := TODAY;
      DateComprReg."Starting Date" := EntrdDateComprReg."Starting Date";
      DateComprReg."Ending Date" := EntrdDateComprReg."Ending Date";
      DateComprReg."Period Length" := EntrdDateComprReg."Period Length";
      for i := 1 to NoOfFields do
        if Retain[i] then
          DateComprReg."Retain Field Contents" :=
            COPYSTR(
              DateComprReg."Retain Field Contents" + ',' + FieldNameArray[i],1,
              MAXSTRLEN(DateComprReg."Retain Field Contents"));
      DateComprReg."Retain Field Contents" := COPYSTR(DateComprReg."Retain Field Contents",2);
      DateComprReg.Filter := VATEntryFilter;
      DateComprReg."Register No." := GLReg."No.";
      DateComprReg."Source Code" := SourceCodeSetup."Compress VAT Entries";
      DateComprReg."User ID" := USERID;

      GLRegExists := false;
      NoOfDeleted := 0;
    END;

    LOCAL PROCEDURE InsertRegisters@1(VAR GLReg@1000 : Record "G/L Register";VAR DateComprReg@1001 : Record "Date Compr. Register");
    BEGIN
      GLEntry.INIT;
      LastGLEntryNo := LastGLEntryNo + 1;
      GLEntry."Entry No." := LastGLEntryNo;
      GLEntry."Posting Date" := TODAY;
      GLEntry."Source Code" := SourceCodeSetup."Compress VAT Entries";
      GLEntry."System-Created Entry" := true;
      GLEntry."User ID" := USERID;
      GLEntry."Transaction No." := NextTransactionNo;
      GLEntry.INSERT;
      GLEntry.CONSISTENT(GLEntry.Amount = 0);
      GLReg."To Entry No." := GLEntry."Entry No.";
      GLReg."To VAT Entry No." := NewVATEntry."Entry No.";

      if GLRegExists then begin
        GLReg.MODIFY;
        DateComprReg.MODIFY;
      end else begin
        GLReg.INSERT;
        DateComprReg.INSERT;
        GLRegExists := true;
      end;
      COMMIT;

      GLEntry.LOCKTABLE;
      NewVATEntry.LOCKTABLE;
      GLReg.LOCKTABLE;
      DateComprReg.LOCKTABLE;

      if GLEntry.FINDLAST then;
      if NewVATEntry.FINDLAST then;
      if (LastGLEntryNo <> GLEntry."Entry No.") or
         (LastVATEntryNo <> NewVATEntry."Entry No.")
      then begin
        LastGLEntryNo := GLEntry."Entry No.";
        LastVATEntryNo := NewVATEntry."Entry No.";
        NextTransactionNo := GLEntry."Transaction No." + 1;
        InitRegisters;
      end;
    END;

    LOCAL PROCEDURE InsertField@2(Number@1000 : Integer;Name@1001 : Text[100]);
    BEGIN
      NoOfFields := NoOfFields + 1;
      FieldNumber[NoOfFields] := Number;
      FieldNameArray[NoOfFields] := Name;
    END;

    LOCAL PROCEDURE RetainNo@3(Number@1000 : Integer) : Boolean;
    BEGIN
      exit(Retain[Index(Number)]);
    END;

    LOCAL PROCEDURE Index@6(Number@1000 : Integer) : Integer;
    BEGIN
      for i := 1 to NoOfFields do
        if Number = FieldNumber[i] then
          exit(i);
    END;

    LOCAL PROCEDURE InitializeParameter@10();
    BEGIN
      if EntrdDateComprReg."Ending Date" = 0D then
        EntrdDateComprReg."Ending Date" := TODAY;

      with "VAT Entry" do begin
        InsertField(FIELDNO("Document No."),FIELDCAPTION("Document No."));
        InsertField(FIELDNO("Bill-to/Pay-to No."),FIELDCAPTION("Bill-to/Pay-to No."));
        InsertField(FIELDNO("EU 3-Party Trade"),FIELDCAPTION("EU 3-Party Trade"));
        InsertField(FIELDNO("Country/Region Code"),FIELDCAPTION("Country/Region Code"));
        InsertField(FIELDNO("Internal Ref. No."),FIELDCAPTION("Internal Ref. No."));
      end;
    END;

    [External]
    PROCEDURE InitializeRequest@15(StartingDate@1007 : Date;EndingDate@1006 : Date;PeriodLength@1005 : Option;RetainDocumentNo@1003 : Boolean;RetainBilltoPaytoNo@1002 : Boolean;RetainEU3PartyTrade@1001 : Boolean;RetainCountryRegionCode@1000 : Boolean;RetainInternalRefNo@1008 : Boolean);
    BEGIN
      InitializeParameter;
      EntrdDateComprReg."Starting Date" := StartingDate;
      EntrdDateComprReg."Ending Date" := EndingDate;
      EntrdDateComprReg."Period Length" := PeriodLength;
      Retain[1] := RetainDocumentNo;
      Retain[2] := RetainBilltoPaytoNo;
      Retain[3] := RetainEU3PartyTrade;
      Retain[4] := RetainCountryRegionCode;
      Retain[5] := RetainInternalRefNo;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

