OBJECT Table 2850 Native - API Tax Setup
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Native - API Tax Setup;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=ENU=Code }
    { 2   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 3   ;   ;Total Tax Percentage;Decimal       ;CaptionML=ENU=Total Tax Percentage }
    { 10  ;   ;Last Modified Date Time;DateTime   ;CaptionML=ENU=Last Modified Date Time;
                                                   Editable=false }
    { 20  ;   ;VAT Percentage      ;Decimal       ;CaptionML=ENU=VAT Percentage }
    { 21  ;   ;VAT Regulation Reference ID;GUID   ;CaptionML=ENU=VAT Regulation Reference ID }
    { 22  ;   ;VAT Regulation Description;Text250 ;CaptionML=ENU=VAT Regulation Description }
    { 30  ;   ;City                ;Text30        ;CaptionML=ENU=City }
    { 31  ;   ;City Rate           ;Decimal       ;OnValidate=BEGIN
                                                                "Total Tax Percentage" := "City Rate" + "State Rate";
                                                              END;

                                                   CaptionML=ENU=City Rate }
    { 32  ;   ;State               ;Code2         ;CaptionML=ENU=State }
    { 33  ;   ;State Rate          ;Decimal       ;OnValidate=BEGIN
                                                                "Total Tax Percentage" := "City Rate" + "State Rate";
                                                              END;

                                                   CaptionML=ENU=State Rate }
    { 40  ;   ;GST or HST Code     ;Code10        ;CaptionML=ENU=GST or HST Code }
    { 41  ;   ;GST or HST Description;Text50      ;CaptionML=ENU=GST or HST Description;
                                                   Editable=false }
    { 42  ;   ;GST or HST Rate     ;Decimal       ;OnValidate=BEGIN
                                                                "Total Tax Percentage" := "PST Rate" + "GST or HST Rate";
                                                              END;

                                                   CaptionML=ENU=GST or HST Rate }
    { 45  ;   ;PST Code            ;Code10        ;CaptionML=ENU=PST Code }
    { 46  ;   ;PST Description     ;Text50        ;CaptionML=ENU=PST Description;
                                                   Editable=false }
    { 47  ;   ;PST Rate            ;Decimal       ;OnValidate=BEGIN
                                                                "Total Tax Percentage" := "PST Rate" + "GST or HST Rate";
                                                              END;

                                                   CaptionML=ENU=PST Rate }
    { 100 ;   ;Default             ;Boolean       ;OnValidate=BEGIN
                                                                if xRec.Default and (not Default) then
                                                                  ERROR(OneValueMustBeDefaultErr);
                                                              END;

                                                   CaptionML=ENU=Default }
    { 8000;   ;Id                  ;GUID          ;CaptionML=ENU=Id }
    { 9600;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=[ENU="@@@={Locked};ENU=Sales Tax,VAT"];
                                                   OptionString="Sales Tax",VAT }
  }
  KEYS
  {
    {    ;Id                                      ;Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      RecordMustBeTemporaryErr@1001 : TextConst 'ENU=Tax Group Entity must be used as a temporary record.';
      OneValueMustBeDefaultErr@1000 : TextConst 'ENU=One value must be default. To remove default select different entry as default.';

    PROCEDURE LoadSetupRecords@2();
    VAR
      TempTaxAreaBuffer@1000 : TEMPORARY Record "Tax Area Buffer";
    BEGIN
      if not ISTEMPORARY then
        ERROR(RecordMustBeTemporaryErr);

      if not TempTaxAreaBuffer.LoadRecords then
        exit;

      LoadFromTaxArea(TempTaxAreaBuffer);
    END;

    PROCEDURE ReloadRecord@3();
    VAR
      TempTaxAreaBuffer@1002 : TEMPORARY Record "Tax Area Buffer";
      TempTaxGroupBuffer@1001 : TEMPORARY Record "Tax Group Buffer";
      CurrentId@1000 : GUID;
    BEGIN
      if not ISTEMPORARY then
        ERROR(RecordMustBeTemporaryErr);

      CurrentId := Id;

      case Type of
        Type::"Sales Tax":
          begin
            CLEAR(Rec);
            DELETEALL;

            if not TempTaxAreaBuffer.LoadRecords then
              exit;

            if not TempTaxAreaBuffer.GET(CurrentId) then
              exit;

            LoadFromTaxArea(TempTaxAreaBuffer);
            SETRANGE(Id,CurrentId);
            FINDFIRST;
          end;
        Type::VAT:
          begin
            CLEAR(Rec);
            DELETEALL;

            if not TempTaxGroupBuffer.LoadRecords then
              exit;

            if not TempTaxGroupBuffer.GET(CurrentId) then
              exit;

            LoadFromTaxGroup(TempTaxGroupBuffer);
            INSERT;
            SETRANGE(Id,CurrentId);
            FINDFIRST;
          end;
      end;
    END;

    LOCAL PROCEDURE LoadFromTaxArea@4(VAR TempTaxAreaBuffer@1000 : TEMPORARY Record "Tax Area Buffer");
    VAR
      TaxAreaBuffer@1001 : Record "Tax Area Buffer";
    BEGIN
      case TempTaxAreaBuffer.Type of
        TempTaxAreaBuffer.Type::VAT:
          LoadVATSettings;
        TaxAreaBuffer.Type::"Sales Tax":
          OnLoadSalesTaxSettings(Rec,TempTaxAreaBuffer);
      end;
    END;

    PROCEDURE SaveChanges@12(VAR PreviousNativeAPITaxSetup@1000 : Record "Native - API Tax Setup");
    BEGIN
      case Type of
        Type::VAT:
          SaveVATSettings(PreviousNativeAPITaxSetup);
        Type::"Sales Tax":
          OnSaveSalesTaxSettings(Rec);
      end;
    END;

    LOCAL PROCEDURE LoadVATSettings@8();
    VAR
      TempTaxGroupBuffer@1000 : TEMPORARY Record "Tax Group Buffer";
    BEGIN
      if not TempTaxGroupBuffer.LoadRecords then
        exit;

      repeat
        CLEAR(Rec);
        LoadFromTaxGroup(TempTaxGroupBuffer);
        INSERT;
      until TempTaxGroupBuffer.NEXT = 0;
    END;

    LOCAL PROCEDURE LoadFromTaxGroup@5(VAR TempTaxGroupBuffer@1003 : TEMPORARY Record "Tax Group Buffer");
    VAR
      VATClause@1002 : Record "VAT Clause";
      VATPostingSetup@1001 : Record "VAT Posting Setup";
      O365TemplateManagement@1000 : Codeunit "O365 Template Management";
    BEGIN
      TRANSFERFIELDS(TempTaxGroupBuffer,true);
      "Last Modified Date Time" := TempTaxGroupBuffer."Last Modified DateTime";

      if not VATPostingSetup.GET(O365TemplateManagement.GetDefaultVATBusinessPostingGroup,Code) then
        exit;

      "VAT Percentage" := VATPostingSetup."VAT %";
      Default := Code = O365TemplateManagement.GetDefaultVATProdPostingGroup;

      // VAT Regulation Reference = Vat clause
      if not VATClause.GET(VATPostingSetup."VAT Clause Code") then begin
        VATClause.INIT;
        VATClause.Code := Code;
        VATClause.INSERT;
        VATPostingSetup.VALIDATE("VAT Clause Code",Code);
        VATPostingSetup.MODIFY(true);
      end;

      "VAT Regulation Reference ID" := VATClause.Id;
      "VAT Regulation Description" := VATClause.Description;
    END;

    LOCAL PROCEDURE SaveVATSettings@17(VAR PreviousNativeAPITaxSetup@1002 : Record "Native - API Tax Setup");
    VAR
      VATProductPostingGroup@1001 : Record "VAT Product Posting Group";
      O365TemplateManagement@1000 : Codeunit "O365 Template Management";
    BEGIN
      if Default then
        O365TemplateManagement.SetDefaultVATProdPostingGroup(Code);

      UpdateVATClause(PreviousNativeAPITaxSetup);
      UpdateVATPercentage(PreviousNativeAPITaxSetup);

      if Description <> PreviousNativeAPITaxSetup.Description then begin
        VATProductPostingGroup.GET(Code);
        VATProductPostingGroup.VALIDATE(Description,Description);
        VATProductPostingGroup.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateVATClause@21(VAR PreviousNativeAPITaxSetup@1004 : Record "Native - API Tax Setup");
    VAR
      VATPostingSetup@1003 : Record "VAT Posting Setup";
      VATClause@1002 : Record "VAT Clause";
      O365TemplateManagement@1000 : Codeunit "O365 Template Management";
    BEGIN
      VATClause.SETRANGE(Id,"VAT Regulation Reference ID");
      VATClause.FINDFIRST;

      if PreviousNativeAPITaxSetup."VAT Regulation Reference ID" <> "VAT Regulation Reference ID" then begin
        VATPostingSetup.GET(O365TemplateManagement.GetDefaultVATBusinessPostingGroup,Code);
        VATPostingSetup.VALIDATE("VAT Clause Code",VATClause.Code);
        VATPostingSetup.MODIFY(true);
      end;

      if VATClause.Description <> "VAT Regulation Description" then begin
        VATClause.VALIDATE(Description,"VAT Regulation Description");
        VATClause.MODIFY(true);
      end;
    END;

    LOCAL PROCEDURE UpdateVATPercentage@23(VAR PreviousNativeAPITaxSetup@1000 : Record "Native - API Tax Setup");
    VAR
      VATPostingSetup@1004 : Record "VAT Posting Setup";
      SalesLine@1002 : Record "Sales Line";
      O365TemplateManagement@1001 : Codeunit "O365 Template Management";
    BEGIN
      if PreviousNativeAPITaxSetup."VAT Percentage" <> "VAT Percentage" then begin
        VATPostingSetup.GET(O365TemplateManagement.GetDefaultVATBusinessPostingGroup,Code);
        VATPostingSetup.VALIDATE("VAT %","VAT Percentage");
        VATPostingSetup.MODIFY(true);

        SalesLine.SETRANGE("VAT Prod. Posting Group",Code);
        if SalesLine.FINDSET then
          repeat
            SalesLine.VALIDATE("VAT Prod. Posting Group");
            SalesLine.MODIFY(true);
          until SalesLine.NEXT = 0;
      end;
    END;

    [Integration]
    LOCAL PROCEDURE OnLoadSalesTaxSettings@6(VAR NativeAPITaxSetup@1001 : Record "Native - API Tax Setup";VAR TempTaxAreaBuffer@1000 : TEMPORARY Record "Tax Area Buffer");
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnSaveSalesTaxSettings@18(VAR NewNativeAPITaxSetup@1000 : Record "Native - API Tax Setup");
    BEGIN
    END;

    PROCEDURE GetTaxAreaDisplayName@1(TaxAreaId@1000 : GUID) : Text;
    VAR
      TaxArea@1001 : Record "Tax Area";
      VATBusinessPostingGroup@1002 : Record "VAT Business Posting Group";
      GeneralLedgerSetup@1003 : Record "General Ledger Setup";
    BEGIN
      if ISNULLGUID(TaxAreaId) then
        exit;

      if GeneralLedgerSetup.UseVat then begin
        VATBusinessPostingGroup.SETRANGE(Id,TaxAreaId);
        if not VATBusinessPostingGroup.FINDFIRST then
          exit;

        exit(VATBusinessPostingGroup.Description);
      end;

      TaxArea.SETRANGE(Id,TaxAreaId);
      if not TaxArea.FINDFIRST then
        exit;

      exit(TaxArea.Description);
    END;

    BEGIN
    END.
  }
}

