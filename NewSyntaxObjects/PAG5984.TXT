OBJECT Page 5984 Service Item Trend Lines
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    LinksAllowed=false;
    SourceTable=Date;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 RESET;
               END;

    OnFindRecord=BEGIN
                   exit(PeriodFormMgt.FindDate(Which,Rec,PeriodType));
                 END;

    OnNextRecord=BEGIN
                   exit(PeriodFormMgt.NextDate(Steps,Rec,PeriodType));
                 END;

    OnAfterGetRecord=BEGIN
                       SetDateFilter;
                       ServItem.CALCFIELDS("Invoiced Amount","Resources Used","Parts Used","Cost Used","Prepaid Amount");
                       Profit := ServItem."Invoiced Amount" - ServItem."Resources Used" - ServItem."Parts Used" - ServItem."Cost Used";
                       if ServItem."Invoiced Amount" <> 0 then
                         ProfitPct := ROUND((Profit / ServItem."Invoiced Amount") * 100,0.01)
                       else
                         ProfitPct := 0;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=Group1;
                Editable=FALSE;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                Name=Period Start;
                CaptionML=ENU=Period Start;
                ToolTipML=ENU=Specifies the start date of the period defined on the line for the service trend.;
                ApplicationArea=#Service;
                SourceExpr="Period Start";
                ImplicitType=Date }

    { 6   ;2   ;Field     ;
                Name=Period Name;
                CaptionML=ENU=Period Name;
                ToolTipML=ENU=Specifies the name of the period shown in the line.;
                ApplicationArea=#Service;
                SourceExpr="Period Name";
                ImplicitType=Text31 }

    { 18  ;2   ;Field     ;
                Name=Prepaid Income;
                CaptionML=ENU=Prepaid Income;
                ToolTipML=ENU=Specifies the total income (in LCY) that has been posted to the prepaid account with regard to the service item in the periods specified in the Period Start field.;
                ApplicationArea=#Prepayments;
                SourceExpr=ServItem."Prepaid Amount";
                OnDrillDown=BEGIN
                              ShowServLedgEntries(false);
                            END;
                             }

    { 4   ;2   ;Field     ;
                Name=Posted Income;
                DrillDown=true;
                CaptionML=ENU=Posted Income;
                ToolTipML=ENU=Specifies the total income (in LCY) that has been posted to the general ledger for the service item in the periods specified in the Period Start field.;
                ApplicationArea=#Service;
                SourceExpr=ServItem."Invoiced Amount";
                OnDrillDown=BEGIN
                              ShowServLedgEntries(true);
                            END;
                             }

    { 8   ;2   ;Field     ;
                Name=Parts Used;
                DrillDown=true;
                CaptionML=ENU=Parts Used;
                ToolTipML=ENU=Specifies the cost of resources used in the specified period.;
                ApplicationArea=#Service;
                SourceExpr=ServItem."Parts Used";
                OnDrillDown=BEGIN
                              ShowServLedgEntriesByType(ServLedgEntry.Type::Item);
                            END;
                             }

    { 10  ;2   ;Field     ;
                Name=Resources Used;
                DrillDown=true;
                CaptionML=ENU=Resources Used;
                ToolTipML=ENU=Specifies the cost of spare parts used in the period shown in the Period Start field.;
                ApplicationArea=#Service;
                SourceExpr=ServItem."Resources Used";
                OnDrillDown=BEGIN
                              ShowServLedgEntriesByType(ServLedgEntry.Type::Resource);
                            END;
                             }

    { 12  ;2   ;Field     ;
                Name=Cost Used;
                CaptionML=ENU=Cost Used;
                ToolTipML=ENU=Specifies the amount of service usage based on service cost for this service item.;
                ApplicationArea=#Service;
                SourceExpr=ServItem."Cost Used";
                OnDrillDown=BEGIN
                              ShowServLedgEntriesByType(ServLedgEntry.Type::"Service Cost");
                            END;
                             }

    { 14  ;2   ;Field     ;
                Name=Profit;
                CaptionML=ENU=Profit;
                ToolTipML=ENU=Specifies the profit (posted income minus posted cost in LCY) for the service item in the period specified in the Period Start field.;
                ApplicationArea=#Service;
                SourceExpr=Profit;
                AutoFormatType=1;
                ImplicitType=Decimal }

    { 16  ;2   ;Field     ;
                Name=ProfitPct;
                CaptionML=ENU=Profit %;
                ToolTipML=ENU=Specifies the profit percentage for the service item in the specified period.;
                ApplicationArea=#Service;
                SourceExpr=ProfitPct;
                ImplicitType=Decimal }

  }
  CODE
  {
    VAR
      ServItem@1000 : Record "Service Item";
      ServLedgEntry@1001 : Record "Service Ledger Entry";
      PeriodFormMgt@1002 : Codeunit PeriodFormManagement;
      PeriodType@1003 : 'Day,Week,Month,Quarter,Year,"Accounting Period"';
      AmountType@1004 : '"Net Change","Balance at Date"';
      Profit@1005 : Decimal;
      ProfitPct@1006 : Decimal;

    [External]
    PROCEDURE Set@1(VAR ServItem1@1000 : Record "Service Item";NewPeriodType@1001 : Integer;NewAmountType@1002 : '"Net Change","Balance at Date"');
    BEGIN
      ServItem.COPY(ServItem1);
      PeriodType := NewPeriodType;
      AmountType := NewAmountType;
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE SetDateFilter@4();
    BEGIN
      if AmountType = AmountType::"Net Change" then
        ServItem.SETRANGE("Date Filter","Period Start","Period End")
      else
        ServItem.SETRANGE("Date Filter",0D,"Period End");
    END;

    LOCAL PROCEDURE ShowServLedgEntries@2(Prepaid@1000 : Boolean);
    BEGIN
      SetDateFilter;
      ServLedgEntry.RESET;
      ServLedgEntry.SETCURRENTKEY("Service Item No. (Serviced)","Entry Type","Moved from Prepaid Acc.",Type,"Posting Date");
      ServLedgEntry.SETRANGE("Service Item No. (Serviced)",ServItem."No.");
      ServLedgEntry.SETRANGE("Entry Type",ServLedgEntry."Entry Type"::Sale);
      ServLedgEntry.SETRANGE("Moved from Prepaid Acc.",Prepaid);
      ServLedgEntry.SETRANGE(Open,false);
      ServLedgEntry.SETFILTER("Posting Date",ServItem.GETFILTER("Date Filter"));
      PAGE.RUN(0,ServLedgEntry);
    END;

    LOCAL PROCEDURE ShowServLedgEntriesByType@5(Type@1000 : Option);
    BEGIN
      SetDateFilter;
      ServLedgEntry.RESET;
      ServLedgEntry.SETCURRENTKEY("Service Item No. (Serviced)","Entry Type","Moved from Prepaid Acc.",Type,"Posting Date");
      ServLedgEntry.SETRANGE("Service Item No. (Serviced)",ServItem."No.");
      ServLedgEntry.SETRANGE("Entry Type",ServLedgEntry."Entry Type"::Sale);
      ServLedgEntry.SETRANGE(Type,Type);
      ServLedgEntry.SETFILTER("Posting Date",ServItem.GETFILTER("Date Filter"));
      PAGE.RUN(0,ServLedgEntry);
    END;

    BEGIN
    END.
  }
}

