OBJECT Page 1259 Bank Name - Data Conv. List
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Bank Name - Data Conv. List;
    SourceTable="Bank Data Conv. Bank";
    PageType=List;
    PromotedActionCategoriesML=ENU=New,Process,Page,Setup;
    OnInit=BEGIN
             ShortTimeout := 5000;
             LongTimeout := 30000;
           END;

    OnOpenPage=VAR
                 ImpBankListExtDataHndl@1000 : Codeunit "Imp. Bank List Ext. Data Hndl";
                 CountryRegionCode@1004 : Text;
                 HideErrors@1003 : Boolean;
               BEGIN
                 CountryRegionCode := IdentifyCountryRegionCode(Rec,GETFILTER("Country/Region Code"));

                 if ISEMPTY then begin
                   ImpBankListExtDataHndl.GetBankListFromConversionService(HideErrors,CountryRegionCode,ShortTimeout);
                   exit;
                 end;

                 RefreshBankNamesOlderThanToday(CountryRegionCode,HideErrors,ShortTimeout);
               END;

    ActionList=ACTIONS
    {
      { 7       ;    ;ActionContainer;
                      Name=Action;
                      CaptionML=ENU=Setup;
                      ActionContainerType=ActionItems }
      { 6       ;1   ;Action    ;
                      Name=UpdateBankList;
                      ShortCutKey=Ctrl+F5;
                      CaptionML=ENU=Update Bank Name List;
                      ToolTipML=ENU=Update the bank list with any new banks in your country/region.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Image=Restore;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ImpBankListExtDataHndl@1000 : Codeunit "Imp. Bank List Ext. Data Hndl";
                                 FilterNotUsed@1001 : Text;
                                 ShowErrors@1003 : Boolean;
                               BEGIN
                                 ShowErrors := true;
                                 ImpBankListExtDataHndl.GetBankListFromConversionService(ShowErrors,FilterNotUsed,LongTimeout);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=Bank;
                ToolTipML=ENU=Specifies the name of the bank, and potentially its country/region code, that supports your setup for import/export of bank data using the Bank Data Conversion Service feature.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Bank;
                ImplicitType=Text50 }

    { 4   ;2   ;Field     ;
                Name=Bank Name;
                ToolTipML=ENU=Specifies the name of the bank that supports your setup for import/export of bank data using the Bank Data Conversion Service feature.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bank Name";
                ImplicitType=Text50 }

    { 5   ;2   ;Field     ;
                Name=Country/Region Code;
                ToolTipML=ENU=Specifies the country/region of the bank.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Country/Region Code";
                ImplicitType=Code10 }

    { 8   ;2   ;Field     ;
                Name=Last Update Date;
                ToolTipML=ENU=Specifies the last time the list of supported banks was updated.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Last Update Date";
                ImplicitType=Date }

  }
  CODE
  {
    VAR
      LongTimeout@1003 : Integer;
      ShortTimeout@1001 : Integer;

    LOCAL PROCEDURE IdentifyCountryRegionCode@1(VAR BankDataConvBank@1002 : Record "Bank Data Conv. Bank";Filter@1000 : Text) : Text;
    VAR
      CompanyInformation@1001 : Record "Company Information";
      BlankFilter@1003 : Text;
    BEGIN
      BlankFilter := '''''';

      if Filter = BlankFilter then begin
        CompanyInformation.GET;
        BankDataConvBank.SETFILTER("Country/Region Code",CompanyInformation."Country/Region Code");
        exit(BankDataConvBank.GETFILTER("Country/Region Code"));
      end;

      exit(Filter);
    END;

    LOCAL PROCEDURE RefreshBankNamesOlderThanToday@5(CountryRegionCode@1000 : Text;ShowErrors@1002 : Boolean;Timeout@1004 : Integer);
    VAR
      BankDataConvBank@1001 : Record "Bank Data Conv. Bank";
      ImpBankListExtDataHndl@1003 : Codeunit "Imp. Bank List Ext. Data Hndl";
    BEGIN
      if CountryRegionCode <> '' then
        BankDataConvBank.SETFILTER("Country/Region Code",CountryRegionCode);
      BankDataConvBank.SETFILTER("Last Update Date",'<%1',TODAY);
      if BankDataConvBank.FINDFIRST then
        ImpBankListExtDataHndl.GetBankListFromConversionService(ShowErrors,CountryRegionCode,Timeout);
    END;

    BEGIN
    END.
  }
}

