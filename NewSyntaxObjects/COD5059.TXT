OBJECT Codeunit 5059 ProfileManagement
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1001 : TextConst 'ENU=General';
      Text001@1002 : TextConst 'ENU=No profile questionnaire is created for this contact.';
      ProfileQuestnHeaderTemp@1003 : TEMPORARY Record "Profile Questionnaire Header";

    LOCAL PROCEDURE FindLegalProfileQuestionnaire@5(Cont@1000 : Record Contact);
    VAR
      ContBusRel@1005 : Record "Contact Business Relation";
      ProfileQuestnHeader@1001 : Record "Profile Questionnaire Header";
      ContProfileAnswer@1002 : Record "Contact Profile Answer";
      Valid@1003 : Boolean;
    BEGIN
      ProfileQuestnHeaderTemp.DELETEALL;

      with ProfileQuestnHeader do begin
        RESET;
        if FIND('-') then
          repeat
            Valid := true;
            if ("Contact Type" = "Contact Type"::Companies) and
               (Cont.Type <> Cont.Type::Company)
            then
              Valid := false;
            if ("Contact Type" = "Contact Type"::People) and
               (Cont.Type <> Cont.Type::Person)
            then
              Valid := false;
            if Valid and ("Business Relation Code" <> '') then
              if not ContBusRel.GET(Cont."Company No.","Business Relation Code") then
                Valid := false;
            if not Valid then begin
              ContProfileAnswer.RESET;
              ContProfileAnswer.SETRANGE("Contact No.",Cont."No.");
              ContProfileAnswer.SETRANGE("Profile Questionnaire Code",Code);
              if ContProfileAnswer.FINDFIRST then
                Valid := true;
            end;
            if Valid then begin
              ProfileQuestnHeaderTemp := ProfileQuestnHeader;
              ProfileQuestnHeaderTemp.INSERT;
            end;
          until NEXT = 0;
      end;
    END;

    [External]
    PROCEDURE GetQuestionnaire@2() : Code[20];
    VAR
      ProfileQuestnHeader@1000 : Record "Profile Questionnaire Header";
    BEGIN
      if ProfileQuestnHeader.FINDFIRST then
        exit(ProfileQuestnHeader.Code);

      ProfileQuestnHeader.INIT;
      ProfileQuestnHeader.Code := Text000;
      ProfileQuestnHeader.Description := Text000;
      ProfileQuestnHeader.INSERT;
      exit(ProfileQuestnHeader.Code);
    END;

    [External]
    PROCEDURE ProfileQuestionnaireAllowed@4(Cont@1000 : Record Contact;ProfileQuestnHeaderCode@1001 : Code[20]) : Code[20];
    BEGIN
      FindLegalProfileQuestionnaire(Cont);

      if ProfileQuestnHeaderTemp.GET(ProfileQuestnHeaderCode) then
        exit(ProfileQuestnHeaderCode);
      if ProfileQuestnHeaderTemp.FINDFIRST then
        exit(ProfileQuestnHeaderTemp.Code);

      ERROR(Text001);
    END;

    [External]
    PROCEDURE ShowContactQuestionnaireCard@7(Cont@1000 : Record Contact;ProfileQuestnLineCode@1002 : Code[20];ProfileQuestnLineLineNo@1004 : Integer);
    VAR
      ProfileQuestnLine@1003 : Record "Profile Questionnaire Line";
      ContProfileAnswers@1001 : Page "Contact Profile Answers";
    BEGIN
      ContProfileAnswers.SetParameters(Cont,ProfileQuestionnaireAllowed(Cont,''),ProfileQuestnLineCode,ProfileQuestnLineLineNo);
      if ProfileQuestnHeaderTemp.GET(ProfileQuestnLineCode) then begin
        ProfileQuestnLine.GET(ProfileQuestnLineCode,ProfileQuestnLineLineNo);
        ContProfileAnswers.SETRECORD(ProfileQuestnLine);
      end;
      ContProfileAnswers.RUNMODAL;
    END;

    [External]
    PROCEDURE CheckName@10(CurrentQuestionsChecklistCode@1000 : Code[20];VAR Cont@1001 : Record Contact);
    BEGIN
      FindLegalProfileQuestionnaire(Cont);
      ProfileQuestnHeaderTemp.GET(CurrentQuestionsChecklistCode);
    END;

    [External]
    PROCEDURE SetName@6(ProfileQuestnHeaderCode@1000 : Code[20];VAR ProfileQuestnLine@1001 : Record "Profile Questionnaire Line";ContactProfileAnswerLine@1002 : Integer);
    BEGIN
      ProfileQuestnLine.FILTERGROUP := 2;
      ProfileQuestnLine.SETRANGE("Profile Questionnaire Code",ProfileQuestnHeaderCode);
      ProfileQuestnLine.FILTERGROUP := 0;
      if ContactProfileAnswerLine = 0 then
        if ProfileQuestnLine.FIND('-') then;
    END;

    [External]
    PROCEDURE LookupName@8(VAR ProfileQuestnHeaderCode@1000 : Code[20];VAR ProfileQuestnLine@1001 : Record "Profile Questionnaire Line";VAR Cont@1002 : Record Contact);
    BEGIN
      COMMIT;
      FindLegalProfileQuestionnaire(Cont);
      if ProfileQuestnHeaderTemp.GET(ProfileQuestnHeaderCode) then;
      if PAGE.RUNMODAL(
           PAGE::"Profile Questionnaire List",ProfileQuestnHeaderTemp) = ACTION::LookupOK
      then
        ProfileQuestnHeaderCode := ProfileQuestnHeaderTemp.Code;

      SetName(ProfileQuestnHeaderCode,ProfileQuestnLine,0);
    END;

    [External]
    PROCEDURE ShowAnswerPoints@1(CurrProfileQuestnLine@1000 : Record "Profile Questionnaire Line");
    BEGIN
      CurrProfileQuestnLine.SETRANGE("Profile Questionnaire Code",CurrProfileQuestnLine."Profile Questionnaire Code");
      PAGE.RUNMODAL(PAGE::"Answer Points",CurrProfileQuestnLine);
    END;

    BEGIN
    END.
  }
}

