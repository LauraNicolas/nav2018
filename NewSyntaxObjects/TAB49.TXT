OBJECT Table 49 Invoice Post. Buffer
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Invoice Post. Buffer;
  }
  FIELDS
  {
    { 1   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=Prepmt. Exch. Rate Difference,G/L Account,Item,Resource,Fixed Asset;
                                                   OptionString="Prepmt. Exch. Rate Difference","G/L Account",Item,Resource,"Fixed Asset" }
    { 2   ;   ;G/L Account         ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=ENU=G/L Account }
    { 4   ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(1));
                                                   CaptionML=ENU=Global Dimension 1 Code;
                                                   CaptionClass='1,1,1' }
    { 5   ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE ("Global Dimension No."=CONST(2));
                                                   CaptionML=ENU=Global Dimension 2 Code;
                                                   CaptionClass='1,1,2' }
    { 6   ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=ENU=Job No. }
    { 7   ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   AutoFormatType=1 }
    { 8   ;   ;VAT Amount          ;Decimal       ;CaptionML=ENU=VAT Amount;
                                                   AutoFormatType=1 }
    { 10  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 11  ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=ENU=Gen. Prod. Posting Group }
    { 12  ;   ;VAT Calculation Type;Option        ;CaptionML=ENU=VAT Calculation Type;
                                                   OptionCaptionML=ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   OptionString="Normal VAT","Reverse Charge VAT","Full VAT","Sales Tax" }
    { 14  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=ENU=VAT Base Amount;
                                                   AutoFormatType=1 }
    { 17  ;   ;System-Created Entry;Boolean       ;CaptionML=ENU=System-Created Entry }
    { 18  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=ENU=Tax Area Code }
    { 19  ;   ;Tax Liable          ;Boolean       ;CaptionML=ENU=Tax Liable }
    { 20  ;   ;Tax Group Code      ;Code20        ;TableRelation="Tax Group";
                                                   CaptionML=ENU=Tax Group Code }
    { 21  ;   ;Quantity            ;Decimal       ;CaptionML=ENU=Quantity;
                                                   DecimalPlaces=1:5 }
    { 22  ;   ;Use Tax             ;Boolean       ;CaptionML=ENU=Use Tax }
    { 23  ;   ;VAT Bus. Posting Group;Code20      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=VAT Bus. Posting Group }
    { 24  ;   ;VAT Prod. Posting Group;Code20     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 25  ;   ;Amount (ACY)        ;Decimal       ;CaptionML=ENU=Amount (ACY);
                                                   AutoFormatType=1 }
    { 26  ;   ;VAT Amount (ACY)    ;Decimal       ;CaptionML=ENU=VAT Amount (ACY);
                                                   AutoFormatType=1 }
    { 29  ;   ;VAT Base Amount (ACY);Decimal      ;CaptionML=ENU=VAT Base Amount (ACY);
                                                   AutoFormatType=1 }
    { 31  ;   ;VAT Difference      ;Decimal       ;CaptionML=ENU=VAT Difference;
                                                   AutoFormatType=1 }
    { 32  ;   ;VAT %               ;Decimal       ;CaptionML=ENU=VAT %;
                                                   DecimalPlaces=1:1 }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=false }
    { 1700;   ;Deferral Code       ;Code10        ;TableRelation="Deferral Template"."Deferral Code";
                                                   CaptionML=ENU=Deferral Code }
    { 1701;   ;Deferral Line No.   ;Integer       ;CaptionML=ENU=Deferral Line No. }
    { 5600;   ;FA Posting Date     ;Date          ;CaptionML=ENU=FA Posting Date }
    { 5601;   ;FA Posting Type     ;Option        ;CaptionML=ENU=FA Posting Type;
                                                   OptionCaptionML=ENU=" ,Acquisition Cost,Maintenance";
                                                   OptionString=" ","Acquisition Cost",Maintenance }
    { 5602;   ;Depreciation Book Code;Code10      ;TableRelation="Depreciation Book";
                                                   CaptionML=ENU=Depreciation Book Code }
    { 5603;   ;Salvage Value       ;Decimal       ;CaptionML=ENU=Salvage Value;
                                                   AutoFormatType=1 }
    { 5605;   ;Depr. until FA Posting Date;Boolean;CaptionML=ENU=Depr. until FA Posting Date }
    { 5606;   ;Depr. Acquisition Cost;Boolean     ;CaptionML=ENU=Depr. Acquisition Cost }
    { 5609;   ;Maintenance Code    ;Code10        ;TableRelation=Maintenance;
                                                   CaptionML=ENU=Maintenance Code }
    { 5610;   ;Insurance No.       ;Code20        ;TableRelation=Insurance;
                                                   CaptionML=ENU=Insurance No. }
    { 5611;   ;Budgeted FA No.     ;Code20        ;TableRelation="Fixed Asset";
                                                   CaptionML=ENU=Budgeted FA No. }
    { 5612;   ;Duplicate in Depreciation Book;Code10;
                                                   TableRelation="Depreciation Book";
                                                   CaptionML=ENU=Duplicate in Depreciation Book }
    { 5613;   ;Use Duplication List;Boolean       ;CaptionML=ENU=Use Duplication List }
    { 5614;   ;Fixed Asset Line No.;Integer       ;CaptionML=ENU=Fixed Asset Line No. }
  }
  KEYS
  {
    {    ;Type,"G/L Account","Gen. Bus. Posting Group","Gen. Prod. Posting Group","VAT Bus. Posting Group","VAT Prod. Posting Group","Tax Area Code","Tax Group Code","Tax Liable","Use Tax","Dimension Set ID","Job No.","Fixed Asset Line No.","Deferral Code";
                                                   Clustered=true }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimMgt@1000 : Codeunit DimensionManagement;

    [External]
    PROCEDURE PrepareSales@1(VAR SalesLine@1000 : Record "Sales Line");
    BEGIN
      CLEAR(Rec);
      Type := SalesLine.Type;
      "System-Created Entry" := true;
      "Gen. Bus. Posting Group" := SalesLine."Gen. Bus. Posting Group";
      "Gen. Prod. Posting Group" := SalesLine."Gen. Prod. Posting Group";
      "VAT Bus. Posting Group" := SalesLine."VAT Bus. Posting Group";
      "VAT Prod. Posting Group" := SalesLine."VAT Prod. Posting Group";
      "VAT Calculation Type" := SalesLine."VAT Calculation Type";
      "Global Dimension 1 Code" := SalesLine."Shortcut Dimension 1 Code";
      "Global Dimension 2 Code" := SalesLine."Shortcut Dimension 2 Code";
      "Dimension Set ID" := SalesLine."Dimension Set ID";
      "Job No." := SalesLine."Job No.";
      "VAT %" := SalesLine."VAT %";
      "VAT Difference" := SalesLine."VAT Difference";
      if Type = Type::"Fixed Asset" then begin
        "FA Posting Date" := SalesLine."FA Posting Date";
        "Depreciation Book Code" := SalesLine."Depreciation Book Code";
        "Depr. until FA Posting Date" := SalesLine."Depr. until FA Posting Date";
        "Duplicate in Depreciation Book" := SalesLine."Duplicate in Depreciation Book";
        "Use Duplication List" := SalesLine."Use Duplication List";
      end;

      if "VAT Calculation Type" = "VAT Calculation Type"::"Sales Tax" then
        SetSalesTaxForSalesLine(SalesLine);

      DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Global Dimension 1 Code","Global Dimension 2 Code");

      if SalesLine."Line Discount %" = 100 then begin
        "VAT Base Amount" := 0;
        "VAT Base Amount (ACY)" := 0;
        "VAT Amount" := 0;
        "VAT Amount (ACY)" := 0;
      end;

      OnAfterInvPostBufferPrepareSales(SalesLine,Rec);
    END;

    [External]
    PROCEDURE CalcDiscount@2(PricesInclVAT@1000 : Boolean;DiscountAmount@1001 : Decimal;DiscountAmountACY@1002 : Decimal);
    VAR
      CurrencyLCY@1003 : Record Currency;
      CurrencyACY@1004 : Record Currency;
      GLSetup@1005 : Record "General Ledger Setup";
    BEGIN
      CurrencyLCY.InitRoundingPrecision;
      GLSetup.GET;
      if GLSetup."Additional Reporting Currency" <> '' then
        CurrencyACY.GET(GLSetup."Additional Reporting Currency")
      else
        CurrencyACY := CurrencyLCY;
      "VAT Amount" := ROUND(
          CalcVATAmount(PricesInclVAT,DiscountAmount,"VAT %"),
          CurrencyLCY."Amount Rounding Precision",
          CurrencyLCY.VATRoundingDirection);
      "VAT Amount (ACY)" := ROUND(
          CalcVATAmount(PricesInclVAT,DiscountAmountACY,"VAT %"),
          CurrencyACY."Amount Rounding Precision",
          CurrencyACY.VATRoundingDirection);

      if PricesInclVAT and ("VAT %" <> 0) then begin
        "VAT Base Amount" := DiscountAmount - "VAT Amount";
        "VAT Base Amount (ACY)" := DiscountAmountACY - "VAT Amount (ACY)";
      end else begin
        "VAT Base Amount" := DiscountAmount;
        "VAT Base Amount (ACY)" := DiscountAmountACY;
      end;
      Amount := "VAT Base Amount";
      "Amount (ACY)" := "VAT Base Amount (ACY)";
    END;

    LOCAL PROCEDURE CalcVATAmount@3(ValueInclVAT@1000 : Boolean;Value@1001 : Decimal;VATPercent@1002 : Decimal) : Decimal;
    BEGIN
      if VATPercent = 0 then
        exit(0);
      if ValueInclVAT then
        exit(Value / (1 + (VATPercent / 100)) * (VATPercent / 100));

      exit(Value * (VATPercent / 100));
    END;

    [External]
    PROCEDURE SetAccount@4(AccountNo@1000 : Code[20];VAR TotalVAT@1004 : Decimal;VAR TotalVATACY@1003 : Decimal;VAR TotalAmount@1002 : Decimal;VAR TotalAmountACY@1001 : Decimal);
    BEGIN
      TotalVAT := TotalVAT - "VAT Amount";
      TotalVATACY := TotalVATACY - "VAT Amount (ACY)";
      TotalAmount := TotalAmount - Amount;
      TotalAmountACY := TotalAmountACY - "Amount (ACY)";
      "G/L Account" := AccountNo;
    END;

    [External]
    PROCEDURE SetAmounts@5(TotalVAT@1003 : Decimal;TotalVATACY@1002 : Decimal;TotalAmount@1001 : Decimal;TotalAmountACY@1000 : Decimal;VATDifference@1004 : Decimal;TotalVATBase@1006 : Decimal;TotalVATBaseACY@1005 : Decimal);
    BEGIN
      Amount := TotalAmount;
      "VAT Base Amount" := TotalVATBase;
      "VAT Amount" := TotalVAT;
      "Amount (ACY)" := TotalAmountACY;
      "VAT Base Amount (ACY)" := TotalVATBaseACY;
      "VAT Amount (ACY)" := TotalVATACY;
      "VAT Difference" := VATDifference;
    END;

    [External]
    PROCEDURE PreparePurchase@6(VAR PurchLine@1000 : Record "Purchase Line");
    BEGIN
      CLEAR(Rec);
      Type := PurchLine.Type;
      "System-Created Entry" := true;
      "Gen. Bus. Posting Group" := PurchLine."Gen. Bus. Posting Group";
      "Gen. Prod. Posting Group" := PurchLine."Gen. Prod. Posting Group";
      "VAT Bus. Posting Group" := PurchLine."VAT Bus. Posting Group";
      "VAT Prod. Posting Group" := PurchLine."VAT Prod. Posting Group";
      "VAT Calculation Type" := PurchLine."VAT Calculation Type";
      "Global Dimension 1 Code" := PurchLine."Shortcut Dimension 1 Code";
      "Global Dimension 2 Code" := PurchLine."Shortcut Dimension 2 Code";
      "Dimension Set ID" := PurchLine."Dimension Set ID";
      "Job No." := PurchLine."Job No.";
      "VAT %" := PurchLine."VAT %";
      "VAT Difference" := PurchLine."VAT Difference";
      if Type = Type::"Fixed Asset" then begin
        "FA Posting Date" := PurchLine."FA Posting Date";
        "Depreciation Book Code" := PurchLine."Depreciation Book Code";
        "Depr. until FA Posting Date" := PurchLine."Depr. until FA Posting Date";
        "Duplicate in Depreciation Book" := PurchLine."Duplicate in Depreciation Book";
        "Use Duplication List" := PurchLine."Use Duplication List";
        "FA Posting Type" := PurchLine."FA Posting Type";
        "Depreciation Book Code" := PurchLine."Depreciation Book Code";
        "Salvage Value" := PurchLine."Salvage Value";
        "Depr. Acquisition Cost" := PurchLine."Depr. Acquisition Cost";
        "Maintenance Code" := PurchLine."Maintenance Code";
        "Insurance No." := PurchLine."Insurance No.";
        "Budgeted FA No." := PurchLine."Budgeted FA No.";
      end;

      if "VAT Calculation Type" = "VAT Calculation Type"::"Sales Tax" then
        SetSalesTaxForPurchLine(PurchLine);

      DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Global Dimension 1 Code","Global Dimension 2 Code");

      if PurchLine."Line Discount %" = 100 then begin
        "VAT Base Amount" := 0;
        "VAT Base Amount (ACY)" := 0;
        "VAT Amount" := 0;
        "VAT Amount (ACY)" := 0;
      end;

      OnAfterInvPostBufferPreparePurchase(PurchLine,Rec);
    END;

    [External]
    PROCEDURE CalcDiscountNoVAT@7(DiscountAmount@1001 : Decimal;DiscountAmountACY@1002 : Decimal);
    BEGIN
      "VAT Base Amount" := DiscountAmount;
      "VAT Base Amount (ACY)" := DiscountAmountACY;
      Amount := "VAT Base Amount";
      "Amount (ACY)" := "VAT Base Amount (ACY)";
    END;

    [External]
    PROCEDURE SetSalesTaxForPurchLine@8(PurchaseLine@1000 : Record "Purchase Line");
    BEGIN
      "Tax Area Code" := PurchaseLine."Tax Area Code";
      "Tax Liable" := PurchaseLine."Tax Liable";
      "Tax Group Code" := PurchaseLine."Tax Group Code";
      "Use Tax" := PurchaseLine."Use Tax";
      Quantity := PurchaseLine."Qty. to Invoice (Base)";
    END;

    [External]
    PROCEDURE SetSalesTaxForSalesLine@15(SalesLine@1000 : Record "Sales Line");
    BEGIN
      "Tax Area Code" := SalesLine."Tax Area Code";
      "Tax Liable" := SalesLine."Tax Liable";
      "Tax Group Code" := SalesLine."Tax Group Code";
      "Use Tax" := false;
      Quantity := SalesLine."Qty. to Invoice (Base)";
    END;

    [External]
    PROCEDURE ReverseAmounts@9();
    BEGIN
      Amount := -Amount;
      "VAT Base Amount" := -"VAT Base Amount";
      "Amount (ACY)" := -"Amount (ACY)";
      "VAT Base Amount (ACY)" := -"VAT Base Amount (ACY)";
      "VAT Amount" := -"VAT Amount";
      "VAT Amount (ACY)" := -"VAT Amount (ACY)";
    END;

    [External]
    PROCEDURE SetAmountsNoVAT@10(TotalAmount@1001 : Decimal;TotalAmountACY@1000 : Decimal;VATDifference@1004 : Decimal);
    BEGIN
      Amount := TotalAmount;
      "VAT Base Amount" := TotalAmount;
      "VAT Amount" := 0;
      "Amount (ACY)" := TotalAmountACY;
      "VAT Base Amount (ACY)" := TotalAmountACY;
      "VAT Amount (ACY)" := 0;
      "VAT Difference" := VATDifference;
    END;

    [External]
    PROCEDURE PrepareService@11(VAR ServiceLine@1000 : Record "Service Line");
    BEGIN
      CLEAR(Rec);
      case ServiceLine.Type of
        ServiceLine.Type::Item:
          Type := Type::Item;
        ServiceLine.Type::Resource:
          Type := Type::Resource;
        ServiceLine.Type::"G/L Account":
          Type := Type::"G/L Account";
      end;
      "System-Created Entry" := true;
      "Gen. Bus. Posting Group" := ServiceLine."Gen. Bus. Posting Group";
      "Gen. Prod. Posting Group" := ServiceLine."Gen. Prod. Posting Group";
      "VAT Bus. Posting Group" := ServiceLine."VAT Bus. Posting Group";
      "VAT Prod. Posting Group" := ServiceLine."VAT Prod. Posting Group";
      "VAT Calculation Type" := ServiceLine."VAT Calculation Type";
      "Global Dimension 1 Code" := ServiceLine."Shortcut Dimension 1 Code";
      "Global Dimension 2 Code" := ServiceLine."Shortcut Dimension 2 Code";
      "Dimension Set ID" := ServiceLine."Dimension Set ID";
      "Job No." := ServiceLine."Job No.";
      "VAT %" := ServiceLine."VAT %";
      "VAT Difference" := ServiceLine."VAT Difference";
      if "VAT Calculation Type" = "VAT Calculation Type"::"Sales Tax" then begin
        "Tax Area Code" := ServiceLine."Tax Area Code";
        "Tax Group Code" := ServiceLine."Tax Group Code";
        "Tax Liable" := ServiceLine."Tax Liable";
        "Use Tax" := false;
        Quantity := ServiceLine."Qty. to Invoice (Base)";
      end;

      OnAfterInvPostBufferPrepareService(ServiceLine,Rec);
    END;

    [External]
    PROCEDURE FillPrepmtAdjBuffer@81(VAR TempInvoicePostBuffer@1005 : TEMPORARY Record "Invoice Post. Buffer";InvoicePostBuffer@1006 : Record "Invoice Post. Buffer";GLAccountNo@1001 : Code[20];AdjAmount@1003 : Decimal;RoundingEntry@1004 : Boolean);
    VAR
      PrepmtAdjInvPostBuffer@1002 : Record "Invoice Post. Buffer";
    BEGIN
      with PrepmtAdjInvPostBuffer do begin
        INIT;
        Type := Type::"Prepmt. Exch. Rate Difference";
        "G/L Account" := GLAccountNo;
        Amount := AdjAmount;
        if RoundingEntry then
          "Amount (ACY)" := AdjAmount
        else
          "Amount (ACY)" := 0;
        "Dimension Set ID" := InvoicePostBuffer."Dimension Set ID";
        "Global Dimension 1 Code" := InvoicePostBuffer."Global Dimension 1 Code";
        "Global Dimension 2 Code" := InvoicePostBuffer."Global Dimension 2 Code";
        "System-Created Entry" := true;
        InvoicePostBuffer := PrepmtAdjInvPostBuffer;

        TempInvoicePostBuffer := InvoicePostBuffer;
        if TempInvoicePostBuffer.FIND then begin
          TempInvoicePostBuffer.Amount += InvoicePostBuffer.Amount;
          TempInvoicePostBuffer."Amount (ACY)" += InvoicePostBuffer."Amount (ACY)";
          TempInvoicePostBuffer.MODIFY;
        end else begin
          TempInvoicePostBuffer := InvoicePostBuffer;
          TempInvoicePostBuffer.INSERT;
        end;
      end;
    END;

    [External]
    PROCEDURE Update@12(InvoicePostBuffer@1000 : Record "Invoice Post. Buffer";VAR InvDefLineNo@1001 : Integer;VAR DeferralLineNo@1002 : Integer);
    BEGIN
      Rec := InvoicePostBuffer;
      if FIND then begin
        Amount += InvoicePostBuffer.Amount;
        "VAT Amount" += InvoicePostBuffer."VAT Amount";
        "VAT Base Amount" += InvoicePostBuffer."VAT Base Amount";
        "Amount (ACY)" += InvoicePostBuffer."Amount (ACY)";
        "VAT Amount (ACY)" += InvoicePostBuffer."VAT Amount (ACY)";
        "VAT Difference" += InvoicePostBuffer."VAT Difference";
        "VAT Base Amount (ACY)" += InvoicePostBuffer."VAT Base Amount (ACY)";
        Quantity += InvoicePostBuffer.Quantity;
        if not InvoicePostBuffer."System-Created Entry" then
          "System-Created Entry" := false;
        MODIFY;
        InvDefLineNo := "Deferral Line No.";
      end else begin
        if "Deferral Code" <> '' then begin
          DeferralLineNo := DeferralLineNo + 1;
          "Deferral Line No." := DeferralLineNo;
          InvDefLineNo := "Deferral Line No.";
        end;
        INSERT;
      end;
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterInvPostBufferPrepareSales@13(VAR SalesLine@1000 : Record "Sales Line";VAR InvoicePostBuffer@1001 : Record "Invoice Post. Buffer");
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterInvPostBufferPreparePurchase@14(VAR PurchaseLine@1000 : Record "Purchase Line";VAR InvoicePostBuffer@1001 : Record "Invoice Post. Buffer");
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterInvPostBufferPrepareService@16(VAR ServiceLine@1000 : Record "Service Line";VAR InvoicePostBuffer@1001 : Record "Invoice Post. Buffer");
    BEGIN
    END;

    BEGIN
    END.
  }
}

