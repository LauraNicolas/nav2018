OBJECT Codeunit 5402 Unit of Measure Management
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ItemUnitOfMeasure@1000 : Record "Item Unit of Measure";
      ResourceUnitOfMeasure@1001 : Record "Resource Unit of Measure";
      Text001@1002 : TextConst 'ENU=Quantity per unit of measure must be defined.';

    [External]
    PROCEDURE GetQtyPerUnitOfMeasure@1(Item@1000 : Record Item;UnitOfMeasureCode@1001 : Code[10]) : Decimal;
    BEGIN
      Item.TESTFIELD("No.");
      if UnitOfMeasureCode in [Item."Base Unit of Measure",''] then
        exit(1);
      if (Item."No." <> ItemUnitOfMeasure."Item No.") or
         (UnitOfMeasureCode <> ItemUnitOfMeasure.Code)
      then
        ItemUnitOfMeasure.GET(Item."No.",UnitOfMeasureCode);
      ItemUnitOfMeasure.TESTFIELD("Qty. per Unit of Measure");
      exit(ItemUnitOfMeasure."Qty. per Unit of Measure");
    END;

    [External]
    PROCEDURE GetResQtyPerUnitOfMeasure@2(Resource@1000 : Record Resource;UnitOfMeasureCode@1001 : Code[10]) : Decimal;
    BEGIN
      Resource.TESTFIELD("No.");
      if UnitOfMeasureCode in [Resource."Base Unit of Measure",''] then
        exit(1);
      if (Resource."No." <> ResourceUnitOfMeasure."Resource No.") or
         (UnitOfMeasureCode <> ResourceUnitOfMeasure.Code)
      then
        ResourceUnitOfMeasure.GET(Resource."No.",UnitOfMeasureCode);
      ResourceUnitOfMeasure.TESTFIELD("Qty. per Unit of Measure");
      exit(ResourceUnitOfMeasure."Qty. per Unit of Measure");
    END;

    [External]
    PROCEDURE CalcBaseQty@3(Qty@1001 : Decimal;QtyPerUOM@1000 : Decimal) : Decimal;
    BEGIN
      if QtyPerUOM = 0 then
        ERROR(Text001);

      exit(RoundQty(Qty * QtyPerUOM));
    END;

    [External]
    PROCEDURE CalcQtyFromBase@10(QtyBase@1001 : Decimal;QtyPerUOM@1000 : Decimal) : Decimal;
    BEGIN
      if QtyPerUOM = 0 then
        ERROR(Text001);

      exit(RoundQty(QtyBase / QtyPerUOM));
    END;

    [External]
    PROCEDURE RoundQty@11(Qty@1000 : Decimal) : Decimal;
    BEGIN
      exit(ROUND(Qty,QtyRndPrecision));
    END;

    [External]
    PROCEDURE QtyRndPrecision@4() : Decimal;
    BEGIN
      exit(0.00001);
    END;

    BEGIN
    END.
  }
}

