OBJECT Table 225 Post Code
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Post Code;
    LookupPageID="Post Codes";
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;OnValidate=VAR
                                                                PostCode@1000 : Record "Post Code";
                                                              BEGIN
                                                                PostCode.SETRANGE("Search City","Search City");
                                                                PostCode.SETRANGE(Code,Code);
                                                                if not PostCode.ISEMPTY then
                                                                  ERROR(Text000,FIELDCAPTION(Code),Code);
                                                              END;

                                                   CaptionML=ENU=Code;
                                                   NotBlank=true }
    { 2   ;   ;City                ;Text30        ;OnValidate=VAR
                                                                PostCode@1000 : Record "Post Code";
                                                              BEGIN
                                                                TESTFIELD(Code);
                                                                "Search City" := City;
                                                                if xRec."Search City" <> "Search City" then begin
                                                                  PostCode.SETRANGE("Search City","Search City");
                                                                  PostCode.SETRANGE(Code,Code);
                                                                  if not PostCode.ISEMPTY then
                                                                    ERROR(Text000,FIELDCAPTION(City),City);
                                                                end;
                                                              END;

                                                   CaptionML=ENU=City;
                                                   NotBlank=true }
    { 3   ;   ;Search City         ;Code30        ;CaptionML=ENU=Search City }
    { 4   ;   ;Country/Region Code ;Code10        ;TableRelation="Country/Region";
                                                   CaptionML=ENU=Country/Region Code }
    { 5   ;   ;County              ;Text30        ;CaptionML=ENU=County }
  }
  KEYS
  {
    {    ;Code,City                               ;Clustered=true }
    {    ;City,Code                                }
    {    ;"Search City"                            }
    {    ;"Country/Region Code"                    }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,City,"Country/Region Code",County   }
    { 2   ;Brick               ;Code,City,County,"Country/Region Code"   }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 %2 already exists.';

    [External]
    PROCEDURE ValidateCity@5(VAR City@1000 : Text[30];VAR PostCode@1001 : Code[20];VAR County@1006 : Text[30];VAR CountryCode@1005 : Code[10];UseDialog@1007 : Boolean);
    VAR
      PostCodeRec@1002 : Record "Post Code";
      PostCodeRec2@1004 : Record "Post Code";
      SearchCity@1003 : Code[30];
    BEGIN
      if not GUIALLOWED then
        exit;

      if City <> '' then begin
        SearchCity := City;
        PostCodeRec.SETCURRENTKEY("Search City");
        if STRPOS(SearchCity,'*') = STRLEN(SearchCity) then
          PostCodeRec.SETFILTER("Search City",SearchCity)
        else
          PostCodeRec.SETRANGE("Search City",SearchCity);
        if not PostCodeRec.FINDFIRST then
          exit;
        PostCodeRec2.COPY(PostCodeRec);
        if UseDialog and (PostCodeRec2.NEXT = 1) then
          if PAGE.RUNMODAL(PAGE::"Post Codes",PostCodeRec,PostCodeRec.Code) <> ACTION::LookupOK then
            ERROR('');
        PostCode := PostCodeRec.Code;
        City := PostCodeRec.City;
        CountryCode := PostCodeRec."Country/Region Code";
        County := PostCodeRec.County;
      end;
    END;

    [External]
    PROCEDURE ValidatePostCode@6(VAR City@1001 : Text[30];VAR PostCode@1000 : Code[20];VAR County@1005 : Text[30];VAR CountryCode@1006 : Code[10];UseDialog@1004 : Boolean);
    VAR
      PostCodeRec@1002 : Record "Post Code";
      PostCodeRec2@1003 : Record "Post Code";
    BEGIN
      if PostCode <> '' then begin
        if STRPOS(PostCode,'*') = STRLEN(PostCode) then
          PostCodeRec.SETFILTER(Code,PostCode)
        else
          PostCodeRec.SETRANGE(Code,PostCode);
        if not PostCodeRec.FINDFIRST then
          exit;
        PostCodeRec2.COPY(PostCodeRec);
        if UseDialog and (PostCodeRec2.NEXT = 1) and GUIALLOWED then
          if PAGE.RUNMODAL(PAGE::"Post Codes",PostCodeRec,PostCodeRec.Code) <> ACTION::LookupOK then
            exit;
        PostCode := PostCodeRec.Code;
        City := PostCodeRec.City;
        CountryCode := PostCodeRec."Country/Region Code";
        County := PostCodeRec.County;
      end;
    END;

    [External]
    PROCEDURE UpdateFromSalesHeader@8(SalesHeader@1000 : Record "Sales Header";PostCodeChanged@1001 : Boolean);
    BEGIN
      CreatePostCode(SalesHeader."Sell-to Post Code",SalesHeader."Sell-to City",
        SalesHeader."Sell-to Country/Region Code",SalesHeader."Sell-to County",PostCodeChanged);
    END;

    [External]
    PROCEDURE UpdateFromCustomer@15(Customer@1000 : Record Customer;PostCodeChanged@1001 : Boolean);
    BEGIN
      CreatePostCode(Customer."Post Code",Customer.City,
        Customer."Country/Region Code",Customer.County,PostCodeChanged);
    END;

    [External]
    PROCEDURE UpdateFromCompanyInformation@16(CompanyInformation@1000 : Record "Company Information";PostCodeChanged@1001 : Boolean);
    BEGIN
      CreatePostCode(CompanyInformation."Post Code",CompanyInformation.City,
        CompanyInformation."Country/Region Code",CompanyInformation.County,PostCodeChanged);
    END;

    [External]
    PROCEDURE UpdateFromStandardAddress@1(StandardAddress@1000 : Record "Standard Address";PostCodeChanged@1001 : Boolean);
    BEGIN
      CreatePostCode(StandardAddress."Post Code",StandardAddress.City,
        StandardAddress."Country/Region Code",StandardAddress.County,PostCodeChanged);
    END;

    LOCAL PROCEDURE CreatePostCode@17(NewPostCode@1000 : Code[20];NewCity@1001 : Text[30];NewCountryRegion@1002 : Code[10];NewCounty@1003 : Text[30];PostCodeChanged@1004 : Boolean);
    BEGIN
      if NewPostCode = '' then
        exit;

      SETRANGE(Code,NewPostCode);
      if FINDFIRST then begin
        if PostCodeChanged then
          exit; // If the post code was updated, then don't insert the city for the old post code into the new post code
        if (NewCity <> '') and (City <> NewCity) then
          RENAME(NewPostCode,NewCity);
        if NewCountryRegion <> '' then
          "Country/Region Code" := NewCountryRegion;
        if NewCounty <> '' then
          County := NewCounty;
        MODIFY;
      end else begin
        INIT;

        Code := NewPostCode;
        City := NewCity;
        "Country/Region Code" := NewCountryRegion;
        County := NewCounty;
        INSERT;
      end;
    END;

    PROCEDURE ValidateCountryCode@11(VAR CityTxt@1004 : Text[30];VAR PostCode@1003 : Code[20];VAR CountyTxt@1002 : Text[30];VAR CountryCode@1001 : Code[10]);
    VAR
      PostCodeRec@1005 : Record "Post Code";
    BEGIN
      if xRec."Country/Region Code" = CountryCode then
        exit;
      if (CountryCode = '') or (PostCode = '') then
        exit;

      PostCodeRec.SETRANGE("Country/Region Code",CountryCode);
      PostCodeRec.SETRANGE(Code,PostCode);
      if PostCodeRec.FINDFIRST then begin
        PostCode := PostCodeRec.Code;
        CityTxt := PostCodeRec.City;
        CountryCode := PostCodeRec."Country/Region Code";
        CountyTxt := PostCodeRec.County;
      end;
    END;

    BEGIN
    END.
  }
}

