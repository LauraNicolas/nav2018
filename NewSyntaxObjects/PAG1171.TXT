OBJECT Page 1171 User Task Card
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=User Task;
    SourceTable="User Task";
    PageType=Card;
    OnOpenPage=BEGIN
                 RESET;
               END;

    OnAfterGetRecord=BEGIN
                       MultiLineTextControl := GetDescription;
                       IsMarkCompleteEnabled := not IsCompleted;
                       CurrPage.UPDATE(false);
                     END;

    OnNewRecord=BEGIN
                  "Created By" := USERSECURITYID;
                  VALIDATE("Created DateTime",CURRENTDATETIME);
                  CALCFIELDS("Created By User Name");

                  CLEAR(MultiLineTextControl);
                END;

    ActionList=ACTIONS
    {
      { 18      ;    ;ActionContainer;
                      Name=ActionContainer18;
                      ActionContainerType=ActionItems }
      { 19      ;1   ;Action    ;
                      Name=Go To Task Item;
                      CaptionML=ENU=Go To Task Item;
                      ToolTipML=ENU=Open the page or report that is associated with this task.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 RunReportOrPageLink;
                               END;
                                }
      { 6       ;1   ;Action    ;
                      Name=Mark Completed;
                      CaptionML=ENU=Mark Completed;
                      ToolTipML=ENU=Mark the task as completed.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=IsMarkCompleteEnabled;
                      Image=Completed;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 // Marks the current task as completed.
                                 SetCompleted;
                                 CurrPage.UPDATE(true);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=Recurrence;
                      CaptionML=ENU=Recurrence;
                      ToolTipML=ENU=Make this a recurring task.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Image=Refresh;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 UserTaskRecurrence@1000 : Page "User Task Recurrence";
                               BEGIN
                                 UserTaskRecurrence.SetInitialData(Rec);
                                 UserTaskRecurrence.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=General;
                GroupType=Group }

    { 3   ;2   ;Field     ;
                Name=Title;
                ToolTipML=ENU=Specifies the title of the task.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Title;
                ImplicitType=Text250;
                ShowMandatory=TRUE }

    { 8   ;2   ;Field     ;
                Name=MultiLineTextControl;
                CaptionML=ENU=Task Description;
                ToolTipML=ENU=Specifies what the task is about.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MultiLineTextControl;
                MultiLine=true;
                OnValidate=BEGIN
                             SetDescription(MultiLineTextControl);
                           END;

                ImplicitType=Text }

    { 7   ;2   ;Field     ;
                Name=Created By User Name;
                ToolTipML=ENU=Specifies who created the task.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Created By User Name";
                Importance=Additional;
                Enabled=false;
                Editable=false;
                ImplicitType=Code50 }

    { 5   ;2   ;Field     ;
                Name=Created DateTime;
                ToolTipML=ENU=Specifies when the task was created.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Created DateTime";
                Importance=Additional;
                ImplicitType=DateTime }

    { 16  ;1   ;Group     ;
                Name=Status;
                CaptionML=ENU=Status;
                GroupType=Group }

    { 15  ;2   ;Field     ;
                Name=Assigned To User Name;
                DrillDown=false;
                ToolTipML=ENU=Specifies who the task is assigned to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Assigned To User Name";
                OnAssistEdit=VAR
                               User@1001 : Record User;
                               Users@1000 : Page Users;
                             BEGIN
                               if User.GET("Assigned To") then
                                 Users.SETRECORD(User);

                               Users.LOOKUPMODE := true;
                               if Users.RUNMODAL = ACTION::LookupOK then begin
                                 Users.GETRECORD(User);
                                 "Assigned To" := User."User Security ID";
                                 CurrPage.UPDATE(true);
                               end;
                             END;

                ImplicitType=Code50 }

    { 10  ;2   ;Field     ;
                Name=Due DateTime;
                ToolTipML=ENU=Specifies when the task must be completed.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due DateTime";
                ImplicitType=DateTime }

    { 11  ;2   ;Field     ;
                Name=Percent Complete;
                ToolTipML=ENU=Specifies the progress of the task.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Percent Complete";
                OnValidate=BEGIN
                             CurrPage.UPDATE(true);
                           END;

                ImplicitType=Integer }

    { 12  ;2   ;Field     ;
                Name=Start DateTime;
                ToolTipML=ENU=Specifies when the task must start.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Start DateTime";
                ImplicitType=DateTime }

    { 13  ;2   ;Field     ;
                Name=Priority;
                ToolTipML=ENU=Specifies the priority of the task.;
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr=Priority;
                ImplicitType=Option }

    { 9   ;2   ;Field     ;
                Name=Completed By User Name;
                DrillDown=false;
                ToolTipML=ENU=Specifies who completed the task.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Completed By User Name";
                Importance=Additional;
                OnAssistEdit=VAR
                               User@1001 : Record User;
                               Users@1000 : Page Users;
                             BEGIN
                               if User.GET("Completed By") then
                                 Users.SETRECORD(User);

                               Users.LOOKUPMODE := true;
                               if Users.RUNMODAL = ACTION::LookupOK then begin
                                 Users.GETRECORD(User);
                                 VALIDATE("Completed By",User."User Security ID");
                                 CurrPage.UPDATE(true);
                               end;
                             END;

                ImplicitType=Code50 }

    { 4   ;2   ;Field     ;
                Name=Completed DateTime;
                ToolTipML=ENU=Specifies when the task was completed.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Completed DateTime";
                Importance=Additional;
                OnValidate=BEGIN
                             CurrPage.UPDATE(true);
                           END;

                ImplicitType=DateTime }

    { 17  ;1   ;Group     ;
                Name=Task Item;
                CaptionML=ENU=Task Item;
                GroupType=Group }

    { 20  ;2   ;Field     ;
                Name=Object Type;
                ToolTipML=ENU=Specifies the type of window that the task opens.;
                OptionCaptionML=ENU=,,,Report,,,,,Page;
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr="Object Type";
                OnValidate=BEGIN
                             // Clear out the values for object id if it exists.
                             if "Object ID" <> 0 then
                               "Object ID" := 0;
                           END;

                ImplicitType=Option }

    { 21  ;2   ;Field     ;
                Name=Object ID;
                Lookup=true;
                ToolTipML=ENU=Specifies the window that the task opens.;
                ApplicationArea=#Basic,#Suite;
                BlankZero=true;
                SourceExpr="Object ID";
                CaptionClass=GetObjectTypeCaption;
                OnValidate=VAR
                             AllObjWithCaption@1000 : Record AllObjWithCaption;
                           BEGIN
                             if "Object Type" = AllObjWithCaption."Object Type"::Page then begin
                               AllObjWithCaption.SETRANGE("Object Type",AllObjWithCaption."Object Type"::Page);
                               AllObjWithCaption.SETRANGE("Object ID","Object ID");
                               if AllObjWithCaption.FINDFIRST then
                                 if AllObjWithCaption."Object Subtype" <> 'List' then
                                   ERROR(InvalidPageTypeErr);
                             end;
                           END;

                OnLookup=VAR
                           AllObjWithCaption@1007 : Record AllObjWithCaption;
                           AllObjectsWithCaption@1006 : Page "All Objects with Caption";
                         BEGIN
                           // If object type is empty then show both pages / reports in lookup
                           AllObjWithCaption.FILTERGROUP(2);
                           if "Object Type" = 0 then begin
                             AllObjWithCaption.SETFILTER("Object Type",'Page|Report');
                             AllObjWithCaption.SETFILTER("Object Subtype",'%1|%2','','List');
                           end else begin
                             if "Object Type" = AllObjWithCaption."Object Type"::Page then begin
                               AllObjWithCaption.SETRANGE("Object Type",AllObjWithCaption."Object Type"::Page);
                               AllObjWithCaption.SETRANGE("Object Subtype",'List');
                             end else
                               AllObjWithCaption.SETRANGE("Object Type",AllObjWithCaption."Object Type"::Report);
                           end;
                           AllObjWithCaption.FILTERGROUP(0);

                           AllObjectsWithCaption.IsObjectTypeVisible(false);
                           AllObjectsWithCaption.SETTABLEVIEW(AllObjWithCaption);

                           AllObjectsWithCaption.LOOKUPMODE := true;
                           if AllObjectsWithCaption.RUNMODAL = ACTION::LookupOK then begin
                             AllObjectsWithCaption.GETRECORD(AllObjWithCaption);
                             "Object ID" := AllObjWithCaption."Object ID";
                             "Object Type" := AllObjWithCaption."Object Type";
                           end;
                         END;

                ImplicitType=Integer }

    { 22  ;2   ;Field     ;
                Name=ObjectName;
                CaptionML=ENU=Resource Name;
                ToolTipML=ENU=Specifies the name of the resource that is assigned to the task.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DisplayObjectName;
                Enabled=false }

  }
  CODE
  {
    VAR
      MultiLineTextControl@1000 : Text;
      InvalidPageTypeErr@1001 : TextConst 'ENU=You must specify a list page.';
      IsMarkCompleteEnabled@1002 : Boolean;
      PageTok@1003 : TextConst 'ENU=Page';
      ReportTok@1004 : TextConst 'ENU=Report';

    LOCAL PROCEDURE DisplayObjectName@6() : Text;
    VAR
      AllObjWithCaption@1000 : Record AllObjWithCaption;
    BEGIN
      AllObjWithCaption.SETRANGE("Object Type","Object Type");
      AllObjWithCaption.SETRANGE("Object ID","Object ID");
      if AllObjWithCaption.FINDFIRST then
        exit(AllObjWithCaption."Object Name");
    END;

    LOCAL PROCEDURE RunReportOrPageLink@2();
    VAR
      AllObjWithCaption@1000 : Record AllObjWithCaption;
    BEGIN
      if ("Object Type" = 0) or ("Object ID" = 0) then
        exit;
      if "Object Type" = AllObjWithCaption."Object Type"::Page then
        PAGE.RUN("Object ID")
      else
        REPORT.RUN("Object ID");
    END;

    LOCAL PROCEDURE GetObjectTypeCaption@1() : Text;
    BEGIN
      if "Object Type" = "Object Type"::Page then
        exit(PageTok);

      exit(ReportTok);
    END;

    BEGIN
    END.
  }
}

