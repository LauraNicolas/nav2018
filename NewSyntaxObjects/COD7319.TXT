OBJECT Codeunit 7319 Bin Content Create
{
  OBJECT-PROPERTIES
  {
    Date=20150915D;
    Time=120000T;
    Version List=NAVW19.00;
  }
  PROPERTIES
  {
    TableNo="Bin Creation Worksheet Line";
    OnRun=BEGIN
            BinCreateLine.COPY(Rec);
            Code;
            Rec := BinCreateLine;
          END;

  }
  CODE
  {
    VAR
      BinCreateLine@1000 : Record "Bin Creation Worksheet Line";
      BinContent@1001 : Record "Bin Content";
      Text000@1002 : TextConst 'ENU=Do you want to create the bin content?';
      Text001@1003 : TextConst 'ENU=There is nothing to create.';
      Location@1004 : Record Location;

    LOCAL PROCEDURE Code@1();
    BEGIN
      if not CONFIRM(Text000,false) then
        exit;

      if BinCreateLine.FIND('-') then begin
        BinCreateLine.TESTFIELD("Location Code");
        GetLocation(BinCreateLine."Location Code");
        repeat
          if Location."Directed Put-away and Pick" then begin
            BinCreateLine.TESTFIELD("Zone Code");
            BinCreateLine.TESTFIELD("Unit of Measure Code");
          end else
            BinCreateLine.TESTFIELD("Zone Code",'');
          BinCreateLine.TESTFIELD("Bin Code");
          BinCreateLine.TESTFIELD("Item No.");
          BinCreate(BinCreateLine);
        until BinCreateLine.NEXT = 0;
        BinCreateLine.DELETEALL;
      end else
        MESSAGE(Text001);
    END;

    LOCAL PROCEDURE BinCreate@2(BinCreateLine2@1000 : Record "Bin Creation Worksheet Line");
    BEGIN
      with BinCreateLine2 do begin
        if EmptyLine then
          exit;
        BinContent.INIT;
        BinContent."Bin Code" := "Bin Code";
        BinContent."Location Code" := "Location Code";
        BinContent."Item No." := "Item No.";
        BinContent."Variant Code" := "Variant Code";
        BinContent."Unit of Measure Code" := "Unit of Measure Code";
        BinContent."Qty. per Unit of Measure" := "Qty. per Unit of Measure";
        BinContent.Fixed := Fixed;
        BinContent.Default := Default;
        BinContent.Dedicated := Dedicated;
        if Location."Directed Put-away and Pick" then begin
          BinContent."Zone Code" := "Zone Code";
          BinContent."Bin Type Code" := "Bin Type Code";
          BinContent."Warehouse Class Code" := "Warehouse Class Code";
          BinContent."Block Movement" := "Block Movement";
          BinContent."Bin Ranking" := "Bin Ranking";
          BinContent."Cross-Dock Bin" := "Cross-Dock Bin";
          BinContent."Min. Qty." := "Min. Qty.";
          BinContent."Max. Qty." := "Max. Qty.";
        end;
        BinContent.INSERT(true);
      end;
    END;

    LOCAL PROCEDURE GetLocation@3(LocationCode@1000 : Code[10]);
    BEGIN
      if Location.Code <> LocationCode then
        Location.GET(LocationCode);
    END;

    BEGIN
    END.
  }
}

