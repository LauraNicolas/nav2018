OBJECT Table 298 Issued Reminder Line
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Issued Reminder Line;
  }
  FIELDS
  {
    { 1   ;   ;Reminder No.        ;Code20        ;TableRelation="Issued Reminder Header";
                                                   CaptionML=ENU=Reminder No. }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 3   ;   ;Attached to Line No.;Integer       ;TableRelation="Issued Reminder Line"."Line No." WHERE ("Reminder No."=FIELD("Reminder No."));
                                                   CaptionML=ENU=Attached to Line No. }
    { 4   ;   ;Type                ;Option        ;CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=" ,G/L Account,Customer Ledger Entry,Line Fee";
                                                   OptionString=" ","G/L Account","Customer Ledger Entry","Line Fee" }
    { 5   ;   ;Entry No.           ;Integer       ;TableRelation="Cust. Ledger Entry";
                                                   OnLookup=BEGIN
                                                              if Type <> Type::"Customer Ledger Entry" then
                                                                exit;
                                                              IssuedReminderHeader.GET("Reminder No.");
                                                              CustLedgEntry.SETCURRENTKEY("Customer No.");
                                                              CustLedgEntry.SETRANGE("Customer No.",IssuedReminderHeader."Customer No.");
                                                              if CustLedgEntry.GET("Entry No.") then;
                                                              PAGE.RUNMODAL(0,CustLedgEntry);
                                                            END;

                                                   CaptionML=ENU=Entry No.;
                                                   BlankZero=true }
    { 6   ;   ;No. of Reminders    ;Integer       ;CaptionML=ENU=No. of Reminders }
    { 7   ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 8   ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 9   ;   ;Due Date            ;Date          ;CaptionML=ENU=Due Date }
    { 10  ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=" ",Payment,Invoice,"Credit Memo","Finance Charge Memo",Reminder,Refund }
    { 11  ;   ;Document No.        ;Code20        ;OnLookup=BEGIN
                                                              if Type <> Type::"Customer Ledger Entry" then
                                                                exit;
                                                              IssuedReminderHeader.GET("Reminder No.");
                                                              CustLedgEntry.SETCURRENTKEY("Customer No.");
                                                              CustLedgEntry.SETRANGE("Customer No.",IssuedReminderHeader."Customer No.");
                                                              if CustLedgEntry.GET("Entry No.") then;
                                                              PAGE.RUNMODAL(0,CustLedgEntry);
                                                            END;

                                                   CaptionML=ENU=Document No. }
    { 12  ;   ;Description         ;Text100       ;CaptionML=ENU=Description }
    { 13  ;   ;Original Amount     ;Decimal       ;CaptionML=ENU=Original Amount;
                                                   BlankZero=true;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCodeFromHeader }
    { 14  ;   ;Remaining Amount    ;Decimal       ;CaptionML=ENU=Remaining Amount;
                                                   BlankZero=true;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCodeFromHeader }
    { 15  ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(" ")) "Standard Text"
                                                                 ELSE IF (Type=CONST("G/L Account")) "G/L Account"
                                                                 ELSE IF (Type=CONST("Line Fee")) "G/L Account";
                                                   CaptionML=ENU=No. }
    { 16  ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   BlankZero=true;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCodeFromHeader }
    { 17  ;   ;Interest Rate       ;Decimal       ;CaptionML=ENU=Interest Rate;
                                                   DecimalPlaces=0:5;
                                                   BlankZero=true }
    { 18  ;   ;Gen. Prod. Posting Group;Code20    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=ENU=Gen. Prod. Posting Group }
    { 19  ;   ;VAT %               ;Decimal       ;CaptionML=ENU=VAT %;
                                                   DecimalPlaces=0:5 }
    { 20  ;   ;VAT Calculation Type;Option        ;CaptionML=ENU=VAT Calculation Type;
                                                   OptionCaptionML=ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                   OptionString="Normal VAT","Reverse Charge VAT","Full VAT","Sales Tax" }
    { 21  ;   ;VAT Amount          ;Decimal       ;CaptionML=ENU=VAT Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCodeFromHeader }
    { 22  ;   ;Tax Group Code      ;Code20        ;TableRelation="Tax Group";
                                                   CaptionML=ENU=Tax Group Code }
    { 23  ;   ;VAT Prod. Posting Group;Code20     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=ENU=VAT Prod. Posting Group }
    { 24  ;   ;VAT Identifier      ;Code20        ;CaptionML=ENU=VAT Identifier;
                                                   Editable=false }
    { 25  ;   ;Line Type           ;Option        ;CaptionML=ENU=Line Type;
                                                   OptionCaptionML=ENU=Reminder Line,Not Due,Beginning Text,Ending Text,Rounding,On Hold,Additional Fee,Line Fee;
                                                   OptionString="Reminder Line","Not Due","Beginning Text","Ending Text",Rounding,"On Hold","Additional Fee","Line Fee" }
    { 26  ;   ;VAT Clause Code     ;Code20        ;TableRelation="VAT Clause";
                                                   CaptionML=ENU=VAT Clause Code }
    { 27  ;   ;Applies-To Document Type;Option    ;CaptionML=ENU=Applies-To Document Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=" ",Payment,Invoice,"Credit Memo","Finance Charge Memo",Reminder,Refund }
    { 28  ;   ;Applies-To Document No.;Code20     ;OnLookup=BEGIN
                                                              if Type <> Type::"Line Fee" then
                                                                exit;
                                                              IssuedReminderHeader.GET("Reminder No.");
                                                              CustLedgEntry.SETCURRENTKEY("Customer No.");
                                                              CustLedgEntry.SETRANGE("Customer No.",IssuedReminderHeader."Customer No.");
                                                              CustLedgEntry.SETRANGE("Document Type","Applies-To Document Type");
                                                              CustLedgEntry.SETRANGE("Document No.","Applies-To Document No.");
                                                              if CustLedgEntry.FINDLAST then;
                                                              PAGE.RUNMODAL(0,CustLedgEntry);
                                                            END;

                                                   CaptionML=ENU=Applies-To Document No. }
    { 101 ;   ;System-Created Entry;Boolean       ;CaptionML=ENU=System-Created Entry;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"Reminder No.","Line No."               ;SumIndexFields=Amount,"VAT Amount","Remaining Amount";
                                                   MaintainSIFTIndex=false;
                                                   Clustered=true }
    {    ;"Reminder No.",Type,"Line Type"         ;SumIndexFields=Amount,"VAT Amount","Remaining Amount";
                                                   MaintainSQLIndex=false;
                                                   MaintainSIFTIndex=false }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      IssuedReminderHeader@1000 : Record "Issued Reminder Header";
      CustLedgEntry@1001 : Record "Cust. Ledger Entry";

    [External]
    PROCEDURE GetCurrencyCodeFromHeader@1() : Code[10];
    VAR
      IssuedReminderHeader@1000 : Record "Issued Reminder Header";
    BEGIN
      if "Reminder No." = IssuedReminderHeader."No." then
        exit(IssuedReminderHeader."Currency Code");

      if IssuedReminderHeader.GET("Reminder No.") then
        exit(IssuedReminderHeader."Currency Code");

      exit('');
    END;

    BEGIN
    END.
  }
}

