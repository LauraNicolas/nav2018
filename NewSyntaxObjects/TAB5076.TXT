OBJECT Table 5076 Segment Header
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    DataCaptionFields="No.",Description;
    OnInsert=BEGIN
               if "No." = '' then begin
                 RMSetup.GET;
                 RMSetup.TESTFIELD("Segment Nos.");
                 NoSeriesMgt.InitSeries(RMSetup."Segment Nos.",xRec."No. Series",0D,"No.","No. Series");
               end;

               if "Salesperson Code" = '' then
                 SetDefaultSalesperson;

               Date := WORKDATE;
             END;

    OnDelete=VAR
               SegHist@1000 : Record "Segment History";
               SegCriteriaLine@1001 : Record "Segment Criteria Line";
               SegInteractLanguage@1002 : Record "Segment Interaction Language";
             BEGIN
               SegCriteriaLine.SETRANGE("Segment No.","No.");
               SegCriteriaLine.DELETEALL; // Must be deleted first!
               SegHist.SETRANGE("Segment No.","No.");
               SegHist.DELETEALL;

               SegInteractLanguage.SETRANGE("Segment No.","No.");
               SegInteractLanguage.DELETEALL(true);

               SegLine.SETRANGE("Segment No.","No.");
               SegLine.DELETEALL(true);

               GET("No.");
             END;

    CaptionML=ENU=Segment Header;
    LookupPageID="Segment List";
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                if "No." <> xRec."No." then begin
                                                                  RMSetup.GET;
                                                                  NoSeriesMgt.TestManual(RMSetup."Segment Nos.");
                                                                  "No. Series" := '';
                                                                end;
                                                              END;

                                                   CaptionML=ENU=No. }
    { 2   ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                UpdateSegLines(FIELDCAPTION(Description),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Description }
    { 3   ;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   OnValidate=BEGIN
                                                                UpdateSegLines(FIELDCAPTION("Campaign No."),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Campaign No. }
    { 4   ;   ;Salesperson Code    ;Code20        ;TableRelation="Salesperson/Purchaser";
                                                   OnValidate=BEGIN
                                                                UpdateSegLines(FIELDCAPTION("Salesperson Code"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Salesperson Code }
    { 5   ;   ;Correspondence Type (Default);Option;
                                                   OnValidate=VAR
                                                                Attachment@1001 : Record Attachment;
                                                                ErrorText@1000 : Text[80];
                                                              BEGIN
                                                                if not Attachment.GET("Attachment No.") then
                                                                  exit;

                                                                ErrorText := Attachment.CheckCorrespondenceType("Correspondence Type (Default)");
                                                                if ErrorText <> '' then
                                                                  ERROR(
                                                                    Text000 + ErrorText,
                                                                    FIELDCAPTION("Correspondence Type (Default)"),"Correspondence Type (Default)",TABLECAPTION,"No.");
                                                                if "Correspondence Type (Default)" <> "Correspondence Type (Default)"::" " then
                                                                  UpdateSegLines(FIELDCAPTION("Correspondence Type (Default)"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Correspondence Type (Default);
                                                   OptionCaptionML=ENU=" ,Hard Copy,Email,Fax";
                                                   OptionString=" ","Hard Copy",Email,Fax }
    { 6   ;   ;Interaction Template Code;Code10   ;TableRelation="Interaction Template";
                                                   OnValidate=BEGIN
                                                                UpdateSegLines(FIELDCAPTION("Interaction Template Code"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Interaction Template Code }
    { 7   ;   ;Unit Cost (LCY)     ;Decimal       ;OnValidate=BEGIN
                                                                UpdateSegLines(FIELDCAPTION("Unit Cost (LCY)"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Unit Cost (LCY);
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 8   ;   ;Unit Duration (Min.);Decimal       ;OnValidate=BEGIN
                                                                UpdateSegLines(FIELDCAPTION("Unit Duration (Min.)"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Unit Duration (Min.);
                                                   DecimalPlaces=0:0;
                                                   MinValue=0 }
    { 9   ;   ;Attachment No.      ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Segment Interaction Language"."Attachment No." WHERE ("Segment No."=FIELD("No."),
                                                                                                                             "Segment Line No."=CONST(0),
                                                                                                                             "Language Code"=FIELD("Language Code (Default)")));
                                                   OnValidate=VAR
                                                                Attachment@1000 : Record Attachment;
                                                              BEGIN
                                                                UpdateSegLines(Attachment.TABLECAPTION,CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Attachment No. }
    { 10  ;   ;Date                ;Date          ;OnValidate=BEGIN
                                                                UpdateSegLines(FIELDCAPTION(Date),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Date }
    { 11  ;   ;Campaign Target     ;Boolean       ;OnValidate=BEGIN
                                                                UpdateSegLines(FIELDCAPTION("Campaign Target"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Campaign Target }
    { 12  ;   ;Information Flow    ;Option        ;OnValidate=BEGIN
                                                                UpdateSegLines(FIELDCAPTION("Information Flow"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Information Flow;
                                                   OptionCaptionML=ENU=" ,Outbound,Inbound";
                                                   OptionString=" ",Outbound,Inbound;
                                                   BlankZero=true }
    { 13  ;   ;Initiated By        ;Option        ;OnValidate=BEGIN
                                                                UpdateSegLines(FIELDCAPTION("Initiated By"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Initiated By;
                                                   OptionCaptionML=ENU=" ,Us,Them";
                                                   OptionString=" ",Us,Them;
                                                   BlankZero=true }
    { 14  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=false }
    { 15  ;   ;Campaign Response   ;Boolean       ;OnValidate=BEGIN
                                                                UpdateSegLines(FIELDCAPTION("Campaign Response"),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Campaign Response }
    { 16  ;   ;No. of Lines        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Segment Line" WHERE ("Segment No."=FIELD("No.")));
                                                   CaptionML=ENU=No. of Lines;
                                                   Editable=false }
    { 17  ;   ;Cost (LCY)          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Segment Line"."Cost (LCY)" WHERE ("Segment No."=FIELD("No.")));
                                                   CaptionML=ENU=Cost (LCY);
                                                   Editable=false;
                                                   AutoFormatType=1 }
    { 18  ;   ;Duration (Min.)     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Segment Line"."Duration (Min.)" WHERE ("Segment No."=FIELD("No.")));
                                                   CaptionML=ENU=Duration (Min.);
                                                   DecimalPlaces=0:0;
                                                   Editable=false }
    { 19  ;   ;Language Code (Default);Code10     ;TableRelation=Language;
                                                   OnValidate=VAR
                                                                SegInteractLanguage@1001 : Record "Segment Interaction Language";
                                                              BEGIN
                                                                if "Language Code (Default)" = xRec."Language Code (Default)" then
                                                                  exit;

                                                                if not SegInteractLanguage.GET("No.",0,"Language Code (Default)") then begin
                                                                  "Subject (Default)" := '';
                                                                  if CONFIRM(Text010,true,SegInteractLanguage.TABLECAPTION,"Language Code (Default)") then begin
                                                                    SegInteractLanguage.INIT;
                                                                    SegInteractLanguage."Segment No." := "No.";
                                                                    SegInteractLanguage."Segment Line No." := 0;
                                                                    SegInteractLanguage."Language Code" := "Language Code (Default)";
                                                                    SegInteractLanguage.Description := FORMAT("Interaction Template Code") + ' ' + FORMAT("Language Code (Default)");
                                                                    SegInteractLanguage.INSERT(true);
                                                                  end else
                                                                    ERROR('');
                                                                end else
                                                                  "Subject (Default)" := SegInteractLanguage.Subject;
                                                              END;

                                                   OnLookup=VAR
                                                              SegInteractLanguage@1000 : Record "Segment Interaction Language";
                                                            BEGIN
                                                              MODIFY;
                                                              COMMIT;

                                                              SegInteractLanguage.SETRANGE("Segment No.","No.");
                                                              SegInteractLanguage.SETRANGE("Segment Line No.",0);
                                                              if "Language Code (Default)" <> '' then
                                                                SegInteractLanguage.GET("No.",0,"Language Code (Default)");
                                                              if PAGE.RUNMODAL(0,SegInteractLanguage) = ACTION::LookupOK then begin
                                                                GET("No.");
                                                                "Language Code (Default)" := SegInteractLanguage."Language Code";
                                                                "Subject (Default)" := SegInteractLanguage.Subject;
                                                                MODIFY;
                                                              end else
                                                                GET("No.");
                                                              CALCFIELDS("Attachment No.");
                                                            END;

                                                   CaptionML=ENU=Language Code (Default) }
    { 20  ;   ;Interaction Group Code;Code10      ;TableRelation="Interaction Group";
                                                   CaptionML=ENU=Interaction Group Code }
    { 21  ;   ;No. of Criteria Actions;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("Segment Criteria Line" WHERE ("Segment No."=FIELD("No."),
                                                                                                    Type=CONST(Action)));
                                                   CaptionML=ENU=No. of Criteria Actions;
                                                   Editable=false }
    { 22  ;   ;Send Word Docs. as Attmt.;Boolean  ;OnValidate=BEGIN
                                                                UpdateSegLines(FIELDCAPTION("Send Word Docs. as Attmt."),CurrFieldNo <> 0);
                                                              END;

                                                   CaptionML=ENU=Send Word Docs. as Attmt. }
    { 23  ;   ;Ignore Contact Corres. Type;Boolean;CaptionML=ENU=Ignore Contact Corres. Type }
    { 24  ;   ;Subject (Default)   ;Text50        ;OnValidate=VAR
                                                                SegInteractLanguage@1000 : Record "Segment Interaction Language";
                                                                UpdateLines@1001 : Boolean;
                                                              BEGIN
                                                                if SegLinesExist(FIELDCAPTION("Subject (Default)")) then
                                                                  UpdateLines := CONFIRM(STRSUBSTNO(Text011,FIELDCAPTION("Subject (Default)")),true);

                                                                if SegInteractLanguage.GET("No.",0,"Language Code (Default)") then begin
                                                                  SegInteractLanguage.Subject := "Subject (Default)";
                                                                  SegInteractLanguage.MODIFY;
                                                                  MODIFY;
                                                                end;

                                                                if not UpdateLines then
                                                                  exit;

                                                                SegLine.SETRANGE("Segment No.","No.");
                                                                SegLine.SETRANGE("Interaction Template Code","Interaction Template Code");
                                                                SegLine.SETRANGE("Language Code","Language Code (Default)");
                                                                SegLine.SETRANGE(Subject,xRec."Subject (Default)");
                                                                SegLine.MODIFYALL(Subject,"Subject (Default)");
                                                              END;

                                                   CaptionML=ENU=Subject (Default) }
    { 25  ;   ;Campaign Description;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Campaign.Description WHERE ("No."=FIELD("Campaign No.")));
                                                   CaptionML=ENU=Campaign Description;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;"No."                                   ;Clustered=true }
    {    ;"Salesperson Code"                       }
    {    ;"Campaign No."                           }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;"No.",Description,"Campaign No."         }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU="%1 = %2 can not be specified for %3 %4.\"';
      Text002@1002 : TextConst 'ENU=You have modified %1.\\Do you want to update the segment lines where the Interaction Template Code is %2?';
      Text003@1003 : TextConst 'ENU=%1 may not be modified without updating lines when inherited attachments exist.';
      Text005@1005 : TextConst 'ENU=Segment %1 already contains %2 %3.\Are you sure you want to reuse a %4?';
      Text006@1006 : TextConst 'ENU=Segment %1 already contains %2 %3.\Are you sure you want to reuse a %4?';
      RMSetup@1010 : Record "Marketing Setup";
      SegHeader@1011 : Record "Segment Header";
      SegLine@1012 : Record "Segment Line";
      NoSeriesMgt@1014 : Codeunit NoSeriesManagement;
      SegCriteriaManagement@1015 : Codeunit SegCriteriaManagement;
      SegHistMgt@1016 : Codeunit SegHistoryManagement;
      Text010@1007 : TextConst 'ENU=Do you want to create %1 %2?';
      Text011@1004 : TextConst 'ENU=You have modified %1.\\Do you want to update the corresponding segment lines?';
      Text012@1030 : TextConst '@@@=You have modified Meeting.\\Do you want to apply the Meeting BUS to all segment lines?;ENU=You have modified %1.\\Do you want to apply the %1 %2 to all segment lines?';

    [External]
    PROCEDURE AssistEdit@2(OldSegHeader@1000 : Record "Segment Header") : Boolean;
    BEGIN
      with SegHeader do begin
        SegHeader := Rec;
        RMSetup.GET;
        RMSetup.TESTFIELD("Segment Nos.");
        if NoSeriesMgt.SelectSeries(RMSetup."Segment Nos.",OldSegHeader."No. Series","No. Series") then begin
          RMSetup.GET;
          RMSetup.TESTFIELD("Segment Nos.");
          NoSeriesMgt.SetSeries("No.");
          Rec := SegHeader;
          exit(true);
        end;
      end;
    END;

    [External]
    PROCEDURE CreateOpportunities@1();
    VAR
      SegmentLine@1000 : Record "Segment Line";
    BEGIN
      SegmentLine.SETRANGE("Segment No.","No.");
      SegmentLine.SETFILTER("Contact No.",'<>%1','');
      if SegmentLine.FINDSET then
        repeat
          SegmentLine.CreateOpportunity;
        until SegmentLine.NEXT = 0;
    END;

    [External]
    PROCEDURE CreateSegInteractions@14(InteractionTemplateCode@1000 : Code[10];SegmentNo@1005 : Code[20];SegmentLineNo@1006 : Integer);
    VAR
      InteractionTmplLanguage@1003 : Record "Interaction Tmpl. Language";
      SegInteractLanguage@1002 : Record "Segment Interaction Language";
      Attachment@1001 : Record Attachment;
      AttachmentManagement@1004 : Codeunit AttachmentManagement;
    BEGIN
      SegInteractLanguage.SETRANGE("Segment No.",SegmentNo);
      SegInteractLanguage.SETRANGE("Segment Line No.",SegmentLineNo);
      SegInteractLanguage.DELETEALL(true);

      InteractionTmplLanguage.RESET;
      InteractionTmplLanguage.SETRANGE("Interaction Template Code",InteractionTemplateCode);
      if InteractionTmplLanguage.FIND('-') then
        repeat
          SegInteractLanguage.INIT;
          SegInteractLanguage."Segment No." := SegmentNo;
          SegInteractLanguage."Segment Line No." := SegmentLineNo;
          SegInteractLanguage."Language Code" := InteractionTmplLanguage."Language Code";
          SegInteractLanguage.Description := InteractionTmplLanguage.Description;
          if Attachment.GET(InteractionTmplLanguage."Attachment No.") then
            SegInteractLanguage."Attachment No." := AttachmentManagement.InsertAttachment(InteractionTmplLanguage."Attachment No.");
          SegInteractLanguage.INSERT(true);
        until InteractionTmplLanguage.NEXT = 0;
    END;

    [External]
    LOCAL PROCEDURE CopyFromTemplate@16(InteractionTemplate@1000 : Record "Interaction Template");
    BEGIN
      "Language Code (Default)" := InteractionTemplate."Language Code (Default)";
      "Interaction Group Code" := InteractionTemplate."Interaction Group Code";
      "Unit Cost (LCY)" := InteractionTemplate."Unit Cost (LCY)";
      "Unit Duration (Min.)" := InteractionTemplate."Unit Duration (Min.)";
      "Information Flow" := InteractionTemplate."Information Flow";
      "Initiated By" := InteractionTemplate."Initiated By";
      "Campaign Target" := InteractionTemplate."Campaign Target";
      "Campaign Response" := InteractionTemplate."Campaign Response";
      "Correspondence Type (Default)" := InteractionTemplate."Correspondence Type (Default)";
      "Ignore Contact Corres. Type" := InteractionTemplate."Ignore Contact Corres. Type";
    END;

    LOCAL PROCEDURE UpdateSegLines@15(ChangedFieldName@1000 : Text[100];AskQuestion@1001 : Boolean);
    VAR
      Attachment@1003 : Record Attachment;
      Question@1002 : Text[260];
    BEGIN
      if SegLinesExist(ChangedFieldName) then begin
        if AskQuestion then begin
          if ChangedFieldName = FIELDCAPTION("Interaction Template Code") then
            Question := STRSUBSTNO(Text012,ChangedFieldName,"Interaction Template Code")
          else
            Question := STRSUBSTNO(Text002,ChangedFieldName,"Interaction Template Code");
          if not CONFIRM(Question,true) then begin
            if ChangedFieldName = FIELDCAPTION("Interaction Template Code") then begin
              SegLine.SETRANGE("Segment No.","No.");
              if SegLine.FIND('-') then begin
                repeat
                  if SegLine.AttachmentInherited then
                    ERROR(Text003,FIELDCAPTION("Interaction Template Code"));
                until SegLine.NEXT = 0;
              end
            end;
            UpdateSegHeader("Interaction Template Code",
              ChangedFieldName = FIELDCAPTION("Interaction Template Code"));
            exit;
          end;
        end;

        if ChangedFieldName = FIELDCAPTION("Interaction Template Code") then
          UpdateSegHeader("Interaction Template Code",true);

        SegLine.LOCKTABLE;
        SegLine.RESET;
        SegLine.SETRANGE("Segment No.","No.");
        if ChangedFieldName <> FIELDCAPTION("Interaction Template Code") then
          SegLine.SETRANGE("Interaction Template Code","Interaction Template Code");

        if SegLine.FIND('-') then
          repeat
            case ChangedFieldName of
              FIELDCAPTION(Description):
                SegLine.VALIDATE(Description,Description);
              FIELDCAPTION("Campaign No."):
                SegLine.VALIDATE("Campaign No.","Campaign No.");
              FIELDCAPTION("Salesperson Code"):
                SegLine.VALIDATE("Salesperson Code","Salesperson Code");
              FIELDCAPTION("Correspondence Type (Default)"):
                SegLine.VALIDATE("Correspondence Type","Correspondence Type (Default)");
              FIELDCAPTION("Interaction Template Code"):
                SegLine.VALIDATE("Interaction Template Code","Interaction Template Code");
              FIELDCAPTION("Unit Cost (LCY)"):
                SegLine.VALIDATE("Cost (LCY)","Unit Cost (LCY)");
              FIELDCAPTION("Unit Duration (Min.)"):
                SegLine.VALIDATE("Duration (Min.)","Unit Duration (Min.)");
              FIELDCAPTION(Date):
                SegLine.VALIDATE(Date,Date);
              FIELDCAPTION("Campaign Target"):
                SegLine.VALIDATE("Campaign Target","Campaign Target");
              FIELDCAPTION("Information Flow"):
                SegLine.VALIDATE("Information Flow","Information Flow");
              FIELDCAPTION("Initiated By"):
                SegLine.VALIDATE("Initiated By","Initiated By");
              FIELDCAPTION("Campaign Response"):
                SegLine.VALIDATE("Campaign Response","Campaign Response");
              FIELDCAPTION("Interaction Group Code"):
                SegLine.VALIDATE("Interaction Group Code","Interaction Group Code");
              FIELDCAPTION("Send Word Docs. as Attmt."):
                SegLine.VALIDATE("Send Word Doc. As Attmt.","Send Word Docs. as Attmt.");
              Attachment.TABLECAPTION:
                SegLine.VALIDATE("Attachment No.","Attachment No.");
            end;
            SegLine.MODIFY(true);
          until SegLine.NEXT = 0;
      end else
        if "No." <> '' then
          UpdateSegHeader("Interaction Template Code",
            ChangedFieldName = FIELDCAPTION("Interaction Template Code"));
    END;

    [External]
    PROCEDURE SegLinesExist@3(ChangedFieldName@1000 : Text[100]) : Boolean;
    BEGIN
      SegLine.RESET;
      SegLine.SETRANGE("Segment No.","No.");
      if ChangedFieldName <> FIELDCAPTION("Interaction Template Code") then
        SegLine.SETRANGE("Interaction Template Code","Interaction Template Code");
      exit(SegLine.FIND('-'));
    END;

    [External]
    PROCEDURE ReuseLogged@7(LoggedSegEntryNo@1000 : Integer);
    VAR
      LoggedSeg@1001 : Record "Logged Segment";
      InteractLogEntry@1002 : Record "Interaction Log Entry";
      SegLine@1003 : Record "Segment Line";
      NextLineNo@1004 : Integer;
    BEGIN
      if LoggedSegEntryNo = 0 then begin
        CALCFIELDS("No. of Criteria Actions");
        if "No. of Criteria Actions" <> 0 then
          if not CONFIRM(
               Text005,false,
               "No.","No. of Criteria Actions",FIELDCAPTION("No. of Criteria Actions"),LoggedSeg.TABLECAPTION)
          then
            exit;
        if PAGE.RUNMODAL(PAGE::"Logged Segments",LoggedSeg) <> ACTION::LookupOK then
          exit;
      end else
        LoggedSeg.GET(LoggedSegEntryNo);

      SegLine.LOCKTABLE;
      SegLine.SETRANGE("Segment No.","No.");
      if SegLine.FINDLAST then
        NextLineNo := SegLine."Line No.";

      CLEAR(SegCriteriaManagement);
      SegCriteriaManagement.InsertReuseLogged("No.",LoggedSeg."Entry No.");

      InteractLogEntry.SETCURRENTKEY("Logged Segment Entry No.");
      InteractLogEntry.SETRANGE("Logged Segment Entry No.",LoggedSeg."Entry No.");
      if InteractLogEntry.FIND('-') then
        repeat
          NextLineNo := NextLineNo + 10000;
          SegLine.INIT;
          SegLine."Segment No." := "No.";
          SegLine."Line No." := NextLineNo;
          SegLine.VALIDATE("Contact No.",InteractLogEntry."Contact No.");
          SegLine."Campaign No." := InteractLogEntry."Campaign No.";
          SegLine.INSERT(true);
          SegHistMgt.InsertLine("No.",SegLine."Contact No.",SegLine."Line No.");
        until InteractLogEntry.NEXT = 0;
    END;

    [External]
    PROCEDURE ReuseCriteria@4();
    VAR
      SavedSegCriteria@1000 : Record "Saved Segment Criteria";
      SavedSegCriteriaLineAction@1001 : Record "Saved Segment Criteria Line";
      SavedSegCriteriaLineFilter@1002 : Record "Saved Segment Criteria Line";
      Cont@1003 : Record Contact;
      ContProfileAnswer@1004 : Record "Contact Profile Answer";
      ContMailingGrp@1005 : Record "Contact Mailing Group";
      InteractLogEntry@1006 : Record "Interaction Log Entry";
      ContJobResp@1007 : Record "Contact Job Responsibility";
      ContIndustGrp@1008 : Record "Contact Industry Group";
      ContBusRel@1009 : Record "Contact Business Relation";
      ValueEntry@1010 : Record "Value Entry";
      AddContacts@1011 : Report "Add Contacts";
      ReduceContacts@1012 : Report "Remove Contacts - Reduce";
      RefineContacts@1013 : Report "Remove Contacts - Refine";
    BEGIN
      CALCFIELDS("No. of Criteria Actions");
      if "No. of Criteria Actions" <> 0 then
        if not CONFIRM(
             Text006,false,
             "No.","No. of Criteria Actions",FIELDCAPTION("No. of Criteria Actions"),SavedSegCriteria.TABLECAPTION)
        then
          exit;

      if PAGE.RUNMODAL(PAGE::"Saved Segment Criteria List",SavedSegCriteria) <> ACTION::LookupOK then
        exit;

      SavedSegCriteriaLineAction.SETRANGE("Segment Criteria Code",SavedSegCriteria.Code);
      SavedSegCriteriaLineAction.SETRANGE(Type,SavedSegCriteriaLineAction.Type::Action);
      if SavedSegCriteriaLineAction.FIND('-') then
        repeat
          SegHeader.SETRANGE("No.","No.");
          Cont.RESET;
          ContProfileAnswer.RESET;
          ContMailingGrp.RESET;
          InteractLogEntry.RESET;
          ContJobResp.RESET;
          ContIndustGrp.RESET;
          ContBusRel.RESET;
          ValueEntry.RESET;
          SavedSegCriteriaLineFilter.SETRANGE("Segment Criteria Code",SavedSegCriteria.Code);
          SavedSegCriteriaLineFilter.SETRANGE(
            "Line No.",SavedSegCriteriaLineAction."Line No." + 1,
            SavedSegCriteriaLineAction."Line No." + SavedSegCriteriaLineAction."No. of Filters");
          if SavedSegCriteriaLineFilter.FIND('-') then
            repeat
              case SavedSegCriteriaLineFilter."Table No." of
                DATABASE::Contact:
                  Cont.SETVIEW(SavedSegCriteriaLineFilter.View);
                DATABASE::"Contact Profile Answer":
                  ContProfileAnswer.SETVIEW(SavedSegCriteriaLineFilter.View);
                DATABASE::"Contact Mailing Group":
                  ContMailingGrp.SETVIEW(SavedSegCriteriaLineFilter.View);
                DATABASE::"Interaction Log Entry":
                  InteractLogEntry.SETVIEW(SavedSegCriteriaLineFilter.View);
                DATABASE::"Contact Job Responsibility":
                  ContJobResp.SETVIEW(SavedSegCriteriaLineFilter.View);
                DATABASE::"Contact Industry Group":
                  ContIndustGrp.SETVIEW(SavedSegCriteriaLineFilter.View);
                DATABASE::"Contact Business Relation":
                  ContBusRel.SETVIEW(SavedSegCriteriaLineFilter.View);
                DATABASE::"Value Entry":
                  ValueEntry.SETVIEW(SavedSegCriteriaLineFilter.View);
              end;
            until SavedSegCriteriaLineFilter.NEXT = 0;
          case SavedSegCriteriaLineAction.Action of
            SavedSegCriteriaLineAction.Action::"Add Contacts":
              begin
                CLEAR(AddContacts);
                AddContacts.SETTABLEVIEW(SegHeader);
                AddContacts.SETTABLEVIEW(Cont);
                AddContacts.SETTABLEVIEW(ContProfileAnswer);
                AddContacts.SETTABLEVIEW(ContMailingGrp);
                AddContacts.SETTABLEVIEW(InteractLogEntry);
                AddContacts.SETTABLEVIEW(ContJobResp);
                AddContacts.SETTABLEVIEW(ContIndustGrp);
                AddContacts.SETTABLEVIEW(ContBusRel);
                AddContacts.SETTABLEVIEW(ValueEntry);
                AddContacts.SetOptions(
                  SavedSegCriteriaLineAction."Allow Existing Contacts",
                  SavedSegCriteriaLineAction."Expand Contact",
                  SavedSegCriteriaLineAction."Allow Company with Persons",
                  SavedSegCriteriaLineAction."Ignore Exclusion");
                AddContacts.USEREQUESTPAGE(false);
                AddContacts.RUNMODAL;
              end;
            SavedSegCriteriaLineAction.Action::"Remove Contacts (Reduce)":
              begin
                CLEAR(ReduceContacts);
                ReduceContacts.SETTABLEVIEW(SegHeader);
                ReduceContacts.SETTABLEVIEW(Cont);
                ReduceContacts.SETTABLEVIEW(ContProfileAnswer);
                ReduceContacts.SETTABLEVIEW(ContMailingGrp);
                ReduceContacts.SETTABLEVIEW(InteractLogEntry);
                ReduceContacts.SETTABLEVIEW(ContJobResp);
                ReduceContacts.SETTABLEVIEW(ContIndustGrp);
                ReduceContacts.SETTABLEVIEW(ContBusRel);
                ReduceContacts.SETTABLEVIEW(ValueEntry);
                ReduceContacts.SetOptions(SavedSegCriteriaLineAction."Entire Companies");
                ReduceContacts.USEREQUESTPAGE(false);
                ReduceContacts.RUNMODAL;
              end;
            SavedSegCriteriaLineAction.Action::"Remove Contacts (Refine)":
              begin
                CLEAR(RefineContacts);
                RefineContacts.SETTABLEVIEW(SegHeader);
                RefineContacts.SETTABLEVIEW(Cont);
                RefineContacts.SETTABLEVIEW(ContProfileAnswer);
                RefineContacts.SETTABLEVIEW(ContMailingGrp);
                RefineContacts.SETTABLEVIEW(InteractLogEntry);
                RefineContacts.SETTABLEVIEW(ContJobResp);
                RefineContacts.SETTABLEVIEW(ContIndustGrp);
                RefineContacts.SETTABLEVIEW(ContBusRel);
                RefineContacts.SETTABLEVIEW(ValueEntry);
                ReduceContacts.SetOptions(SavedSegCriteriaLineAction."Entire Companies");
                RefineContacts.USEREQUESTPAGE(false);
                RefineContacts.RUNMODAL;
              end;
          end;
        until SavedSegCriteriaLineAction.NEXT = 0;
    END;

    [External]
    PROCEDURE SaveCriteria@5();
    VAR
      SegCriteriaLine@1000 : Record "Segment Criteria Line";
      SavedSegCriteria@1001 : Record "Saved Segment Criteria";
      SavedSegCriteriaLine@1002 : Record "Saved Segment Criteria Line";
      SaveSegCriteria@1003 : Page "Save Segment Criteria";
      FormAction@1004 : Action;
    BEGIN
      CALCFIELDS("No. of Criteria Actions");
      TESTFIELD("No. of Criteria Actions");
      SaveSegCriteria.RUNMODAL;
      SaveSegCriteria.GetValues(FormAction,SavedSegCriteria.Code,SavedSegCriteria.Description);
      if FormAction = ACTION::OK then begin
        SavedSegCriteria.INSERT(true);
        SegCriteriaLine.SETRANGE("Segment No.","No.");
        SegCriteriaLine.FIND('-');
        repeat
          SavedSegCriteriaLine.INIT;
          SavedSegCriteriaLine."Segment Criteria Code" := SavedSegCriteria.Code;
          SavedSegCriteriaLine."Line No." := SegCriteriaLine."Line No.";
          SavedSegCriteriaLine.Action := SegCriteriaLine.Action;
          SavedSegCriteriaLine.Type := SegCriteriaLine.Type;
          SavedSegCriteriaLine."Table No." := SegCriteriaLine."Table No.";
          SavedSegCriteriaLine.View := SegCriteriaLine.View;
          SavedSegCriteriaLine."Allow Existing Contacts" := SegCriteriaLine."Allow Existing Contacts";
          SavedSegCriteriaLine."Expand Contact" := SegCriteriaLine."Expand Contact";
          SavedSegCriteriaLine."Allow Company with Persons" := SegCriteriaLine."Allow Company with Persons";
          SavedSegCriteriaLine."Ignore Exclusion" := SegCriteriaLine."Ignore Exclusion";
          SavedSegCriteriaLine."Entire Companies" := SegCriteriaLine."Entire Companies";
          SavedSegCriteriaLine."No. of Filters" := SegCriteriaLine."No. of Filters";
          SavedSegCriteriaLine.INSERT;
        until SegCriteriaLine.NEXT = 0;
      end;
    END;

    [Internal]
    PROCEDURE MaintainAttachment@13();
    BEGIN
      if "Interaction Template Code" = '' then
        exit;

      if "Attachment No." <> 0 then
        OpenAttachment
      else begin
        CreateAttachment;
        CALCFIELDS("Attachment No.");
      end;
    END;

    [Internal]
    PROCEDURE CreateAttachment@12();
    VAR
      SegInteractLanguage@1000 : Record "Segment Interaction Language";
    BEGIN
      if not SegInteractLanguage.GET("No.",0,"Language Code (Default)") then begin
        SegInteractLanguage.INIT;
        SegInteractLanguage."Segment No." := "No.";
        SegInteractLanguage."Segment Line No." := 0;
        SegInteractLanguage."Language Code" := "Language Code (Default)";
        SegInteractLanguage.Description := FORMAT("Interaction Template Code") + ' ' + FORMAT("Language Code (Default)");
        SegInteractLanguage.Subject := "Subject (Default)";
      end;
      SegInteractLanguage.CreateAttachment;
    END;

    [Internal]
    PROCEDURE OpenAttachment@6();
    VAR
      SegInteractLanguage@1001 : Record "Segment Interaction Language";
    BEGIN
      if SegInteractLanguage.GET("No.",0,"Language Code (Default)") then
        if SegInteractLanguage."Attachment No." <> 0 then
          SegInteractLanguage.OpenAttachment;
    END;

    [Internal]
    PROCEDURE ImportAttachment@10();
    VAR
      SegInteractLanguage@1003 : Record "Segment Interaction Language";
    BEGIN
      if not SegInteractLanguage.GET("No.",0,"Language Code (Default)") then begin
        SegInteractLanguage.INIT;
        SegInteractLanguage."Segment No." := "No.";
        SegInteractLanguage."Segment Line No." := 0;
        SegInteractLanguage."Language Code" := "Language Code (Default)";
        SegInteractLanguage.Description :=
          FORMAT("Interaction Template Code") + ' ' + FORMAT("Language Code (Default)");
        SegInteractLanguage.INSERT(true);
      end;
      SegInteractLanguage.ImportAttachment;
    END;

    [Internal]
    PROCEDURE ExportAttachment@9();
    VAR
      SegInteractLanguage@1000 : Record "Segment Interaction Language";
    BEGIN
      if SegInteractLanguage.GET("No.",0,"Language Code (Default)") then
        if SegInteractLanguage."Attachment No." <> 0 then
          SegInteractLanguage.ExportAttachment;
    END;

    [Internal]
    PROCEDURE RemoveAttachment@8(Prompt@1000 : Boolean);
    VAR
      SegInteractLanguage@1001 : Record "Segment Interaction Language";
    BEGIN
      if SegInteractLanguage.GET("No.",0,"Language Code (Default)") then
        if SegInteractLanguage."Attachment No." <> 0 then
          SegInteractLanguage.RemoveAttachment(Prompt);
    END;

    LOCAL PROCEDURE UpdateSegHeader@11(InteractTmplCode@1006 : Code[10];InteractTmplChange@1005 : Boolean);
    VAR
      InteractionTemplate@1004 : Record "Interaction Template";
    BEGIN
      if InteractTmplChange then begin
        MODIFY;
        GET("No.");
        "Interaction Template Code" := InteractTmplCode;
        "Subject (Default)" := '';

        if InteractionTemplate.GET("Interaction Template Code") then begin
          CopyFromTemplate(InteractionTemplate);
          if (GETFILTER("Campaign No.") = '') and (InteractionTemplate."Campaign No." <> '') then
            "Campaign No." := InteractionTemplate."Campaign No.";

          CreateSegInteractions("Interaction Template Code","No.",0);
        end else begin
          CopyFromTemplate(InteractionTemplate);
          if GETFILTER("Campaign No.") = '' then
            "Campaign No." := '';
        end;

        MODIFY;
        CALCFIELDS("Attachment No.");
      end;
    END;

    LOCAL PROCEDURE SetDefaultSalesperson@124();
    VAR
      UserSetup@1000 : Record "User Setup";
    BEGIN
      if not UserSetup.GET(USERID) then
        exit;

      if UserSetup."Salespers./Purch. Code" <> '' then
        VALIDATE("Salesperson Code",UserSetup."Salespers./Purch. Code");
    END;

    BEGIN
    END.
  }
}

