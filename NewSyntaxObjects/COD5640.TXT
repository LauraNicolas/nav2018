OBJECT Codeunit 5640 Duplicate Depr. Book
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FA@1000 : Record "Fixed Asset";
      FASetup@1001 : Record "FA Setup";
      FAJnlSetup@1002 : Record "FA Journal Setup";
      GenJnlLine2@1003 : Record "Gen. Journal Line";
      FAJnlLine2@1004 : Record "FA Journal Line";
      DeprBook@1005 : Record "Depreciation Book";
      DimMgt@1008 : Codeunit DimensionManagement;
      FAGetJnl@1009 : Codeunit "FA Get Journal";
      InsuranceJnlPostLine@1010 : Codeunit "Insurance Jnl.-Post Line";
      FAAmount@1012 : Decimal;
      DuplicateInGenJnl@1013 : Boolean;
      TemplateName@1014 : Code[10];
      BatchName@1015 : Code[10];
      ExchangeRate@1016 : Decimal;
      NextLineNo@1017 : Integer;

    [External]
    PROCEDURE DuplicateGenJnlLine@3(VAR GenJnlLine@1000 : Record "Gen. Journal Line";FAAmount2@1001 : Decimal);
    VAR
      FADeprBook@1002 : Record "FA Depreciation Book";
    BEGIN
      with GenJnlLine do begin
        FAAmount := FAAmount2;
        DeprBook.GET("Depreciation Book Code");
        if "Insurance No." <> '' then
          InsertInsurance(true,GenJnlLine,FAJnlLine2);
        if ("Duplicate in Depreciation Book" = '') and
           (not "Use Duplication List")
        then
          exit;
        ExchangeRate := GetExchangeRate("Account No.",DeprBook);
        if "Duplicate in Depreciation Book" <> '' then begin
          DeprBook.GET("Duplicate in Depreciation Book");
          CreateLine(true,GenJnlLine,FAJnlLine2);
          exit;
        end;
        if "Use Duplication List" then
          if DeprBook.FIND('-') then
            repeat
              if DeprBook."Part of Duplication List" and (DeprBook.Code <> "Depreciation Book Code") then
                if FADeprBook.GET("Account No.",DeprBook.Code) then
                  CreateLine(true,GenJnlLine,FAJnlLine2);
            until DeprBook.NEXT = 0;
      end;
    END;

    [External]
    PROCEDURE DuplicateFAJnlLine@4(VAR FAJnlLine@1000 : Record "FA Journal Line");
    VAR
      FADeprBook@1001 : Record "FA Depreciation Book";
    BEGIN
      with FAJnlLine do begin
        DeprBook.GET("Depreciation Book Code");
        if "Insurance No." <> '' then
          InsertInsurance(false,GenJnlLine2,FAJnlLine);
        if ("Duplicate in Depreciation Book" = '') and
           (not "Use Duplication List")
        then
          exit;
        FA.GET("FA No.");
        ExchangeRate := GetExchangeRate("FA No.",DeprBook);
        if "Duplicate in Depreciation Book" <> '' then begin
          DeprBook.GET("Duplicate in Depreciation Book");
          CreateLine(false,GenJnlLine2,FAJnlLine);
          exit;
        end;
        if "Use Duplication List" then
          if DeprBook.FIND('-') then
            repeat
              if DeprBook."Part of Duplication List" and (DeprBook.Code <> "Depreciation Book Code") then
                if FADeprBook.GET(FA."No.",DeprBook.Code) then
                  CreateLine(false,GenJnlLine2,FAJnlLine);
            until DeprBook.NEXT = 0;
      end;
    END;

    LOCAL PROCEDURE InsertInsurance@11(GenJnlPosting@1000 : Boolean;GenJnlLine@1001 : Record "Gen. Journal Line";FAJnlLine@1002 : Record "FA Journal Line");
    VAR
      InsuranceJnlLine@1003 : Record "Insurance Journal Line";
    BEGIN
      FASetup.GET;
      FASetup.TESTFIELD("Insurance Depr. Book",DeprBook.Code);
      InsuranceJnlLine.INIT;
      InsuranceJnlLine."Line No." := 0;
      if not FASetup."Automatic Insurance Posting" then
        InitInsuranceJnlLine(InsuranceJnlLine);

      with InsuranceJnlLine do begin
        if GenJnlPosting then begin
          if FASetup."Automatic Insurance Posting" then begin
            "Journal Batch Name" := GenJnlLine."Journal Batch Name";
            "Source Code" := GenJnlLine."Source Code";
            "Reason Code" := GenJnlLine."Reason Code"
          end;
          VALIDATE("Insurance No.",GenJnlLine."Insurance No.");
          VALIDATE("FA No.",GenJnlLine."Account No.");
          "Posting Date" := GenJnlLine."FA Posting Date";
          if "Posting Date" = 0D then
            "Posting Date" := GenJnlLine."Posting Date";
          VALIDATE(Amount,FAAmount);
          "Document Type" := GenJnlLine."Document Type";
          "Document Date" := GenJnlLine."Document Date";
          if "Document Date" = 0D then
            "Document Date" := "Posting Date";
          "Document No." := GenJnlLine."Document No.";
          "External Document No." := GenJnlLine."External Document No.";
          if not DeprBook."Use Default Dimension" then begin
            "Shortcut Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
            "Shortcut Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";
            "Dimension Set ID" := GenJnlLine."Dimension Set ID";
          end;
        end;
        if not GenJnlPosting then begin
          if FASetup."Automatic Insurance Posting" then begin
            "Journal Batch Name" := FAJnlLine."Journal Batch Name";
            "Source Code" := FAJnlLine."Source Code";
            "Reason Code" := FAJnlLine."Reason Code"
          end;
          VALIDATE("Insurance No.",FAJnlLine."Insurance No.");
          VALIDATE("FA No.",FAJnlLine."FA No.");
          "Posting Date" := FAJnlLine."FA Posting Date";
          VALIDATE(Amount,FAJnlLine.Amount);
          "Document Type" := FAJnlLine."Document Type";
          "Document Date" := FAJnlLine."Document Date";
          if "Document Date" = 0D then
            "Document Date" := "Posting Date";
          "Document No." := FAJnlLine."Document No.";
          "External Document No." := FAJnlLine."External Document No.";
          if not DeprBook."Use Default Dimension" then begin
            "Shortcut Dimension 1 Code" := FAJnlLine."Shortcut Dimension 1 Code";
            "Shortcut Dimension 2 Code" := FAJnlLine."Shortcut Dimension 2 Code";
            "Dimension Set ID" := FAJnlLine."Dimension Set ID";
          end;
        end;
        if FASetup."Automatic Insurance Posting" then
          InsuranceJnlPostLine.RunWithCheck(InsuranceJnlLine)
        else begin
          "Line No." := NextLineNo;
          if DeprBook."Use Default Dimension" then
            CreateDim(DATABASE::Insurance,"Insurance No.");
          INSERT(true);
        end;
      end;
    END;

    [External]
    PROCEDURE InitInsuranceJnlLine@12(VAR InsuranceJnlLine@1000 : Record "Insurance Journal Line");
    VAR
      InsuranceJnlLine2@1001 : Record "Insurance Journal Line";
    BEGIN
      with InsuranceJnlLine do begin
        FAGetJnl.InsuranceJnlName(DeprBook.Code,TemplateName,BatchName);
        "Journal Template Name" := TemplateName;
        "Journal Batch Name" := BatchName;
        LOCKTABLE;
        FAGetJnl.SetInsuranceJnlRange(InsuranceJnlLine2,TemplateName,BatchName);
        NextLineNo := InsuranceJnlLine2."Line No." + 10000;
        "Posting No. Series" := FAJnlSetup.GetInsuranceNoSeries(InsuranceJnlLine);
      end;
    END;

    LOCAL PROCEDURE CreateLine@10(GenJnlPosting@1000 : Boolean;VAR GenJnlLine@1001 : Record "Gen. Journal Line";VAR FAJnlLine@1002 : Record "FA Journal Line");
    BEGIN
      if GenJnlPosting then
        with GenJnlLine do begin
          DuplicateInGenJnl := true;
          TemplateName := "Journal Template Name";
          BatchName := "Journal Batch Name";
          FAGetJnl.JnlName(
            DeprBook.Code,false,"FA Posting Type" - 1,
            DuplicateInGenJnl,TemplateName,BatchName);
        end;
      if not GenJnlPosting then
        with FAJnlLine do begin
          FA.GET("FA No.");
          DuplicateInGenJnl := false;
          TemplateName := "Journal Template Name";
          BatchName := "Journal Batch Name";
          FAGetJnl.JnlName(
            DeprBook.Code,FA."Budgeted Asset","FA Posting Type",
            DuplicateInGenJnl,TemplateName,BatchName);
        end;
      InsertLine(GenJnlPosting,DuplicateInGenJnl,GenJnlLine,FAJnlLine);
    END;

    LOCAL PROCEDURE MakeGenJnlLine@1(VAR GenJnlLine@1000 : Record "Gen. Journal Line";VAR FAJnlLine@1001 : Record "FA Journal Line");
    BEGIN
      with GenJnlLine do begin
        "Account Type" := "Account Type"::"Fixed Asset";
        "Account No." := FAJnlLine."FA No.";
        "Depreciation Book Code" := FAJnlLine."Depreciation Book Code";
        "FA Posting Type" := FAJnlLine."FA Posting Type" + 1;
        "FA Posting Date" := FAJnlLine."FA Posting Date";
        "Posting Date" := FAJnlLine."Posting Date";
        if "Posting Date" = "FA Posting Date" then
          "FA Posting Date" := 0D;
        "Document Type" := FAJnlLine."Document Type";
        "Document Date" := FAJnlLine."Document Date";
        "Document No." := FAJnlLine."Document No.";
        "External Document No." := FAJnlLine."External Document No.";
        Description := FAJnlLine.Description;
        VALIDATE(Amount,FAJnlLine.Amount);
        "Salvage Value" := FAJnlLine."Salvage Value";
        Quantity := FAJnlLine.Quantity;
        VALIDATE(Correction,FAJnlLine.Correction);
        "No. of Depreciation Days" := FAJnlLine."No. of Depreciation Days";
        "Depr. until FA Posting Date" := FAJnlLine."Depr. until FA Posting Date";
        "Depr. Acquisition Cost" := FAJnlLine."Depr. Acquisition Cost";
        "Posting Group" := FAJnlLine."FA Posting Group";
        "Maintenance Code" := FAJnlLine."Maintenance Code";
        "Shortcut Dimension 1 Code" := FAJnlLine."Shortcut Dimension 1 Code";
        "Shortcut Dimension 2 Code" := FAJnlLine."Shortcut Dimension 2 Code";
        "Dimension Set ID" := FAJnlLine."Dimension Set ID";
        "Budgeted FA No." := FAJnlLine."Budgeted FA No.";
        "FA Reclassification Entry" := FAJnlLine."FA Reclassification Entry";
        "Index Entry" := FAJnlLine."Index Entry"
      end;
    END;

    LOCAL PROCEDURE MakeFAJnlLine@2(VAR FAJnlLine@1000 : Record "FA Journal Line";VAR GenJnlLine@1001 : Record "Gen. Journal Line");
    BEGIN
      with FAJnlLine do begin
        "Depreciation Book Code" := GenJnlLine."Depreciation Book Code";
        "FA Posting Type" := GenJnlLine."FA Posting Type" - 1;
        "FA No." := GenJnlLine."Account No.";
        "FA Posting Date" := GenJnlLine."FA Posting Date";
        "Posting Date" := GenJnlLine."Posting Date";
        if "Posting Date" = "FA Posting Date" then
          "Posting Date" := 0D;
        "Document Type" := GenJnlLine."Document Type";
        "Document Date" := GenJnlLine."Document Date";
        "Document No." := GenJnlLine."Document No.";
        "External Document No." := GenJnlLine."External Document No.";
        Description := GenJnlLine.Description;
        VALIDATE(Amount,FAAmount);
        "Salvage Value" := GenJnlLine."Salvage Value";
        Quantity := GenJnlLine.Quantity;
        VALIDATE(Correction,GenJnlLine.Correction);
        "No. of Depreciation Days" := GenJnlLine."No. of Depreciation Days";
        "Depr. until FA Posting Date" := GenJnlLine."Depr. until FA Posting Date";
        "Depr. Acquisition Cost" := GenJnlLine."Depr. Acquisition Cost";
        "FA Posting Group" := GenJnlLine."Posting Group";
        "Maintenance Code" := GenJnlLine."Maintenance Code";
        "Shortcut Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
        "Shortcut Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";
        "Dimension Set ID" := GenJnlLine."Dimension Set ID";
        "Budgeted FA No." := GenJnlLine."Budgeted FA No.";
        "FA Reclassification Entry" := GenJnlLine."FA Reclassification Entry";
        "Index Entry" := GenJnlLine."Index Entry"
      end;
    END;

    LOCAL PROCEDURE AdjustGenJnlLine@7(VAR GenJnlLine@1000 : Record "Gen. Journal Line");
    VAR
      GenJnlLine2@1001 : Record "Gen. Journal Line";
    BEGIN
      GenJnlLine2 := GenJnlLine;
      with GenJnlLine do begin
        INIT;
        "Account Type" := "Account Type"::"Fixed Asset";
        "Depreciation Book Code" := GenJnlLine2."Depreciation Book Code";
        "FA Posting Type" := GenJnlLine2."FA Posting Type";
        "Account No." := GenJnlLine2."Account No.";
        "FA Posting Date" := GenJnlLine2."FA Posting Date";
        "Posting Date" := GenJnlLine2."Posting Date";
        if "Posting Date" = "FA Posting Date" then
          "FA Posting Date" := 0D;
        "Document Type" := GenJnlLine2."Document Type";
        "Document Date" := GenJnlLine2."Document Date";
        "Document No." := GenJnlLine2."Document No.";
        "External Document No." := GenJnlLine2."External Document No.";
        Description := GenJnlLine2.Description;
        VALIDATE(Amount,FAAmount);
        "Salvage Value" := GenJnlLine2."Salvage Value";
        Quantity := GenJnlLine2.Quantity;
        VALIDATE(Correction,GenJnlLine2.Correction);
        "No. of Depreciation Days" := GenJnlLine2."No. of Depreciation Days";
        "Depr. until FA Posting Date" := GenJnlLine2."Depr. until FA Posting Date";
        "Depr. Acquisition Cost" := GenJnlLine2."Depr. Acquisition Cost";
        "Posting Group" := GenJnlLine2."Posting Group";
        "Maintenance Code" := GenJnlLine2."Maintenance Code";
        "Shortcut Dimension 1 Code" := GenJnlLine2."Shortcut Dimension 1 Code";
        "Shortcut Dimension 2 Code" := GenJnlLine2."Shortcut Dimension 2 Code";
        "Dimension Set ID" := GenJnlLine2."Dimension Set ID";
        "Budgeted FA No." := GenJnlLine2."Budgeted FA No.";
        "FA Reclassification Entry" := GenJnlLine2."FA Reclassification Entry";
        "Index Entry" := GenJnlLine2."Index Entry"
      end;
    END;

    LOCAL PROCEDURE AdjustFAJnlLine@8(VAR FAJnlLine@1000 : Record "FA Journal Line");
    VAR
      FAJnlLine2@1001 : Record "FA Journal Line";
    BEGIN
      FAJnlLine2 := FAJnlLine;
      with FAJnlLine do begin
        INIT;
        "FA No." := FAJnlLine2."FA No.";
        "Depreciation Book Code" := FAJnlLine2."Depreciation Book Code";
        "FA Posting Type" := FAJnlLine2."FA Posting Type";
        "FA Posting Date" := FAJnlLine2."FA Posting Date";
        "Posting Date" := FAJnlLine2."Posting Date";
        if "Posting Date" = "FA Posting Date" then
          "Posting Date" := 0D;
        "Document Type" := FAJnlLine2."Document Type";
        "Document Date" := FAJnlLine2."Document Date";
        "Document No." := FAJnlLine2."Document No.";
        "External Document No." := FAJnlLine2."External Document No.";
        Description := FAJnlLine2.Description;
        VALIDATE(Amount,FAJnlLine2.Amount);
        "Salvage Value" := FAJnlLine2."Salvage Value";
        Quantity := FAJnlLine2.Quantity;
        VALIDATE(Correction,FAJnlLine2.Correction);
        "No. of Depreciation Days" := FAJnlLine2."No. of Depreciation Days";
        "Depr. until FA Posting Date" := FAJnlLine2."Depr. until FA Posting Date";
        "Depr. Acquisition Cost" := FAJnlLine2."Depr. Acquisition Cost";
        "FA Posting Group" := FAJnlLine2."FA Posting Group";
        "Maintenance Code" := FAJnlLine2."Maintenance Code";
        "Shortcut Dimension 1 Code" := FAJnlLine2."Shortcut Dimension 1 Code";
        "Shortcut Dimension 2 Code" := FAJnlLine2."Shortcut Dimension 2 Code";
        "Dimension Set ID" := FAJnlLine2."Dimension Set ID";
        "Budgeted FA No." := FAJnlLine2."Budgeted FA No.";
        "FA Reclassification Entry" := FAJnlLine2."FA Reclassification Entry";
        "Index Entry" := FAJnlLine2."Index Entry"
      end;
    END;

    LOCAL PROCEDURE CalcExchangeRateAmount@6(DuplicateInGenJnl@1000 : Boolean;FANo@1001 : Code[20];VAR GenJnlLine@1002 : Record "Gen. Journal Line";VAR FAJnlLine@1003 : Record "FA Journal Line");
    VAR
      ExchangeRate2@1004 : Decimal;
    BEGIN
      if not DeprBook."Use FA Exch. Rate in Duplic." then
        exit;
      ExchangeRate2 := ExchangeRate / GetExchangeRate(FANo,DeprBook);
      if DuplicateInGenJnl then
        with GenJnlLine do begin
          VALIDATE(Amount,ROUND(Amount * ExchangeRate2));
          VALIDATE("Salvage Value",ROUND("Salvage Value" * ExchangeRate2));
        end;
      if not DuplicateInGenJnl then
        with FAJnlLine do begin
          VALIDATE(Amount,ROUND(Amount * ExchangeRate2));
          VALIDATE("Salvage Value",ROUND("Salvage Value" * ExchangeRate2));
        end;
    END;

    LOCAL PROCEDURE GetExchangeRate@9(FANo@1000 : Code[20];VAR DeprBook@1001 : Record "Depreciation Book") : Decimal;
    VAR
      FADeprBook@1002 : Record "FA Depreciation Book";
    BEGIN
      if not DeprBook."Use FA Exch. Rate in Duplic." then
        exit(100);
      FADeprBook.GET(FANo,DeprBook.Code);
      if FADeprBook."FA Exchange Rate" > 0 then
        exit(FADeprBook."FA Exchange Rate");
      if DeprBook."Default Exchange Rate" > 0 then
        exit(DeprBook."Default Exchange Rate");
      exit(100);
    END;

    LOCAL PROCEDURE InsertLine@5(GenJnlPosting@1000 : Boolean;DuplicateInGenJnl@1001 : Boolean;GenJnlLine@1002 : Record "Gen. Journal Line";FAJnlLine@1003 : Record "FA Journal Line");
    BEGIN
      if GenJnlPosting and DuplicateInGenJnl then
        with GenJnlLine do begin
          AdjustGenJnlLine(GenJnlLine);
          "Journal Template Name" := TemplateName;
          "Journal Batch Name" := BatchName;
          LOCKTABLE;
          FAGetJnl.SetGenJnlRange(GenJnlLine2,TemplateName,BatchName);
          VALIDATE("Depreciation Book Code",DeprBook.Code);
          CalcExchangeRateAmount(DuplicateInGenJnl,"Account No.",GenJnlLine,FAJnlLine);
          "Posting No. Series" := FAJnlSetup.GetGenNoSeries(GenJnlLine);
          FAJnlSetup.SetGenJnlTrailCodes(GenJnlLine);
          if DeprBook."Use Default Dimension" then
            CreateDim(
              DimMgt.TypeToTableID1("Account Type"),"Account No.",
              DimMgt.TypeToTableID1("Bal. Account Type"),"Bal. Account No.",
              DATABASE::Job,"Job No.",
              DATABASE::"Salesperson/Purchaser","Salespers./Purch. Code",
              DATABASE::Campaign,"Campaign No.");
          "Line No." := GenJnlLine2."Line No." + 10000;
          INSERT(true);
        end;

      if GenJnlPosting and not DuplicateInGenJnl then
        with FAJnlLine do begin
          MakeFAJnlLine(FAJnlLine,GenJnlLine);
          "Journal Template Name" := TemplateName;
          "Journal Batch Name" := BatchName;
          LOCKTABLE;
          FAGetJnl.SetFAJnlRange(FAJnlLine2,TemplateName,BatchName);
          VALIDATE("Depreciation Book Code",DeprBook.Code);
          CalcExchangeRateAmount(DuplicateInGenJnl,"FA No.",GenJnlLine,FAJnlLine);
          "Posting No. Series" := FAJnlSetup.GetFANoSeries(FAJnlLine);
          FAJnlSetup.SetFAJnlTrailCodes(FAJnlLine);
          if DeprBook."Use Default Dimension" then
            CreateDim(DATABASE::"Fixed Asset","FA No.");
          "Line No." := FAJnlLine2."Line No." + 10000;
          INSERT(true);
        end;

      if not GenJnlPosting and DuplicateInGenJnl then
        with GenJnlLine do begin
          MakeGenJnlLine(GenJnlLine,FAJnlLine);
          "Journal Template Name" := TemplateName;
          "Journal Batch Name" := BatchName;
          LOCKTABLE;
          FAGetJnl.SetGenJnlRange(GenJnlLine2,TemplateName,BatchName);
          VALIDATE("Depreciation Book Code",DeprBook.Code);
          CalcExchangeRateAmount(DuplicateInGenJnl,"Account No.",GenJnlLine,FAJnlLine);
          "Posting No. Series" := FAJnlSetup.GetGenNoSeries(GenJnlLine);
          FAJnlSetup.SetGenJnlTrailCodes(GenJnlLine);
          if DeprBook."Use Default Dimension" then
            CreateDim(
              DimMgt.TypeToTableID1("Account Type"),"Account No.",
              DimMgt.TypeToTableID1("Bal. Account Type"),"Bal. Account No.",
              DATABASE::Job,"Job No.",
              DATABASE::"Salesperson/Purchaser","Salespers./Purch. Code",
              DATABASE::Campaign,"Campaign No.");

          "Line No." := GenJnlLine2."Line No." + 10000;
          INSERT(true);
        end;

      if not GenJnlPosting and not DuplicateInGenJnl then
        with FAJnlLine do begin
          AdjustFAJnlLine(FAJnlLine);
          "Journal Template Name" := TemplateName;
          "Journal Batch Name" := BatchName;
          LOCKTABLE;
          FAGetJnl.SetFAJnlRange(FAJnlLine2,TemplateName,BatchName);
          VALIDATE("Depreciation Book Code",DeprBook.Code);
          CalcExchangeRateAmount(DuplicateInGenJnl,"FA No.",GenJnlLine,FAJnlLine);
          "Posting No. Series" := FAJnlSetup.GetFANoSeries(FAJnlLine);
          FAJnlSetup.SetFAJnlTrailCodes(FAJnlLine);
          if DeprBook."Use Default Dimension" then
            CreateDim(DATABASE::"Fixed Asset","FA No.");
          "Line No." := FAJnlLine2."Line No." + 10000;
          INSERT(true);
        end;
    END;

    BEGIN
    END.
  }
}

