OBJECT Table 1107 Cost Allocation Target
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               // Default value according to previous line
               "Allocation Target Type" := xRec."Allocation Target Type";
               if xRec."Target Cost Type" <> '' then
                 "Target Cost Type" := xRec."Target Cost Type";

               Base := xRec.Base;
               "Last Date Modified" := TODAY;
               "User ID" := USERID;
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
               "User ID" := USERID;
             END;

    CaptionML=ENU=Cost Allocation Target;
    LookupPageID="Cost Allocation Target List";
    DrillDownPageID="Cost Allocation Target List";
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Code10        ;TableRelation="Cost Allocation Source";
                                                   CaptionML=ENU=ID;
                                                   Editable=false }
    { 2   ;   ;Line No.            ;Integer       ;InitValue=0;
                                                   CaptionML=ENU=Line No.;
                                                   NotBlank=true;
                                                   Editable=false }
    { 5   ;   ;Target Cost Type    ;Code20        ;TableRelation="Cost Type";
                                                   CaptionML=ENU=Target Cost Type }
    { 6   ;   ;Target Cost Center  ;Code20        ;TableRelation="Cost Center";
                                                   OnValidate=BEGIN
                                                                if ("Target Cost Center" <> '') and ("Target Cost Object" <> '') then
                                                                  ERROR(Text000);
                                                              END;

                                                   CaptionML=ENU=Target Cost Center }
    { 7   ;   ;Target Cost Object  ;Code20        ;TableRelation="Cost Object";
                                                   OnValidate=BEGIN
                                                                VALIDATE("Target Cost Center")
                                                              END;

                                                   CaptionML=ENU=Target Cost Object }
    { 8   ;   ;Static Base         ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("Static Weighting");
                                                              END;

                                                   CaptionML=ENU=Static Base;
                                                   DecimalPlaces=0:2;
                                                   MinValue=0;
                                                   BlankZero=true }
    { 9   ;   ;Static Weighting    ;Decimal       ;OnValidate=BEGIN
                                                                if Base = Base::Static then begin
                                                                  Share := "Static Base" * "Static Weighting";
                                                                  VALIDATE(Share);
                                                                end else begin
                                                                  if "Static Base" > 0 then
                                                                    ERROR(Text001,"Static Base");
                                                                  if "Static Weighting" > 0 then
                                                                    ERROR(Text001,"Static Weighting");
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Static Weighting;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   BlankZero=true }
    { 10  ;   ;Share               ;Decimal       ;OnValidate=BEGIN
                                                                CalcPercent;
                                                              END;

                                                   CaptionML=ENU=Share;
                                                   DecimalPlaces=2:5;
                                                   MinValue=0 }
    { 11  ;   ;Percent             ;Decimal       ;CaptionML=ENU=Percent;
                                                   DecimalPlaces=2:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=false }
    { 20  ;   ;Comment             ;Text50        ;CaptionML=ENU=Comment }
    { 30  ;   ;Base                ;Option        ;OnValidate=BEGIN
                                                                if Base <> xRec.Base then begin
                                                                  Share := 0;
                                                                  Percent := 0;
                                                                  "No. Filter" := '';
                                                                  "Group Filter" := '';
                                                                end;

                                                                if Base = Base::Static then begin
                                                                  "No. Filter" := '';
                                                                  "Cost Center Filter" := '';
                                                                  "Cost Object Filter" := '';
                                                                  "Date Filter Code" := 0;
                                                                  "Group Filter" := '';
                                                                end else begin
                                                                  "Static Base" := 0;
                                                                  "Static Weighting" := 0;
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Base;
                                                   OptionCaptionML=ENU=Static,G/L Entries,G/L Budget Entries,Cost Type Entries,Cost Budget Entries,,,,,No of Employees,,Items Sold (Qty.),Items Purchased (Qty.),Items Sold (Amount),Items Purchased (Amount);
                                                   OptionString=Static,"G/L Entries","G/L Budget Entries","Cost Type Entries","Cost Budget Entries",,,,,"No of Employees",,"Items Sold (Qty.)","Items Purchased (Qty.)","Items Sold (Amount)","Items Purchased (Amount)" }
    { 31  ;   ;No. Filter          ;Text250       ;OnLookup=VAR
                                                              SelectionFilter@1000 : Text[1024];
                                                            BEGIN
                                                              if LookupNoFilter(SelectionFilter) then
                                                                VALIDATE("No. Filter",COPYSTR(SelectionFilter,1,MAXSTRLEN("No. Filter")));
                                                            END;

                                                   CaptionML=ENU=No. Filter }
    { 32  ;   ;Cost Center Filter  ;Text250       ;TableRelation="Cost Center";
                                                   OnLookup=VAR
                                                              CostCenter@1000 : Record "Cost Center";
                                                              SelectionFilter@1001 : Text[1024];
                                                            BEGIN
                                                              if CostCenter.LookupCostCenterFilter(SelectionFilter) then
                                                                VALIDATE("Cost Center Filter",COPYSTR(SelectionFilter,1,MAXSTRLEN("Cost Center Filter")));
                                                            END;

                                                   ValidateTableRelation=false;
                                                   CaptionML=ENU=Cost Center Filter }
    { 33  ;   ;Cost Object Filter  ;Text250       ;TableRelation="Cost Object";
                                                   OnLookup=VAR
                                                              CostObject@1001 : Record "Cost Object";
                                                              SelectionFilter@1000 : Text[1024];
                                                            BEGIN
                                                              if CostObject.LookupCostObjectFilter(SelectionFilter) then
                                                                VALIDATE("Cost Object Filter",COPYSTR(SelectionFilter,1,MAXSTRLEN("Cost Object Filter")));
                                                            END;

                                                   ValidateTableRelation=false;
                                                   CaptionML=ENU=Cost Object Filter }
    { 34  ;   ;Date Filter Code    ;Option        ;CaptionML=ENU=Date Filter Code;
                                                   OptionCaptionML=ENU=" ,Week,Last Week,Month,Last Month,Month of Last Year,Year,Last Year,Period,Last Period,Period of Last Year,Fiscal Year,Last Fiscal Year";
                                                   OptionString=" ",Week,"Last Week",Month,"Last Month","Month of Last Year",Year,"Last Year",Period,"Last Period","Period of Last Year","Fiscal Year","Last Fiscal Year" }
    { 35  ;   ;Group Filter        ;Text250       ;OnLookup=VAR
                                                              SelectionFilter@1000 : Text[1024];
                                                            BEGIN
                                                              if LookupGroupFilter(SelectionFilter) then
                                                                VALIDATE("Group Filter",COPYSTR(SelectionFilter,1,MAXSTRLEN("Group Filter")));
                                                            END;

                                                   CaptionML=ENU=Group Filter }
    { 38  ;   ;Allocation Target Type;Option      ;OnValidate=BEGIN
                                                                if "Allocation Target Type" <> xRec."Allocation Target Type" then begin
                                                                  "Percent per Share" := 0;
                                                                  "Amount per Share" := 0;
                                                                end;
                                                              END;

                                                   CaptionML=ENU=Allocation Target Type;
                                                   OptionCaptionML=ENU=All Costs,Percent per Share,Amount per Share;
                                                   OptionString="All Costs","Percent per Share","Amount per Share" }
    { 40  ;   ;Percent per Share   ;Decimal       ;OnValidate=BEGIN
                                                                if "Percent per Share" <> 0 then begin
                                                                  "Allocation Target Type" := "Allocation Target Type"::"Percent per Share";
                                                                  "Amount per Share" := 0;
                                                                end else
                                                                  "Allocation Target Type" := "Allocation Target Type"::"All Costs";
                                                              END;

                                                   CaptionML=ENU=Percent per Share;
                                                   MinValue=0;
                                                   BlankZero=true }
    { 41  ;   ;Amount per Share    ;Decimal       ;OnValidate=BEGIN
                                                                if "Amount per Share" <> 0 then begin
                                                                  "Allocation Target Type" := "Allocation Target Type"::"Amount per Share";
                                                                  "Percent per Share" := 0;
                                                                end else
                                                                  "Allocation Target Type" := "Allocation Target Type"::"All Costs";
                                                              END;

                                                   CaptionML=ENU=Amount per Share;
                                                   MinValue=0;
                                                   BlankZero=true }
    { 50  ;   ;Share Updated on    ;Date          ;CaptionML=ENU=Share Updated on;
                                                   Editable=false }
    { 60  ;   ;Last Date Modified  ;Date          ;CaptionML=ENU=Last Date Modified;
                                                   Editable=false }
    { 61  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit "User Management";
                                                              TempUserID@1001 : Code[50];
                                                            BEGIN
                                                              TempUserID := "User ID";
                                                              UserMgt.LookupUserID(TempUserID);
                                                            END;

                                                   TestTableRelation=false;
                                                   CaptionML=ENU=User ID;
                                                   Editable=false }
  }
  KEYS
  {
    {    ;ID,"Line No."                           ;SumIndexFields=Share,Percent;
                                                   Clustered=true }
    {    ;"Target Cost Type"                       }
    {    ;"Target Cost Center"                     }
    {    ;"Target Cost Object"                     }
    {    ;ID,"Allocation Target Type"              }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot define both cost center and cost object.';
      Text001@1001 : TextConst 'ENU=%1 can only be used with static allocations.';

    LOCAL PROCEDURE CalcPercent@1();
    VAR
      CostAllocationTarget@1002 : Record "Cost Allocation Target";
      PctTotal@1000 : Decimal;
      TotalShare@1001 : Decimal;
    BEGIN
      with CostAllocationTarget do begin
        SETRANGE(ID,Rec.ID);
        SETFILTER("Line No.",'<>%1',Rec."Line No.");
        CALCSUMS(Share);
        TotalShare := Share + Rec.Share;

        if TotalShare = 0 then begin
          MODIFYALL(Percent,0);
          MODIFYALL("Share Updated on",TODAY);
          Rec.Percent := 0;
          Rec."Share Updated on" := TODAY;
          exit;
        end;

        if FINDSET then
          repeat
            Percent := ROUND(100 * Share / TotalShare,0.00001);
            "Share Updated on" := TODAY;
            MODIFY;
          until NEXT = 0;
        Rec.Percent := ROUND(100 * Rec.Share / TotalShare,0.00001);
        Rec."Share Updated on" := TODAY;
        Rec.MODIFY;
        // distribute rounding error:
        CALCSUMS(Percent);
        PctTotal := Percent + Rec.Percent;
        if PctTotal <> 100 then begin
          if (Rec."Line No." <> 0) and FINDLAST and ("Line No." > Rec."Line No.") then begin
            Percent := Percent + (100 - PctTotal);
            MODIFY;
          end else
            Rec.Percent := Rec.Percent + (100 - PctTotal);
        end;
      end;
    END;

    LOCAL PROCEDURE LookupNoFilter@2(VAR SelectionFilter@1000 : Text) : Boolean;
    VAR
      CostType@1001 : Record "Cost Type";
    BEGIN
      case Base of
        Base::"G/L Entries",
        Base::"G/L Budget Entries":
          exit(CostType.LookupGLAccFilter(SelectionFilter));
        Base::"Cost Type Entries",
        Base::"Cost Budget Entries":
          exit(CostType.LookupCostTypeFilter(SelectionFilter));
        Base::"Items Sold (Qty.)",
        Base::"Items Purchased (Qty.)",
        Base::"Items Sold (Amount)",
        Base::"Items Purchased (Amount)":
          exit(LookupItemFilter(SelectionFilter));
      end;
    END;

    LOCAL PROCEDURE LookupItemFilter@14(VAR SelectionFilter@1000 : Text) : Boolean;
    VAR
      ItemList@1001 : Page "Item List";
    BEGIN
      ItemList.LOOKUPMODE(true);
      if ItemList.RUNMODAL = ACTION::LookupOK then begin
        SelectionFilter := ItemList.GetSelectionFilter;
        exit(true);
      end;
      exit(false)
    END;

    LOCAL PROCEDURE LookupGroupFilter@4(VAR SelectionFilter@1000 : Text) : Boolean;
    BEGIN
      case Base of
        Base::"G/L Budget Entries":
          exit(LookupGLBudgetFilter(SelectionFilter));
        Base::"Cost Budget Entries":
          exit(LookupCostBudgetFilter(SelectionFilter));
        Base::"Items Sold (Qty.)",
        Base::"Items Purchased (Qty.)",
        Base::"Items Sold (Amount)",
        Base::"Items Purchased (Amount)":
          exit(LookupInvtPostingGrFilter(SelectionFilter));
      end;
    END;

    LOCAL PROCEDURE LookupGLBudgetFilter@6(VAR SelectionFilter@1000 : Text) : Boolean;
    VAR
      GLBudgetNames@1001 : Page "G/L Budget Names";
    BEGIN
      GLBudgetNames.LOOKUPMODE(true);
      if GLBudgetNames.RUNMODAL = ACTION::LookupOK then begin
        SelectionFilter := GLBudgetNames.GetSelectionFilter;
        exit(true);
      end;
      exit(false)
    END;

    LOCAL PROCEDURE LookupCostBudgetFilter@7(VAR SelectionFilter@1000 : Text) : Boolean;
    VAR
      CostBudgetNames@1001 : Page "Cost Budget Names";
    BEGIN
      CostBudgetNames.LOOKUPMODE(true);
      if CostBudgetNames.RUNMODAL = ACTION::LookupOK then begin
        SelectionFilter := CostBudgetNames.GetSelectionFilter;
        exit(true);
      end;
      exit(false)
    END;

    LOCAL PROCEDURE LookupInvtPostingGrFilter@8(VAR SelectionFilter@1000 : Text) : Boolean;
    VAR
      InvtPostingGroups@1001 : Page "Inventory Posting Groups";
    BEGIN
      InvtPostingGroups.LOOKUPMODE(true);
      if InvtPostingGroups.RUNMODAL = ACTION::LookupOK then begin
        SelectionFilter := InvtPostingGroups.GetSelectionFilter;
        exit(true);
      end;
      exit(false)
    END;

    BEGIN
    END.
  }
}

