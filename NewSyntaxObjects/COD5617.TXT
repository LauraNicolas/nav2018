OBJECT Codeunit 5617 FA Date Calculation
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=is later than %1';
      Text001@1001 : TextConst 'ENU=It was not possible to find a %1 in %2.';
      DeprBook@1002 : Record "Depreciation Book";

    [External]
    PROCEDURE GetFiscalYear@1(DeprBookCode@1000 : Code[10];EndingDate@1001 : Date) : Date;
    VAR
      AccountingPeriod@1002 : Record "Accounting Period";
      FAJnlLine@1003 : Record "FA Journal Line";
    BEGIN
      with DeprBook do begin
        GET(DeprBookCode);
        if "New Fiscal Year Starting Date" > 0D then begin
          if "New Fiscal Year Starting Date" > EndingDate then
            FIELDERROR(
              "New Fiscal Year Starting Date",
              STRSUBSTNO(Text000,FAJnlLine.FIELDCAPTION("FA Posting Date")));
          exit("New Fiscal Year Starting Date");
        end;
      end;
      with AccountingPeriod do begin
        SETRANGE("New Fiscal Year",true);
        SETRANGE("Starting Date",0D,EndingDate);
        if FINDLAST then
          exit("Starting Date");

        ERROR(Text001,FIELDCAPTION("Starting Date"),TABLECAPTION);
      end;
    END;

    [External]
    PROCEDURE CalculateDate@2(StartingDate@1000 : Date;NumberOfDays@1001 : Integer;Year365Days@1006 : Boolean) : Date;
    VAR
      Years@1002 : Integer;
      Days@1003 : Integer;
      Months@1004 : Integer;
      LocalDate@1005 : Date;
    BEGIN
      if NumberOfDays <= 0 then
        exit(StartingDate);
      if Year365Days then
        exit(CalculateDate365(StartingDate,NumberOfDays));
      Years := DATE2DMY(StartingDate,3);
      Months := DATE2DMY(StartingDate,2);
      Days := DATE2DMY(StartingDate,1);
      if DATE2DMY(StartingDate + 1,1) = 1 then
        Days := 30;
      Days := Days + NumberOfDays;
      Months := Months + (Days div 30);
      Days := Days mod 30;
      if Days = 0 then begin
        Days := 30;
        Months := Months - 1;
      end;
      Years := Years + (Months div 12);
      Months := Months mod 12;
      if Months = 0 then begin
        Months := 12;
        Years := Years - 1;
      end;
      if (Months = 2) and (Days > 28) then begin
        Days := 28;
        LocalDate := DMY2DATE(28,2,Years) + 1;
        if DATE2DMY(LocalDate,1) = 29 then
          Days := 29;
      end;
      case Months of
        1,3,5,7,8,10,12:
          if Days = 30 then
            Days := 31;
      end;
      exit(DMY2DATE(Days,Months,Years));
    END;

    LOCAL PROCEDURE CalculateDate365@3(StartingDate@1000 : Date;NumberOfDays@1001 : Integer) : Date;
    VAR
      Calendar@1002 : Record Date;
      NoOfDays@1003 : Integer;
      EndingDate@1005 : Date;
      FirstDate@1004 : Boolean;
    BEGIN
      with Calendar do begin
        SETRANGE("Period Type","Period Type"::Date);
        SETRANGE("Period Start",StartingDate,DMY2DATE(31,12,9999));
        NoOfDays := 1;
        FirstDate := true;
        if FIND('-') then
          repeat
            if (not ((DATE2DMY("Period Start",1) = 29) and (DATE2DMY("Period Start",2) = 2))) or
               FirstDate
            then
              NoOfDays := NoOfDays + 1;
            FirstDate := false;
          until (NEXT = 0) or (NumberOfDays < NoOfDays);
        EndingDate := "Period Start";
        if (DATE2DMY(EndingDate,1) = 29) and (DATE2DMY(EndingDate,2) = 2) then
          EndingDate := EndingDate + 1;
        exit(EndingDate);
      end;
    END;

    BEGIN
    END.
  }
}

