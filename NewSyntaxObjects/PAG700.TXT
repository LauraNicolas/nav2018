OBJECT Page 700 Error Messages
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Editable=false;
    CaptionML=ENU=Error Messages;
    InsertAllowed=false;
    DeleteAllowed=false;
    ModifyAllowed=false;
    LinksAllowed=false;
    SourceTable="Error Message";
    SourceTableView=SORTING("Message Type",ID)
                    ORDER(Ascending);
    PageType=List;
    SourceTableTemporary=true;
    OnAfterGetRecord=BEGIN
                       SetStyle;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           EnableActions;
                         END;

    ActionList=ACTIONS
    {
      { 1004    ;    ;ActionContainer;
                      Name=ActionContainer1004;
                      ActionContainerType=ActionItems }
      { 1003    ;1   ;Action    ;
                      Name=OpenRelatedRecord;
                      CaptionML=ENU=Open Related Record;
                      ToolTipML=ENU=Open the record that is associated with this error message.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=true;
                      Enabled=EnableOpenRelatedEntity;
                      PromotedIsBig=true;
                      Image=View;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 PageManagement.PageRun("Record ID");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                Name=Container1;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=Message Type;
                ToolTipML=ENU=Specifies if the message is an error, a warning, or information.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Message Type";
                ImplicitType=Option }

    { 5   ;2   ;Field     ;
                Name=Description;
                DrillDown=true;
                ToolTipML=ENU=Specifies the message.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Enabled=EnableOpenRelatedEntity;
                StyleExpr=StyleText;
                OnDrillDown=BEGIN
                              PageManagement.PageRun("Record ID");
                            END;

                ImplicitType=Text250 }

    { 4   ;2   ;Field     ;
                Name=Table Name;
                ToolTipML=ENU=Specifies the table where the error occurred.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Table Name";
                ImplicitType=Text80 }

    { 8   ;2   ;Field     ;
                Name=Field Name;
                ToolTipML=ENU=Specifies the field where the error occurred.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Field Name";
                ImplicitType=Text80 }

    { 6   ;2   ;Field     ;
                Name=Additional Information;
                ToolTipML=ENU=Specifies more information than the information shown in the Description field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Additional Information";
                ImplicitType=Text250 }

    { 7   ;2   ;Field     ;
                Name=Support Url;
                ExtendedDatatype=URL;
                ToolTipML=ENU=Specifies the URL of an external web site that offers additional support.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Support Url";
                ImplicitType=Text250 }

  }
  CODE
  {
    VAR
      PageManagement@1001 : Codeunit "Page Management";
      StyleText@1000 : Text[20] INDATASET;
      EnableOpenRelatedEntity@1002 : Boolean;

    [External]
    PROCEDURE SetRecords@1(VAR TempErrorMessage@1000 : TEMPORARY Record "Error Message");
    BEGIN
      if TempErrorMessage.FINDFIRST then;
      if TempErrorMessage.ISTEMPORARY then
        COPY(TempErrorMessage,true)
      else
        TempErrorMessage.CopyToTemp(Rec);
    END;

    LOCAL PROCEDURE SetStyle@2();
    BEGIN
      case "Message Type" of
        "Message Type"::Error:
          StyleText := 'Attention';
        "Message Type"::Warning,
        "Message Type"::Information:
          StyleText := 'None';
      end;
    END;

    LOCAL PROCEDURE EnableActions@3();
    VAR
      RecID@1000 : RecordID;
    BEGIN
      RecID := "Record ID";
      EnableOpenRelatedEntity := RecID.TABLENO <> 0;
    END;

    BEGIN
    END.
  }
}

