OBJECT Page 99000852 Planning Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Planning Worksheet;
    SaveValues=true;
    MultipleNewLines=true;
    SourceTable="Requisition Line";
    DelayedInsert=true;
    DataCaptionFields="Journal Batch Name";
    PageType=Worksheet;
    AutoSplitKey=true;
    OnOpenPage=VAR
                 JnlSelected@1000 : Boolean;
               BEGIN
                 OpenedFromBatch := ("Journal Batch Name" <> '') and ("Worksheet Template Name" = '');
                 if OpenedFromBatch then begin
                   CurrentWkshBatchName := "Journal Batch Name";
                   ReqJnlManagement.OpenJnl(CurrentWkshBatchName,Rec);
                   exit;
                 end;
                 ReqJnlManagement.TemplateSelection(PAGE::"Planning Worksheet",false,2,Rec,JnlSelected);
                 if not JnlSelected then
                   ERROR('');
                 ReqJnlManagement.OpenJnl(CurrentWkshBatchName,Rec);
               END;

    OnAfterGetRecord=BEGIN
                       DescriptionIndent := 0;
                       ShowShortcutDimCode(ShortcutDimCode);
                       StartingDateTimeOnFormat;
                       StartingDateOnFormat;
                       DescriptionOnFormat;
                       RefOrderNoOnFormat;
                       PlanningWarningLevel1OnFormat;
                     END;

    OnNewRecord=BEGIN
                  SetUpNewLine(Rec);
                  Type := Type::Item;
                  CLEAR(ShortcutDimCode);
                END;

    OnDeleteRecord=BEGIN
                     "Accept Action Message" := false;
                     DeleteMultiLevel;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           PlanningWkshManagement.GetDescriptionAndRcptName(Rec,ItemDescription,RoutingDescription);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      Name=ActionContainer1900000003;
                      ActionContainerType=RelatedInformation }
      { 39      ;1   ;ActionGroup;
                      Name=&Line;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 110     ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData Dimension=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Promoted=true;
                      Image=Dimensions;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowDimensions;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 6500    ;2   ;Action    ;
                      Name=Item &Tracking Lines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      ToolTipML=ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 48      ;1   ;ActionGroup;
                      Name=&Item;
                      CaptionML=ENU=&Item;
                      Image=Item }
      { 53      ;2   ;Action    ;
                      Name=Components;
                      CaptionML=ENU=Components;
                      ToolTipML=ENU=View or edit the production order components of the parent item on the line.;
                      ApplicationArea=#Planning;
                      RunObject=Page "Planning Components";
                      RunPageLink="Worksheet Template Name"=FIELD("Worksheet Template Name"),
                                  "Worksheet Batch Name"=FIELD("Journal Batch Name"),
                                  "Worksheet Line No."=FIELD("Line No.");
                      Image=Components }
      { 54      ;2   ;Action    ;
                      Name=Ro&uting;
                      CaptionML=ENU=Ro&uting;
                      ToolTipML=ENU=View or edit the operations list of the parent item on the line.;
                      ApplicationArea=#Planning;
                      RunObject=Page "Planning Routing";
                      RunPageLink="Worksheet Template Name"=FIELD("Worksheet Template Name"),
                                  "Worksheet Batch Name"=FIELD("Journal Batch Name"),
                                  "Worksheet Line No."=FIELD("Line No.");
                      Image=Route }
      { 49      ;2   ;ActionGroup;
                      Name=&Item Availability by;
                      CaptionML=ENU=&Item Availability by;
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      Name=Event;
                      CaptionML=ENU=Event;
                      ToolTipML=ENU=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.;
                      ApplicationArea=#Planning;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromReqLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 65      ;3   ;Action    ;
                      Name=Period;
                      CaptionML=ENU=Period;
                      ToolTipML=ENU=View the projected quantity of the item over time according to time periods, such as day, week, or month.;
                      ApplicationArea=#Planning;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromReqLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 66      ;3   ;Action    ;
                      Name=Variant;
                      CaptionML=ENU=Variant;
                      ToolTipML=ENU=View or edit the item's variants. Instead of setting up each color of an item as a separate item, you can set up the various colors as variants of the item.;
                      ApplicationArea=#Advanced;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromReqLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 67      ;3   ;Action    ;
                      Name=Location;
                      AccessByPermission=TableData Location=R;
                      CaptionML=ENU=Location;
                      ToolTipML=ENU=View the actual and projected quantity of the item per location.;
                      ApplicationArea=#Location;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromReqLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 3       ;3   ;Action    ;
                      Name=BOM Level;
                      CaptionML=ENU=BOM Level;
                      ToolTipML=ENU=View availability figures for items on bills of materials that show how many units of a parent item you can make based on the availability of child items.;
                      ApplicationArea=#Assembly;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromReqLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 7       ;3   ;Action    ;
                      Name=Timeline;
                      CaptionML=ENU=Timeline;
                      ToolTipML=ENU=Get a graphical view of an item's projected inventory based on future supply and demand events, with or without planning suggestions. The result is a graphical representation of the inventory profile.;
                      ApplicationArea=#Planning;
                      Image=Timeline;
                      OnAction=BEGIN
                                 ShowTimeline(Rec);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      Name=ActionContainer1900000004;
                      ActionContainerType=ActionItems }
      { 20      ;1   ;ActionGroup;
                      Name=F&unctions;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 106     ;2   ;Action    ;
                      Name=Get &Action Messages;
                      Ellipsis=true;
                      CaptionML=ENU=Get &Action Messages;
                      ApplicationArea=#Planning;
                      Promoted=true;
                      Image=GetActionMessages;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 GetActionMessages;

                                 if not FIND('-') then
                                   SetUpNewLine(Rec);
                               END;
                                }
      { 109     ;2   ;Separator ;
                      Name=Separator109;
                      CaptionML=ENU="" }
      { 101     ;2   ;Action    ;
                      Name=Calculate &Net Change Plan;
                      Ellipsis=true;
                      CaptionML=ENU=Calculate &Net Change Plan;
                      ApplicationArea=#Planning;
                      Image=CalculatePlanChange;
                      OnAction=VAR
                                 CalcPlan@1001 : Report "Calculate Plan - Plan. Wksh.";
                               BEGIN
                                 CalcPlan.SetTemplAndWorksheet("Worksheet Template Name","Journal Batch Name",false);
                                 CalcPlan.RUNMODAL;

                                 if not FIND('-') then
                                   SetUpNewLine(Rec);

                                 CLEAR(CalcPlan);
                               END;
                                }
      { 102     ;2   ;Action    ;
                      Name=CalculateRegenerativePlan;
                      Ellipsis=true;
                      CaptionML=ENU=Calculate Regenerative Plan;
                      ApplicationArea=#Planning;
                      Promoted=true;
                      Image=CalculateRegenerativePlan;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CalcPlan@1001 : Report "Calculate Plan - Plan. Wksh.";
                               BEGIN
                                 CalcPlan.SetTemplAndWorksheet("Worksheet Template Name","Journal Batch Name",true);
                                 CalcPlan.RUNMODAL;

                                 if not FIND('-') then
                                   SetUpNewLine(Rec);

                                 CLEAR(CalcPlan);
                               END;
                                }
      { 32      ;2   ;Separator ;
                      Name=Separator32 }
      { 23      ;2   ;Action    ;
                      Name=Re&fresh Planning Line;
                      Ellipsis=true;
                      CaptionML=ENU=Re&fresh Planning Line;
                      ApplicationArea=#Planning;
                      Promoted=true;
                      Image=RefreshPlanningLine;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReqLine@1001 : Record "Requisition Line";
                               BEGIN
                                 ReqLine.SETRANGE("Worksheet Template Name","Worksheet Template Name");
                                 ReqLine.SETRANGE("Journal Batch Name","Journal Batch Name");
                                 ReqLine.SETRANGE("Line No.","Line No.");

                                 REPORT.RUNMODAL(REPORT::"Refresh Planning Demand",true,false,ReqLine);
                               END;
                                }
      { 42      ;2   ;Separator ;
                      Name=Separator42 }
      { 114     ;2   ;Action    ;
                      Name=&Get Error Log;
                      CaptionML=ENU=&Get Error Log;
                      ToolTipML=ENU=View detailed information for planning lines with a value in the Warning field.;
                      ApplicationArea=#Planning;
                      RunObject=Page "Planning Error Log";
                      RunPageLink="Worksheet Template Name"=FIELD("Worksheet Template Name"),
                                  "Journal Batch Name"=FIELD("Journal Batch Name");
                      Image=ErrorLog }
      { 113     ;2   ;Separator ;
                      Name=Separator113 }
      { 59      ;2   ;Action    ;
                      Name=CarryOutActionMessage;
                      Ellipsis=true;
                      CaptionML=ENU=Carry &Out Action Message;
                      ToolTipML=ENU=Use a batch job to help you create actual supply orders from the order proposals.;
                      ApplicationArea=#Planning;
                      Promoted=true;
                      Image=CarryOutActionMessage;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 PerformAction.SetReqWkshLine(Rec);
                                 PerformAction.RUNMODAL;
                                 CLEAR(PerformAction);
                                 CurrPage.UPDATE(true);
                               END;
                                }
      { 19      ;2   ;Separator ;
                      Name=Separator19 }
      { 62      ;2   ;Action    ;
                      Name=&Reserve;
                      CaptionML=ENU=&Reserve;
                      ToolTipML=ENU=Reserve the quantity that is required on the document line that you opened this window for.;
                      ApplicationArea=#Planning;
                      Image=Reserve;
                      OnAction=BEGIN
                                 CurrPage.SAVERECORD;
                                 ShowReservation;
                               END;
                                }
      { 18      ;2   ;Action    ;
                      Name=OrderTracking;
                      CaptionML=ENU=Order &Tracking;
                      ToolTipML=ENU=Tracks the connection of a supply to its corresponding demand. This can help you find the original demand that created a specific production order or purchase order.;
                      ApplicationArea=#Planning;
                      Promoted=true;
                      Image=OrderTracking;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TrackingForm@1001 : Page "Order Tracking";
                               BEGIN
                                 TrackingForm.SetReqLine(Rec);
                                 TrackingForm.RUNMODAL;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                Name=Container1900000001;
                ContainerType=ContentArea }

    { 69  ;1   ;Field     ;
                Name=CurrentWkshBatchName;
                CaptionML=ENU=Name;
                ToolTipML=ENU=Specifies the name of the journal batch of the planning worksheet.;
                ApplicationArea=#Planning;
                SourceExpr=CurrentWkshBatchName;
                OnValidate=BEGIN
                             ReqJnlManagement.CheckName(CurrentWkshBatchName,Rec);
                             CurrentWkshBatchNameOnAfterVal;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           ReqJnlManagement.LookupName(CurrentWkshBatchName,Rec);
                           CurrPage.UPDATE(false);
                         END;

                ImplicitType=Code10 }

    { 1   ;1   ;Group     ;
                Name=Group1;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 118 ;2   ;Field     ;
                Name=Warning;
                CaptionML=ENU=Warning;
                ToolTipML=ENU=Specifies a warning text for any planning line that is created for an unusual situation.;
                OptionCaptionML=ENU=" ,Emergency,Exception,Attention";
                ApplicationArea=#Planning;
                SourceExpr=Warning;
                Editable=False;
                OnDrillDown=BEGIN
                              PlanningTransparency.SetCurrReqLine(Rec);
                              PlanningTransparency.DrillDownUntrackedQty('');
                            END;

                ImplicitType=Option }

    { 40  ;2   ;Field     ;
                Name=Type;
                ToolTipML=ENU=Specifies the type of requisition worksheet line you are creating.;
                ApplicationArea=#Planning;
                SourceExpr=Type;
                Visible=FALSE;
                ImplicitType=Option }

    { 2   ;2   ;Field     ;
                Name=No.;
                ToolTipML=ENU=Specifies the number of the general ledger account or item to be entered on the line.;
                ApplicationArea=#Planning;
                SourceExpr="No.";
                OnValidate=BEGIN
                             PlanningWkshManagement.GetDescriptionAndRcptName(Rec,ItemDescription,RoutingDescription);
                           END;

                ImplicitType=Code20 }

    { 29  ;2   ;Field     ;
                Name=Variant Code;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Advanced;
                SourceExpr="Variant Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 96  ;2   ;Field     ;
                Name=Action Message;
                ToolTipML=ENU=Specifies an action to take to rebalance the demand-supply situation.;
                ApplicationArea=#Planning;
                SourceExpr="Action Message";
                ImplicitType=Option }

    { 98  ;2   ;Field     ;
                Name=Accept Action Message;
                ToolTipML=ENU=Specifies whether to accept the action message proposed for the line.;
                ApplicationArea=#Planning;
                SourceExpr="Accept Action Message";
                ImplicitType=Boolean }

    { 72  ;2   ;Field     ;
                Name=Original Due Date;
                ToolTipML=ENU=Specifies the due date stated on the production or purchase order, when an action message proposes to reschedule an order.;
                ApplicationArea=#Planning;
                SourceExpr="Original Due Date";
                ImplicitType=Date }

    { 82  ;2   ;Field     ;
                Name=Order Date;
                ToolTipML=ENU=Specifies the date when the related order was created.;
                ApplicationArea=#Planning;
                SourceExpr="Order Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 12  ;2   ;Field     ;
                Name=Due Date;
                ToolTipML=ENU=Specifies the date when you can expect to receive the items.;
                ApplicationArea=#Planning;
                SourceExpr="Due Date";
                ImplicitType=Date }

    { 115 ;2   ;Field     ;
                Name=Transfer Shipment Date;
                ToolTipML=ENU=Specifies the shipment date of the transfer order proposal.;
                ApplicationArea=#Location;
                SourceExpr="Transfer Shipment Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 24  ;2   ;Field     ;
                Name=Starting Date-Time;
                ToolTipML=ENU=Specifies the starting date and the starting time, which are combined in a format called "starting date-time".;
                ApplicationArea=#Planning;
                SourceExpr="Starting Date-Time";
                ImplicitType=DateTime }

    { 55  ;2   ;Field     ;
                Name=Starting Time;
                ToolTipML=ENU=Specifies the starting time of the manufacturing process.;
                ApplicationArea=#Planning;
                SourceExpr="Starting Time";
                Visible=FALSE;
                ImplicitType=Time }

    { 6   ;2   ;Field     ;
                Name=Starting Date;
                ToolTipML=ENU=Specifies the starting date of the manufacturing process, if the planned supply is a production order.;
                ApplicationArea=#Planning;
                SourceExpr="Starting Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 107 ;2   ;Field     ;
                Name=Ending Date-Time;
                ToolTipML=ENU=Specifies the ending date and the ending time, which are combined in a format called "ending date-time".;
                ApplicationArea=#Planning;
                SourceExpr="Ending Date-Time";
                ImplicitType=DateTime }

    { 8   ;2   ;Field     ;
                Name=Ending Time;
                ToolTipML=ENU=Specifies the ending time for the manufacturing process.;
                ApplicationArea=#Planning;
                SourceExpr="Ending Time";
                Visible=FALSE;
                ImplicitType=Time }

    { 10  ;2   ;Field     ;
                Name=Ending Date;
                ToolTipML=ENU=Specifies the ending date of the manufacturing process, if the planned supply is a production order.;
                ApplicationArea=#Planning;
                SourceExpr="Ending Date";
                Visible=FALSE;
                ImplicitType=Date }

    { 80  ;2   ;Field     ;
                Name=Low-Level Code;
                ToolTipML=ENU=Specifies the planning level of this item entry in the planning worksheet.;
                ApplicationArea=#Planning;
                SourceExpr="Low-Level Code";
                Visible=FALSE;
                ImplicitType=Integer }

    { 63  ;2   ;Field     ;
                Name=Description;
                ToolTipML=ENU=Specifies text that describes the entry.;
                ApplicationArea=#Planning;
                SourceExpr=Description;
                ImplicitType=Text50 }

    { 74  ;2   ;Field     ;
                Name=Description 2;
                ToolTipML=ENU=Specifies additional text describing the entry, or a remark about the requisition worksheet line.;
                ApplicationArea=#Planning;
                SourceExpr="Description 2";
                Visible=FALSE;
                ImplicitType=Text50 }

    { 43  ;2   ;Field     ;
                Name=Production BOM No.;
                ToolTipML=ENU=Specifies the production BOM number for this production order.;
                ApplicationArea=#Assembly;
                SourceExpr="Production BOM No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 14  ;2   ;Field     ;
                Name=Production BOM Version Code;
                ToolTipML=ENU=Specifies the version code of the BOM.;
                ApplicationArea=#Assembly;
                SourceExpr="Production BOM Version Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 45  ;2   ;Field     ;
                Name=Routing No.;
                ToolTipML=ENU=Specifies the routing number.;
                ApplicationArea=#Planning;
                SourceExpr="Routing No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             PlanningWkshManagement.GetDescriptionAndRcptName(Rec,ItemDescription,RoutingDescription);
                           END;

                ImplicitType=Code20 }

    { 31  ;2   ;Field     ;
                Name=Routing Version Code;
                ToolTipML=ENU=Specifies the version code of the routing.;
                ApplicationArea=#Planning;
                SourceExpr="Routing Version Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 27  ;2   ;Field     ;
                Name=Shortcut Dimension 1 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 25  ;2   ;Field     ;
                Name=Shortcut Dimension 2 Code;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 111 ;2   ;Field     ;
                Name=Transfer-from Code;
                ToolTipML=ENU=Specifies the code of the location that the item will be transferred from.;
                ApplicationArea=#Location;
                SourceExpr="Transfer-from Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 76  ;2   ;Field     ;
                Name=Location Code;
                ToolTipML=ENU=Specifies a code for an inventory location where the items that are being ordered will be registered.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 46  ;2   ;Field     ;
                Name=Original Quantity;
                ToolTipML=ENU=Specifies the quantity stated on the production or purchase order, when an action message proposes to change the quantity on an order.;
                ApplicationArea=#Planning;
                SourceExpr="Original Quantity";
                ImplicitType=Decimal }

    { 21  ;2   ;Field     ;
                Name=MPS Order;
                ToolTipML=ENU=Specifies whether the requisition worksheet line is an MPS order, that is, whether it is linked to a production forecast or a sales order.;
                ApplicationArea=#Planning;
                SourceExpr="MPS Order";
                ImplicitType=Boolean }

    { 4   ;2   ;Field     ;
                Name=Quantity;
                ToolTipML=ENU=Specifies the number of units of the item.;
                ApplicationArea=#Planning;
                SourceExpr=Quantity;
                ImplicitType=Decimal }

    { 16  ;2   ;Field     ;
                Name=Unit of Measure Code;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Planning;
                SourceExpr="Unit of Measure Code";
                Visible=FALSE;
                ImplicitType=Code10 }

    { 88  ;2   ;Field     ;
                Name=Replenishment System;
                ToolTipML=ENU=Specifies which kind of order to use to create replenishment orders and order proposals.;
                ApplicationArea=#Planning;
                SourceExpr="Replenishment System";
                Visible=FALSE;
                ImplicitType=Option }

    { 90  ;2   ;Field     ;
                Name=Ref. Order Type;
                ToolTipML=ENU=Specifies whether the order is a purchase order, a production order, or a transfer order.;
                ApplicationArea=#Planning;
                SourceExpr="Ref. Order Type";
                ImplicitType=Option }

    { 84  ;2   ;Field     ;
                Name=Ref. Order No.;
                ToolTipML=ENU=Specifies the number of the relevant production or purchase order.;
                ApplicationArea=#Planning;
                SourceExpr="Ref. Order No.";
                ImplicitType=Code20 }

    { 92  ;2   ;Field     ;
                Name=Ref. Order Status;
                ToolTipML=ENU=Specifies the status of the production order.;
                ApplicationArea=#Planning;
                SourceExpr="Ref. Order Status";
                ImplicitType=Option }

    { 94  ;2   ;Field     ;
                Name=Ref. Line No.;
                ToolTipML=ENU=Specifies the number of the purchase or production order line.;
                ApplicationArea=#Planning;
                SourceExpr="Ref. Line No.";
                Visible=FALSE;
                ImplicitType=Integer }

    { 104 ;2   ;Field     ;
                Name=Planning Flexibility;
                ToolTipML=ENU=Specifies whether the supply, represented by the requisition worksheet line, is considered by the planning system, when calculating action messages.;
                ApplicationArea=#Planning;
                SourceExpr="Planning Flexibility";
                Visible=FALSE;
                ImplicitType=Option }

    { 51  ;2   ;Field     ;
                Name=Reserved Quantity;
                ToolTipML=ENU=Specifies how many units of this item have been reserved.;
                ApplicationArea=#Planning;
                SourceExpr="Reserved Quantity";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              ShowReservationEntries(true);
                            END;

                ImplicitType=Decimal }

    { 33  ;2   ;Field     ;
                Name=Gen. Prod. Posting Group;
                ToolTipML=ENU=Specifies the item's product type to link transactions made for this item with the appropriate general ledger account according to the general posting setup.;
                ApplicationArea=#Planning;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 86  ;2   ;Field     ;
                Name=Unit Cost;
                ToolTipML=ENU=Specifies the unit costs for the planning worksheet line.;
                ApplicationArea=#Planning;
                SourceExpr="Unit Cost";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 35  ;2   ;Field     ;
                Name=Gen. Business Posting Group;
                ToolTipML=ENU=Specifies the code of the general business posting group to be used for the item when you post the planning worksheet.;
                ApplicationArea=#Planning;
                SourceExpr="Gen. Business Posting Group";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 37  ;2   ;Field     ;
                Name=Cost Amount;
                ToolTipML=ENU=Specifies the total costs for the requisition worksheet line.;
                ApplicationArea=#Planning;
                SourceExpr="Cost Amount";
                Visible=FALSE;
                ImplicitType=Decimal }

    { 78  ;2   ;Field     ;
                Name=Vendor No.;
                ToolTipML=ENU=Specifies the number of the vendor who will ship the items in the purchase order.;
                ApplicationArea=#Planning;
                SourceExpr="Vendor No.";
                Visible=FALSE;
                ImplicitType=Code20 }

    { 56  ;1   ;Group     ;
                Name=Group56 }

    { 1902454301;2;Group  ;
                Name=Group1902454301;
                GroupType=FixedLayout }

    { 1900295501;3;Group  ;
                Name=Item Description;
                CaptionML=ENU=Item Description }

    { 57  ;4   ;Field     ;
                Name=ItemDescription;
                ApplicationArea=#Planning;
                SourceExpr=ItemDescription;
                Editable=FALSE;
                ImplicitType=Text50;
                ShowCaption=false }

    { 1901312901;3;Group  ;
                Name=Routing Description;
                CaptionML=ENU=Routing Description }

    { 70  ;4   ;Field     ;
                Name=RoutingDescription;
                CaptionML=ENU=Routing Description;
                ToolTipML=ENU=Specifies a description of the routing for the item that is entered on the line.;
                ApplicationArea=#Planning;
                SourceExpr=RoutingDescription;
                Editable=FALSE;
                ImplicitType=Text50 }

    { 1900000007;0;Container;
                Name=Container1900000007;
                ContainerType=FactBoxArea }

    { 9   ;1   ;Part      ;
                Name=Part9;
                ApplicationArea=#Planning;
                SubPageLink="No."=FIELD("No.");
                PagePartID="Item Replenishment FactBox";
                Visible=FALSE;
                PartType=Page }

    { 11  ;1   ;Part      ;
                Name=Part11;
                ApplicationArea=#Planning;
                SubPageLink="No."=FIELD("No.");
                PagePartID="Item Planning FactBox";
                PartType=Page }

    { 15  ;1   ;Part      ;
                Name=Part15;
                ApplicationArea=#Planning;
                SubPageLink="Worksheet Template Name"=FIELD("Worksheet Template Name"),
                            "Worksheet Batch Name"=FIELD("Journal Batch Name"),
                            "Worksheet Line No."=FIELD("Line No.");
                PagePartID="Untracked Plng. Elements Part";
                PartType=Page }

    { 13  ;1   ;Part      ;
                Name=Part13;
                ApplicationArea=#Planning;
                SubPageLink="No."=FIELD("No.");
                PagePartID="Item Warehouse FactBox";
                Visible=FALSE;
                PartType=Page }

    { 1900383207;1;Part   ;
                Name=Part1900383207;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Name=Part1905767507;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      PerformAction@1000 : Report "Carry Out Action Msg. - Plan.";
      PlanningTransparency@1009 : Codeunit "Planning Transparency";
      ReqJnlManagement@1001 : Codeunit ReqJnlManagement;
      PlanningWkshManagement@1002 : Codeunit PlanningWkshManagement;
      ItemAvailFormsMgt@1008 : Codeunit "Item Availability Forms Mgt";
      CurrentWkshBatchName@1003 : Code[10];
      ItemDescription@1004 : Text[50];
      RoutingDescription@1005 : Text[50];
      ShortcutDimCode@1006 : ARRAY [8] OF Code[20];
      OpenedFromBatch@1007 : Boolean;
      DescriptionIndent@19057867 : Integer INDATASET;
      Warning@19070923 : '" ",Emergency,Exception,Attention';

    LOCAL PROCEDURE PlanningWarningLevel@40();
    VAR
      Transparency@1001 : Codeunit "Planning Transparency";
    BEGIN
      Warning := Transparency.ReqLineWarningLevel(Rec);
    END;

    LOCAL PROCEDURE CurrentWkshBatchNameOnAfterVal@19053116();
    BEGIN
      CurrPage.SAVERECORD;
      ReqJnlManagement.SetName(CurrentWkshBatchName,Rec);
      CurrPage.UPDATE(false);
    END;

    LOCAL PROCEDURE StartingDateTimeOnFormat@19018669();
    BEGIN
      if ("Starting Date" < WORKDATE) and
         ("Action Message" in ["Action Message"::New,"Action Message"::Reschedule,"Action Message"::"Resched. & Chg. Qty."])
      then;
    END;

    LOCAL PROCEDURE StartingDateOnFormat@19039781();
    BEGIN
      if "Starting Date" < WORKDATE then;
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      DescriptionIndent := "Planning Level";
    END;

    LOCAL PROCEDURE RefOrderNoOnFormat@19059185();
    VAR
      PurchHeader@1000 : Record "Purchase Header";
      TransfHeader@1003 : Record "Transfer Header";
    BEGIN
      case "Ref. Order Type" of
        "Ref. Order Type"::Purchase:
          if PurchHeader.GET(PurchHeader."Document Type"::Order,"Ref. Order No.") and
             (PurchHeader.Status = PurchHeader.Status::Released)
          then;
        "Ref. Order Type"::"Prod. Order":
          ;
        "Ref. Order Type"::Transfer:
          if TransfHeader.GET("Ref. Order No.") and
             (TransfHeader.Status = TransfHeader.Status::Released)
          then;
      end;
    END;

    LOCAL PROCEDURE PlanningWarningLevel1OnFormat@19030151();
    BEGIN
      PlanningWarningLevel;
    END;

    [External]
    PROCEDURE OpenPlanningComponent@1(VAR PlanningComponent@1001 : Record "Planning Component");
    BEGIN
      PlanningComponent.SETRANGE("Worksheet Template Name",PlanningComponent."Worksheet Template Name");
      PlanningComponent.SETRANGE("Worksheet Batch Name",PlanningComponent."Worksheet Batch Name");
      PlanningComponent.SETRANGE("Worksheet Line No.",PlanningComponent."Worksheet Line No.");
      PAGE.RUNMODAL(PAGE::"Planning Components",PlanningComponent);
    END;

    BEGIN
    END.
  }
}

