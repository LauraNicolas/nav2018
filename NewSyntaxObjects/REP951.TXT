OBJECT Report 951 Suggest Res. Jnl. Lines
{
  OBJECT-PROPERTIES
  {
    Date=20171006D;
    Time=120000T;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Suggest Res. Jnl. Lines;
    ProcessingOnly=true;
    OnPreReport=VAR
                  TimeSheetMgt@1000 : Codeunit "Time Sheet Management";
                BEGIN
                  DateFilter := TimeSheetMgt.GetDateFilter(StartingDate,EndingDate);
                END;

  }
  DATASET
  {
    { 5508;    ;DataItem;Resource            ;
               DataItemTable=Resource;
               DataItemTableView=WHERE("Use Time Sheet"=CONST(true));
               OnPreDataItem=BEGIN
                               if ResourceNoFilter <> '' then
                                 SETFILTER("No.",ResourceNoFilter);

                               if DateFilter <> '' then
                                 TimeSheetHeader.SETFILTER("Starting Date",DateFilter);
                             END;

               OnAfterGetRecord=BEGIN
                                  FillTempBuffer("No.");
                                END;

               OnPostDataItem=VAR
                                NoSeriesMgt@1002 : Codeunit NoSeriesManagement;
                                NextDocNo@1001 : Code[20];
                                LineNo@1000 : Integer;
                                QtyToPost@1004 : Decimal;
                              BEGIN
                                if TempTimeSheetLine.FINDSET then begin
                                  ResJnlLine.LOCKTABLE;
                                  ResJnlTemplate.GET(ResJnlLine."Journal Template Name");
                                  ResJnlBatch.GET(ResJnlLine."Journal Template Name",ResJnlLine."Journal Batch Name");
                                  if ResJnlBatch."No. Series" = '' then
                                    NextDocNo := ''
                                  else
                                    NextDocNo := NoSeriesMgt.GetNextNo(ResJnlBatch."No. Series",TempTimeSheetLine."Time Sheet Starting Date",false);

                                  ResJnlLine.SETRANGE("Journal Template Name",ResJnlLine."Journal Template Name");
                                  ResJnlLine.SETRANGE("Journal Batch Name",ResJnlLine."Journal Batch Name");
                                  if ResJnlLine.FINDLAST then;
                                  LineNo := ResJnlLine."Line No.";

                                  repeat
                                    TimeSheetHeader.GET(TempTimeSheetLine."Time Sheet No.");
                                    TimeSheetDetail.SETRANGE("Time Sheet No.",TempTimeSheetLine."Time Sheet No.");
                                    TimeSheetDetail.SETRANGE("Time Sheet Line No.",TempTimeSheetLine."Line No.");
                                    if DateFilter <> '' then
                                      TimeSheetDetail.SETFILTER(Date,DateFilter);
                                    TimeSheetDetail.SETFILTER(Quantity,'<>0');
                                    if TimeSheetDetail.FINDSET then
                                      repeat
                                        QtyToPost := TimeSheetDetail.GetMaxQtyToPost;
                                        if QtyToPost <> 0 then begin
                                          ResJnlLine.INIT;
                                          LineNo := LineNo + 10000;
                                          ResJnlLine."Line No." := LineNo;
                                          ResJnlLine."Time Sheet No." := TimeSheetDetail."Time Sheet No.";
                                          ResJnlLine."Time Sheet Line No." := TimeSheetDetail."Time Sheet Line No.";
                                          ResJnlLine."Time Sheet Date" := TimeSheetDetail.Date;
                                          ResJnlLine.VALIDATE("Resource No.",TimeSheetHeader."Resource No.");
                                          ResJnlLine.VALIDATE("Posting Date",TimeSheetDetail.Date);
                                          ResJnlLine."Document No." := NextDocNo;
                                          NextDocNo := INCSTR(NextDocNo);
                                          ResJnlLine."Posting No. Series" := ResJnlBatch."Posting No. Series";
                                          ResJnlLine.Description := TempTimeSheetLine.Description;
                                          ResJnlLine.VALIDATE("Work Type Code",TempTimeSheetLine."Work Type Code");
                                          ResJnlLine.VALIDATE(Quantity,QtyToPost);
                                          ResJnlLine."Source Code" := ResJnlTemplate."Source Code";
                                          ResJnlLine."Reason Code" := ResJnlBatch."Reason Code";
                                          ResJnlLine.INSERT;
                                        end;
                                      until TimeSheetDetail.NEXT = 0;
                                  until TempTimeSheetLine.NEXT = 0;
                                end;
                              END;

               ReqFilterFields="No.",Type }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=true;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  Name=Container1900000001;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  Name=Options;
                  CaptionML=ENU=Options }

      { 2   ;2   ;Field     ;
                  Name=Starting Date;
                  CaptionML=ENU=Starting Date;
                  ToolTipML=ENU=Specifies the date of the first day for the period for which you want to create journal lines.;
                  ApplicationArea=#Advanced;
                  SourceExpr=StartingDate }

      { 1   ;2   ;Field     ;
                  Name=Ending Date;
                  CaptionML=ENU=Ending Date;
                  ToolTipML=ENU=Specifies the date of the last day for the period for which you want to create journal lines.;
                  ApplicationArea=#Advanced;
                  SourceExpr=EndingDate }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ResJnlLine@1012 : Record "Res. Journal Line";
      ResJnlBatch@1011 : Record "Res. Journal Batch";
      ResJnlTemplate@1010 : Record "Res. Journal Template";
      TimeSheetHeader@1009 : Record "Time Sheet Header";
      TimeSheetLine@1008 : Record "Time Sheet Line";
      TempTimeSheetLine@1007 : TEMPORARY Record "Time Sheet Line";
      TimeSheetDetail@1006 : Record "Time Sheet Detail";
      ResourceNoFilter@1005 : Code[250];
      StartingDate@1001 : Date;
      EndingDate@1000 : Date;
      DateFilter@1002 : Text[30];

    [External]
    PROCEDURE SetResJnlLine@1(NewResJnlLine@1000 : Record "Res. Journal Line");
    BEGIN
      ResJnlLine := NewResJnlLine;
    END;

    [External]
    PROCEDURE InitParameters@2(NewResJnlLine@1000 : Record "Res. Journal Line";NewResourceNoFilter@1003 : Code[250];NewStartingDate@1001 : Date;NewEndingDate@1002 : Date);
    BEGIN
      ResJnlLine := NewResJnlLine;
      ResourceNoFilter := NewResourceNoFilter;
      StartingDate := NewStartingDate;
      EndingDate := NewEndingDate;
    END;

    LOCAL PROCEDURE FillTempBuffer@3(ResourceNo@1000 : Code[20]);
    BEGIN
      TimeSheetHeader.SETRANGE("Resource No.",ResourceNo);
      if TimeSheetHeader.FINDSET then
        repeat
          TimeSheetLine.SETRANGE("Time Sheet No.",TimeSheetHeader."No.");
          TimeSheetLine.SETRANGE(Type,TimeSheetLine.Type::Resource);
          TimeSheetLine.SETRANGE(Status,TimeSheetLine.Status::Approved);
          TimeSheetLine.SETRANGE(Posted,false);
          if TimeSheetLine.FINDSET then
            repeat
              TempTimeSheetLine := TimeSheetLine;
              TempTimeSheetLine.INSERT;
            until TimeSheetLine.NEXT = 0;
        until TimeSheetHeader.NEXT = 0;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

