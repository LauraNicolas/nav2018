OBJECT Codeunit 2820 Native - Attachments
{
  OBJECT-PROPERTIES
  {
    Date=06.10.17;
    Time=12:00:00;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            CleanupAttachmentEntityBuffer;
          END;

  }
  CODE
  {
    VAR
      CleanupJobBufferHoursTxt@1000 : TextConst '@@@={Locked};ENU=6';
      AttachmentKeepDaysTxt@1001 : TextConst '@@@={Locked};ENU=5';

    PROCEDURE UpdateAttachments@6(DocumentId@1000 : GUID;NewAttachmentsJSON@1001 : Text;PreviousAttachmentsJSON@1009 : Text);
    VAR
      TempOldAttachmentEntityBuffer@1007 : TEMPORARY Record 5509;
      TempNewAttachmentEntityBuffer@1006 : TEMPORARY Record 5509;
      NativeEDMTypes@1002 : Codeunit 2801;
    BEGIN
      NativeEDMTypes.ParseAttachmentsJSON(PreviousAttachmentsJSON,TempOldAttachmentEntityBuffer,DocumentId);
      NativeEDMTypes.ParseAttachmentsJSON(NewAttachmentsJSON,TempNewAttachmentEntityBuffer,DocumentId);

      DeleteUnusedAttachments(TempOldAttachmentEntityBuffer,TempNewAttachmentEntityBuffer);
      LinkNewAttachmentsToDocument(TempOldAttachmentEntityBuffer,TempNewAttachmentEntityBuffer,DocumentId);
    END;

    PROCEDURE GenerateAttachmentsJSON@2(DocumentIdFilter@1000 : Text) : Text;
    VAR
      TempAttachmentEntityBuffer@1003 : TEMPORARY Record 5509;
      NativeEDMTypes@1006 : Codeunit 2801;
      GraphMgtAttachmentBuffer@1005 : Codeunit 5503;
    BEGIN
      TempAttachmentEntityBuffer.DELETEALL;
      GraphMgtAttachmentBuffer.LoadAttachments(TempAttachmentEntityBuffer,DocumentIdFilter,'');

      EXIT(NativeEDMTypes.WriteAttachmentsJSON(TempAttachmentEntityBuffer));
    END;

    PROCEDURE LinkAttachmentToDocument@4(AttachmentEntityBufferId@1000 : GUID;DocumentId@1001 : GUID);
    VAR
      TempFieldBuffer@1003 : TEMPORARY Record 8450;
      TempAttachmentEntityBuffer@1002 : TEMPORARY Record 5509;
      UnlinkedAttachment@1004 : Record 138;
      GraphMgtAttachmentBuffer@1005 : Codeunit 5503;
    BEGIN
      UnlinkedAttachment.GET(AttachmentEntityBufferId);
      UnlinkedAttachment.CALCFIELDS(Content);
      TempAttachmentEntityBuffer.TRANSFERFIELDS(UnlinkedAttachment);
      TempAttachmentEntityBuffer."Document Id" := DocumentId;
      RegisterFieldSet(TempAttachmentEntityBuffer.FIELDNO("Created Date-Time"),TempFieldBuffer);
      RegisterFieldSet(TempAttachmentEntityBuffer.FIELDNO(Content),TempFieldBuffer);
      GraphMgtAttachmentBuffer.PropagateInsertAttachment(TempAttachmentEntityBuffer,TempFieldBuffer);
      UnlinkedAttachment.DELETE(TRUE);
    END;

    LOCAL PROCEDURE CleanupAttachmentEntityBuffer@7();
    VAR
      UnlinkedAttachment@1000 : Record 138;
    BEGIN
      UnlinkedAttachment.SETCURRENTKEY("Created Date-Time");
      UnlinkedAttachment.SETFILTER(
        "Created Date-Time",'..%1',
        CREATEDATETIME(CALCDATE(STRSUBSTNO('<-%1D>',AttachmentKeepDays),TODAY),DT2TIME(CURRENTDATETIME)));
      UnlinkedAttachment.DELETEALL(TRUE);
    END;

    LOCAL PROCEDURE DeleteUnusedAttachments@3(VAR TempOldAttachmentEntityBuffer@1000 : TEMPORARY Record 5509;VAR TempNewAttachmentEntityBuffer@1001 : TEMPORARY Record 5509);
    VAR
      GraphMgtAttachmentBuffer@1002 : Codeunit 5503;
    BEGIN
      IF TempOldAttachmentEntityBuffer.FINDSET THEN
        REPEAT
          IF NOT TempNewAttachmentEntityBuffer.GET(TempOldAttachmentEntityBuffer.Id) THEN
            GraphMgtAttachmentBuffer.PropagateDeleteAttachment(TempOldAttachmentEntityBuffer);
        UNTIL TempOldAttachmentEntityBuffer.NEXT = 0;
    END;

    LOCAL PROCEDURE LinkNewAttachmentsToDocument@8(VAR TempOldAttachmentEntityBuffer@1000 : TEMPORARY Record 5509;VAR TempNewAttachmentEntityBuffer@1001 : TEMPORARY Record 5509;DocumentId@1002 : GUID);
    BEGIN
      IF TempNewAttachmentEntityBuffer.FINDSET THEN
        REPEAT
          IF NOT TempOldAttachmentEntityBuffer.GET(TempNewAttachmentEntityBuffer.Id) THEN
            LinkAttachmentToDocument(TempNewAttachmentEntityBuffer.Id,DocumentId);
        UNTIL TempNewAttachmentEntityBuffer.NEXT = 0;
    END;

    PROCEDURE RegisterFieldSet@18(FieldNo@1000 : Integer;VAR TempFieldBuffer@1002 : TEMPORARY Record 8450);
    VAR
      LastOrderNo@1001 : Integer;
    BEGIN
      LastOrderNo := 1;
      IF TempFieldBuffer.FINDLAST THEN
        LastOrderNo := TempFieldBuffer.Order + 1;

      CLEAR(TempFieldBuffer);
      TempFieldBuffer.Order := LastOrderNo;
      TempFieldBuffer."Table ID" := DATABASE::"Incoming Document Attachment";
      TempFieldBuffer."Field ID" := FieldNo;
      TempFieldBuffer.INSERT;
    END;

    LOCAL PROCEDURE ScheduleCleanupJob@5();
    VAR
      JobQueueEntry@1000 : Record 472;
      JobStartTime@1001 : DateTime;
      CleanupStartTime@1002 : DateTime;
    BEGIN
      CleanupStartTime := CURRENTDATETIME + AttachmentKeepDays * HoursPerDay * MillisecondsPerHour;
      JobStartTime := CleanupStartTime + CleanupJobBufferHours * MillisecondsPerHour;

      JobQueueEntry.SETRANGE("Object Type to Run",JobQueueEntry."Object Type to Run"::Codeunit);
      JobQueueEntry.SETRANGE("Object ID to Run",CODEUNIT::"Native - Attachments");
      JobQueueEntry.SETRANGE(Status,JobQueueEntry.Status::Ready);
      JobQueueEntry.SETFILTER("Earliest Start Date/Time",'%1..%2',CleanupStartTime,JobStartTime);
      IF JobQueueEntry.FINDFIRST THEN
        EXIT;

      JobQueueEntry.LOCKTABLE;
      JobQueueEntry.INIT;
      JobQueueEntry."Object Type to Run" := JobQueueEntry."Object Type to Run"::Codeunit;
      JobQueueEntry."Object ID to Run" := CODEUNIT::"Native - Attachments";
      JobQueueEntry."Earliest Start Date/Time" := JobStartTime;
      JobQueueEntry."Maximum No. of Attempts to Run" := 3;
      CODEUNIT.RUN(CODEUNIT::"Job Queue - Enqueue",JobQueueEntry);
    END;

    LOCAL PROCEDURE CleanupJobBufferHours@10() : Integer;
    VAR
      Result@1000 : Integer;
    BEGIN
      EVALUATE(Result,CleanupJobBufferHoursTxt);
      EXIT(Result);
    END;

    LOCAL PROCEDURE AttachmentKeepDays@12() : Integer;
    VAR
      Result@1000 : Integer;
    BEGIN
      EVALUATE(Result,AttachmentKeepDaysTxt);
      EXIT(Result);
    END;

    LOCAL PROCEDURE HoursPerDay@11() : Integer;
    BEGIN
      EXIT(24);
    END;

    LOCAL PROCEDURE MillisecondsPerHour@9() : Integer;
    BEGIN
      EXIT(3600000);
    END;

    [EventSubscriber(Table,5509,OnAfterInsertEvent)]
    LOCAL PROCEDURE OnAfterInsertAttachmentEntityBuffer@17(VAR Rec@1000 : Record 5509;RunTrigger@1001 : Boolean);
    BEGIN
      IF Rec.ISTEMPORARY THEN
        EXIT;
      ScheduleCleanupJob;
    END;

    BEGIN
    END.
  }
}

