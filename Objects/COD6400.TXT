OBJECT Codeunit 6400 Flow Service Management
{
  OBJECT-PROPERTIES
  {
    Date=28.05.17;
    Time=12:00:00;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FlowAppIDProdTxt@1005 : TextConst '@@@={Locked};ENU=0BB97B4F1901437BB5D97B58AEDEDBDE';
      FlowUrlProdTxt@1008 : TextConst '@@@={Locked};ENU=https://flow.microsoft.com/';
      FlowARMResourceUrlTxt@1000 : TextConst '@@@={Locked};ENU=https://management.core.windows.net/';
      FlowGraphResourceUrlTxt@1018 : TextConst '@@@={Locked};ENU=https://graph.windows.net';
      GenericErr@1001 : TextConst 'ENU=An error occured while trying to access the Flow service. Please try again or contact your system administrator if the error persists.';
      FlowResourceNameTxt@1002 : TextConst 'ENU=Flow Services';
      FlowTemplatePageSizeTxt@1003 : TextConst '@@@={Locked};ENU=4';
      FlowTemplateDestinationNewTxt@1004 : TextConst '@@@={Locked};ENU=new';
      FlowTemplateDestinationDetailsTxt@1011 : TextConst '@@@={Locked};ENU=details';
      AzureAdMgt@1012 : Codeunit 6300;
      DotNetString@1013 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";
      FlowPPEErr@1006 : TextConst 'ENU=Microsoft Flow integration is not supported outside of a PROD environment.';
      FlowAccessDeniedErr@1007 : TextConst 'ENU=Windows Azure Service Management API permissions need to be enabled for Flow in the Azure Portal. Contact your system administrator.';
      FlowDefaultTenantIdTxt@1009 : TextConst '@@@={Locked};ENU=72f988bf-86f1-41af-91ab-2d7cd011db47';
      AadCommonTenantIdTxt@1010 : TextConst '@@@={Locked};ENU=common';
      FlowDefaultEnvironmentPrefixTxt@1014 : TextConst '@@@={Locked};ENU=Default-';
      FlowLinkUrlFormatTxt@1015 : TextConst '@@@={Locked};ENU=%1manage/environments/%2/flows/%3/details';
      FlowManageLinkUrlFormatTxt@1017 : TextConst '@@@={Locked};ENU=%1manage/environments/%2/flows/';
      FlowLinkInvalidFlowIdErr@1016 : TextConst 'ENU=An invalid Flow ID was provided.';
      SalesTemplateFilterTxt@1019 : TextConst '@@@={Locked};ENU=Dynamics 365 for Financials Sales';

    [External]
    PROCEDURE GetFlowUrl@12() : Text;
    BEGIN
      EXIT(FlowUrlProdTxt);
    END;

    [External]
    PROCEDURE GetFlowDetailsUrl@8(FlowId@1000 : GUID) FlowDetailsUrl : Text;
    VAR
      TypeHelper@1002 : Codeunit 10;
    BEGIN
      IF ISNULLGUID(FlowId) THEN
        ERROR(FlowLinkInvalidFlowIdErr);

      FlowDetailsUrl := STRSUBSTNO(FlowLinkUrlFormatTxt,GetFlowUrl,GetFlowEnvironmentID,TypeHelper.GetGuidAsString(FlowId));
    END;

    [External]
    PROCEDURE GetFlowManageUrl@10() Url : Text;
    BEGIN
      Url := STRSUBSTNO(FlowManageLinkUrlFormatTxt,GetFlowUrl,GetFlowEnvironmentID);
    END;

    [External]
    PROCEDURE GetFlowARMResourceUrl@5() : Text;
    BEGIN
      EXIT(FlowARMResourceUrlTxt);
    END;

    [External]
    PROCEDURE GetFlowGraphResourceUrl@4() : Text;
    BEGIN
      EXIT(FlowGraphResourceUrlTxt);
    END;

    [External]
    PROCEDURE GetFlowResourceName@9() : Text;
    BEGIN
      EXIT(FlowResourceNameTxt);
    END;

    [External]
    PROCEDURE GetGenericError@7() : Text;
    BEGIN
      EXIT(GenericErr);
    END;

    [External]
    PROCEDURE GetFlowAppID@11() : Text;
    BEGIN
      EXIT(FlowAppIDProdTxt);
    END;

    [External]
    PROCEDURE GetFlowEnvironmentID@6() FlowEnvironmentId : Text;
    VAR
      IdentityManagement@1001 : Codeunit 9801;
      AadTenantId@1000 : Text;
    BEGIN
      AadTenantId := IdentityManagement.GetAadTenantId;
      FlowEnvironmentId := FlowDefaultEnvironmentPrefixTxt;

      IF LOWERCASE(AadTenantId) = AadCommonTenantIdTxt THEN
        FlowEnvironmentId += FlowDefaultTenantIdTxt
      ELSE
        FlowEnvironmentId += AadTenantId;
    END;

    [External]
    PROCEDURE GetFlowTemplatePageSize@13() : Text;
    BEGIN
      EXIT(FlowTemplatePageSizeTxt);
    END;

    [External]
    PROCEDURE GetFlowTemplateDestinationNew@14() : Text;
    BEGIN
      EXIT(FlowTemplateDestinationNewTxt);
    END;

    [External]
    PROCEDURE GetFlowTemplateDestinationDetails@15() : Text;
    BEGIN
      EXIT(FlowTemplateDestinationDetailsTxt);
    END;

    PROCEDURE IsUserReadyForFlow@24() : Boolean;
    BEGIN
      IF NOT AzureAdMgt.IsAzureADAppSetupDone THEN
        EXIT(FALSE);

      EXIT(NOT DotNetString.IsNullOrWhiteSpace(AzureAdMgt.GetAccessToken(GetFlowARMResourceUrl,GetFlowResourceName,FALSE)));
    END;

    [External]
    PROCEDURE IsPPE@1() : Boolean;
    VAR
      EnvironmentMgt@1000 : Codeunit 9005;
    BEGIN
      EXIT(EnvironmentMgt.IsPPE);
    END;

    PROCEDURE GetFlowPPEError@2() : Text;
    BEGIN
      EXIT(FlowPPEErr);
    END;

    [External]
    PROCEDURE GetSalesTemplateFilter@16() : Text;
    BEGIN
      // Gets a text value that filters Flow templates for Sales pages when opening page 6400.
      EXIT(SalesTemplateFilterTxt);
    END;

    [EventSubscriber(Page,6302,OnOAuthAccessDenied)]
    LOCAL PROCEDURE CheckOAuthAccessDenied@3(description@1000 : Text;resourceFriendlyName@1001 : Text);
    BEGIN
      IF STRPOS(resourceFriendlyName,FlowResourceNameTxt) > 0 THEN BEGIN
        IF STRPOS(description,'AADSTS65005') > 0 THEN
          ERROR(FlowAccessDeniedErr);
      END;
    END;

    BEGIN
    {
      // Manages access to Microsoft Flow service API
      // Below are details for using Microsoft Flow on the TIP environments
      // Flow App ID for TIP1 - 19CE1AD3DF354805B2883390DBDA18CC
      // Flow App ID for TIP2 - 252EA9FA2D3E4F9A959DC8F5355172F6
      // Flow Url for TIP1 - https://tip1.flow.microsoft.com/
      // Flow Url for TIP2 - https://tip2.flow.microsoft.com/
    }
    END.
  }
}

