OBJECT Page 2820 Native - Attachments
{
  OBJECT-PROPERTIES
  {
    Date=06.10.17;
    Time=12:00:00;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=[@@@={Locked};
               ENU=nativeInvoicingAttachments];
    SourceTable=Table5509;
    DelayedInsert=Yes;
    PageType=List;
    SourceTableTemporary=Yes;
    OnFindRecord=VAR
                   GraphMgtAttachmentBuffer@1002 : Codeunit 5503;
                   DocumentIdFilter@1001 : Text;
                   AttachmentIdFilter@1004 : Text;
                   FilterView@1000 : Text;
                   DocumentId@1005 : GUID;
                 BEGIN
                   IF NOT AttachmentsLoaded THEN BEGIN
                     FilterView := GETVIEW;
                     DocumentIdFilter := GETFILTER("Document Id");
                     AttachmentIdFilter := GETFILTER(Id);
                     IF (AttachmentIdFilter <> '') AND (DocumentIdFilter = '') THEN BEGIN
                       DocumentId := GraphMgtAttachmentBuffer.GetDocumentIdFromAttachmentId(AttachmentIdFilter);
                       DocumentIdFilter := FORMAT(DocumentId);
                     END;
                     GraphMgtAttachmentBuffer.LoadAttachments(Rec,DocumentIdFilter,AttachmentIdFilter);
                     SETVIEW(FilterView);
                     AttachmentsFound := FINDFIRST;
                     IF NOT AttachmentsFound THEN
                       EXIT(FALSE);
                     Base64ContentIncluded := AttachmentIdFilter <> '';
                     IF Base64ContentIncluded THEN
                       ContentToBase64String;
                     AttachmentsLoaded := TRUE;
                   END;
                   EXIT(AttachmentsFound);
                 END;

    OnNewRecord=BEGIN
                  TempFieldBuffer.RESET;
                  TempFieldBuffer.DELETEALL;
                END;

    OnInsertRecord=VAR
                     GraphMgtAttachmentBuffer@1001 : Codeunit 5503;
                     FileManagement@1003 : Codeunit 419;
                     ErrorMsg@1002 : Text;
                   BEGIN
                     // Do checks of the inserted record and populate default data.
                     IF Base64Content = '' THEN
                       ERROR(Base64ContentNotIncludedErr);

                     IF NOT FileManagement.IsValidFileName("File Name") THEN
                       VALIDATE("File Name",'filename.txt');

                     Base64ContentIncluded := TRUE;
                     VALIDATE(Id,CREATEGUID);
                     VALIDATE("Created Date-Time",ROUNDDATETIME(CURRENTDATETIME,1000));
                     NativeAttachments.RegisterFieldSet(FIELDNO(Id),TempFieldBuffer);
                     NativeAttachments.RegisterFieldSet(FIELDNO("Created Date-Time"),TempFieldBuffer);

                     ByteSizeFromContent;

                     GraphMgtAttachmentBuffer.PropagateInsertAttachmentSafe(Rec,TempFieldBuffer,ErrorMsg);

                     EXIT(FALSE);
                   END;

    OnModifyRecord=VAR
                     GraphMgtAttachmentBuffer@1000 : Codeunit 5503;
                   BEGIN
                     GraphMgtAttachmentBuffer.PropagateModifyAttachment(Rec,TempFieldBuffer);
                     ContentToBase64String;
                     ByteSizeFromContent;
                     EXIT(FALSE);
                   END;

    OnDeleteRecord=VAR
                     GraphMgtAttachmentBuffer@1000 : Codeunit 5503;
                   BEGIN
                     GraphMgtAttachmentBuffer.PropagateDeleteAttachment(Rec);
                     EXIT(FALSE);
                   END;

  }
  CONTROLS
  {
    { 18  ;0   ;Container ;
                ContainerType=ContentArea }

    { 17  ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 16  ;2   ;Field     ;
                Name=id;
                CaptionML=[@@@={Locked};
                           ENU=id];
                ApplicationArea=#All;
                SourceExpr=Id;
                OnValidate=BEGIN
                             NativeAttachments.RegisterFieldSet(FIELDNO(Id),TempFieldBuffer);
                           END;
                            }

    { 1   ;2   ;Field     ;
                Name=documentId;
                CaptionML=[@@@={Locked};
                           ENU=documentId];
                ApplicationArea=#All;
                SourceExpr="Document Id" }

    { 14  ;2   ;Field     ;
                Name=fileName;
                CaptionML=[@@@={Locked};
                           ENU=fileName];
                ToolTipML=ENU=Specifies the Description for the Item.;
                ApplicationArea=#All;
                SourceExpr="File Name";
                OnValidate=BEGIN
                             NativeAttachments.RegisterFieldSet(FIELDNO("File Name"),TempFieldBuffer);
                           END;
                            }

    { 7   ;2   ;Field     ;
                Name=byteSize;
                CaptionML=[@@@={Locked};
                           ENU=byteSize];
                ApplicationArea=#All;
                SourceExpr="Byte Size";
                OnValidate=BEGIN
                             NativeAttachments.RegisterFieldSet(FIELDNO("Byte Size"),TempFieldBuffer);
                           END;
                            }

    { 4   ;2   ;Field     ;
                Name=content;
                CaptionML=[@@@={Locked};
                           ENU=content];
                ApplicationArea=#All;
                SourceExpr=Content }

    { 8   ;2   ;Field     ;
                Name=base64ContentIncluded;
                CaptionML=[@@@={Locked};
                           ENU=base64ContentIncluded];
                ToolTipML=ENU=Specifies if response includes actual base64Content and contentLength values.;
                ApplicationArea=#All;
                SourceExpr=Base64ContentIncluded }

    { 5   ;2   ;Field     ;
                Name=base64Content;
                CaptionML=[@@@={Locked};
                           ENU=base64Content];
                ToolTipML=ENU=Specifies base64 encoded content.;
                ApplicationArea=#All;
                SourceExpr=Base64Content;
                OnValidate=BEGIN
                             ContentFromBase64String;
                             ByteSizeFromContent;
                             IF AttachmentsLoaded THEN
                               MODIFY;
                             NativeAttachments.RegisterFieldSet(FIELDNO(Content),TempFieldBuffer);
                           END;
                            }

    { 19  ;2   ;Field     ;
                Name=lastModifiedDateTime;
                CaptionML=[@@@={Locked};
                           ENU=lastModifiedDateTime];
                ApplicationArea=#All;
                SourceExpr="Created Date-Time";
                Editable=FALSE }

  }
  CODE
  {
    VAR
      TempFieldBuffer@1005 : TEMPORARY Record 8450;
      NativeAttachments@1004 : Codeunit 2820;
      AttachmentsLoaded@1003 : Boolean;
      AttachmentsFound@1001 : Boolean;
      Base64ContentIncluded@1006 : Boolean;
      Base64Content@1007 : Text;
      Base64ContentNotIncludedErr@1000 : TextConst 'ENU=Base64Content must be provided.';

    PROCEDURE ContentToBase64String@24();
    VAR
      InStream@1000 : InStream;
      Convert@1003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Convert";
      MemoryStream@1002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.MemoryStream";
    BEGIN
      CALCFIELDS(Content);
      IF NOT Content.HASVALUE THEN BEGIN
        Base64Content := '';
        EXIT;
      END;
      Content.CREATEINSTREAM(InStream);
      MemoryStream := MemoryStream.MemoryStream;
      COPYSTREAM(MemoryStream,InStream);
      Base64Content := Convert.ToBase64String(MemoryStream.ToArray);
      MemoryStream.Close;
    END;

    PROCEDURE ContentFromBase64String@23();
    VAR
      OutStream@1001 : OutStream;
      Convert@1003 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Convert";
      MemoryStream@1002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.MemoryStream";
    BEGIN
      CLEAR(Content);
      IF Base64Content = '' THEN
        EXIT;
      MemoryStream := MemoryStream.MemoryStream(Convert.FromBase64String(Base64Content));
      Content.CREATEOUTSTREAM(OutStream);
      MemoryStream.WriteTo(OutStream);
      MemoryStream.Close;
    END;

    LOCAL PROCEDURE ByteSizeFromContent@15();
    VAR
      TempBlob@1001 : Record 99008535;
      GraphMgtAttachmentBuffer@1000 : Codeunit 5503;
    BEGIN
      TempBlob.Blob := Content;
      "Byte Size" := GraphMgtAttachmentBuffer.GetContentLength(TempBlob);
    END;

    BEGIN
    END.
  }
}

