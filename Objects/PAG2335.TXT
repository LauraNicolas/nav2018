OBJECT Page 2335 BC O365 Email Account Settings
{
  OBJECT-PROPERTIES
  {
    Date=28.05.17;
    Time=12:00:00;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Email Account;
    DeleteAllowed=No;
    SourceTable=Table409;
    PageType=CardPart;
    SourceTableTemporary=Yes;
    RefreshOnActivate=Yes;
    OnOpenPage=VAR
                 SMTPMailSetup@1002 : Record 409;
                 User@1001 : Record 2000000120;
                 SMTPMail@1000 : Codeunit 400;
               BEGIN
                 INIT;
                 IF SMTPMailSetup.GET THEN BEGIN
                   TRANSFERFIELDS(SMTPMailSetup);
                   GetEmailProvider(SMTPMailSetup)
                 END ELSE BEGIN
                   SMTPMail.ApplyOffice365Smtp(Rec);
                   EmailProvider := EmailProvider::"Office 365";
                   IF User.GET(USERSECURITYID) THEN
                     "User ID" := User."Authentication Email";
                   SMTPMailSetup := Rec;
                   IF SMTPMailSetup.INSERT THEN;
                 END;
                 INSERT;
                 IF SMTPMailSetup.HasPassword THEN
                   Password := DummyPasswordTxt;
               END;

    OnModifyRecord=VAR
                     SMTPMailSetup@1000 : Record 409;
                   BEGIN
                     SMTPMailSetup := Rec;
                     IF Password <> DummyPasswordTxt THEN
                       SMTPMailSetup.SetPassword(Password);
                     SMTPMailSetup.MODIFY(TRUE);
                     Rec := SMTPMailSetup;
                   END;

    OnQueryClosePage=BEGIN
                       IF "User ID" = '' THEN
                         RemovePassword;
                     END;

    ActionList=ACTIONS
    {
      { 1       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
    }
  }
  CONTROLS
  {
    { 5   ;0   ;Container ;
                ContainerType=ContentArea }

    { 4   ;1   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=Your invoices will be sent from the following email account. }

    { 2   ;2   ;Field     ;
                Name=Email Provider;
                CaptionML=ENU=Email Account type;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=EmailProvider;
                Style=Strong;
                StyleExpr=TRUE;
                OnValidate=BEGIN
                             CASE EmailProvider OF
                               EmailProvider::"Office 365":
                                 SMTPMail.ApplyOffice365Smtp(Rec);
                               EmailProvider::Outlook:
                                 SMTPMail.ApplyOutlookSmtp(Rec);
                               EmailProvider::Gmail:
                                 SMTPMail.ApplyGmailSmtp(Rec);
                               EmailProvider::Yahoo:
                                 SMTPMail.ApplyYahooSmtp(Rec);
                               EmailProvider::"Other Email Provider":
                                 "SMTP Server" := '';
                             END;
                             AdvancedSettingsVisible := EmailProvider = EmailProvider::"Other Email Provider";
                           END;

                ShowCaption=No }

    { 12  ;2   ;Group     ;
                Visible=AdvancedSettingsVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Enter the SMTP Server Details. }

    { 8   ;3   ;Field     ;
                Name=Authentication;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Authentication }

    { 7   ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="SMTP Server";
                ShowMandatory=TRUE }

    { 6   ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="SMTP Server Port" }

    { 3   ;3   ;Field     ;
                Name=Secure Connection;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Secure Connection" }

    { 10  ;2   ;Field     ;
                ExtendedDatatype=E-Mail;
                CaptionML=ENU=Email;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="User ID" }

    { 9   ;2   ;Field     ;
                Name=Password;
                ExtendedDatatype=Masked;
                CaptionML=ENU=Password;
                ToolTipML=ENU=Specifies the password used for logging into the server.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Password }

    { 11  ;2   ;Field     ;
                Name=TestEmailLbl;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=TestEmailLbl;
                Editable=FALSE;
                Style=StandardAccent;
                StyleExpr=TRUE;
                OnDrillDown=BEGIN
                              IF ("User ID" = '') OR (Password = '') THEN
                                ERROR(SetupEmailErr);
                              SendTestEmailAction;
                            END;

                ShowCaption=No }

  }
  CODE
  {
    VAR
      SMTPMail@1016 : Codeunit 400;
      AdvancedSettingsVisible@1013 : Boolean;
      Password@1005 : Text[250];
      EmailProvider@1003 : 'Office 365,Outlook,Gmail,Yahoo,Other Email Provider';
      DummyPasswordTxt@1001 : TextConst '@@@={Locked};ENU=***';
      TestEmailLbl@1000 : TextConst 'ENU=Send test email';
      SetupEmailErr@1002 : TextConst 'ENU=You must setup the email account before sending a test email.';

    LOCAL PROCEDURE StoreSMTPSetup@31();
    VAR
      SMTPMailSetup@1000 : Record 409;
    BEGIN
      IF NOT SMTPMailSetup.GET THEN BEGIN
        SMTPMailSetup.INIT;
        SMTPMailSetup.INSERT;
      END;

      SMTPMailSetup.TRANSFERFIELDS(Rec,FALSE);
      IF Password <> DummyPasswordTxt THEN
        SMTPMailSetup.SetPassword(Password);
      SMTPMailSetup.MODIFY(TRUE);
      COMMIT;
    END;

    LOCAL PROCEDURE SendTestEmailAction@10();
    BEGIN
      StoreSMTPSetup;
      CODEUNIT.RUN(CODEUNIT::"SMTP Test Mail");
    END;

    LOCAL PROCEDURE GetEmailProvider@11(VAR SMTPMailSetup@1000 : Record 409);
    BEGIN
      IF SMTPMail.IsOffice365Setup(SMTPMailSetup) THEN
        EmailProvider := EmailProvider::"Office 365"
      ELSE
        IF SMTPMail.IsOutlookSetup(SMTPMailSetup) THEN
          EmailProvider := EmailProvider::Outlook
        ELSE
          IF SMTPMail.IsGmailSetup(SMTPMailSetup) THEN
            EmailProvider := EmailProvider::Gmail
          ELSE
            IF SMTPMail.IsYahooSetup(SMTPMailSetup) THEN
              EmailProvider := EmailProvider::Yahoo
            ELSE
              EmailProvider := EmailProvider::"Other Email Provider";
    END;

    BEGIN
    END.
  }
}

