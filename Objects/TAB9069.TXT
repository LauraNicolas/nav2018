OBJECT Table 9069 O365 Sales Cue
{
  OBJECT-PROPERTIES
  {
    Date=06.10.17;
    Time=12:00:00;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=O365 Sales Cue;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Overdue Sales Documents;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("Cust. Ledger Entry" WHERE (Document Type=FILTER(Invoice|Credit Memo),
                                                                                                 Due Date=FIELD(Overdue Date Filter),
                                                                                                 Open=CONST(Yes)));
                                                   CaptionML=ENU=Overdue Sales Documents }
    { 3   ;   ;Customers - Blocked ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count(Customer WHERE (Blocked=FILTER(<>' ')));
                                                   CaptionML=ENU=Customers - Blocked }
    { 4   ;   ;CM Date Filter      ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=CM Date Filter }
    { 5   ;   ;YTD Date Filter     ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=YTD Date Filter }
    { 6   ;   ;Due Date Filter     ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Due Date Filter }
    { 7   ;   ;Overdue Date Filter ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Overdue Date Filter }
    { 8   ;   ;User ID Filter      ;Code50        ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=User ID Filter }
    { 9   ;   ;Non-Applied Payments;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Bank Acc. Reconciliation" WHERE (Statement Type=CONST(Payment Application)));
                                                   CaptionML=ENU=Non-Applied Payments }
    { 10  ;   ;Invoiced YTD        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Posting Date=FIELD(YTD Date Filter),
                                                                                                                      Entry Type=CONST(Initial Entry),
                                                                                                                      Document Type=FILTER(>Payment)));
                                                   CaptionML=ENU=Invoiced YTD }
    { 11  ;   ;Invoiced CM         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Posting Date=FIELD(CM Date Filter),
                                                                                                                      Entry Type=CONST(Initial Entry),
                                                                                                                      Document Type=FILTER(>Payment)));
                                                   CaptionML=ENU=Invoiced CM }
    { 12  ;   ;Sales Invoices Outstanding;Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)");
                                                   CaptionML=ENU=Sales Invoices Outstanding }
    { 13  ;   ;Sales Invoices Overdue;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Initial Entry Due Date=FIELD(Overdue Date Filter)));
                                                   CaptionML=ENU=Sales Invoices Overdue }
    { 14  ;   ;No. of Quotes       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Quote)));
                                                   CaptionML=ENU=No. of Quotes }
    { 15  ;   ;No. of Draft Invoices;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Invoice)));
                                                   CaptionML=ENU=No. of Draft Invoices }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NoOutstandingMsg@1001 : TextConst 'ENU=There are no outstanding invoices.';
      NoOverdueMsg@1000 : TextConst 'ENU=There are no overdue invoices.';

    [Internal]
    PROCEDURE OnOpenActivitiesPage@1(VAR CurrencyFormatTxt@1004 : Text);
    VAR
      AccountingPeriod@1003 : Record 50;
      GLSetup@1002 : Record 98;
      O365SalesStatistics@1001 : Codeunit 2100;
      RoleCenterNotificationMgt@1000 : Codeunit 1430;
    BEGIN
      RESET;
      IF NOT GET THEN BEGIN
        INIT;
        INSERT;
      END;

      IF GUIALLOWED THEN
        RunWizardIfNoCustomers;

      O365SalesStatistics.GetCurrentAccountingPeriod(AccountingPeriod);

      SETFILTER("Due Date Filter",'..%1',WORKDATE);
      SETFILTER("Overdue Date Filter",'<%1',WORKDATE);
      SETFILTER("YTD Date Filter",'%1..%2',AccountingPeriod."Starting Date",WORKDATE);
      SETFILTER("CM Date Filter",'%1..%2',CALCDATE('<CM+1D-1M>',WORKDATE),WORKDATE);

      GLSetup.GET;

      CurrencyFormatTxt := STRSUBSTNO('%1<precision, 0:0><standard format, 0>',GLSetup.GetCurrencySymbol);

      IF GUIALLOWED THEN
        RoleCenterNotificationMgt.ShowNotifications;
    END;

    LOCAL PROCEDURE RunWizardIfNoCustomers@2();
    VAR
      Item@1001 : Record 27;
      O365SalesInitialSetup@1002 : Codeunit 2110;
      O365FirstInvoiceWizard@1000 : Page 2142;
    BEGIN
      IF NOT Item.ISEMPTY THEN
        EXIT;
      COMMIT;
      O365FirstInvoiceWizard.RUNMODAL;
      IF O365FirstInvoiceWizard.HasCompleted THEN
        O365SalesInitialSetup.NotifySetupComplete(O365FirstInvoiceWizard.GetInvoiceNo);
    END;

    [Internal]
    PROCEDURE ShowInvoices@3(OnlyOverdue@1000 : Boolean);
    VAR
      CustLedgerEntry@1001 : Record 21;
      Customer@1003 : Record 18;
      O365SalesStatistics@1002 : Codeunit 2100;
    BEGIN
      CustLedgerEntry.SETRANGE(Open,TRUE);
      IF OnlyOverdue THEN
        CustLedgerEntry.SETFILTER("Due Date",'<%1',WORKDATE);

      IF O365SalesStatistics.GetCustomersFromCustLedgerEntries(CustLedgerEntry,Customer) THEN
        PAGE.RUN(PAGE::"O365 Outstanding Customer List",Customer)
      ELSE // no customers
        IF OnlyOverdue THEN
          MESSAGE(NoOverdueMsg)
        ELSE
          MESSAGE(NoOutstandingMsg);
    END;

    [Internal]
    PROCEDURE ShowMonthlySalesOverview@4();
    VAR
      TempNameValueBuffer@1002 : TEMPORARY Record 823;
      Month@1000 : Integer;
    BEGIN
      Month := DATE2DMY(WORKDATE,2);
      TempNameValueBuffer.INIT;
      TempNameValueBuffer.ID := Month;
      TempNameValueBuffer.INSERT;

      PAGE.RUN(PAGE::"O365 Sales Month Summary",TempNameValueBuffer);
    END;

    [Internal]
    PROCEDURE ShowYearlySalesOverview@5();
    VAR
      O365SalesStatistics@1000 : Codeunit 2100;
    BEGIN
      IF O365SalesStatistics.GetRelativeMonthToFY <> 1 THEN
        PAGE.RUN(PAGE::"O365 Sales Year Summary")
      ELSE
        ShowMonthlySalesOverview; // the current month is the first month in the FY
    END;

    PROCEDURE ShowQuotes@6();
    BEGIN
      ShowUnpostedDocuments(TRUE);
    END;

    PROCEDURE ShowDraftInvoices@7();
    BEGIN
      ShowUnpostedDocuments(FALSE);
    END;

    PROCEDURE ShowUnpostedDocuments@11(FilterToQuotes@1001 : Boolean);
    VAR
      O365SalesDocument@1000 : Record 2103;
    BEGIN
      O365SalesDocument.SETRANGE(Posted,FALSE);
      IF FilterToQuotes THEN
        O365SalesDocument.SETRANGE("Document Type",O365SalesDocument."Document Type"::Quote)
      ELSE
        O365SalesDocument.SETRANGE("Document Type",O365SalesDocument."Document Type"::Invoice);
      PAGE.RUN(PAGE::"O365 Customer Sales Documents",O365SalesDocument);
    END;

    BEGIN
    END.
  }
}

