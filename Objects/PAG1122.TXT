OBJECT Page 1122 Chart of Cost Centers
{
  OBJECT-PROPERTIES
  {
    Date=28.05.17;
    Time=12:00:00;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Chart of Cost Centers;
    SourceTable=Table1112;
    DelayedInsert=Yes;
    SourceTableView=SORTING(Sorting Order);
    PageType=List;
    CardPageID=Cost Center Card;
    OnAfterGetRecord=BEGIN
                       NameIndent := 0;
                       CodeOnFormat;
                       NameOnFormat;
                       NetChangeOnFormat;
                       BalanceatDateC15OnFormat;
                       BalancetoAllocateOnFormat;
                     END;

    OnDeleteRecord=BEGIN
                     CurrPage.SETSELECTIONFILTER(Rec);
                     ConfirmDeleteIfEntriesExist(Rec,FALSE);
                     RESET;
                   END;

    ActionList=ACTIONS
    {
      { 1       ;0   ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 2       ;1   ;ActionGroup;
                      CaptionML=ENU=&Cost Center;
                      Image=CostCenter }
      { 3       ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Cost E&ntries;
                      RunObject=Page 1103;
                      RunPageView=SORTING(Cost Center Code,Cost Type No.,Allocated,Posting Date);
                      RunPageLink=Cost Center Code=FIELD(Code);
                      Image=CostEntries }
      { 4       ;2   ;Separator  }
      { 5       ;2   ;Action    ;
                      ShortCutKey=F7;
                      CaptionML=ENU=&Balance;
                      Image=Balance;
                      OnAction=BEGIN
                                 IF Totaling = '' THEN
                                   CostType.SETFILTER("Cost Center Filter",Code)
                                 ELSE
                                   CostType.SETFILTER("Cost Center Filter",Totaling);

                                 PAGE.RUN(PAGE::"Cost Type Balance",CostType);
                               END;
                                }
      { 6       ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 7       ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 8       ;2   ;Action    ;
                      CaptionML=ENU=I&ndent Cost Centers;
                      Promoted=Yes;
                      Image=IndentChartOfAccounts;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CostAccMgt.IndentCostCentersYN;
                               END;
                                }
      { 9       ;2   ;Action    ;
                      CaptionML=ENU=Get Cost Centers From Dimension;
                      Image=ChangeTo;
                      OnAction=BEGIN
                                 CostAccMgt.CreateCostCenters;
                               END;
                                }
      { 11      ;1   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      CaptionML=ENU=Dimension Values;
                      Promoted=Yes;
                      Image=Dimensions;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DimValue@1000 : Record 349;
                               BEGIN
                                 CostAccSetup.GET;
                                 DimValue.SETRANGE("Dimension Code",CostAccSetup."Cost Center Dimension");
                                 PAGE.RUN(0,DimValue);
                               END;
                                }
      { 12      ;0   ;ActionContainer;
                      ActionContainerType=Reports }
      { 14      ;1   ;Action    ;
                      CaptionML=ENU=Cost Center with Budget;
                      RunObject=Report 1138;
                      Promoted=No;
                      Image=Report;
                      PromotedCategory=Report }
    }
  }
  CONTROLS
  {
    { 15  ;0   ;Container ;
                ContainerType=ContentArea }

    { 16  ;1   ;Group     ;
                IndentationColumnName=NameIndent;
                IndentationControls=Name;
                GroupType=Repeater }

    { 17  ;2   ;Field     ;
                SourceExpr=Code;
                Style=Strong;
                StyleExpr=Emphasize }

    { 18  ;2   ;Field     ;
                SourceExpr=Name;
                Style=Strong;
                StyleExpr=Emphasize }

    { 19  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the purpose of the cost object, such as Cost Object, Heading, or Begin-Total. Newly created cost objects are automatically assigned the Cost Object type, but you can change this.;
                SourceExpr="Line Type" }

    { 20  ;2   ;Field     ;
                SourceExpr=Totaling }

    { 21  ;2   ;Field     ;
                SourceExpr="Sorting Order" }

    { 23  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the net change in the account balance during the time period in the Date Filter field.;
                SourceExpr="Net Change";
                Style=Strong;
                StyleExpr=Emphasize }

    { 24  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the cost type balance on the last date that is included in the Date Filter field. The contents of the field are calculated by using the entries in the Amount field in the Cost Entry table.;
                SourceExpr="Balance at Date";
                Visible=FALSE;
                Style=Strong;
                StyleExpr=Emphasize }

    { 25  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the balance that has not yet been allocated. The entry in the Allocated field determines if the entry is included in the Balance to Allocate field. The value in the Allocated field is set automatically during the cost allocation.;
                SourceExpr="Balance to Allocate";
                Style=Strong;
                StyleExpr=Emphasize }

    { 26  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the subtype of the cost center. This is an information field and is not used for any other purposes. Choose the field to select the cost subtype.;
                SourceExpr="Cost Subtype" }

    { 27  ;2   ;Field     ;
                SourceExpr="Responsible Person" }

    { 28  ;2   ;Field     ;
                ToolTipML=ENU=Specifies if the record is blocked from being used.;
                SourceExpr=Blocked }

    { 29  ;2   ;Field     ;
                ToolTipML=ENU=Specifies if you want a new page to start immediately after this cost center when you print the chart of cash flow accounts.;
                SourceExpr="New Page";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                ToolTipML=ENU=Specifies whether you want a blank line to appear immediately after this cost center when you print the chart of cost centers. The New Page, Blank Line, and Indentation fields define the layout of the chart of cost centers.;
                SourceExpr="Blank Line";
                Visible=FALSE }

    { 31  ;2   ;Field     ;
                SourceExpr=Comment;
                Visible=FALSE }

  }
  CODE
  {
    VAR
      CostType@1000 : Record 1103;
      CostAccSetup@1008 : Record 1108;
      CostAccMgt@1001 : Codeunit 1100;
      Emphasize@1002 : Boolean INDATASET;
      NameIndent@1004 : Integer INDATASET;

    LOCAL PROCEDURE CodeOnFormat@1();
    BEGIN
      Emphasize := "Line Type" <> "Line Type"::"Cost Center";
    END;

    LOCAL PROCEDURE NameOnFormat@2();
    BEGIN
      NameIndent := Indentation;
      Emphasize := "Line Type" <> "Line Type"::"Cost Center";
    END;

    LOCAL PROCEDURE NetChangeOnFormat@3();
    BEGIN
      Emphasize := "Line Type" <> "Line Type"::"Cost Center";
    END;

    LOCAL PROCEDURE BalanceatDateC15OnFormat@4();
    BEGIN
      Emphasize := "Line Type" <> "Line Type"::"Cost Center";
    END;

    LOCAL PROCEDURE BalancetoAllocateOnFormat@5();
    BEGIN
      Emphasize := "Line Type" <> "Line Type"::"Cost Center";
    END;

    [Internal]
    PROCEDURE GetSelectionFilter@6() : Text;
    VAR
      CostCenter@1004 : Record 1112;
      SelectionFilterManagement@1001 : Codeunit 46;
    BEGIN
      CurrPage.SETSELECTIONFILTER(CostCenter);
      EXIT(SelectionFilterManagement.GetSelectionFilterForCostCenter(CostCenter));
    END;

    BEGIN
    END.
  }
}

