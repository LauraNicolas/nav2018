OBJECT Codeunit 140 EC Sales List Suggest Lines
{
  OBJECT-PROPERTIES
  {
    Date=28.05.17;
    Time=12:00:00;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    TableNo=740;
    OnRun=BEGIN
            VATReportHeader := Rec;

            PopulateVatEntryLines;
          END;

  }
  CODE
  {
    VAR
      VATReportHeader@1000 : Record 740;

    LOCAL PROCEDURE PopulateVatEntryLines@1();
    VAR
      CompanyInformation@1001 : Record 79;
      EUVATEntries@1000 : Query 141;
    BEGIN
      CompanyInformation.GET;
      EUVATEntries.SETRANGE(PostingDate,VATReportHeader."Start Date",VATReportHeader."End Date");
      EUVATEntries.SETFILTER(CountryCode,'<>%1',CompanyInformation."Country/Region Code");

      EUVATEntries.OPEN;
      WHILE EUVATEntries.READ DO
        AddOrUpdateECLLine(EUVATEntries);
      RowsTotalCorrection;
    END;

    LOCAL PROCEDURE GetECLLine@2(VAR ECSLVATReportLine@1001 : Record 362;EUVATEntries@1000 : Query 141);
    VAR
      LastId@1002 : Integer;
      TrnIndicator@1003 : Integer;
    BEGIN
      ECSLVATReportLine.SETRANGE("Report No.",VATReportHeader."No.");
      ECSLVATReportLine.SETRANGE("Country Code",EUVATEntries.CountryCode);
      ECSLVATReportLine.SETRANGE("Customer VAT Reg. No.",EUVATEntries.VAT_Registration_No);
      TrnIndicator := GetIndicatorCode(EUVATEntries.EU_3_Party_Trade,EUVATEntries.EU_Service);
      ECSLVATReportLine.SETRANGE("Transaction Indicator",TrnIndicator);

      IF NOT ECSLVATReportLine.FINDFIRST THEN BEGIN
        ECSLVATReportLine.RESET;
        IF ECSLVATReportLine.FINDLAST THEN
          LastId := ECSLVATReportLine."Line No.";

        ECSLVATReportLine.INIT;
        ECSLVATReportLine."Line No." := LastId + 1;
        ECSLVATReportLine.VALIDATE("Report No.",VATReportHeader."No.");
        ECSLVATReportLine.VALIDATE("Country Code",EUVATEntries.CountryCode);
        ECSLVATReportLine.VALIDATE("Customer VAT Reg. No.",EUVATEntries.VAT_Registration_No);
        ECSLVATReportLine.VALIDATE("Transaction Indicator",TrnIndicator);
        ECSLVATReportLine.INSERT;
      END;
    END;

    LOCAL PROCEDURE AddOrUpdateECLLine@7(EUVATEntries@1000 : Query 141);
    VAR
      ECSLVATReportLine@1001 : Record 362;
    BEGIN
      GetECLLine(ECSLVATReportLine,EUVATEntries);
      ECSLVATReportLine."Total Value Of Supplies" += EUVATEntries.Base;
      AddToRepLineRelation(EUVATEntries,ECSLVATReportLine);
      ECSLVATReportLine.MODIFY(TRUE);
    END;

    LOCAL PROCEDURE GetIndicatorCode@89(EU3rdPartyTrade@1000 : Boolean;EUService@1002 : Boolean) : Integer;
    BEGIN
      IF EUService THEN
        EXIT(3);

      IF EU3rdPartyTrade THEN
        EXIT(2);

      EXIT(0);
    END;

    LOCAL PROCEDURE AddToRepLineRelation@6(EUVATEntries@1000 : Query 141;ECSLVATReportLine@1002 : Record 362);
    VAR
      ECSLVATReportLineRelation@1001 : Record 143;
    BEGIN
      ECSLVATReportLineRelation.VALIDATE("ECSL Report No.",VATReportHeader."No.");
      ECSLVATReportLineRelation.VALIDATE("ECSL Line No.",ECSLVATReportLine."Line No.");
      ECSLVATReportLineRelation.VALIDATE("VAT Entry No.",EUVATEntries.Entry_No);
      ECSLVATReportLineRelation.INSERT(TRUE);
    END;

    LOCAL PROCEDURE RowsTotalCorrection@90();
    VAR
      ECSLVATReportLine@1010 : Record 362;
    BEGIN
      ECSLVATReportLine.SETRANGE("Report No.",VATReportHeader."No.");

      IF NOT ECSLVATReportLine.FINDSET THEN
        EXIT;
      REPEAT
        ECSLVATReportLine."Total Value Of Supplies" := -ROUND(ECSLVATReportLine."Total Value Of Supplies",1);
        ECSLVATReportLine.MODIFY(TRUE);
      UNTIL ECSLVATReportLine.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

