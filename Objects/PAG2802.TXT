OBJECT Page 2802 Native - Item Entity
{
  OBJECT-PROPERTIES
  {
    Date=28.05.17;
    Time=12:00:00;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=[@@@={Locked};
               ENU=invoicingItems];
    SourceTable=Table27;
    DelayedInsert=Yes;
    PageType=List;
    OnAfterGetRecord=BEGIN
                       SetCalculatedFields;
                     END;

    OnNewRecord=BEGIN
                  ClearCalculatedFields;
                END;

    OnInsertRecord=VAR
                     GraphCollectionMgtItem@1002 : Codeunit 5470;
                   BEGIN
                     GraphCollectionMgtItem.InsertItem(Rec,TempFieldSet,BaseUnitOfMeasureJSONText,ItemCategoryJSONText);

                     SetCalculatedFields;
                     EXIT(FALSE);
                   END;

    OnModifyRecord=VAR
                     Item@1001 : Record 27;
                     GraphCollectionMgtItem@1000 : Codeunit 5470;
                   BEGIN
                     Item.SETRANGE(Id,Id);
                     Item.FINDFIRST;

                     GraphCollectionMgtItem.ProcessComplexTypes(
                       Rec,
                       BaseUnitOfMeasureJSONText,
                       ItemCategoryJSONText
                       );

                     IF "No." = Item."No." THEN
                       MODIFY(TRUE)
                     ELSE BEGIN
                       Item.TRANSFERFIELDS(Rec,FALSE);
                       Item.RENAME("No.");
                       TRANSFERFIELDS(Item,TRUE);
                     END;

                     SetCalculatedFields;

                     EXIT(FALSE);
                   END;

    ODataKeyFields=Id;
  }
  CONTROLS
  {
    { 18  ;0   ;Container ;
                ContainerType=ContentArea }

    { 17  ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 16  ;2   ;Field     ;
                Name=id;
                CaptionML=[@@@={Locked};
                           ENU=Id];
                ApplicationArea=#All;
                SourceExpr=Id }

    { 15  ;2   ;Field     ;
                Name=number;
                CaptionML=[@@@={Locked};
                           ENU=Number];
                ApplicationArea=#All;
                SourceExpr="No." }

    { 14  ;2   ;Field     ;
                Name=displayName;
                CaptionML=[@@@={Locked};
                           ENU=displayName];
                ToolTipML=ENU=Specifies the Description for the Item.;
                ApplicationArea=#All;
                SourceExpr=Description;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO(Description));
                           END;
                            }

    { 4   ;2   ;Field     ;
                Name=type;
                CaptionML=[@@@={Locked};
                           ENU=type];
                ApplicationArea=#All;
                SourceExpr=Type }

    { 20  ;2   ;Field     ;
                Name=baseUnitOfMeasure;
                CaptionML=[@@@={Locked};
                           ENU=BaseUnitOfMeasure];
                ToolTipML=ENU=Specifies the Base Unit of Measure.;
                ApplicationArea=#All;
                SourceExpr=BaseUnitOfMeasureJSONText;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Base Unit of Measure"));
                           END;

                ODataEDMType=ITEM-UOM }

    { 10  ;2   ;Field     ;
                Name=unitPrice;
                CaptionML=[@@@={Locked};
                           ENU=UnitPrice];
                ApplicationArea=#All;
                SourceExpr="Unit Price";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Unit Price"));
                           END;
                            }

    { 3   ;2   ;Field     ;
                Name=taxable;
                CaptionML=[@@@={Locked};
                           ENU=taxable];
                ToolTipML=ENU=Specifies the tax group code for the tax-detail entry.;
                ApplicationArea=#All;
                NotBlank=Yes;
                SourceExpr=Taxable;
                OnValidate=VAR
                             TaxSetup@1000 : Record 326;
                             TaxGroup@1001 : Record 321;
                           BEGIN
                             IF TaxSetup.GET AND (TaxSetup."Non-Taxable Tax Group Code" <> '') THEN BEGIN
                               IF Taxable THEN
                                 TaxGroup.SETFILTER(Code,'<>%1',TaxSetup."Non-Taxable Tax Group Code")
                               ELSE
                                 TaxGroup.SETFILTER(Code,'%1',TaxSetup."Non-Taxable Tax Group Code")
                             END;

                             IF TaxGroup.FINDFIRST THEN BEGIN
                               VALIDATE("Tax Group Code",TaxGroup.Code);
                               RegisterFieldSet(FIELDNO("Tax Group Code"));
                             END;
                           END;

                ShowMandatory=TRUE }

    { 1   ;2   ;Field     ;
                Name=taxGroupCode;
                CaptionML=[@@@={Locked};
                           ENU=taxGroupCode];
                ApplicationArea=#All;
                SourceExpr="Tax Group Code";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Tax Group Code"));
                           END;
                            }

    { 2   ;2   ;Field     ;
                Name=itemVATCode;
                CaptionML=[@@@={Locked};
                           ENU=itemVATCode];
                ApplicationArea=#All;
                SourceExpr="VAT Prod. Posting Group" }

    { 19  ;2   ;Field     ;
                Name=lastModifiedDateTime;
                CaptionML=[@@@={Locked};
                           ENU=LastModifiedDateTime];
                ApplicationArea=#All;
                SourceExpr="Last DateTime Modified";
                Editable=FALSE }

  }
  CODE
  {
    VAR
      TempFieldSet@1011 : TEMPORARY Record 2000000041;
      BaseUnitOfMeasureJSONText@1002 : Text;
      ItemCategoryJSONText@1003 : Text;
      Taxable@1004 : Boolean;

    LOCAL PROCEDURE SetCalculatedFields@6();
    VAR
      TaxSetup@1001 : Record 326;
      GraphCollectionMgtItem@1000 : Codeunit 5470;
    BEGIN
      // UOM
      BaseUnitOfMeasureJSONText := GraphCollectionMgtItem.ItemUnitOfMeasureToJSON(Rec,"Base Unit of Measure");
      ItemCategoryJSONText := GraphCollectionMgtItem.ItemCategoryToJSON("Item Category Code");

      IF TaxSetup.GET THEN
        Taxable := "Tax Group Code" <> TaxSetup."Non-Taxable Tax Group Code"
      ELSE
        Taxable := FALSE;
    END;

    LOCAL PROCEDURE ClearCalculatedFields@10();
    BEGIN
      CLEAR(Id);
      CLEAR(BaseUnitOfMeasureJSONText);
      CLEAR(ItemCategoryJSONText);
      CLEAR(Taxable);
      TempFieldSet.DELETEALL;
    END;

    LOCAL PROCEDURE RegisterFieldSet@11(FieldNo@1000 : Integer);
    BEGIN
      IF TempFieldSet.GET(DATABASE::Item,FieldNo) THEN
        EXIT;

      TempFieldSet.INIT;
      TempFieldSet.TableNo := DATABASE::Item;
      TempFieldSet.VALIDATE("No.",FieldNo);
      TempFieldSet.INSERT(TRUE);
    END;

    BEGIN
    END.
  }
}

