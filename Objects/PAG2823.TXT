OBJECT Page 2823 Native - Email Preview
{
  OBJECT-PROPERTIES
  {
    Date=06.10.17;
    Time=12:00:00;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    CaptionML=[@@@={Locked};
               ENU=nativeInvoicingEmailPreview];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5509;
    PageType=List;
    SourceTableTemporary=Yes;
    OnFindRecord=VAR
                   DocumentId@1005 : GUID;
                   DocumentIdFilter@1001 : Text;
                   FilterView@1000 : Text;
                 BEGIN
                   IF NOT IsGenerated THEN BEGIN
                     FilterView := GETVIEW;
                     DocumentIdFilter := GETFILTER("Document Id");
                     IF DocumentIdFilter = '' THEN
                       DocumentIdFilter := GETFILTER(Id);
                     SETVIEW(FilterView);
                     DocumentId := GetDocumentId(DocumentIdFilter);
                     IF ISNULLGUID(DocumentId) THEN
                       EXIT(FALSE);
                     SetCalculatedFields(DocumentId);
                     IsGenerated := TRUE;
                   END;
                   EXIT(TRUE);
                 END;

    OnModifyRecord=VAR
                     EmailParameter@1000 : Record 9510;
                   BEGIN
                     IF xRec."Document Id" <> "Document Id" THEN
                       ERROR(CannotChangeDocumentIdErr);

                     IF xRec."File Name" <> Subject THEN
                       EmailParameter.SaveParameterValueWithReportUsage(
                         DocumentNo,ReportId,EmailParameter."Parameter Type"::Subject,Subject);
                   END;

    ODataKeyFields=Document Id;
  }
  CONTROLS
  {
    { 18  ;0   ;Container ;
                ContainerType=ContentArea }

    { 17  ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 1   ;2   ;Field     ;
                Name=documentId;
                CaptionML=[@@@={Locked};
                           ENU=documentId];
                ApplicationArea=#All;
                SourceExpr="Document Id" }

    { 7   ;2   ;Field     ;
                Name=email;
                CaptionML=[@@@={Locked};
                           ENU=email];
                ToolTipML=ENU=Specifies email address.;
                ApplicationArea=#All;
                SourceExpr=Email;
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                Name=cc;
                CaptionML=ENU=cc;
                ToolTipML=ENU=Specifies CC address.;
                ApplicationArea=#All;
                SourceExpr=CC;
                Editable=FALSE }

    { 9   ;2   ;Field     ;
                Name=bcc;
                CaptionML=ENU=bcc;
                ToolTipML=ENU=Specifies BCC address.;
                ApplicationArea=#All;
                SourceExpr=BCC;
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                Name=subject;
                CaptionML=ENU=subject;
                ToolTipML=ENU=Specifies e-mail subject.;
                ApplicationArea=#All;
                SourceExpr=Subject;
                OnValidate=BEGIN
                             IF Subject = '' THEN
                               ERROR(EmptyEmailSubjectErr);
                           END;
                            }

    { 3   ;2   ;Field     ;
                Name=body;
                CaptionML=ENU=body;
                ToolTipML=ENU=Specifies e-mail body.;
                ApplicationArea=#All;
                SourceExpr=Body;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      CannotChangeDocumentIdErr@1011 : TextConst '@@@={Locked};ENU=The documentId cannot be changed.';
      CannotFindDocumentErr@1006 : TextConst '@@@={Locked};ENU=The document %1 cannot be found.';
      CannotOpenFileErr@1005 : TextConst '@@@={Locked};ENU=Opening the file failed because of the following error: \%1.';
      DocumentIDNotSpecifiedForAttachmentsErr@1010 : TextConst '@@@={Locked};ENU=You must specify a document ID.';
      DocumentDoesNotExistErr@1009 : TextConst '@@@={Locked};ENU=No document with the specified ID exists.';
      IsGenerated@1002 : Boolean;
      Email@1004 : Text[250];
      CancelledDocumentErr@1000 : TextConst '@@@={Locked};ENU=The document has been cancelled.';
      CC@1015 : Text[250];
      BCC@1016 : Text[250];
      Subject@1007 : Text[250];
      Body@1008 : Text;
      EmptyEmailSubjectErr@1012 : TextConst '@@@={Locked};ENU=The email subject cannot be empty.';
      DocumentNo@1013 : Code[20];
      ReportId@1014 : Integer;

    LOCAL PROCEDURE GetDocumentId@5(DocumentIdFilter@1001 : Text) : GUID;
    VAR
      SalesHeader@1003 : Record 36;
      SalesInvoiceHeader@1004 : Record 112;
      DataTypeManagement@1006 : Codeunit 701;
      DocumentRecordRef@1000 : RecordRef;
      DocumentIdFieldRef@1005 : FieldRef;
      DocumentId@1002 : GUID;
    BEGIN
      IF DocumentIdFilter = '' THEN
        ERROR(DocumentIDNotSpecifiedForAttachmentsErr);

      SalesHeader.SETFILTER(Id,DocumentIdFilter);
      IF SalesHeader.FINDFIRST THEN
        DocumentRecordRef.GETTABLE(SalesHeader)
      ELSE BEGIN
        SalesInvoiceHeader.SETFILTER(Id,DocumentIdFilter);
        IF SalesInvoiceHeader.FINDFIRST THEN BEGIN
          DocumentRecordRef.GETTABLE(SalesInvoiceHeader);
          SalesInvoiceHeader.CALCFIELDS(Cancelled);
          IF SalesInvoiceHeader.Cancelled THEN
            ERROR(CancelledDocumentErr);
        END ELSE
          ERROR(DocumentDoesNotExistErr);
      END;

      DataTypeManagement.FindFieldByName(DocumentRecordRef,DocumentIdFieldRef,SalesHeader.FIELDNAME(Id));
      EVALUATE(DocumentId,FORMAT(DocumentIdFieldRef.VALUE));

      EXIT(DocumentId);
    END;

    LOCAL PROCEDURE SetCalculatedFields@21(DocumentId@1009 : GUID);
    BEGIN
      GetEmailParameters(DocumentId,DocumentNo,ReportId,Email,CC,BCC,Subject,Body);

      INIT;
      Id := DocumentId;
      "Document Id" := DocumentId;
      "File Name" := Subject;
      Type := Type::Email;
      INSERT(TRUE);
    END;

    LOCAL PROCEDURE GetEmailParameters@1(DocumentId@1009 : GUID;VAR DocumentNo@1019 : Code[20];VAR ReportId@1018 : Integer;VAR EmailAddress@1011 : Text[250];VAR EmailCcAddress@1024 : Text[250];VAR EmailBccAddress@1020 : Text[250];VAR EmailSubject@1004 : Text[250];VAR EmailBody@1010 : Text);
    VAR
      SalesInvoiceHeader@1002 : Record 112;
      SalesHeader@1006 : Record 36;
      ReportSelections@1005 : Record 77;
      TempReportSelections@1012 : TEMPORARY Record 77;
      O365EmailSetup@1021 : Record 2118;
      DocumentMailing@1015 : Codeunit 260;
      NativeReports@1013 : Codeunit 2822;
      File@1007 : File;
      InStream@1008 : InStream;
      RecordVariant@1000 : Variant;
      CustomerNo@1003 : Code[20];
      FilePath@1001 : Text[250];
      DocumentName@1016 : Text[250];
      BodyLoaded@1022 : Boolean;
    BEGIN
      SalesHeader.SETRANGE(Id,DocumentId);
      IF SalesHeader.FINDFIRST THEN
        CASE SalesHeader."Document Type" OF
          SalesHeader."Document Type"::Invoice:
            BEGIN
              RecordVariant := SalesHeader;
              DocumentName := SalesHeader.GetDocTypeTxt;
              DocumentNo := SalesHeader."No.";
              CustomerNo := SalesHeader."Sell-to Customer No.";
              ReportId := NativeReports.DraftSalesInvoiceReportId;
            END;
          SalesHeader."Document Type"::Quote:
            BEGIN
              RecordVariant := SalesHeader;
              DocumentName := SalesHeader.GetDocTypeTxt;
              DocumentNo := SalesHeader."No.";
              CustomerNo := SalesHeader."Sell-to Customer No.";
              ReportId := NativeReports.SalesQuoteReportId;
            END;
          ELSE
            ERROR(CannotFindDocumentErr,DocumentId);
        END
      ELSE BEGIN
        SalesInvoiceHeader.SETRANGE(Id,DocumentId);
        IF NOT SalesInvoiceHeader.FINDFIRST THEN
          ERROR(CannotFindDocumentErr,DocumentId);
        DocumentName := SalesInvoiceHeader.GetDefaultEmailDocumentName;
        RecordVariant := SalesInvoiceHeader;
        DocumentNo := SalesInvoiceHeader."No.";
        CustomerNo := SalesInvoiceHeader."Sell-to Customer No.";
        ReportId := NativeReports.PostedSalesInvoiceReportId;
      END;

      EmailSubject := DocumentMailing.GetEmailSubject(DocumentNo,DocumentName,ReportId);

      IF ReportSelections.FindEmailBodyUsage(ReportId,CustomerNo,TempReportSelections) THEN
        IF ReportSelections.GetEmailBody(FilePath,ReportId,RecordVariant,CustomerNo,EmailAddress) THEN BEGIN
          IF NOT File.OPEN(FilePath) THEN
            ERROR(CannotOpenFileErr,GETLASTERRORTEXT);
          File.CREATEINSTREAM(InStream);
          InStream.READTEXT(EmailBody);
          File.CLOSE;
          IF ERASE(FilePath) THEN;
          BodyLoaded := TRUE;
        END;

      IF NOT BodyLoaded THEN
        EmailAddress := ReportSelections.GetCustEmailAddress(CustomerNo);

      EmailCcAddress := O365EmailSetup.GetCCAddressesFromO365EmailSetup;
      EmailBccAddress := O365EmailSetup.GetBCCAddressesFromO365EmailSetup;
    END;

    BEGIN
    END.
  }
}

