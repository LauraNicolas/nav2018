OBJECT Page 5340 CRM Systemuser List
{
  OBJECT-PROPERTIES
  {
    Date=28.05.17;
    Time=12:00:00;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Microsoft Dynamics CRM Users;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5340;
    SourceTableView=SORTING(FullName);
    PageType=List;
    OnInit=BEGIN
             CODEUNIT.RUN(CODEUNIT::"CRM Integration Management");
           END;

    OnAfterGetRecord=VAR
                       CRMIntegrationRecord@1000 : Record 5331;
                       SalespersonPurchaser@1004 : Record 13;
                       RecordID@1001 : RecordID;
                     BEGIN
                       IF CRMIntegrationRecord.FindRecordIDFromID(SystemUserId,DATABASE::"Salesperson/Purchaser",RecordID) THEN BEGIN
                         IF SalespersonPurchaser.GET(RecordID) THEN
                           InsertUpdateTempCRMSystemUser(SalespersonPurchaser.Code,FALSE)
                         ELSE
                           InsertUpdateTempCRMSystemUser('',FALSE);
                         IF CurrentlyCoupledCRMSystemuser.SystemUserId = SystemUserId THEN BEGIN
                           Coupled := 'Current';
                           FirstColumnStyle := 'Strong';
                         END ELSE BEGIN
                           Coupled := 'Yes';
                           FirstColumnStyle := 'Subordinate';
                         END
                       END ELSE BEGIN
                         InsertUpdateTempCRMSystemUser('',FALSE);
                         Coupled := 'No';
                         FirstColumnStyle := 'None';
                       END;
                     END;

    ActionList=ACTIONS
    {
      { 7       ;    ;ActionContainer;
                      ActionContainerType=NewDocumentItems }
      { 8       ;1   ;Action    ;
                      Name=CreateFromCRM;
                      CaptionML=ENU=Create Salesperson in Dynamics NAV;
                      ToolTipML=ENU=Create the Dynamics CRM user as a salesperson in Dynamics NAV.;
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NewCustomer;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 CRMSystemuser@1000 : Record 5340;
                                 CRMIntegrationManagement@1001 : Codeunit 5330;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(CRMSystemuser);
                                 CRMIntegrationManagement.CreateNewRecordsFromCRM(CRMSystemuser);
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=Couple;
                      CaptionML=ENU=Couple;
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=LinkAccount;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 SalespersonPurchaser@1002 : Record 13;
                                 CRMIntegrationManagement@1000 : Codeunit 5330;
                                 Synchronize@1004 : Boolean;
                                 Direction@1005 : Option;
                               BEGIN
                                 TempCRMSystemuser.RESET;
                                 TempCRMSystemuser.SETRANGE(IsSyncWithDirectory,TRUE);
                                 IF TempCRMSystemuser.FINDSET THEN
                                   REPEAT
                                     SalespersonPurchaser.GET(TempCRMSystemuser.FirstName);
                                     CRMIntegrationManagement.CoupleCRMEntity(SalespersonPurchaser.RECORDID,TempCRMSystemuser.SystemUserId,Synchronize,Direction);
                                   UNTIL TempCRMSystemuser.NEXT = 0;
                                 TempCRMSystemuser.MODIFYALL(IsSyncWithDirectory,FALSE);
                                 TempCRMSystemuser.MODIFYALL(IsDisabled,FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                CaptionML=ENU=Name;
                ToolTipML=ENU=Specifies data from a corresponding field in a Microsoft Dynamics CRM entity. For more information about Microsoft Dynamics CRM, see Microsoft Dynamics CRM Help Center.;
                ApplicationArea=#Suite;
                SourceExpr=FullName;
                Editable=FALSE;
                StyleExpr=FirstColumnStyle }

    { 5   ;2   ;Field     ;
                ExtendedDatatype=E-Mail;
                CaptionML=ENU=Email Address;
                ToolTipML=ENU=Specifies the email address.;
                ApplicationArea=#Suite;
                SourceExpr=InternalEMailAddress;
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                CaptionML=ENU=Mobile Phone;
                ToolTipML=ENU=Specifies data from a corresponding field in a Microsoft Dynamics CRM entity. For more information about Microsoft Dynamics CRM, see Microsoft Dynamics CRM Help Center.;
                ApplicationArea=#Suite;
                SourceExpr=MobilePhone;
                Editable=FALSE }

    { 3   ;2   ;Field     ;
                Name=Coupled;
                CaptionML=ENU=Coupled;
                ToolTipML=ENU=Specifies if the Dynamics CRM record is coupled to Dynamics NAV.;
                ApplicationArea=#Suite;
                SourceExpr=Coupled;
                Editable=FALSE }

    { 9   ;2   ;Field     ;
                Name=SalespersonPurchaserCode;
                CaptionML=ENU=Salesperson/Purchaser Code;
                ApplicationArea=#Suite;
                SourceExpr=TempCRMSystemuser.FirstName;
                TableRelation=Salesperson/Purchaser.Code;
                OnLookup=VAR
                           SalespersonPurchaser@1001 : Record 13;
                           SalespersonsPurchasers@1000 : Page 14;
                         BEGIN
                           SalespersonsPurchasers.LOOKUPMODE(TRUE);
                           IF SalespersonsPurchasers.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             SalespersonsPurchasers.GETRECORD(SalespersonPurchaser);
                             InsertUpdateTempCRMSystemUser(SalespersonPurchaser.Code,TRUE);
                             CleanDuplicateSalespersonRecords(SalespersonPurchaser.Code);
                           END;
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

  }
  CODE
  {
    VAR
      CurrentlyCoupledCRMSystemuser@1003 : Record 5340;
      TempCRMSystemuser@1002 : TEMPORARY Record 5340;
      Coupled@1001 : Text;
      FirstColumnStyle@1004 : Text;

    [External]
    PROCEDURE SetCurrentlyCoupledCRMSystemuser@2(CRMSystemuser@1000 : Record 5340);
    BEGIN
      CurrentlyCoupledCRMSystemuser := CRMSystemuser;
    END;

    LOCAL PROCEDURE InsertUpdateTempCRMSystemUser@7(SalespersonCode@1001 : Code[20];SyncNeeded@1002 : Boolean);
    BEGIN
      // FirstName is used to store coupled/ready to couple Salesperson
      // IsSyncWithDirectory is used to mark CRM User for coupling
      IF TempCRMSystemuser.GET(SystemUserId) THEN BEGIN
        IF NOT TempCRMSystemuser.IsDisabled OR SyncNeeded THEN BEGIN
          TempCRMSystemuser.FirstName := SalespersonCode;
          TempCRMSystemuser.IsSyncWithDirectory := SyncNeeded;
          TempCRMSystemuser.IsDisabled := SyncNeeded;
          TempCRMSystemuser.MODIFY;
        END
      END ELSE BEGIN
        TempCRMSystemuser.SystemUserId := SystemUserId;
        TempCRMSystemuser.FirstName := SalespersonCode;
        TempCRMSystemuser.IsSyncWithDirectory := SyncNeeded;
        TempCRMSystemuser.IsDisabled := SyncNeeded;
        TempCRMSystemuser.INSERT;
      END;
    END;

    LOCAL PROCEDURE CleanDuplicateSalespersonRecords@1(SalesPersonCode@1001 : Code[20]);
    BEGIN
      TempCRMSystemuser.RESET;
      TempCRMSystemuser.SETRANGE(FirstName,SalesPersonCode);
      TempCRMSystemuser.SETRANGE(IsSyncWithDirectory,FALSE);
      IF TempCRMSystemuser.FINDFIRST THEN BEGIN
        TempCRMSystemuser.IsDisabled := TRUE;
        TempCRMSystemuser.FirstName := '';
        TempCRMSystemuser.MODIFY;
      END;
    END;

    BEGIN
    END.
  }
}

