OBJECT Page 5470 Item Entity
{
  OBJECT-PROPERTIES
  {
    Date=28.05.17;
    Time=12:00:00;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=[@@@={Locked};
               ENU=items];
    SourceTable=Table27;
    DelayedInsert=Yes;
    PageType=API;
    OnAfterGetRecord=BEGIN
                       SetCalculatedFields;
                     END;

    OnNewRecord=BEGIN
                  ClearCalculatedFields;
                END;

    OnInsertRecord=VAR
                     GraphCollectionMgtItem@1002 : Codeunit 5470;
                   BEGIN
                     GraphCollectionMgtItem.InsertItem(Rec,TempFieldSet,BaseUnitOfMeasureJSONText,ItemCategoryJSONText);

                     SetCalculatedFields;
                     EXIT(FALSE);
                   END;

    OnModifyRecord=VAR
                     Item@1001 : Record 27;
                     GraphCollectionMgtItem@1000 : Codeunit 5470;
                   BEGIN
                     Item.SETRANGE(Id,Id);
                     Item.FINDFIRST;

                     GraphCollectionMgtItem.ProcessComplexTypes(
                       Rec,
                       BaseUnitOfMeasureJSONText,
                       ItemCategoryJSONText
                       );

                     IF "No." = Item."No." THEN
                       MODIFY(TRUE)
                     ELSE BEGIN
                       Item.TRANSFERFIELDS(Rec,FALSE);
                       Item.RENAME("No.");
                       TRANSFERFIELDS(Item,TRUE);
                     END;

                     SetCalculatedFields;

                     EXIT(FALSE);
                   END;

    ODataKeyFields=Id;
  }
  CONTROLS
  {
    { 18  ;0   ;Container ;
                ContainerType=ContentArea }

    { 17  ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 16  ;2   ;Field     ;
                Name=id;
                CaptionML=[@@@={Locked};
                           ENU=Id];
                ApplicationArea=#All;
                SourceExpr=Id }

    { 15  ;2   ;Field     ;
                Name=number;
                CaptionML=[@@@={Locked};
                           ENU=Number];
                ApplicationArea=#All;
                SourceExpr="No." }

    { 14  ;2   ;Field     ;
                Name=displayName;
                CaptionML=[@@@={Locked};
                           ENU=DisplayName];
                ToolTipML=ENU=Specifies the Description for the Item.;
                ApplicationArea=#All;
                SourceExpr=Description;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO(Description));
                           END;
                            }

    { 11  ;2   ;Field     ;
                Name=type;
                CaptionML=[@@@={Locked};
                           ENU=Type];
                ToolTipML=ENU=Specifies the Type for the Item. Possible values are Inventory and Service.;
                ApplicationArea=#All;
                SourceExpr=Type;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO(Type));
                           END;
                            }

    { 4   ;2   ;Field     ;
                Name=blocked;
                CaptionML=[@@@={Locked};
                           ENU=Blocked];
                ToolTipML=ENU=Specifies whether the item is blocked.;
                ApplicationArea=#All;
                SourceExpr=Blocked;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO(Blocked));
                           END;
                            }

    { 20  ;2   ;Field     ;
                Name=baseUnitOfMeasure;
                CaptionML=[@@@={Locked};
                           ENU=BaseUnitOfMeasure];
                ToolTipML=ENU=Specifies the Base Unit of Measure.;
                ApplicationArea=#All;
                SourceExpr=BaseUnitOfMeasureJSONText;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Base Unit of Measure"));
                           END;

                ODataEDMType=ITEM-UOM }

    { 6   ;2   ;Field     ;
                Name=gtin;
                CaptionML=[@@@={Locked};
                           ENU=GTIN];
                ApplicationArea=#All;
                SourceExpr=GTIN;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO(GTIN));
                           END;
                            }

    { 22  ;2   ;Field     ;
                Name=itemCategory;
                CaptionML=[@@@={Locked};
                           ENU=ItemCategory];
                ToolTipML=ENU=Specifies the Category for the Item.;
                ApplicationArea=#All;
                SourceExpr=ItemCategoryJSONText;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Item Category Code"));
                           END;

                ODataEDMType=ITEM-CATEGORY }

    { 23  ;2   ;Field     ;
                Name=inventory;
                CaptionML=[@@@={Locked};
                           ENU=Inventory];
                ToolTipML=ENU=Specifies the inventory for the item.;
                ApplicationArea=#All;
                SourceExpr=InventoryValue;
                OnValidate=BEGIN
                             VALIDATE(Inventory,InventoryValue);
                             RegisterFieldSet(FIELDNO(Inventory));
                           END;
                            }

    { 10  ;2   ;Field     ;
                Name=unitPrice;
                CaptionML=[@@@={Locked};
                           ENU=UnitPrice];
                ApplicationArea=#All;
                SourceExpr="Unit Price";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Unit Price"));
                           END;
                            }

    { 24  ;2   ;Field     ;
                Name=priceIncludesTax;
                CaptionML=[@@@={Locked};
                           ENU=PriceIncludesTax];
                ApplicationArea=#All;
                SourceExpr="Price Includes VAT";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Price Includes VAT"));
                           END;
                            }

    { 25  ;2   ;Field     ;
                Name=unitCost;
                CaptionML=[@@@={Locked};
                           ENU=UnitCost];
                ApplicationArea=#All;
                SourceExpr="Unit Cost";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Unit Cost"));
                           END;
                            }

    { 3   ;2   ;Field     ;
                Name=taxGroupCode;
                CaptionML=[@@@={Locked};
                           ENU=TaxGroupCode];
                ApplicationArea=#All;
                SourceExpr="Tax Group Code";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Tax Group Code"));
                           END;
                            }

    { 19  ;2   ;Field     ;
                Name=lastModifiedDateTime;
                CaptionML=[@@@={Locked};
                           ENU=LastModifiedDateTime];
                ApplicationArea=#All;
                SourceExpr="Last DateTime Modified";
                Editable=FALSE }

  }
  CODE
  {
    VAR
      TempFieldSet@1011 : TEMPORARY Record 2000000041;
      BaseUnitOfMeasureJSONText@1002 : Text;
      ItemCategoryJSONText@1003 : Text;
      InventoryValue@1000 : Decimal;

    LOCAL PROCEDURE SetCalculatedFields@6();
    VAR
      GraphCollectionMgtItem@1000 : Codeunit 5470;
    BEGIN
      // UOM
      BaseUnitOfMeasureJSONText := GraphCollectionMgtItem.ItemUnitOfMeasureToJSON(Rec,"Base Unit of Measure");

      // Category
      ItemCategoryJSONText := GraphCollectionMgtItem.ItemCategoryToJSON("Item Category Code");

      // Inventory
      CALCFIELDS(Inventory);
      InventoryValue := Inventory;
    END;

    LOCAL PROCEDURE ClearCalculatedFields@10();
    BEGIN
      CLEAR(Id);
      CLEAR(BaseUnitOfMeasureJSONText);
      CLEAR(ItemCategoryJSONText);
      CLEAR(InventoryValue);
      TempFieldSet.DELETEALL;
    END;

    LOCAL PROCEDURE RegisterFieldSet@11(FieldNo@1000 : Integer);
    BEGIN
      IF TempFieldSet.GET(DATABASE::Item,FieldNo) THEN
        EXIT;

      TempFieldSet.INIT;
      TempFieldSet.TableNo := DATABASE::Item;
      TempFieldSet.VALIDATE("No.",FieldNo);
      TempFieldSet.INSERT(TRUE);
    END;

    BEGIN
    END.
  }
}

