OBJECT Page 5471 Customer Entity
{
  OBJECT-PROPERTIES
  {
    Date=28.05.17;
    Time=12:00:00;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=[@@@={Locked};
               ENU=customers];
    SourceTable=Table18;
    DelayedInsert=Yes;
    PageType=API;
    OnAfterGetRecord=BEGIN
                       SetCalculatedFields;
                     END;

    OnNewRecord=BEGIN
                  ClearCalculatedFields;
                END;

    OnInsertRecord=VAR
                     Customer@1002 : Record 18;
                     GraphMgtCustomer@1000 : Codeunit 5471;
                     GraphMgtGeneralTools@1004 : Codeunit 5465;
                     RecRef@1005 : RecordRef;
                   BEGIN
                     Customer.SETRANGE("No.","No.");
                     IF NOT Customer.ISEMPTY THEN
                       INSERT;

                     INSERT(TRUE);

                     GraphMgtCustomer.ProcessComplexTypes(Rec,PaymentTermsJSON,ShipmentMethodJSON,PaymentMethodJSON,PostalAddressJSON);

                     RecRef.GETTABLE(Rec);
                     GraphMgtGeneralTools.ProcessNewRecordFromAPI(RecRef,TempFieldSet,CURRENTDATETIME);
                     RecRef.SETTABLE(Rec);

                     MODIFY(TRUE);
                     SetCalculatedFields;
                     EXIT(FALSE);
                   END;

    OnModifyRecord=VAR
                     Customer@1001 : Record 18;
                     GraphMgtGeneralTools@1000 : Codeunit 5465;
                     GraphMgtCustomer@1002 : Codeunit 5471;
                   BEGIN
                     IF xRec.Id <> Id THEN
                       GraphMgtGeneralTools.ErrorIdImmutable;

                     Customer.SETRANGE(Id,Id);
                     Customer.FINDFIRST;

                     GraphMgtCustomer.ProcessComplexTypes(Rec,PaymentTermsJSON,ShipmentMethodJSON,PaymentMethodJSON,PostalAddressJSON);

                     IF "No." = Customer."No." THEN
                       MODIFY(TRUE)
                     ELSE BEGIN
                       Customer.TRANSFERFIELDS(Rec,FALSE);
                       Customer.RENAME("No.");
                       TRANSFERFIELDS(Customer);
                     END;

                     SetCalculatedFields;
                   END;

    ODataKeyFields=Id;
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 24  ;2   ;Field     ;
                Name=id;
                CaptionML=[@@@={Locked};
                           ENU=Id];
                ApplicationArea=#All;
                SourceExpr=Id }

    { 3   ;2   ;Field     ;
                Name=number;
                CaptionML=[@@@={Locked};
                           ENU=Number];
                ApplicationArea=#All;
                SourceExpr="No." }

    { 4   ;2   ;Field     ;
                Name=displayName;
                CaptionML=[@@@={Locked};
                           ENU=DisplayName];
                ApplicationArea=#All;
                SourceExpr=Name;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO(Name));
                           END;
                            }

    { 14  ;2   ;Field     ;
                Name=address;
                CaptionML=[@@@={Locked};
                           ENU=address];
                ToolTipML=ENU=Specifies the address for the customer.;
                ApplicationArea=#All;
                SourceExpr=PostalAddressJSON;
                ODataEDMType=POSTALADDRESS }

    { 11  ;2   ;Field     ;
                Name=phoneNumber;
                CaptionML=[@@@={Locked};
                           ENU=PhoneNumber];
                ApplicationArea=#All;
                SourceExpr="Phone No.";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Phone No."));
                           END;
                            }

    { 21  ;2   ;Field     ;
                Name=email;
                CaptionML=[@@@={Locked};
                           ENU=Email];
                ApplicationArea=#All;
                SourceExpr="E-Mail";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("E-Mail"));
                           END;
                            }

    { 20  ;2   ;Field     ;
                Name=website;
                CaptionML=[@@@={Locked};
                           ENU=Website];
                ApplicationArea=#All;
                SourceExpr="Home Page";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Home Page"));
                           END;
                            }

    { 26  ;2   ;Field     ;
                Name=taxLiable;
                CaptionML=[@@@={Locked};
                           ENU=TaxLiable];
                ApplicationArea=#All;
                SourceExpr="Tax Liable";
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Tax Liable"));
                           END;
                            }

    { 12  ;2   ;Field     ;
                Name=currencyCode;
                CaptionML=[@@@={Locked};
                           ENU=CurrencyCode];
                ApplicationArea=#All;
                SourceExpr=CurrencyCodeTxt;
                OnValidate=BEGIN
                             "Currency Code" :=
                               GraphMgtGeneralTools.TranslateCurrencyCodeToNAVCurrencyCode(
                                 LCYCurrencyCode,COPYSTR(CurrencyCodeTxt,1,MAXSTRLEN(LCYCurrencyCode)));
                             RegisterFieldSet(FIELDNO("Currency Code"));
                           END;
                            }

    { 13  ;2   ;Field     ;
                Name=paymentTerms;
                CaptionML=[@@@={Locked};
                           ENU=PaymentTerms];
                ToolTipML=ENU=Specifies the Payment Terms for the Customer.;
                ApplicationArea=#All;
                SourceExpr=PaymentTermsJSON;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Payment Terms Code"));
                           END;

                ODataEDMType=PAYMENTTERMSTYPE }

    { 15  ;2   ;Field     ;
                Name=shipmentMethod;
                CaptionML=[@@@={Locked};
                           ENU=ShipmentMethod];
                ToolTipML=ENU=Specifies the Shipment Method for the Customer.;
                ApplicationArea=#All;
                SourceExpr=ShipmentMethodJSON;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Shipment Method Code"));
                           END;

                ODataEDMType=SHIPMENTMETHOD }

    { 16  ;2   ;Field     ;
                Name=paymentMethod;
                CaptionML=[@@@={Locked};
                           ENU=PaymentMethod];
                ToolTipML=ENU=Specifies the Payment Method for the Customer.;
                ApplicationArea=#All;
                SourceExpr=PaymentMethodJSON;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO("Payment Method Code"));
                           END;

                ODataEDMType=PAYMENTMETHOD }

    { 17  ;2   ;Field     ;
                Name=blocked;
                CaptionML=[@@@={Locked};
                           ENU=Blocked];
                ApplicationArea=#All;
                SourceExpr=Blocked;
                OnValidate=BEGIN
                             RegisterFieldSet(FIELDNO(Blocked));
                           END;
                            }

    { 18  ;2   ;Field     ;
                Name=balance;
                CaptionML=[@@@={Locked};
                           ENU=Balance];
                ApplicationArea=#All;
                SourceExpr=Balance }

    { 5   ;2   ;Field     ;
                Name=lastModifiedDateTime;
                CaptionML=[@@@={Locked};
                           ENU=LastModifiedDateTime];
                ApplicationArea=#All;
                SourceExpr="Last Modified Date Time" }

  }
  CODE
  {
    VAR
      TempFieldSet@1003 : TEMPORARY Record 2000000041;
      GraphMgtGeneralTools@1008 : Codeunit 5465;
      LCYCurrencyCode@1007 : Code[10];
      PaymentMethodJSON@1002 : Text;
      PaymentTermsJSON@1000 : Text;
      CurrencyCodeTxt@1006 : Text;
      PostalAddressJSON@1004 : Text;
      ShipmentMethodJSON@1001 : Text;

    LOCAL PROCEDURE SetCalculatedFields@6();
    VAR
      GraphMgtCustomer@1000 : Codeunit 5471;
    BEGIN
      CALCFIELDS(Balance);
      PaymentTermsJSON := GraphMgtCustomer.PaymentTermsToJSON("Payment Terms Code");
      ShipmentMethodJSON := GraphMgtCustomer.ShipmentMethodToJSON("Shipment Method Code");
      PaymentMethodJSON := GraphMgtCustomer.PaymentMethodToJSON("Payment Method Code");
      PostalAddressJSON := GraphMgtCustomer.PostalAddressToJSON(Rec);
      CurrencyCodeTxt := GraphMgtGeneralTools.TranslateNAVCurrencyCodeToCurrencyCode(LCYCurrencyCode,"Currency Code");
    END;

    LOCAL PROCEDURE ClearCalculatedFields@10();
    BEGIN
      CLEAR(Id);
      CLEAR(PaymentTermsJSON);
      CLEAR(ShipmentMethodJSON);
      CLEAR(PaymentMethodJSON);
      CLEAR(PostalAddressJSON);
      TempFieldSet.DELETEALL;
    END;

    LOCAL PROCEDURE RegisterFieldSet@11(FieldNo@1000 : Integer);
    BEGIN
      IF TempFieldSet.GET(DATABASE::Customer,FieldNo) THEN
        EXIT;

      TempFieldSet.INIT;
      TempFieldSet.TableNo := DATABASE::Customer;
      TempFieldSet.VALIDATE("No.",FieldNo);
      TempFieldSet.INSERT(TRUE);
    END;

    BEGIN
    END.
  }
}

