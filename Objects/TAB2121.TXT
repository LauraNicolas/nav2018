OBJECT Table 2121 O365 Brand Color
{
  OBJECT-PROPERTIES
  {
    Date=28.05.17;
    Time=12:00:00;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=O365 Brand Color;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=ENU=Code }
    { 2   ;   ;Name                ;Text30        ;CaptionML=ENU=Name }
    { 6   ;   ;Color Value         ;Code10        ;CaptionML=ENU=Color Value }
    { 15  ;   ;Sample Picture      ;Media         ;CaptionML=ENU=Sample Picture }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 2   ;Brick               ;Name,Sample Picture                      }
  }
  CODE
  {
    VAR
      CustomColorCodeTxt@1000 : TextConst '@@@={Locked};ENU=Custom';
      CustomColorNameTxt@1001 : TextConst 'ENU=Custom';

    PROCEDURE CreateOrUpdateCustomColor@2(VAR O365BrandColor@1000 : Record 2121;ColorValue@1001 : Code[10]);
    BEGIN
      IF NOT O365BrandColor.GET(CustomColorCodeTxt) THEN BEGIN
        O365BrandColor.INIT;
        O365BrandColor.Code := CustomColorCodeTxt;
        O365BrandColor.Name := CustomColorNameTxt;
        O365BrandColor.INSERT;
      END;

      O365BrandColor."Color Value" := ColorValue;
      O365BrandColor.MakePicture;
      O365BrandColor.MODIFY;
    END;

    PROCEDURE FindColor@4(VAR O365BrandColor@1001 : Record 2121;ColorValue@1000 : Code[10]);
    VAR
      OpaqueAlpha@1002 : Text;
    BEGIN
      O365BrandColor.SETRANGE("Color Value",ColorValue);
      IF O365BrandColor.FINDFIRST THEN
        EXIT;

      OpaqueAlpha := '#FF';
      // Perform RGBA color to RGB color conversion when color is fully opaque
      IF (STRLEN(ColorValue) = 9) AND (COPYSTR(ColorValue,1,3) = OpaqueAlpha) THEN BEGIN
        ColorValue := '#' + COPYSTR(ColorValue,4,6);
        O365BrandColor.SETRANGE("Color Value",ColorValue);
        IF O365BrandColor.FINDFIRST THEN
          EXIT;
      END;

      CreateOrUpdateCustomColor(O365BrandColor,ColorValue);
    END;

    PROCEDURE MakePicture@1();
    VAR
      DummyTempBlob@1012 : Record 99008535;
      Bitmap@1008 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Bitmap";
      Graphics@1007 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Graphics";
      Color@1006 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Color";
      ColorTranslator@1005 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.ColorTranslator";
      SolidColorBrush@1004 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.SolidBrush";
      ImageFormat@1002 : DotNet "'System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.System.Drawing.Imaging.ImageFormat";
      InStr@1010 : InStream;
    BEGIN
      Bitmap := Bitmap.Bitmap(100,100);
      Graphics := Graphics.FromImage(Bitmap);

      Color := ColorTranslator.FromHtml("Color Value");
      SolidColorBrush := SolidColorBrush.SolidBrush(Color);
      Graphics.FillEllipse(SolidColorBrush,0,0,100,100);
      Graphics.Dispose;

      DummyTempBlob.INIT;
      DummyTempBlob.Blob.CREATEINSTREAM(InStr);
      Bitmap.Save(InStr,ImageFormat.Png);

      "Sample Picture".IMPORTSTREAM(InStr,'');
      Bitmap.Dispose;
    END;

    BEGIN
    END.
  }
}

