OBJECT Table 93 Vendor Posting Group
{
  OBJECT-PROPERTIES
  {
    Date=28.05.17;
    Time=12:00:00;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               CheckGroupUsage;
             END;

    CaptionML=ENU=Vendor Posting Group;
    LookupPageID=Page111;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 2   ;   ;Payables Account    ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Payables Account",FALSE,FALSE);
                                                              END;

                                                   OnLookup=BEGIN
                                                              GLAccountCategoryMgt.LookupGLAccount(
                                                                "Payables Account",GLAccountCategory."Account Category"::Liabilities,GLAccountCategoryMgt.GetCurrentLiabilities);
                                                            END;

                                                   CaptionML=ENU=Payables Account }
    { 7   ;   ;Service Charge Acc. ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Service Charge Acc.",TRUE,TRUE);
                                                              END;

                                                   CaptionML=ENU=Service Charge Acc. }
    { 8   ;   ;Payment Disc. Debit Acc.;Code20    ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Payment Disc. Debit Acc.",FALSE,FALSE);
                                                              END;

                                                   CaptionML=ENU=Payment Disc. Debit Acc. }
    { 9   ;   ;Invoice Rounding Account;Code20    ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Invoice Rounding Account",TRUE,FALSE);
                                                              END;

                                                   CaptionML=ENU=Invoice Rounding Account }
    { 10  ;   ;Debit Curr. Appln. Rndg. Acc.;Code20;
                                                   TableRelation="G/L Account";
                                                   CaptionML=ENU=Debit Curr. Appln. Rndg. Acc. }
    { 11  ;   ;Credit Curr. Appln. Rndg. Acc.;Code20;
                                                   TableRelation="G/L Account";
                                                   CaptionML=ENU=Credit Curr. Appln. Rndg. Acc. }
    { 12  ;   ;Debit Rounding Account;Code20      ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Debit Rounding Account }
    { 13  ;   ;Credit Rounding Account;Code20     ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Credit Rounding Account }
    { 16  ;   ;Payment Disc. Credit Acc.;Code20   ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Payment Disc. Credit Acc.",FALSE,FALSE);
                                                              END;

                                                   CaptionML=ENU=Payment Disc. Credit Acc. }
    { 17  ;   ;Payment Tolerance Debit Acc.;Code20;TableRelation="G/L Account";
                                                   CaptionML=ENU=Payment Tolerance Debit Acc. }
    { 18  ;   ;Payment Tolerance Credit Acc.;Code20;
                                                   TableRelation="G/L Account";
                                                   CaptionML=ENU=Payment Tolerance Credit Acc. }
    { 20  ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 40  ;   ;Used in Vendors     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count(Vendor WHERE (Vendor Posting Group=FIELD(Code)));
                                                   CaptionML=ENU=Used in Vendors;
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 41  ;   ;Used in Ledger Entries;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("Vendor Ledger Entry" WHERE (Vendor Posting Group=FIELD(Code)));
                                                   CaptionML=ENU=Used in Ledger Entries;
                                                   BlankZero=Yes;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Code                                     }
  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      GLAccountCategory@1001 : Record 570;
      GLAccountCategoryMgt@1002 : Codeunit 570;
      YouCannotDeleteErr@1003 : TextConst '@@@="%1 = Code";ENU=You cannot delete %1.';

    LOCAL PROCEDURE CheckGLAcc@2(AccNo@1000 : Code[20];CheckProdPostingGroup@1001 : Boolean;CheckDirectPosting@1002 : Boolean);
    VAR
      GLAcc@1003 : Record 15;
    BEGIN
      IF AccNo <> '' THEN BEGIN
        GLAcc.GET(AccNo);
        GLAcc.CheckGLAcc;
        IF CheckProdPostingGroup THEN
          GLAcc.TESTFIELD("Gen. Prod. Posting Group");
        IF CheckDirectPosting THEN
          GLAcc.TESTFIELD("Direct Posting",TRUE);
      END;
    END;

    LOCAL PROCEDURE CheckGroupUsage@8();
    BEGIN
      CALCFIELDS("Used in Ledger Entries","Used in Vendors");
      IF ("Used in Vendors" > 0) OR ("Used in Ledger Entries" > 0) THEN
        ERROR(YouCannotDeleteErr,Code);
    END;

    [External]
    PROCEDURE GetPayablesAccount@6() : Code[20];
    BEGIN
      TESTFIELD("Payables Account");
      EXIT("Payables Account");
    END;

    [External]
    PROCEDURE GetPmtDiscountAccount@1(Debit@1000 : Boolean) : Code[20];
    BEGIN
      IF Debit THEN BEGIN
        TESTFIELD("Payment Disc. Debit Acc.");
        EXIT("Payment Disc. Debit Acc.");
      END;
      TESTFIELD("Payment Disc. Credit Acc.");
      EXIT("Payment Disc. Credit Acc.");
    END;

    [External]
    PROCEDURE GetPmtToleranceAccount@3(Debit@1000 : Boolean) : Code[20];
    BEGIN
      IF Debit THEN BEGIN
        TESTFIELD("Payment Tolerance Debit Acc.");
        EXIT("Payment Tolerance Debit Acc.");
      END;
      TESTFIELD("Payment Tolerance Credit Acc.");
      EXIT("Payment Tolerance Credit Acc.");
    END;

    [External]
    PROCEDURE GetRoundingAccount@4(Debit@1000 : Boolean) : Code[20];
    BEGIN
      IF Debit THEN BEGIN
        TESTFIELD("Debit Rounding Account");
        EXIT("Debit Rounding Account");
      END;
      TESTFIELD("Credit Rounding Account");
      EXIT("Credit Rounding Account");
    END;

    [External]
    PROCEDURE GetApplRoundingAccount@5(Debit@1000 : Boolean) : Code[20];
    BEGIN
      IF Debit THEN BEGIN
        TESTFIELD("Debit Curr. Appln. Rndg. Acc.");
        EXIT("Debit Curr. Appln. Rndg. Acc.");
      END;
      TESTFIELD("Credit Curr. Appln. Rndg. Acc.");
      EXIT("Credit Curr. Appln. Rndg. Acc.");
    END;

    [External]
    PROCEDURE GetInvRoundingAccount@9() : Code[20];
    BEGIN
      TESTFIELD("Invoice Rounding Account");
      EXIT("Invoice Rounding Account");
    END;

    [External]
    PROCEDURE GetServiceChargeAccount@7() : Code[20];
    BEGIN
      TESTFIELD("Service Charge Acc.");
      EXIT("Service Charge Acc.");
    END;

    PROCEDURE SetAccountVisibility@10(VAR PmtToleranceVisible@1000 : Boolean;VAR PmtDiscountVisible@1002 : Boolean;VAR InvRoundingVisible@1001 : Boolean;VAR ApplnRoundingVisible@1005 : Boolean);
    VAR
      PurchSetup@1003 : Record 312;
      PaymentTerms@1004 : Record 3;
    BEGIN
      GLSetup.GET;
      PmtToleranceVisible := GLSetup."Payment Tolerance %" > 0;
      PmtDiscountVisible := PaymentTerms.UsePaymentDiscount;

      PurchSetup.GET;
      InvRoundingVisible := PurchSetup."Invoice Rounding";
      ApplnRoundingVisible := PurchSetup."Appln. between Currencies" <> PurchSetup."Appln. between Currencies"::None;
    END;

    BEGIN
    END.
  }
}

