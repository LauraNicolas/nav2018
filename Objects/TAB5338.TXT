OBJECT Table 5338 Integration Synch. Job
{
  OBJECT-PROPERTIES
  {
    Date=28.05.17;
    Time=12:00:00;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Integration Synch. Job;
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;GUID          ;CaptionML=ENU=ID }
    { 2   ;   ;Start Date/Time     ;DateTime      ;CaptionML=ENU=Start Date/Time }
    { 3   ;   ;Finish Date/Time    ;DateTime      ;CaptionML=ENU=Finish Date/Time }
    { 4   ;   ;Message             ;Text250       ;CaptionML=ENU=Message }
    { 5   ;   ;Integration Table Mapping Name;Code20;
                                                   TableRelation="Integration Table Mapping".Name;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Integration Table Mapping Name }
    { 6   ;   ;Inserted            ;Integer       ;CaptionML=ENU=Inserted }
    { 7   ;   ;Modified            ;Integer       ;CaptionML=ENU=Modified }
    { 8   ;   ;Deleted             ;Integer       ;CaptionML=ENU=Deleted }
    { 9   ;   ;Unchanged           ;Integer       ;CaptionML=ENU=Unchanged }
    { 10  ;   ;Skipped             ;Integer       ;CaptionML=ENU=Skipped }
    { 11  ;   ;Failed              ;Integer       ;CaptionML=ENU=Failed }
    { 12  ;   ;Synch. Direction    ;Option        ;CaptionML=ENU=Synch. Direction;
                                                   OptionCaptionML=ENU=Bidirectional,ToIntegrationTable,FromIntegrationTable;
                                                   OptionString=Bidirectional,ToIntegrationTable,FromIntegrationTable }
    { 13  ;   ;Job Queue Log Entry No.;Integer    ;CaptionML=ENU=Job Queue Log Entry No. }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=Yes }
    {    ;Start Date/Time,ID                       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DeleteEntriesQst@1000 : TextConst '@@@="%1 = Integration Synch. Job caption";ENU=Are you sure that you want to delete the %1 entries?';

    [External]
    PROCEDURE DeleteEntries@2(DaysOld@1000 : Integer);
    VAR
      IntegrationSynchJobErrors@1001 : Record 5339;
    BEGIN
      IF NOT CONFIRM(STRSUBSTNO(DeleteEntriesQst,TABLECAPTION)) THEN
        EXIT;
      IntegrationSynchJobErrors.DeleteEntries(DaysOld);
      SETFILTER("Finish Date/Time",'<=%1',CREATEDATETIME(TODAY - DaysOld,TIME));
      DELETEALL;
      SETRANGE("Finish Date/Time");
    END;

    [External]
    PROCEDURE GetErrorForRecordID@1(RecID@1000 : RecordID) : Text;
    VAR
      IntegrationSynchJobErrors@1001 : Record 5339;
    BEGIN
      IF NOT ISNULLGUID(ID) THEN
        IntegrationSynchJobErrors.SETRANGE("Integration Synch. Job ID",ID);
      CASE "Synch. Direction" OF
        "Synch. Direction"::ToIntegrationTable:
          IntegrationSynchJobErrors.SETRANGE("Source Record ID",RecID);
        "Synch. Direction"::FromIntegrationTable:
          IntegrationSynchJobErrors.SETRANGE("Destination Record ID",RecID);
      END;
      IF IntegrationSynchJobErrors.FINDLAST THEN
        EXIT(IntegrationSynchJobErrors.Message);
      EXIT('');
    END;

    [External]
    PROCEDURE AreAllRecordsFailed@3() : Boolean;
    BEGIN
      EXIT(
        (Deleted = 0) AND (Inserted = 0) AND (Modified = 0) AND
        (Unchanged = 0) AND (Skipped = 0) AND (Failed <> 0));
    END;

    [External]
    PROCEDURE HaveJobsBeenIdle@4(JobQueueLogEntryNo@1000 : Integer) : Boolean;
    BEGIN
      RESET;
      SETRANGE("Job Queue Log Entry No.",JobQueueLogEntryNo);
      IF NOT ISEMPTY THEN BEGIN
        CALCSUMS(Inserted,Modified,Deleted,Failed);
        EXIT(Inserted + Modified + Deleted + Failed = 0);
      END;
    END;

    BEGIN
    END.
  }
}

