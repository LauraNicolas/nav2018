OBJECT Page 508 Blanket Sales Order Subform
{
  OBJECT-PROPERTIES
  {
    Date=28.05.17;
    Time=12:00:00;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table37;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Blanket Order));
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       CLEAR(DocumentTotals);
                     END;

    OnNewRecord=BEGIN
                  InitType;
                  CLEAR(ShortcutDimCode);
                END;

    OnAfterGetCurrRecord=BEGIN
                           IF SalesHeader.GET("Document Type","Document No.") THEN;

                           DocumentTotals.SalesUpdateTotalsControls(Rec,TotalSalesHeader,TotalSalesLine,RefreshMessageEnabled,
                             TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,CurrPage.EDITABLE,VATAmount);
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1903866504;2 ;ActionGroup;
                      CaptionML=ENU=Item Availability by;
                      Image=ItemAvailability }
      { 3       ;3   ;Action    ;
                      CaptionML=ENU=Event;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 1900544904;3 ;Action    ;
                      CaptionML=ENU=Period;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 1901991304;3 ;Action    ;
                      CaptionML=ENU=Variant;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 1901652204;3 ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=ENU=Location;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 25      ;3   ;Action    ;
                      CaptionML=ENU=BOM Level;
                      ToolTipML=ENU=View availability figures for items on bills of materials that show how many units of a parent item you can make based on the availability of child items.;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 1902740304;2 ;ActionGroup;
                      CaptionML=ENU=Unposted Lines;
                      Image=Order }
      { 1907075804;3 ;Action    ;
                      CaptionML=ENU=Orders;
                      Image=Document;
                      OnAction=BEGIN
                                 ShowOrders;
                               END;
                                }
      { 1900639404;3 ;Action    ;
                      CaptionML=ENU=Invoices;
                      Image=Invoice;
                      OnAction=BEGIN
                                 ShowInvoices;
                               END;
                                }
      { 1906421304;3 ;Action    ;
                      AccessByPermission=TableData 6660=R;
                      CaptionML=ENU=Return Orders;
                      Image=ReturnOrder;
                      OnAction=BEGIN
                                 ShowReturnOrders;
                               END;
                                }
      { 1900609704;3 ;Action    ;
                      CaptionML=ENU=Credit Memos;
                      Image=CreditMemo;
                      OnAction=BEGIN
                                 ShowCreditMemos;
                               END;
                                }
      { 1904974904;2 ;ActionGroup;
                      CaptionML=ENU=Posted Lines;
                      Image=Post }
      { 1904945204;3 ;Action    ;
                      CaptionML=ENU=Shipments;
                      Image=Shipment;
                      OnAction=BEGIN
                                 ShowPostedOrders;
                               END;
                                }
      { 1901092104;3 ;Action    ;
                      CaptionML=ENU=Invoices;
                      Image=Invoice;
                      OnAction=BEGIN
                                 ShowPostedInvoices;
                               END;
                                }
      { 1903984904;3 ;Action    ;
                      AccessByPermission=TableData 6660=R;
                      CaptionML=ENU=Return Receipts;
                      Image=ReturnReceipt;
                      OnAction=BEGIN
                                 ShowPostedReturnReceipts;
                               END;
                                }
      { 1901033504;3 ;Action    ;
                      CaptionML=ENU=Credit Memos;
                      Image=CreditMemo;
                      OnAction=BEGIN
                                 ShowPostedCreditMemos;
                               END;
                                }
      { 1900186704;2 ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1900978604;2 ;Action    ;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 ShowLineComments;
                               END;
                                }
      { 15      ;2   ;ActionGroup;
                      CaptionML=ENU=Assemble to Order;
                      ActionContainerType=NewDocumentItems;
                      Image=AssemblyBOM }
      { 5       ;3   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=ENU=Assemble-to-Order Lines;
                      OnAction=BEGIN
                                 ShowAsmToOrderLines;
                               END;
                                }
      { 13      ;3   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      Ellipsis=Yes;
                      CaptionML=ENU=Roll Up &Price;
                      OnAction=BEGIN
                                 RollupAsmPrice;
                               END;
                                }
      { 9       ;3   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      Ellipsis=Yes;
                      CaptionML=ENU=Roll Up &Cost;
                      OnAction=BEGIN
                                 RollUpAsmCost;
                               END;
                                }
      { 23      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 21      ;2   ;Action    ;
                      AccessByPermission=TableData 7002=R;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get &Price;
                      Image=Price;
                      OnAction=BEGIN
                                 ShowPrices
                               END;
                                }
      { 19      ;2   ;Action    ;
                      AccessByPermission=TableData 7004=R;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get Li&ne Discount;
                      Image=LineDiscount;
                      OnAction=BEGIN
                                 ShowLineDisc
                               END;
                                }
      { 17      ;2   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=ENU=E&xplode BOM;
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 11      ;2   ;Action    ;
                      AccessByPermission=TableData 279=R;
                      CaptionML=ENU=Insert &Ext. Texts;
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(TRUE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             NoOnAfterValidate;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the document.;
                SourceExpr="No.";
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 26  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the cross-referenced item number. If you enter a cross reference between yours and your vendor's or customer's item number, then this number will override the standard item number when you enter the cross-reference number on a sales or purchase document.;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CrossReferenceNoOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           InsertExtendedText(FALSE);
                         END;
                          }

    { 22  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             VariantCodeOnAfterValidate
                           END;
                            }

    { 14  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the VAT product posting group. Links business transactions made for the item, resource, or G/L account with the general ledger, to account for VAT amounts resulting from trade with that record.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 36  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the location from where inventory items to the customer on the sales document are to be shipped by default.;
                SourceExpr="Location Code";
                OnValidate=BEGIN
                             LocationCodeOnAfterValidate
                           END;
                            }

    { 8   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 7   ;2   ;Field     ;
                ToolTipML=ENU=Specifies how many units of the blanket sales line quantity that you want to supply by assembly.;
                SourceExpr="Qty. to Assemble to Order";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             CurrPage.UPDATE(TRUE);
                           END;

                OnDrillDown=BEGIN
                              ShowAsmToOrderLines;
                            END;
                             }

    { 42  ;2   ;Field     ;
                SourceExpr="Work Type Code";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code";
                OnValidate=BEGIN
                             UnitofMeasureCodeOnAfterValida;
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 46  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                CaptionML=ENU=Sale Price Exists;
                SourceExpr=PriceExists;
                Visible=FALSE;
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Unit Price";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 16  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the discount percentage that is granted for the item on the line.;
                BlankZero=Yes;
                SourceExpr="Line Discount %";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 28  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the net amount, excluding any invoice discount amount, that must be paid for products on the line.;
                BlankZero=Yes;
                SourceExpr="Line Amount";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 40  ;2   ;Field     ;
                CaptionML=ENU=Sales Line Disc. Exists;
                SourceExpr=LineDiscExists;
                Visible=FALSE;
                Editable=FALSE }

    { 52  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the discount amount that is granted for the item on the line.;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 54  ;2   ;Field     ;
                ToolTipML=ENU=Specifies if the invoice line is included when the invoice discount is calculated.;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity of items that remain to be shipped.;
                BlankZero=Yes;
                SourceExpr="Qty. to Ship" }

    { 20  ;2   ;Field     ;
                ToolTipML=ENU=Specifies how many units of the item on the line have been posted as shipped.;
                BlankZero=Yes;
                SourceExpr="Quantity Shipped" }

    { 24  ;2   ;Field     ;
                ToolTipML=ENU=Specifies how many units of the item on the line have been posted as invoiced.;
                BlankZero=Yes;
                SourceExpr="Quantity Invoiced" }

    { 90  ;2   ;Field     ;
                ToolTipML=ENU=Specifies when items on the document are shipped or were shipped. A shipment date is usually calculated from a requested delivery date plus lead time.;
                SourceExpr="Shipment Date" }

    { 32  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateSaveShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 53  ;1   ;Group     ;
                GroupType=Group }

    { 49  ;2   ;Group     ;
                GroupType=Group }

    { 48  ;3   ;Field     ;
                Name=Invoice Discount Amount;
                CaptionML=ENU=Invoice Discount Amount;
                SourceExpr=TotalSalesLine."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                Editable=InvDiscAmountEditable;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled;
                OnValidate=VAR
                             SalesHeader@1000 : Record 36;
                           BEGIN
                             SalesHeader.GET("Document Type","Document No.");
                             SalesCalcDiscByType.ApplyInvDiscBasedOnAmt(TotalSalesLine."Inv. Discount Amount",SalesHeader);
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 47  ;3   ;Field     ;
                Name=Invoice Disc. Pct.;
                CaptionML=ENU=Invoice Discount %;
                DecimalPlaces=0:2;
                SourceExpr=SalesCalcDiscByType.GetCustInvoiceDiscountPct(Rec);
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 35  ;2   ;Group     ;
                GroupType=Group }

    { 33  ;3   ;Field     ;
                Name=Total Amount Excl. VAT;
                DrillDown=No;
                CaptionML=ENU=Total Amount Excl. VAT;
                SourceExpr=TotalSalesLine.Amount;
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalExclVATCaption(SalesHeader."Currency Code");
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 31  ;3   ;Field     ;
                Name=Total VAT Amount;
                CaptionML=ENU=Total VAT;
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalVATCaption(SalesHeader."Currency Code");
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 29  ;3   ;Field     ;
                Name=Total Amount Incl. VAT;
                CaptionML=ENU=Total Amount Incl. VAT;
                SourceExpr=TotalSalesLine."Amount Including VAT";
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalInclVATCaption(SalesHeader."Currency Code");
                Editable=FALSE;
                StyleExpr=TotalAmountStyle }

    { 27  ;3   ;Field     ;
                Name=RefreshTotals;
                DrillDown=Yes;
                SourceExpr=RefreshMessageText;
                Enabled=RefreshMessageEnabled;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DocumentTotals.SalesRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalSalesLine);
                              DocumentTotals.SalesUpdateTotalsControls(Rec,TotalSalesHeader,TotalSalesLine,RefreshMessageEnabled,
                                TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,CurrPage.EDITABLE,VATAmount);
                            END;

                ShowCaption=No }

  }
  CODE
  {
    VAR
      CurrentSalesLine@1005 : Record 37;
      SalesLine@1001 : Record 37;
      TotalSalesHeader@1014 : Record 36;
      TotalSalesLine@1013 : Record 37;
      SalesHeader@1000 : Record 36;
      TransferExtendedText@1002 : Codeunit 378;
      SalesPriceCalcMgt@1004 : Codeunit 7000;
      ItemAvailFormsMgt@1006 : Codeunit 353;
      SalesCalcDiscByType@1017 : Codeunit 56;
      DocumentTotals@1016 : Codeunit 57;
      VATAmount@1015 : Decimal;
      ShortcutDimCode@1003 : ARRAY [8] OF Code[20];
      InvDiscAmountEditable@1012 : Boolean;
      TotalAmountStyle@1011 : Text;
      RefreshMessageEnabled@1010 : Boolean;
      RefreshMessageText@1009 : Text;

    [External]
    PROCEDURE ApproveCalcInvDisc@6();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Disc. (Yes/No)",Rec);
    END;

    LOCAL PROCEDURE ExplodeBOM@3();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Explode BOM",Rec);
    END;

    LOCAL PROCEDURE InsertExtendedText@5(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.SalesCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        COMMIT;
        TransferExtendedText.InsertSalesExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    [External]
    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    LOCAL PROCEDURE ShowPrices@15();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLinePrice(SalesHeader,Rec);
    END;

    LOCAL PROCEDURE ShowLineDisc@16();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLineLineDisc(SalesHeader,Rec);
    END;

    LOCAL PROCEDURE ShowOrders@2();
    BEGIN
      CurrentSalesLine := Rec;
      SalesLine.RESET;
      SalesLine.SETCURRENTKEY("Document Type","Blanket Order No.","Blanket Order Line No.");
      SalesLine.SETRANGE("Document Type",SalesLine."Document Type"::Order);
      SalesLine.SETRANGE("Blanket Order No.",CurrentSalesLine."Document No.");
      SalesLine.SETRANGE("Blanket Order Line No.",CurrentSalesLine."Line No.");
      PAGE.RUNMODAL(PAGE::"Sales Lines",SalesLine);
    END;

    LOCAL PROCEDURE ShowInvoices@4();
    BEGIN
      CurrentSalesLine := Rec;
      SalesLine.RESET;
      SalesLine.SETCURRENTKEY("Document Type","Blanket Order No.","Blanket Order Line No.");
      SalesLine.SETRANGE("Document Type",SalesLine."Document Type"::Invoice);
      SalesLine.SETRANGE("Blanket Order No.",CurrentSalesLine."Document No.");
      SalesLine.SETRANGE("Blanket Order Line No.",CurrentSalesLine."Line No.");
      PAGE.RUNMODAL(PAGE::"Sales Lines",SalesLine);
    END;

    LOCAL PROCEDURE ShowReturnOrders@9();
    BEGIN
      CurrentSalesLine := Rec;
      SalesLine.RESET;
      SalesLine.SETCURRENTKEY("Document Type","Blanket Order No.","Blanket Order Line No.");
      SalesLine.SETRANGE("Document Type",SalesLine."Document Type"::"Return Order");
      SalesLine.SETRANGE("Blanket Order No.",CurrentSalesLine."Document No.");
      SalesLine.SETRANGE("Blanket Order Line No.",CurrentSalesLine."Line No.");
      PAGE.RUNMODAL(PAGE::"Sales Lines",SalesLine);
    END;

    LOCAL PROCEDURE ShowCreditMemos@10();
    BEGIN
      CurrentSalesLine := Rec;
      SalesLine.RESET;
      SalesLine.SETCURRENTKEY("Document Type","Blanket Order No.","Blanket Order Line No.");
      SalesLine.SETRANGE("Document Type",SalesLine."Document Type"::"Credit Memo");
      SalesLine.SETRANGE("Blanket Order No.",CurrentSalesLine."Document No.");
      SalesLine.SETRANGE("Blanket Order Line No.",CurrentSalesLine."Line No.");
      PAGE.RUNMODAL(PAGE::"Sales Lines",SalesLine);
    END;

    LOCAL PROCEDURE ShowPostedOrders@17();
    VAR
      SaleShptLine@1000 : Record 111;
    BEGIN
      CurrentSalesLine := Rec;
      SaleShptLine.RESET;
      SaleShptLine.SETCURRENTKEY("Blanket Order No.","Blanket Order Line No.");
      SaleShptLine.SETRANGE("Blanket Order No.",CurrentSalesLine."Document No.");
      SaleShptLine.SETRANGE("Blanket Order Line No.",CurrentSalesLine."Line No.");
      PAGE.RUNMODAL(PAGE::"Posted Sales Shipment Lines",SaleShptLine);
    END;

    LOCAL PROCEDURE ShowPostedInvoices@14();
    VAR
      SalesInvLine@1000 : Record 113;
    BEGIN
      CurrentSalesLine := Rec;
      SalesInvLine.RESET;
      SalesInvLine.SETCURRENTKEY("Blanket Order No.","Blanket Order Line No.");
      SalesInvLine.SETRANGE("Blanket Order No.",CurrentSalesLine."Document No.");
      SalesInvLine.SETRANGE("Blanket Order Line No.",CurrentSalesLine."Line No.");
      PAGE.RUNMODAL(PAGE::"Posted Sales Invoice Lines",SalesInvLine);
    END;

    LOCAL PROCEDURE ShowPostedReturnReceipts@13();
    VAR
      ReturnRcptLine@1000 : Record 6661;
    BEGIN
      CurrentSalesLine := Rec;
      ReturnRcptLine.RESET;
      ReturnRcptLine.SETCURRENTKEY("Blanket Order No.","Blanket Order Line No.");
      ReturnRcptLine.SETRANGE("Blanket Order No.",CurrentSalesLine."Document No.");
      ReturnRcptLine.SETRANGE("Blanket Order Line No.",CurrentSalesLine."Line No.");
      PAGE.RUNMODAL(PAGE::"Posted Return Receipt Lines",ReturnRcptLine);
    END;

    LOCAL PROCEDURE ShowPostedCreditMemos@11();
    VAR
      SalesCrMemoLine@1000 : Record 115;
    BEGIN
      CurrentSalesLine := Rec;
      SalesCrMemoLine.RESET;
      SalesCrMemoLine.SETCURRENTKEY("Blanket Order No.","Blanket Order Line No.");
      SalesCrMemoLine.SETRANGE("Blanket Order No.",CurrentSalesLine."Document No.");
      SalesCrMemoLine.SETRANGE("Blanket Order Line No.",CurrentSalesLine."Line No.");
      PAGE.RUNMODAL(PAGE::"Posted Sales Credit Memo Lines",SalesCrMemoLine);
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(FALSE);

      SaveAndAutoAsmToOrder;
    END;

    LOCAL PROCEDURE LocationCodeOnAfterValidate@20();
    BEGIN
      SaveAndAutoAsmToOrder;
    END;

    LOCAL PROCEDURE VariantCodeOnAfterValidate@19();
    BEGIN
      SaveAndAutoAsmToOrder;
    END;

    LOCAL PROCEDURE CrossReferenceNoOnAfterValidat@19048248();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
      END;

      IF (Type = Type::Item) AND
         (Quantity <> xRec.Quantity)
      THEN
        CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnAfterValida@19057939();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
      END;
    END;

    LOCAL PROCEDURE SaveAndAutoAsmToOrder@23();
    BEGIN
      IF (Type = Type::Item) AND IsAsmToOrderRequired THEN BEGIN
        CurrPage.SAVERECORD;
        AutoAsmToOrder;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE RedistributeTotalsOnAfterValidate@8();
    BEGIN
      CurrPage.SAVERECORD;

      SalesHeader.GET("Document Type","Document No.");
      IF DocumentTotals.SalesCheckNumberOfLinesLimit(SalesHeader) THEN
        DocumentTotals.SalesRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalSalesLine);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ValidateSaveShortcutDimCode@7(FieldNumber@1001 : Integer;VAR ShortcutDimCode@1000 : Code[20]);
    BEGIN
      ValidateShortcutDimCode(FieldNumber,ShortcutDimCode);
      CurrPage.SAVERECORD;
    END;

    BEGIN
    END.
  }
}

