OBJECT Table 2158 O365 Document Sent History
{
  OBJECT-PROPERTIES
  {
    Date=06.10.17;
    Time=12:00:00;
    Version List=NAVW111.0;
  }
  PROPERTIES
  {
    Permissions=TableData 2158=rimd;
    CaptionML=ENU=O365 Document Sent History;
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order }
    { 2   ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 3   ;   ;Posted              ;Boolean       ;CaptionML=ENU=Posted }
    { 4   ;   ;Created Date-Time   ;DateTime      ;CaptionML=ENU=Created Date-Time }
    { 7   ;   ;Source Type         ;Option        ;CaptionML=ENU=Source Type;
                                                   OptionCaptionML=ENU=" ,Customer,Vendor";
                                                   OptionString=[ ,Customer,Vendor] }
    { 8   ;   ;Source No.          ;Code20        ;TableRelation=IF (Source Type=CONST(Customer)) Customer
                                                                 ELSE IF (Source Type=CONST(Vendor)) Vendor;
                                                   CaptionML=ENU=Source No. }
    { 11  ;   ;Job Queue Entry ID  ;GUID          ;CaptionML=ENU=Job Queue Entry ID }
    { 12  ;   ;Job Last Status     ;Option        ;OnValidate=VAR
                                                                JobQueueLogEntry@1000 : Record 474;
                                                              BEGIN
                                                                IF "Job Last Status" = "Job Last Status"::"In Process" THEN
                                                                  CLEAR("Job Completed")
                                                                ELSE
                                                                  IF ISNULLGUID("Job Queue Entry ID") THEN
                                                                    "Job Completed" := CURRENTDATETIME
                                                                  ELSE BEGIN
                                                                    JobQueueLogEntry.SETRANGE(ID,"Job Queue Entry ID");
                                                                    JobQueueLogEntry.SETCURRENTKEY("Entry No.");

                                                                    IF JobQueueLogEntry.FINDLAST THEN
                                                                      "Job Completed" := JobQueueLogEntry."End Date/Time"
                                                                    ELSE
                                                                      "Job Completed" := CURRENTDATETIME;
                                                                  END;
                                                              END;

                                                   CaptionML=ENU=Job Last Status;
                                                   OptionCaptionML=ENU=,In Process,Finished,Error;
                                                   OptionString=,In Process,Finished,Error }
    { 13  ;   ;Job Completed       ;DateTime      ;CaptionML=ENU=Job Completed }
    { 14  ;   ;Notified            ;Boolean       ;CaptionML=ENU=Notified }
    { 15  ;   ;NotificationCleared ;Boolean       ;CaptionML=ENU=NotificationCleared }
  }
  KEYS
  {
    {    ;Document Type,Document No.,Posted,Created Date-Time;
                                                   Clustered=Yes }
    {    ;Job Queue Entry ID                       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE NewInProgressFromJobQueue@2(VAR JobQueueEntry@1000 : Record 472) : Boolean;
    VAR
      ReportSelections@1005 : Record 77;
      ReportUsage@1001 : Integer;
      DocNo@1002 : Code[20];
      DocName@1003 : Text[150];
      CustNo@1004 : Code[20];
      ParamString@1007 : Text[250];
    BEGIN
      ParamString := JobQueueEntry."Parameter String";

      IF NOT ReportSelections.GetJobQueueParameters(ParamString,ReportUsage,DocNo,DocName,CustNo) THEN
        EXIT(FALSE);

      IF NOT (DocName IN ['Invoice','Estimate','Quote']) THEN
        EXIT(FALSE);

      SETRANGE("Job Queue Entry ID",JobQueueEntry.ID);
      IF FINDFIRST THEN BEGIN
        VALIDATE("Job Last Status","Job Last Status"::"In Process");
        EXIT(MODIFY(TRUE));
      END;
      SETRANGE("Job Queue Entry ID");

      INIT;
      "Created Date-Time" := CURRENTDATETIME;
      Posted := (DocName = 'Invoice');
      "Document No." := DocNo;
      CASE DocName OF
        'Invoice':
          "Document Type" := "Document Type"::Invoice;
        'Quote','Estimate':
          "Document Type" := "Document Type"::Quote;
      END;
      "Source No." := CustNo;

      // Logic about residual ParamString is present in table 77
      CASE ParamString OF
        'Vendor':
          "Source Type" := "Source Type"::Vendor;
        ELSE
          "Source Type" := "Source Type"::Customer;
      END;

      "Job Queue Entry ID" := JobQueueEntry.ID;
      "Job Last Status" := "Job Last Status"::"In Process";

      SetHistoryForDocumentAsNotified("Document Type","Document No.",Posted);

      EXIT(INSERT(TRUE));
    END;

    PROCEDURE DeleteSentHistoryForDocument@1(DocType@1000 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order';DocNo@1001 : Code[20];DocPosted@1002 : Boolean);
    VAR
      O365DocumentSentHistory@1003 : Record 2158;
    BEGIN
      O365DocumentSentHistory.SETRANGE("Document Type",DocType);
      O365DocumentSentHistory.SETRANGE("Document No.",DocNo);
      O365DocumentSentHistory.SETRANGE(Posted,DocPosted);

      O365DocumentSentHistory.DELETEALL;
    END;

    PROCEDURE ShowJobQueueErrorMessage@3();
    VAR
      JobQueueLogEntry@1000 : Record 474;
    BEGIN
      JobQueueLogEntry.SETRANGE(ID,"Job Queue Entry ID");
      IF NOT JobQueueLogEntry.FINDFIRST THEN
        EXIT;

      JobQueueLogEntry.ShowErrorMessage;
    END;

    PROCEDURE GetJobQueueErrorMessage@4() : Text;
    VAR
      JobQueueLogEntry@1000 : Record 474;
    BEGIN
      JobQueueLogEntry.SETRANGE(ID,"Job Queue Entry ID");
      IF NOT JobQueueLogEntry.FINDFIRST THEN
        EXIT;

      EXIT(JobQueueLogEntry.GetErrorMessage);
    END;

    PROCEDURE NewFailedFromQuote@5(SalesHeader@1000 : Record 36) : Boolean;
    BEGIN
      SetHistoryForDocumentAsNotified(SalesHeader."Document Type",SalesHeader."No.",FALSE);

      "Document Type" := "Document Type"::Quote;
      "Document No." := SalesHeader."No.";
      Posted := FALSE;
      "Created Date-Time" := CURRENTDATETIME;
      "Source Type" := "Source Type"::Customer;
      "Source No." := SalesHeader."Bill-to Customer No.";
      VALIDATE("Job Last Status","Job Last Status"::Error);

      EXIT(INSERT(TRUE));
    END;

    PROCEDURE NewFailedFromPostedinvoice@6(SalesInvoiceHeader@1000 : Record 112) : Boolean;
    BEGIN
      SetHistoryForDocumentAsNotified("Document Type"::Invoice,SalesInvoiceHeader."No.",TRUE);

      "Document Type" := "Document Type"::Invoice;
      "Document No." := SalesInvoiceHeader."No.";
      Posted := TRUE;
      "Created Date-Time" := CURRENTDATETIME;
      "Source Type" := "Source Type"::Customer;
      "Source No." := SalesInvoiceHeader."Bill-to Customer No.";
      VALIDATE("Job Last Status","Job Last Status"::Error);

      EXIT(INSERT(TRUE));
    END;

    LOCAL PROCEDURE SetHistoryForDocumentAsNotified@7(DocumentType@1000 : Integer;DocumentNo@1001 : Code[20];IsPosted@1002 : Boolean);
    VAR
      O365DocumentSentHistory@1003 : Record 2158;
    BEGIN
      O365DocumentSentHistory.SETRANGE("Document Type",DocumentType);
      O365DocumentSentHistory.SETRANGE("Document No.",DocumentNo);
      O365DocumentSentHistory.SETRANGE(Posted,IsPosted);

      O365DocumentSentHistory.MODIFYALL(Notified,TRUE);
      O365DocumentSentHistory.MODIFYALL(NotificationCleared,TRUE);
    END;

    BEGIN
    END.
  }
}

