OBJECT Table 7824 MS-QBO Setup
{
  OBJECT-PROPERTIES
  {
    Date=28.05.17;
    Time=12:00:00;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=MS-QBO Setup;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Realm Id            ;Text250       ;CaptionML=ENU=Realm Id }
    { 3   ;   ;Token Key           ;Text250       ;CaptionML=ENU=Token Key }
    { 4   ;   ;Token Secret        ;Text250       ;CaptionML=ENU=Token Secret }
    { 5   ;   ;Enabled             ;Boolean       ;OnValidate=VAR
                                                                MSQBOSynchronizationError@1004 : Record 7825;
                                                                WebhooksAdapterMgt@1000 : Codeunit 2201;
                                                                WebhooksAdapterUri@1002 : Text[250];
                                                              BEGIN
                                                                IF NOT Enabled THEN BEGIN
                                                                  WebhooksAdapterUri := COPYSTR(WebhooksAdapterMgt.GetWebhooksAdapterUri(FALSE),1,250);
                                                                  IF WebhooksAdapterUri = '' THEN BEGIN
                                                                    MSQBOSynchronizationError.CreateErrorLog(KeyvaultAccessFailedErr);
                                                                    EXIT;
                                                                  END ;

                                                                  WebhooksAdapterMgt.DeleteWebhookSubscription(WebhooksAdapterUri);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Enabled }
    { 6   ;   ;Default Tax Code    ;Text250       ;CaptionML=ENU=Default Tax Code }
    { 7   ;   ;Default Country     ;Code10        ;OnValidate=BEGIN
                                                                CASE "Default Country" OF
                                                                  'CA':
                                                                    VALIDATE("Default Country As Option","Default Country As Option"::Canada);
                                                                  'GB':
                                                                    VALIDATE("Default Country As Option","Default Country As Option"::UK);
                                                                  'US':
                                                                    VALIDATE("Default Country As Option","Default Country As Option"::USA);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Default Country }
    { 8   ;   ;Default Country As Option;Option   ;CaptionML=ENU=Default Country As Option;
                                                   OptionCaptionML=[@@@={Locked};
                                                                    ENU=Unknown,Canada,UK,USA];
                                                   OptionString=Unknown,Canada,UK,USA }
    { 9   ;   ;Default Tax Rate    ;Text250       ;CaptionML=ENU=Default Tax Rate }
    { 10  ;   ;Default Discount Account Id;Text250;CaptionML=ENU=Default Discount Account Id }
    { 11  ;   ;Default Discount Account Code;Text250;
                                                   CaptionML=ENU=Default Discount Account Code }
    { 12  ;   ;Target Application  ;Option        ;CaptionML=ENU=Target Application;
                                                   OptionCaptionML=ENU=InvoicingApp,BusinessCenter;
                                                   OptionString=InvoicingApp,BusinessCenter }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      KeyvaultAccessFailedErr@1000 : TextConst 'ENU=Can''t share data right now. The problem is on our end. Please try again later.';

    PROCEDURE InitializeSetup@2(TokenKey@1001 : Text[250];TokenSecret@1002 : Text[250];RealmId@1003 : Text[250];TargetApplication@1008 : 'InvoicingApp,BusinessCenter');
    VAR
      ExtTxtIDIntegrationRecord@1004 : Record 5377;
      MSQBOCustomer@1005 : Record 7820;
      MSQBOItem@1006 : Record 7821;
      MSQBOInvoice@1007 : Record 7822;
      FirstInsertion@1000 : Boolean;
    BEGIN
      IF NOT GET THEN BEGIN
        INIT;
        INSERT;
        FirstInsertion := TRUE;
      END;
      IF ("Realm Id" <> RealmId) AND NOT FirstInsertion THEN BEGIN
        ExtTxtIDIntegrationRecord.DELETEALL;
        MSQBOCustomer.DELETEALL;
        MSQBOItem.DELETEALL;
        MSQBOInvoice.DELETEALL;
      END;
      "Realm Id" := RealmId;
      "Token Key" := TokenKey;
      "Token Secret" := TokenSecret;
      "Target Application" := TargetApplication;
      Enabled := FALSE;
      MODIFY;
    END;

    PROCEDURE SynchronizationIsSetUp@3() : Boolean;
    BEGIN
      IF NOT GET THEN
        EXIT(FALSE);

      EXIT(("Realm Id" <> '') AND ("Token Key" <> '') AND ("Token Secret" <> '') AND Enabled);
    END;

    PROCEDURE SetDefaultCountry@1(MSQBOTableMgt@1000 : Codeunit 7820);
    VAR
      JSONManagement@1004 : Codeunit 5459;
      CompanyInfoJToken@1003 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JArray";
      CompanyInfoJObject@1002 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";
      Value@1001 : Variant;
    BEGIN
      MSQBOTableMgt.GetEntity("Realm Id",'CompanyInfo',CompanyInfoJToken);

      CompanyInfoJObject := CompanyInfoJToken.Root;
      IF JSONManagement.GetPropertyValueFromJObjectByPath(CompanyInfoJObject,'CompanyInfo.Country',Value)
      THEN BEGIN
        VALIDATE("Default Country",Value);
        MODIFY(TRUE);
      END;
    END;

    BEGIN
    END.
  }
}

