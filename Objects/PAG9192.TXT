OBJECT Page 9192 Company Creation Wizard
{
  OBJECT-PROPERTIES
  {
    Date=28.05.17;
    Time=12:00:00;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create New Company;
    PageType=NavigatePage;
    OnInit=BEGIN
             LoadTopBanners;
           END;

    OnOpenPage=BEGIN
                 Step := Step::Start;
                 NewCompanyData := NewCompanyData::"Standard Data";
                 UpdateDataDescription;
                 EnableControls;
               END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::OK THEN
                         IF NOT CompanyCreated THEN
                           IF NOT CONFIRM(SetupNotCompletedQst,FALSE) THEN
                             ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 2       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 3       ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=BackActionEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                               END;
                                }
      { 4       ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NextActionEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextStep(FALSE);
                               END;
                                }
      { 5       ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FinishActionEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 6   ;1   ;Group     ;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 7   ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 8   ;1   ;Group     ;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 9   ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 10  ;1   ;Group     ;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 11  ;2   ;Group     ;
                CaptionML=ENU=Welcome to assisted setup for creating a company;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 12  ;3   ;Group     ;
                Visible=FirstStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=This guide will help you create a new company. }

    { 24  ;2   ;Group     ;
                CaptionML=ENU=Let's go!;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next to get started. }

    { 13  ;1   ;Group     ;
                Visible=CreationStepVisible;
                GroupType=Group }

    { 14  ;2   ;Group     ;
                CaptionML=ENU=Specify some basic information;
                Visible=CreationStepVisible;
                GroupType=Group }

    { 20  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=Enter a name for the company. }

    { 21  ;4   ;Field     ;
                Name=CompanyName;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewCompanyName;
                OnValidate=VAR
                             Company@1000 : Record 2000000006;
                           BEGIN
                             IF Company.GET(NewCompanyName) THEN
                               ERROR(CompanyAlreadyExistsErr);
                           END;

                ShowMandatory=TRUE;
                ShowCaption=No }

    { 16  ;3   ;Group     ;
                CaptionML=ENU=Select the data and setup to get started.;
                GroupType=Group }

    { 15  ;4   ;Field     ;
                Name=CompanyData;
                OptionCaptionML=ENU=Evaluation Data (Includes Cronus Company Sample Data),Standard Data (Recommended),None (For Advanced Users Only);
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewCompanyData;
                OnValidate=BEGIN
                             UpdateDataDescription;
                           END;

                ShowCaption=No }

    { 23  ;4   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewCompanyDataDescription;
                Editable=FALSE;
                MultiLine=Yes;
                ShowCaption=No }

    { 17  ;1   ;Group     ;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 18  ;2   ;Group     ;
                CaptionML=ENU=That's it!;
                GroupType=Group }

    { 19  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Finish to create the company. This can take a few minutes to complete. }

    { 22  ;3   ;Group     ;
                Visible=ConfigurationPackageExists;
                GroupType=Group;
                InstructionalTextML=ENU=The company is created and included in the companies list, but before you use it we need time to set up some data and settings for you. }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1000 : Record 9400;
      MediaRepositoryDone@1001 : Record 9400;
      MediaResourcesStandard@1030 : Record 2000000182;
      MediaResourcesDone@1029 : Record 2000000182;
      AssistedCompanySetup@1021 : Codeunit 1800;
      Step@1002 : 'Start,Creation,Finish';
      TopBannerVisible@1003 : Boolean;
      FirstStepVisible@1004 : Boolean;
      CreationStepVisible@1005 : Boolean;
      FinalStepVisible@1006 : Boolean;
      FinishActionEnabled@1007 : Boolean;
      BackActionEnabled@1008 : Boolean;
      NextActionEnabled@1009 : Boolean;
      SetupNotCompletedQst@1013 : TextConst 'ENU=The company has not yet been created.\\Are you sure that you want to exit?';
      ConfigurationPackageExists@1022 : Boolean;
      NewCompanyName@1010 : Text[30];
      NewCompanyData@1011 : 'Evaluation Data,Standard Data,None';
      CompanyAlreadyExistsErr@1014 : TextConst 'ENU=A company with that name already exists. Try a different name.';
      NewCompanyDataDescription@1012 : Text;
      CompanyCreated@1015 : Boolean;
      SpecifyCompanyNameErr@1016 : TextConst 'ENU=To continue, you must specify a name for the company.';
      CreatingCompanyMsg@1017 : TextConst 'ENU=Creating company...';
      NoConfigurationPackageFileDefinedMsg@1020 : TextConst 'ENU=No configuration package file is defined for this company type. An empty company will be created.';
      NoPermissionsErr@1028 : TextConst 'ENU=You do not have permissions to create a new company. Contact your system administrator.';
      EvaluationDataTxt@1023 : TextConst 'ENU=\Just want to try it out?\\Create a company with everything you need to evaluate the product. For example, sample invoices and ledger entries let you view charts and reports.';
      StandardDataTxt@1024 : TextConst 'ENU=\Thinking about going into production?\\Create a company with data and setups like number series, a chart of accounts, and payment methods ready for use. Set up your own items and customers, and start posting right-away.';
      NoDataTxt@1025 : TextConst 'ENU=\Want to set things up yourself?\\Create a company that does not contain data, and is not already set up for use. For example, select this option when you want to use your own data, and set things up yourself.';
      TrialPeriodTxt@1026 : TextConst 'ENU=\\You will be able to use this company for a 30-day trial period.';
      EvalPeriodTxt@1027 : TextConst 'ENU="\\You will be able to use the company to try out the product for as long as you want. "';

    LOCAL PROCEDURE EnableControls@1();
    BEGIN
      ResetControls;

      CASE Step OF
        Step::Start:
          ShowStartStep;
        Step::Creation:
          ShowCreationStep;
        Step::Finish:
          ShowFinalStep;
      END;
    END;

    LOCAL PROCEDURE FinishAction@2();
    BEGIN
      CreateNewCompany;
      SetUpNewCompany;
      CompanyCreated := TRUE;
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@3(Backwards@1000 : Boolean);
    BEGIN
      IF (Step = Step::Creation) AND NOT Backwards THEN
        IF NewCompanyName = '' THEN
          ERROR(SpecifyCompanyNameErr);
      IF (Step = Step::Creation) AND NOT Backwards THEN
        ValidateCompanyType;

      IF Backwards THEN
        Step := Step - 1
      ELSE
        Step := Step + 1;

      EnableControls;
    END;

    LOCAL PROCEDURE ShowStartStep@4();
    BEGIN
      FirstStepVisible := TRUE;

      FinishActionEnabled := FALSE;
      BackActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowCreationStep@5();
    BEGIN
      CreationStepVisible := TRUE;

      FinishActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowFinalStep@6();
    BEGIN
      FinalStepVisible := TRUE;
      NextActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ResetControls@7();
    BEGIN
      FinishActionEnabled := TRUE;
      BackActionEnabled := TRUE;
      NextActionEnabled := TRUE;

      FirstStepVisible := FALSE;
      CreationStepVisible := FALSE;
      FinalStepVisible := FALSE;
    END;

    LOCAL PROCEDURE LoadTopBanners@8();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE))
      THEN
        IF MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") AND
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        THEN
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE CreateNewCompany@10();
    VAR
      Company@1001 : Record 2000000006;
      GeneralLedgerSetup@1002 : Record 98;
      Window@1000 : Dialog;
    BEGIN
      Window.OPEN(CreatingCompanyMsg);

      Company.INIT;
      Company.Name := NewCompanyName;
      Company.INSERT;

      IF NOT GeneralLedgerSetup.CHANGECOMPANY(NewCompanyName) THEN
        ERROR(NoPermissionsErr);
      IF NOT GeneralLedgerSetup.WRITEPERMISSION THEN
        ERROR(NoPermissionsErr);

      COMMIT;

      Window.CLOSE;
    END;

    LOCAL PROCEDURE SetUpNewCompany@9();
    VAR
      Company@1001 : Record 2000000006;
      ConfigurationPackageFile@1005 : Record 2000000170;
      AssistedCompanySetupStatus@1004 : Record 1802;
    BEGIN
      IF NewCompanyData = NewCompanyData::None THEN
        EXIT;

      IF NOT AssistedCompanySetup.FindConfigurationPackageFile(ConfigurationPackageFile,NewCompanyData) THEN
        EXIT;

      AssistedCompanySetupStatus.SetEnabled(NewCompanyName,NewCompanyData = NewCompanyData::"Standard Data",FALSE);

      Company.GET(NewCompanyName);
      Company."Evaluation Company" := NewCompanyData = NewCompanyData::"Evaluation Data";
      Company.MODIFY;
      SetApplicationArea;

      AssistedCompanySetup.ScheduleConfigPackageImport(ConfigurationPackageFile,NewCompanyName);
    END;

    LOCAL PROCEDURE SetApplicationArea@12();
    VAR
      ApplicationAreaSetup@1000 : Record 9178;
      ExperienceTier@1001 : ' ,,,,,Basic,,,,,,,,,,Suite,,,,,Custom';
    BEGIN
      ApplicationAreaSetup.SETRANGE("Company Name",NewCompanyName);
      ApplicationAreaSetup.DELETEALL;

      ApplicationAreaSetup.INIT;
      ApplicationAreaSetup."Company Name" := NewCompanyName;

      IF NewCompanyData = NewCompanyData::"Standard Data" THEN
        ApplicationAreaSetup.SetExperienceTier(ExperienceTier::Suite)
      ELSE
        ApplicationAreaSetup.SetExperienceTier(ExperienceTier::Basic);

      ApplicationAreaSetup.INSERT;
    END;

    LOCAL PROCEDURE ValidateCompanyType@11();
    BEGIN
      ConfigurationPackageExists := FALSE;
      IF NewCompanyData = NewCompanyData::None THEN
        EXIT;
      ConfigurationPackageExists := AssistedCompanySetup.ExistsConfigurationPackageFile(NewCompanyData);
      IF NOT ConfigurationPackageExists THEN
        MESSAGE(NoConfigurationPackageFileDefinedMsg)
    END;

    LOCAL PROCEDURE UpdateDataDescription@17();
    VAR
      TenantLicenseState@1000 : Record 2000000189;
    BEGIN
      CASE NewCompanyData OF
        NewCompanyData::"Evaluation Data":
          NewCompanyDataDescription := EvaluationDataTxt;
        NewCompanyData::"Standard Data":
          NewCompanyDataDescription := StandardDataTxt;
        NewCompanyData::None:
          NewCompanyDataDescription := NoDataTxt;
      END;

      IF NOT TenantLicenseState.FINDLAST THEN
        EXIT;
      IF TenantLicenseState.State = TenantLicenseState.State::Paid THEN
        EXIT;

      CASE NewCompanyData OF
        NewCompanyData::"Evaluation Data":
          NewCompanyDataDescription += EvalPeriodTxt;
        NewCompanyData::"Standard Data",
        NewCompanyData::None:
          NewCompanyDataDescription += TrialPeriodTxt;
      END;
    END;

    BEGIN
    END.
  }
}

