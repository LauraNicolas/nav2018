OBJECT Page 9037 Accountant Activities
{
  OBJECT-PROPERTIES
  {
    Date=28.05.17;
    Time=12:00:00;
    Version List=NAVW110.0;
  }
  PROPERTIES
  {
    CaptionML=ENU=Activities;
    SourceTable=Table9054;
    PageType=CardPart;
    RefreshOnActivate=Yes;
    OnInit=BEGIN
             IF UserTours.IsAvailable AND O365GettingStartedMgt.AreUserToursEnabled THEN
               O365GettingStartedMgt.UpdateGettingStartedVisible(TileGettingStartedVisible,ReplayGettingStartedVisible);
           END;

    OnOpenPage=VAR
                 RoleCenterNotificationMgt@1000 : Codeunit 1430;
               BEGIN
                 RESET;
                 IF NOT GET THEN BEGIN
                   INIT;
                   INSERT;
                 END;

                 SETFILTER("Due Date Filter",'<=%1',WORKDATE);
                 SETFILTER("Overdue Date Filter",'<%1',WORKDATE);
                 SETFILTER("Due Next Week Filter",'%1..%2',CALCDATE('<1D>',WORKDATE),CALCDATE('<1W>',WORKDATE));

                 ShowProductVideosActivities := TRUE;

                 RoleCenterNotificationMgt.ShowNotifications;

                 IF PageNotifier.IsAvailable THEN BEGIN
                   PageNotifier := PageNotifier.Create;
                   PageNotifier.NotifyPageReady;
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       CalculateCueFieldValues;
                       SetActivityGroupVisibility;
                     END;

    OnAfterGetCurrRecord=VAR
                           RoleCenterNotificationMgt@1000 : Codeunit 1430;
                         BEGIN
                           IF UserTours.IsAvailable AND O365GettingStartedMgt.AreUserToursEnabled THEN
                             O365GettingStartedMgt.UpdateGettingStartedVisible(TileGettingStartedVisible,ReplayGettingStartedVisible);
                           RoleCenterNotificationMgt.HideEvaluationNotificationAfterStartingTrial;
                         END;

    ActionList=ACTIONS
    {
      { 22      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 24      ;1   ;Action    ;
                      Name=Set Up Cues;
                      CaptionML=ENU=Set Up Cues;
                      ToolTipML=ENU=Set up the cues (status tiles) related to the role.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Setup;
                      OnAction=VAR
                                 CueSetup@1001 : Codeunit 9701;
                                 CueRecordRef@1000 : RecordRef;
                               BEGIN
                                 CueRecordRef.GETTABLE(Rec);
                                 CueSetup.OpenCustomizePageForCurrentUser(CueRecordRef.NUMBER);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 6   ;1   ;Group     ;
                CaptionML=ENU=Payments;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 1       ;0   ;Action    ;
                                  CaptionML=ENU=Edit Cash Receipt Journal;
                                  ToolTipML=ENU=Register received payments in a cash receipt journal that may already contain journal lines.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page 255 }
                  { 3       ;0   ;Action    ;
                                  CaptionML=ENU=New Sales Credit Memo;
                                  ToolTipML=ENU=Process a return or refund by creating a new sales credit memo.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page 44;
                                  RunPageMode=Create }
                  { 4       ;0   ;Action    ;
                                  CaptionML=ENU=Edit Payment Journal;
                                  ToolTipML=ENU=Pay your vendors by filling the payment journal automatically according to payments due, and potentially export all payment to your bank for automatic processing.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page 256 }
                  { 5       ;0   ;Action    ;
                                  CaptionML=ENU=New Purchase Credit Memo;
                                  ToolTipML=ENU=Create a new purchase credit memo so you can manage returned items to a vendor.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page 52;
                                  RunPageMode=Create }
                }
                 }

    { 7   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of purchase invoices where your payment is late.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Overdue Purchase Documents";
                DrillDownPageID=Vendor Ledger Entries }

    { 9   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of purchase invoices that are due for payment today.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Purchase Documents Due Today";
                DrillDownPageID=Vendor Ledger Entries }

    { 16  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of payments to vendors that are due next week.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Purch. Invoices Due Next Week" }

    { 17  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of purchase discounts that are available next week, for example, because the discount expires after next week.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Purchase Discounts Next Week" }

    { 19  ;1   ;Group     ;
                CaptionML=ENU=Document Approvals;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 25      ;0   ;Action    ;
                                  CaptionML=ENU=Create Reminders...;
                                  ToolTipML=ENU=Remind your customers of late payments.;
                                  RunObject=Report 188;
                                  Image=CreateReminders }
                  { 26      ;0   ;Action    ;
                                  CaptionML=ENU=Create Finance Charge Memos...;
                                  ToolTipML=ENU=Issue finance charge memos to your customers as a consequence of late payment.;
                                  RunObject=Report 191;
                                  Image=CreateFinanceChargememo }
                }
                 }

    { 23  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of purchase orders that are pending approval.;
                ApplicationArea=#Suite;
                SourceExpr="POs Pending Approval";
                DrillDownPageID=Purchase Order List }

    { 20  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of sales orders that are pending approval.;
                ApplicationArea=#Suite;
                SourceExpr="SOs Pending Approval";
                DrillDownPageID=Sales Order List }

    { 14  ;1   ;Group     ;
                CaptionML=ENU=Financials;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 15      ;    ;Action    ;
                                  CaptionML=ENU=New Payment Reconciliation Journal;
                                  ToolTipML=ENU=Reconcile unpaid documents automatically with their related bank transactions by importing bank a bank statement feed or file.;
                                  ApplicationArea=#Basic,#Suite;
                                  OnAction=VAR
                                             BankAccReconciliation@1000 : Record 273;
                                           BEGIN
                                             BankAccReconciliation.OpenNewWorksheet
                                           END;
                                            }
                }
                 }

    { 29  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the sum of the accounts that have the cash account category.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Cash Accounts Balance";
                Image=Cash;
                DrillDownPageID=Chart of Accounts;
                OnDrillDown=VAR
                              ActivitiesMgt@1000 : Codeunit 1311;
                            BEGIN
                              ActivitiesMgt.DrillDownCalcCashAccountsBalances;
                            END;
                             }

    { 11  ;2   ;Field     ;
                CaptionML=ENU=Payment Reconciliation Journals;
                ToolTipML=ENU=Specifies journals where you can reconcile unpaid documents automatically with their related bank transactions by importing bank a bank statement feed or file.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Non-Applied Payments";
                Image=Cash;
                DrillDownPageID=Pmt. Reconciliation Journals }

    { 2   ;1   ;Group     ;
                CaptionML=ENU=Incoming Documents;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 12      ;    ;Action    ;
                                  Name=CheckForOCR;
                                  CaptionML=ENU=Receive from OCR Service;
                                  ToolTipML=ENU=Process new incoming electronic documents that have been created by the OCR service and that you can convert to, for example, purchase invoices in Dynamics NAV.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Codeunit 881;
                                  RunPageMode=View }
                }
                 }

    { 8   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of new incoming documents in the company. The documents are filtered by today's date.;
                SourceExpr="New Incoming Documents";
                DrillDownPageID=Incoming Documents }

    { 10  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of approved incoming documents in the company. The documents are filtered by today's date.;
                SourceExpr="Approved Incoming Documents";
                DrillDownPageID=Incoming Documents }

    { 13  ;2   ;Field     ;
                ToolTipML=ENU=Specifies that incoming document records that have been created by the OCR service.;
                SourceExpr="OCR Completed";
                DrillDownPageID=Incoming Documents }

    { 18  ;1   ;Group     ;
                CaptionML=ENU=New Journal Entries;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 21      ;    ;Action    ;
                                  CaptionML=ENU=New G/L Journal Entry;
                                  ToolTipML=ENU=Prepare to post any transaction to the company books.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page 39;
                                  Image=TileNew }
                  { 28      ;    ;Action    ;
                                  CaptionML=ENU=New Payment Journal Entry;
                                  ToolTipML=ENU=Pay your vendors by filling the payment journal automatically according to payments due, and potentially export all payment to your bank for automatic processing.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page 256;
                                  Image=TileNew }
                }
                 }

    { 33  ;1   ;Group     ;
                CaptionML=ENU=Product Videos;
                Visible=ShowProductVideosActivities;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 32      ;    ;Action    ;
                                  CaptionML=ENU=Product Videos;
                                  ToolTipML=ENU=Open a list of videos that showcase some of the product capabilities.;
                                  ApplicationArea=#Basic,#Suite;
                                  RunObject=Page 1470;
                                  Image=TileVideo }
                }
                 }

    { 31  ;1   ;Group     ;
                CaptionML=ENU=Get started;
                Visible=ReplayGettingStartedVisible;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 27      ;    ;Action    ;
                                  Name=ShowStartInMyCompany;
                                  CaptionML=ENU=Try with my own data;
                                  ToolTipML=ENU=Set up My Company with the settings you choose. We'll show you how, it's easy.;
                                  ApplicationArea=#Basic,#Suite;
                                  Visible=FALSE;
                                  Image=TileSettings;
                                  OnAction=BEGIN
                                             IF UserTours.IsAvailable AND O365GettingStartedMgt.AreUserToursEnabled THEN
                                               UserTours.StartUserTour(O365GettingStartedMgt.GetChangeCompanyTourID);
                                           END;
                                            }
                  { 30      ;    ;Action    ;
                                  Name=ReplayGettingStarted;
                                  CaptionML=ENU=Replay Getting Started;
                                  ToolTipML=ENU=Show the Getting Started guide again.;
                                  ApplicationArea=#Basic,#Suite;
                                  Image=TileVideo;
                                  OnAction=VAR
                                             O365GettingStarted@1000 : Record 1309;
                                           BEGIN
                                             IF O365GettingStarted.GET(USERID,CURRENTCLIENTTYPE) THEN BEGIN
                                               O365GettingStarted."Tour in Progress" := FALSE;
                                               O365GettingStarted."Current Page" := 1;
                                               O365GettingStarted.MODIFY;
                                               COMMIT;
                                             END;

                                             O365GettingStartedMgt.LaunchWizard(TRUE,FALSE);
                                           END;
                                            }
                }
                 }

  }
  CODE
  {
    VAR
      O365GettingStartedMgt@1004 : Codeunit 1309;
      PageNotifier@1000 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=10.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.PageNotifier" WITHEVENTS RUNONCLIENT;
      UserTours@1003 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=10.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.UserTours" WITHEVENTS RUNONCLIENT;
      ShowProductVideosActivities@1005 : Boolean;
      TileGettingStartedVisible@1002 : Boolean;
      HideNpsDialog@1006 : Boolean;
      ReplayGettingStartedVisible@1001 : Boolean;
      WhatIsNewTourVisible@1007 : Boolean;

    LOCAL PROCEDURE CalculateCueFieldValues@1();
    VAR
      ActivitiesMgt@1000 : Codeunit 1311;
    BEGIN
      IF FIELDACTIVE("Cash Accounts Balance") THEN
        "Cash Accounts Balance" := ActivitiesMgt.CalcCashAccountsBalances;
    END;

    LOCAL PROCEDURE SetActivityGroupVisibility@12();
    VAR
      ProductVideosActivitiesMgt@1000 : Codeunit 1345;
    BEGIN
      ShowProductVideosActivities := ProductVideosActivitiesMgt.IsActivitiesVisible;
    END;

    LOCAL PROCEDURE StartWhatIsNewTour@45(hasTourCompleted@1000 : Boolean);
    VAR
      O365UserTours@1001 : Record 1314;
      TourID@1003 : Integer;
    BEGIN
      TourID := O365GettingStartedMgt.GetWhatIsNewTourID;

      IF O365UserTours.AlreadyCompleted(TourID) THEN
        EXIT;

      IF NOT hasTourCompleted THEN BEGIN
        UserTours.StartUserTour(TourID);
        WhatIsNewTourVisible := TRUE;
        EXIT;
      END;

      IF WhatIsNewTourVisible THEN BEGIN
        O365UserTours.MarkAsCompleted(TourID);
        WhatIsNewTourVisible := FALSE;
      END;
    END;

    EVENT PageNotifier@1000::PageReady@9();
    VAR
      NetPromoterScoreMgt@1000 : Codeunit 1432;
    BEGIN
      NetPromoterScoreMgt.ShowNpsDialog;
    END;

    EVENT UserTours@1003::ShowTourWizard@15(hasTourCompleted@1000 : Boolean);
    VAR
      NetPromoterScoreMgt@1001 : Codeunit 1432;
    BEGIN
      IF O365GettingStartedMgt.IsGettingStartedSupported THEN
        IF O365GettingStartedMgt.LaunchWizard(FALSE,hasTourCompleted) THEN
          EXIT;

      IF (NOT hasTourCompleted) AND (NOT HideNpsDialog) THEN
        IF NetPromoterScoreMgt.ShowNpsDialog THEN BEGIN
          HideNpsDialog := TRUE;
          EXIT;
        END;

      StartWhatIsNewTour(hasTourCompleted);
    END;

    EVENT UserTours@1003::IsTourInProgressResultReady@16(isInProgress@1000 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

